/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef SquareService_H
#define SquareService_H

#include <thrift/TDispatchProcessor.h>
#include <thrift/async/TConcurrentClientSyncInfo.h>
#include "line_types.h"



#ifdef _MSC_VER
  #pragma warning( push )
  #pragma warning (disable : 4250 ) //inheriting methods via dominance 
#endif

class SquareServiceIf {
 public:
  virtual ~SquareServiceIf() {}
  virtual void getSquareChatAnnouncements(GetSquareChatAnnouncementsResponse& _return, const GetSquareChatAnnouncementsRequest& request) = 0;
  virtual void deleteSquareChatAnnouncement(DeleteSquareChatAnnouncementResponse& _return, const DeleteSquareChatAnnouncementRequest& request) = 0;
  virtual void createSquareChatAnnouncement(CreateSquareChatAnnouncementResponse& _return, const CreateSquareChatAnnouncementRequest& request) = 0;
  virtual void getNoteStatus(GetNoteStatusResponse& _return, const GetNoteStatusRequest& request) = 0;
  virtual void getSquareStatus(GetSquareStatusResponse& _return, const GetSquareStatusRequest& request) = 0;
  virtual void reportSquareMember(ReportSquareMemberResponse& _return, const ReportSquareMemberRequest& request) = 0;
  virtual void reportSquareMessage(ReportSquareMessageResponse& _return, const ReportSquareMessageRequest& request) = 0;
  virtual void reportSquareChat(ReportSquareChatResponse& _return, const ReportSquareChatRequest& request) = 0;
  virtual void reportSquare(ReportSquareResponse& _return, const ReportSquareRequest& request) = 0;
  virtual void updateSquareMemberRelation(UpdateSquareMemberRelationResponse& _return, const UpdateSquareMemberRelationRequest& request) = 0;
  virtual void updateSquareAuthority(UpdateSquareAuthorityResponse& _return, const UpdateSquareAuthorityRequest& request) = 0;
  virtual void updateSquareChatMember(UpdateSquareChatMemberResponse& _return, const UpdateSquareChatMemberRequest& request) = 0;
  virtual void updateSquareChat(UpdateSquareChatResponse& _return, const UpdateSquareChatRequest& request) = 0;
  virtual void refreshSubscriptions(RefreshSubscriptionsResponse& _return, const RefreshSubscriptionsRequest& request) = 0;
  virtual void removeSubscriptions(RemoveSubscriptionsResponse& _return, const RemoveSubscriptionsRequest& request) = 0;
  virtual void rejectSquareMembers(RejectSquareMembersResponse& _return, const RejectSquareMembersRequest& request) = 0;
  virtual void updateSquareMembers(UpdateSquareMembersResponse& _return, const UpdateSquareMembersRequest& request) = 0;
  virtual void updateSquareMember(UpdateSquareMemberResponse& _return, const UpdateSquareMemberRequest& request) = 0;
  virtual void updateSquareFeatureSet(UpdateSquareFeatureSetResponse& _return, const UpdateSquareFeatureSetRequest& request) = 0;
  virtual void getSquareFeatureSet(GetSquareFeatureSetResponse& _return, const GetSquareFeatureSetRequest& request) = 0;
  virtual void searchSquares(SearchSquaresResponse& _return, const SearchSquaresRequest& request) = 0;
  virtual void updateSquare(UpdateSquareResponse& _return, const UpdateSquareRequest& request) = 0;
  virtual void getCategories(GetSquareCategoriesResponse& _return, const GetSquareCategoriesRequest& request) = 0;
  virtual void searchSquareMembers(SearchSquareMembersResponse& _return, const SearchSquareMembersRequest& request) = 0;
  virtual void fetchSquareChatEvents(FetchSquareChatEventsResponse& _return, const FetchSquareChatEventsRequest& request) = 0;
  virtual void fetchMyEvents(FetchMyEventsResponse& _return, const FetchMyEventsRequest& request) = 0;
  virtual void markAsRead(MarkAsReadResponse& _return, const MarkAsReadRequest& request) = 0;
  virtual void getSquareAuthority(GetSquareAuthorityResponse& _return, const GetSquareAuthorityRequest& request) = 0;
  virtual void sendMessage(SendMessageResponse& _return, const SendMessageRequest& request) = 0;
  virtual void leaveSquare(LeaveSquareResponse& _return, const LeaveSquareRequest& request) = 0;
  virtual void leaveSquareChat(LeaveSquareChatResponse& _return, const LeaveSquareChatRequest& request) = 0;
  virtual void joinSquareChat(JoinSquareChatResponse& _return, const JoinSquareChatRequest& request) = 0;
  virtual void joinSquare(JoinSquareResponse& _return, const JoinSquareRequest& request) = 0;
  virtual void inviteToSquare(InviteToSquareResponse& _return, const InviteToSquareRequest& request) = 0;
  virtual void inviteToSquareChat(InviteToSquareChatResponse& _return, const InviteToSquareChatRequest& request) = 0;
  virtual void getSquareMember(GetSquareMemberResponse& _return, const GetSquareMemberRequest& request) = 0;
  virtual void getSquareMembers(GetSquareMembersResponse& _return, const GetSquareMembersRequest& request) = 0;
  virtual void getSquareMemberRelation(GetSquareMemberRelationResponse& _return, const GetSquareMemberRelationRequest& request) = 0;
  virtual void getSquareMemberRelations(GetSquareMemberRelationsResponse& _return, const GetSquareMemberRelationsRequest& request) = 0;
  virtual void getSquareChatMembers(GetSquareChatMembersResponse& _return, const GetSquareChatMembersRequest& request) = 0;
  virtual void getSquareChatStatus(GetSquareChatStatusResponse& _return, const GetSquareChatStatusRequest& request) = 0;
  virtual void getSquareChat(GetSquareChatResponse& _return, const GetSquareChatRequest& request) = 0;
  virtual void getSquare(GetSquareResponse& _return, const GetSquareRequest& request) = 0;
  virtual void getJoinedSquares(GetJoinedSquaresResponse& _return, const GetJoinedSquaresRequest& request) = 0;
  virtual void getJoinedSquareChats(GetJoinedSquareChatsResponse& _return, const GetJoinedSquareChatsRequest& request) = 0;
  virtual void approveSquareMembers(ApproveSquareMembersResponse& _return, const ApproveSquareMembersRequest& request) = 0;
  virtual void createSquareChat(CreateSquareChatResponse& _return, const CreateSquareChatRequest& request) = 0;
  virtual void createSquare(CreateSquareResponse& _return, const CreateSquareRequest& request) = 0;
  virtual void deleteSquareChat(DeleteSquareChatResponse& _return, const DeleteSquareChatRequest& request) = 0;
  virtual void deleteSquare(DeleteSquareResponse& _return, const DeleteSquareRequest& request) = 0;
  virtual void destroyMessage(DestroyMessageResponse& _return, const DestroyMessageRequest& request) = 0;
  virtual void getJoinableSquareChats(GetJoinableSquareChatsResponse& _return, const GetJoinableSquareChatsRequest& request) = 0;
  virtual void getInvitationTicketUrl(GetInvitationTicketUrlResponse& _return, const GetInvitationTicketUrlRequest& request) = 0;
  virtual void findSquareByInvitationTicket(FindSquareByInvitationTicketResponse& _return, const FindSquareByInvitationTicketRequest& request) = 0;
};

class SquareServiceIfFactory {
 public:
  typedef SquareServiceIf Handler;

  virtual ~SquareServiceIfFactory() {}

  virtual SquareServiceIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo) = 0;
  virtual void releaseHandler(SquareServiceIf* /* handler */) = 0;
};

class SquareServiceIfSingletonFactory : virtual public SquareServiceIfFactory {
 public:
  SquareServiceIfSingletonFactory(const ::apache::thrift::stdcxx::shared_ptr<SquareServiceIf>& iface) : iface_(iface) {}
  virtual ~SquareServiceIfSingletonFactory() {}

  virtual SquareServiceIf* getHandler(const ::apache::thrift::TConnectionInfo&) {
    return iface_.get();
  }
  virtual void releaseHandler(SquareServiceIf* /* handler */) {}

 protected:
  ::apache::thrift::stdcxx::shared_ptr<SquareServiceIf> iface_;
};

class SquareServiceNull : virtual public SquareServiceIf {
 public:
  virtual ~SquareServiceNull() {}
  void getSquareChatAnnouncements(GetSquareChatAnnouncementsResponse& /* _return */, const GetSquareChatAnnouncementsRequest& /* request */) {
    return;
  }
  void deleteSquareChatAnnouncement(DeleteSquareChatAnnouncementResponse& /* _return */, const DeleteSquareChatAnnouncementRequest& /* request */) {
    return;
  }
  void createSquareChatAnnouncement(CreateSquareChatAnnouncementResponse& /* _return */, const CreateSquareChatAnnouncementRequest& /* request */) {
    return;
  }
  void getNoteStatus(GetNoteStatusResponse& /* _return */, const GetNoteStatusRequest& /* request */) {
    return;
  }
  void getSquareStatus(GetSquareStatusResponse& /* _return */, const GetSquareStatusRequest& /* request */) {
    return;
  }
  void reportSquareMember(ReportSquareMemberResponse& /* _return */, const ReportSquareMemberRequest& /* request */) {
    return;
  }
  void reportSquareMessage(ReportSquareMessageResponse& /* _return */, const ReportSquareMessageRequest& /* request */) {
    return;
  }
  void reportSquareChat(ReportSquareChatResponse& /* _return */, const ReportSquareChatRequest& /* request */) {
    return;
  }
  void reportSquare(ReportSquareResponse& /* _return */, const ReportSquareRequest& /* request */) {
    return;
  }
  void updateSquareMemberRelation(UpdateSquareMemberRelationResponse& /* _return */, const UpdateSquareMemberRelationRequest& /* request */) {
    return;
  }
  void updateSquareAuthority(UpdateSquareAuthorityResponse& /* _return */, const UpdateSquareAuthorityRequest& /* request */) {
    return;
  }
  void updateSquareChatMember(UpdateSquareChatMemberResponse& /* _return */, const UpdateSquareChatMemberRequest& /* request */) {
    return;
  }
  void updateSquareChat(UpdateSquareChatResponse& /* _return */, const UpdateSquareChatRequest& /* request */) {
    return;
  }
  void refreshSubscriptions(RefreshSubscriptionsResponse& /* _return */, const RefreshSubscriptionsRequest& /* request */) {
    return;
  }
  void removeSubscriptions(RemoveSubscriptionsResponse& /* _return */, const RemoveSubscriptionsRequest& /* request */) {
    return;
  }
  void rejectSquareMembers(RejectSquareMembersResponse& /* _return */, const RejectSquareMembersRequest& /* request */) {
    return;
  }
  void updateSquareMembers(UpdateSquareMembersResponse& /* _return */, const UpdateSquareMembersRequest& /* request */) {
    return;
  }
  void updateSquareMember(UpdateSquareMemberResponse& /* _return */, const UpdateSquareMemberRequest& /* request */) {
    return;
  }
  void updateSquareFeatureSet(UpdateSquareFeatureSetResponse& /* _return */, const UpdateSquareFeatureSetRequest& /* request */) {
    return;
  }
  void getSquareFeatureSet(GetSquareFeatureSetResponse& /* _return */, const GetSquareFeatureSetRequest& /* request */) {
    return;
  }
  void searchSquares(SearchSquaresResponse& /* _return */, const SearchSquaresRequest& /* request */) {
    return;
  }
  void updateSquare(UpdateSquareResponse& /* _return */, const UpdateSquareRequest& /* request */) {
    return;
  }
  void getCategories(GetSquareCategoriesResponse& /* _return */, const GetSquareCategoriesRequest& /* request */) {
    return;
  }
  void searchSquareMembers(SearchSquareMembersResponse& /* _return */, const SearchSquareMembersRequest& /* request */) {
    return;
  }
  void fetchSquareChatEvents(FetchSquareChatEventsResponse& /* _return */, const FetchSquareChatEventsRequest& /* request */) {
    return;
  }
  void fetchMyEvents(FetchMyEventsResponse& /* _return */, const FetchMyEventsRequest& /* request */) {
    return;
  }
  void markAsRead(MarkAsReadResponse& /* _return */, const MarkAsReadRequest& /* request */) {
    return;
  }
  void getSquareAuthority(GetSquareAuthorityResponse& /* _return */, const GetSquareAuthorityRequest& /* request */) {
    return;
  }
  void sendMessage(SendMessageResponse& /* _return */, const SendMessageRequest& /* request */) {
    return;
  }
  void leaveSquare(LeaveSquareResponse& /* _return */, const LeaveSquareRequest& /* request */) {
    return;
  }
  void leaveSquareChat(LeaveSquareChatResponse& /* _return */, const LeaveSquareChatRequest& /* request */) {
    return;
  }
  void joinSquareChat(JoinSquareChatResponse& /* _return */, const JoinSquareChatRequest& /* request */) {
    return;
  }
  void joinSquare(JoinSquareResponse& /* _return */, const JoinSquareRequest& /* request */) {
    return;
  }
  void inviteToSquare(InviteToSquareResponse& /* _return */, const InviteToSquareRequest& /* request */) {
    return;
  }
  void inviteToSquareChat(InviteToSquareChatResponse& /* _return */, const InviteToSquareChatRequest& /* request */) {
    return;
  }
  void getSquareMember(GetSquareMemberResponse& /* _return */, const GetSquareMemberRequest& /* request */) {
    return;
  }
  void getSquareMembers(GetSquareMembersResponse& /* _return */, const GetSquareMembersRequest& /* request */) {
    return;
  }
  void getSquareMemberRelation(GetSquareMemberRelationResponse& /* _return */, const GetSquareMemberRelationRequest& /* request */) {
    return;
  }
  void getSquareMemberRelations(GetSquareMemberRelationsResponse& /* _return */, const GetSquareMemberRelationsRequest& /* request */) {
    return;
  }
  void getSquareChatMembers(GetSquareChatMembersResponse& /* _return */, const GetSquareChatMembersRequest& /* request */) {
    return;
  }
  void getSquareChatStatus(GetSquareChatStatusResponse& /* _return */, const GetSquareChatStatusRequest& /* request */) {
    return;
  }
  void getSquareChat(GetSquareChatResponse& /* _return */, const GetSquareChatRequest& /* request */) {
    return;
  }
  void getSquare(GetSquareResponse& /* _return */, const GetSquareRequest& /* request */) {
    return;
  }
  void getJoinedSquares(GetJoinedSquaresResponse& /* _return */, const GetJoinedSquaresRequest& /* request */) {
    return;
  }
  void getJoinedSquareChats(GetJoinedSquareChatsResponse& /* _return */, const GetJoinedSquareChatsRequest& /* request */) {
    return;
  }
  void approveSquareMembers(ApproveSquareMembersResponse& /* _return */, const ApproveSquareMembersRequest& /* request */) {
    return;
  }
  void createSquareChat(CreateSquareChatResponse& /* _return */, const CreateSquareChatRequest& /* request */) {
    return;
  }
  void createSquare(CreateSquareResponse& /* _return */, const CreateSquareRequest& /* request */) {
    return;
  }
  void deleteSquareChat(DeleteSquareChatResponse& /* _return */, const DeleteSquareChatRequest& /* request */) {
    return;
  }
  void deleteSquare(DeleteSquareResponse& /* _return */, const DeleteSquareRequest& /* request */) {
    return;
  }
  void destroyMessage(DestroyMessageResponse& /* _return */, const DestroyMessageRequest& /* request */) {
    return;
  }
  void getJoinableSquareChats(GetJoinableSquareChatsResponse& /* _return */, const GetJoinableSquareChatsRequest& /* request */) {
    return;
  }
  void getInvitationTicketUrl(GetInvitationTicketUrlResponse& /* _return */, const GetInvitationTicketUrlRequest& /* request */) {
    return;
  }
  void findSquareByInvitationTicket(FindSquareByInvitationTicketResponse& /* _return */, const FindSquareByInvitationTicketRequest& /* request */) {
    return;
  }
};

typedef struct _SquareService_getSquareChatAnnouncements_args__isset {
  _SquareService_getSquareChatAnnouncements_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareChatAnnouncements_args__isset;

class SquareService_getSquareChatAnnouncements_args {
 public:

  SquareService_getSquareChatAnnouncements_args(const SquareService_getSquareChatAnnouncements_args&);
  SquareService_getSquareChatAnnouncements_args& operator=(const SquareService_getSquareChatAnnouncements_args&);
  SquareService_getSquareChatAnnouncements_args() {
  }

  virtual ~SquareService_getSquareChatAnnouncements_args() throw();
  GetSquareChatAnnouncementsRequest request;

  _SquareService_getSquareChatAnnouncements_args__isset __isset;

  void __set_request(const GetSquareChatAnnouncementsRequest& val);

  bool operator == (const SquareService_getSquareChatAnnouncements_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareChatAnnouncements_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareChatAnnouncements_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareChatAnnouncements_pargs {
 public:


  virtual ~SquareService_getSquareChatAnnouncements_pargs() throw();
  const GetSquareChatAnnouncementsRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareChatAnnouncements_result__isset {
  _SquareService_getSquareChatAnnouncements_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareChatAnnouncements_result__isset;

class SquareService_getSquareChatAnnouncements_result {
 public:

  SquareService_getSquareChatAnnouncements_result(const SquareService_getSquareChatAnnouncements_result&);
  SquareService_getSquareChatAnnouncements_result& operator=(const SquareService_getSquareChatAnnouncements_result&);
  SquareService_getSquareChatAnnouncements_result() {
  }

  virtual ~SquareService_getSquareChatAnnouncements_result() throw();
  GetSquareChatAnnouncementsResponse success;
  SquareException e;

  _SquareService_getSquareChatAnnouncements_result__isset __isset;

  void __set_success(const GetSquareChatAnnouncementsResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareChatAnnouncements_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareChatAnnouncements_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareChatAnnouncements_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareChatAnnouncements_presult__isset {
  _SquareService_getSquareChatAnnouncements_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareChatAnnouncements_presult__isset;

class SquareService_getSquareChatAnnouncements_presult {
 public:


  virtual ~SquareService_getSquareChatAnnouncements_presult() throw();
  GetSquareChatAnnouncementsResponse* success;
  SquareException e;

  _SquareService_getSquareChatAnnouncements_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_deleteSquareChatAnnouncement_args__isset {
  _SquareService_deleteSquareChatAnnouncement_args__isset() : request(false) {}
  bool request :1;
} _SquareService_deleteSquareChatAnnouncement_args__isset;

class SquareService_deleteSquareChatAnnouncement_args {
 public:

  SquareService_deleteSquareChatAnnouncement_args(const SquareService_deleteSquareChatAnnouncement_args&);
  SquareService_deleteSquareChatAnnouncement_args& operator=(const SquareService_deleteSquareChatAnnouncement_args&);
  SquareService_deleteSquareChatAnnouncement_args() {
  }

  virtual ~SquareService_deleteSquareChatAnnouncement_args() throw();
  DeleteSquareChatAnnouncementRequest request;

  _SquareService_deleteSquareChatAnnouncement_args__isset __isset;

  void __set_request(const DeleteSquareChatAnnouncementRequest& val);

  bool operator == (const SquareService_deleteSquareChatAnnouncement_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_deleteSquareChatAnnouncement_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_deleteSquareChatAnnouncement_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_deleteSquareChatAnnouncement_pargs {
 public:


  virtual ~SquareService_deleteSquareChatAnnouncement_pargs() throw();
  const DeleteSquareChatAnnouncementRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_deleteSquareChatAnnouncement_result__isset {
  _SquareService_deleteSquareChatAnnouncement_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_deleteSquareChatAnnouncement_result__isset;

class SquareService_deleteSquareChatAnnouncement_result {
 public:

  SquareService_deleteSquareChatAnnouncement_result(const SquareService_deleteSquareChatAnnouncement_result&);
  SquareService_deleteSquareChatAnnouncement_result& operator=(const SquareService_deleteSquareChatAnnouncement_result&);
  SquareService_deleteSquareChatAnnouncement_result() {
  }

  virtual ~SquareService_deleteSquareChatAnnouncement_result() throw();
  DeleteSquareChatAnnouncementResponse success;
  SquareException e;

  _SquareService_deleteSquareChatAnnouncement_result__isset __isset;

  void __set_success(const DeleteSquareChatAnnouncementResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_deleteSquareChatAnnouncement_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_deleteSquareChatAnnouncement_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_deleteSquareChatAnnouncement_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_deleteSquareChatAnnouncement_presult__isset {
  _SquareService_deleteSquareChatAnnouncement_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_deleteSquareChatAnnouncement_presult__isset;

class SquareService_deleteSquareChatAnnouncement_presult {
 public:


  virtual ~SquareService_deleteSquareChatAnnouncement_presult() throw();
  DeleteSquareChatAnnouncementResponse* success;
  SquareException e;

  _SquareService_deleteSquareChatAnnouncement_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_createSquareChatAnnouncement_args__isset {
  _SquareService_createSquareChatAnnouncement_args__isset() : request(false) {}
  bool request :1;
} _SquareService_createSquareChatAnnouncement_args__isset;

class SquareService_createSquareChatAnnouncement_args {
 public:

  SquareService_createSquareChatAnnouncement_args(const SquareService_createSquareChatAnnouncement_args&);
  SquareService_createSquareChatAnnouncement_args& operator=(const SquareService_createSquareChatAnnouncement_args&);
  SquareService_createSquareChatAnnouncement_args() {
  }

  virtual ~SquareService_createSquareChatAnnouncement_args() throw();
  CreateSquareChatAnnouncementRequest request;

  _SquareService_createSquareChatAnnouncement_args__isset __isset;

  void __set_request(const CreateSquareChatAnnouncementRequest& val);

  bool operator == (const SquareService_createSquareChatAnnouncement_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_createSquareChatAnnouncement_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_createSquareChatAnnouncement_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_createSquareChatAnnouncement_pargs {
 public:


  virtual ~SquareService_createSquareChatAnnouncement_pargs() throw();
  const CreateSquareChatAnnouncementRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_createSquareChatAnnouncement_result__isset {
  _SquareService_createSquareChatAnnouncement_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_createSquareChatAnnouncement_result__isset;

class SquareService_createSquareChatAnnouncement_result {
 public:

  SquareService_createSquareChatAnnouncement_result(const SquareService_createSquareChatAnnouncement_result&);
  SquareService_createSquareChatAnnouncement_result& operator=(const SquareService_createSquareChatAnnouncement_result&);
  SquareService_createSquareChatAnnouncement_result() {
  }

  virtual ~SquareService_createSquareChatAnnouncement_result() throw();
  CreateSquareChatAnnouncementResponse success;
  SquareException e;

  _SquareService_createSquareChatAnnouncement_result__isset __isset;

  void __set_success(const CreateSquareChatAnnouncementResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_createSquareChatAnnouncement_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_createSquareChatAnnouncement_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_createSquareChatAnnouncement_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_createSquareChatAnnouncement_presult__isset {
  _SquareService_createSquareChatAnnouncement_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_createSquareChatAnnouncement_presult__isset;

class SquareService_createSquareChatAnnouncement_presult {
 public:


  virtual ~SquareService_createSquareChatAnnouncement_presult() throw();
  CreateSquareChatAnnouncementResponse* success;
  SquareException e;

  _SquareService_createSquareChatAnnouncement_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getNoteStatus_args__isset {
  _SquareService_getNoteStatus_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getNoteStatus_args__isset;

class SquareService_getNoteStatus_args {
 public:

  SquareService_getNoteStatus_args(const SquareService_getNoteStatus_args&);
  SquareService_getNoteStatus_args& operator=(const SquareService_getNoteStatus_args&);
  SquareService_getNoteStatus_args() {
  }

  virtual ~SquareService_getNoteStatus_args() throw();
  GetNoteStatusRequest request;

  _SquareService_getNoteStatus_args__isset __isset;

  void __set_request(const GetNoteStatusRequest& val);

  bool operator == (const SquareService_getNoteStatus_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getNoteStatus_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getNoteStatus_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getNoteStatus_pargs {
 public:


  virtual ~SquareService_getNoteStatus_pargs() throw();
  const GetNoteStatusRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getNoteStatus_result__isset {
  _SquareService_getNoteStatus_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getNoteStatus_result__isset;

class SquareService_getNoteStatus_result {
 public:

  SquareService_getNoteStatus_result(const SquareService_getNoteStatus_result&);
  SquareService_getNoteStatus_result& operator=(const SquareService_getNoteStatus_result&);
  SquareService_getNoteStatus_result() {
  }

  virtual ~SquareService_getNoteStatus_result() throw();
  GetNoteStatusResponse success;
  SquareException e;

  _SquareService_getNoteStatus_result__isset __isset;

  void __set_success(const GetNoteStatusResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getNoteStatus_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getNoteStatus_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getNoteStatus_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getNoteStatus_presult__isset {
  _SquareService_getNoteStatus_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getNoteStatus_presult__isset;

class SquareService_getNoteStatus_presult {
 public:


  virtual ~SquareService_getNoteStatus_presult() throw();
  GetNoteStatusResponse* success;
  SquareException e;

  _SquareService_getNoteStatus_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquareStatus_args__isset {
  _SquareService_getSquareStatus_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareStatus_args__isset;

class SquareService_getSquareStatus_args {
 public:

  SquareService_getSquareStatus_args(const SquareService_getSquareStatus_args&);
  SquareService_getSquareStatus_args& operator=(const SquareService_getSquareStatus_args&);
  SquareService_getSquareStatus_args() {
  }

  virtual ~SquareService_getSquareStatus_args() throw();
  GetSquareStatusRequest request;

  _SquareService_getSquareStatus_args__isset __isset;

  void __set_request(const GetSquareStatusRequest& val);

  bool operator == (const SquareService_getSquareStatus_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareStatus_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareStatus_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareStatus_pargs {
 public:


  virtual ~SquareService_getSquareStatus_pargs() throw();
  const GetSquareStatusRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareStatus_result__isset {
  _SquareService_getSquareStatus_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareStatus_result__isset;

class SquareService_getSquareStatus_result {
 public:

  SquareService_getSquareStatus_result(const SquareService_getSquareStatus_result&);
  SquareService_getSquareStatus_result& operator=(const SquareService_getSquareStatus_result&);
  SquareService_getSquareStatus_result() {
  }

  virtual ~SquareService_getSquareStatus_result() throw();
  GetSquareStatusResponse success;
  SquareException e;

  _SquareService_getSquareStatus_result__isset __isset;

  void __set_success(const GetSquareStatusResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareStatus_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareStatus_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareStatus_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareStatus_presult__isset {
  _SquareService_getSquareStatus_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareStatus_presult__isset;

class SquareService_getSquareStatus_presult {
 public:


  virtual ~SquareService_getSquareStatus_presult() throw();
  GetSquareStatusResponse* success;
  SquareException e;

  _SquareService_getSquareStatus_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_reportSquareMember_args__isset {
  _SquareService_reportSquareMember_args__isset() : request(false) {}
  bool request :1;
} _SquareService_reportSquareMember_args__isset;

class SquareService_reportSquareMember_args {
 public:

  SquareService_reportSquareMember_args(const SquareService_reportSquareMember_args&);
  SquareService_reportSquareMember_args& operator=(const SquareService_reportSquareMember_args&);
  SquareService_reportSquareMember_args() {
  }

  virtual ~SquareService_reportSquareMember_args() throw();
  ReportSquareMemberRequest request;

  _SquareService_reportSquareMember_args__isset __isset;

  void __set_request(const ReportSquareMemberRequest& val);

  bool operator == (const SquareService_reportSquareMember_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_reportSquareMember_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_reportSquareMember_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_reportSquareMember_pargs {
 public:


  virtual ~SquareService_reportSquareMember_pargs() throw();
  const ReportSquareMemberRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_reportSquareMember_result__isset {
  _SquareService_reportSquareMember_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_reportSquareMember_result__isset;

class SquareService_reportSquareMember_result {
 public:

  SquareService_reportSquareMember_result(const SquareService_reportSquareMember_result&);
  SquareService_reportSquareMember_result& operator=(const SquareService_reportSquareMember_result&);
  SquareService_reportSquareMember_result() {
  }

  virtual ~SquareService_reportSquareMember_result() throw();
  ReportSquareMemberResponse success;
  SquareException e;

  _SquareService_reportSquareMember_result__isset __isset;

  void __set_success(const ReportSquareMemberResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_reportSquareMember_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_reportSquareMember_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_reportSquareMember_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_reportSquareMember_presult__isset {
  _SquareService_reportSquareMember_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_reportSquareMember_presult__isset;

class SquareService_reportSquareMember_presult {
 public:


  virtual ~SquareService_reportSquareMember_presult() throw();
  ReportSquareMemberResponse* success;
  SquareException e;

  _SquareService_reportSquareMember_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_reportSquareMessage_args__isset {
  _SquareService_reportSquareMessage_args__isset() : request(false) {}
  bool request :1;
} _SquareService_reportSquareMessage_args__isset;

class SquareService_reportSquareMessage_args {
 public:

  SquareService_reportSquareMessage_args(const SquareService_reportSquareMessage_args&);
  SquareService_reportSquareMessage_args& operator=(const SquareService_reportSquareMessage_args&);
  SquareService_reportSquareMessage_args() {
  }

  virtual ~SquareService_reportSquareMessage_args() throw();
  ReportSquareMessageRequest request;

  _SquareService_reportSquareMessage_args__isset __isset;

  void __set_request(const ReportSquareMessageRequest& val);

  bool operator == (const SquareService_reportSquareMessage_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_reportSquareMessage_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_reportSquareMessage_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_reportSquareMessage_pargs {
 public:


  virtual ~SquareService_reportSquareMessage_pargs() throw();
  const ReportSquareMessageRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_reportSquareMessage_result__isset {
  _SquareService_reportSquareMessage_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_reportSquareMessage_result__isset;

class SquareService_reportSquareMessage_result {
 public:

  SquareService_reportSquareMessage_result(const SquareService_reportSquareMessage_result&);
  SquareService_reportSquareMessage_result& operator=(const SquareService_reportSquareMessage_result&);
  SquareService_reportSquareMessage_result() {
  }

  virtual ~SquareService_reportSquareMessage_result() throw();
  ReportSquareMessageResponse success;
  SquareException e;

  _SquareService_reportSquareMessage_result__isset __isset;

  void __set_success(const ReportSquareMessageResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_reportSquareMessage_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_reportSquareMessage_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_reportSquareMessage_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_reportSquareMessage_presult__isset {
  _SquareService_reportSquareMessage_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_reportSquareMessage_presult__isset;

class SquareService_reportSquareMessage_presult {
 public:


  virtual ~SquareService_reportSquareMessage_presult() throw();
  ReportSquareMessageResponse* success;
  SquareException e;

  _SquareService_reportSquareMessage_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_reportSquareChat_args__isset {
  _SquareService_reportSquareChat_args__isset() : request(false) {}
  bool request :1;
} _SquareService_reportSquareChat_args__isset;

class SquareService_reportSquareChat_args {
 public:

  SquareService_reportSquareChat_args(const SquareService_reportSquareChat_args&);
  SquareService_reportSquareChat_args& operator=(const SquareService_reportSquareChat_args&);
  SquareService_reportSquareChat_args() {
  }

  virtual ~SquareService_reportSquareChat_args() throw();
  ReportSquareChatRequest request;

  _SquareService_reportSquareChat_args__isset __isset;

  void __set_request(const ReportSquareChatRequest& val);

  bool operator == (const SquareService_reportSquareChat_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_reportSquareChat_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_reportSquareChat_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_reportSquareChat_pargs {
 public:


  virtual ~SquareService_reportSquareChat_pargs() throw();
  const ReportSquareChatRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_reportSquareChat_result__isset {
  _SquareService_reportSquareChat_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_reportSquareChat_result__isset;

class SquareService_reportSquareChat_result {
 public:

  SquareService_reportSquareChat_result(const SquareService_reportSquareChat_result&);
  SquareService_reportSquareChat_result& operator=(const SquareService_reportSquareChat_result&);
  SquareService_reportSquareChat_result() {
  }

  virtual ~SquareService_reportSquareChat_result() throw();
  ReportSquareChatResponse success;
  SquareException e;

  _SquareService_reportSquareChat_result__isset __isset;

  void __set_success(const ReportSquareChatResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_reportSquareChat_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_reportSquareChat_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_reportSquareChat_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_reportSquareChat_presult__isset {
  _SquareService_reportSquareChat_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_reportSquareChat_presult__isset;

class SquareService_reportSquareChat_presult {
 public:


  virtual ~SquareService_reportSquareChat_presult() throw();
  ReportSquareChatResponse* success;
  SquareException e;

  _SquareService_reportSquareChat_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_reportSquare_args__isset {
  _SquareService_reportSquare_args__isset() : request(false) {}
  bool request :1;
} _SquareService_reportSquare_args__isset;

class SquareService_reportSquare_args {
 public:

  SquareService_reportSquare_args(const SquareService_reportSquare_args&);
  SquareService_reportSquare_args& operator=(const SquareService_reportSquare_args&);
  SquareService_reportSquare_args() {
  }

  virtual ~SquareService_reportSquare_args() throw();
  ReportSquareRequest request;

  _SquareService_reportSquare_args__isset __isset;

  void __set_request(const ReportSquareRequest& val);

  bool operator == (const SquareService_reportSquare_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_reportSquare_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_reportSquare_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_reportSquare_pargs {
 public:


  virtual ~SquareService_reportSquare_pargs() throw();
  const ReportSquareRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_reportSquare_result__isset {
  _SquareService_reportSquare_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_reportSquare_result__isset;

class SquareService_reportSquare_result {
 public:

  SquareService_reportSquare_result(const SquareService_reportSquare_result&);
  SquareService_reportSquare_result& operator=(const SquareService_reportSquare_result&);
  SquareService_reportSquare_result() {
  }

  virtual ~SquareService_reportSquare_result() throw();
  ReportSquareResponse success;
  SquareException e;

  _SquareService_reportSquare_result__isset __isset;

  void __set_success(const ReportSquareResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_reportSquare_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_reportSquare_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_reportSquare_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_reportSquare_presult__isset {
  _SquareService_reportSquare_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_reportSquare_presult__isset;

class SquareService_reportSquare_presult {
 public:


  virtual ~SquareService_reportSquare_presult() throw();
  ReportSquareResponse* success;
  SquareException e;

  _SquareService_reportSquare_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_updateSquareMemberRelation_args__isset {
  _SquareService_updateSquareMemberRelation_args__isset() : request(false) {}
  bool request :1;
} _SquareService_updateSquareMemberRelation_args__isset;

class SquareService_updateSquareMemberRelation_args {
 public:

  SquareService_updateSquareMemberRelation_args(const SquareService_updateSquareMemberRelation_args&);
  SquareService_updateSquareMemberRelation_args& operator=(const SquareService_updateSquareMemberRelation_args&);
  SquareService_updateSquareMemberRelation_args() {
  }

  virtual ~SquareService_updateSquareMemberRelation_args() throw();
  UpdateSquareMemberRelationRequest request;

  _SquareService_updateSquareMemberRelation_args__isset __isset;

  void __set_request(const UpdateSquareMemberRelationRequest& val);

  bool operator == (const SquareService_updateSquareMemberRelation_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareMemberRelation_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareMemberRelation_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_updateSquareMemberRelation_pargs {
 public:


  virtual ~SquareService_updateSquareMemberRelation_pargs() throw();
  const UpdateSquareMemberRelationRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareMemberRelation_result__isset {
  _SquareService_updateSquareMemberRelation_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareMemberRelation_result__isset;

class SquareService_updateSquareMemberRelation_result {
 public:

  SquareService_updateSquareMemberRelation_result(const SquareService_updateSquareMemberRelation_result&);
  SquareService_updateSquareMemberRelation_result& operator=(const SquareService_updateSquareMemberRelation_result&);
  SquareService_updateSquareMemberRelation_result() {
  }

  virtual ~SquareService_updateSquareMemberRelation_result() throw();
  UpdateSquareMemberRelationResponse success;
  SquareException e;

  _SquareService_updateSquareMemberRelation_result__isset __isset;

  void __set_success(const UpdateSquareMemberRelationResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_updateSquareMemberRelation_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareMemberRelation_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareMemberRelation_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareMemberRelation_presult__isset {
  _SquareService_updateSquareMemberRelation_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareMemberRelation_presult__isset;

class SquareService_updateSquareMemberRelation_presult {
 public:


  virtual ~SquareService_updateSquareMemberRelation_presult() throw();
  UpdateSquareMemberRelationResponse* success;
  SquareException e;

  _SquareService_updateSquareMemberRelation_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_updateSquareAuthority_args__isset {
  _SquareService_updateSquareAuthority_args__isset() : request(false) {}
  bool request :1;
} _SquareService_updateSquareAuthority_args__isset;

class SquareService_updateSquareAuthority_args {
 public:

  SquareService_updateSquareAuthority_args(const SquareService_updateSquareAuthority_args&);
  SquareService_updateSquareAuthority_args& operator=(const SquareService_updateSquareAuthority_args&);
  SquareService_updateSquareAuthority_args() {
  }

  virtual ~SquareService_updateSquareAuthority_args() throw();
  UpdateSquareAuthorityRequest request;

  _SquareService_updateSquareAuthority_args__isset __isset;

  void __set_request(const UpdateSquareAuthorityRequest& val);

  bool operator == (const SquareService_updateSquareAuthority_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareAuthority_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareAuthority_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_updateSquareAuthority_pargs {
 public:


  virtual ~SquareService_updateSquareAuthority_pargs() throw();
  const UpdateSquareAuthorityRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareAuthority_result__isset {
  _SquareService_updateSquareAuthority_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareAuthority_result__isset;

class SquareService_updateSquareAuthority_result {
 public:

  SquareService_updateSquareAuthority_result(const SquareService_updateSquareAuthority_result&);
  SquareService_updateSquareAuthority_result& operator=(const SquareService_updateSquareAuthority_result&);
  SquareService_updateSquareAuthority_result() {
  }

  virtual ~SquareService_updateSquareAuthority_result() throw();
  UpdateSquareAuthorityResponse success;
  SquareException e;

  _SquareService_updateSquareAuthority_result__isset __isset;

  void __set_success(const UpdateSquareAuthorityResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_updateSquareAuthority_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareAuthority_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareAuthority_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareAuthority_presult__isset {
  _SquareService_updateSquareAuthority_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareAuthority_presult__isset;

class SquareService_updateSquareAuthority_presult {
 public:


  virtual ~SquareService_updateSquareAuthority_presult() throw();
  UpdateSquareAuthorityResponse* success;
  SquareException e;

  _SquareService_updateSquareAuthority_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_updateSquareChatMember_args__isset {
  _SquareService_updateSquareChatMember_args__isset() : request(false) {}
  bool request :1;
} _SquareService_updateSquareChatMember_args__isset;

class SquareService_updateSquareChatMember_args {
 public:

  SquareService_updateSquareChatMember_args(const SquareService_updateSquareChatMember_args&);
  SquareService_updateSquareChatMember_args& operator=(const SquareService_updateSquareChatMember_args&);
  SquareService_updateSquareChatMember_args() {
  }

  virtual ~SquareService_updateSquareChatMember_args() throw();
  UpdateSquareChatMemberRequest request;

  _SquareService_updateSquareChatMember_args__isset __isset;

  void __set_request(const UpdateSquareChatMemberRequest& val);

  bool operator == (const SquareService_updateSquareChatMember_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareChatMember_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareChatMember_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_updateSquareChatMember_pargs {
 public:


  virtual ~SquareService_updateSquareChatMember_pargs() throw();
  const UpdateSquareChatMemberRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareChatMember_result__isset {
  _SquareService_updateSquareChatMember_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareChatMember_result__isset;

class SquareService_updateSquareChatMember_result {
 public:

  SquareService_updateSquareChatMember_result(const SquareService_updateSquareChatMember_result&);
  SquareService_updateSquareChatMember_result& operator=(const SquareService_updateSquareChatMember_result&);
  SquareService_updateSquareChatMember_result() {
  }

  virtual ~SquareService_updateSquareChatMember_result() throw();
  UpdateSquareChatMemberResponse success;
  SquareException e;

  _SquareService_updateSquareChatMember_result__isset __isset;

  void __set_success(const UpdateSquareChatMemberResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_updateSquareChatMember_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareChatMember_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareChatMember_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareChatMember_presult__isset {
  _SquareService_updateSquareChatMember_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareChatMember_presult__isset;

class SquareService_updateSquareChatMember_presult {
 public:


  virtual ~SquareService_updateSquareChatMember_presult() throw();
  UpdateSquareChatMemberResponse* success;
  SquareException e;

  _SquareService_updateSquareChatMember_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_updateSquareChat_args__isset {
  _SquareService_updateSquareChat_args__isset() : request(false) {}
  bool request :1;
} _SquareService_updateSquareChat_args__isset;

class SquareService_updateSquareChat_args {
 public:

  SquareService_updateSquareChat_args(const SquareService_updateSquareChat_args&);
  SquareService_updateSquareChat_args& operator=(const SquareService_updateSquareChat_args&);
  SquareService_updateSquareChat_args() {
  }

  virtual ~SquareService_updateSquareChat_args() throw();
  UpdateSquareChatRequest request;

  _SquareService_updateSquareChat_args__isset __isset;

  void __set_request(const UpdateSquareChatRequest& val);

  bool operator == (const SquareService_updateSquareChat_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareChat_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareChat_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_updateSquareChat_pargs {
 public:


  virtual ~SquareService_updateSquareChat_pargs() throw();
  const UpdateSquareChatRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareChat_result__isset {
  _SquareService_updateSquareChat_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareChat_result__isset;

class SquareService_updateSquareChat_result {
 public:

  SquareService_updateSquareChat_result(const SquareService_updateSquareChat_result&);
  SquareService_updateSquareChat_result& operator=(const SquareService_updateSquareChat_result&);
  SquareService_updateSquareChat_result() {
  }

  virtual ~SquareService_updateSquareChat_result() throw();
  UpdateSquareChatResponse success;
  SquareException e;

  _SquareService_updateSquareChat_result__isset __isset;

  void __set_success(const UpdateSquareChatResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_updateSquareChat_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareChat_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareChat_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareChat_presult__isset {
  _SquareService_updateSquareChat_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareChat_presult__isset;

class SquareService_updateSquareChat_presult {
 public:


  virtual ~SquareService_updateSquareChat_presult() throw();
  UpdateSquareChatResponse* success;
  SquareException e;

  _SquareService_updateSquareChat_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_refreshSubscriptions_args__isset {
  _SquareService_refreshSubscriptions_args__isset() : request(false) {}
  bool request :1;
} _SquareService_refreshSubscriptions_args__isset;

class SquareService_refreshSubscriptions_args {
 public:

  SquareService_refreshSubscriptions_args(const SquareService_refreshSubscriptions_args&);
  SquareService_refreshSubscriptions_args& operator=(const SquareService_refreshSubscriptions_args&);
  SquareService_refreshSubscriptions_args() {
  }

  virtual ~SquareService_refreshSubscriptions_args() throw();
  RefreshSubscriptionsRequest request;

  _SquareService_refreshSubscriptions_args__isset __isset;

  void __set_request(const RefreshSubscriptionsRequest& val);

  bool operator == (const SquareService_refreshSubscriptions_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_refreshSubscriptions_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_refreshSubscriptions_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_refreshSubscriptions_pargs {
 public:


  virtual ~SquareService_refreshSubscriptions_pargs() throw();
  const RefreshSubscriptionsRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_refreshSubscriptions_result__isset {
  _SquareService_refreshSubscriptions_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_refreshSubscriptions_result__isset;

class SquareService_refreshSubscriptions_result {
 public:

  SquareService_refreshSubscriptions_result(const SquareService_refreshSubscriptions_result&);
  SquareService_refreshSubscriptions_result& operator=(const SquareService_refreshSubscriptions_result&);
  SquareService_refreshSubscriptions_result() {
  }

  virtual ~SquareService_refreshSubscriptions_result() throw();
  RefreshSubscriptionsResponse success;
  SquareException e;

  _SquareService_refreshSubscriptions_result__isset __isset;

  void __set_success(const RefreshSubscriptionsResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_refreshSubscriptions_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_refreshSubscriptions_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_refreshSubscriptions_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_refreshSubscriptions_presult__isset {
  _SquareService_refreshSubscriptions_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_refreshSubscriptions_presult__isset;

class SquareService_refreshSubscriptions_presult {
 public:


  virtual ~SquareService_refreshSubscriptions_presult() throw();
  RefreshSubscriptionsResponse* success;
  SquareException e;

  _SquareService_refreshSubscriptions_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_removeSubscriptions_args__isset {
  _SquareService_removeSubscriptions_args__isset() : request(false) {}
  bool request :1;
} _SquareService_removeSubscriptions_args__isset;

class SquareService_removeSubscriptions_args {
 public:

  SquareService_removeSubscriptions_args(const SquareService_removeSubscriptions_args&);
  SquareService_removeSubscriptions_args& operator=(const SquareService_removeSubscriptions_args&);
  SquareService_removeSubscriptions_args() {
  }

  virtual ~SquareService_removeSubscriptions_args() throw();
  RemoveSubscriptionsRequest request;

  _SquareService_removeSubscriptions_args__isset __isset;

  void __set_request(const RemoveSubscriptionsRequest& val);

  bool operator == (const SquareService_removeSubscriptions_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_removeSubscriptions_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_removeSubscriptions_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_removeSubscriptions_pargs {
 public:


  virtual ~SquareService_removeSubscriptions_pargs() throw();
  const RemoveSubscriptionsRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_removeSubscriptions_result__isset {
  _SquareService_removeSubscriptions_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_removeSubscriptions_result__isset;

class SquareService_removeSubscriptions_result {
 public:

  SquareService_removeSubscriptions_result(const SquareService_removeSubscriptions_result&);
  SquareService_removeSubscriptions_result& operator=(const SquareService_removeSubscriptions_result&);
  SquareService_removeSubscriptions_result() {
  }

  virtual ~SquareService_removeSubscriptions_result() throw();
  RemoveSubscriptionsResponse success;
  SquareException e;

  _SquareService_removeSubscriptions_result__isset __isset;

  void __set_success(const RemoveSubscriptionsResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_removeSubscriptions_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_removeSubscriptions_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_removeSubscriptions_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_removeSubscriptions_presult__isset {
  _SquareService_removeSubscriptions_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_removeSubscriptions_presult__isset;

class SquareService_removeSubscriptions_presult {
 public:


  virtual ~SquareService_removeSubscriptions_presult() throw();
  RemoveSubscriptionsResponse* success;
  SquareException e;

  _SquareService_removeSubscriptions_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_rejectSquareMembers_args__isset {
  _SquareService_rejectSquareMembers_args__isset() : request(false) {}
  bool request :1;
} _SquareService_rejectSquareMembers_args__isset;

class SquareService_rejectSquareMembers_args {
 public:

  SquareService_rejectSquareMembers_args(const SquareService_rejectSquareMembers_args&);
  SquareService_rejectSquareMembers_args& operator=(const SquareService_rejectSquareMembers_args&);
  SquareService_rejectSquareMembers_args() {
  }

  virtual ~SquareService_rejectSquareMembers_args() throw();
  RejectSquareMembersRequest request;

  _SquareService_rejectSquareMembers_args__isset __isset;

  void __set_request(const RejectSquareMembersRequest& val);

  bool operator == (const SquareService_rejectSquareMembers_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_rejectSquareMembers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_rejectSquareMembers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_rejectSquareMembers_pargs {
 public:


  virtual ~SquareService_rejectSquareMembers_pargs() throw();
  const RejectSquareMembersRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_rejectSquareMembers_result__isset {
  _SquareService_rejectSquareMembers_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_rejectSquareMembers_result__isset;

class SquareService_rejectSquareMembers_result {
 public:

  SquareService_rejectSquareMembers_result(const SquareService_rejectSquareMembers_result&);
  SquareService_rejectSquareMembers_result& operator=(const SquareService_rejectSquareMembers_result&);
  SquareService_rejectSquareMembers_result() {
  }

  virtual ~SquareService_rejectSquareMembers_result() throw();
  RejectSquareMembersResponse success;
  SquareException e;

  _SquareService_rejectSquareMembers_result__isset __isset;

  void __set_success(const RejectSquareMembersResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_rejectSquareMembers_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_rejectSquareMembers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_rejectSquareMembers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_rejectSquareMembers_presult__isset {
  _SquareService_rejectSquareMembers_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_rejectSquareMembers_presult__isset;

class SquareService_rejectSquareMembers_presult {
 public:


  virtual ~SquareService_rejectSquareMembers_presult() throw();
  RejectSquareMembersResponse* success;
  SquareException e;

  _SquareService_rejectSquareMembers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_updateSquareMembers_args__isset {
  _SquareService_updateSquareMembers_args__isset() : request(false) {}
  bool request :1;
} _SquareService_updateSquareMembers_args__isset;

class SquareService_updateSquareMembers_args {
 public:

  SquareService_updateSquareMembers_args(const SquareService_updateSquareMembers_args&);
  SquareService_updateSquareMembers_args& operator=(const SquareService_updateSquareMembers_args&);
  SquareService_updateSquareMembers_args() {
  }

  virtual ~SquareService_updateSquareMembers_args() throw();
  UpdateSquareMembersRequest request;

  _SquareService_updateSquareMembers_args__isset __isset;

  void __set_request(const UpdateSquareMembersRequest& val);

  bool operator == (const SquareService_updateSquareMembers_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareMembers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareMembers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_updateSquareMembers_pargs {
 public:


  virtual ~SquareService_updateSquareMembers_pargs() throw();
  const UpdateSquareMembersRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareMembers_result__isset {
  _SquareService_updateSquareMembers_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareMembers_result__isset;

class SquareService_updateSquareMembers_result {
 public:

  SquareService_updateSquareMembers_result(const SquareService_updateSquareMembers_result&);
  SquareService_updateSquareMembers_result& operator=(const SquareService_updateSquareMembers_result&);
  SquareService_updateSquareMembers_result() {
  }

  virtual ~SquareService_updateSquareMembers_result() throw();
  UpdateSquareMembersResponse success;
  SquareException e;

  _SquareService_updateSquareMembers_result__isset __isset;

  void __set_success(const UpdateSquareMembersResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_updateSquareMembers_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareMembers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareMembers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareMembers_presult__isset {
  _SquareService_updateSquareMembers_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareMembers_presult__isset;

class SquareService_updateSquareMembers_presult {
 public:


  virtual ~SquareService_updateSquareMembers_presult() throw();
  UpdateSquareMembersResponse* success;
  SquareException e;

  _SquareService_updateSquareMembers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_updateSquareMember_args__isset {
  _SquareService_updateSquareMember_args__isset() : request(false) {}
  bool request :1;
} _SquareService_updateSquareMember_args__isset;

class SquareService_updateSquareMember_args {
 public:

  SquareService_updateSquareMember_args(const SquareService_updateSquareMember_args&);
  SquareService_updateSquareMember_args& operator=(const SquareService_updateSquareMember_args&);
  SquareService_updateSquareMember_args() {
  }

  virtual ~SquareService_updateSquareMember_args() throw();
  UpdateSquareMemberRequest request;

  _SquareService_updateSquareMember_args__isset __isset;

  void __set_request(const UpdateSquareMemberRequest& val);

  bool operator == (const SquareService_updateSquareMember_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareMember_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareMember_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_updateSquareMember_pargs {
 public:


  virtual ~SquareService_updateSquareMember_pargs() throw();
  const UpdateSquareMemberRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareMember_result__isset {
  _SquareService_updateSquareMember_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareMember_result__isset;

class SquareService_updateSquareMember_result {
 public:

  SquareService_updateSquareMember_result(const SquareService_updateSquareMember_result&);
  SquareService_updateSquareMember_result& operator=(const SquareService_updateSquareMember_result&);
  SquareService_updateSquareMember_result() {
  }

  virtual ~SquareService_updateSquareMember_result() throw();
  UpdateSquareMemberResponse success;
  SquareException e;

  _SquareService_updateSquareMember_result__isset __isset;

  void __set_success(const UpdateSquareMemberResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_updateSquareMember_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareMember_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareMember_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareMember_presult__isset {
  _SquareService_updateSquareMember_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareMember_presult__isset;

class SquareService_updateSquareMember_presult {
 public:


  virtual ~SquareService_updateSquareMember_presult() throw();
  UpdateSquareMemberResponse* success;
  SquareException e;

  _SquareService_updateSquareMember_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_updateSquareFeatureSet_args__isset {
  _SquareService_updateSquareFeatureSet_args__isset() : request(false) {}
  bool request :1;
} _SquareService_updateSquareFeatureSet_args__isset;

class SquareService_updateSquareFeatureSet_args {
 public:

  SquareService_updateSquareFeatureSet_args(const SquareService_updateSquareFeatureSet_args&);
  SquareService_updateSquareFeatureSet_args& operator=(const SquareService_updateSquareFeatureSet_args&);
  SquareService_updateSquareFeatureSet_args() {
  }

  virtual ~SquareService_updateSquareFeatureSet_args() throw();
  UpdateSquareFeatureSetRequest request;

  _SquareService_updateSquareFeatureSet_args__isset __isset;

  void __set_request(const UpdateSquareFeatureSetRequest& val);

  bool operator == (const SquareService_updateSquareFeatureSet_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareFeatureSet_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareFeatureSet_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_updateSquareFeatureSet_pargs {
 public:


  virtual ~SquareService_updateSquareFeatureSet_pargs() throw();
  const UpdateSquareFeatureSetRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareFeatureSet_result__isset {
  _SquareService_updateSquareFeatureSet_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareFeatureSet_result__isset;

class SquareService_updateSquareFeatureSet_result {
 public:

  SquareService_updateSquareFeatureSet_result(const SquareService_updateSquareFeatureSet_result&);
  SquareService_updateSquareFeatureSet_result& operator=(const SquareService_updateSquareFeatureSet_result&);
  SquareService_updateSquareFeatureSet_result() {
  }

  virtual ~SquareService_updateSquareFeatureSet_result() throw();
  UpdateSquareFeatureSetResponse success;
  SquareException e;

  _SquareService_updateSquareFeatureSet_result__isset __isset;

  void __set_success(const UpdateSquareFeatureSetResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_updateSquareFeatureSet_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquareFeatureSet_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquareFeatureSet_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquareFeatureSet_presult__isset {
  _SquareService_updateSquareFeatureSet_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquareFeatureSet_presult__isset;

class SquareService_updateSquareFeatureSet_presult {
 public:


  virtual ~SquareService_updateSquareFeatureSet_presult() throw();
  UpdateSquareFeatureSetResponse* success;
  SquareException e;

  _SquareService_updateSquareFeatureSet_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquareFeatureSet_args__isset {
  _SquareService_getSquareFeatureSet_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareFeatureSet_args__isset;

class SquareService_getSquareFeatureSet_args {
 public:

  SquareService_getSquareFeatureSet_args(const SquareService_getSquareFeatureSet_args&);
  SquareService_getSquareFeatureSet_args& operator=(const SquareService_getSquareFeatureSet_args&);
  SquareService_getSquareFeatureSet_args() {
  }

  virtual ~SquareService_getSquareFeatureSet_args() throw();
  GetSquareFeatureSetRequest request;

  _SquareService_getSquareFeatureSet_args__isset __isset;

  void __set_request(const GetSquareFeatureSetRequest& val);

  bool operator == (const SquareService_getSquareFeatureSet_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareFeatureSet_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareFeatureSet_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareFeatureSet_pargs {
 public:


  virtual ~SquareService_getSquareFeatureSet_pargs() throw();
  const GetSquareFeatureSetRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareFeatureSet_result__isset {
  _SquareService_getSquareFeatureSet_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareFeatureSet_result__isset;

class SquareService_getSquareFeatureSet_result {
 public:

  SquareService_getSquareFeatureSet_result(const SquareService_getSquareFeatureSet_result&);
  SquareService_getSquareFeatureSet_result& operator=(const SquareService_getSquareFeatureSet_result&);
  SquareService_getSquareFeatureSet_result() {
  }

  virtual ~SquareService_getSquareFeatureSet_result() throw();
  GetSquareFeatureSetResponse success;
  SquareException e;

  _SquareService_getSquareFeatureSet_result__isset __isset;

  void __set_success(const GetSquareFeatureSetResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareFeatureSet_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareFeatureSet_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareFeatureSet_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareFeatureSet_presult__isset {
  _SquareService_getSquareFeatureSet_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareFeatureSet_presult__isset;

class SquareService_getSquareFeatureSet_presult {
 public:


  virtual ~SquareService_getSquareFeatureSet_presult() throw();
  GetSquareFeatureSetResponse* success;
  SquareException e;

  _SquareService_getSquareFeatureSet_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_searchSquares_args__isset {
  _SquareService_searchSquares_args__isset() : request(false) {}
  bool request :1;
} _SquareService_searchSquares_args__isset;

class SquareService_searchSquares_args {
 public:

  SquareService_searchSquares_args(const SquareService_searchSquares_args&);
  SquareService_searchSquares_args& operator=(const SquareService_searchSquares_args&);
  SquareService_searchSquares_args() {
  }

  virtual ~SquareService_searchSquares_args() throw();
  SearchSquaresRequest request;

  _SquareService_searchSquares_args__isset __isset;

  void __set_request(const SearchSquaresRequest& val);

  bool operator == (const SquareService_searchSquares_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_searchSquares_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_searchSquares_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_searchSquares_pargs {
 public:


  virtual ~SquareService_searchSquares_pargs() throw();
  const SearchSquaresRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_searchSquares_result__isset {
  _SquareService_searchSquares_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_searchSquares_result__isset;

class SquareService_searchSquares_result {
 public:

  SquareService_searchSquares_result(const SquareService_searchSquares_result&);
  SquareService_searchSquares_result& operator=(const SquareService_searchSquares_result&);
  SquareService_searchSquares_result() {
  }

  virtual ~SquareService_searchSquares_result() throw();
  SearchSquaresResponse success;
  SquareException e;

  _SquareService_searchSquares_result__isset __isset;

  void __set_success(const SearchSquaresResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_searchSquares_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_searchSquares_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_searchSquares_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_searchSquares_presult__isset {
  _SquareService_searchSquares_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_searchSquares_presult__isset;

class SquareService_searchSquares_presult {
 public:


  virtual ~SquareService_searchSquares_presult() throw();
  SearchSquaresResponse* success;
  SquareException e;

  _SquareService_searchSquares_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_updateSquare_args__isset {
  _SquareService_updateSquare_args__isset() : request(false) {}
  bool request :1;
} _SquareService_updateSquare_args__isset;

class SquareService_updateSquare_args {
 public:

  SquareService_updateSquare_args(const SquareService_updateSquare_args&);
  SquareService_updateSquare_args& operator=(const SquareService_updateSquare_args&);
  SquareService_updateSquare_args() {
  }

  virtual ~SquareService_updateSquare_args() throw();
  UpdateSquareRequest request;

  _SquareService_updateSquare_args__isset __isset;

  void __set_request(const UpdateSquareRequest& val);

  bool operator == (const SquareService_updateSquare_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquare_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquare_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_updateSquare_pargs {
 public:


  virtual ~SquareService_updateSquare_pargs() throw();
  const UpdateSquareRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquare_result__isset {
  _SquareService_updateSquare_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquare_result__isset;

class SquareService_updateSquare_result {
 public:

  SquareService_updateSquare_result(const SquareService_updateSquare_result&);
  SquareService_updateSquare_result& operator=(const SquareService_updateSquare_result&);
  SquareService_updateSquare_result() {
  }

  virtual ~SquareService_updateSquare_result() throw();
  UpdateSquareResponse success;
  SquareException e;

  _SquareService_updateSquare_result__isset __isset;

  void __set_success(const UpdateSquareResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_updateSquare_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_updateSquare_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_updateSquare_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_updateSquare_presult__isset {
  _SquareService_updateSquare_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_updateSquare_presult__isset;

class SquareService_updateSquare_presult {
 public:


  virtual ~SquareService_updateSquare_presult() throw();
  UpdateSquareResponse* success;
  SquareException e;

  _SquareService_updateSquare_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getCategories_args__isset {
  _SquareService_getCategories_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getCategories_args__isset;

class SquareService_getCategories_args {
 public:

  SquareService_getCategories_args(const SquareService_getCategories_args&);
  SquareService_getCategories_args& operator=(const SquareService_getCategories_args&);
  SquareService_getCategories_args() {
  }

  virtual ~SquareService_getCategories_args() throw();
  GetSquareCategoriesRequest request;

  _SquareService_getCategories_args__isset __isset;

  void __set_request(const GetSquareCategoriesRequest& val);

  bool operator == (const SquareService_getCategories_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getCategories_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getCategories_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getCategories_pargs {
 public:


  virtual ~SquareService_getCategories_pargs() throw();
  const GetSquareCategoriesRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getCategories_result__isset {
  _SquareService_getCategories_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getCategories_result__isset;

class SquareService_getCategories_result {
 public:

  SquareService_getCategories_result(const SquareService_getCategories_result&);
  SquareService_getCategories_result& operator=(const SquareService_getCategories_result&);
  SquareService_getCategories_result() {
  }

  virtual ~SquareService_getCategories_result() throw();
  GetSquareCategoriesResponse success;
  SquareException e;

  _SquareService_getCategories_result__isset __isset;

  void __set_success(const GetSquareCategoriesResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getCategories_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getCategories_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getCategories_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getCategories_presult__isset {
  _SquareService_getCategories_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getCategories_presult__isset;

class SquareService_getCategories_presult {
 public:


  virtual ~SquareService_getCategories_presult() throw();
  GetSquareCategoriesResponse* success;
  SquareException e;

  _SquareService_getCategories_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_searchSquareMembers_args__isset {
  _SquareService_searchSquareMembers_args__isset() : request(false) {}
  bool request :1;
} _SquareService_searchSquareMembers_args__isset;

class SquareService_searchSquareMembers_args {
 public:

  SquareService_searchSquareMembers_args(const SquareService_searchSquareMembers_args&);
  SquareService_searchSquareMembers_args& operator=(const SquareService_searchSquareMembers_args&);
  SquareService_searchSquareMembers_args() {
  }

  virtual ~SquareService_searchSquareMembers_args() throw();
  SearchSquareMembersRequest request;

  _SquareService_searchSquareMembers_args__isset __isset;

  void __set_request(const SearchSquareMembersRequest& val);

  bool operator == (const SquareService_searchSquareMembers_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_searchSquareMembers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_searchSquareMembers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_searchSquareMembers_pargs {
 public:


  virtual ~SquareService_searchSquareMembers_pargs() throw();
  const SearchSquareMembersRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_searchSquareMembers_result__isset {
  _SquareService_searchSquareMembers_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_searchSquareMembers_result__isset;

class SquareService_searchSquareMembers_result {
 public:

  SquareService_searchSquareMembers_result(const SquareService_searchSquareMembers_result&);
  SquareService_searchSquareMembers_result& operator=(const SquareService_searchSquareMembers_result&);
  SquareService_searchSquareMembers_result() {
  }

  virtual ~SquareService_searchSquareMembers_result() throw();
  SearchSquareMembersResponse success;
  SquareException e;

  _SquareService_searchSquareMembers_result__isset __isset;

  void __set_success(const SearchSquareMembersResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_searchSquareMembers_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_searchSquareMembers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_searchSquareMembers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_searchSquareMembers_presult__isset {
  _SquareService_searchSquareMembers_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_searchSquareMembers_presult__isset;

class SquareService_searchSquareMembers_presult {
 public:


  virtual ~SquareService_searchSquareMembers_presult() throw();
  SearchSquareMembersResponse* success;
  SquareException e;

  _SquareService_searchSquareMembers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_fetchSquareChatEvents_args__isset {
  _SquareService_fetchSquareChatEvents_args__isset() : request(false) {}
  bool request :1;
} _SquareService_fetchSquareChatEvents_args__isset;

class SquareService_fetchSquareChatEvents_args {
 public:

  SquareService_fetchSquareChatEvents_args(const SquareService_fetchSquareChatEvents_args&);
  SquareService_fetchSquareChatEvents_args& operator=(const SquareService_fetchSquareChatEvents_args&);
  SquareService_fetchSquareChatEvents_args() {
  }

  virtual ~SquareService_fetchSquareChatEvents_args() throw();
  FetchSquareChatEventsRequest request;

  _SquareService_fetchSquareChatEvents_args__isset __isset;

  void __set_request(const FetchSquareChatEventsRequest& val);

  bool operator == (const SquareService_fetchSquareChatEvents_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_fetchSquareChatEvents_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_fetchSquareChatEvents_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_fetchSquareChatEvents_pargs {
 public:


  virtual ~SquareService_fetchSquareChatEvents_pargs() throw();
  const FetchSquareChatEventsRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_fetchSquareChatEvents_result__isset {
  _SquareService_fetchSquareChatEvents_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_fetchSquareChatEvents_result__isset;

class SquareService_fetchSquareChatEvents_result {
 public:

  SquareService_fetchSquareChatEvents_result(const SquareService_fetchSquareChatEvents_result&);
  SquareService_fetchSquareChatEvents_result& operator=(const SquareService_fetchSquareChatEvents_result&);
  SquareService_fetchSquareChatEvents_result() {
  }

  virtual ~SquareService_fetchSquareChatEvents_result() throw();
  FetchSquareChatEventsResponse success;
  SquareException e;

  _SquareService_fetchSquareChatEvents_result__isset __isset;

  void __set_success(const FetchSquareChatEventsResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_fetchSquareChatEvents_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_fetchSquareChatEvents_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_fetchSquareChatEvents_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_fetchSquareChatEvents_presult__isset {
  _SquareService_fetchSquareChatEvents_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_fetchSquareChatEvents_presult__isset;

class SquareService_fetchSquareChatEvents_presult {
 public:


  virtual ~SquareService_fetchSquareChatEvents_presult() throw();
  FetchSquareChatEventsResponse* success;
  SquareException e;

  _SquareService_fetchSquareChatEvents_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_fetchMyEvents_args__isset {
  _SquareService_fetchMyEvents_args__isset() : request(false) {}
  bool request :1;
} _SquareService_fetchMyEvents_args__isset;

class SquareService_fetchMyEvents_args {
 public:

  SquareService_fetchMyEvents_args(const SquareService_fetchMyEvents_args&);
  SquareService_fetchMyEvents_args& operator=(const SquareService_fetchMyEvents_args&);
  SquareService_fetchMyEvents_args() {
  }

  virtual ~SquareService_fetchMyEvents_args() throw();
  FetchMyEventsRequest request;

  _SquareService_fetchMyEvents_args__isset __isset;

  void __set_request(const FetchMyEventsRequest& val);

  bool operator == (const SquareService_fetchMyEvents_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_fetchMyEvents_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_fetchMyEvents_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_fetchMyEvents_pargs {
 public:


  virtual ~SquareService_fetchMyEvents_pargs() throw();
  const FetchMyEventsRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_fetchMyEvents_result__isset {
  _SquareService_fetchMyEvents_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_fetchMyEvents_result__isset;

class SquareService_fetchMyEvents_result {
 public:

  SquareService_fetchMyEvents_result(const SquareService_fetchMyEvents_result&);
  SquareService_fetchMyEvents_result& operator=(const SquareService_fetchMyEvents_result&);
  SquareService_fetchMyEvents_result() {
  }

  virtual ~SquareService_fetchMyEvents_result() throw();
  FetchMyEventsResponse success;
  SquareException e;

  _SquareService_fetchMyEvents_result__isset __isset;

  void __set_success(const FetchMyEventsResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_fetchMyEvents_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_fetchMyEvents_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_fetchMyEvents_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_fetchMyEvents_presult__isset {
  _SquareService_fetchMyEvents_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_fetchMyEvents_presult__isset;

class SquareService_fetchMyEvents_presult {
 public:


  virtual ~SquareService_fetchMyEvents_presult() throw();
  FetchMyEventsResponse* success;
  SquareException e;

  _SquareService_fetchMyEvents_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_markAsRead_args__isset {
  _SquareService_markAsRead_args__isset() : request(false) {}
  bool request :1;
} _SquareService_markAsRead_args__isset;

class SquareService_markAsRead_args {
 public:

  SquareService_markAsRead_args(const SquareService_markAsRead_args&);
  SquareService_markAsRead_args& operator=(const SquareService_markAsRead_args&);
  SquareService_markAsRead_args() {
  }

  virtual ~SquareService_markAsRead_args() throw();
  MarkAsReadRequest request;

  _SquareService_markAsRead_args__isset __isset;

  void __set_request(const MarkAsReadRequest& val);

  bool operator == (const SquareService_markAsRead_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_markAsRead_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_markAsRead_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_markAsRead_pargs {
 public:


  virtual ~SquareService_markAsRead_pargs() throw();
  const MarkAsReadRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_markAsRead_result__isset {
  _SquareService_markAsRead_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_markAsRead_result__isset;

class SquareService_markAsRead_result {
 public:

  SquareService_markAsRead_result(const SquareService_markAsRead_result&);
  SquareService_markAsRead_result& operator=(const SquareService_markAsRead_result&);
  SquareService_markAsRead_result() {
  }

  virtual ~SquareService_markAsRead_result() throw();
  MarkAsReadResponse success;
  SquareException e;

  _SquareService_markAsRead_result__isset __isset;

  void __set_success(const MarkAsReadResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_markAsRead_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_markAsRead_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_markAsRead_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_markAsRead_presult__isset {
  _SquareService_markAsRead_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_markAsRead_presult__isset;

class SquareService_markAsRead_presult {
 public:


  virtual ~SquareService_markAsRead_presult() throw();
  MarkAsReadResponse* success;
  SquareException e;

  _SquareService_markAsRead_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquareAuthority_args__isset {
  _SquareService_getSquareAuthority_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareAuthority_args__isset;

class SquareService_getSquareAuthority_args {
 public:

  SquareService_getSquareAuthority_args(const SquareService_getSquareAuthority_args&);
  SquareService_getSquareAuthority_args& operator=(const SquareService_getSquareAuthority_args&);
  SquareService_getSquareAuthority_args() {
  }

  virtual ~SquareService_getSquareAuthority_args() throw();
  GetSquareAuthorityRequest request;

  _SquareService_getSquareAuthority_args__isset __isset;

  void __set_request(const GetSquareAuthorityRequest& val);

  bool operator == (const SquareService_getSquareAuthority_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareAuthority_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareAuthority_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareAuthority_pargs {
 public:


  virtual ~SquareService_getSquareAuthority_pargs() throw();
  const GetSquareAuthorityRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareAuthority_result__isset {
  _SquareService_getSquareAuthority_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareAuthority_result__isset;

class SquareService_getSquareAuthority_result {
 public:

  SquareService_getSquareAuthority_result(const SquareService_getSquareAuthority_result&);
  SquareService_getSquareAuthority_result& operator=(const SquareService_getSquareAuthority_result&);
  SquareService_getSquareAuthority_result() {
  }

  virtual ~SquareService_getSquareAuthority_result() throw();
  GetSquareAuthorityResponse success;
  SquareException e;

  _SquareService_getSquareAuthority_result__isset __isset;

  void __set_success(const GetSquareAuthorityResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareAuthority_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareAuthority_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareAuthority_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareAuthority_presult__isset {
  _SquareService_getSquareAuthority_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareAuthority_presult__isset;

class SquareService_getSquareAuthority_presult {
 public:


  virtual ~SquareService_getSquareAuthority_presult() throw();
  GetSquareAuthorityResponse* success;
  SquareException e;

  _SquareService_getSquareAuthority_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_sendMessage_args__isset {
  _SquareService_sendMessage_args__isset() : request(false) {}
  bool request :1;
} _SquareService_sendMessage_args__isset;

class SquareService_sendMessage_args {
 public:

  SquareService_sendMessage_args(const SquareService_sendMessage_args&);
  SquareService_sendMessage_args& operator=(const SquareService_sendMessage_args&);
  SquareService_sendMessage_args() {
  }

  virtual ~SquareService_sendMessage_args() throw();
  SendMessageRequest request;

  _SquareService_sendMessage_args__isset __isset;

  void __set_request(const SendMessageRequest& val);

  bool operator == (const SquareService_sendMessage_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_sendMessage_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_sendMessage_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_sendMessage_pargs {
 public:


  virtual ~SquareService_sendMessage_pargs() throw();
  const SendMessageRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_sendMessage_result__isset {
  _SquareService_sendMessage_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_sendMessage_result__isset;

class SquareService_sendMessage_result {
 public:

  SquareService_sendMessage_result(const SquareService_sendMessage_result&);
  SquareService_sendMessage_result& operator=(const SquareService_sendMessage_result&);
  SquareService_sendMessage_result() {
  }

  virtual ~SquareService_sendMessage_result() throw();
  SendMessageResponse success;
  SquareException e;

  _SquareService_sendMessage_result__isset __isset;

  void __set_success(const SendMessageResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_sendMessage_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_sendMessage_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_sendMessage_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_sendMessage_presult__isset {
  _SquareService_sendMessage_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_sendMessage_presult__isset;

class SquareService_sendMessage_presult {
 public:


  virtual ~SquareService_sendMessage_presult() throw();
  SendMessageResponse* success;
  SquareException e;

  _SquareService_sendMessage_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_leaveSquare_args__isset {
  _SquareService_leaveSquare_args__isset() : request(false) {}
  bool request :1;
} _SquareService_leaveSquare_args__isset;

class SquareService_leaveSquare_args {
 public:

  SquareService_leaveSquare_args(const SquareService_leaveSquare_args&);
  SquareService_leaveSquare_args& operator=(const SquareService_leaveSquare_args&);
  SquareService_leaveSquare_args() {
  }

  virtual ~SquareService_leaveSquare_args() throw();
  LeaveSquareRequest request;

  _SquareService_leaveSquare_args__isset __isset;

  void __set_request(const LeaveSquareRequest& val);

  bool operator == (const SquareService_leaveSquare_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_leaveSquare_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_leaveSquare_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_leaveSquare_pargs {
 public:


  virtual ~SquareService_leaveSquare_pargs() throw();
  const LeaveSquareRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_leaveSquare_result__isset {
  _SquareService_leaveSquare_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_leaveSquare_result__isset;

class SquareService_leaveSquare_result {
 public:

  SquareService_leaveSquare_result(const SquareService_leaveSquare_result&);
  SquareService_leaveSquare_result& operator=(const SquareService_leaveSquare_result&);
  SquareService_leaveSquare_result() {
  }

  virtual ~SquareService_leaveSquare_result() throw();
  LeaveSquareResponse success;
  SquareException e;

  _SquareService_leaveSquare_result__isset __isset;

  void __set_success(const LeaveSquareResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_leaveSquare_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_leaveSquare_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_leaveSquare_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_leaveSquare_presult__isset {
  _SquareService_leaveSquare_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_leaveSquare_presult__isset;

class SquareService_leaveSquare_presult {
 public:


  virtual ~SquareService_leaveSquare_presult() throw();
  LeaveSquareResponse* success;
  SquareException e;

  _SquareService_leaveSquare_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_leaveSquareChat_args__isset {
  _SquareService_leaveSquareChat_args__isset() : request(false) {}
  bool request :1;
} _SquareService_leaveSquareChat_args__isset;

class SquareService_leaveSquareChat_args {
 public:

  SquareService_leaveSquareChat_args(const SquareService_leaveSquareChat_args&);
  SquareService_leaveSquareChat_args& operator=(const SquareService_leaveSquareChat_args&);
  SquareService_leaveSquareChat_args() {
  }

  virtual ~SquareService_leaveSquareChat_args() throw();
  LeaveSquareChatRequest request;

  _SquareService_leaveSquareChat_args__isset __isset;

  void __set_request(const LeaveSquareChatRequest& val);

  bool operator == (const SquareService_leaveSquareChat_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_leaveSquareChat_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_leaveSquareChat_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_leaveSquareChat_pargs {
 public:


  virtual ~SquareService_leaveSquareChat_pargs() throw();
  const LeaveSquareChatRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_leaveSquareChat_result__isset {
  _SquareService_leaveSquareChat_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_leaveSquareChat_result__isset;

class SquareService_leaveSquareChat_result {
 public:

  SquareService_leaveSquareChat_result(const SquareService_leaveSquareChat_result&);
  SquareService_leaveSquareChat_result& operator=(const SquareService_leaveSquareChat_result&);
  SquareService_leaveSquareChat_result() {
  }

  virtual ~SquareService_leaveSquareChat_result() throw();
  LeaveSquareChatResponse success;
  SquareException e;

  _SquareService_leaveSquareChat_result__isset __isset;

  void __set_success(const LeaveSquareChatResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_leaveSquareChat_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_leaveSquareChat_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_leaveSquareChat_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_leaveSquareChat_presult__isset {
  _SquareService_leaveSquareChat_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_leaveSquareChat_presult__isset;

class SquareService_leaveSquareChat_presult {
 public:


  virtual ~SquareService_leaveSquareChat_presult() throw();
  LeaveSquareChatResponse* success;
  SquareException e;

  _SquareService_leaveSquareChat_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_joinSquareChat_args__isset {
  _SquareService_joinSquareChat_args__isset() : request(false) {}
  bool request :1;
} _SquareService_joinSquareChat_args__isset;

class SquareService_joinSquareChat_args {
 public:

  SquareService_joinSquareChat_args(const SquareService_joinSquareChat_args&);
  SquareService_joinSquareChat_args& operator=(const SquareService_joinSquareChat_args&);
  SquareService_joinSquareChat_args() {
  }

  virtual ~SquareService_joinSquareChat_args() throw();
  JoinSquareChatRequest request;

  _SquareService_joinSquareChat_args__isset __isset;

  void __set_request(const JoinSquareChatRequest& val);

  bool operator == (const SquareService_joinSquareChat_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_joinSquareChat_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_joinSquareChat_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_joinSquareChat_pargs {
 public:


  virtual ~SquareService_joinSquareChat_pargs() throw();
  const JoinSquareChatRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_joinSquareChat_result__isset {
  _SquareService_joinSquareChat_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_joinSquareChat_result__isset;

class SquareService_joinSquareChat_result {
 public:

  SquareService_joinSquareChat_result(const SquareService_joinSquareChat_result&);
  SquareService_joinSquareChat_result& operator=(const SquareService_joinSquareChat_result&);
  SquareService_joinSquareChat_result() {
  }

  virtual ~SquareService_joinSquareChat_result() throw();
  JoinSquareChatResponse success;
  SquareException e;

  _SquareService_joinSquareChat_result__isset __isset;

  void __set_success(const JoinSquareChatResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_joinSquareChat_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_joinSquareChat_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_joinSquareChat_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_joinSquareChat_presult__isset {
  _SquareService_joinSquareChat_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_joinSquareChat_presult__isset;

class SquareService_joinSquareChat_presult {
 public:


  virtual ~SquareService_joinSquareChat_presult() throw();
  JoinSquareChatResponse* success;
  SquareException e;

  _SquareService_joinSquareChat_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_joinSquare_args__isset {
  _SquareService_joinSquare_args__isset() : request(false) {}
  bool request :1;
} _SquareService_joinSquare_args__isset;

class SquareService_joinSquare_args {
 public:

  SquareService_joinSquare_args(const SquareService_joinSquare_args&);
  SquareService_joinSquare_args& operator=(const SquareService_joinSquare_args&);
  SquareService_joinSquare_args() {
  }

  virtual ~SquareService_joinSquare_args() throw();
  JoinSquareRequest request;

  _SquareService_joinSquare_args__isset __isset;

  void __set_request(const JoinSquareRequest& val);

  bool operator == (const SquareService_joinSquare_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_joinSquare_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_joinSquare_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_joinSquare_pargs {
 public:


  virtual ~SquareService_joinSquare_pargs() throw();
  const JoinSquareRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_joinSquare_result__isset {
  _SquareService_joinSquare_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_joinSquare_result__isset;

class SquareService_joinSquare_result {
 public:

  SquareService_joinSquare_result(const SquareService_joinSquare_result&);
  SquareService_joinSquare_result& operator=(const SquareService_joinSquare_result&);
  SquareService_joinSquare_result() {
  }

  virtual ~SquareService_joinSquare_result() throw();
  JoinSquareResponse success;
  SquareException e;

  _SquareService_joinSquare_result__isset __isset;

  void __set_success(const JoinSquareResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_joinSquare_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_joinSquare_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_joinSquare_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_joinSquare_presult__isset {
  _SquareService_joinSquare_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_joinSquare_presult__isset;

class SquareService_joinSquare_presult {
 public:


  virtual ~SquareService_joinSquare_presult() throw();
  JoinSquareResponse* success;
  SquareException e;

  _SquareService_joinSquare_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_inviteToSquare_args__isset {
  _SquareService_inviteToSquare_args__isset() : request(false) {}
  bool request :1;
} _SquareService_inviteToSquare_args__isset;

class SquareService_inviteToSquare_args {
 public:

  SquareService_inviteToSquare_args(const SquareService_inviteToSquare_args&);
  SquareService_inviteToSquare_args& operator=(const SquareService_inviteToSquare_args&);
  SquareService_inviteToSquare_args() {
  }

  virtual ~SquareService_inviteToSquare_args() throw();
  InviteToSquareRequest request;

  _SquareService_inviteToSquare_args__isset __isset;

  void __set_request(const InviteToSquareRequest& val);

  bool operator == (const SquareService_inviteToSquare_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_inviteToSquare_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_inviteToSquare_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_inviteToSquare_pargs {
 public:


  virtual ~SquareService_inviteToSquare_pargs() throw();
  const InviteToSquareRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_inviteToSquare_result__isset {
  _SquareService_inviteToSquare_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_inviteToSquare_result__isset;

class SquareService_inviteToSquare_result {
 public:

  SquareService_inviteToSquare_result(const SquareService_inviteToSquare_result&);
  SquareService_inviteToSquare_result& operator=(const SquareService_inviteToSquare_result&);
  SquareService_inviteToSquare_result() {
  }

  virtual ~SquareService_inviteToSquare_result() throw();
  InviteToSquareResponse success;
  SquareException e;

  _SquareService_inviteToSquare_result__isset __isset;

  void __set_success(const InviteToSquareResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_inviteToSquare_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_inviteToSquare_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_inviteToSquare_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_inviteToSquare_presult__isset {
  _SquareService_inviteToSquare_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_inviteToSquare_presult__isset;

class SquareService_inviteToSquare_presult {
 public:


  virtual ~SquareService_inviteToSquare_presult() throw();
  InviteToSquareResponse* success;
  SquareException e;

  _SquareService_inviteToSquare_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_inviteToSquareChat_args__isset {
  _SquareService_inviteToSquareChat_args__isset() : request(false) {}
  bool request :1;
} _SquareService_inviteToSquareChat_args__isset;

class SquareService_inviteToSquareChat_args {
 public:

  SquareService_inviteToSquareChat_args(const SquareService_inviteToSquareChat_args&);
  SquareService_inviteToSquareChat_args& operator=(const SquareService_inviteToSquareChat_args&);
  SquareService_inviteToSquareChat_args() {
  }

  virtual ~SquareService_inviteToSquareChat_args() throw();
  InviteToSquareChatRequest request;

  _SquareService_inviteToSquareChat_args__isset __isset;

  void __set_request(const InviteToSquareChatRequest& val);

  bool operator == (const SquareService_inviteToSquareChat_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_inviteToSquareChat_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_inviteToSquareChat_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_inviteToSquareChat_pargs {
 public:


  virtual ~SquareService_inviteToSquareChat_pargs() throw();
  const InviteToSquareChatRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_inviteToSquareChat_result__isset {
  _SquareService_inviteToSquareChat_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_inviteToSquareChat_result__isset;

class SquareService_inviteToSquareChat_result {
 public:

  SquareService_inviteToSquareChat_result(const SquareService_inviteToSquareChat_result&);
  SquareService_inviteToSquareChat_result& operator=(const SquareService_inviteToSquareChat_result&);
  SquareService_inviteToSquareChat_result() {
  }

  virtual ~SquareService_inviteToSquareChat_result() throw();
  InviteToSquareChatResponse success;
  SquareException e;

  _SquareService_inviteToSquareChat_result__isset __isset;

  void __set_success(const InviteToSquareChatResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_inviteToSquareChat_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_inviteToSquareChat_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_inviteToSquareChat_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_inviteToSquareChat_presult__isset {
  _SquareService_inviteToSquareChat_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_inviteToSquareChat_presult__isset;

class SquareService_inviteToSquareChat_presult {
 public:


  virtual ~SquareService_inviteToSquareChat_presult() throw();
  InviteToSquareChatResponse* success;
  SquareException e;

  _SquareService_inviteToSquareChat_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquareMember_args__isset {
  _SquareService_getSquareMember_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareMember_args__isset;

class SquareService_getSquareMember_args {
 public:

  SquareService_getSquareMember_args(const SquareService_getSquareMember_args&);
  SquareService_getSquareMember_args& operator=(const SquareService_getSquareMember_args&);
  SquareService_getSquareMember_args() {
  }

  virtual ~SquareService_getSquareMember_args() throw();
  GetSquareMemberRequest request;

  _SquareService_getSquareMember_args__isset __isset;

  void __set_request(const GetSquareMemberRequest& val);

  bool operator == (const SquareService_getSquareMember_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareMember_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareMember_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareMember_pargs {
 public:


  virtual ~SquareService_getSquareMember_pargs() throw();
  const GetSquareMemberRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareMember_result__isset {
  _SquareService_getSquareMember_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareMember_result__isset;

class SquareService_getSquareMember_result {
 public:

  SquareService_getSquareMember_result(const SquareService_getSquareMember_result&);
  SquareService_getSquareMember_result& operator=(const SquareService_getSquareMember_result&);
  SquareService_getSquareMember_result() {
  }

  virtual ~SquareService_getSquareMember_result() throw();
  GetSquareMemberResponse success;
  SquareException e;

  _SquareService_getSquareMember_result__isset __isset;

  void __set_success(const GetSquareMemberResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareMember_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareMember_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareMember_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareMember_presult__isset {
  _SquareService_getSquareMember_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareMember_presult__isset;

class SquareService_getSquareMember_presult {
 public:


  virtual ~SquareService_getSquareMember_presult() throw();
  GetSquareMemberResponse* success;
  SquareException e;

  _SquareService_getSquareMember_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquareMembers_args__isset {
  _SquareService_getSquareMembers_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareMembers_args__isset;

class SquareService_getSquareMembers_args {
 public:

  SquareService_getSquareMembers_args(const SquareService_getSquareMembers_args&);
  SquareService_getSquareMembers_args& operator=(const SquareService_getSquareMembers_args&);
  SquareService_getSquareMembers_args() {
  }

  virtual ~SquareService_getSquareMembers_args() throw();
  GetSquareMembersRequest request;

  _SquareService_getSquareMembers_args__isset __isset;

  void __set_request(const GetSquareMembersRequest& val);

  bool operator == (const SquareService_getSquareMembers_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareMembers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareMembers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareMembers_pargs {
 public:


  virtual ~SquareService_getSquareMembers_pargs() throw();
  const GetSquareMembersRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareMembers_result__isset {
  _SquareService_getSquareMembers_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareMembers_result__isset;

class SquareService_getSquareMembers_result {
 public:

  SquareService_getSquareMembers_result(const SquareService_getSquareMembers_result&);
  SquareService_getSquareMembers_result& operator=(const SquareService_getSquareMembers_result&);
  SquareService_getSquareMembers_result() {
  }

  virtual ~SquareService_getSquareMembers_result() throw();
  GetSquareMembersResponse success;
  SquareException e;

  _SquareService_getSquareMembers_result__isset __isset;

  void __set_success(const GetSquareMembersResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareMembers_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareMembers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareMembers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareMembers_presult__isset {
  _SquareService_getSquareMembers_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareMembers_presult__isset;

class SquareService_getSquareMembers_presult {
 public:


  virtual ~SquareService_getSquareMembers_presult() throw();
  GetSquareMembersResponse* success;
  SquareException e;

  _SquareService_getSquareMembers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquareMemberRelation_args__isset {
  _SquareService_getSquareMemberRelation_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareMemberRelation_args__isset;

class SquareService_getSquareMemberRelation_args {
 public:

  SquareService_getSquareMemberRelation_args(const SquareService_getSquareMemberRelation_args&);
  SquareService_getSquareMemberRelation_args& operator=(const SquareService_getSquareMemberRelation_args&);
  SquareService_getSquareMemberRelation_args() {
  }

  virtual ~SquareService_getSquareMemberRelation_args() throw();
  GetSquareMemberRelationRequest request;

  _SquareService_getSquareMemberRelation_args__isset __isset;

  void __set_request(const GetSquareMemberRelationRequest& val);

  bool operator == (const SquareService_getSquareMemberRelation_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareMemberRelation_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareMemberRelation_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareMemberRelation_pargs {
 public:


  virtual ~SquareService_getSquareMemberRelation_pargs() throw();
  const GetSquareMemberRelationRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareMemberRelation_result__isset {
  _SquareService_getSquareMemberRelation_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareMemberRelation_result__isset;

class SquareService_getSquareMemberRelation_result {
 public:

  SquareService_getSquareMemberRelation_result(const SquareService_getSquareMemberRelation_result&);
  SquareService_getSquareMemberRelation_result& operator=(const SquareService_getSquareMemberRelation_result&);
  SquareService_getSquareMemberRelation_result() {
  }

  virtual ~SquareService_getSquareMemberRelation_result() throw();
  GetSquareMemberRelationResponse success;
  SquareException e;

  _SquareService_getSquareMemberRelation_result__isset __isset;

  void __set_success(const GetSquareMemberRelationResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareMemberRelation_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareMemberRelation_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareMemberRelation_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareMemberRelation_presult__isset {
  _SquareService_getSquareMemberRelation_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareMemberRelation_presult__isset;

class SquareService_getSquareMemberRelation_presult {
 public:


  virtual ~SquareService_getSquareMemberRelation_presult() throw();
  GetSquareMemberRelationResponse* success;
  SquareException e;

  _SquareService_getSquareMemberRelation_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquareMemberRelations_args__isset {
  _SquareService_getSquareMemberRelations_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareMemberRelations_args__isset;

class SquareService_getSquareMemberRelations_args {
 public:

  SquareService_getSquareMemberRelations_args(const SquareService_getSquareMemberRelations_args&);
  SquareService_getSquareMemberRelations_args& operator=(const SquareService_getSquareMemberRelations_args&);
  SquareService_getSquareMemberRelations_args() {
  }

  virtual ~SquareService_getSquareMemberRelations_args() throw();
  GetSquareMemberRelationsRequest request;

  _SquareService_getSquareMemberRelations_args__isset __isset;

  void __set_request(const GetSquareMemberRelationsRequest& val);

  bool operator == (const SquareService_getSquareMemberRelations_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareMemberRelations_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareMemberRelations_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareMemberRelations_pargs {
 public:


  virtual ~SquareService_getSquareMemberRelations_pargs() throw();
  const GetSquareMemberRelationsRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareMemberRelations_result__isset {
  _SquareService_getSquareMemberRelations_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareMemberRelations_result__isset;

class SquareService_getSquareMemberRelations_result {
 public:

  SquareService_getSquareMemberRelations_result(const SquareService_getSquareMemberRelations_result&);
  SquareService_getSquareMemberRelations_result& operator=(const SquareService_getSquareMemberRelations_result&);
  SquareService_getSquareMemberRelations_result() {
  }

  virtual ~SquareService_getSquareMemberRelations_result() throw();
  GetSquareMemberRelationsResponse success;
  SquareException e;

  _SquareService_getSquareMemberRelations_result__isset __isset;

  void __set_success(const GetSquareMemberRelationsResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareMemberRelations_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareMemberRelations_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareMemberRelations_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareMemberRelations_presult__isset {
  _SquareService_getSquareMemberRelations_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareMemberRelations_presult__isset;

class SquareService_getSquareMemberRelations_presult {
 public:


  virtual ~SquareService_getSquareMemberRelations_presult() throw();
  GetSquareMemberRelationsResponse* success;
  SquareException e;

  _SquareService_getSquareMemberRelations_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquareChatMembers_args__isset {
  _SquareService_getSquareChatMembers_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareChatMembers_args__isset;

class SquareService_getSquareChatMembers_args {
 public:

  SquareService_getSquareChatMembers_args(const SquareService_getSquareChatMembers_args&);
  SquareService_getSquareChatMembers_args& operator=(const SquareService_getSquareChatMembers_args&);
  SquareService_getSquareChatMembers_args() {
  }

  virtual ~SquareService_getSquareChatMembers_args() throw();
  GetSquareChatMembersRequest request;

  _SquareService_getSquareChatMembers_args__isset __isset;

  void __set_request(const GetSquareChatMembersRequest& val);

  bool operator == (const SquareService_getSquareChatMembers_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareChatMembers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareChatMembers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareChatMembers_pargs {
 public:


  virtual ~SquareService_getSquareChatMembers_pargs() throw();
  const GetSquareChatMembersRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareChatMembers_result__isset {
  _SquareService_getSquareChatMembers_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareChatMembers_result__isset;

class SquareService_getSquareChatMembers_result {
 public:

  SquareService_getSquareChatMembers_result(const SquareService_getSquareChatMembers_result&);
  SquareService_getSquareChatMembers_result& operator=(const SquareService_getSquareChatMembers_result&);
  SquareService_getSquareChatMembers_result() {
  }

  virtual ~SquareService_getSquareChatMembers_result() throw();
  GetSquareChatMembersResponse success;
  SquareException e;

  _SquareService_getSquareChatMembers_result__isset __isset;

  void __set_success(const GetSquareChatMembersResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareChatMembers_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareChatMembers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareChatMembers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareChatMembers_presult__isset {
  _SquareService_getSquareChatMembers_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareChatMembers_presult__isset;

class SquareService_getSquareChatMembers_presult {
 public:


  virtual ~SquareService_getSquareChatMembers_presult() throw();
  GetSquareChatMembersResponse* success;
  SquareException e;

  _SquareService_getSquareChatMembers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquareChatStatus_args__isset {
  _SquareService_getSquareChatStatus_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareChatStatus_args__isset;

class SquareService_getSquareChatStatus_args {
 public:

  SquareService_getSquareChatStatus_args(const SquareService_getSquareChatStatus_args&);
  SquareService_getSquareChatStatus_args& operator=(const SquareService_getSquareChatStatus_args&);
  SquareService_getSquareChatStatus_args() {
  }

  virtual ~SquareService_getSquareChatStatus_args() throw();
  GetSquareChatStatusRequest request;

  _SquareService_getSquareChatStatus_args__isset __isset;

  void __set_request(const GetSquareChatStatusRequest& val);

  bool operator == (const SquareService_getSquareChatStatus_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareChatStatus_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareChatStatus_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareChatStatus_pargs {
 public:


  virtual ~SquareService_getSquareChatStatus_pargs() throw();
  const GetSquareChatStatusRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareChatStatus_result__isset {
  _SquareService_getSquareChatStatus_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareChatStatus_result__isset;

class SquareService_getSquareChatStatus_result {
 public:

  SquareService_getSquareChatStatus_result(const SquareService_getSquareChatStatus_result&);
  SquareService_getSquareChatStatus_result& operator=(const SquareService_getSquareChatStatus_result&);
  SquareService_getSquareChatStatus_result() {
  }

  virtual ~SquareService_getSquareChatStatus_result() throw();
  GetSquareChatStatusResponse success;
  SquareException e;

  _SquareService_getSquareChatStatus_result__isset __isset;

  void __set_success(const GetSquareChatStatusResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareChatStatus_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareChatStatus_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareChatStatus_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareChatStatus_presult__isset {
  _SquareService_getSquareChatStatus_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareChatStatus_presult__isset;

class SquareService_getSquareChatStatus_presult {
 public:


  virtual ~SquareService_getSquareChatStatus_presult() throw();
  GetSquareChatStatusResponse* success;
  SquareException e;

  _SquareService_getSquareChatStatus_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquareChat_args__isset {
  _SquareService_getSquareChat_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquareChat_args__isset;

class SquareService_getSquareChat_args {
 public:

  SquareService_getSquareChat_args(const SquareService_getSquareChat_args&);
  SquareService_getSquareChat_args& operator=(const SquareService_getSquareChat_args&);
  SquareService_getSquareChat_args() {
  }

  virtual ~SquareService_getSquareChat_args() throw();
  GetSquareChatRequest request;

  _SquareService_getSquareChat_args__isset __isset;

  void __set_request(const GetSquareChatRequest& val);

  bool operator == (const SquareService_getSquareChat_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareChat_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareChat_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquareChat_pargs {
 public:


  virtual ~SquareService_getSquareChat_pargs() throw();
  const GetSquareChatRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareChat_result__isset {
  _SquareService_getSquareChat_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareChat_result__isset;

class SquareService_getSquareChat_result {
 public:

  SquareService_getSquareChat_result(const SquareService_getSquareChat_result&);
  SquareService_getSquareChat_result& operator=(const SquareService_getSquareChat_result&);
  SquareService_getSquareChat_result() {
  }

  virtual ~SquareService_getSquareChat_result() throw();
  GetSquareChatResponse success;
  SquareException e;

  _SquareService_getSquareChat_result__isset __isset;

  void __set_success(const GetSquareChatResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquareChat_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquareChat_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquareChat_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquareChat_presult__isset {
  _SquareService_getSquareChat_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquareChat_presult__isset;

class SquareService_getSquareChat_presult {
 public:


  virtual ~SquareService_getSquareChat_presult() throw();
  GetSquareChatResponse* success;
  SquareException e;

  _SquareService_getSquareChat_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getSquare_args__isset {
  _SquareService_getSquare_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getSquare_args__isset;

class SquareService_getSquare_args {
 public:

  SquareService_getSquare_args(const SquareService_getSquare_args&);
  SquareService_getSquare_args& operator=(const SquareService_getSquare_args&);
  SquareService_getSquare_args() {
  }

  virtual ~SquareService_getSquare_args() throw();
  GetSquareRequest request;

  _SquareService_getSquare_args__isset __isset;

  void __set_request(const GetSquareRequest& val);

  bool operator == (const SquareService_getSquare_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquare_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquare_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getSquare_pargs {
 public:


  virtual ~SquareService_getSquare_pargs() throw();
  const GetSquareRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquare_result__isset {
  _SquareService_getSquare_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquare_result__isset;

class SquareService_getSquare_result {
 public:

  SquareService_getSquare_result(const SquareService_getSquare_result&);
  SquareService_getSquare_result& operator=(const SquareService_getSquare_result&);
  SquareService_getSquare_result() {
  }

  virtual ~SquareService_getSquare_result() throw();
  GetSquareResponse success;
  SquareException e;

  _SquareService_getSquare_result__isset __isset;

  void __set_success(const GetSquareResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getSquare_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getSquare_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getSquare_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getSquare_presult__isset {
  _SquareService_getSquare_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getSquare_presult__isset;

class SquareService_getSquare_presult {
 public:


  virtual ~SquareService_getSquare_presult() throw();
  GetSquareResponse* success;
  SquareException e;

  _SquareService_getSquare_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getJoinedSquares_args__isset {
  _SquareService_getJoinedSquares_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getJoinedSquares_args__isset;

class SquareService_getJoinedSquares_args {
 public:

  SquareService_getJoinedSquares_args(const SquareService_getJoinedSquares_args&);
  SquareService_getJoinedSquares_args& operator=(const SquareService_getJoinedSquares_args&);
  SquareService_getJoinedSquares_args() {
  }

  virtual ~SquareService_getJoinedSquares_args() throw();
  GetJoinedSquaresRequest request;

  _SquareService_getJoinedSquares_args__isset __isset;

  void __set_request(const GetJoinedSquaresRequest& val);

  bool operator == (const SquareService_getJoinedSquares_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getJoinedSquares_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getJoinedSquares_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getJoinedSquares_pargs {
 public:


  virtual ~SquareService_getJoinedSquares_pargs() throw();
  const GetJoinedSquaresRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getJoinedSquares_result__isset {
  _SquareService_getJoinedSquares_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getJoinedSquares_result__isset;

class SquareService_getJoinedSquares_result {
 public:

  SquareService_getJoinedSquares_result(const SquareService_getJoinedSquares_result&);
  SquareService_getJoinedSquares_result& operator=(const SquareService_getJoinedSquares_result&);
  SquareService_getJoinedSquares_result() {
  }

  virtual ~SquareService_getJoinedSquares_result() throw();
  GetJoinedSquaresResponse success;
  SquareException e;

  _SquareService_getJoinedSquares_result__isset __isset;

  void __set_success(const GetJoinedSquaresResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getJoinedSquares_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getJoinedSquares_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getJoinedSquares_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getJoinedSquares_presult__isset {
  _SquareService_getJoinedSquares_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getJoinedSquares_presult__isset;

class SquareService_getJoinedSquares_presult {
 public:


  virtual ~SquareService_getJoinedSquares_presult() throw();
  GetJoinedSquaresResponse* success;
  SquareException e;

  _SquareService_getJoinedSquares_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getJoinedSquareChats_args__isset {
  _SquareService_getJoinedSquareChats_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getJoinedSquareChats_args__isset;

class SquareService_getJoinedSquareChats_args {
 public:

  SquareService_getJoinedSquareChats_args(const SquareService_getJoinedSquareChats_args&);
  SquareService_getJoinedSquareChats_args& operator=(const SquareService_getJoinedSquareChats_args&);
  SquareService_getJoinedSquareChats_args() {
  }

  virtual ~SquareService_getJoinedSquareChats_args() throw();
  GetJoinedSquareChatsRequest request;

  _SquareService_getJoinedSquareChats_args__isset __isset;

  void __set_request(const GetJoinedSquareChatsRequest& val);

  bool operator == (const SquareService_getJoinedSquareChats_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getJoinedSquareChats_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getJoinedSquareChats_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getJoinedSquareChats_pargs {
 public:


  virtual ~SquareService_getJoinedSquareChats_pargs() throw();
  const GetJoinedSquareChatsRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getJoinedSquareChats_result__isset {
  _SquareService_getJoinedSquareChats_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getJoinedSquareChats_result__isset;

class SquareService_getJoinedSquareChats_result {
 public:

  SquareService_getJoinedSquareChats_result(const SquareService_getJoinedSquareChats_result&);
  SquareService_getJoinedSquareChats_result& operator=(const SquareService_getJoinedSquareChats_result&);
  SquareService_getJoinedSquareChats_result() {
  }

  virtual ~SquareService_getJoinedSquareChats_result() throw();
  GetJoinedSquareChatsResponse success;
  SquareException e;

  _SquareService_getJoinedSquareChats_result__isset __isset;

  void __set_success(const GetJoinedSquareChatsResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getJoinedSquareChats_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getJoinedSquareChats_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getJoinedSquareChats_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getJoinedSquareChats_presult__isset {
  _SquareService_getJoinedSquareChats_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getJoinedSquareChats_presult__isset;

class SquareService_getJoinedSquareChats_presult {
 public:


  virtual ~SquareService_getJoinedSquareChats_presult() throw();
  GetJoinedSquareChatsResponse* success;
  SquareException e;

  _SquareService_getJoinedSquareChats_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_approveSquareMembers_args__isset {
  _SquareService_approveSquareMembers_args__isset() : request(false) {}
  bool request :1;
} _SquareService_approveSquareMembers_args__isset;

class SquareService_approveSquareMembers_args {
 public:

  SquareService_approveSquareMembers_args(const SquareService_approveSquareMembers_args&);
  SquareService_approveSquareMembers_args& operator=(const SquareService_approveSquareMembers_args&);
  SquareService_approveSquareMembers_args() {
  }

  virtual ~SquareService_approveSquareMembers_args() throw();
  ApproveSquareMembersRequest request;

  _SquareService_approveSquareMembers_args__isset __isset;

  void __set_request(const ApproveSquareMembersRequest& val);

  bool operator == (const SquareService_approveSquareMembers_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_approveSquareMembers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_approveSquareMembers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_approveSquareMembers_pargs {
 public:


  virtual ~SquareService_approveSquareMembers_pargs() throw();
  const ApproveSquareMembersRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_approveSquareMembers_result__isset {
  _SquareService_approveSquareMembers_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_approveSquareMembers_result__isset;

class SquareService_approveSquareMembers_result {
 public:

  SquareService_approveSquareMembers_result(const SquareService_approveSquareMembers_result&);
  SquareService_approveSquareMembers_result& operator=(const SquareService_approveSquareMembers_result&);
  SquareService_approveSquareMembers_result() {
  }

  virtual ~SquareService_approveSquareMembers_result() throw();
  ApproveSquareMembersResponse success;
  SquareException e;

  _SquareService_approveSquareMembers_result__isset __isset;

  void __set_success(const ApproveSquareMembersResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_approveSquareMembers_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_approveSquareMembers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_approveSquareMembers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_approveSquareMembers_presult__isset {
  _SquareService_approveSquareMembers_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_approveSquareMembers_presult__isset;

class SquareService_approveSquareMembers_presult {
 public:


  virtual ~SquareService_approveSquareMembers_presult() throw();
  ApproveSquareMembersResponse* success;
  SquareException e;

  _SquareService_approveSquareMembers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_createSquareChat_args__isset {
  _SquareService_createSquareChat_args__isset() : request(false) {}
  bool request :1;
} _SquareService_createSquareChat_args__isset;

class SquareService_createSquareChat_args {
 public:

  SquareService_createSquareChat_args(const SquareService_createSquareChat_args&);
  SquareService_createSquareChat_args& operator=(const SquareService_createSquareChat_args&);
  SquareService_createSquareChat_args() {
  }

  virtual ~SquareService_createSquareChat_args() throw();
  CreateSquareChatRequest request;

  _SquareService_createSquareChat_args__isset __isset;

  void __set_request(const CreateSquareChatRequest& val);

  bool operator == (const SquareService_createSquareChat_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_createSquareChat_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_createSquareChat_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_createSquareChat_pargs {
 public:


  virtual ~SquareService_createSquareChat_pargs() throw();
  const CreateSquareChatRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_createSquareChat_result__isset {
  _SquareService_createSquareChat_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_createSquareChat_result__isset;

class SquareService_createSquareChat_result {
 public:

  SquareService_createSquareChat_result(const SquareService_createSquareChat_result&);
  SquareService_createSquareChat_result& operator=(const SquareService_createSquareChat_result&);
  SquareService_createSquareChat_result() {
  }

  virtual ~SquareService_createSquareChat_result() throw();
  CreateSquareChatResponse success;
  SquareException e;

  _SquareService_createSquareChat_result__isset __isset;

  void __set_success(const CreateSquareChatResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_createSquareChat_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_createSquareChat_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_createSquareChat_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_createSquareChat_presult__isset {
  _SquareService_createSquareChat_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_createSquareChat_presult__isset;

class SquareService_createSquareChat_presult {
 public:


  virtual ~SquareService_createSquareChat_presult() throw();
  CreateSquareChatResponse* success;
  SquareException e;

  _SquareService_createSquareChat_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_createSquare_args__isset {
  _SquareService_createSquare_args__isset() : request(false) {}
  bool request :1;
} _SquareService_createSquare_args__isset;

class SquareService_createSquare_args {
 public:

  SquareService_createSquare_args(const SquareService_createSquare_args&);
  SquareService_createSquare_args& operator=(const SquareService_createSquare_args&);
  SquareService_createSquare_args() {
  }

  virtual ~SquareService_createSquare_args() throw();
  CreateSquareRequest request;

  _SquareService_createSquare_args__isset __isset;

  void __set_request(const CreateSquareRequest& val);

  bool operator == (const SquareService_createSquare_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_createSquare_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_createSquare_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_createSquare_pargs {
 public:


  virtual ~SquareService_createSquare_pargs() throw();
  const CreateSquareRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_createSquare_result__isset {
  _SquareService_createSquare_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_createSquare_result__isset;

class SquareService_createSquare_result {
 public:

  SquareService_createSquare_result(const SquareService_createSquare_result&);
  SquareService_createSquare_result& operator=(const SquareService_createSquare_result&);
  SquareService_createSquare_result() {
  }

  virtual ~SquareService_createSquare_result() throw();
  CreateSquareResponse success;
  SquareException e;

  _SquareService_createSquare_result__isset __isset;

  void __set_success(const CreateSquareResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_createSquare_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_createSquare_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_createSquare_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_createSquare_presult__isset {
  _SquareService_createSquare_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_createSquare_presult__isset;

class SquareService_createSquare_presult {
 public:


  virtual ~SquareService_createSquare_presult() throw();
  CreateSquareResponse* success;
  SquareException e;

  _SquareService_createSquare_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_deleteSquareChat_args__isset {
  _SquareService_deleteSquareChat_args__isset() : request(false) {}
  bool request :1;
} _SquareService_deleteSquareChat_args__isset;

class SquareService_deleteSquareChat_args {
 public:

  SquareService_deleteSquareChat_args(const SquareService_deleteSquareChat_args&);
  SquareService_deleteSquareChat_args& operator=(const SquareService_deleteSquareChat_args&);
  SquareService_deleteSquareChat_args() {
  }

  virtual ~SquareService_deleteSquareChat_args() throw();
  DeleteSquareChatRequest request;

  _SquareService_deleteSquareChat_args__isset __isset;

  void __set_request(const DeleteSquareChatRequest& val);

  bool operator == (const SquareService_deleteSquareChat_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_deleteSquareChat_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_deleteSquareChat_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_deleteSquareChat_pargs {
 public:


  virtual ~SquareService_deleteSquareChat_pargs() throw();
  const DeleteSquareChatRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_deleteSquareChat_result__isset {
  _SquareService_deleteSquareChat_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_deleteSquareChat_result__isset;

class SquareService_deleteSquareChat_result {
 public:

  SquareService_deleteSquareChat_result(const SquareService_deleteSquareChat_result&);
  SquareService_deleteSquareChat_result& operator=(const SquareService_deleteSquareChat_result&);
  SquareService_deleteSquareChat_result() {
  }

  virtual ~SquareService_deleteSquareChat_result() throw();
  DeleteSquareChatResponse success;
  SquareException e;

  _SquareService_deleteSquareChat_result__isset __isset;

  void __set_success(const DeleteSquareChatResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_deleteSquareChat_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_deleteSquareChat_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_deleteSquareChat_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_deleteSquareChat_presult__isset {
  _SquareService_deleteSquareChat_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_deleteSquareChat_presult__isset;

class SquareService_deleteSquareChat_presult {
 public:


  virtual ~SquareService_deleteSquareChat_presult() throw();
  DeleteSquareChatResponse* success;
  SquareException e;

  _SquareService_deleteSquareChat_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_deleteSquare_args__isset {
  _SquareService_deleteSquare_args__isset() : request(false) {}
  bool request :1;
} _SquareService_deleteSquare_args__isset;

class SquareService_deleteSquare_args {
 public:

  SquareService_deleteSquare_args(const SquareService_deleteSquare_args&);
  SquareService_deleteSquare_args& operator=(const SquareService_deleteSquare_args&);
  SquareService_deleteSquare_args() {
  }

  virtual ~SquareService_deleteSquare_args() throw();
  DeleteSquareRequest request;

  _SquareService_deleteSquare_args__isset __isset;

  void __set_request(const DeleteSquareRequest& val);

  bool operator == (const SquareService_deleteSquare_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_deleteSquare_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_deleteSquare_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_deleteSquare_pargs {
 public:


  virtual ~SquareService_deleteSquare_pargs() throw();
  const DeleteSquareRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_deleteSquare_result__isset {
  _SquareService_deleteSquare_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_deleteSquare_result__isset;

class SquareService_deleteSquare_result {
 public:

  SquareService_deleteSquare_result(const SquareService_deleteSquare_result&);
  SquareService_deleteSquare_result& operator=(const SquareService_deleteSquare_result&);
  SquareService_deleteSquare_result() {
  }

  virtual ~SquareService_deleteSquare_result() throw();
  DeleteSquareResponse success;
  SquareException e;

  _SquareService_deleteSquare_result__isset __isset;

  void __set_success(const DeleteSquareResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_deleteSquare_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_deleteSquare_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_deleteSquare_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_deleteSquare_presult__isset {
  _SquareService_deleteSquare_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_deleteSquare_presult__isset;

class SquareService_deleteSquare_presult {
 public:


  virtual ~SquareService_deleteSquare_presult() throw();
  DeleteSquareResponse* success;
  SquareException e;

  _SquareService_deleteSquare_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_destroyMessage_args__isset {
  _SquareService_destroyMessage_args__isset() : request(false) {}
  bool request :1;
} _SquareService_destroyMessage_args__isset;

class SquareService_destroyMessage_args {
 public:

  SquareService_destroyMessage_args(const SquareService_destroyMessage_args&);
  SquareService_destroyMessage_args& operator=(const SquareService_destroyMessage_args&);
  SquareService_destroyMessage_args() {
  }

  virtual ~SquareService_destroyMessage_args() throw();
  DestroyMessageRequest request;

  _SquareService_destroyMessage_args__isset __isset;

  void __set_request(const DestroyMessageRequest& val);

  bool operator == (const SquareService_destroyMessage_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_destroyMessage_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_destroyMessage_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_destroyMessage_pargs {
 public:


  virtual ~SquareService_destroyMessage_pargs() throw();
  const DestroyMessageRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_destroyMessage_result__isset {
  _SquareService_destroyMessage_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_destroyMessage_result__isset;

class SquareService_destroyMessage_result {
 public:

  SquareService_destroyMessage_result(const SquareService_destroyMessage_result&);
  SquareService_destroyMessage_result& operator=(const SquareService_destroyMessage_result&);
  SquareService_destroyMessage_result() {
  }

  virtual ~SquareService_destroyMessage_result() throw();
  DestroyMessageResponse success;
  SquareException e;

  _SquareService_destroyMessage_result__isset __isset;

  void __set_success(const DestroyMessageResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_destroyMessage_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_destroyMessage_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_destroyMessage_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_destroyMessage_presult__isset {
  _SquareService_destroyMessage_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_destroyMessage_presult__isset;

class SquareService_destroyMessage_presult {
 public:


  virtual ~SquareService_destroyMessage_presult() throw();
  DestroyMessageResponse* success;
  SquareException e;

  _SquareService_destroyMessage_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getJoinableSquareChats_args__isset {
  _SquareService_getJoinableSquareChats_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getJoinableSquareChats_args__isset;

class SquareService_getJoinableSquareChats_args {
 public:

  SquareService_getJoinableSquareChats_args(const SquareService_getJoinableSquareChats_args&);
  SquareService_getJoinableSquareChats_args& operator=(const SquareService_getJoinableSquareChats_args&);
  SquareService_getJoinableSquareChats_args() {
  }

  virtual ~SquareService_getJoinableSquareChats_args() throw();
  GetJoinableSquareChatsRequest request;

  _SquareService_getJoinableSquareChats_args__isset __isset;

  void __set_request(const GetJoinableSquareChatsRequest& val);

  bool operator == (const SquareService_getJoinableSquareChats_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getJoinableSquareChats_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getJoinableSquareChats_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getJoinableSquareChats_pargs {
 public:


  virtual ~SquareService_getJoinableSquareChats_pargs() throw();
  const GetJoinableSquareChatsRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getJoinableSquareChats_result__isset {
  _SquareService_getJoinableSquareChats_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getJoinableSquareChats_result__isset;

class SquareService_getJoinableSquareChats_result {
 public:

  SquareService_getJoinableSquareChats_result(const SquareService_getJoinableSquareChats_result&);
  SquareService_getJoinableSquareChats_result& operator=(const SquareService_getJoinableSquareChats_result&);
  SquareService_getJoinableSquareChats_result() {
  }

  virtual ~SquareService_getJoinableSquareChats_result() throw();
  GetJoinableSquareChatsResponse success;
  SquareException e;

  _SquareService_getJoinableSquareChats_result__isset __isset;

  void __set_success(const GetJoinableSquareChatsResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getJoinableSquareChats_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getJoinableSquareChats_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getJoinableSquareChats_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getJoinableSquareChats_presult__isset {
  _SquareService_getJoinableSquareChats_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getJoinableSquareChats_presult__isset;

class SquareService_getJoinableSquareChats_presult {
 public:


  virtual ~SquareService_getJoinableSquareChats_presult() throw();
  GetJoinableSquareChatsResponse* success;
  SquareException e;

  _SquareService_getJoinableSquareChats_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_getInvitationTicketUrl_args__isset {
  _SquareService_getInvitationTicketUrl_args__isset() : request(false) {}
  bool request :1;
} _SquareService_getInvitationTicketUrl_args__isset;

class SquareService_getInvitationTicketUrl_args {
 public:

  SquareService_getInvitationTicketUrl_args(const SquareService_getInvitationTicketUrl_args&);
  SquareService_getInvitationTicketUrl_args& operator=(const SquareService_getInvitationTicketUrl_args&);
  SquareService_getInvitationTicketUrl_args() {
  }

  virtual ~SquareService_getInvitationTicketUrl_args() throw();
  GetInvitationTicketUrlRequest request;

  _SquareService_getInvitationTicketUrl_args__isset __isset;

  void __set_request(const GetInvitationTicketUrlRequest& val);

  bool operator == (const SquareService_getInvitationTicketUrl_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_getInvitationTicketUrl_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getInvitationTicketUrl_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_getInvitationTicketUrl_pargs {
 public:


  virtual ~SquareService_getInvitationTicketUrl_pargs() throw();
  const GetInvitationTicketUrlRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getInvitationTicketUrl_result__isset {
  _SquareService_getInvitationTicketUrl_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getInvitationTicketUrl_result__isset;

class SquareService_getInvitationTicketUrl_result {
 public:

  SquareService_getInvitationTicketUrl_result(const SquareService_getInvitationTicketUrl_result&);
  SquareService_getInvitationTicketUrl_result& operator=(const SquareService_getInvitationTicketUrl_result&);
  SquareService_getInvitationTicketUrl_result() {
  }

  virtual ~SquareService_getInvitationTicketUrl_result() throw();
  GetInvitationTicketUrlResponse success;
  SquareException e;

  _SquareService_getInvitationTicketUrl_result__isset __isset;

  void __set_success(const GetInvitationTicketUrlResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_getInvitationTicketUrl_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_getInvitationTicketUrl_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_getInvitationTicketUrl_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_getInvitationTicketUrl_presult__isset {
  _SquareService_getInvitationTicketUrl_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_getInvitationTicketUrl_presult__isset;

class SquareService_getInvitationTicketUrl_presult {
 public:


  virtual ~SquareService_getInvitationTicketUrl_presult() throw();
  GetInvitationTicketUrlResponse* success;
  SquareException e;

  _SquareService_getInvitationTicketUrl_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SquareService_findSquareByInvitationTicket_args__isset {
  _SquareService_findSquareByInvitationTicket_args__isset() : request(false) {}
  bool request :1;
} _SquareService_findSquareByInvitationTicket_args__isset;

class SquareService_findSquareByInvitationTicket_args {
 public:

  SquareService_findSquareByInvitationTicket_args(const SquareService_findSquareByInvitationTicket_args&);
  SquareService_findSquareByInvitationTicket_args& operator=(const SquareService_findSquareByInvitationTicket_args&);
  SquareService_findSquareByInvitationTicket_args() {
  }

  virtual ~SquareService_findSquareByInvitationTicket_args() throw();
  FindSquareByInvitationTicketRequest request;

  _SquareService_findSquareByInvitationTicket_args__isset __isset;

  void __set_request(const FindSquareByInvitationTicketRequest& val);

  bool operator == (const SquareService_findSquareByInvitationTicket_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const SquareService_findSquareByInvitationTicket_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_findSquareByInvitationTicket_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SquareService_findSquareByInvitationTicket_pargs {
 public:


  virtual ~SquareService_findSquareByInvitationTicket_pargs() throw();
  const FindSquareByInvitationTicketRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_findSquareByInvitationTicket_result__isset {
  _SquareService_findSquareByInvitationTicket_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_findSquareByInvitationTicket_result__isset;

class SquareService_findSquareByInvitationTicket_result {
 public:

  SquareService_findSquareByInvitationTicket_result(const SquareService_findSquareByInvitationTicket_result&);
  SquareService_findSquareByInvitationTicket_result& operator=(const SquareService_findSquareByInvitationTicket_result&);
  SquareService_findSquareByInvitationTicket_result() {
  }

  virtual ~SquareService_findSquareByInvitationTicket_result() throw();
  FindSquareByInvitationTicketResponse success;
  SquareException e;

  _SquareService_findSquareByInvitationTicket_result__isset __isset;

  void __set_success(const FindSquareByInvitationTicketResponse& val);

  void __set_e(const SquareException& val);

  bool operator == (const SquareService_findSquareByInvitationTicket_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const SquareService_findSquareByInvitationTicket_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SquareService_findSquareByInvitationTicket_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SquareService_findSquareByInvitationTicket_presult__isset {
  _SquareService_findSquareByInvitationTicket_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _SquareService_findSquareByInvitationTicket_presult__isset;

class SquareService_findSquareByInvitationTicket_presult {
 public:


  virtual ~SquareService_findSquareByInvitationTicket_presult() throw();
  FindSquareByInvitationTicketResponse* success;
  SquareException e;

  _SquareService_findSquareByInvitationTicket_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

class SquareServiceClient : virtual public SquareServiceIf {
 public:
  SquareServiceClient(apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  SquareServiceClient(apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void getSquareChatAnnouncements(GetSquareChatAnnouncementsResponse& _return, const GetSquareChatAnnouncementsRequest& request);
  void send_getSquareChatAnnouncements(const GetSquareChatAnnouncementsRequest& request);
  void recv_getSquareChatAnnouncements(GetSquareChatAnnouncementsResponse& _return);
  void deleteSquareChatAnnouncement(DeleteSquareChatAnnouncementResponse& _return, const DeleteSquareChatAnnouncementRequest& request);
  void send_deleteSquareChatAnnouncement(const DeleteSquareChatAnnouncementRequest& request);
  void recv_deleteSquareChatAnnouncement(DeleteSquareChatAnnouncementResponse& _return);
  void createSquareChatAnnouncement(CreateSquareChatAnnouncementResponse& _return, const CreateSquareChatAnnouncementRequest& request);
  void send_createSquareChatAnnouncement(const CreateSquareChatAnnouncementRequest& request);
  void recv_createSquareChatAnnouncement(CreateSquareChatAnnouncementResponse& _return);
  void getNoteStatus(GetNoteStatusResponse& _return, const GetNoteStatusRequest& request);
  void send_getNoteStatus(const GetNoteStatusRequest& request);
  void recv_getNoteStatus(GetNoteStatusResponse& _return);
  void getSquareStatus(GetSquareStatusResponse& _return, const GetSquareStatusRequest& request);
  void send_getSquareStatus(const GetSquareStatusRequest& request);
  void recv_getSquareStatus(GetSquareStatusResponse& _return);
  void reportSquareMember(ReportSquareMemberResponse& _return, const ReportSquareMemberRequest& request);
  void send_reportSquareMember(const ReportSquareMemberRequest& request);
  void recv_reportSquareMember(ReportSquareMemberResponse& _return);
  void reportSquareMessage(ReportSquareMessageResponse& _return, const ReportSquareMessageRequest& request);
  void send_reportSquareMessage(const ReportSquareMessageRequest& request);
  void recv_reportSquareMessage(ReportSquareMessageResponse& _return);
  void reportSquareChat(ReportSquareChatResponse& _return, const ReportSquareChatRequest& request);
  void send_reportSquareChat(const ReportSquareChatRequest& request);
  void recv_reportSquareChat(ReportSquareChatResponse& _return);
  void reportSquare(ReportSquareResponse& _return, const ReportSquareRequest& request);
  void send_reportSquare(const ReportSquareRequest& request);
  void recv_reportSquare(ReportSquareResponse& _return);
  void updateSquareMemberRelation(UpdateSquareMemberRelationResponse& _return, const UpdateSquareMemberRelationRequest& request);
  void send_updateSquareMemberRelation(const UpdateSquareMemberRelationRequest& request);
  void recv_updateSquareMemberRelation(UpdateSquareMemberRelationResponse& _return);
  void updateSquareAuthority(UpdateSquareAuthorityResponse& _return, const UpdateSquareAuthorityRequest& request);
  void send_updateSquareAuthority(const UpdateSquareAuthorityRequest& request);
  void recv_updateSquareAuthority(UpdateSquareAuthorityResponse& _return);
  void updateSquareChatMember(UpdateSquareChatMemberResponse& _return, const UpdateSquareChatMemberRequest& request);
  void send_updateSquareChatMember(const UpdateSquareChatMemberRequest& request);
  void recv_updateSquareChatMember(UpdateSquareChatMemberResponse& _return);
  void updateSquareChat(UpdateSquareChatResponse& _return, const UpdateSquareChatRequest& request);
  void send_updateSquareChat(const UpdateSquareChatRequest& request);
  void recv_updateSquareChat(UpdateSquareChatResponse& _return);
  void refreshSubscriptions(RefreshSubscriptionsResponse& _return, const RefreshSubscriptionsRequest& request);
  void send_refreshSubscriptions(const RefreshSubscriptionsRequest& request);
  void recv_refreshSubscriptions(RefreshSubscriptionsResponse& _return);
  void removeSubscriptions(RemoveSubscriptionsResponse& _return, const RemoveSubscriptionsRequest& request);
  void send_removeSubscriptions(const RemoveSubscriptionsRequest& request);
  void recv_removeSubscriptions(RemoveSubscriptionsResponse& _return);
  void rejectSquareMembers(RejectSquareMembersResponse& _return, const RejectSquareMembersRequest& request);
  void send_rejectSquareMembers(const RejectSquareMembersRequest& request);
  void recv_rejectSquareMembers(RejectSquareMembersResponse& _return);
  void updateSquareMembers(UpdateSquareMembersResponse& _return, const UpdateSquareMembersRequest& request);
  void send_updateSquareMembers(const UpdateSquareMembersRequest& request);
  void recv_updateSquareMembers(UpdateSquareMembersResponse& _return);
  void updateSquareMember(UpdateSquareMemberResponse& _return, const UpdateSquareMemberRequest& request);
  void send_updateSquareMember(const UpdateSquareMemberRequest& request);
  void recv_updateSquareMember(UpdateSquareMemberResponse& _return);
  void updateSquareFeatureSet(UpdateSquareFeatureSetResponse& _return, const UpdateSquareFeatureSetRequest& request);
  void send_updateSquareFeatureSet(const UpdateSquareFeatureSetRequest& request);
  void recv_updateSquareFeatureSet(UpdateSquareFeatureSetResponse& _return);
  void getSquareFeatureSet(GetSquareFeatureSetResponse& _return, const GetSquareFeatureSetRequest& request);
  void send_getSquareFeatureSet(const GetSquareFeatureSetRequest& request);
  void recv_getSquareFeatureSet(GetSquareFeatureSetResponse& _return);
  void searchSquares(SearchSquaresResponse& _return, const SearchSquaresRequest& request);
  void send_searchSquares(const SearchSquaresRequest& request);
  void recv_searchSquares(SearchSquaresResponse& _return);
  void updateSquare(UpdateSquareResponse& _return, const UpdateSquareRequest& request);
  void send_updateSquare(const UpdateSquareRequest& request);
  void recv_updateSquare(UpdateSquareResponse& _return);
  void getCategories(GetSquareCategoriesResponse& _return, const GetSquareCategoriesRequest& request);
  void send_getCategories(const GetSquareCategoriesRequest& request);
  void recv_getCategories(GetSquareCategoriesResponse& _return);
  void searchSquareMembers(SearchSquareMembersResponse& _return, const SearchSquareMembersRequest& request);
  void send_searchSquareMembers(const SearchSquareMembersRequest& request);
  void recv_searchSquareMembers(SearchSquareMembersResponse& _return);
  void fetchSquareChatEvents(FetchSquareChatEventsResponse& _return, const FetchSquareChatEventsRequest& request);
  void send_fetchSquareChatEvents(const FetchSquareChatEventsRequest& request);
  void recv_fetchSquareChatEvents(FetchSquareChatEventsResponse& _return);
  void fetchMyEvents(FetchMyEventsResponse& _return, const FetchMyEventsRequest& request);
  void send_fetchMyEvents(const FetchMyEventsRequest& request);
  void recv_fetchMyEvents(FetchMyEventsResponse& _return);
  void markAsRead(MarkAsReadResponse& _return, const MarkAsReadRequest& request);
  void send_markAsRead(const MarkAsReadRequest& request);
  void recv_markAsRead(MarkAsReadResponse& _return);
  void getSquareAuthority(GetSquareAuthorityResponse& _return, const GetSquareAuthorityRequest& request);
  void send_getSquareAuthority(const GetSquareAuthorityRequest& request);
  void recv_getSquareAuthority(GetSquareAuthorityResponse& _return);
  void sendMessage(SendMessageResponse& _return, const SendMessageRequest& request);
  void send_sendMessage(const SendMessageRequest& request);
  void recv_sendMessage(SendMessageResponse& _return);
  void leaveSquare(LeaveSquareResponse& _return, const LeaveSquareRequest& request);
  void send_leaveSquare(const LeaveSquareRequest& request);
  void recv_leaveSquare(LeaveSquareResponse& _return);
  void leaveSquareChat(LeaveSquareChatResponse& _return, const LeaveSquareChatRequest& request);
  void send_leaveSquareChat(const LeaveSquareChatRequest& request);
  void recv_leaveSquareChat(LeaveSquareChatResponse& _return);
  void joinSquareChat(JoinSquareChatResponse& _return, const JoinSquareChatRequest& request);
  void send_joinSquareChat(const JoinSquareChatRequest& request);
  void recv_joinSquareChat(JoinSquareChatResponse& _return);
  void joinSquare(JoinSquareResponse& _return, const JoinSquareRequest& request);
  void send_joinSquare(const JoinSquareRequest& request);
  void recv_joinSquare(JoinSquareResponse& _return);
  void inviteToSquare(InviteToSquareResponse& _return, const InviteToSquareRequest& request);
  void send_inviteToSquare(const InviteToSquareRequest& request);
  void recv_inviteToSquare(InviteToSquareResponse& _return);
  void inviteToSquareChat(InviteToSquareChatResponse& _return, const InviteToSquareChatRequest& request);
  void send_inviteToSquareChat(const InviteToSquareChatRequest& request);
  void recv_inviteToSquareChat(InviteToSquareChatResponse& _return);
  void getSquareMember(GetSquareMemberResponse& _return, const GetSquareMemberRequest& request);
  void send_getSquareMember(const GetSquareMemberRequest& request);
  void recv_getSquareMember(GetSquareMemberResponse& _return);
  void getSquareMembers(GetSquareMembersResponse& _return, const GetSquareMembersRequest& request);
  void send_getSquareMembers(const GetSquareMembersRequest& request);
  void recv_getSquareMembers(GetSquareMembersResponse& _return);
  void getSquareMemberRelation(GetSquareMemberRelationResponse& _return, const GetSquareMemberRelationRequest& request);
  void send_getSquareMemberRelation(const GetSquareMemberRelationRequest& request);
  void recv_getSquareMemberRelation(GetSquareMemberRelationResponse& _return);
  void getSquareMemberRelations(GetSquareMemberRelationsResponse& _return, const GetSquareMemberRelationsRequest& request);
  void send_getSquareMemberRelations(const GetSquareMemberRelationsRequest& request);
  void recv_getSquareMemberRelations(GetSquareMemberRelationsResponse& _return);
  void getSquareChatMembers(GetSquareChatMembersResponse& _return, const GetSquareChatMembersRequest& request);
  void send_getSquareChatMembers(const GetSquareChatMembersRequest& request);
  void recv_getSquareChatMembers(GetSquareChatMembersResponse& _return);
  void getSquareChatStatus(GetSquareChatStatusResponse& _return, const GetSquareChatStatusRequest& request);
  void send_getSquareChatStatus(const GetSquareChatStatusRequest& request);
  void recv_getSquareChatStatus(GetSquareChatStatusResponse& _return);
  void getSquareChat(GetSquareChatResponse& _return, const GetSquareChatRequest& request);
  void send_getSquareChat(const GetSquareChatRequest& request);
  void recv_getSquareChat(GetSquareChatResponse& _return);
  void getSquare(GetSquareResponse& _return, const GetSquareRequest& request);
  void send_getSquare(const GetSquareRequest& request);
  void recv_getSquare(GetSquareResponse& _return);
  void getJoinedSquares(GetJoinedSquaresResponse& _return, const GetJoinedSquaresRequest& request);
  void send_getJoinedSquares(const GetJoinedSquaresRequest& request);
  void recv_getJoinedSquares(GetJoinedSquaresResponse& _return);
  void getJoinedSquareChats(GetJoinedSquareChatsResponse& _return, const GetJoinedSquareChatsRequest& request);
  void send_getJoinedSquareChats(const GetJoinedSquareChatsRequest& request);
  void recv_getJoinedSquareChats(GetJoinedSquareChatsResponse& _return);
  void approveSquareMembers(ApproveSquareMembersResponse& _return, const ApproveSquareMembersRequest& request);
  void send_approveSquareMembers(const ApproveSquareMembersRequest& request);
  void recv_approveSquareMembers(ApproveSquareMembersResponse& _return);
  void createSquareChat(CreateSquareChatResponse& _return, const CreateSquareChatRequest& request);
  void send_createSquareChat(const CreateSquareChatRequest& request);
  void recv_createSquareChat(CreateSquareChatResponse& _return);
  void createSquare(CreateSquareResponse& _return, const CreateSquareRequest& request);
  void send_createSquare(const CreateSquareRequest& request);
  void recv_createSquare(CreateSquareResponse& _return);
  void deleteSquareChat(DeleteSquareChatResponse& _return, const DeleteSquareChatRequest& request);
  void send_deleteSquareChat(const DeleteSquareChatRequest& request);
  void recv_deleteSquareChat(DeleteSquareChatResponse& _return);
  void deleteSquare(DeleteSquareResponse& _return, const DeleteSquareRequest& request);
  void send_deleteSquare(const DeleteSquareRequest& request);
  void recv_deleteSquare(DeleteSquareResponse& _return);
  void destroyMessage(DestroyMessageResponse& _return, const DestroyMessageRequest& request);
  void send_destroyMessage(const DestroyMessageRequest& request);
  void recv_destroyMessage(DestroyMessageResponse& _return);
  void getJoinableSquareChats(GetJoinableSquareChatsResponse& _return, const GetJoinableSquareChatsRequest& request);
  void send_getJoinableSquareChats(const GetJoinableSquareChatsRequest& request);
  void recv_getJoinableSquareChats(GetJoinableSquareChatsResponse& _return);
  void getInvitationTicketUrl(GetInvitationTicketUrlResponse& _return, const GetInvitationTicketUrlRequest& request);
  void send_getInvitationTicketUrl(const GetInvitationTicketUrlRequest& request);
  void recv_getInvitationTicketUrl(GetInvitationTicketUrlResponse& _return);
  void findSquareByInvitationTicket(FindSquareByInvitationTicketResponse& _return, const FindSquareByInvitationTicketRequest& request);
  void send_findSquareByInvitationTicket(const FindSquareByInvitationTicketRequest& request);
  void recv_findSquareByInvitationTicket(FindSquareByInvitationTicketResponse& _return);
 protected:
  apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
};

class SquareServiceProcessor : public ::apache::thrift::TDispatchProcessor {
 protected:
  ::apache::thrift::stdcxx::shared_ptr<SquareServiceIf> iface_;
  virtual bool dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext);
 private:
  typedef  void (SquareServiceProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);
  typedef std::map<std::string, ProcessFunction> ProcessMap;
  ProcessMap processMap_;
  void process_getSquareChatAnnouncements(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_deleteSquareChatAnnouncement(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_createSquareChatAnnouncement(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getNoteStatus(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquareStatus(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_reportSquareMember(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_reportSquareMessage(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_reportSquareChat(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_reportSquare(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateSquareMemberRelation(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateSquareAuthority(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateSquareChatMember(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateSquareChat(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_refreshSubscriptions(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_removeSubscriptions(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_rejectSquareMembers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateSquareMembers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateSquareMember(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateSquareFeatureSet(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquareFeatureSet(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_searchSquares(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateSquare(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getCategories(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_searchSquareMembers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_fetchSquareChatEvents(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_fetchMyEvents(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_markAsRead(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquareAuthority(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_sendMessage(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_leaveSquare(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_leaveSquareChat(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_joinSquareChat(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_joinSquare(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_inviteToSquare(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_inviteToSquareChat(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquareMember(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquareMembers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquareMemberRelation(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquareMemberRelations(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquareChatMembers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquareChatStatus(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquareChat(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSquare(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getJoinedSquares(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getJoinedSquareChats(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_approveSquareMembers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_createSquareChat(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_createSquare(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_deleteSquareChat(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_deleteSquare(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_destroyMessage(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getJoinableSquareChats(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getInvitationTicketUrl(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_findSquareByInvitationTicket(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
 public:
  SquareServiceProcessor(::apache::thrift::stdcxx::shared_ptr<SquareServiceIf> iface) :
    iface_(iface) {
    processMap_["getSquareChatAnnouncements"] = &SquareServiceProcessor::process_getSquareChatAnnouncements;
    processMap_["deleteSquareChatAnnouncement"] = &SquareServiceProcessor::process_deleteSquareChatAnnouncement;
    processMap_["createSquareChatAnnouncement"] = &SquareServiceProcessor::process_createSquareChatAnnouncement;
    processMap_["getNoteStatus"] = &SquareServiceProcessor::process_getNoteStatus;
    processMap_["getSquareStatus"] = &SquareServiceProcessor::process_getSquareStatus;
    processMap_["reportSquareMember"] = &SquareServiceProcessor::process_reportSquareMember;
    processMap_["reportSquareMessage"] = &SquareServiceProcessor::process_reportSquareMessage;
    processMap_["reportSquareChat"] = &SquareServiceProcessor::process_reportSquareChat;
    processMap_["reportSquare"] = &SquareServiceProcessor::process_reportSquare;
    processMap_["updateSquareMemberRelation"] = &SquareServiceProcessor::process_updateSquareMemberRelation;
    processMap_["updateSquareAuthority"] = &SquareServiceProcessor::process_updateSquareAuthority;
    processMap_["updateSquareChatMember"] = &SquareServiceProcessor::process_updateSquareChatMember;
    processMap_["updateSquareChat"] = &SquareServiceProcessor::process_updateSquareChat;
    processMap_["refreshSubscriptions"] = &SquareServiceProcessor::process_refreshSubscriptions;
    processMap_["removeSubscriptions"] = &SquareServiceProcessor::process_removeSubscriptions;
    processMap_["rejectSquareMembers"] = &SquareServiceProcessor::process_rejectSquareMembers;
    processMap_["updateSquareMembers"] = &SquareServiceProcessor::process_updateSquareMembers;
    processMap_["updateSquareMember"] = &SquareServiceProcessor::process_updateSquareMember;
    processMap_["updateSquareFeatureSet"] = &SquareServiceProcessor::process_updateSquareFeatureSet;
    processMap_["getSquareFeatureSet"] = &SquareServiceProcessor::process_getSquareFeatureSet;
    processMap_["searchSquares"] = &SquareServiceProcessor::process_searchSquares;
    processMap_["updateSquare"] = &SquareServiceProcessor::process_updateSquare;
    processMap_["getCategories"] = &SquareServiceProcessor::process_getCategories;
    processMap_["searchSquareMembers"] = &SquareServiceProcessor::process_searchSquareMembers;
    processMap_["fetchSquareChatEvents"] = &SquareServiceProcessor::process_fetchSquareChatEvents;
    processMap_["fetchMyEvents"] = &SquareServiceProcessor::process_fetchMyEvents;
    processMap_["markAsRead"] = &SquareServiceProcessor::process_markAsRead;
    processMap_["getSquareAuthority"] = &SquareServiceProcessor::process_getSquareAuthority;
    processMap_["sendMessage"] = &SquareServiceProcessor::process_sendMessage;
    processMap_["leaveSquare"] = &SquareServiceProcessor::process_leaveSquare;
    processMap_["leaveSquareChat"] = &SquareServiceProcessor::process_leaveSquareChat;
    processMap_["joinSquareChat"] = &SquareServiceProcessor::process_joinSquareChat;
    processMap_["joinSquare"] = &SquareServiceProcessor::process_joinSquare;
    processMap_["inviteToSquare"] = &SquareServiceProcessor::process_inviteToSquare;
    processMap_["inviteToSquareChat"] = &SquareServiceProcessor::process_inviteToSquareChat;
    processMap_["getSquareMember"] = &SquareServiceProcessor::process_getSquareMember;
    processMap_["getSquareMembers"] = &SquareServiceProcessor::process_getSquareMembers;
    processMap_["getSquareMemberRelation"] = &SquareServiceProcessor::process_getSquareMemberRelation;
    processMap_["getSquareMemberRelations"] = &SquareServiceProcessor::process_getSquareMemberRelations;
    processMap_["getSquareChatMembers"] = &SquareServiceProcessor::process_getSquareChatMembers;
    processMap_["getSquareChatStatus"] = &SquareServiceProcessor::process_getSquareChatStatus;
    processMap_["getSquareChat"] = &SquareServiceProcessor::process_getSquareChat;
    processMap_["getSquare"] = &SquareServiceProcessor::process_getSquare;
    processMap_["getJoinedSquares"] = &SquareServiceProcessor::process_getJoinedSquares;
    processMap_["getJoinedSquareChats"] = &SquareServiceProcessor::process_getJoinedSquareChats;
    processMap_["approveSquareMembers"] = &SquareServiceProcessor::process_approveSquareMembers;
    processMap_["createSquareChat"] = &SquareServiceProcessor::process_createSquareChat;
    processMap_["createSquare"] = &SquareServiceProcessor::process_createSquare;
    processMap_["deleteSquareChat"] = &SquareServiceProcessor::process_deleteSquareChat;
    processMap_["deleteSquare"] = &SquareServiceProcessor::process_deleteSquare;
    processMap_["destroyMessage"] = &SquareServiceProcessor::process_destroyMessage;
    processMap_["getJoinableSquareChats"] = &SquareServiceProcessor::process_getJoinableSquareChats;
    processMap_["getInvitationTicketUrl"] = &SquareServiceProcessor::process_getInvitationTicketUrl;
    processMap_["findSquareByInvitationTicket"] = &SquareServiceProcessor::process_findSquareByInvitationTicket;
  }

  virtual ~SquareServiceProcessor() {}
};

class SquareServiceProcessorFactory : public ::apache::thrift::TProcessorFactory {
 public:
  SquareServiceProcessorFactory(const ::apache::thrift::stdcxx::shared_ptr< SquareServiceIfFactory >& handlerFactory) :
      handlerFactory_(handlerFactory) {}

  ::apache::thrift::stdcxx::shared_ptr< ::apache::thrift::TProcessor > getProcessor(const ::apache::thrift::TConnectionInfo& connInfo);

 protected:
  ::apache::thrift::stdcxx::shared_ptr< SquareServiceIfFactory > handlerFactory_;
};

class SquareServiceMultiface : virtual public SquareServiceIf {
 public:
  SquareServiceMultiface(std::vector<apache::thrift::stdcxx::shared_ptr<SquareServiceIf> >& ifaces) : ifaces_(ifaces) {
  }
  virtual ~SquareServiceMultiface() {}
 protected:
  std::vector<apache::thrift::stdcxx::shared_ptr<SquareServiceIf> > ifaces_;
  SquareServiceMultiface() {}
  void add(::apache::thrift::stdcxx::shared_ptr<SquareServiceIf> iface) {
    ifaces_.push_back(iface);
  }
 public:
  void getSquareChatAnnouncements(GetSquareChatAnnouncementsResponse& _return, const GetSquareChatAnnouncementsRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareChatAnnouncements(_return, request);
    }
    ifaces_[i]->getSquareChatAnnouncements(_return, request);
    return;
  }

  void deleteSquareChatAnnouncement(DeleteSquareChatAnnouncementResponse& _return, const DeleteSquareChatAnnouncementRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->deleteSquareChatAnnouncement(_return, request);
    }
    ifaces_[i]->deleteSquareChatAnnouncement(_return, request);
    return;
  }

  void createSquareChatAnnouncement(CreateSquareChatAnnouncementResponse& _return, const CreateSquareChatAnnouncementRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->createSquareChatAnnouncement(_return, request);
    }
    ifaces_[i]->createSquareChatAnnouncement(_return, request);
    return;
  }

  void getNoteStatus(GetNoteStatusResponse& _return, const GetNoteStatusRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getNoteStatus(_return, request);
    }
    ifaces_[i]->getNoteStatus(_return, request);
    return;
  }

  void getSquareStatus(GetSquareStatusResponse& _return, const GetSquareStatusRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareStatus(_return, request);
    }
    ifaces_[i]->getSquareStatus(_return, request);
    return;
  }

  void reportSquareMember(ReportSquareMemberResponse& _return, const ReportSquareMemberRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->reportSquareMember(_return, request);
    }
    ifaces_[i]->reportSquareMember(_return, request);
    return;
  }

  void reportSquareMessage(ReportSquareMessageResponse& _return, const ReportSquareMessageRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->reportSquareMessage(_return, request);
    }
    ifaces_[i]->reportSquareMessage(_return, request);
    return;
  }

  void reportSquareChat(ReportSquareChatResponse& _return, const ReportSquareChatRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->reportSquareChat(_return, request);
    }
    ifaces_[i]->reportSquareChat(_return, request);
    return;
  }

  void reportSquare(ReportSquareResponse& _return, const ReportSquareRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->reportSquare(_return, request);
    }
    ifaces_[i]->reportSquare(_return, request);
    return;
  }

  void updateSquareMemberRelation(UpdateSquareMemberRelationResponse& _return, const UpdateSquareMemberRelationRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateSquareMemberRelation(_return, request);
    }
    ifaces_[i]->updateSquareMemberRelation(_return, request);
    return;
  }

  void updateSquareAuthority(UpdateSquareAuthorityResponse& _return, const UpdateSquareAuthorityRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateSquareAuthority(_return, request);
    }
    ifaces_[i]->updateSquareAuthority(_return, request);
    return;
  }

  void updateSquareChatMember(UpdateSquareChatMemberResponse& _return, const UpdateSquareChatMemberRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateSquareChatMember(_return, request);
    }
    ifaces_[i]->updateSquareChatMember(_return, request);
    return;
  }

  void updateSquareChat(UpdateSquareChatResponse& _return, const UpdateSquareChatRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateSquareChat(_return, request);
    }
    ifaces_[i]->updateSquareChat(_return, request);
    return;
  }

  void refreshSubscriptions(RefreshSubscriptionsResponse& _return, const RefreshSubscriptionsRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->refreshSubscriptions(_return, request);
    }
    ifaces_[i]->refreshSubscriptions(_return, request);
    return;
  }

  void removeSubscriptions(RemoveSubscriptionsResponse& _return, const RemoveSubscriptionsRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->removeSubscriptions(_return, request);
    }
    ifaces_[i]->removeSubscriptions(_return, request);
    return;
  }

  void rejectSquareMembers(RejectSquareMembersResponse& _return, const RejectSquareMembersRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->rejectSquareMembers(_return, request);
    }
    ifaces_[i]->rejectSquareMembers(_return, request);
    return;
  }

  void updateSquareMembers(UpdateSquareMembersResponse& _return, const UpdateSquareMembersRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateSquareMembers(_return, request);
    }
    ifaces_[i]->updateSquareMembers(_return, request);
    return;
  }

  void updateSquareMember(UpdateSquareMemberResponse& _return, const UpdateSquareMemberRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateSquareMember(_return, request);
    }
    ifaces_[i]->updateSquareMember(_return, request);
    return;
  }

  void updateSquareFeatureSet(UpdateSquareFeatureSetResponse& _return, const UpdateSquareFeatureSetRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateSquareFeatureSet(_return, request);
    }
    ifaces_[i]->updateSquareFeatureSet(_return, request);
    return;
  }

  void getSquareFeatureSet(GetSquareFeatureSetResponse& _return, const GetSquareFeatureSetRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareFeatureSet(_return, request);
    }
    ifaces_[i]->getSquareFeatureSet(_return, request);
    return;
  }

  void searchSquares(SearchSquaresResponse& _return, const SearchSquaresRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->searchSquares(_return, request);
    }
    ifaces_[i]->searchSquares(_return, request);
    return;
  }

  void updateSquare(UpdateSquareResponse& _return, const UpdateSquareRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateSquare(_return, request);
    }
    ifaces_[i]->updateSquare(_return, request);
    return;
  }

  void getCategories(GetSquareCategoriesResponse& _return, const GetSquareCategoriesRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getCategories(_return, request);
    }
    ifaces_[i]->getCategories(_return, request);
    return;
  }

  void searchSquareMembers(SearchSquareMembersResponse& _return, const SearchSquareMembersRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->searchSquareMembers(_return, request);
    }
    ifaces_[i]->searchSquareMembers(_return, request);
    return;
  }

  void fetchSquareChatEvents(FetchSquareChatEventsResponse& _return, const FetchSquareChatEventsRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->fetchSquareChatEvents(_return, request);
    }
    ifaces_[i]->fetchSquareChatEvents(_return, request);
    return;
  }

  void fetchMyEvents(FetchMyEventsResponse& _return, const FetchMyEventsRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->fetchMyEvents(_return, request);
    }
    ifaces_[i]->fetchMyEvents(_return, request);
    return;
  }

  void markAsRead(MarkAsReadResponse& _return, const MarkAsReadRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->markAsRead(_return, request);
    }
    ifaces_[i]->markAsRead(_return, request);
    return;
  }

  void getSquareAuthority(GetSquareAuthorityResponse& _return, const GetSquareAuthorityRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareAuthority(_return, request);
    }
    ifaces_[i]->getSquareAuthority(_return, request);
    return;
  }

  void sendMessage(SendMessageResponse& _return, const SendMessageRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->sendMessage(_return, request);
    }
    ifaces_[i]->sendMessage(_return, request);
    return;
  }

  void leaveSquare(LeaveSquareResponse& _return, const LeaveSquareRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->leaveSquare(_return, request);
    }
    ifaces_[i]->leaveSquare(_return, request);
    return;
  }

  void leaveSquareChat(LeaveSquareChatResponse& _return, const LeaveSquareChatRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->leaveSquareChat(_return, request);
    }
    ifaces_[i]->leaveSquareChat(_return, request);
    return;
  }

  void joinSquareChat(JoinSquareChatResponse& _return, const JoinSquareChatRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->joinSquareChat(_return, request);
    }
    ifaces_[i]->joinSquareChat(_return, request);
    return;
  }

  void joinSquare(JoinSquareResponse& _return, const JoinSquareRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->joinSquare(_return, request);
    }
    ifaces_[i]->joinSquare(_return, request);
    return;
  }

  void inviteToSquare(InviteToSquareResponse& _return, const InviteToSquareRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->inviteToSquare(_return, request);
    }
    ifaces_[i]->inviteToSquare(_return, request);
    return;
  }

  void inviteToSquareChat(InviteToSquareChatResponse& _return, const InviteToSquareChatRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->inviteToSquareChat(_return, request);
    }
    ifaces_[i]->inviteToSquareChat(_return, request);
    return;
  }

  void getSquareMember(GetSquareMemberResponse& _return, const GetSquareMemberRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareMember(_return, request);
    }
    ifaces_[i]->getSquareMember(_return, request);
    return;
  }

  void getSquareMembers(GetSquareMembersResponse& _return, const GetSquareMembersRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareMembers(_return, request);
    }
    ifaces_[i]->getSquareMembers(_return, request);
    return;
  }

  void getSquareMemberRelation(GetSquareMemberRelationResponse& _return, const GetSquareMemberRelationRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareMemberRelation(_return, request);
    }
    ifaces_[i]->getSquareMemberRelation(_return, request);
    return;
  }

  void getSquareMemberRelations(GetSquareMemberRelationsResponse& _return, const GetSquareMemberRelationsRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareMemberRelations(_return, request);
    }
    ifaces_[i]->getSquareMemberRelations(_return, request);
    return;
  }

  void getSquareChatMembers(GetSquareChatMembersResponse& _return, const GetSquareChatMembersRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareChatMembers(_return, request);
    }
    ifaces_[i]->getSquareChatMembers(_return, request);
    return;
  }

  void getSquareChatStatus(GetSquareChatStatusResponse& _return, const GetSquareChatStatusRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareChatStatus(_return, request);
    }
    ifaces_[i]->getSquareChatStatus(_return, request);
    return;
  }

  void getSquareChat(GetSquareChatResponse& _return, const GetSquareChatRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquareChat(_return, request);
    }
    ifaces_[i]->getSquareChat(_return, request);
    return;
  }

  void getSquare(GetSquareResponse& _return, const GetSquareRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSquare(_return, request);
    }
    ifaces_[i]->getSquare(_return, request);
    return;
  }

  void getJoinedSquares(GetJoinedSquaresResponse& _return, const GetJoinedSquaresRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getJoinedSquares(_return, request);
    }
    ifaces_[i]->getJoinedSquares(_return, request);
    return;
  }

  void getJoinedSquareChats(GetJoinedSquareChatsResponse& _return, const GetJoinedSquareChatsRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getJoinedSquareChats(_return, request);
    }
    ifaces_[i]->getJoinedSquareChats(_return, request);
    return;
  }

  void approveSquareMembers(ApproveSquareMembersResponse& _return, const ApproveSquareMembersRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->approveSquareMembers(_return, request);
    }
    ifaces_[i]->approveSquareMembers(_return, request);
    return;
  }

  void createSquareChat(CreateSquareChatResponse& _return, const CreateSquareChatRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->createSquareChat(_return, request);
    }
    ifaces_[i]->createSquareChat(_return, request);
    return;
  }

  void createSquare(CreateSquareResponse& _return, const CreateSquareRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->createSquare(_return, request);
    }
    ifaces_[i]->createSquare(_return, request);
    return;
  }

  void deleteSquareChat(DeleteSquareChatResponse& _return, const DeleteSquareChatRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->deleteSquareChat(_return, request);
    }
    ifaces_[i]->deleteSquareChat(_return, request);
    return;
  }

  void deleteSquare(DeleteSquareResponse& _return, const DeleteSquareRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->deleteSquare(_return, request);
    }
    ifaces_[i]->deleteSquare(_return, request);
    return;
  }

  void destroyMessage(DestroyMessageResponse& _return, const DestroyMessageRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->destroyMessage(_return, request);
    }
    ifaces_[i]->destroyMessage(_return, request);
    return;
  }

  void getJoinableSquareChats(GetJoinableSquareChatsResponse& _return, const GetJoinableSquareChatsRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getJoinableSquareChats(_return, request);
    }
    ifaces_[i]->getJoinableSquareChats(_return, request);
    return;
  }

  void getInvitationTicketUrl(GetInvitationTicketUrlResponse& _return, const GetInvitationTicketUrlRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getInvitationTicketUrl(_return, request);
    }
    ifaces_[i]->getInvitationTicketUrl(_return, request);
    return;
  }

  void findSquareByInvitationTicket(FindSquareByInvitationTicketResponse& _return, const FindSquareByInvitationTicketRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->findSquareByInvitationTicket(_return, request);
    }
    ifaces_[i]->findSquareByInvitationTicket(_return, request);
    return;
  }

};

// The 'concurrent' client is a thread safe client that correctly handles
// out of order responses.  It is slower than the regular client, so should
// only be used when you need to share a connection among multiple threads
class SquareServiceConcurrentClient : virtual public SquareServiceIf {
 public:
  SquareServiceConcurrentClient(apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  SquareServiceConcurrentClient(apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void getSquareChatAnnouncements(GetSquareChatAnnouncementsResponse& _return, const GetSquareChatAnnouncementsRequest& request);
  int32_t send_getSquareChatAnnouncements(const GetSquareChatAnnouncementsRequest& request);
  void recv_getSquareChatAnnouncements(GetSquareChatAnnouncementsResponse& _return, const int32_t seqid);
  void deleteSquareChatAnnouncement(DeleteSquareChatAnnouncementResponse& _return, const DeleteSquareChatAnnouncementRequest& request);
  int32_t send_deleteSquareChatAnnouncement(const DeleteSquareChatAnnouncementRequest& request);
  void recv_deleteSquareChatAnnouncement(DeleteSquareChatAnnouncementResponse& _return, const int32_t seqid);
  void createSquareChatAnnouncement(CreateSquareChatAnnouncementResponse& _return, const CreateSquareChatAnnouncementRequest& request);
  int32_t send_createSquareChatAnnouncement(const CreateSquareChatAnnouncementRequest& request);
  void recv_createSquareChatAnnouncement(CreateSquareChatAnnouncementResponse& _return, const int32_t seqid);
  void getNoteStatus(GetNoteStatusResponse& _return, const GetNoteStatusRequest& request);
  int32_t send_getNoteStatus(const GetNoteStatusRequest& request);
  void recv_getNoteStatus(GetNoteStatusResponse& _return, const int32_t seqid);
  void getSquareStatus(GetSquareStatusResponse& _return, const GetSquareStatusRequest& request);
  int32_t send_getSquareStatus(const GetSquareStatusRequest& request);
  void recv_getSquareStatus(GetSquareStatusResponse& _return, const int32_t seqid);
  void reportSquareMember(ReportSquareMemberResponse& _return, const ReportSquareMemberRequest& request);
  int32_t send_reportSquareMember(const ReportSquareMemberRequest& request);
  void recv_reportSquareMember(ReportSquareMemberResponse& _return, const int32_t seqid);
  void reportSquareMessage(ReportSquareMessageResponse& _return, const ReportSquareMessageRequest& request);
  int32_t send_reportSquareMessage(const ReportSquareMessageRequest& request);
  void recv_reportSquareMessage(ReportSquareMessageResponse& _return, const int32_t seqid);
  void reportSquareChat(ReportSquareChatResponse& _return, const ReportSquareChatRequest& request);
  int32_t send_reportSquareChat(const ReportSquareChatRequest& request);
  void recv_reportSquareChat(ReportSquareChatResponse& _return, const int32_t seqid);
  void reportSquare(ReportSquareResponse& _return, const ReportSquareRequest& request);
  int32_t send_reportSquare(const ReportSquareRequest& request);
  void recv_reportSquare(ReportSquareResponse& _return, const int32_t seqid);
  void updateSquareMemberRelation(UpdateSquareMemberRelationResponse& _return, const UpdateSquareMemberRelationRequest& request);
  int32_t send_updateSquareMemberRelation(const UpdateSquareMemberRelationRequest& request);
  void recv_updateSquareMemberRelation(UpdateSquareMemberRelationResponse& _return, const int32_t seqid);
  void updateSquareAuthority(UpdateSquareAuthorityResponse& _return, const UpdateSquareAuthorityRequest& request);
  int32_t send_updateSquareAuthority(const UpdateSquareAuthorityRequest& request);
  void recv_updateSquareAuthority(UpdateSquareAuthorityResponse& _return, const int32_t seqid);
  void updateSquareChatMember(UpdateSquareChatMemberResponse& _return, const UpdateSquareChatMemberRequest& request);
  int32_t send_updateSquareChatMember(const UpdateSquareChatMemberRequest& request);
  void recv_updateSquareChatMember(UpdateSquareChatMemberResponse& _return, const int32_t seqid);
  void updateSquareChat(UpdateSquareChatResponse& _return, const UpdateSquareChatRequest& request);
  int32_t send_updateSquareChat(const UpdateSquareChatRequest& request);
  void recv_updateSquareChat(UpdateSquareChatResponse& _return, const int32_t seqid);
  void refreshSubscriptions(RefreshSubscriptionsResponse& _return, const RefreshSubscriptionsRequest& request);
  int32_t send_refreshSubscriptions(const RefreshSubscriptionsRequest& request);
  void recv_refreshSubscriptions(RefreshSubscriptionsResponse& _return, const int32_t seqid);
  void removeSubscriptions(RemoveSubscriptionsResponse& _return, const RemoveSubscriptionsRequest& request);
  int32_t send_removeSubscriptions(const RemoveSubscriptionsRequest& request);
  void recv_removeSubscriptions(RemoveSubscriptionsResponse& _return, const int32_t seqid);
  void rejectSquareMembers(RejectSquareMembersResponse& _return, const RejectSquareMembersRequest& request);
  int32_t send_rejectSquareMembers(const RejectSquareMembersRequest& request);
  void recv_rejectSquareMembers(RejectSquareMembersResponse& _return, const int32_t seqid);
  void updateSquareMembers(UpdateSquareMembersResponse& _return, const UpdateSquareMembersRequest& request);
  int32_t send_updateSquareMembers(const UpdateSquareMembersRequest& request);
  void recv_updateSquareMembers(UpdateSquareMembersResponse& _return, const int32_t seqid);
  void updateSquareMember(UpdateSquareMemberResponse& _return, const UpdateSquareMemberRequest& request);
  int32_t send_updateSquareMember(const UpdateSquareMemberRequest& request);
  void recv_updateSquareMember(UpdateSquareMemberResponse& _return, const int32_t seqid);
  void updateSquareFeatureSet(UpdateSquareFeatureSetResponse& _return, const UpdateSquareFeatureSetRequest& request);
  int32_t send_updateSquareFeatureSet(const UpdateSquareFeatureSetRequest& request);
  void recv_updateSquareFeatureSet(UpdateSquareFeatureSetResponse& _return, const int32_t seqid);
  void getSquareFeatureSet(GetSquareFeatureSetResponse& _return, const GetSquareFeatureSetRequest& request);
  int32_t send_getSquareFeatureSet(const GetSquareFeatureSetRequest& request);
  void recv_getSquareFeatureSet(GetSquareFeatureSetResponse& _return, const int32_t seqid);
  void searchSquares(SearchSquaresResponse& _return, const SearchSquaresRequest& request);
  int32_t send_searchSquares(const SearchSquaresRequest& request);
  void recv_searchSquares(SearchSquaresResponse& _return, const int32_t seqid);
  void updateSquare(UpdateSquareResponse& _return, const UpdateSquareRequest& request);
  int32_t send_updateSquare(const UpdateSquareRequest& request);
  void recv_updateSquare(UpdateSquareResponse& _return, const int32_t seqid);
  void getCategories(GetSquareCategoriesResponse& _return, const GetSquareCategoriesRequest& request);
  int32_t send_getCategories(const GetSquareCategoriesRequest& request);
  void recv_getCategories(GetSquareCategoriesResponse& _return, const int32_t seqid);
  void searchSquareMembers(SearchSquareMembersResponse& _return, const SearchSquareMembersRequest& request);
  int32_t send_searchSquareMembers(const SearchSquareMembersRequest& request);
  void recv_searchSquareMembers(SearchSquareMembersResponse& _return, const int32_t seqid);
  void fetchSquareChatEvents(FetchSquareChatEventsResponse& _return, const FetchSquareChatEventsRequest& request);
  int32_t send_fetchSquareChatEvents(const FetchSquareChatEventsRequest& request);
  void recv_fetchSquareChatEvents(FetchSquareChatEventsResponse& _return, const int32_t seqid);
  void fetchMyEvents(FetchMyEventsResponse& _return, const FetchMyEventsRequest& request);
  int32_t send_fetchMyEvents(const FetchMyEventsRequest& request);
  void recv_fetchMyEvents(FetchMyEventsResponse& _return, const int32_t seqid);
  void markAsRead(MarkAsReadResponse& _return, const MarkAsReadRequest& request);
  int32_t send_markAsRead(const MarkAsReadRequest& request);
  void recv_markAsRead(MarkAsReadResponse& _return, const int32_t seqid);
  void getSquareAuthority(GetSquareAuthorityResponse& _return, const GetSquareAuthorityRequest& request);
  int32_t send_getSquareAuthority(const GetSquareAuthorityRequest& request);
  void recv_getSquareAuthority(GetSquareAuthorityResponse& _return, const int32_t seqid);
  void sendMessage(SendMessageResponse& _return, const SendMessageRequest& request);
  int32_t send_sendMessage(const SendMessageRequest& request);
  void recv_sendMessage(SendMessageResponse& _return, const int32_t seqid);
  void leaveSquare(LeaveSquareResponse& _return, const LeaveSquareRequest& request);
  int32_t send_leaveSquare(const LeaveSquareRequest& request);
  void recv_leaveSquare(LeaveSquareResponse& _return, const int32_t seqid);
  void leaveSquareChat(LeaveSquareChatResponse& _return, const LeaveSquareChatRequest& request);
  int32_t send_leaveSquareChat(const LeaveSquareChatRequest& request);
  void recv_leaveSquareChat(LeaveSquareChatResponse& _return, const int32_t seqid);
  void joinSquareChat(JoinSquareChatResponse& _return, const JoinSquareChatRequest& request);
  int32_t send_joinSquareChat(const JoinSquareChatRequest& request);
  void recv_joinSquareChat(JoinSquareChatResponse& _return, const int32_t seqid);
  void joinSquare(JoinSquareResponse& _return, const JoinSquareRequest& request);
  int32_t send_joinSquare(const JoinSquareRequest& request);
  void recv_joinSquare(JoinSquareResponse& _return, const int32_t seqid);
  void inviteToSquare(InviteToSquareResponse& _return, const InviteToSquareRequest& request);
  int32_t send_inviteToSquare(const InviteToSquareRequest& request);
  void recv_inviteToSquare(InviteToSquareResponse& _return, const int32_t seqid);
  void inviteToSquareChat(InviteToSquareChatResponse& _return, const InviteToSquareChatRequest& request);
  int32_t send_inviteToSquareChat(const InviteToSquareChatRequest& request);
  void recv_inviteToSquareChat(InviteToSquareChatResponse& _return, const int32_t seqid);
  void getSquareMember(GetSquareMemberResponse& _return, const GetSquareMemberRequest& request);
  int32_t send_getSquareMember(const GetSquareMemberRequest& request);
  void recv_getSquareMember(GetSquareMemberResponse& _return, const int32_t seqid);
  void getSquareMembers(GetSquareMembersResponse& _return, const GetSquareMembersRequest& request);
  int32_t send_getSquareMembers(const GetSquareMembersRequest& request);
  void recv_getSquareMembers(GetSquareMembersResponse& _return, const int32_t seqid);
  void getSquareMemberRelation(GetSquareMemberRelationResponse& _return, const GetSquareMemberRelationRequest& request);
  int32_t send_getSquareMemberRelation(const GetSquareMemberRelationRequest& request);
  void recv_getSquareMemberRelation(GetSquareMemberRelationResponse& _return, const int32_t seqid);
  void getSquareMemberRelations(GetSquareMemberRelationsResponse& _return, const GetSquareMemberRelationsRequest& request);
  int32_t send_getSquareMemberRelations(const GetSquareMemberRelationsRequest& request);
  void recv_getSquareMemberRelations(GetSquareMemberRelationsResponse& _return, const int32_t seqid);
  void getSquareChatMembers(GetSquareChatMembersResponse& _return, const GetSquareChatMembersRequest& request);
  int32_t send_getSquareChatMembers(const GetSquareChatMembersRequest& request);
  void recv_getSquareChatMembers(GetSquareChatMembersResponse& _return, const int32_t seqid);
  void getSquareChatStatus(GetSquareChatStatusResponse& _return, const GetSquareChatStatusRequest& request);
  int32_t send_getSquareChatStatus(const GetSquareChatStatusRequest& request);
  void recv_getSquareChatStatus(GetSquareChatStatusResponse& _return, const int32_t seqid);
  void getSquareChat(GetSquareChatResponse& _return, const GetSquareChatRequest& request);
  int32_t send_getSquareChat(const GetSquareChatRequest& request);
  void recv_getSquareChat(GetSquareChatResponse& _return, const int32_t seqid);
  void getSquare(GetSquareResponse& _return, const GetSquareRequest& request);
  int32_t send_getSquare(const GetSquareRequest& request);
  void recv_getSquare(GetSquareResponse& _return, const int32_t seqid);
  void getJoinedSquares(GetJoinedSquaresResponse& _return, const GetJoinedSquaresRequest& request);
  int32_t send_getJoinedSquares(const GetJoinedSquaresRequest& request);
  void recv_getJoinedSquares(GetJoinedSquaresResponse& _return, const int32_t seqid);
  void getJoinedSquareChats(GetJoinedSquareChatsResponse& _return, const GetJoinedSquareChatsRequest& request);
  int32_t send_getJoinedSquareChats(const GetJoinedSquareChatsRequest& request);
  void recv_getJoinedSquareChats(GetJoinedSquareChatsResponse& _return, const int32_t seqid);
  void approveSquareMembers(ApproveSquareMembersResponse& _return, const ApproveSquareMembersRequest& request);
  int32_t send_approveSquareMembers(const ApproveSquareMembersRequest& request);
  void recv_approveSquareMembers(ApproveSquareMembersResponse& _return, const int32_t seqid);
  void createSquareChat(CreateSquareChatResponse& _return, const CreateSquareChatRequest& request);
  int32_t send_createSquareChat(const CreateSquareChatRequest& request);
  void recv_createSquareChat(CreateSquareChatResponse& _return, const int32_t seqid);
  void createSquare(CreateSquareResponse& _return, const CreateSquareRequest& request);
  int32_t send_createSquare(const CreateSquareRequest& request);
  void recv_createSquare(CreateSquareResponse& _return, const int32_t seqid);
  void deleteSquareChat(DeleteSquareChatResponse& _return, const DeleteSquareChatRequest& request);
  int32_t send_deleteSquareChat(const DeleteSquareChatRequest& request);
  void recv_deleteSquareChat(DeleteSquareChatResponse& _return, const int32_t seqid);
  void deleteSquare(DeleteSquareResponse& _return, const DeleteSquareRequest& request);
  int32_t send_deleteSquare(const DeleteSquareRequest& request);
  void recv_deleteSquare(DeleteSquareResponse& _return, const int32_t seqid);
  void destroyMessage(DestroyMessageResponse& _return, const DestroyMessageRequest& request);
  int32_t send_destroyMessage(const DestroyMessageRequest& request);
  void recv_destroyMessage(DestroyMessageResponse& _return, const int32_t seqid);
  void getJoinableSquareChats(GetJoinableSquareChatsResponse& _return, const GetJoinableSquareChatsRequest& request);
  int32_t send_getJoinableSquareChats(const GetJoinableSquareChatsRequest& request);
  void recv_getJoinableSquareChats(GetJoinableSquareChatsResponse& _return, const int32_t seqid);
  void getInvitationTicketUrl(GetInvitationTicketUrlResponse& _return, const GetInvitationTicketUrlRequest& request);
  int32_t send_getInvitationTicketUrl(const GetInvitationTicketUrlRequest& request);
  void recv_getInvitationTicketUrl(GetInvitationTicketUrlResponse& _return, const int32_t seqid);
  void findSquareByInvitationTicket(FindSquareByInvitationTicketResponse& _return, const FindSquareByInvitationTicketRequest& request);
  int32_t send_findSquareByInvitationTicket(const FindSquareByInvitationTicketRequest& request);
  void recv_findSquareByInvitationTicket(FindSquareByInvitationTicketResponse& _return, const int32_t seqid);
 protected:
  apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  apache::thrift::stdcxx::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
  ::apache::thrift::async::TConcurrentClientSyncInfo sync_;
};

#ifdef _MSC_VER
  #pragma warning( pop )
#endif



#endif
