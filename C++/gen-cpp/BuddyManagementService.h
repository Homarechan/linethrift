/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef BuddyManagementService_H
#define BuddyManagementService_H

#include <thrift/TDispatchProcessor.h>
#include <thrift/async/TConcurrentClientSyncInfo.h>
#include <memory>
#include "line_types.h"



#ifdef _MSC_VER
  #pragma warning( push )
  #pragma warning (disable : 4250 ) //inheriting methods via dominance 
#endif

class BuddyManagementServiceIf {
 public:
  virtual ~BuddyManagementServiceIf() {}
  virtual void addBuddyMember(const std::string& requestId, const std::string& userMid) = 0;
  virtual void addBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids) = 0;
  virtual void blockBuddyMember(const std::string& requestId, const std::string& mid) = 0;
  virtual void commitSendMessagesToAll(std::vector<SendBuddyMessageResult> & _return, const std::vector<std::string> & requestIdList) = 0;
  virtual void commitSendMessagesToMids(std::vector<SendBuddyMessageResult> & _return, const std::vector<std::string> & requestIdList, const std::vector<std::string> & mids) = 0;
  virtual bool containsBuddyMember(const std::string& requestId, const std::string& userMid) = 0;
  virtual void downloadMessageContent(std::string& _return, const std::string& requestId, const std::string& messageId) = 0;
  virtual void downloadMessageContentPreview(std::string& _return, const std::string& requestId, const std::string& messageId) = 0;
  virtual void downloadProfileImage(std::string& _return, const std::string& requestId) = 0;
  virtual void downloadProfileImagePreview(std::string& _return, const std::string& requestId) = 0;
  virtual int64_t getActiveMemberCountByBuddyMid(const std::string& buddyMid) = 0;
  virtual void getActiveMemberMidsByBuddyMid(std::vector<std::string> & _return, const std::string& buddyMid) = 0;
  virtual void getAllBuddyMembers(std::vector<std::string> & _return) = 0;
  virtual void getBlockedBuddyMembers(std::vector<std::string> & _return) = 0;
  virtual int64_t getBlockerCountByBuddyMid(const std::string& buddyMid) = 0;
  virtual void getBuddyDetailByMid(BuddyDetail& _return, const std::string& buddyMid) = 0;
  virtual void getBuddyProfile(BuddyProfile& _return) = 0;
  virtual void getContactTicket(Ticket& _return) = 0;
  virtual int64_t getMemberCountByBuddyMid(const std::string& buddyMid) = 0;
  virtual void getSendBuddyMessageResult(SendBuddyMessageResult& _return, const std::string& sendBuddyMessageRequestId) = 0;
  virtual void getSetBuddyOnAirResult(SetBuddyOnAirResult& _return, const std::string& setBuddyOnAirRequestId) = 0;
  virtual void getUpdateBuddyProfileResult(UpdateBuddyProfileResult& _return, const std::string& updateBuddyProfileRequestId) = 0;
  virtual bool isBuddyOnAirByMid(const std::string& buddyMid) = 0;
  virtual void linkAndSendBuddyContentMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& sourceContentId) = 0;
  virtual void linkAndSendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& sourceContentId, const std::vector<std::string> & mids) = 0;
  virtual void notifyBuddyBlocked(const std::string& buddyMid, const std::string& blockerMid) = 0;
  virtual void notifyBuddyUnblocked(const std::string& buddyMid, const std::string& blockerMid) = 0;
  virtual void registerBuddy(std::string& _return, const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMeessage, const std::string& picture, const std::map<std::string, std::string> & settings) = 0;
  virtual void registerBuddyAdmin(std::string& _return, const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMessage, const std::string& picture) = 0;
  virtual void reissueContactTicket(std::string& _return, const int64_t expirationTime, const int32_t maxUseCount) = 0;
  virtual void removeBuddyMember(const std::string& requestId, const std::string& userMid) = 0;
  virtual void removeBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids) = 0;
  virtual void sendBuddyContentMessageToAll(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& content) = 0;
  virtual void sendBuddyContentMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& content) = 0;
  virtual void sendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids) = 0;
  virtual void sendBuddyContentMessageToMidsAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids) = 0;
  virtual void sendBuddyMessageToAll(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg) = 0;
  virtual void sendBuddyMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg) = 0;
  virtual void sendBuddyMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::vector<std::string> & mids) = 0;
  virtual void sendBuddyMessageToMidsAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::vector<std::string> & mids) = 0;
  virtual void sendIndividualEventToAllAsync(const std::string& requestId, const std::string& buddyMid, const NotificationStatus::type notificationStatus) = 0;
  virtual void setBuddyOnAir(SetBuddyOnAirResult& _return, const std::string& requestId, const bool onAir) = 0;
  virtual void setBuddyOnAirAsync(std::string& _return, const std::string& requestId, const bool onAir) = 0;
  virtual void storeMessage(SendBuddyMessageResult& _return, const std::string& requestId, const BuddyMessageRequest& messageRequest) = 0;
  virtual void unblockBuddyMember(const std::string& requestId, const std::string& mid) = 0;
  virtual void unregisterBuddy(const std::string& requestId) = 0;
  virtual void unregisterBuddyAdmin(const std::string& requestId) = 0;
  virtual void updateBuddyAdminProfileAttribute(const std::string& requestId, const std::map<std::string, std::string> & attributes) = 0;
  virtual void updateBuddyAdminProfileImage(const std::string& requestId, const std::string& picture) = 0;
  virtual void updateBuddyProfileAttributes(UpdateBuddyProfileResult& _return, const std::string& requestId, const std::map<std::string, std::string> & attributes) = 0;
  virtual void updateBuddyProfileAttributesAsync(std::string& _return, const std::string& requestId, const std::map<std::string, std::string> & attributes) = 0;
  virtual void updateBuddyProfileImage(UpdateBuddyProfileResult& _return, const std::string& requestId, const std::string& image) = 0;
  virtual void updateBuddyProfileImageAsync(std::string& _return, const std::string& requestId, const std::string& image) = 0;
  virtual void updateBuddySearchId(const std::string& requestId, const std::string& searchId) = 0;
  virtual void updateBuddySettings(const std::map<std::string, std::string> & settings) = 0;
  virtual void uploadBuddyContent(std::string& _return, const ContentType::type contentType, const std::string& content) = 0;
};

class BuddyManagementServiceIfFactory {
 public:
  typedef BuddyManagementServiceIf Handler;

  virtual ~BuddyManagementServiceIfFactory() {}

  virtual BuddyManagementServiceIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo) = 0;
  virtual void releaseHandler(BuddyManagementServiceIf* /* handler */) = 0;
};

class BuddyManagementServiceIfSingletonFactory : virtual public BuddyManagementServiceIfFactory {
 public:
  BuddyManagementServiceIfSingletonFactory(const ::std::shared_ptr<BuddyManagementServiceIf>& iface) : iface_(iface) {}
  virtual ~BuddyManagementServiceIfSingletonFactory() {}

  virtual BuddyManagementServiceIf* getHandler(const ::apache::thrift::TConnectionInfo&) {
    return iface_.get();
  }
  virtual void releaseHandler(BuddyManagementServiceIf* /* handler */) {}

 protected:
  ::std::shared_ptr<BuddyManagementServiceIf> iface_;
};

class BuddyManagementServiceNull : virtual public BuddyManagementServiceIf {
 public:
  virtual ~BuddyManagementServiceNull() {}
  void addBuddyMember(const std::string& /* requestId */, const std::string& /* userMid */) {
    return;
  }
  void addBuddyMembers(const std::string& /* requestId */, const std::vector<std::string> & /* userMids */) {
    return;
  }
  void blockBuddyMember(const std::string& /* requestId */, const std::string& /* mid */) {
    return;
  }
  void commitSendMessagesToAll(std::vector<SendBuddyMessageResult> & /* _return */, const std::vector<std::string> & /* requestIdList */) {
    return;
  }
  void commitSendMessagesToMids(std::vector<SendBuddyMessageResult> & /* _return */, const std::vector<std::string> & /* requestIdList */, const std::vector<std::string> & /* mids */) {
    return;
  }
  bool containsBuddyMember(const std::string& /* requestId */, const std::string& /* userMid */) {
    bool _return = false;
    return _return;
  }
  void downloadMessageContent(std::string& /* _return */, const std::string& /* requestId */, const std::string& /* messageId */) {
    return;
  }
  void downloadMessageContentPreview(std::string& /* _return */, const std::string& /* requestId */, const std::string& /* messageId */) {
    return;
  }
  void downloadProfileImage(std::string& /* _return */, const std::string& /* requestId */) {
    return;
  }
  void downloadProfileImagePreview(std::string& /* _return */, const std::string& /* requestId */) {
    return;
  }
  int64_t getActiveMemberCountByBuddyMid(const std::string& /* buddyMid */) {
    int64_t _return = 0;
    return _return;
  }
  void getActiveMemberMidsByBuddyMid(std::vector<std::string> & /* _return */, const std::string& /* buddyMid */) {
    return;
  }
  void getAllBuddyMembers(std::vector<std::string> & /* _return */) {
    return;
  }
  void getBlockedBuddyMembers(std::vector<std::string> & /* _return */) {
    return;
  }
  int64_t getBlockerCountByBuddyMid(const std::string& /* buddyMid */) {
    int64_t _return = 0;
    return _return;
  }
  void getBuddyDetailByMid(BuddyDetail& /* _return */, const std::string& /* buddyMid */) {
    return;
  }
  void getBuddyProfile(BuddyProfile& /* _return */) {
    return;
  }
  void getContactTicket(Ticket& /* _return */) {
    return;
  }
  int64_t getMemberCountByBuddyMid(const std::string& /* buddyMid */) {
    int64_t _return = 0;
    return _return;
  }
  void getSendBuddyMessageResult(SendBuddyMessageResult& /* _return */, const std::string& /* sendBuddyMessageRequestId */) {
    return;
  }
  void getSetBuddyOnAirResult(SetBuddyOnAirResult& /* _return */, const std::string& /* setBuddyOnAirRequestId */) {
    return;
  }
  void getUpdateBuddyProfileResult(UpdateBuddyProfileResult& /* _return */, const std::string& /* updateBuddyProfileRequestId */) {
    return;
  }
  bool isBuddyOnAirByMid(const std::string& /* buddyMid */) {
    bool _return = false;
    return _return;
  }
  void linkAndSendBuddyContentMessageToAllAsync(std::string& /* _return */, const std::string& /* requestId */, const Message& /* msg */, const std::string& /* sourceContentId */) {
    return;
  }
  void linkAndSendBuddyContentMessageToMids(SendBuddyMessageResult& /* _return */, const std::string& /* requestId */, const Message& /* msg */, const std::string& /* sourceContentId */, const std::vector<std::string> & /* mids */) {
    return;
  }
  void notifyBuddyBlocked(const std::string& /* buddyMid */, const std::string& /* blockerMid */) {
    return;
  }
  void notifyBuddyUnblocked(const std::string& /* buddyMid */, const std::string& /* blockerMid */) {
    return;
  }
  void registerBuddy(std::string& /* _return */, const std::string& /* buddyId */, const std::string& /* searchId */, const std::string& /* displayName */, const std::string& /* statusMeessage */, const std::string& /* picture */, const std::map<std::string, std::string> & /* settings */) {
    return;
  }
  void registerBuddyAdmin(std::string& /* _return */, const std::string& /* buddyId */, const std::string& /* searchId */, const std::string& /* displayName */, const std::string& /* statusMessage */, const std::string& /* picture */) {
    return;
  }
  void reissueContactTicket(std::string& /* _return */, const int64_t /* expirationTime */, const int32_t /* maxUseCount */) {
    return;
  }
  void removeBuddyMember(const std::string& /* requestId */, const std::string& /* userMid */) {
    return;
  }
  void removeBuddyMembers(const std::string& /* requestId */, const std::vector<std::string> & /* userMids */) {
    return;
  }
  void sendBuddyContentMessageToAll(SendBuddyMessageResult& /* _return */, const std::string& /* requestId */, const Message& /* msg */, const std::string& /* content */) {
    return;
  }
  void sendBuddyContentMessageToAllAsync(std::string& /* _return */, const std::string& /* requestId */, const Message& /* msg */, const std::string& /* content */) {
    return;
  }
  void sendBuddyContentMessageToMids(SendBuddyMessageResult& /* _return */, const std::string& /* requestId */, const Message& /* msg */, const std::string& /* content */, const std::vector<std::string> & /* mids */) {
    return;
  }
  void sendBuddyContentMessageToMidsAsync(std::string& /* _return */, const std::string& /* requestId */, const Message& /* msg */, const std::string& /* content */, const std::vector<std::string> & /* mids */) {
    return;
  }
  void sendBuddyMessageToAll(SendBuddyMessageResult& /* _return */, const std::string& /* requestId */, const Message& /* msg */) {
    return;
  }
  void sendBuddyMessageToAllAsync(std::string& /* _return */, const std::string& /* requestId */, const Message& /* msg */) {
    return;
  }
  void sendBuddyMessageToMids(SendBuddyMessageResult& /* _return */, const std::string& /* requestId */, const Message& /* msg */, const std::vector<std::string> & /* mids */) {
    return;
  }
  void sendBuddyMessageToMidsAsync(std::string& /* _return */, const std::string& /* requestId */, const Message& /* msg */, const std::vector<std::string> & /* mids */) {
    return;
  }
  void sendIndividualEventToAllAsync(const std::string& /* requestId */, const std::string& /* buddyMid */, const NotificationStatus::type /* notificationStatus */) {
    return;
  }
  void setBuddyOnAir(SetBuddyOnAirResult& /* _return */, const std::string& /* requestId */, const bool /* onAir */) {
    return;
  }
  void setBuddyOnAirAsync(std::string& /* _return */, const std::string& /* requestId */, const bool /* onAir */) {
    return;
  }
  void storeMessage(SendBuddyMessageResult& /* _return */, const std::string& /* requestId */, const BuddyMessageRequest& /* messageRequest */) {
    return;
  }
  void unblockBuddyMember(const std::string& /* requestId */, const std::string& /* mid */) {
    return;
  }
  void unregisterBuddy(const std::string& /* requestId */) {
    return;
  }
  void unregisterBuddyAdmin(const std::string& /* requestId */) {
    return;
  }
  void updateBuddyAdminProfileAttribute(const std::string& /* requestId */, const std::map<std::string, std::string> & /* attributes */) {
    return;
  }
  void updateBuddyAdminProfileImage(const std::string& /* requestId */, const std::string& /* picture */) {
    return;
  }
  void updateBuddyProfileAttributes(UpdateBuddyProfileResult& /* _return */, const std::string& /* requestId */, const std::map<std::string, std::string> & /* attributes */) {
    return;
  }
  void updateBuddyProfileAttributesAsync(std::string& /* _return */, const std::string& /* requestId */, const std::map<std::string, std::string> & /* attributes */) {
    return;
  }
  void updateBuddyProfileImage(UpdateBuddyProfileResult& /* _return */, const std::string& /* requestId */, const std::string& /* image */) {
    return;
  }
  void updateBuddyProfileImageAsync(std::string& /* _return */, const std::string& /* requestId */, const std::string& /* image */) {
    return;
  }
  void updateBuddySearchId(const std::string& /* requestId */, const std::string& /* searchId */) {
    return;
  }
  void updateBuddySettings(const std::map<std::string, std::string> & /* settings */) {
    return;
  }
  void uploadBuddyContent(std::string& /* _return */, const ContentType::type /* contentType */, const std::string& /* content */) {
    return;
  }
};

typedef struct _BuddyManagementService_addBuddyMember_args__isset {
  _BuddyManagementService_addBuddyMember_args__isset() : requestId(false), userMid(false) {}
  bool requestId :1;
  bool userMid :1;
} _BuddyManagementService_addBuddyMember_args__isset;

class BuddyManagementService_addBuddyMember_args {
 public:

  BuddyManagementService_addBuddyMember_args(const BuddyManagementService_addBuddyMember_args&);
  BuddyManagementService_addBuddyMember_args& operator=(const BuddyManagementService_addBuddyMember_args&);
  BuddyManagementService_addBuddyMember_args() : requestId(), userMid() {
  }

  virtual ~BuddyManagementService_addBuddyMember_args() noexcept;
  std::string requestId;
  std::string userMid;

  _BuddyManagementService_addBuddyMember_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_userMid(const std::string& val);

  bool operator == (const BuddyManagementService_addBuddyMember_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(userMid == rhs.userMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_addBuddyMember_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_addBuddyMember_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_addBuddyMember_pargs {
 public:


  virtual ~BuddyManagementService_addBuddyMember_pargs() noexcept;
  const std::string* requestId;
  const std::string* userMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_addBuddyMember_result__isset {
  _BuddyManagementService_addBuddyMember_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_addBuddyMember_result__isset;

class BuddyManagementService_addBuddyMember_result {
 public:

  BuddyManagementService_addBuddyMember_result(const BuddyManagementService_addBuddyMember_result&);
  BuddyManagementService_addBuddyMember_result& operator=(const BuddyManagementService_addBuddyMember_result&);
  BuddyManagementService_addBuddyMember_result() {
  }

  virtual ~BuddyManagementService_addBuddyMember_result() noexcept;
  TalkException e;

  _BuddyManagementService_addBuddyMember_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_addBuddyMember_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_addBuddyMember_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_addBuddyMember_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_addBuddyMember_presult__isset {
  _BuddyManagementService_addBuddyMember_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_addBuddyMember_presult__isset;

class BuddyManagementService_addBuddyMember_presult {
 public:


  virtual ~BuddyManagementService_addBuddyMember_presult() noexcept;
  TalkException e;

  _BuddyManagementService_addBuddyMember_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_addBuddyMembers_args__isset {
  _BuddyManagementService_addBuddyMembers_args__isset() : requestId(false), userMids(false) {}
  bool requestId :1;
  bool userMids :1;
} _BuddyManagementService_addBuddyMembers_args__isset;

class BuddyManagementService_addBuddyMembers_args {
 public:

  BuddyManagementService_addBuddyMembers_args(const BuddyManagementService_addBuddyMembers_args&);
  BuddyManagementService_addBuddyMembers_args& operator=(const BuddyManagementService_addBuddyMembers_args&);
  BuddyManagementService_addBuddyMembers_args() : requestId() {
  }

  virtual ~BuddyManagementService_addBuddyMembers_args() noexcept;
  std::string requestId;
  std::vector<std::string>  userMids;

  _BuddyManagementService_addBuddyMembers_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_userMids(const std::vector<std::string> & val);

  bool operator == (const BuddyManagementService_addBuddyMembers_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(userMids == rhs.userMids))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_addBuddyMembers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_addBuddyMembers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_addBuddyMembers_pargs {
 public:


  virtual ~BuddyManagementService_addBuddyMembers_pargs() noexcept;
  const std::string* requestId;
  const std::vector<std::string> * userMids;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_addBuddyMembers_result__isset {
  _BuddyManagementService_addBuddyMembers_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_addBuddyMembers_result__isset;

class BuddyManagementService_addBuddyMembers_result {
 public:

  BuddyManagementService_addBuddyMembers_result(const BuddyManagementService_addBuddyMembers_result&);
  BuddyManagementService_addBuddyMembers_result& operator=(const BuddyManagementService_addBuddyMembers_result&);
  BuddyManagementService_addBuddyMembers_result() {
  }

  virtual ~BuddyManagementService_addBuddyMembers_result() noexcept;
  TalkException e;

  _BuddyManagementService_addBuddyMembers_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_addBuddyMembers_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_addBuddyMembers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_addBuddyMembers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_addBuddyMembers_presult__isset {
  _BuddyManagementService_addBuddyMembers_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_addBuddyMembers_presult__isset;

class BuddyManagementService_addBuddyMembers_presult {
 public:


  virtual ~BuddyManagementService_addBuddyMembers_presult() noexcept;
  TalkException e;

  _BuddyManagementService_addBuddyMembers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_blockBuddyMember_args__isset {
  _BuddyManagementService_blockBuddyMember_args__isset() : requestId(false), mid(false) {}
  bool requestId :1;
  bool mid :1;
} _BuddyManagementService_blockBuddyMember_args__isset;

class BuddyManagementService_blockBuddyMember_args {
 public:

  BuddyManagementService_blockBuddyMember_args(const BuddyManagementService_blockBuddyMember_args&);
  BuddyManagementService_blockBuddyMember_args& operator=(const BuddyManagementService_blockBuddyMember_args&);
  BuddyManagementService_blockBuddyMember_args() : requestId(), mid() {
  }

  virtual ~BuddyManagementService_blockBuddyMember_args() noexcept;
  std::string requestId;
  std::string mid;

  _BuddyManagementService_blockBuddyMember_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_mid(const std::string& val);

  bool operator == (const BuddyManagementService_blockBuddyMember_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(mid == rhs.mid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_blockBuddyMember_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_blockBuddyMember_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_blockBuddyMember_pargs {
 public:


  virtual ~BuddyManagementService_blockBuddyMember_pargs() noexcept;
  const std::string* requestId;
  const std::string* mid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_blockBuddyMember_result__isset {
  _BuddyManagementService_blockBuddyMember_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_blockBuddyMember_result__isset;

class BuddyManagementService_blockBuddyMember_result {
 public:

  BuddyManagementService_blockBuddyMember_result(const BuddyManagementService_blockBuddyMember_result&);
  BuddyManagementService_blockBuddyMember_result& operator=(const BuddyManagementService_blockBuddyMember_result&);
  BuddyManagementService_blockBuddyMember_result() {
  }

  virtual ~BuddyManagementService_blockBuddyMember_result() noexcept;
  TalkException e;

  _BuddyManagementService_blockBuddyMember_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_blockBuddyMember_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_blockBuddyMember_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_blockBuddyMember_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_blockBuddyMember_presult__isset {
  _BuddyManagementService_blockBuddyMember_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_blockBuddyMember_presult__isset;

class BuddyManagementService_blockBuddyMember_presult {
 public:


  virtual ~BuddyManagementService_blockBuddyMember_presult() noexcept;
  TalkException e;

  _BuddyManagementService_blockBuddyMember_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_commitSendMessagesToAll_args__isset {
  _BuddyManagementService_commitSendMessagesToAll_args__isset() : requestIdList(false) {}
  bool requestIdList :1;
} _BuddyManagementService_commitSendMessagesToAll_args__isset;

class BuddyManagementService_commitSendMessagesToAll_args {
 public:

  BuddyManagementService_commitSendMessagesToAll_args(const BuddyManagementService_commitSendMessagesToAll_args&);
  BuddyManagementService_commitSendMessagesToAll_args& operator=(const BuddyManagementService_commitSendMessagesToAll_args&);
  BuddyManagementService_commitSendMessagesToAll_args() {
  }

  virtual ~BuddyManagementService_commitSendMessagesToAll_args() noexcept;
  std::vector<std::string>  requestIdList;

  _BuddyManagementService_commitSendMessagesToAll_args__isset __isset;

  void __set_requestIdList(const std::vector<std::string> & val);

  bool operator == (const BuddyManagementService_commitSendMessagesToAll_args & rhs) const
  {
    if (!(requestIdList == rhs.requestIdList))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_commitSendMessagesToAll_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_commitSendMessagesToAll_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_commitSendMessagesToAll_pargs {
 public:


  virtual ~BuddyManagementService_commitSendMessagesToAll_pargs() noexcept;
  const std::vector<std::string> * requestIdList;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_commitSendMessagesToAll_result__isset {
  _BuddyManagementService_commitSendMessagesToAll_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_commitSendMessagesToAll_result__isset;

class BuddyManagementService_commitSendMessagesToAll_result {
 public:

  BuddyManagementService_commitSendMessagesToAll_result(const BuddyManagementService_commitSendMessagesToAll_result&);
  BuddyManagementService_commitSendMessagesToAll_result& operator=(const BuddyManagementService_commitSendMessagesToAll_result&);
  BuddyManagementService_commitSendMessagesToAll_result() {
  }

  virtual ~BuddyManagementService_commitSendMessagesToAll_result() noexcept;
  std::vector<SendBuddyMessageResult>  success;
  TalkException e;

  _BuddyManagementService_commitSendMessagesToAll_result__isset __isset;

  void __set_success(const std::vector<SendBuddyMessageResult> & val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_commitSendMessagesToAll_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_commitSendMessagesToAll_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_commitSendMessagesToAll_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_commitSendMessagesToAll_presult__isset {
  _BuddyManagementService_commitSendMessagesToAll_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_commitSendMessagesToAll_presult__isset;

class BuddyManagementService_commitSendMessagesToAll_presult {
 public:


  virtual ~BuddyManagementService_commitSendMessagesToAll_presult() noexcept;
  std::vector<SendBuddyMessageResult> * success;
  TalkException e;

  _BuddyManagementService_commitSendMessagesToAll_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_commitSendMessagesToMids_args__isset {
  _BuddyManagementService_commitSendMessagesToMids_args__isset() : requestIdList(false), mids(false) {}
  bool requestIdList :1;
  bool mids :1;
} _BuddyManagementService_commitSendMessagesToMids_args__isset;

class BuddyManagementService_commitSendMessagesToMids_args {
 public:

  BuddyManagementService_commitSendMessagesToMids_args(const BuddyManagementService_commitSendMessagesToMids_args&);
  BuddyManagementService_commitSendMessagesToMids_args& operator=(const BuddyManagementService_commitSendMessagesToMids_args&);
  BuddyManagementService_commitSendMessagesToMids_args() {
  }

  virtual ~BuddyManagementService_commitSendMessagesToMids_args() noexcept;
  std::vector<std::string>  requestIdList;
  std::vector<std::string>  mids;

  _BuddyManagementService_commitSendMessagesToMids_args__isset __isset;

  void __set_requestIdList(const std::vector<std::string> & val);

  void __set_mids(const std::vector<std::string> & val);

  bool operator == (const BuddyManagementService_commitSendMessagesToMids_args & rhs) const
  {
    if (!(requestIdList == rhs.requestIdList))
      return false;
    if (!(mids == rhs.mids))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_commitSendMessagesToMids_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_commitSendMessagesToMids_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_commitSendMessagesToMids_pargs {
 public:


  virtual ~BuddyManagementService_commitSendMessagesToMids_pargs() noexcept;
  const std::vector<std::string> * requestIdList;
  const std::vector<std::string> * mids;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_commitSendMessagesToMids_result__isset {
  _BuddyManagementService_commitSendMessagesToMids_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_commitSendMessagesToMids_result__isset;

class BuddyManagementService_commitSendMessagesToMids_result {
 public:

  BuddyManagementService_commitSendMessagesToMids_result(const BuddyManagementService_commitSendMessagesToMids_result&);
  BuddyManagementService_commitSendMessagesToMids_result& operator=(const BuddyManagementService_commitSendMessagesToMids_result&);
  BuddyManagementService_commitSendMessagesToMids_result() {
  }

  virtual ~BuddyManagementService_commitSendMessagesToMids_result() noexcept;
  std::vector<SendBuddyMessageResult>  success;
  TalkException e;

  _BuddyManagementService_commitSendMessagesToMids_result__isset __isset;

  void __set_success(const std::vector<SendBuddyMessageResult> & val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_commitSendMessagesToMids_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_commitSendMessagesToMids_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_commitSendMessagesToMids_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_commitSendMessagesToMids_presult__isset {
  _BuddyManagementService_commitSendMessagesToMids_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_commitSendMessagesToMids_presult__isset;

class BuddyManagementService_commitSendMessagesToMids_presult {
 public:


  virtual ~BuddyManagementService_commitSendMessagesToMids_presult() noexcept;
  std::vector<SendBuddyMessageResult> * success;
  TalkException e;

  _BuddyManagementService_commitSendMessagesToMids_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_containsBuddyMember_args__isset {
  _BuddyManagementService_containsBuddyMember_args__isset() : requestId(false), userMid(false) {}
  bool requestId :1;
  bool userMid :1;
} _BuddyManagementService_containsBuddyMember_args__isset;

class BuddyManagementService_containsBuddyMember_args {
 public:

  BuddyManagementService_containsBuddyMember_args(const BuddyManagementService_containsBuddyMember_args&);
  BuddyManagementService_containsBuddyMember_args& operator=(const BuddyManagementService_containsBuddyMember_args&);
  BuddyManagementService_containsBuddyMember_args() : requestId(), userMid() {
  }

  virtual ~BuddyManagementService_containsBuddyMember_args() noexcept;
  std::string requestId;
  std::string userMid;

  _BuddyManagementService_containsBuddyMember_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_userMid(const std::string& val);

  bool operator == (const BuddyManagementService_containsBuddyMember_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(userMid == rhs.userMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_containsBuddyMember_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_containsBuddyMember_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_containsBuddyMember_pargs {
 public:


  virtual ~BuddyManagementService_containsBuddyMember_pargs() noexcept;
  const std::string* requestId;
  const std::string* userMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_containsBuddyMember_result__isset {
  _BuddyManagementService_containsBuddyMember_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_containsBuddyMember_result__isset;

class BuddyManagementService_containsBuddyMember_result {
 public:

  BuddyManagementService_containsBuddyMember_result(const BuddyManagementService_containsBuddyMember_result&);
  BuddyManagementService_containsBuddyMember_result& operator=(const BuddyManagementService_containsBuddyMember_result&);
  BuddyManagementService_containsBuddyMember_result() : success(0) {
  }

  virtual ~BuddyManagementService_containsBuddyMember_result() noexcept;
  bool success;
  TalkException e;

  _BuddyManagementService_containsBuddyMember_result__isset __isset;

  void __set_success(const bool val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_containsBuddyMember_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_containsBuddyMember_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_containsBuddyMember_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_containsBuddyMember_presult__isset {
  _BuddyManagementService_containsBuddyMember_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_containsBuddyMember_presult__isset;

class BuddyManagementService_containsBuddyMember_presult {
 public:


  virtual ~BuddyManagementService_containsBuddyMember_presult() noexcept;
  bool* success;
  TalkException e;

  _BuddyManagementService_containsBuddyMember_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_downloadMessageContent_args__isset {
  _BuddyManagementService_downloadMessageContent_args__isset() : requestId(false), messageId(false) {}
  bool requestId :1;
  bool messageId :1;
} _BuddyManagementService_downloadMessageContent_args__isset;

class BuddyManagementService_downloadMessageContent_args {
 public:

  BuddyManagementService_downloadMessageContent_args(const BuddyManagementService_downloadMessageContent_args&);
  BuddyManagementService_downloadMessageContent_args& operator=(const BuddyManagementService_downloadMessageContent_args&);
  BuddyManagementService_downloadMessageContent_args() : requestId(), messageId() {
  }

  virtual ~BuddyManagementService_downloadMessageContent_args() noexcept;
  std::string requestId;
  std::string messageId;

  _BuddyManagementService_downloadMessageContent_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_messageId(const std::string& val);

  bool operator == (const BuddyManagementService_downloadMessageContent_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(messageId == rhs.messageId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_downloadMessageContent_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_downloadMessageContent_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_downloadMessageContent_pargs {
 public:


  virtual ~BuddyManagementService_downloadMessageContent_pargs() noexcept;
  const std::string* requestId;
  const std::string* messageId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_downloadMessageContent_result__isset {
  _BuddyManagementService_downloadMessageContent_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_downloadMessageContent_result__isset;

class BuddyManagementService_downloadMessageContent_result {
 public:

  BuddyManagementService_downloadMessageContent_result(const BuddyManagementService_downloadMessageContent_result&);
  BuddyManagementService_downloadMessageContent_result& operator=(const BuddyManagementService_downloadMessageContent_result&);
  BuddyManagementService_downloadMessageContent_result() : success() {
  }

  virtual ~BuddyManagementService_downloadMessageContent_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_downloadMessageContent_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_downloadMessageContent_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_downloadMessageContent_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_downloadMessageContent_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_downloadMessageContent_presult__isset {
  _BuddyManagementService_downloadMessageContent_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_downloadMessageContent_presult__isset;

class BuddyManagementService_downloadMessageContent_presult {
 public:


  virtual ~BuddyManagementService_downloadMessageContent_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_downloadMessageContent_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_downloadMessageContentPreview_args__isset {
  _BuddyManagementService_downloadMessageContentPreview_args__isset() : requestId(false), messageId(false) {}
  bool requestId :1;
  bool messageId :1;
} _BuddyManagementService_downloadMessageContentPreview_args__isset;

class BuddyManagementService_downloadMessageContentPreview_args {
 public:

  BuddyManagementService_downloadMessageContentPreview_args(const BuddyManagementService_downloadMessageContentPreview_args&);
  BuddyManagementService_downloadMessageContentPreview_args& operator=(const BuddyManagementService_downloadMessageContentPreview_args&);
  BuddyManagementService_downloadMessageContentPreview_args() : requestId(), messageId() {
  }

  virtual ~BuddyManagementService_downloadMessageContentPreview_args() noexcept;
  std::string requestId;
  std::string messageId;

  _BuddyManagementService_downloadMessageContentPreview_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_messageId(const std::string& val);

  bool operator == (const BuddyManagementService_downloadMessageContentPreview_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(messageId == rhs.messageId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_downloadMessageContentPreview_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_downloadMessageContentPreview_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_downloadMessageContentPreview_pargs {
 public:


  virtual ~BuddyManagementService_downloadMessageContentPreview_pargs() noexcept;
  const std::string* requestId;
  const std::string* messageId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_downloadMessageContentPreview_result__isset {
  _BuddyManagementService_downloadMessageContentPreview_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_downloadMessageContentPreview_result__isset;

class BuddyManagementService_downloadMessageContentPreview_result {
 public:

  BuddyManagementService_downloadMessageContentPreview_result(const BuddyManagementService_downloadMessageContentPreview_result&);
  BuddyManagementService_downloadMessageContentPreview_result& operator=(const BuddyManagementService_downloadMessageContentPreview_result&);
  BuddyManagementService_downloadMessageContentPreview_result() : success() {
  }

  virtual ~BuddyManagementService_downloadMessageContentPreview_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_downloadMessageContentPreview_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_downloadMessageContentPreview_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_downloadMessageContentPreview_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_downloadMessageContentPreview_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_downloadMessageContentPreview_presult__isset {
  _BuddyManagementService_downloadMessageContentPreview_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_downloadMessageContentPreview_presult__isset;

class BuddyManagementService_downloadMessageContentPreview_presult {
 public:


  virtual ~BuddyManagementService_downloadMessageContentPreview_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_downloadMessageContentPreview_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_downloadProfileImage_args__isset {
  _BuddyManagementService_downloadProfileImage_args__isset() : requestId(false) {}
  bool requestId :1;
} _BuddyManagementService_downloadProfileImage_args__isset;

class BuddyManagementService_downloadProfileImage_args {
 public:

  BuddyManagementService_downloadProfileImage_args(const BuddyManagementService_downloadProfileImage_args&);
  BuddyManagementService_downloadProfileImage_args& operator=(const BuddyManagementService_downloadProfileImage_args&);
  BuddyManagementService_downloadProfileImage_args() : requestId() {
  }

  virtual ~BuddyManagementService_downloadProfileImage_args() noexcept;
  std::string requestId;

  _BuddyManagementService_downloadProfileImage_args__isset __isset;

  void __set_requestId(const std::string& val);

  bool operator == (const BuddyManagementService_downloadProfileImage_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_downloadProfileImage_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_downloadProfileImage_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_downloadProfileImage_pargs {
 public:


  virtual ~BuddyManagementService_downloadProfileImage_pargs() noexcept;
  const std::string* requestId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_downloadProfileImage_result__isset {
  _BuddyManagementService_downloadProfileImage_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_downloadProfileImage_result__isset;

class BuddyManagementService_downloadProfileImage_result {
 public:

  BuddyManagementService_downloadProfileImage_result(const BuddyManagementService_downloadProfileImage_result&);
  BuddyManagementService_downloadProfileImage_result& operator=(const BuddyManagementService_downloadProfileImage_result&);
  BuddyManagementService_downloadProfileImage_result() : success() {
  }

  virtual ~BuddyManagementService_downloadProfileImage_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_downloadProfileImage_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_downloadProfileImage_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_downloadProfileImage_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_downloadProfileImage_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_downloadProfileImage_presult__isset {
  _BuddyManagementService_downloadProfileImage_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_downloadProfileImage_presult__isset;

class BuddyManagementService_downloadProfileImage_presult {
 public:


  virtual ~BuddyManagementService_downloadProfileImage_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_downloadProfileImage_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_downloadProfileImagePreview_args__isset {
  _BuddyManagementService_downloadProfileImagePreview_args__isset() : requestId(false) {}
  bool requestId :1;
} _BuddyManagementService_downloadProfileImagePreview_args__isset;

class BuddyManagementService_downloadProfileImagePreview_args {
 public:

  BuddyManagementService_downloadProfileImagePreview_args(const BuddyManagementService_downloadProfileImagePreview_args&);
  BuddyManagementService_downloadProfileImagePreview_args& operator=(const BuddyManagementService_downloadProfileImagePreview_args&);
  BuddyManagementService_downloadProfileImagePreview_args() : requestId() {
  }

  virtual ~BuddyManagementService_downloadProfileImagePreview_args() noexcept;
  std::string requestId;

  _BuddyManagementService_downloadProfileImagePreview_args__isset __isset;

  void __set_requestId(const std::string& val);

  bool operator == (const BuddyManagementService_downloadProfileImagePreview_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_downloadProfileImagePreview_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_downloadProfileImagePreview_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_downloadProfileImagePreview_pargs {
 public:


  virtual ~BuddyManagementService_downloadProfileImagePreview_pargs() noexcept;
  const std::string* requestId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_downloadProfileImagePreview_result__isset {
  _BuddyManagementService_downloadProfileImagePreview_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_downloadProfileImagePreview_result__isset;

class BuddyManagementService_downloadProfileImagePreview_result {
 public:

  BuddyManagementService_downloadProfileImagePreview_result(const BuddyManagementService_downloadProfileImagePreview_result&);
  BuddyManagementService_downloadProfileImagePreview_result& operator=(const BuddyManagementService_downloadProfileImagePreview_result&);
  BuddyManagementService_downloadProfileImagePreview_result() : success() {
  }

  virtual ~BuddyManagementService_downloadProfileImagePreview_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_downloadProfileImagePreview_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_downloadProfileImagePreview_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_downloadProfileImagePreview_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_downloadProfileImagePreview_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_downloadProfileImagePreview_presult__isset {
  _BuddyManagementService_downloadProfileImagePreview_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_downloadProfileImagePreview_presult__isset;

class BuddyManagementService_downloadProfileImagePreview_presult {
 public:


  virtual ~BuddyManagementService_downloadProfileImagePreview_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_downloadProfileImagePreview_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_getActiveMemberCountByBuddyMid_args__isset {
  _BuddyManagementService_getActiveMemberCountByBuddyMid_args__isset() : buddyMid(false) {}
  bool buddyMid :1;
} _BuddyManagementService_getActiveMemberCountByBuddyMid_args__isset;

class BuddyManagementService_getActiveMemberCountByBuddyMid_args {
 public:

  BuddyManagementService_getActiveMemberCountByBuddyMid_args(const BuddyManagementService_getActiveMemberCountByBuddyMid_args&);
  BuddyManagementService_getActiveMemberCountByBuddyMid_args& operator=(const BuddyManagementService_getActiveMemberCountByBuddyMid_args&);
  BuddyManagementService_getActiveMemberCountByBuddyMid_args() : buddyMid() {
  }

  virtual ~BuddyManagementService_getActiveMemberCountByBuddyMid_args() noexcept;
  std::string buddyMid;

  _BuddyManagementService_getActiveMemberCountByBuddyMid_args__isset __isset;

  void __set_buddyMid(const std::string& val);

  bool operator == (const BuddyManagementService_getActiveMemberCountByBuddyMid_args & rhs) const
  {
    if (!(buddyMid == rhs.buddyMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getActiveMemberCountByBuddyMid_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getActiveMemberCountByBuddyMid_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getActiveMemberCountByBuddyMid_pargs {
 public:


  virtual ~BuddyManagementService_getActiveMemberCountByBuddyMid_pargs() noexcept;
  const std::string* buddyMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getActiveMemberCountByBuddyMid_result__isset {
  _BuddyManagementService_getActiveMemberCountByBuddyMid_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getActiveMemberCountByBuddyMid_result__isset;

class BuddyManagementService_getActiveMemberCountByBuddyMid_result {
 public:

  BuddyManagementService_getActiveMemberCountByBuddyMid_result(const BuddyManagementService_getActiveMemberCountByBuddyMid_result&);
  BuddyManagementService_getActiveMemberCountByBuddyMid_result& operator=(const BuddyManagementService_getActiveMemberCountByBuddyMid_result&);
  BuddyManagementService_getActiveMemberCountByBuddyMid_result() : success(0) {
  }

  virtual ~BuddyManagementService_getActiveMemberCountByBuddyMid_result() noexcept;
  int64_t success;
  TalkException e;

  _BuddyManagementService_getActiveMemberCountByBuddyMid_result__isset __isset;

  void __set_success(const int64_t val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getActiveMemberCountByBuddyMid_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getActiveMemberCountByBuddyMid_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getActiveMemberCountByBuddyMid_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getActiveMemberCountByBuddyMid_presult__isset {
  _BuddyManagementService_getActiveMemberCountByBuddyMid_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getActiveMemberCountByBuddyMid_presult__isset;

class BuddyManagementService_getActiveMemberCountByBuddyMid_presult {
 public:


  virtual ~BuddyManagementService_getActiveMemberCountByBuddyMid_presult() noexcept;
  int64_t* success;
  TalkException e;

  _BuddyManagementService_getActiveMemberCountByBuddyMid_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_getActiveMemberMidsByBuddyMid_args__isset {
  _BuddyManagementService_getActiveMemberMidsByBuddyMid_args__isset() : buddyMid(false) {}
  bool buddyMid :1;
} _BuddyManagementService_getActiveMemberMidsByBuddyMid_args__isset;

class BuddyManagementService_getActiveMemberMidsByBuddyMid_args {
 public:

  BuddyManagementService_getActiveMemberMidsByBuddyMid_args(const BuddyManagementService_getActiveMemberMidsByBuddyMid_args&);
  BuddyManagementService_getActiveMemberMidsByBuddyMid_args& operator=(const BuddyManagementService_getActiveMemberMidsByBuddyMid_args&);
  BuddyManagementService_getActiveMemberMidsByBuddyMid_args() : buddyMid() {
  }

  virtual ~BuddyManagementService_getActiveMemberMidsByBuddyMid_args() noexcept;
  std::string buddyMid;

  _BuddyManagementService_getActiveMemberMidsByBuddyMid_args__isset __isset;

  void __set_buddyMid(const std::string& val);

  bool operator == (const BuddyManagementService_getActiveMemberMidsByBuddyMid_args & rhs) const
  {
    if (!(buddyMid == rhs.buddyMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getActiveMemberMidsByBuddyMid_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getActiveMemberMidsByBuddyMid_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getActiveMemberMidsByBuddyMid_pargs {
 public:


  virtual ~BuddyManagementService_getActiveMemberMidsByBuddyMid_pargs() noexcept;
  const std::string* buddyMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getActiveMemberMidsByBuddyMid_result__isset {
  _BuddyManagementService_getActiveMemberMidsByBuddyMid_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getActiveMemberMidsByBuddyMid_result__isset;

class BuddyManagementService_getActiveMemberMidsByBuddyMid_result {
 public:

  BuddyManagementService_getActiveMemberMidsByBuddyMid_result(const BuddyManagementService_getActiveMemberMidsByBuddyMid_result&);
  BuddyManagementService_getActiveMemberMidsByBuddyMid_result& operator=(const BuddyManagementService_getActiveMemberMidsByBuddyMid_result&);
  BuddyManagementService_getActiveMemberMidsByBuddyMid_result() {
  }

  virtual ~BuddyManagementService_getActiveMemberMidsByBuddyMid_result() noexcept;
  std::vector<std::string>  success;
  TalkException e;

  _BuddyManagementService_getActiveMemberMidsByBuddyMid_result__isset __isset;

  void __set_success(const std::vector<std::string> & val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getActiveMemberMidsByBuddyMid_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getActiveMemberMidsByBuddyMid_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getActiveMemberMidsByBuddyMid_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getActiveMemberMidsByBuddyMid_presult__isset {
  _BuddyManagementService_getActiveMemberMidsByBuddyMid_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getActiveMemberMidsByBuddyMid_presult__isset;

class BuddyManagementService_getActiveMemberMidsByBuddyMid_presult {
 public:


  virtual ~BuddyManagementService_getActiveMemberMidsByBuddyMid_presult() noexcept;
  std::vector<std::string> * success;
  TalkException e;

  _BuddyManagementService_getActiveMemberMidsByBuddyMid_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};


class BuddyManagementService_getAllBuddyMembers_args {
 public:

  BuddyManagementService_getAllBuddyMembers_args(const BuddyManagementService_getAllBuddyMembers_args&);
  BuddyManagementService_getAllBuddyMembers_args& operator=(const BuddyManagementService_getAllBuddyMembers_args&);
  BuddyManagementService_getAllBuddyMembers_args() {
  }

  virtual ~BuddyManagementService_getAllBuddyMembers_args() noexcept;

  bool operator == (const BuddyManagementService_getAllBuddyMembers_args & /* rhs */) const
  {
    return true;
  }
  bool operator != (const BuddyManagementService_getAllBuddyMembers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getAllBuddyMembers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getAllBuddyMembers_pargs {
 public:


  virtual ~BuddyManagementService_getAllBuddyMembers_pargs() noexcept;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getAllBuddyMembers_result__isset {
  _BuddyManagementService_getAllBuddyMembers_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getAllBuddyMembers_result__isset;

class BuddyManagementService_getAllBuddyMembers_result {
 public:

  BuddyManagementService_getAllBuddyMembers_result(const BuddyManagementService_getAllBuddyMembers_result&);
  BuddyManagementService_getAllBuddyMembers_result& operator=(const BuddyManagementService_getAllBuddyMembers_result&);
  BuddyManagementService_getAllBuddyMembers_result() {
  }

  virtual ~BuddyManagementService_getAllBuddyMembers_result() noexcept;
  std::vector<std::string>  success;
  TalkException e;

  _BuddyManagementService_getAllBuddyMembers_result__isset __isset;

  void __set_success(const std::vector<std::string> & val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getAllBuddyMembers_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getAllBuddyMembers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getAllBuddyMembers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getAllBuddyMembers_presult__isset {
  _BuddyManagementService_getAllBuddyMembers_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getAllBuddyMembers_presult__isset;

class BuddyManagementService_getAllBuddyMembers_presult {
 public:


  virtual ~BuddyManagementService_getAllBuddyMembers_presult() noexcept;
  std::vector<std::string> * success;
  TalkException e;

  _BuddyManagementService_getAllBuddyMembers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};


class BuddyManagementService_getBlockedBuddyMembers_args {
 public:

  BuddyManagementService_getBlockedBuddyMembers_args(const BuddyManagementService_getBlockedBuddyMembers_args&);
  BuddyManagementService_getBlockedBuddyMembers_args& operator=(const BuddyManagementService_getBlockedBuddyMembers_args&);
  BuddyManagementService_getBlockedBuddyMembers_args() {
  }

  virtual ~BuddyManagementService_getBlockedBuddyMembers_args() noexcept;

  bool operator == (const BuddyManagementService_getBlockedBuddyMembers_args & /* rhs */) const
  {
    return true;
  }
  bool operator != (const BuddyManagementService_getBlockedBuddyMembers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getBlockedBuddyMembers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getBlockedBuddyMembers_pargs {
 public:


  virtual ~BuddyManagementService_getBlockedBuddyMembers_pargs() noexcept;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getBlockedBuddyMembers_result__isset {
  _BuddyManagementService_getBlockedBuddyMembers_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getBlockedBuddyMembers_result__isset;

class BuddyManagementService_getBlockedBuddyMembers_result {
 public:

  BuddyManagementService_getBlockedBuddyMembers_result(const BuddyManagementService_getBlockedBuddyMembers_result&);
  BuddyManagementService_getBlockedBuddyMembers_result& operator=(const BuddyManagementService_getBlockedBuddyMembers_result&);
  BuddyManagementService_getBlockedBuddyMembers_result() {
  }

  virtual ~BuddyManagementService_getBlockedBuddyMembers_result() noexcept;
  std::vector<std::string>  success;
  TalkException e;

  _BuddyManagementService_getBlockedBuddyMembers_result__isset __isset;

  void __set_success(const std::vector<std::string> & val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getBlockedBuddyMembers_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getBlockedBuddyMembers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getBlockedBuddyMembers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getBlockedBuddyMembers_presult__isset {
  _BuddyManagementService_getBlockedBuddyMembers_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getBlockedBuddyMembers_presult__isset;

class BuddyManagementService_getBlockedBuddyMembers_presult {
 public:


  virtual ~BuddyManagementService_getBlockedBuddyMembers_presult() noexcept;
  std::vector<std::string> * success;
  TalkException e;

  _BuddyManagementService_getBlockedBuddyMembers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_getBlockerCountByBuddyMid_args__isset {
  _BuddyManagementService_getBlockerCountByBuddyMid_args__isset() : buddyMid(false) {}
  bool buddyMid :1;
} _BuddyManagementService_getBlockerCountByBuddyMid_args__isset;

class BuddyManagementService_getBlockerCountByBuddyMid_args {
 public:

  BuddyManagementService_getBlockerCountByBuddyMid_args(const BuddyManagementService_getBlockerCountByBuddyMid_args&);
  BuddyManagementService_getBlockerCountByBuddyMid_args& operator=(const BuddyManagementService_getBlockerCountByBuddyMid_args&);
  BuddyManagementService_getBlockerCountByBuddyMid_args() : buddyMid() {
  }

  virtual ~BuddyManagementService_getBlockerCountByBuddyMid_args() noexcept;
  std::string buddyMid;

  _BuddyManagementService_getBlockerCountByBuddyMid_args__isset __isset;

  void __set_buddyMid(const std::string& val);

  bool operator == (const BuddyManagementService_getBlockerCountByBuddyMid_args & rhs) const
  {
    if (!(buddyMid == rhs.buddyMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getBlockerCountByBuddyMid_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getBlockerCountByBuddyMid_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getBlockerCountByBuddyMid_pargs {
 public:


  virtual ~BuddyManagementService_getBlockerCountByBuddyMid_pargs() noexcept;
  const std::string* buddyMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getBlockerCountByBuddyMid_result__isset {
  _BuddyManagementService_getBlockerCountByBuddyMid_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getBlockerCountByBuddyMid_result__isset;

class BuddyManagementService_getBlockerCountByBuddyMid_result {
 public:

  BuddyManagementService_getBlockerCountByBuddyMid_result(const BuddyManagementService_getBlockerCountByBuddyMid_result&);
  BuddyManagementService_getBlockerCountByBuddyMid_result& operator=(const BuddyManagementService_getBlockerCountByBuddyMid_result&);
  BuddyManagementService_getBlockerCountByBuddyMid_result() : success(0) {
  }

  virtual ~BuddyManagementService_getBlockerCountByBuddyMid_result() noexcept;
  int64_t success;
  TalkException e;

  _BuddyManagementService_getBlockerCountByBuddyMid_result__isset __isset;

  void __set_success(const int64_t val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getBlockerCountByBuddyMid_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getBlockerCountByBuddyMid_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getBlockerCountByBuddyMid_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getBlockerCountByBuddyMid_presult__isset {
  _BuddyManagementService_getBlockerCountByBuddyMid_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getBlockerCountByBuddyMid_presult__isset;

class BuddyManagementService_getBlockerCountByBuddyMid_presult {
 public:


  virtual ~BuddyManagementService_getBlockerCountByBuddyMid_presult() noexcept;
  int64_t* success;
  TalkException e;

  _BuddyManagementService_getBlockerCountByBuddyMid_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_getBuddyDetailByMid_args__isset {
  _BuddyManagementService_getBuddyDetailByMid_args__isset() : buddyMid(false) {}
  bool buddyMid :1;
} _BuddyManagementService_getBuddyDetailByMid_args__isset;

class BuddyManagementService_getBuddyDetailByMid_args {
 public:

  BuddyManagementService_getBuddyDetailByMid_args(const BuddyManagementService_getBuddyDetailByMid_args&);
  BuddyManagementService_getBuddyDetailByMid_args& operator=(const BuddyManagementService_getBuddyDetailByMid_args&);
  BuddyManagementService_getBuddyDetailByMid_args() : buddyMid() {
  }

  virtual ~BuddyManagementService_getBuddyDetailByMid_args() noexcept;
  std::string buddyMid;

  _BuddyManagementService_getBuddyDetailByMid_args__isset __isset;

  void __set_buddyMid(const std::string& val);

  bool operator == (const BuddyManagementService_getBuddyDetailByMid_args & rhs) const
  {
    if (!(buddyMid == rhs.buddyMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getBuddyDetailByMid_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getBuddyDetailByMid_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getBuddyDetailByMid_pargs {
 public:


  virtual ~BuddyManagementService_getBuddyDetailByMid_pargs() noexcept;
  const std::string* buddyMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getBuddyDetailByMid_result__isset {
  _BuddyManagementService_getBuddyDetailByMid_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getBuddyDetailByMid_result__isset;

class BuddyManagementService_getBuddyDetailByMid_result {
 public:

  BuddyManagementService_getBuddyDetailByMid_result(const BuddyManagementService_getBuddyDetailByMid_result&);
  BuddyManagementService_getBuddyDetailByMid_result& operator=(const BuddyManagementService_getBuddyDetailByMid_result&);
  BuddyManagementService_getBuddyDetailByMid_result() {
  }

  virtual ~BuddyManagementService_getBuddyDetailByMid_result() noexcept;
  BuddyDetail success;
  TalkException e;

  _BuddyManagementService_getBuddyDetailByMid_result__isset __isset;

  void __set_success(const BuddyDetail& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getBuddyDetailByMid_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getBuddyDetailByMid_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getBuddyDetailByMid_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getBuddyDetailByMid_presult__isset {
  _BuddyManagementService_getBuddyDetailByMid_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getBuddyDetailByMid_presult__isset;

class BuddyManagementService_getBuddyDetailByMid_presult {
 public:


  virtual ~BuddyManagementService_getBuddyDetailByMid_presult() noexcept;
  BuddyDetail* success;
  TalkException e;

  _BuddyManagementService_getBuddyDetailByMid_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};


class BuddyManagementService_getBuddyProfile_args {
 public:

  BuddyManagementService_getBuddyProfile_args(const BuddyManagementService_getBuddyProfile_args&);
  BuddyManagementService_getBuddyProfile_args& operator=(const BuddyManagementService_getBuddyProfile_args&);
  BuddyManagementService_getBuddyProfile_args() {
  }

  virtual ~BuddyManagementService_getBuddyProfile_args() noexcept;

  bool operator == (const BuddyManagementService_getBuddyProfile_args & /* rhs */) const
  {
    return true;
  }
  bool operator != (const BuddyManagementService_getBuddyProfile_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getBuddyProfile_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getBuddyProfile_pargs {
 public:


  virtual ~BuddyManagementService_getBuddyProfile_pargs() noexcept;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getBuddyProfile_result__isset {
  _BuddyManagementService_getBuddyProfile_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getBuddyProfile_result__isset;

class BuddyManagementService_getBuddyProfile_result {
 public:

  BuddyManagementService_getBuddyProfile_result(const BuddyManagementService_getBuddyProfile_result&);
  BuddyManagementService_getBuddyProfile_result& operator=(const BuddyManagementService_getBuddyProfile_result&);
  BuddyManagementService_getBuddyProfile_result() {
  }

  virtual ~BuddyManagementService_getBuddyProfile_result() noexcept;
  BuddyProfile success;
  TalkException e;

  _BuddyManagementService_getBuddyProfile_result__isset __isset;

  void __set_success(const BuddyProfile& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getBuddyProfile_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getBuddyProfile_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getBuddyProfile_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getBuddyProfile_presult__isset {
  _BuddyManagementService_getBuddyProfile_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getBuddyProfile_presult__isset;

class BuddyManagementService_getBuddyProfile_presult {
 public:


  virtual ~BuddyManagementService_getBuddyProfile_presult() noexcept;
  BuddyProfile* success;
  TalkException e;

  _BuddyManagementService_getBuddyProfile_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};


class BuddyManagementService_getContactTicket_args {
 public:

  BuddyManagementService_getContactTicket_args(const BuddyManagementService_getContactTicket_args&);
  BuddyManagementService_getContactTicket_args& operator=(const BuddyManagementService_getContactTicket_args&);
  BuddyManagementService_getContactTicket_args() {
  }

  virtual ~BuddyManagementService_getContactTicket_args() noexcept;

  bool operator == (const BuddyManagementService_getContactTicket_args & /* rhs */) const
  {
    return true;
  }
  bool operator != (const BuddyManagementService_getContactTicket_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getContactTicket_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getContactTicket_pargs {
 public:


  virtual ~BuddyManagementService_getContactTicket_pargs() noexcept;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getContactTicket_result__isset {
  _BuddyManagementService_getContactTicket_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getContactTicket_result__isset;

class BuddyManagementService_getContactTicket_result {
 public:

  BuddyManagementService_getContactTicket_result(const BuddyManagementService_getContactTicket_result&);
  BuddyManagementService_getContactTicket_result& operator=(const BuddyManagementService_getContactTicket_result&);
  BuddyManagementService_getContactTicket_result() {
  }

  virtual ~BuddyManagementService_getContactTicket_result() noexcept;
  Ticket success;
  TalkException e;

  _BuddyManagementService_getContactTicket_result__isset __isset;

  void __set_success(const Ticket& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getContactTicket_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getContactTicket_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getContactTicket_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getContactTicket_presult__isset {
  _BuddyManagementService_getContactTicket_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getContactTicket_presult__isset;

class BuddyManagementService_getContactTicket_presult {
 public:


  virtual ~BuddyManagementService_getContactTicket_presult() noexcept;
  Ticket* success;
  TalkException e;

  _BuddyManagementService_getContactTicket_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_getMemberCountByBuddyMid_args__isset {
  _BuddyManagementService_getMemberCountByBuddyMid_args__isset() : buddyMid(false) {}
  bool buddyMid :1;
} _BuddyManagementService_getMemberCountByBuddyMid_args__isset;

class BuddyManagementService_getMemberCountByBuddyMid_args {
 public:

  BuddyManagementService_getMemberCountByBuddyMid_args(const BuddyManagementService_getMemberCountByBuddyMid_args&);
  BuddyManagementService_getMemberCountByBuddyMid_args& operator=(const BuddyManagementService_getMemberCountByBuddyMid_args&);
  BuddyManagementService_getMemberCountByBuddyMid_args() : buddyMid() {
  }

  virtual ~BuddyManagementService_getMemberCountByBuddyMid_args() noexcept;
  std::string buddyMid;

  _BuddyManagementService_getMemberCountByBuddyMid_args__isset __isset;

  void __set_buddyMid(const std::string& val);

  bool operator == (const BuddyManagementService_getMemberCountByBuddyMid_args & rhs) const
  {
    if (!(buddyMid == rhs.buddyMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getMemberCountByBuddyMid_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getMemberCountByBuddyMid_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getMemberCountByBuddyMid_pargs {
 public:


  virtual ~BuddyManagementService_getMemberCountByBuddyMid_pargs() noexcept;
  const std::string* buddyMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getMemberCountByBuddyMid_result__isset {
  _BuddyManagementService_getMemberCountByBuddyMid_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getMemberCountByBuddyMid_result__isset;

class BuddyManagementService_getMemberCountByBuddyMid_result {
 public:

  BuddyManagementService_getMemberCountByBuddyMid_result(const BuddyManagementService_getMemberCountByBuddyMid_result&);
  BuddyManagementService_getMemberCountByBuddyMid_result& operator=(const BuddyManagementService_getMemberCountByBuddyMid_result&);
  BuddyManagementService_getMemberCountByBuddyMid_result() : success(0) {
  }

  virtual ~BuddyManagementService_getMemberCountByBuddyMid_result() noexcept;
  int64_t success;
  TalkException e;

  _BuddyManagementService_getMemberCountByBuddyMid_result__isset __isset;

  void __set_success(const int64_t val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getMemberCountByBuddyMid_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getMemberCountByBuddyMid_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getMemberCountByBuddyMid_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getMemberCountByBuddyMid_presult__isset {
  _BuddyManagementService_getMemberCountByBuddyMid_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getMemberCountByBuddyMid_presult__isset;

class BuddyManagementService_getMemberCountByBuddyMid_presult {
 public:


  virtual ~BuddyManagementService_getMemberCountByBuddyMid_presult() noexcept;
  int64_t* success;
  TalkException e;

  _BuddyManagementService_getMemberCountByBuddyMid_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_getSendBuddyMessageResult_args__isset {
  _BuddyManagementService_getSendBuddyMessageResult_args__isset() : sendBuddyMessageRequestId(false) {}
  bool sendBuddyMessageRequestId :1;
} _BuddyManagementService_getSendBuddyMessageResult_args__isset;

class BuddyManagementService_getSendBuddyMessageResult_args {
 public:

  BuddyManagementService_getSendBuddyMessageResult_args(const BuddyManagementService_getSendBuddyMessageResult_args&);
  BuddyManagementService_getSendBuddyMessageResult_args& operator=(const BuddyManagementService_getSendBuddyMessageResult_args&);
  BuddyManagementService_getSendBuddyMessageResult_args() : sendBuddyMessageRequestId() {
  }

  virtual ~BuddyManagementService_getSendBuddyMessageResult_args() noexcept;
  std::string sendBuddyMessageRequestId;

  _BuddyManagementService_getSendBuddyMessageResult_args__isset __isset;

  void __set_sendBuddyMessageRequestId(const std::string& val);

  bool operator == (const BuddyManagementService_getSendBuddyMessageResult_args & rhs) const
  {
    if (!(sendBuddyMessageRequestId == rhs.sendBuddyMessageRequestId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getSendBuddyMessageResult_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getSendBuddyMessageResult_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getSendBuddyMessageResult_pargs {
 public:


  virtual ~BuddyManagementService_getSendBuddyMessageResult_pargs() noexcept;
  const std::string* sendBuddyMessageRequestId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getSendBuddyMessageResult_result__isset {
  _BuddyManagementService_getSendBuddyMessageResult_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getSendBuddyMessageResult_result__isset;

class BuddyManagementService_getSendBuddyMessageResult_result {
 public:

  BuddyManagementService_getSendBuddyMessageResult_result(const BuddyManagementService_getSendBuddyMessageResult_result&);
  BuddyManagementService_getSendBuddyMessageResult_result& operator=(const BuddyManagementService_getSendBuddyMessageResult_result&);
  BuddyManagementService_getSendBuddyMessageResult_result() {
  }

  virtual ~BuddyManagementService_getSendBuddyMessageResult_result() noexcept;
  SendBuddyMessageResult success;
  TalkException e;

  _BuddyManagementService_getSendBuddyMessageResult_result__isset __isset;

  void __set_success(const SendBuddyMessageResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getSendBuddyMessageResult_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getSendBuddyMessageResult_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getSendBuddyMessageResult_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getSendBuddyMessageResult_presult__isset {
  _BuddyManagementService_getSendBuddyMessageResult_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getSendBuddyMessageResult_presult__isset;

class BuddyManagementService_getSendBuddyMessageResult_presult {
 public:


  virtual ~BuddyManagementService_getSendBuddyMessageResult_presult() noexcept;
  SendBuddyMessageResult* success;
  TalkException e;

  _BuddyManagementService_getSendBuddyMessageResult_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_getSetBuddyOnAirResult_args__isset {
  _BuddyManagementService_getSetBuddyOnAirResult_args__isset() : setBuddyOnAirRequestId(false) {}
  bool setBuddyOnAirRequestId :1;
} _BuddyManagementService_getSetBuddyOnAirResult_args__isset;

class BuddyManagementService_getSetBuddyOnAirResult_args {
 public:

  BuddyManagementService_getSetBuddyOnAirResult_args(const BuddyManagementService_getSetBuddyOnAirResult_args&);
  BuddyManagementService_getSetBuddyOnAirResult_args& operator=(const BuddyManagementService_getSetBuddyOnAirResult_args&);
  BuddyManagementService_getSetBuddyOnAirResult_args() : setBuddyOnAirRequestId() {
  }

  virtual ~BuddyManagementService_getSetBuddyOnAirResult_args() noexcept;
  std::string setBuddyOnAirRequestId;

  _BuddyManagementService_getSetBuddyOnAirResult_args__isset __isset;

  void __set_setBuddyOnAirRequestId(const std::string& val);

  bool operator == (const BuddyManagementService_getSetBuddyOnAirResult_args & rhs) const
  {
    if (!(setBuddyOnAirRequestId == rhs.setBuddyOnAirRequestId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getSetBuddyOnAirResult_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getSetBuddyOnAirResult_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getSetBuddyOnAirResult_pargs {
 public:


  virtual ~BuddyManagementService_getSetBuddyOnAirResult_pargs() noexcept;
  const std::string* setBuddyOnAirRequestId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getSetBuddyOnAirResult_result__isset {
  _BuddyManagementService_getSetBuddyOnAirResult_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getSetBuddyOnAirResult_result__isset;

class BuddyManagementService_getSetBuddyOnAirResult_result {
 public:

  BuddyManagementService_getSetBuddyOnAirResult_result(const BuddyManagementService_getSetBuddyOnAirResult_result&);
  BuddyManagementService_getSetBuddyOnAirResult_result& operator=(const BuddyManagementService_getSetBuddyOnAirResult_result&);
  BuddyManagementService_getSetBuddyOnAirResult_result() {
  }

  virtual ~BuddyManagementService_getSetBuddyOnAirResult_result() noexcept;
  SetBuddyOnAirResult success;
  TalkException e;

  _BuddyManagementService_getSetBuddyOnAirResult_result__isset __isset;

  void __set_success(const SetBuddyOnAirResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getSetBuddyOnAirResult_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getSetBuddyOnAirResult_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getSetBuddyOnAirResult_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getSetBuddyOnAirResult_presult__isset {
  _BuddyManagementService_getSetBuddyOnAirResult_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getSetBuddyOnAirResult_presult__isset;

class BuddyManagementService_getSetBuddyOnAirResult_presult {
 public:


  virtual ~BuddyManagementService_getSetBuddyOnAirResult_presult() noexcept;
  SetBuddyOnAirResult* success;
  TalkException e;

  _BuddyManagementService_getSetBuddyOnAirResult_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_getUpdateBuddyProfileResult_args__isset {
  _BuddyManagementService_getUpdateBuddyProfileResult_args__isset() : updateBuddyProfileRequestId(false) {}
  bool updateBuddyProfileRequestId :1;
} _BuddyManagementService_getUpdateBuddyProfileResult_args__isset;

class BuddyManagementService_getUpdateBuddyProfileResult_args {
 public:

  BuddyManagementService_getUpdateBuddyProfileResult_args(const BuddyManagementService_getUpdateBuddyProfileResult_args&);
  BuddyManagementService_getUpdateBuddyProfileResult_args& operator=(const BuddyManagementService_getUpdateBuddyProfileResult_args&);
  BuddyManagementService_getUpdateBuddyProfileResult_args() : updateBuddyProfileRequestId() {
  }

  virtual ~BuddyManagementService_getUpdateBuddyProfileResult_args() noexcept;
  std::string updateBuddyProfileRequestId;

  _BuddyManagementService_getUpdateBuddyProfileResult_args__isset __isset;

  void __set_updateBuddyProfileRequestId(const std::string& val);

  bool operator == (const BuddyManagementService_getUpdateBuddyProfileResult_args & rhs) const
  {
    if (!(updateBuddyProfileRequestId == rhs.updateBuddyProfileRequestId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getUpdateBuddyProfileResult_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getUpdateBuddyProfileResult_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_getUpdateBuddyProfileResult_pargs {
 public:


  virtual ~BuddyManagementService_getUpdateBuddyProfileResult_pargs() noexcept;
  const std::string* updateBuddyProfileRequestId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getUpdateBuddyProfileResult_result__isset {
  _BuddyManagementService_getUpdateBuddyProfileResult_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getUpdateBuddyProfileResult_result__isset;

class BuddyManagementService_getUpdateBuddyProfileResult_result {
 public:

  BuddyManagementService_getUpdateBuddyProfileResult_result(const BuddyManagementService_getUpdateBuddyProfileResult_result&);
  BuddyManagementService_getUpdateBuddyProfileResult_result& operator=(const BuddyManagementService_getUpdateBuddyProfileResult_result&);
  BuddyManagementService_getUpdateBuddyProfileResult_result() {
  }

  virtual ~BuddyManagementService_getUpdateBuddyProfileResult_result() noexcept;
  UpdateBuddyProfileResult success;
  TalkException e;

  _BuddyManagementService_getUpdateBuddyProfileResult_result__isset __isset;

  void __set_success(const UpdateBuddyProfileResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_getUpdateBuddyProfileResult_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_getUpdateBuddyProfileResult_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_getUpdateBuddyProfileResult_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_getUpdateBuddyProfileResult_presult__isset {
  _BuddyManagementService_getUpdateBuddyProfileResult_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_getUpdateBuddyProfileResult_presult__isset;

class BuddyManagementService_getUpdateBuddyProfileResult_presult {
 public:


  virtual ~BuddyManagementService_getUpdateBuddyProfileResult_presult() noexcept;
  UpdateBuddyProfileResult* success;
  TalkException e;

  _BuddyManagementService_getUpdateBuddyProfileResult_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_isBuddyOnAirByMid_args__isset {
  _BuddyManagementService_isBuddyOnAirByMid_args__isset() : buddyMid(false) {}
  bool buddyMid :1;
} _BuddyManagementService_isBuddyOnAirByMid_args__isset;

class BuddyManagementService_isBuddyOnAirByMid_args {
 public:

  BuddyManagementService_isBuddyOnAirByMid_args(const BuddyManagementService_isBuddyOnAirByMid_args&);
  BuddyManagementService_isBuddyOnAirByMid_args& operator=(const BuddyManagementService_isBuddyOnAirByMid_args&);
  BuddyManagementService_isBuddyOnAirByMid_args() : buddyMid() {
  }

  virtual ~BuddyManagementService_isBuddyOnAirByMid_args() noexcept;
  std::string buddyMid;

  _BuddyManagementService_isBuddyOnAirByMid_args__isset __isset;

  void __set_buddyMid(const std::string& val);

  bool operator == (const BuddyManagementService_isBuddyOnAirByMid_args & rhs) const
  {
    if (!(buddyMid == rhs.buddyMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_isBuddyOnAirByMid_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_isBuddyOnAirByMid_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_isBuddyOnAirByMid_pargs {
 public:


  virtual ~BuddyManagementService_isBuddyOnAirByMid_pargs() noexcept;
  const std::string* buddyMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_isBuddyOnAirByMid_result__isset {
  _BuddyManagementService_isBuddyOnAirByMid_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_isBuddyOnAirByMid_result__isset;

class BuddyManagementService_isBuddyOnAirByMid_result {
 public:

  BuddyManagementService_isBuddyOnAirByMid_result(const BuddyManagementService_isBuddyOnAirByMid_result&);
  BuddyManagementService_isBuddyOnAirByMid_result& operator=(const BuddyManagementService_isBuddyOnAirByMid_result&);
  BuddyManagementService_isBuddyOnAirByMid_result() : success(0) {
  }

  virtual ~BuddyManagementService_isBuddyOnAirByMid_result() noexcept;
  bool success;
  TalkException e;

  _BuddyManagementService_isBuddyOnAirByMid_result__isset __isset;

  void __set_success(const bool val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_isBuddyOnAirByMid_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_isBuddyOnAirByMid_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_isBuddyOnAirByMid_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_isBuddyOnAirByMid_presult__isset {
  _BuddyManagementService_isBuddyOnAirByMid_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_isBuddyOnAirByMid_presult__isset;

class BuddyManagementService_isBuddyOnAirByMid_presult {
 public:


  virtual ~BuddyManagementService_isBuddyOnAirByMid_presult() noexcept;
  bool* success;
  TalkException e;

  _BuddyManagementService_isBuddyOnAirByMid_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args__isset {
  _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args__isset() : requestId(false), msg(false), sourceContentId(false) {}
  bool requestId :1;
  bool msg :1;
  bool sourceContentId :1;
} _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args__isset;

class BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args {
 public:

  BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args(const BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args&);
  BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args& operator=(const BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args&);
  BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args() : requestId(), sourceContentId() {
  }

  virtual ~BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args() noexcept;
  std::string requestId;
  Message msg;
  std::string sourceContentId;

  _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_msg(const Message& val);

  void __set_sourceContentId(const std::string& val);

  bool operator == (const BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(msg == rhs.msg))
      return false;
    if (!(sourceContentId == rhs.sourceContentId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_pargs {
 public:


  virtual ~BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_pargs() noexcept;
  const std::string* requestId;
  const Message* msg;
  const std::string* sourceContentId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result__isset {
  _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result__isset;

class BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result {
 public:

  BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result(const BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result&);
  BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result& operator=(const BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result&);
  BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result() : success() {
  }

  virtual ~BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_presult__isset {
  _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_presult__isset;

class BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_presult {
 public:


  virtual ~BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_linkAndSendBuddyContentMessageToAllAsync_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_linkAndSendBuddyContentMessageToMids_args__isset {
  _BuddyManagementService_linkAndSendBuddyContentMessageToMids_args__isset() : requestId(false), msg(false), sourceContentId(false), mids(false) {}
  bool requestId :1;
  bool msg :1;
  bool sourceContentId :1;
  bool mids :1;
} _BuddyManagementService_linkAndSendBuddyContentMessageToMids_args__isset;

class BuddyManagementService_linkAndSendBuddyContentMessageToMids_args {
 public:

  BuddyManagementService_linkAndSendBuddyContentMessageToMids_args(const BuddyManagementService_linkAndSendBuddyContentMessageToMids_args&);
  BuddyManagementService_linkAndSendBuddyContentMessageToMids_args& operator=(const BuddyManagementService_linkAndSendBuddyContentMessageToMids_args&);
  BuddyManagementService_linkAndSendBuddyContentMessageToMids_args() : requestId(), sourceContentId() {
  }

  virtual ~BuddyManagementService_linkAndSendBuddyContentMessageToMids_args() noexcept;
  std::string requestId;
  Message msg;
  std::string sourceContentId;
  std::vector<std::string>  mids;

  _BuddyManagementService_linkAndSendBuddyContentMessageToMids_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_msg(const Message& val);

  void __set_sourceContentId(const std::string& val);

  void __set_mids(const std::vector<std::string> & val);

  bool operator == (const BuddyManagementService_linkAndSendBuddyContentMessageToMids_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(msg == rhs.msg))
      return false;
    if (!(sourceContentId == rhs.sourceContentId))
      return false;
    if (!(mids == rhs.mids))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_linkAndSendBuddyContentMessageToMids_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_linkAndSendBuddyContentMessageToMids_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_linkAndSendBuddyContentMessageToMids_pargs {
 public:


  virtual ~BuddyManagementService_linkAndSendBuddyContentMessageToMids_pargs() noexcept;
  const std::string* requestId;
  const Message* msg;
  const std::string* sourceContentId;
  const std::vector<std::string> * mids;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_linkAndSendBuddyContentMessageToMids_result__isset {
  _BuddyManagementService_linkAndSendBuddyContentMessageToMids_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_linkAndSendBuddyContentMessageToMids_result__isset;

class BuddyManagementService_linkAndSendBuddyContentMessageToMids_result {
 public:

  BuddyManagementService_linkAndSendBuddyContentMessageToMids_result(const BuddyManagementService_linkAndSendBuddyContentMessageToMids_result&);
  BuddyManagementService_linkAndSendBuddyContentMessageToMids_result& operator=(const BuddyManagementService_linkAndSendBuddyContentMessageToMids_result&);
  BuddyManagementService_linkAndSendBuddyContentMessageToMids_result() {
  }

  virtual ~BuddyManagementService_linkAndSendBuddyContentMessageToMids_result() noexcept;
  SendBuddyMessageResult success;
  TalkException e;

  _BuddyManagementService_linkAndSendBuddyContentMessageToMids_result__isset __isset;

  void __set_success(const SendBuddyMessageResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_linkAndSendBuddyContentMessageToMids_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_linkAndSendBuddyContentMessageToMids_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_linkAndSendBuddyContentMessageToMids_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_linkAndSendBuddyContentMessageToMids_presult__isset {
  _BuddyManagementService_linkAndSendBuddyContentMessageToMids_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_linkAndSendBuddyContentMessageToMids_presult__isset;

class BuddyManagementService_linkAndSendBuddyContentMessageToMids_presult {
 public:


  virtual ~BuddyManagementService_linkAndSendBuddyContentMessageToMids_presult() noexcept;
  SendBuddyMessageResult* success;
  TalkException e;

  _BuddyManagementService_linkAndSendBuddyContentMessageToMids_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_notifyBuddyBlocked_args__isset {
  _BuddyManagementService_notifyBuddyBlocked_args__isset() : buddyMid(false), blockerMid(false) {}
  bool buddyMid :1;
  bool blockerMid :1;
} _BuddyManagementService_notifyBuddyBlocked_args__isset;

class BuddyManagementService_notifyBuddyBlocked_args {
 public:

  BuddyManagementService_notifyBuddyBlocked_args(const BuddyManagementService_notifyBuddyBlocked_args&);
  BuddyManagementService_notifyBuddyBlocked_args& operator=(const BuddyManagementService_notifyBuddyBlocked_args&);
  BuddyManagementService_notifyBuddyBlocked_args() : buddyMid(), blockerMid() {
  }

  virtual ~BuddyManagementService_notifyBuddyBlocked_args() noexcept;
  std::string buddyMid;
  std::string blockerMid;

  _BuddyManagementService_notifyBuddyBlocked_args__isset __isset;

  void __set_buddyMid(const std::string& val);

  void __set_blockerMid(const std::string& val);

  bool operator == (const BuddyManagementService_notifyBuddyBlocked_args & rhs) const
  {
    if (!(buddyMid == rhs.buddyMid))
      return false;
    if (!(blockerMid == rhs.blockerMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_notifyBuddyBlocked_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_notifyBuddyBlocked_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_notifyBuddyBlocked_pargs {
 public:


  virtual ~BuddyManagementService_notifyBuddyBlocked_pargs() noexcept;
  const std::string* buddyMid;
  const std::string* blockerMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_notifyBuddyBlocked_result__isset {
  _BuddyManagementService_notifyBuddyBlocked_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_notifyBuddyBlocked_result__isset;

class BuddyManagementService_notifyBuddyBlocked_result {
 public:

  BuddyManagementService_notifyBuddyBlocked_result(const BuddyManagementService_notifyBuddyBlocked_result&);
  BuddyManagementService_notifyBuddyBlocked_result& operator=(const BuddyManagementService_notifyBuddyBlocked_result&);
  BuddyManagementService_notifyBuddyBlocked_result() {
  }

  virtual ~BuddyManagementService_notifyBuddyBlocked_result() noexcept;
  TalkException e;

  _BuddyManagementService_notifyBuddyBlocked_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_notifyBuddyBlocked_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_notifyBuddyBlocked_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_notifyBuddyBlocked_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_notifyBuddyBlocked_presult__isset {
  _BuddyManagementService_notifyBuddyBlocked_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_notifyBuddyBlocked_presult__isset;

class BuddyManagementService_notifyBuddyBlocked_presult {
 public:


  virtual ~BuddyManagementService_notifyBuddyBlocked_presult() noexcept;
  TalkException e;

  _BuddyManagementService_notifyBuddyBlocked_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_notifyBuddyUnblocked_args__isset {
  _BuddyManagementService_notifyBuddyUnblocked_args__isset() : buddyMid(false), blockerMid(false) {}
  bool buddyMid :1;
  bool blockerMid :1;
} _BuddyManagementService_notifyBuddyUnblocked_args__isset;

class BuddyManagementService_notifyBuddyUnblocked_args {
 public:

  BuddyManagementService_notifyBuddyUnblocked_args(const BuddyManagementService_notifyBuddyUnblocked_args&);
  BuddyManagementService_notifyBuddyUnblocked_args& operator=(const BuddyManagementService_notifyBuddyUnblocked_args&);
  BuddyManagementService_notifyBuddyUnblocked_args() : buddyMid(), blockerMid() {
  }

  virtual ~BuddyManagementService_notifyBuddyUnblocked_args() noexcept;
  std::string buddyMid;
  std::string blockerMid;

  _BuddyManagementService_notifyBuddyUnblocked_args__isset __isset;

  void __set_buddyMid(const std::string& val);

  void __set_blockerMid(const std::string& val);

  bool operator == (const BuddyManagementService_notifyBuddyUnblocked_args & rhs) const
  {
    if (!(buddyMid == rhs.buddyMid))
      return false;
    if (!(blockerMid == rhs.blockerMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_notifyBuddyUnblocked_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_notifyBuddyUnblocked_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_notifyBuddyUnblocked_pargs {
 public:


  virtual ~BuddyManagementService_notifyBuddyUnblocked_pargs() noexcept;
  const std::string* buddyMid;
  const std::string* blockerMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_notifyBuddyUnblocked_result__isset {
  _BuddyManagementService_notifyBuddyUnblocked_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_notifyBuddyUnblocked_result__isset;

class BuddyManagementService_notifyBuddyUnblocked_result {
 public:

  BuddyManagementService_notifyBuddyUnblocked_result(const BuddyManagementService_notifyBuddyUnblocked_result&);
  BuddyManagementService_notifyBuddyUnblocked_result& operator=(const BuddyManagementService_notifyBuddyUnblocked_result&);
  BuddyManagementService_notifyBuddyUnblocked_result() {
  }

  virtual ~BuddyManagementService_notifyBuddyUnblocked_result() noexcept;
  TalkException e;

  _BuddyManagementService_notifyBuddyUnblocked_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_notifyBuddyUnblocked_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_notifyBuddyUnblocked_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_notifyBuddyUnblocked_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_notifyBuddyUnblocked_presult__isset {
  _BuddyManagementService_notifyBuddyUnblocked_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_notifyBuddyUnblocked_presult__isset;

class BuddyManagementService_notifyBuddyUnblocked_presult {
 public:


  virtual ~BuddyManagementService_notifyBuddyUnblocked_presult() noexcept;
  TalkException e;

  _BuddyManagementService_notifyBuddyUnblocked_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_registerBuddy_args__isset {
  _BuddyManagementService_registerBuddy_args__isset() : buddyId(false), searchId(false), displayName(false), statusMeessage(false), picture(false), settings(false) {}
  bool buddyId :1;
  bool searchId :1;
  bool displayName :1;
  bool statusMeessage :1;
  bool picture :1;
  bool settings :1;
} _BuddyManagementService_registerBuddy_args__isset;

class BuddyManagementService_registerBuddy_args {
 public:

  BuddyManagementService_registerBuddy_args(const BuddyManagementService_registerBuddy_args&);
  BuddyManagementService_registerBuddy_args& operator=(const BuddyManagementService_registerBuddy_args&);
  BuddyManagementService_registerBuddy_args() : buddyId(), searchId(), displayName(), statusMeessage(), picture() {
  }

  virtual ~BuddyManagementService_registerBuddy_args() noexcept;
  std::string buddyId;
  std::string searchId;
  std::string displayName;
  std::string statusMeessage;
  std::string picture;
  std::map<std::string, std::string>  settings;

  _BuddyManagementService_registerBuddy_args__isset __isset;

  void __set_buddyId(const std::string& val);

  void __set_searchId(const std::string& val);

  void __set_displayName(const std::string& val);

  void __set_statusMeessage(const std::string& val);

  void __set_picture(const std::string& val);

  void __set_settings(const std::map<std::string, std::string> & val);

  bool operator == (const BuddyManagementService_registerBuddy_args & rhs) const
  {
    if (!(buddyId == rhs.buddyId))
      return false;
    if (!(searchId == rhs.searchId))
      return false;
    if (!(displayName == rhs.displayName))
      return false;
    if (!(statusMeessage == rhs.statusMeessage))
      return false;
    if (!(picture == rhs.picture))
      return false;
    if (!(settings == rhs.settings))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_registerBuddy_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_registerBuddy_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_registerBuddy_pargs {
 public:


  virtual ~BuddyManagementService_registerBuddy_pargs() noexcept;
  const std::string* buddyId;
  const std::string* searchId;
  const std::string* displayName;
  const std::string* statusMeessage;
  const std::string* picture;
  const std::map<std::string, std::string> * settings;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_registerBuddy_result__isset {
  _BuddyManagementService_registerBuddy_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_registerBuddy_result__isset;

class BuddyManagementService_registerBuddy_result {
 public:

  BuddyManagementService_registerBuddy_result(const BuddyManagementService_registerBuddy_result&);
  BuddyManagementService_registerBuddy_result& operator=(const BuddyManagementService_registerBuddy_result&);
  BuddyManagementService_registerBuddy_result() : success() {
  }

  virtual ~BuddyManagementService_registerBuddy_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_registerBuddy_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_registerBuddy_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_registerBuddy_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_registerBuddy_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_registerBuddy_presult__isset {
  _BuddyManagementService_registerBuddy_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_registerBuddy_presult__isset;

class BuddyManagementService_registerBuddy_presult {
 public:


  virtual ~BuddyManagementService_registerBuddy_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_registerBuddy_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_registerBuddyAdmin_args__isset {
  _BuddyManagementService_registerBuddyAdmin_args__isset() : buddyId(false), searchId(false), displayName(false), statusMessage(false), picture(false) {}
  bool buddyId :1;
  bool searchId :1;
  bool displayName :1;
  bool statusMessage :1;
  bool picture :1;
} _BuddyManagementService_registerBuddyAdmin_args__isset;

class BuddyManagementService_registerBuddyAdmin_args {
 public:

  BuddyManagementService_registerBuddyAdmin_args(const BuddyManagementService_registerBuddyAdmin_args&);
  BuddyManagementService_registerBuddyAdmin_args& operator=(const BuddyManagementService_registerBuddyAdmin_args&);
  BuddyManagementService_registerBuddyAdmin_args() : buddyId(), searchId(), displayName(), statusMessage(), picture() {
  }

  virtual ~BuddyManagementService_registerBuddyAdmin_args() noexcept;
  std::string buddyId;
  std::string searchId;
  std::string displayName;
  std::string statusMessage;
  std::string picture;

  _BuddyManagementService_registerBuddyAdmin_args__isset __isset;

  void __set_buddyId(const std::string& val);

  void __set_searchId(const std::string& val);

  void __set_displayName(const std::string& val);

  void __set_statusMessage(const std::string& val);

  void __set_picture(const std::string& val);

  bool operator == (const BuddyManagementService_registerBuddyAdmin_args & rhs) const
  {
    if (!(buddyId == rhs.buddyId))
      return false;
    if (!(searchId == rhs.searchId))
      return false;
    if (!(displayName == rhs.displayName))
      return false;
    if (!(statusMessage == rhs.statusMessage))
      return false;
    if (!(picture == rhs.picture))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_registerBuddyAdmin_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_registerBuddyAdmin_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_registerBuddyAdmin_pargs {
 public:


  virtual ~BuddyManagementService_registerBuddyAdmin_pargs() noexcept;
  const std::string* buddyId;
  const std::string* searchId;
  const std::string* displayName;
  const std::string* statusMessage;
  const std::string* picture;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_registerBuddyAdmin_result__isset {
  _BuddyManagementService_registerBuddyAdmin_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_registerBuddyAdmin_result__isset;

class BuddyManagementService_registerBuddyAdmin_result {
 public:

  BuddyManagementService_registerBuddyAdmin_result(const BuddyManagementService_registerBuddyAdmin_result&);
  BuddyManagementService_registerBuddyAdmin_result& operator=(const BuddyManagementService_registerBuddyAdmin_result&);
  BuddyManagementService_registerBuddyAdmin_result() : success() {
  }

  virtual ~BuddyManagementService_registerBuddyAdmin_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_registerBuddyAdmin_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_registerBuddyAdmin_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_registerBuddyAdmin_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_registerBuddyAdmin_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_registerBuddyAdmin_presult__isset {
  _BuddyManagementService_registerBuddyAdmin_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_registerBuddyAdmin_presult__isset;

class BuddyManagementService_registerBuddyAdmin_presult {
 public:


  virtual ~BuddyManagementService_registerBuddyAdmin_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_registerBuddyAdmin_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_reissueContactTicket_args__isset {
  _BuddyManagementService_reissueContactTicket_args__isset() : expirationTime(false), maxUseCount(false) {}
  bool expirationTime :1;
  bool maxUseCount :1;
} _BuddyManagementService_reissueContactTicket_args__isset;

class BuddyManagementService_reissueContactTicket_args {
 public:

  BuddyManagementService_reissueContactTicket_args(const BuddyManagementService_reissueContactTicket_args&);
  BuddyManagementService_reissueContactTicket_args& operator=(const BuddyManagementService_reissueContactTicket_args&);
  BuddyManagementService_reissueContactTicket_args() : expirationTime(0), maxUseCount(0) {
  }

  virtual ~BuddyManagementService_reissueContactTicket_args() noexcept;
  int64_t expirationTime;
  int32_t maxUseCount;

  _BuddyManagementService_reissueContactTicket_args__isset __isset;

  void __set_expirationTime(const int64_t val);

  void __set_maxUseCount(const int32_t val);

  bool operator == (const BuddyManagementService_reissueContactTicket_args & rhs) const
  {
    if (!(expirationTime == rhs.expirationTime))
      return false;
    if (!(maxUseCount == rhs.maxUseCount))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_reissueContactTicket_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_reissueContactTicket_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_reissueContactTicket_pargs {
 public:


  virtual ~BuddyManagementService_reissueContactTicket_pargs() noexcept;
  const int64_t* expirationTime;
  const int32_t* maxUseCount;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_reissueContactTicket_result__isset {
  _BuddyManagementService_reissueContactTicket_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_reissueContactTicket_result__isset;

class BuddyManagementService_reissueContactTicket_result {
 public:

  BuddyManagementService_reissueContactTicket_result(const BuddyManagementService_reissueContactTicket_result&);
  BuddyManagementService_reissueContactTicket_result& operator=(const BuddyManagementService_reissueContactTicket_result&);
  BuddyManagementService_reissueContactTicket_result() : success() {
  }

  virtual ~BuddyManagementService_reissueContactTicket_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_reissueContactTicket_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_reissueContactTicket_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_reissueContactTicket_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_reissueContactTicket_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_reissueContactTicket_presult__isset {
  _BuddyManagementService_reissueContactTicket_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_reissueContactTicket_presult__isset;

class BuddyManagementService_reissueContactTicket_presult {
 public:


  virtual ~BuddyManagementService_reissueContactTicket_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_reissueContactTicket_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_removeBuddyMember_args__isset {
  _BuddyManagementService_removeBuddyMember_args__isset() : requestId(false), userMid(false) {}
  bool requestId :1;
  bool userMid :1;
} _BuddyManagementService_removeBuddyMember_args__isset;

class BuddyManagementService_removeBuddyMember_args {
 public:

  BuddyManagementService_removeBuddyMember_args(const BuddyManagementService_removeBuddyMember_args&);
  BuddyManagementService_removeBuddyMember_args& operator=(const BuddyManagementService_removeBuddyMember_args&);
  BuddyManagementService_removeBuddyMember_args() : requestId(), userMid() {
  }

  virtual ~BuddyManagementService_removeBuddyMember_args() noexcept;
  std::string requestId;
  std::string userMid;

  _BuddyManagementService_removeBuddyMember_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_userMid(const std::string& val);

  bool operator == (const BuddyManagementService_removeBuddyMember_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(userMid == rhs.userMid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_removeBuddyMember_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_removeBuddyMember_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_removeBuddyMember_pargs {
 public:


  virtual ~BuddyManagementService_removeBuddyMember_pargs() noexcept;
  const std::string* requestId;
  const std::string* userMid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_removeBuddyMember_result__isset {
  _BuddyManagementService_removeBuddyMember_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_removeBuddyMember_result__isset;

class BuddyManagementService_removeBuddyMember_result {
 public:

  BuddyManagementService_removeBuddyMember_result(const BuddyManagementService_removeBuddyMember_result&);
  BuddyManagementService_removeBuddyMember_result& operator=(const BuddyManagementService_removeBuddyMember_result&);
  BuddyManagementService_removeBuddyMember_result() {
  }

  virtual ~BuddyManagementService_removeBuddyMember_result() noexcept;
  TalkException e;

  _BuddyManagementService_removeBuddyMember_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_removeBuddyMember_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_removeBuddyMember_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_removeBuddyMember_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_removeBuddyMember_presult__isset {
  _BuddyManagementService_removeBuddyMember_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_removeBuddyMember_presult__isset;

class BuddyManagementService_removeBuddyMember_presult {
 public:


  virtual ~BuddyManagementService_removeBuddyMember_presult() noexcept;
  TalkException e;

  _BuddyManagementService_removeBuddyMember_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_removeBuddyMembers_args__isset {
  _BuddyManagementService_removeBuddyMembers_args__isset() : requestId(false), userMids(false) {}
  bool requestId :1;
  bool userMids :1;
} _BuddyManagementService_removeBuddyMembers_args__isset;

class BuddyManagementService_removeBuddyMembers_args {
 public:

  BuddyManagementService_removeBuddyMembers_args(const BuddyManagementService_removeBuddyMembers_args&);
  BuddyManagementService_removeBuddyMembers_args& operator=(const BuddyManagementService_removeBuddyMembers_args&);
  BuddyManagementService_removeBuddyMembers_args() : requestId() {
  }

  virtual ~BuddyManagementService_removeBuddyMembers_args() noexcept;
  std::string requestId;
  std::vector<std::string>  userMids;

  _BuddyManagementService_removeBuddyMembers_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_userMids(const std::vector<std::string> & val);

  bool operator == (const BuddyManagementService_removeBuddyMembers_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(userMids == rhs.userMids))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_removeBuddyMembers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_removeBuddyMembers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_removeBuddyMembers_pargs {
 public:


  virtual ~BuddyManagementService_removeBuddyMembers_pargs() noexcept;
  const std::string* requestId;
  const std::vector<std::string> * userMids;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_removeBuddyMembers_result__isset {
  _BuddyManagementService_removeBuddyMembers_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_removeBuddyMembers_result__isset;

class BuddyManagementService_removeBuddyMembers_result {
 public:

  BuddyManagementService_removeBuddyMembers_result(const BuddyManagementService_removeBuddyMembers_result&);
  BuddyManagementService_removeBuddyMembers_result& operator=(const BuddyManagementService_removeBuddyMembers_result&);
  BuddyManagementService_removeBuddyMembers_result() {
  }

  virtual ~BuddyManagementService_removeBuddyMembers_result() noexcept;
  TalkException e;

  _BuddyManagementService_removeBuddyMembers_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_removeBuddyMembers_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_removeBuddyMembers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_removeBuddyMembers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_removeBuddyMembers_presult__isset {
  _BuddyManagementService_removeBuddyMembers_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_removeBuddyMembers_presult__isset;

class BuddyManagementService_removeBuddyMembers_presult {
 public:


  virtual ~BuddyManagementService_removeBuddyMembers_presult() noexcept;
  TalkException e;

  _BuddyManagementService_removeBuddyMembers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToAll_args__isset {
  _BuddyManagementService_sendBuddyContentMessageToAll_args__isset() : requestId(false), msg(false), content(false) {}
  bool requestId :1;
  bool msg :1;
  bool content :1;
} _BuddyManagementService_sendBuddyContentMessageToAll_args__isset;

class BuddyManagementService_sendBuddyContentMessageToAll_args {
 public:

  BuddyManagementService_sendBuddyContentMessageToAll_args(const BuddyManagementService_sendBuddyContentMessageToAll_args&);
  BuddyManagementService_sendBuddyContentMessageToAll_args& operator=(const BuddyManagementService_sendBuddyContentMessageToAll_args&);
  BuddyManagementService_sendBuddyContentMessageToAll_args() : requestId(), content() {
  }

  virtual ~BuddyManagementService_sendBuddyContentMessageToAll_args() noexcept;
  std::string requestId;
  Message msg;
  std::string content;

  _BuddyManagementService_sendBuddyContentMessageToAll_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_msg(const Message& val);

  void __set_content(const std::string& val);

  bool operator == (const BuddyManagementService_sendBuddyContentMessageToAll_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(msg == rhs.msg))
      return false;
    if (!(content == rhs.content))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyContentMessageToAll_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyContentMessageToAll_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_sendBuddyContentMessageToAll_pargs {
 public:


  virtual ~BuddyManagementService_sendBuddyContentMessageToAll_pargs() noexcept;
  const std::string* requestId;
  const Message* msg;
  const std::string* content;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToAll_result__isset {
  _BuddyManagementService_sendBuddyContentMessageToAll_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyContentMessageToAll_result__isset;

class BuddyManagementService_sendBuddyContentMessageToAll_result {
 public:

  BuddyManagementService_sendBuddyContentMessageToAll_result(const BuddyManagementService_sendBuddyContentMessageToAll_result&);
  BuddyManagementService_sendBuddyContentMessageToAll_result& operator=(const BuddyManagementService_sendBuddyContentMessageToAll_result&);
  BuddyManagementService_sendBuddyContentMessageToAll_result() {
  }

  virtual ~BuddyManagementService_sendBuddyContentMessageToAll_result() noexcept;
  SendBuddyMessageResult success;
  TalkException e;

  _BuddyManagementService_sendBuddyContentMessageToAll_result__isset __isset;

  void __set_success(const SendBuddyMessageResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_sendBuddyContentMessageToAll_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyContentMessageToAll_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyContentMessageToAll_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToAll_presult__isset {
  _BuddyManagementService_sendBuddyContentMessageToAll_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyContentMessageToAll_presult__isset;

class BuddyManagementService_sendBuddyContentMessageToAll_presult {
 public:


  virtual ~BuddyManagementService_sendBuddyContentMessageToAll_presult() noexcept;
  SendBuddyMessageResult* success;
  TalkException e;

  _BuddyManagementService_sendBuddyContentMessageToAll_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToAllAsync_args__isset {
  _BuddyManagementService_sendBuddyContentMessageToAllAsync_args__isset() : requestId(false), msg(false), content(false) {}
  bool requestId :1;
  bool msg :1;
  bool content :1;
} _BuddyManagementService_sendBuddyContentMessageToAllAsync_args__isset;

class BuddyManagementService_sendBuddyContentMessageToAllAsync_args {
 public:

  BuddyManagementService_sendBuddyContentMessageToAllAsync_args(const BuddyManagementService_sendBuddyContentMessageToAllAsync_args&);
  BuddyManagementService_sendBuddyContentMessageToAllAsync_args& operator=(const BuddyManagementService_sendBuddyContentMessageToAllAsync_args&);
  BuddyManagementService_sendBuddyContentMessageToAllAsync_args() : requestId(), content() {
  }

  virtual ~BuddyManagementService_sendBuddyContentMessageToAllAsync_args() noexcept;
  std::string requestId;
  Message msg;
  std::string content;

  _BuddyManagementService_sendBuddyContentMessageToAllAsync_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_msg(const Message& val);

  void __set_content(const std::string& val);

  bool operator == (const BuddyManagementService_sendBuddyContentMessageToAllAsync_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(msg == rhs.msg))
      return false;
    if (!(content == rhs.content))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyContentMessageToAllAsync_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyContentMessageToAllAsync_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_sendBuddyContentMessageToAllAsync_pargs {
 public:


  virtual ~BuddyManagementService_sendBuddyContentMessageToAllAsync_pargs() noexcept;
  const std::string* requestId;
  const Message* msg;
  const std::string* content;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToAllAsync_result__isset {
  _BuddyManagementService_sendBuddyContentMessageToAllAsync_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyContentMessageToAllAsync_result__isset;

class BuddyManagementService_sendBuddyContentMessageToAllAsync_result {
 public:

  BuddyManagementService_sendBuddyContentMessageToAllAsync_result(const BuddyManagementService_sendBuddyContentMessageToAllAsync_result&);
  BuddyManagementService_sendBuddyContentMessageToAllAsync_result& operator=(const BuddyManagementService_sendBuddyContentMessageToAllAsync_result&);
  BuddyManagementService_sendBuddyContentMessageToAllAsync_result() : success() {
  }

  virtual ~BuddyManagementService_sendBuddyContentMessageToAllAsync_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_sendBuddyContentMessageToAllAsync_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_sendBuddyContentMessageToAllAsync_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyContentMessageToAllAsync_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyContentMessageToAllAsync_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToAllAsync_presult__isset {
  _BuddyManagementService_sendBuddyContentMessageToAllAsync_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyContentMessageToAllAsync_presult__isset;

class BuddyManagementService_sendBuddyContentMessageToAllAsync_presult {
 public:


  virtual ~BuddyManagementService_sendBuddyContentMessageToAllAsync_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_sendBuddyContentMessageToAllAsync_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToMids_args__isset {
  _BuddyManagementService_sendBuddyContentMessageToMids_args__isset() : requestId(false), msg(false), content(false), mids(false) {}
  bool requestId :1;
  bool msg :1;
  bool content :1;
  bool mids :1;
} _BuddyManagementService_sendBuddyContentMessageToMids_args__isset;

class BuddyManagementService_sendBuddyContentMessageToMids_args {
 public:

  BuddyManagementService_sendBuddyContentMessageToMids_args(const BuddyManagementService_sendBuddyContentMessageToMids_args&);
  BuddyManagementService_sendBuddyContentMessageToMids_args& operator=(const BuddyManagementService_sendBuddyContentMessageToMids_args&);
  BuddyManagementService_sendBuddyContentMessageToMids_args() : requestId(), content() {
  }

  virtual ~BuddyManagementService_sendBuddyContentMessageToMids_args() noexcept;
  std::string requestId;
  Message msg;
  std::string content;
  std::vector<std::string>  mids;

  _BuddyManagementService_sendBuddyContentMessageToMids_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_msg(const Message& val);

  void __set_content(const std::string& val);

  void __set_mids(const std::vector<std::string> & val);

  bool operator == (const BuddyManagementService_sendBuddyContentMessageToMids_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(msg == rhs.msg))
      return false;
    if (!(content == rhs.content))
      return false;
    if (!(mids == rhs.mids))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyContentMessageToMids_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyContentMessageToMids_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_sendBuddyContentMessageToMids_pargs {
 public:


  virtual ~BuddyManagementService_sendBuddyContentMessageToMids_pargs() noexcept;
  const std::string* requestId;
  const Message* msg;
  const std::string* content;
  const std::vector<std::string> * mids;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToMids_result__isset {
  _BuddyManagementService_sendBuddyContentMessageToMids_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyContentMessageToMids_result__isset;

class BuddyManagementService_sendBuddyContentMessageToMids_result {
 public:

  BuddyManagementService_sendBuddyContentMessageToMids_result(const BuddyManagementService_sendBuddyContentMessageToMids_result&);
  BuddyManagementService_sendBuddyContentMessageToMids_result& operator=(const BuddyManagementService_sendBuddyContentMessageToMids_result&);
  BuddyManagementService_sendBuddyContentMessageToMids_result() {
  }

  virtual ~BuddyManagementService_sendBuddyContentMessageToMids_result() noexcept;
  SendBuddyMessageResult success;
  TalkException e;

  _BuddyManagementService_sendBuddyContentMessageToMids_result__isset __isset;

  void __set_success(const SendBuddyMessageResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_sendBuddyContentMessageToMids_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyContentMessageToMids_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyContentMessageToMids_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToMids_presult__isset {
  _BuddyManagementService_sendBuddyContentMessageToMids_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyContentMessageToMids_presult__isset;

class BuddyManagementService_sendBuddyContentMessageToMids_presult {
 public:


  virtual ~BuddyManagementService_sendBuddyContentMessageToMids_presult() noexcept;
  SendBuddyMessageResult* success;
  TalkException e;

  _BuddyManagementService_sendBuddyContentMessageToMids_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToMidsAsync_args__isset {
  _BuddyManagementService_sendBuddyContentMessageToMidsAsync_args__isset() : requestId(false), msg(false), content(false), mids(false) {}
  bool requestId :1;
  bool msg :1;
  bool content :1;
  bool mids :1;
} _BuddyManagementService_sendBuddyContentMessageToMidsAsync_args__isset;

class BuddyManagementService_sendBuddyContentMessageToMidsAsync_args {
 public:

  BuddyManagementService_sendBuddyContentMessageToMidsAsync_args(const BuddyManagementService_sendBuddyContentMessageToMidsAsync_args&);
  BuddyManagementService_sendBuddyContentMessageToMidsAsync_args& operator=(const BuddyManagementService_sendBuddyContentMessageToMidsAsync_args&);
  BuddyManagementService_sendBuddyContentMessageToMidsAsync_args() : requestId(), content() {
  }

  virtual ~BuddyManagementService_sendBuddyContentMessageToMidsAsync_args() noexcept;
  std::string requestId;
  Message msg;
  std::string content;
  std::vector<std::string>  mids;

  _BuddyManagementService_sendBuddyContentMessageToMidsAsync_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_msg(const Message& val);

  void __set_content(const std::string& val);

  void __set_mids(const std::vector<std::string> & val);

  bool operator == (const BuddyManagementService_sendBuddyContentMessageToMidsAsync_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(msg == rhs.msg))
      return false;
    if (!(content == rhs.content))
      return false;
    if (!(mids == rhs.mids))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyContentMessageToMidsAsync_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyContentMessageToMidsAsync_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_sendBuddyContentMessageToMidsAsync_pargs {
 public:


  virtual ~BuddyManagementService_sendBuddyContentMessageToMidsAsync_pargs() noexcept;
  const std::string* requestId;
  const Message* msg;
  const std::string* content;
  const std::vector<std::string> * mids;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToMidsAsync_result__isset {
  _BuddyManagementService_sendBuddyContentMessageToMidsAsync_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyContentMessageToMidsAsync_result__isset;

class BuddyManagementService_sendBuddyContentMessageToMidsAsync_result {
 public:

  BuddyManagementService_sendBuddyContentMessageToMidsAsync_result(const BuddyManagementService_sendBuddyContentMessageToMidsAsync_result&);
  BuddyManagementService_sendBuddyContentMessageToMidsAsync_result& operator=(const BuddyManagementService_sendBuddyContentMessageToMidsAsync_result&);
  BuddyManagementService_sendBuddyContentMessageToMidsAsync_result() : success() {
  }

  virtual ~BuddyManagementService_sendBuddyContentMessageToMidsAsync_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_sendBuddyContentMessageToMidsAsync_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_sendBuddyContentMessageToMidsAsync_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyContentMessageToMidsAsync_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyContentMessageToMidsAsync_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyContentMessageToMidsAsync_presult__isset {
  _BuddyManagementService_sendBuddyContentMessageToMidsAsync_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyContentMessageToMidsAsync_presult__isset;

class BuddyManagementService_sendBuddyContentMessageToMidsAsync_presult {
 public:


  virtual ~BuddyManagementService_sendBuddyContentMessageToMidsAsync_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_sendBuddyContentMessageToMidsAsync_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_sendBuddyMessageToAll_args__isset {
  _BuddyManagementService_sendBuddyMessageToAll_args__isset() : requestId(false), msg(false) {}
  bool requestId :1;
  bool msg :1;
} _BuddyManagementService_sendBuddyMessageToAll_args__isset;

class BuddyManagementService_sendBuddyMessageToAll_args {
 public:

  BuddyManagementService_sendBuddyMessageToAll_args(const BuddyManagementService_sendBuddyMessageToAll_args&);
  BuddyManagementService_sendBuddyMessageToAll_args& operator=(const BuddyManagementService_sendBuddyMessageToAll_args&);
  BuddyManagementService_sendBuddyMessageToAll_args() : requestId() {
  }

  virtual ~BuddyManagementService_sendBuddyMessageToAll_args() noexcept;
  std::string requestId;
  Message msg;

  _BuddyManagementService_sendBuddyMessageToAll_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_msg(const Message& val);

  bool operator == (const BuddyManagementService_sendBuddyMessageToAll_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(msg == rhs.msg))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyMessageToAll_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyMessageToAll_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_sendBuddyMessageToAll_pargs {
 public:


  virtual ~BuddyManagementService_sendBuddyMessageToAll_pargs() noexcept;
  const std::string* requestId;
  const Message* msg;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyMessageToAll_result__isset {
  _BuddyManagementService_sendBuddyMessageToAll_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyMessageToAll_result__isset;

class BuddyManagementService_sendBuddyMessageToAll_result {
 public:

  BuddyManagementService_sendBuddyMessageToAll_result(const BuddyManagementService_sendBuddyMessageToAll_result&);
  BuddyManagementService_sendBuddyMessageToAll_result& operator=(const BuddyManagementService_sendBuddyMessageToAll_result&);
  BuddyManagementService_sendBuddyMessageToAll_result() {
  }

  virtual ~BuddyManagementService_sendBuddyMessageToAll_result() noexcept;
  SendBuddyMessageResult success;
  TalkException e;

  _BuddyManagementService_sendBuddyMessageToAll_result__isset __isset;

  void __set_success(const SendBuddyMessageResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_sendBuddyMessageToAll_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyMessageToAll_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyMessageToAll_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyMessageToAll_presult__isset {
  _BuddyManagementService_sendBuddyMessageToAll_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyMessageToAll_presult__isset;

class BuddyManagementService_sendBuddyMessageToAll_presult {
 public:


  virtual ~BuddyManagementService_sendBuddyMessageToAll_presult() noexcept;
  SendBuddyMessageResult* success;
  TalkException e;

  _BuddyManagementService_sendBuddyMessageToAll_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_sendBuddyMessageToAllAsync_args__isset {
  _BuddyManagementService_sendBuddyMessageToAllAsync_args__isset() : requestId(false), msg(false) {}
  bool requestId :1;
  bool msg :1;
} _BuddyManagementService_sendBuddyMessageToAllAsync_args__isset;

class BuddyManagementService_sendBuddyMessageToAllAsync_args {
 public:

  BuddyManagementService_sendBuddyMessageToAllAsync_args(const BuddyManagementService_sendBuddyMessageToAllAsync_args&);
  BuddyManagementService_sendBuddyMessageToAllAsync_args& operator=(const BuddyManagementService_sendBuddyMessageToAllAsync_args&);
  BuddyManagementService_sendBuddyMessageToAllAsync_args() : requestId() {
  }

  virtual ~BuddyManagementService_sendBuddyMessageToAllAsync_args() noexcept;
  std::string requestId;
  Message msg;

  _BuddyManagementService_sendBuddyMessageToAllAsync_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_msg(const Message& val);

  bool operator == (const BuddyManagementService_sendBuddyMessageToAllAsync_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(msg == rhs.msg))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyMessageToAllAsync_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyMessageToAllAsync_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_sendBuddyMessageToAllAsync_pargs {
 public:


  virtual ~BuddyManagementService_sendBuddyMessageToAllAsync_pargs() noexcept;
  const std::string* requestId;
  const Message* msg;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyMessageToAllAsync_result__isset {
  _BuddyManagementService_sendBuddyMessageToAllAsync_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyMessageToAllAsync_result__isset;

class BuddyManagementService_sendBuddyMessageToAllAsync_result {
 public:

  BuddyManagementService_sendBuddyMessageToAllAsync_result(const BuddyManagementService_sendBuddyMessageToAllAsync_result&);
  BuddyManagementService_sendBuddyMessageToAllAsync_result& operator=(const BuddyManagementService_sendBuddyMessageToAllAsync_result&);
  BuddyManagementService_sendBuddyMessageToAllAsync_result() : success() {
  }

  virtual ~BuddyManagementService_sendBuddyMessageToAllAsync_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_sendBuddyMessageToAllAsync_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_sendBuddyMessageToAllAsync_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyMessageToAllAsync_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyMessageToAllAsync_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyMessageToAllAsync_presult__isset {
  _BuddyManagementService_sendBuddyMessageToAllAsync_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyMessageToAllAsync_presult__isset;

class BuddyManagementService_sendBuddyMessageToAllAsync_presult {
 public:


  virtual ~BuddyManagementService_sendBuddyMessageToAllAsync_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_sendBuddyMessageToAllAsync_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_sendBuddyMessageToMids_args__isset {
  _BuddyManagementService_sendBuddyMessageToMids_args__isset() : requestId(false), msg(false), mids(false) {}
  bool requestId :1;
  bool msg :1;
  bool mids :1;
} _BuddyManagementService_sendBuddyMessageToMids_args__isset;

class BuddyManagementService_sendBuddyMessageToMids_args {
 public:

  BuddyManagementService_sendBuddyMessageToMids_args(const BuddyManagementService_sendBuddyMessageToMids_args&);
  BuddyManagementService_sendBuddyMessageToMids_args& operator=(const BuddyManagementService_sendBuddyMessageToMids_args&);
  BuddyManagementService_sendBuddyMessageToMids_args() : requestId() {
  }

  virtual ~BuddyManagementService_sendBuddyMessageToMids_args() noexcept;
  std::string requestId;
  Message msg;
  std::vector<std::string>  mids;

  _BuddyManagementService_sendBuddyMessageToMids_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_msg(const Message& val);

  void __set_mids(const std::vector<std::string> & val);

  bool operator == (const BuddyManagementService_sendBuddyMessageToMids_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(msg == rhs.msg))
      return false;
    if (!(mids == rhs.mids))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyMessageToMids_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyMessageToMids_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_sendBuddyMessageToMids_pargs {
 public:


  virtual ~BuddyManagementService_sendBuddyMessageToMids_pargs() noexcept;
  const std::string* requestId;
  const Message* msg;
  const std::vector<std::string> * mids;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyMessageToMids_result__isset {
  _BuddyManagementService_sendBuddyMessageToMids_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyMessageToMids_result__isset;

class BuddyManagementService_sendBuddyMessageToMids_result {
 public:

  BuddyManagementService_sendBuddyMessageToMids_result(const BuddyManagementService_sendBuddyMessageToMids_result&);
  BuddyManagementService_sendBuddyMessageToMids_result& operator=(const BuddyManagementService_sendBuddyMessageToMids_result&);
  BuddyManagementService_sendBuddyMessageToMids_result() {
  }

  virtual ~BuddyManagementService_sendBuddyMessageToMids_result() noexcept;
  SendBuddyMessageResult success;
  TalkException e;

  _BuddyManagementService_sendBuddyMessageToMids_result__isset __isset;

  void __set_success(const SendBuddyMessageResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_sendBuddyMessageToMids_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyMessageToMids_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyMessageToMids_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyMessageToMids_presult__isset {
  _BuddyManagementService_sendBuddyMessageToMids_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyMessageToMids_presult__isset;

class BuddyManagementService_sendBuddyMessageToMids_presult {
 public:


  virtual ~BuddyManagementService_sendBuddyMessageToMids_presult() noexcept;
  SendBuddyMessageResult* success;
  TalkException e;

  _BuddyManagementService_sendBuddyMessageToMids_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_sendBuddyMessageToMidsAsync_args__isset {
  _BuddyManagementService_sendBuddyMessageToMidsAsync_args__isset() : requestId(false), msg(false), mids(false) {}
  bool requestId :1;
  bool msg :1;
  bool mids :1;
} _BuddyManagementService_sendBuddyMessageToMidsAsync_args__isset;

class BuddyManagementService_sendBuddyMessageToMidsAsync_args {
 public:

  BuddyManagementService_sendBuddyMessageToMidsAsync_args(const BuddyManagementService_sendBuddyMessageToMidsAsync_args&);
  BuddyManagementService_sendBuddyMessageToMidsAsync_args& operator=(const BuddyManagementService_sendBuddyMessageToMidsAsync_args&);
  BuddyManagementService_sendBuddyMessageToMidsAsync_args() : requestId() {
  }

  virtual ~BuddyManagementService_sendBuddyMessageToMidsAsync_args() noexcept;
  std::string requestId;
  Message msg;
  std::vector<std::string>  mids;

  _BuddyManagementService_sendBuddyMessageToMidsAsync_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_msg(const Message& val);

  void __set_mids(const std::vector<std::string> & val);

  bool operator == (const BuddyManagementService_sendBuddyMessageToMidsAsync_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(msg == rhs.msg))
      return false;
    if (!(mids == rhs.mids))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyMessageToMidsAsync_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyMessageToMidsAsync_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_sendBuddyMessageToMidsAsync_pargs {
 public:


  virtual ~BuddyManagementService_sendBuddyMessageToMidsAsync_pargs() noexcept;
  const std::string* requestId;
  const Message* msg;
  const std::vector<std::string> * mids;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyMessageToMidsAsync_result__isset {
  _BuddyManagementService_sendBuddyMessageToMidsAsync_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyMessageToMidsAsync_result__isset;

class BuddyManagementService_sendBuddyMessageToMidsAsync_result {
 public:

  BuddyManagementService_sendBuddyMessageToMidsAsync_result(const BuddyManagementService_sendBuddyMessageToMidsAsync_result&);
  BuddyManagementService_sendBuddyMessageToMidsAsync_result& operator=(const BuddyManagementService_sendBuddyMessageToMidsAsync_result&);
  BuddyManagementService_sendBuddyMessageToMidsAsync_result() : success() {
  }

  virtual ~BuddyManagementService_sendBuddyMessageToMidsAsync_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_sendBuddyMessageToMidsAsync_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_sendBuddyMessageToMidsAsync_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendBuddyMessageToMidsAsync_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendBuddyMessageToMidsAsync_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendBuddyMessageToMidsAsync_presult__isset {
  _BuddyManagementService_sendBuddyMessageToMidsAsync_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_sendBuddyMessageToMidsAsync_presult__isset;

class BuddyManagementService_sendBuddyMessageToMidsAsync_presult {
 public:


  virtual ~BuddyManagementService_sendBuddyMessageToMidsAsync_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_sendBuddyMessageToMidsAsync_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_sendIndividualEventToAllAsync_args__isset {
  _BuddyManagementService_sendIndividualEventToAllAsync_args__isset() : requestId(false), buddyMid(false), notificationStatus(false) {}
  bool requestId :1;
  bool buddyMid :1;
  bool notificationStatus :1;
} _BuddyManagementService_sendIndividualEventToAllAsync_args__isset;

class BuddyManagementService_sendIndividualEventToAllAsync_args {
 public:

  BuddyManagementService_sendIndividualEventToAllAsync_args(const BuddyManagementService_sendIndividualEventToAllAsync_args&);
  BuddyManagementService_sendIndividualEventToAllAsync_args& operator=(const BuddyManagementService_sendIndividualEventToAllAsync_args&);
  BuddyManagementService_sendIndividualEventToAllAsync_args() : requestId(), buddyMid(), notificationStatus((NotificationStatus::type)0) {
  }

  virtual ~BuddyManagementService_sendIndividualEventToAllAsync_args() noexcept;
  std::string requestId;
  std::string buddyMid;
  /**
   * 
   * @see NotificationStatus
   */
  NotificationStatus::type notificationStatus;

  _BuddyManagementService_sendIndividualEventToAllAsync_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_buddyMid(const std::string& val);

  void __set_notificationStatus(const NotificationStatus::type val);

  bool operator == (const BuddyManagementService_sendIndividualEventToAllAsync_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(buddyMid == rhs.buddyMid))
      return false;
    if (!(notificationStatus == rhs.notificationStatus))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendIndividualEventToAllAsync_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendIndividualEventToAllAsync_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_sendIndividualEventToAllAsync_pargs {
 public:


  virtual ~BuddyManagementService_sendIndividualEventToAllAsync_pargs() noexcept;
  const std::string* requestId;
  const std::string* buddyMid;
  /**
   * 
   * @see NotificationStatus
   */
  const NotificationStatus::type* notificationStatus;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendIndividualEventToAllAsync_result__isset {
  _BuddyManagementService_sendIndividualEventToAllAsync_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_sendIndividualEventToAllAsync_result__isset;

class BuddyManagementService_sendIndividualEventToAllAsync_result {
 public:

  BuddyManagementService_sendIndividualEventToAllAsync_result(const BuddyManagementService_sendIndividualEventToAllAsync_result&);
  BuddyManagementService_sendIndividualEventToAllAsync_result& operator=(const BuddyManagementService_sendIndividualEventToAllAsync_result&);
  BuddyManagementService_sendIndividualEventToAllAsync_result() {
  }

  virtual ~BuddyManagementService_sendIndividualEventToAllAsync_result() noexcept;
  TalkException e;

  _BuddyManagementService_sendIndividualEventToAllAsync_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_sendIndividualEventToAllAsync_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_sendIndividualEventToAllAsync_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_sendIndividualEventToAllAsync_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_sendIndividualEventToAllAsync_presult__isset {
  _BuddyManagementService_sendIndividualEventToAllAsync_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_sendIndividualEventToAllAsync_presult__isset;

class BuddyManagementService_sendIndividualEventToAllAsync_presult {
 public:


  virtual ~BuddyManagementService_sendIndividualEventToAllAsync_presult() noexcept;
  TalkException e;

  _BuddyManagementService_sendIndividualEventToAllAsync_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_setBuddyOnAir_args__isset {
  _BuddyManagementService_setBuddyOnAir_args__isset() : requestId(false), onAir(false) {}
  bool requestId :1;
  bool onAir :1;
} _BuddyManagementService_setBuddyOnAir_args__isset;

class BuddyManagementService_setBuddyOnAir_args {
 public:

  BuddyManagementService_setBuddyOnAir_args(const BuddyManagementService_setBuddyOnAir_args&);
  BuddyManagementService_setBuddyOnAir_args& operator=(const BuddyManagementService_setBuddyOnAir_args&);
  BuddyManagementService_setBuddyOnAir_args() : requestId(), onAir(0) {
  }

  virtual ~BuddyManagementService_setBuddyOnAir_args() noexcept;
  std::string requestId;
  bool onAir;

  _BuddyManagementService_setBuddyOnAir_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_onAir(const bool val);

  bool operator == (const BuddyManagementService_setBuddyOnAir_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(onAir == rhs.onAir))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_setBuddyOnAir_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_setBuddyOnAir_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_setBuddyOnAir_pargs {
 public:


  virtual ~BuddyManagementService_setBuddyOnAir_pargs() noexcept;
  const std::string* requestId;
  const bool* onAir;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_setBuddyOnAir_result__isset {
  _BuddyManagementService_setBuddyOnAir_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_setBuddyOnAir_result__isset;

class BuddyManagementService_setBuddyOnAir_result {
 public:

  BuddyManagementService_setBuddyOnAir_result(const BuddyManagementService_setBuddyOnAir_result&);
  BuddyManagementService_setBuddyOnAir_result& operator=(const BuddyManagementService_setBuddyOnAir_result&);
  BuddyManagementService_setBuddyOnAir_result() {
  }

  virtual ~BuddyManagementService_setBuddyOnAir_result() noexcept;
  SetBuddyOnAirResult success;
  TalkException e;

  _BuddyManagementService_setBuddyOnAir_result__isset __isset;

  void __set_success(const SetBuddyOnAirResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_setBuddyOnAir_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_setBuddyOnAir_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_setBuddyOnAir_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_setBuddyOnAir_presult__isset {
  _BuddyManagementService_setBuddyOnAir_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_setBuddyOnAir_presult__isset;

class BuddyManagementService_setBuddyOnAir_presult {
 public:


  virtual ~BuddyManagementService_setBuddyOnAir_presult() noexcept;
  SetBuddyOnAirResult* success;
  TalkException e;

  _BuddyManagementService_setBuddyOnAir_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_setBuddyOnAirAsync_args__isset {
  _BuddyManagementService_setBuddyOnAirAsync_args__isset() : requestId(false), onAir(false) {}
  bool requestId :1;
  bool onAir :1;
} _BuddyManagementService_setBuddyOnAirAsync_args__isset;

class BuddyManagementService_setBuddyOnAirAsync_args {
 public:

  BuddyManagementService_setBuddyOnAirAsync_args(const BuddyManagementService_setBuddyOnAirAsync_args&);
  BuddyManagementService_setBuddyOnAirAsync_args& operator=(const BuddyManagementService_setBuddyOnAirAsync_args&);
  BuddyManagementService_setBuddyOnAirAsync_args() : requestId(), onAir(0) {
  }

  virtual ~BuddyManagementService_setBuddyOnAirAsync_args() noexcept;
  std::string requestId;
  bool onAir;

  _BuddyManagementService_setBuddyOnAirAsync_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_onAir(const bool val);

  bool operator == (const BuddyManagementService_setBuddyOnAirAsync_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(onAir == rhs.onAir))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_setBuddyOnAirAsync_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_setBuddyOnAirAsync_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_setBuddyOnAirAsync_pargs {
 public:


  virtual ~BuddyManagementService_setBuddyOnAirAsync_pargs() noexcept;
  const std::string* requestId;
  const bool* onAir;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_setBuddyOnAirAsync_result__isset {
  _BuddyManagementService_setBuddyOnAirAsync_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_setBuddyOnAirAsync_result__isset;

class BuddyManagementService_setBuddyOnAirAsync_result {
 public:

  BuddyManagementService_setBuddyOnAirAsync_result(const BuddyManagementService_setBuddyOnAirAsync_result&);
  BuddyManagementService_setBuddyOnAirAsync_result& operator=(const BuddyManagementService_setBuddyOnAirAsync_result&);
  BuddyManagementService_setBuddyOnAirAsync_result() : success() {
  }

  virtual ~BuddyManagementService_setBuddyOnAirAsync_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_setBuddyOnAirAsync_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_setBuddyOnAirAsync_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_setBuddyOnAirAsync_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_setBuddyOnAirAsync_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_setBuddyOnAirAsync_presult__isset {
  _BuddyManagementService_setBuddyOnAirAsync_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_setBuddyOnAirAsync_presult__isset;

class BuddyManagementService_setBuddyOnAirAsync_presult {
 public:


  virtual ~BuddyManagementService_setBuddyOnAirAsync_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_setBuddyOnAirAsync_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_storeMessage_args__isset {
  _BuddyManagementService_storeMessage_args__isset() : requestId(false), messageRequest(false) {}
  bool requestId :1;
  bool messageRequest :1;
} _BuddyManagementService_storeMessage_args__isset;

class BuddyManagementService_storeMessage_args {
 public:

  BuddyManagementService_storeMessage_args(const BuddyManagementService_storeMessage_args&);
  BuddyManagementService_storeMessage_args& operator=(const BuddyManagementService_storeMessage_args&);
  BuddyManagementService_storeMessage_args() : requestId() {
  }

  virtual ~BuddyManagementService_storeMessage_args() noexcept;
  std::string requestId;
  BuddyMessageRequest messageRequest;

  _BuddyManagementService_storeMessage_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_messageRequest(const BuddyMessageRequest& val);

  bool operator == (const BuddyManagementService_storeMessage_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(messageRequest == rhs.messageRequest))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_storeMessage_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_storeMessage_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_storeMessage_pargs {
 public:


  virtual ~BuddyManagementService_storeMessage_pargs() noexcept;
  const std::string* requestId;
  const BuddyMessageRequest* messageRequest;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_storeMessage_result__isset {
  _BuddyManagementService_storeMessage_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_storeMessage_result__isset;

class BuddyManagementService_storeMessage_result {
 public:

  BuddyManagementService_storeMessage_result(const BuddyManagementService_storeMessage_result&);
  BuddyManagementService_storeMessage_result& operator=(const BuddyManagementService_storeMessage_result&);
  BuddyManagementService_storeMessage_result() {
  }

  virtual ~BuddyManagementService_storeMessage_result() noexcept;
  SendBuddyMessageResult success;
  TalkException e;

  _BuddyManagementService_storeMessage_result__isset __isset;

  void __set_success(const SendBuddyMessageResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_storeMessage_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_storeMessage_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_storeMessage_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_storeMessage_presult__isset {
  _BuddyManagementService_storeMessage_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_storeMessage_presult__isset;

class BuddyManagementService_storeMessage_presult {
 public:


  virtual ~BuddyManagementService_storeMessage_presult() noexcept;
  SendBuddyMessageResult* success;
  TalkException e;

  _BuddyManagementService_storeMessage_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_unblockBuddyMember_args__isset {
  _BuddyManagementService_unblockBuddyMember_args__isset() : requestId(false), mid(false) {}
  bool requestId :1;
  bool mid :1;
} _BuddyManagementService_unblockBuddyMember_args__isset;

class BuddyManagementService_unblockBuddyMember_args {
 public:

  BuddyManagementService_unblockBuddyMember_args(const BuddyManagementService_unblockBuddyMember_args&);
  BuddyManagementService_unblockBuddyMember_args& operator=(const BuddyManagementService_unblockBuddyMember_args&);
  BuddyManagementService_unblockBuddyMember_args() : requestId(), mid() {
  }

  virtual ~BuddyManagementService_unblockBuddyMember_args() noexcept;
  std::string requestId;
  std::string mid;

  _BuddyManagementService_unblockBuddyMember_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_mid(const std::string& val);

  bool operator == (const BuddyManagementService_unblockBuddyMember_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(mid == rhs.mid))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_unblockBuddyMember_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_unblockBuddyMember_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_unblockBuddyMember_pargs {
 public:


  virtual ~BuddyManagementService_unblockBuddyMember_pargs() noexcept;
  const std::string* requestId;
  const std::string* mid;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_unblockBuddyMember_result__isset {
  _BuddyManagementService_unblockBuddyMember_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_unblockBuddyMember_result__isset;

class BuddyManagementService_unblockBuddyMember_result {
 public:

  BuddyManagementService_unblockBuddyMember_result(const BuddyManagementService_unblockBuddyMember_result&);
  BuddyManagementService_unblockBuddyMember_result& operator=(const BuddyManagementService_unblockBuddyMember_result&);
  BuddyManagementService_unblockBuddyMember_result() {
  }

  virtual ~BuddyManagementService_unblockBuddyMember_result() noexcept;
  TalkException e;

  _BuddyManagementService_unblockBuddyMember_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_unblockBuddyMember_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_unblockBuddyMember_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_unblockBuddyMember_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_unblockBuddyMember_presult__isset {
  _BuddyManagementService_unblockBuddyMember_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_unblockBuddyMember_presult__isset;

class BuddyManagementService_unblockBuddyMember_presult {
 public:


  virtual ~BuddyManagementService_unblockBuddyMember_presult() noexcept;
  TalkException e;

  _BuddyManagementService_unblockBuddyMember_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_unregisterBuddy_args__isset {
  _BuddyManagementService_unregisterBuddy_args__isset() : requestId(false) {}
  bool requestId :1;
} _BuddyManagementService_unregisterBuddy_args__isset;

class BuddyManagementService_unregisterBuddy_args {
 public:

  BuddyManagementService_unregisterBuddy_args(const BuddyManagementService_unregisterBuddy_args&);
  BuddyManagementService_unregisterBuddy_args& operator=(const BuddyManagementService_unregisterBuddy_args&);
  BuddyManagementService_unregisterBuddy_args() : requestId() {
  }

  virtual ~BuddyManagementService_unregisterBuddy_args() noexcept;
  std::string requestId;

  _BuddyManagementService_unregisterBuddy_args__isset __isset;

  void __set_requestId(const std::string& val);

  bool operator == (const BuddyManagementService_unregisterBuddy_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_unregisterBuddy_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_unregisterBuddy_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_unregisterBuddy_pargs {
 public:


  virtual ~BuddyManagementService_unregisterBuddy_pargs() noexcept;
  const std::string* requestId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_unregisterBuddy_result__isset {
  _BuddyManagementService_unregisterBuddy_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_unregisterBuddy_result__isset;

class BuddyManagementService_unregisterBuddy_result {
 public:

  BuddyManagementService_unregisterBuddy_result(const BuddyManagementService_unregisterBuddy_result&);
  BuddyManagementService_unregisterBuddy_result& operator=(const BuddyManagementService_unregisterBuddy_result&);
  BuddyManagementService_unregisterBuddy_result() {
  }

  virtual ~BuddyManagementService_unregisterBuddy_result() noexcept;
  TalkException e;

  _BuddyManagementService_unregisterBuddy_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_unregisterBuddy_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_unregisterBuddy_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_unregisterBuddy_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_unregisterBuddy_presult__isset {
  _BuddyManagementService_unregisterBuddy_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_unregisterBuddy_presult__isset;

class BuddyManagementService_unregisterBuddy_presult {
 public:


  virtual ~BuddyManagementService_unregisterBuddy_presult() noexcept;
  TalkException e;

  _BuddyManagementService_unregisterBuddy_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_unregisterBuddyAdmin_args__isset {
  _BuddyManagementService_unregisterBuddyAdmin_args__isset() : requestId(false) {}
  bool requestId :1;
} _BuddyManagementService_unregisterBuddyAdmin_args__isset;

class BuddyManagementService_unregisterBuddyAdmin_args {
 public:

  BuddyManagementService_unregisterBuddyAdmin_args(const BuddyManagementService_unregisterBuddyAdmin_args&);
  BuddyManagementService_unregisterBuddyAdmin_args& operator=(const BuddyManagementService_unregisterBuddyAdmin_args&);
  BuddyManagementService_unregisterBuddyAdmin_args() : requestId() {
  }

  virtual ~BuddyManagementService_unregisterBuddyAdmin_args() noexcept;
  std::string requestId;

  _BuddyManagementService_unregisterBuddyAdmin_args__isset __isset;

  void __set_requestId(const std::string& val);

  bool operator == (const BuddyManagementService_unregisterBuddyAdmin_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_unregisterBuddyAdmin_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_unregisterBuddyAdmin_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_unregisterBuddyAdmin_pargs {
 public:


  virtual ~BuddyManagementService_unregisterBuddyAdmin_pargs() noexcept;
  const std::string* requestId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_unregisterBuddyAdmin_result__isset {
  _BuddyManagementService_unregisterBuddyAdmin_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_unregisterBuddyAdmin_result__isset;

class BuddyManagementService_unregisterBuddyAdmin_result {
 public:

  BuddyManagementService_unregisterBuddyAdmin_result(const BuddyManagementService_unregisterBuddyAdmin_result&);
  BuddyManagementService_unregisterBuddyAdmin_result& operator=(const BuddyManagementService_unregisterBuddyAdmin_result&);
  BuddyManagementService_unregisterBuddyAdmin_result() {
  }

  virtual ~BuddyManagementService_unregisterBuddyAdmin_result() noexcept;
  TalkException e;

  _BuddyManagementService_unregisterBuddyAdmin_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_unregisterBuddyAdmin_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_unregisterBuddyAdmin_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_unregisterBuddyAdmin_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_unregisterBuddyAdmin_presult__isset {
  _BuddyManagementService_unregisterBuddyAdmin_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_unregisterBuddyAdmin_presult__isset;

class BuddyManagementService_unregisterBuddyAdmin_presult {
 public:


  virtual ~BuddyManagementService_unregisterBuddyAdmin_presult() noexcept;
  TalkException e;

  _BuddyManagementService_unregisterBuddyAdmin_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_updateBuddyAdminProfileAttribute_args__isset {
  _BuddyManagementService_updateBuddyAdminProfileAttribute_args__isset() : requestId(false), attributes(false) {}
  bool requestId :1;
  bool attributes :1;
} _BuddyManagementService_updateBuddyAdminProfileAttribute_args__isset;

class BuddyManagementService_updateBuddyAdminProfileAttribute_args {
 public:

  BuddyManagementService_updateBuddyAdminProfileAttribute_args(const BuddyManagementService_updateBuddyAdminProfileAttribute_args&);
  BuddyManagementService_updateBuddyAdminProfileAttribute_args& operator=(const BuddyManagementService_updateBuddyAdminProfileAttribute_args&);
  BuddyManagementService_updateBuddyAdminProfileAttribute_args() : requestId() {
  }

  virtual ~BuddyManagementService_updateBuddyAdminProfileAttribute_args() noexcept;
  std::string requestId;
  std::map<std::string, std::string>  attributes;

  _BuddyManagementService_updateBuddyAdminProfileAttribute_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_attributes(const std::map<std::string, std::string> & val);

  bool operator == (const BuddyManagementService_updateBuddyAdminProfileAttribute_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(attributes == rhs.attributes))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyAdminProfileAttribute_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyAdminProfileAttribute_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_updateBuddyAdminProfileAttribute_pargs {
 public:


  virtual ~BuddyManagementService_updateBuddyAdminProfileAttribute_pargs() noexcept;
  const std::string* requestId;
  const std::map<std::string, std::string> * attributes;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyAdminProfileAttribute_result__isset {
  _BuddyManagementService_updateBuddyAdminProfileAttribute_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_updateBuddyAdminProfileAttribute_result__isset;

class BuddyManagementService_updateBuddyAdminProfileAttribute_result {
 public:

  BuddyManagementService_updateBuddyAdminProfileAttribute_result(const BuddyManagementService_updateBuddyAdminProfileAttribute_result&);
  BuddyManagementService_updateBuddyAdminProfileAttribute_result& operator=(const BuddyManagementService_updateBuddyAdminProfileAttribute_result&);
  BuddyManagementService_updateBuddyAdminProfileAttribute_result() {
  }

  virtual ~BuddyManagementService_updateBuddyAdminProfileAttribute_result() noexcept;
  TalkException e;

  _BuddyManagementService_updateBuddyAdminProfileAttribute_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_updateBuddyAdminProfileAttribute_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyAdminProfileAttribute_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyAdminProfileAttribute_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyAdminProfileAttribute_presult__isset {
  _BuddyManagementService_updateBuddyAdminProfileAttribute_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_updateBuddyAdminProfileAttribute_presult__isset;

class BuddyManagementService_updateBuddyAdminProfileAttribute_presult {
 public:


  virtual ~BuddyManagementService_updateBuddyAdminProfileAttribute_presult() noexcept;
  TalkException e;

  _BuddyManagementService_updateBuddyAdminProfileAttribute_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_updateBuddyAdminProfileImage_args__isset {
  _BuddyManagementService_updateBuddyAdminProfileImage_args__isset() : requestId(false), picture(false) {}
  bool requestId :1;
  bool picture :1;
} _BuddyManagementService_updateBuddyAdminProfileImage_args__isset;

class BuddyManagementService_updateBuddyAdminProfileImage_args {
 public:

  BuddyManagementService_updateBuddyAdminProfileImage_args(const BuddyManagementService_updateBuddyAdminProfileImage_args&);
  BuddyManagementService_updateBuddyAdminProfileImage_args& operator=(const BuddyManagementService_updateBuddyAdminProfileImage_args&);
  BuddyManagementService_updateBuddyAdminProfileImage_args() : requestId(), picture() {
  }

  virtual ~BuddyManagementService_updateBuddyAdminProfileImage_args() noexcept;
  std::string requestId;
  std::string picture;

  _BuddyManagementService_updateBuddyAdminProfileImage_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_picture(const std::string& val);

  bool operator == (const BuddyManagementService_updateBuddyAdminProfileImage_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(picture == rhs.picture))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyAdminProfileImage_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyAdminProfileImage_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_updateBuddyAdminProfileImage_pargs {
 public:


  virtual ~BuddyManagementService_updateBuddyAdminProfileImage_pargs() noexcept;
  const std::string* requestId;
  const std::string* picture;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyAdminProfileImage_result__isset {
  _BuddyManagementService_updateBuddyAdminProfileImage_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_updateBuddyAdminProfileImage_result__isset;

class BuddyManagementService_updateBuddyAdminProfileImage_result {
 public:

  BuddyManagementService_updateBuddyAdminProfileImage_result(const BuddyManagementService_updateBuddyAdminProfileImage_result&);
  BuddyManagementService_updateBuddyAdminProfileImage_result& operator=(const BuddyManagementService_updateBuddyAdminProfileImage_result&);
  BuddyManagementService_updateBuddyAdminProfileImage_result() {
  }

  virtual ~BuddyManagementService_updateBuddyAdminProfileImage_result() noexcept;
  TalkException e;

  _BuddyManagementService_updateBuddyAdminProfileImage_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_updateBuddyAdminProfileImage_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyAdminProfileImage_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyAdminProfileImage_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyAdminProfileImage_presult__isset {
  _BuddyManagementService_updateBuddyAdminProfileImage_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_updateBuddyAdminProfileImage_presult__isset;

class BuddyManagementService_updateBuddyAdminProfileImage_presult {
 public:


  virtual ~BuddyManagementService_updateBuddyAdminProfileImage_presult() noexcept;
  TalkException e;

  _BuddyManagementService_updateBuddyAdminProfileImage_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_updateBuddyProfileAttributes_args__isset {
  _BuddyManagementService_updateBuddyProfileAttributes_args__isset() : requestId(false), attributes(false) {}
  bool requestId :1;
  bool attributes :1;
} _BuddyManagementService_updateBuddyProfileAttributes_args__isset;

class BuddyManagementService_updateBuddyProfileAttributes_args {
 public:

  BuddyManagementService_updateBuddyProfileAttributes_args(const BuddyManagementService_updateBuddyProfileAttributes_args&);
  BuddyManagementService_updateBuddyProfileAttributes_args& operator=(const BuddyManagementService_updateBuddyProfileAttributes_args&);
  BuddyManagementService_updateBuddyProfileAttributes_args() : requestId() {
  }

  virtual ~BuddyManagementService_updateBuddyProfileAttributes_args() noexcept;
  std::string requestId;
  std::map<std::string, std::string>  attributes;

  _BuddyManagementService_updateBuddyProfileAttributes_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_attributes(const std::map<std::string, std::string> & val);

  bool operator == (const BuddyManagementService_updateBuddyProfileAttributes_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(attributes == rhs.attributes))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyProfileAttributes_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyProfileAttributes_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_updateBuddyProfileAttributes_pargs {
 public:


  virtual ~BuddyManagementService_updateBuddyProfileAttributes_pargs() noexcept;
  const std::string* requestId;
  const std::map<std::string, std::string> * attributes;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyProfileAttributes_result__isset {
  _BuddyManagementService_updateBuddyProfileAttributes_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_updateBuddyProfileAttributes_result__isset;

class BuddyManagementService_updateBuddyProfileAttributes_result {
 public:

  BuddyManagementService_updateBuddyProfileAttributes_result(const BuddyManagementService_updateBuddyProfileAttributes_result&);
  BuddyManagementService_updateBuddyProfileAttributes_result& operator=(const BuddyManagementService_updateBuddyProfileAttributes_result&);
  BuddyManagementService_updateBuddyProfileAttributes_result() {
  }

  virtual ~BuddyManagementService_updateBuddyProfileAttributes_result() noexcept;
  UpdateBuddyProfileResult success;
  TalkException e;

  _BuddyManagementService_updateBuddyProfileAttributes_result__isset __isset;

  void __set_success(const UpdateBuddyProfileResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_updateBuddyProfileAttributes_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyProfileAttributes_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyProfileAttributes_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyProfileAttributes_presult__isset {
  _BuddyManagementService_updateBuddyProfileAttributes_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_updateBuddyProfileAttributes_presult__isset;

class BuddyManagementService_updateBuddyProfileAttributes_presult {
 public:


  virtual ~BuddyManagementService_updateBuddyProfileAttributes_presult() noexcept;
  UpdateBuddyProfileResult* success;
  TalkException e;

  _BuddyManagementService_updateBuddyProfileAttributes_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_updateBuddyProfileAttributesAsync_args__isset {
  _BuddyManagementService_updateBuddyProfileAttributesAsync_args__isset() : requestId(false), attributes(false) {}
  bool requestId :1;
  bool attributes :1;
} _BuddyManagementService_updateBuddyProfileAttributesAsync_args__isset;

class BuddyManagementService_updateBuddyProfileAttributesAsync_args {
 public:

  BuddyManagementService_updateBuddyProfileAttributesAsync_args(const BuddyManagementService_updateBuddyProfileAttributesAsync_args&);
  BuddyManagementService_updateBuddyProfileAttributesAsync_args& operator=(const BuddyManagementService_updateBuddyProfileAttributesAsync_args&);
  BuddyManagementService_updateBuddyProfileAttributesAsync_args() : requestId() {
  }

  virtual ~BuddyManagementService_updateBuddyProfileAttributesAsync_args() noexcept;
  std::string requestId;
  std::map<std::string, std::string>  attributes;

  _BuddyManagementService_updateBuddyProfileAttributesAsync_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_attributes(const std::map<std::string, std::string> & val);

  bool operator == (const BuddyManagementService_updateBuddyProfileAttributesAsync_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(attributes == rhs.attributes))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyProfileAttributesAsync_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyProfileAttributesAsync_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_updateBuddyProfileAttributesAsync_pargs {
 public:


  virtual ~BuddyManagementService_updateBuddyProfileAttributesAsync_pargs() noexcept;
  const std::string* requestId;
  const std::map<std::string, std::string> * attributes;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyProfileAttributesAsync_result__isset {
  _BuddyManagementService_updateBuddyProfileAttributesAsync_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_updateBuddyProfileAttributesAsync_result__isset;

class BuddyManagementService_updateBuddyProfileAttributesAsync_result {
 public:

  BuddyManagementService_updateBuddyProfileAttributesAsync_result(const BuddyManagementService_updateBuddyProfileAttributesAsync_result&);
  BuddyManagementService_updateBuddyProfileAttributesAsync_result& operator=(const BuddyManagementService_updateBuddyProfileAttributesAsync_result&);
  BuddyManagementService_updateBuddyProfileAttributesAsync_result() : success() {
  }

  virtual ~BuddyManagementService_updateBuddyProfileAttributesAsync_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_updateBuddyProfileAttributesAsync_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_updateBuddyProfileAttributesAsync_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyProfileAttributesAsync_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyProfileAttributesAsync_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyProfileAttributesAsync_presult__isset {
  _BuddyManagementService_updateBuddyProfileAttributesAsync_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_updateBuddyProfileAttributesAsync_presult__isset;

class BuddyManagementService_updateBuddyProfileAttributesAsync_presult {
 public:


  virtual ~BuddyManagementService_updateBuddyProfileAttributesAsync_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_updateBuddyProfileAttributesAsync_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_updateBuddyProfileImage_args__isset {
  _BuddyManagementService_updateBuddyProfileImage_args__isset() : requestId(false), image(false) {}
  bool requestId :1;
  bool image :1;
} _BuddyManagementService_updateBuddyProfileImage_args__isset;

class BuddyManagementService_updateBuddyProfileImage_args {
 public:

  BuddyManagementService_updateBuddyProfileImage_args(const BuddyManagementService_updateBuddyProfileImage_args&);
  BuddyManagementService_updateBuddyProfileImage_args& operator=(const BuddyManagementService_updateBuddyProfileImage_args&);
  BuddyManagementService_updateBuddyProfileImage_args() : requestId(), image() {
  }

  virtual ~BuddyManagementService_updateBuddyProfileImage_args() noexcept;
  std::string requestId;
  std::string image;

  _BuddyManagementService_updateBuddyProfileImage_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_image(const std::string& val);

  bool operator == (const BuddyManagementService_updateBuddyProfileImage_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(image == rhs.image))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyProfileImage_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyProfileImage_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_updateBuddyProfileImage_pargs {
 public:


  virtual ~BuddyManagementService_updateBuddyProfileImage_pargs() noexcept;
  const std::string* requestId;
  const std::string* image;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyProfileImage_result__isset {
  _BuddyManagementService_updateBuddyProfileImage_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_updateBuddyProfileImage_result__isset;

class BuddyManagementService_updateBuddyProfileImage_result {
 public:

  BuddyManagementService_updateBuddyProfileImage_result(const BuddyManagementService_updateBuddyProfileImage_result&);
  BuddyManagementService_updateBuddyProfileImage_result& operator=(const BuddyManagementService_updateBuddyProfileImage_result&);
  BuddyManagementService_updateBuddyProfileImage_result() {
  }

  virtual ~BuddyManagementService_updateBuddyProfileImage_result() noexcept;
  UpdateBuddyProfileResult success;
  TalkException e;

  _BuddyManagementService_updateBuddyProfileImage_result__isset __isset;

  void __set_success(const UpdateBuddyProfileResult& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_updateBuddyProfileImage_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyProfileImage_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyProfileImage_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyProfileImage_presult__isset {
  _BuddyManagementService_updateBuddyProfileImage_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_updateBuddyProfileImage_presult__isset;

class BuddyManagementService_updateBuddyProfileImage_presult {
 public:


  virtual ~BuddyManagementService_updateBuddyProfileImage_presult() noexcept;
  UpdateBuddyProfileResult* success;
  TalkException e;

  _BuddyManagementService_updateBuddyProfileImage_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_updateBuddyProfileImageAsync_args__isset {
  _BuddyManagementService_updateBuddyProfileImageAsync_args__isset() : requestId(false), image(false) {}
  bool requestId :1;
  bool image :1;
} _BuddyManagementService_updateBuddyProfileImageAsync_args__isset;

class BuddyManagementService_updateBuddyProfileImageAsync_args {
 public:

  BuddyManagementService_updateBuddyProfileImageAsync_args(const BuddyManagementService_updateBuddyProfileImageAsync_args&);
  BuddyManagementService_updateBuddyProfileImageAsync_args& operator=(const BuddyManagementService_updateBuddyProfileImageAsync_args&);
  BuddyManagementService_updateBuddyProfileImageAsync_args() : requestId(), image() {
  }

  virtual ~BuddyManagementService_updateBuddyProfileImageAsync_args() noexcept;
  std::string requestId;
  std::string image;

  _BuddyManagementService_updateBuddyProfileImageAsync_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_image(const std::string& val);

  bool operator == (const BuddyManagementService_updateBuddyProfileImageAsync_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(image == rhs.image))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyProfileImageAsync_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyProfileImageAsync_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_updateBuddyProfileImageAsync_pargs {
 public:


  virtual ~BuddyManagementService_updateBuddyProfileImageAsync_pargs() noexcept;
  const std::string* requestId;
  const std::string* image;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyProfileImageAsync_result__isset {
  _BuddyManagementService_updateBuddyProfileImageAsync_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_updateBuddyProfileImageAsync_result__isset;

class BuddyManagementService_updateBuddyProfileImageAsync_result {
 public:

  BuddyManagementService_updateBuddyProfileImageAsync_result(const BuddyManagementService_updateBuddyProfileImageAsync_result&);
  BuddyManagementService_updateBuddyProfileImageAsync_result& operator=(const BuddyManagementService_updateBuddyProfileImageAsync_result&);
  BuddyManagementService_updateBuddyProfileImageAsync_result() : success() {
  }

  virtual ~BuddyManagementService_updateBuddyProfileImageAsync_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_updateBuddyProfileImageAsync_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_updateBuddyProfileImageAsync_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddyProfileImageAsync_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddyProfileImageAsync_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddyProfileImageAsync_presult__isset {
  _BuddyManagementService_updateBuddyProfileImageAsync_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_updateBuddyProfileImageAsync_presult__isset;

class BuddyManagementService_updateBuddyProfileImageAsync_presult {
 public:


  virtual ~BuddyManagementService_updateBuddyProfileImageAsync_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_updateBuddyProfileImageAsync_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_updateBuddySearchId_args__isset {
  _BuddyManagementService_updateBuddySearchId_args__isset() : requestId(false), searchId(false) {}
  bool requestId :1;
  bool searchId :1;
} _BuddyManagementService_updateBuddySearchId_args__isset;

class BuddyManagementService_updateBuddySearchId_args {
 public:

  BuddyManagementService_updateBuddySearchId_args(const BuddyManagementService_updateBuddySearchId_args&);
  BuddyManagementService_updateBuddySearchId_args& operator=(const BuddyManagementService_updateBuddySearchId_args&);
  BuddyManagementService_updateBuddySearchId_args() : requestId(), searchId() {
  }

  virtual ~BuddyManagementService_updateBuddySearchId_args() noexcept;
  std::string requestId;
  std::string searchId;

  _BuddyManagementService_updateBuddySearchId_args__isset __isset;

  void __set_requestId(const std::string& val);

  void __set_searchId(const std::string& val);

  bool operator == (const BuddyManagementService_updateBuddySearchId_args & rhs) const
  {
    if (!(requestId == rhs.requestId))
      return false;
    if (!(searchId == rhs.searchId))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddySearchId_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddySearchId_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_updateBuddySearchId_pargs {
 public:


  virtual ~BuddyManagementService_updateBuddySearchId_pargs() noexcept;
  const std::string* requestId;
  const std::string* searchId;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddySearchId_result__isset {
  _BuddyManagementService_updateBuddySearchId_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_updateBuddySearchId_result__isset;

class BuddyManagementService_updateBuddySearchId_result {
 public:

  BuddyManagementService_updateBuddySearchId_result(const BuddyManagementService_updateBuddySearchId_result&);
  BuddyManagementService_updateBuddySearchId_result& operator=(const BuddyManagementService_updateBuddySearchId_result&);
  BuddyManagementService_updateBuddySearchId_result() {
  }

  virtual ~BuddyManagementService_updateBuddySearchId_result() noexcept;
  TalkException e;

  _BuddyManagementService_updateBuddySearchId_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_updateBuddySearchId_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddySearchId_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddySearchId_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddySearchId_presult__isset {
  _BuddyManagementService_updateBuddySearchId_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_updateBuddySearchId_presult__isset;

class BuddyManagementService_updateBuddySearchId_presult {
 public:


  virtual ~BuddyManagementService_updateBuddySearchId_presult() noexcept;
  TalkException e;

  _BuddyManagementService_updateBuddySearchId_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_updateBuddySettings_args__isset {
  _BuddyManagementService_updateBuddySettings_args__isset() : settings(false) {}
  bool settings :1;
} _BuddyManagementService_updateBuddySettings_args__isset;

class BuddyManagementService_updateBuddySettings_args {
 public:

  BuddyManagementService_updateBuddySettings_args(const BuddyManagementService_updateBuddySettings_args&);
  BuddyManagementService_updateBuddySettings_args& operator=(const BuddyManagementService_updateBuddySettings_args&);
  BuddyManagementService_updateBuddySettings_args() {
  }

  virtual ~BuddyManagementService_updateBuddySettings_args() noexcept;
  std::map<std::string, std::string>  settings;

  _BuddyManagementService_updateBuddySettings_args__isset __isset;

  void __set_settings(const std::map<std::string, std::string> & val);

  bool operator == (const BuddyManagementService_updateBuddySettings_args & rhs) const
  {
    if (!(settings == rhs.settings))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddySettings_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddySettings_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_updateBuddySettings_pargs {
 public:


  virtual ~BuddyManagementService_updateBuddySettings_pargs() noexcept;
  const std::map<std::string, std::string> * settings;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddySettings_result__isset {
  _BuddyManagementService_updateBuddySettings_result__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_updateBuddySettings_result__isset;

class BuddyManagementService_updateBuddySettings_result {
 public:

  BuddyManagementService_updateBuddySettings_result(const BuddyManagementService_updateBuddySettings_result&);
  BuddyManagementService_updateBuddySettings_result& operator=(const BuddyManagementService_updateBuddySettings_result&);
  BuddyManagementService_updateBuddySettings_result() {
  }

  virtual ~BuddyManagementService_updateBuddySettings_result() noexcept;
  TalkException e;

  _BuddyManagementService_updateBuddySettings_result__isset __isset;

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_updateBuddySettings_result & rhs) const
  {
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_updateBuddySettings_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_updateBuddySettings_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_updateBuddySettings_presult__isset {
  _BuddyManagementService_updateBuddySettings_presult__isset() : e(false) {}
  bool e :1;
} _BuddyManagementService_updateBuddySettings_presult__isset;

class BuddyManagementService_updateBuddySettings_presult {
 public:


  virtual ~BuddyManagementService_updateBuddySettings_presult() noexcept;
  TalkException e;

  _BuddyManagementService_updateBuddySettings_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _BuddyManagementService_uploadBuddyContent_args__isset {
  _BuddyManagementService_uploadBuddyContent_args__isset() : contentType(false), content(false) {}
  bool contentType :1;
  bool content :1;
} _BuddyManagementService_uploadBuddyContent_args__isset;

class BuddyManagementService_uploadBuddyContent_args {
 public:

  BuddyManagementService_uploadBuddyContent_args(const BuddyManagementService_uploadBuddyContent_args&);
  BuddyManagementService_uploadBuddyContent_args& operator=(const BuddyManagementService_uploadBuddyContent_args&);
  BuddyManagementService_uploadBuddyContent_args() : contentType((ContentType::type)0), content() {
  }

  virtual ~BuddyManagementService_uploadBuddyContent_args() noexcept;
  /**
   * 
   * @see ContentType
   */
  ContentType::type contentType;
  std::string content;

  _BuddyManagementService_uploadBuddyContent_args__isset __isset;

  void __set_contentType(const ContentType::type val);

  void __set_content(const std::string& val);

  bool operator == (const BuddyManagementService_uploadBuddyContent_args & rhs) const
  {
    if (!(contentType == rhs.contentType))
      return false;
    if (!(content == rhs.content))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_uploadBuddyContent_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_uploadBuddyContent_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class BuddyManagementService_uploadBuddyContent_pargs {
 public:


  virtual ~BuddyManagementService_uploadBuddyContent_pargs() noexcept;
  /**
   * 
   * @see ContentType
   */
  const ContentType::type* contentType;
  const std::string* content;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_uploadBuddyContent_result__isset {
  _BuddyManagementService_uploadBuddyContent_result__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_uploadBuddyContent_result__isset;

class BuddyManagementService_uploadBuddyContent_result {
 public:

  BuddyManagementService_uploadBuddyContent_result(const BuddyManagementService_uploadBuddyContent_result&);
  BuddyManagementService_uploadBuddyContent_result& operator=(const BuddyManagementService_uploadBuddyContent_result&);
  BuddyManagementService_uploadBuddyContent_result() : success() {
  }

  virtual ~BuddyManagementService_uploadBuddyContent_result() noexcept;
  std::string success;
  TalkException e;

  _BuddyManagementService_uploadBuddyContent_result__isset __isset;

  void __set_success(const std::string& val);

  void __set_e(const TalkException& val);

  bool operator == (const BuddyManagementService_uploadBuddyContent_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(e == rhs.e))
      return false;
    return true;
  }
  bool operator != (const BuddyManagementService_uploadBuddyContent_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const BuddyManagementService_uploadBuddyContent_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _BuddyManagementService_uploadBuddyContent_presult__isset {
  _BuddyManagementService_uploadBuddyContent_presult__isset() : success(false), e(false) {}
  bool success :1;
  bool e :1;
} _BuddyManagementService_uploadBuddyContent_presult__isset;

class BuddyManagementService_uploadBuddyContent_presult {
 public:


  virtual ~BuddyManagementService_uploadBuddyContent_presult() noexcept;
  std::string* success;
  TalkException e;

  _BuddyManagementService_uploadBuddyContent_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

class BuddyManagementServiceClient : virtual public BuddyManagementServiceIf {
 public:
  BuddyManagementServiceClient(std::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  BuddyManagementServiceClient(std::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, std::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(std::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(std::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, std::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void addBuddyMember(const std::string& requestId, const std::string& userMid);
  void send_addBuddyMember(const std::string& requestId, const std::string& userMid);
  void recv_addBuddyMember();
  void addBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids);
  void send_addBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids);
  void recv_addBuddyMembers();
  void blockBuddyMember(const std::string& requestId, const std::string& mid);
  void send_blockBuddyMember(const std::string& requestId, const std::string& mid);
  void recv_blockBuddyMember();
  void commitSendMessagesToAll(std::vector<SendBuddyMessageResult> & _return, const std::vector<std::string> & requestIdList);
  void send_commitSendMessagesToAll(const std::vector<std::string> & requestIdList);
  void recv_commitSendMessagesToAll(std::vector<SendBuddyMessageResult> & _return);
  void commitSendMessagesToMids(std::vector<SendBuddyMessageResult> & _return, const std::vector<std::string> & requestIdList, const std::vector<std::string> & mids);
  void send_commitSendMessagesToMids(const std::vector<std::string> & requestIdList, const std::vector<std::string> & mids);
  void recv_commitSendMessagesToMids(std::vector<SendBuddyMessageResult> & _return);
  bool containsBuddyMember(const std::string& requestId, const std::string& userMid);
  void send_containsBuddyMember(const std::string& requestId, const std::string& userMid);
  bool recv_containsBuddyMember();
  void downloadMessageContent(std::string& _return, const std::string& requestId, const std::string& messageId);
  void send_downloadMessageContent(const std::string& requestId, const std::string& messageId);
  void recv_downloadMessageContent(std::string& _return);
  void downloadMessageContentPreview(std::string& _return, const std::string& requestId, const std::string& messageId);
  void send_downloadMessageContentPreview(const std::string& requestId, const std::string& messageId);
  void recv_downloadMessageContentPreview(std::string& _return);
  void downloadProfileImage(std::string& _return, const std::string& requestId);
  void send_downloadProfileImage(const std::string& requestId);
  void recv_downloadProfileImage(std::string& _return);
  void downloadProfileImagePreview(std::string& _return, const std::string& requestId);
  void send_downloadProfileImagePreview(const std::string& requestId);
  void recv_downloadProfileImagePreview(std::string& _return);
  int64_t getActiveMemberCountByBuddyMid(const std::string& buddyMid);
  void send_getActiveMemberCountByBuddyMid(const std::string& buddyMid);
  int64_t recv_getActiveMemberCountByBuddyMid();
  void getActiveMemberMidsByBuddyMid(std::vector<std::string> & _return, const std::string& buddyMid);
  void send_getActiveMemberMidsByBuddyMid(const std::string& buddyMid);
  void recv_getActiveMemberMidsByBuddyMid(std::vector<std::string> & _return);
  void getAllBuddyMembers(std::vector<std::string> & _return);
  void send_getAllBuddyMembers();
  void recv_getAllBuddyMembers(std::vector<std::string> & _return);
  void getBlockedBuddyMembers(std::vector<std::string> & _return);
  void send_getBlockedBuddyMembers();
  void recv_getBlockedBuddyMembers(std::vector<std::string> & _return);
  int64_t getBlockerCountByBuddyMid(const std::string& buddyMid);
  void send_getBlockerCountByBuddyMid(const std::string& buddyMid);
  int64_t recv_getBlockerCountByBuddyMid();
  void getBuddyDetailByMid(BuddyDetail& _return, const std::string& buddyMid);
  void send_getBuddyDetailByMid(const std::string& buddyMid);
  void recv_getBuddyDetailByMid(BuddyDetail& _return);
  void getBuddyProfile(BuddyProfile& _return);
  void send_getBuddyProfile();
  void recv_getBuddyProfile(BuddyProfile& _return);
  void getContactTicket(Ticket& _return);
  void send_getContactTicket();
  void recv_getContactTicket(Ticket& _return);
  int64_t getMemberCountByBuddyMid(const std::string& buddyMid);
  void send_getMemberCountByBuddyMid(const std::string& buddyMid);
  int64_t recv_getMemberCountByBuddyMid();
  void getSendBuddyMessageResult(SendBuddyMessageResult& _return, const std::string& sendBuddyMessageRequestId);
  void send_getSendBuddyMessageResult(const std::string& sendBuddyMessageRequestId);
  void recv_getSendBuddyMessageResult(SendBuddyMessageResult& _return);
  void getSetBuddyOnAirResult(SetBuddyOnAirResult& _return, const std::string& setBuddyOnAirRequestId);
  void send_getSetBuddyOnAirResult(const std::string& setBuddyOnAirRequestId);
  void recv_getSetBuddyOnAirResult(SetBuddyOnAirResult& _return);
  void getUpdateBuddyProfileResult(UpdateBuddyProfileResult& _return, const std::string& updateBuddyProfileRequestId);
  void send_getUpdateBuddyProfileResult(const std::string& updateBuddyProfileRequestId);
  void recv_getUpdateBuddyProfileResult(UpdateBuddyProfileResult& _return);
  bool isBuddyOnAirByMid(const std::string& buddyMid);
  void send_isBuddyOnAirByMid(const std::string& buddyMid);
  bool recv_isBuddyOnAirByMid();
  void linkAndSendBuddyContentMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& sourceContentId);
  void send_linkAndSendBuddyContentMessageToAllAsync(const std::string& requestId, const Message& msg, const std::string& sourceContentId);
  void recv_linkAndSendBuddyContentMessageToAllAsync(std::string& _return);
  void linkAndSendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& sourceContentId, const std::vector<std::string> & mids);
  void send_linkAndSendBuddyContentMessageToMids(const std::string& requestId, const Message& msg, const std::string& sourceContentId, const std::vector<std::string> & mids);
  void recv_linkAndSendBuddyContentMessageToMids(SendBuddyMessageResult& _return);
  void notifyBuddyBlocked(const std::string& buddyMid, const std::string& blockerMid);
  void send_notifyBuddyBlocked(const std::string& buddyMid, const std::string& blockerMid);
  void recv_notifyBuddyBlocked();
  void notifyBuddyUnblocked(const std::string& buddyMid, const std::string& blockerMid);
  void send_notifyBuddyUnblocked(const std::string& buddyMid, const std::string& blockerMid);
  void recv_notifyBuddyUnblocked();
  void registerBuddy(std::string& _return, const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMeessage, const std::string& picture, const std::map<std::string, std::string> & settings);
  void send_registerBuddy(const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMeessage, const std::string& picture, const std::map<std::string, std::string> & settings);
  void recv_registerBuddy(std::string& _return);
  void registerBuddyAdmin(std::string& _return, const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMessage, const std::string& picture);
  void send_registerBuddyAdmin(const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMessage, const std::string& picture);
  void recv_registerBuddyAdmin(std::string& _return);
  void reissueContactTicket(std::string& _return, const int64_t expirationTime, const int32_t maxUseCount);
  void send_reissueContactTicket(const int64_t expirationTime, const int32_t maxUseCount);
  void recv_reissueContactTicket(std::string& _return);
  void removeBuddyMember(const std::string& requestId, const std::string& userMid);
  void send_removeBuddyMember(const std::string& requestId, const std::string& userMid);
  void recv_removeBuddyMember();
  void removeBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids);
  void send_removeBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids);
  void recv_removeBuddyMembers();
  void sendBuddyContentMessageToAll(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& content);
  void send_sendBuddyContentMessageToAll(const std::string& requestId, const Message& msg, const std::string& content);
  void recv_sendBuddyContentMessageToAll(SendBuddyMessageResult& _return);
  void sendBuddyContentMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& content);
  void send_sendBuddyContentMessageToAllAsync(const std::string& requestId, const Message& msg, const std::string& content);
  void recv_sendBuddyContentMessageToAllAsync(std::string& _return);
  void sendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids);
  void send_sendBuddyContentMessageToMids(const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids);
  void recv_sendBuddyContentMessageToMids(SendBuddyMessageResult& _return);
  void sendBuddyContentMessageToMidsAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids);
  void send_sendBuddyContentMessageToMidsAsync(const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids);
  void recv_sendBuddyContentMessageToMidsAsync(std::string& _return);
  void sendBuddyMessageToAll(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg);
  void send_sendBuddyMessageToAll(const std::string& requestId, const Message& msg);
  void recv_sendBuddyMessageToAll(SendBuddyMessageResult& _return);
  void sendBuddyMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg);
  void send_sendBuddyMessageToAllAsync(const std::string& requestId, const Message& msg);
  void recv_sendBuddyMessageToAllAsync(std::string& _return);
  void sendBuddyMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::vector<std::string> & mids);
  void send_sendBuddyMessageToMids(const std::string& requestId, const Message& msg, const std::vector<std::string> & mids);
  void recv_sendBuddyMessageToMids(SendBuddyMessageResult& _return);
  void sendBuddyMessageToMidsAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::vector<std::string> & mids);
  void send_sendBuddyMessageToMidsAsync(const std::string& requestId, const Message& msg, const std::vector<std::string> & mids);
  void recv_sendBuddyMessageToMidsAsync(std::string& _return);
  void sendIndividualEventToAllAsync(const std::string& requestId, const std::string& buddyMid, const NotificationStatus::type notificationStatus);
  void send_sendIndividualEventToAllAsync(const std::string& requestId, const std::string& buddyMid, const NotificationStatus::type notificationStatus);
  void recv_sendIndividualEventToAllAsync();
  void setBuddyOnAir(SetBuddyOnAirResult& _return, const std::string& requestId, const bool onAir);
  void send_setBuddyOnAir(const std::string& requestId, const bool onAir);
  void recv_setBuddyOnAir(SetBuddyOnAirResult& _return);
  void setBuddyOnAirAsync(std::string& _return, const std::string& requestId, const bool onAir);
  void send_setBuddyOnAirAsync(const std::string& requestId, const bool onAir);
  void recv_setBuddyOnAirAsync(std::string& _return);
  void storeMessage(SendBuddyMessageResult& _return, const std::string& requestId, const BuddyMessageRequest& messageRequest);
  void send_storeMessage(const std::string& requestId, const BuddyMessageRequest& messageRequest);
  void recv_storeMessage(SendBuddyMessageResult& _return);
  void unblockBuddyMember(const std::string& requestId, const std::string& mid);
  void send_unblockBuddyMember(const std::string& requestId, const std::string& mid);
  void recv_unblockBuddyMember();
  void unregisterBuddy(const std::string& requestId);
  void send_unregisterBuddy(const std::string& requestId);
  void recv_unregisterBuddy();
  void unregisterBuddyAdmin(const std::string& requestId);
  void send_unregisterBuddyAdmin(const std::string& requestId);
  void recv_unregisterBuddyAdmin();
  void updateBuddyAdminProfileAttribute(const std::string& requestId, const std::map<std::string, std::string> & attributes);
  void send_updateBuddyAdminProfileAttribute(const std::string& requestId, const std::map<std::string, std::string> & attributes);
  void recv_updateBuddyAdminProfileAttribute();
  void updateBuddyAdminProfileImage(const std::string& requestId, const std::string& picture);
  void send_updateBuddyAdminProfileImage(const std::string& requestId, const std::string& picture);
  void recv_updateBuddyAdminProfileImage();
  void updateBuddyProfileAttributes(UpdateBuddyProfileResult& _return, const std::string& requestId, const std::map<std::string, std::string> & attributes);
  void send_updateBuddyProfileAttributes(const std::string& requestId, const std::map<std::string, std::string> & attributes);
  void recv_updateBuddyProfileAttributes(UpdateBuddyProfileResult& _return);
  void updateBuddyProfileAttributesAsync(std::string& _return, const std::string& requestId, const std::map<std::string, std::string> & attributes);
  void send_updateBuddyProfileAttributesAsync(const std::string& requestId, const std::map<std::string, std::string> & attributes);
  void recv_updateBuddyProfileAttributesAsync(std::string& _return);
  void updateBuddyProfileImage(UpdateBuddyProfileResult& _return, const std::string& requestId, const std::string& image);
  void send_updateBuddyProfileImage(const std::string& requestId, const std::string& image);
  void recv_updateBuddyProfileImage(UpdateBuddyProfileResult& _return);
  void updateBuddyProfileImageAsync(std::string& _return, const std::string& requestId, const std::string& image);
  void send_updateBuddyProfileImageAsync(const std::string& requestId, const std::string& image);
  void recv_updateBuddyProfileImageAsync(std::string& _return);
  void updateBuddySearchId(const std::string& requestId, const std::string& searchId);
  void send_updateBuddySearchId(const std::string& requestId, const std::string& searchId);
  void recv_updateBuddySearchId();
  void updateBuddySettings(const std::map<std::string, std::string> & settings);
  void send_updateBuddySettings(const std::map<std::string, std::string> & settings);
  void recv_updateBuddySettings();
  void uploadBuddyContent(std::string& _return, const ContentType::type contentType, const std::string& content);
  void send_uploadBuddyContent(const ContentType::type contentType, const std::string& content);
  void recv_uploadBuddyContent(std::string& _return);
 protected:
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
};

class BuddyManagementServiceProcessor : public ::apache::thrift::TDispatchProcessor {
 protected:
  ::std::shared_ptr<BuddyManagementServiceIf> iface_;
  virtual bool dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext);
 private:
  typedef  void (BuddyManagementServiceProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);
  typedef std::map<std::string, ProcessFunction> ProcessMap;
  ProcessMap processMap_;
  void process_addBuddyMember(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_addBuddyMembers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_blockBuddyMember(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_commitSendMessagesToAll(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_commitSendMessagesToMids(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_containsBuddyMember(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_downloadMessageContent(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_downloadMessageContentPreview(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_downloadProfileImage(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_downloadProfileImagePreview(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getActiveMemberCountByBuddyMid(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getActiveMemberMidsByBuddyMid(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getAllBuddyMembers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getBlockedBuddyMembers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getBlockerCountByBuddyMid(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getBuddyDetailByMid(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getBuddyProfile(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getContactTicket(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getMemberCountByBuddyMid(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSendBuddyMessageResult(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getSetBuddyOnAirResult(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_getUpdateBuddyProfileResult(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_isBuddyOnAirByMid(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_linkAndSendBuddyContentMessageToAllAsync(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_linkAndSendBuddyContentMessageToMids(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_notifyBuddyBlocked(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_notifyBuddyUnblocked(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_registerBuddy(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_registerBuddyAdmin(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_reissueContactTicket(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_removeBuddyMember(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_removeBuddyMembers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_sendBuddyContentMessageToAll(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_sendBuddyContentMessageToAllAsync(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_sendBuddyContentMessageToMids(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_sendBuddyContentMessageToMidsAsync(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_sendBuddyMessageToAll(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_sendBuddyMessageToAllAsync(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_sendBuddyMessageToMids(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_sendBuddyMessageToMidsAsync(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_sendIndividualEventToAllAsync(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_setBuddyOnAir(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_setBuddyOnAirAsync(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_storeMessage(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_unblockBuddyMember(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_unregisterBuddy(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_unregisterBuddyAdmin(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateBuddyAdminProfileAttribute(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateBuddyAdminProfileImage(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateBuddyProfileAttributes(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateBuddyProfileAttributesAsync(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateBuddyProfileImage(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateBuddyProfileImageAsync(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateBuddySearchId(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_updateBuddySettings(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_uploadBuddyContent(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
 public:
  BuddyManagementServiceProcessor(::std::shared_ptr<BuddyManagementServiceIf> iface) :
    iface_(iface) {
    processMap_["addBuddyMember"] = &BuddyManagementServiceProcessor::process_addBuddyMember;
    processMap_["addBuddyMembers"] = &BuddyManagementServiceProcessor::process_addBuddyMembers;
    processMap_["blockBuddyMember"] = &BuddyManagementServiceProcessor::process_blockBuddyMember;
    processMap_["commitSendMessagesToAll"] = &BuddyManagementServiceProcessor::process_commitSendMessagesToAll;
    processMap_["commitSendMessagesToMids"] = &BuddyManagementServiceProcessor::process_commitSendMessagesToMids;
    processMap_["containsBuddyMember"] = &BuddyManagementServiceProcessor::process_containsBuddyMember;
    processMap_["downloadMessageContent"] = &BuddyManagementServiceProcessor::process_downloadMessageContent;
    processMap_["downloadMessageContentPreview"] = &BuddyManagementServiceProcessor::process_downloadMessageContentPreview;
    processMap_["downloadProfileImage"] = &BuddyManagementServiceProcessor::process_downloadProfileImage;
    processMap_["downloadProfileImagePreview"] = &BuddyManagementServiceProcessor::process_downloadProfileImagePreview;
    processMap_["getActiveMemberCountByBuddyMid"] = &BuddyManagementServiceProcessor::process_getActiveMemberCountByBuddyMid;
    processMap_["getActiveMemberMidsByBuddyMid"] = &BuddyManagementServiceProcessor::process_getActiveMemberMidsByBuddyMid;
    processMap_["getAllBuddyMembers"] = &BuddyManagementServiceProcessor::process_getAllBuddyMembers;
    processMap_["getBlockedBuddyMembers"] = &BuddyManagementServiceProcessor::process_getBlockedBuddyMembers;
    processMap_["getBlockerCountByBuddyMid"] = &BuddyManagementServiceProcessor::process_getBlockerCountByBuddyMid;
    processMap_["getBuddyDetailByMid"] = &BuddyManagementServiceProcessor::process_getBuddyDetailByMid;
    processMap_["getBuddyProfile"] = &BuddyManagementServiceProcessor::process_getBuddyProfile;
    processMap_["getContactTicket"] = &BuddyManagementServiceProcessor::process_getContactTicket;
    processMap_["getMemberCountByBuddyMid"] = &BuddyManagementServiceProcessor::process_getMemberCountByBuddyMid;
    processMap_["getSendBuddyMessageResult"] = &BuddyManagementServiceProcessor::process_getSendBuddyMessageResult;
    processMap_["getSetBuddyOnAirResult"] = &BuddyManagementServiceProcessor::process_getSetBuddyOnAirResult;
    processMap_["getUpdateBuddyProfileResult"] = &BuddyManagementServiceProcessor::process_getUpdateBuddyProfileResult;
    processMap_["isBuddyOnAirByMid"] = &BuddyManagementServiceProcessor::process_isBuddyOnAirByMid;
    processMap_["linkAndSendBuddyContentMessageToAllAsync"] = &BuddyManagementServiceProcessor::process_linkAndSendBuddyContentMessageToAllAsync;
    processMap_["linkAndSendBuddyContentMessageToMids"] = &BuddyManagementServiceProcessor::process_linkAndSendBuddyContentMessageToMids;
    processMap_["notifyBuddyBlocked"] = &BuddyManagementServiceProcessor::process_notifyBuddyBlocked;
    processMap_["notifyBuddyUnblocked"] = &BuddyManagementServiceProcessor::process_notifyBuddyUnblocked;
    processMap_["registerBuddy"] = &BuddyManagementServiceProcessor::process_registerBuddy;
    processMap_["registerBuddyAdmin"] = &BuddyManagementServiceProcessor::process_registerBuddyAdmin;
    processMap_["reissueContactTicket"] = &BuddyManagementServiceProcessor::process_reissueContactTicket;
    processMap_["removeBuddyMember"] = &BuddyManagementServiceProcessor::process_removeBuddyMember;
    processMap_["removeBuddyMembers"] = &BuddyManagementServiceProcessor::process_removeBuddyMembers;
    processMap_["sendBuddyContentMessageToAll"] = &BuddyManagementServiceProcessor::process_sendBuddyContentMessageToAll;
    processMap_["sendBuddyContentMessageToAllAsync"] = &BuddyManagementServiceProcessor::process_sendBuddyContentMessageToAllAsync;
    processMap_["sendBuddyContentMessageToMids"] = &BuddyManagementServiceProcessor::process_sendBuddyContentMessageToMids;
    processMap_["sendBuddyContentMessageToMidsAsync"] = &BuddyManagementServiceProcessor::process_sendBuddyContentMessageToMidsAsync;
    processMap_["sendBuddyMessageToAll"] = &BuddyManagementServiceProcessor::process_sendBuddyMessageToAll;
    processMap_["sendBuddyMessageToAllAsync"] = &BuddyManagementServiceProcessor::process_sendBuddyMessageToAllAsync;
    processMap_["sendBuddyMessageToMids"] = &BuddyManagementServiceProcessor::process_sendBuddyMessageToMids;
    processMap_["sendBuddyMessageToMidsAsync"] = &BuddyManagementServiceProcessor::process_sendBuddyMessageToMidsAsync;
    processMap_["sendIndividualEventToAllAsync"] = &BuddyManagementServiceProcessor::process_sendIndividualEventToAllAsync;
    processMap_["setBuddyOnAir"] = &BuddyManagementServiceProcessor::process_setBuddyOnAir;
    processMap_["setBuddyOnAirAsync"] = &BuddyManagementServiceProcessor::process_setBuddyOnAirAsync;
    processMap_["storeMessage"] = &BuddyManagementServiceProcessor::process_storeMessage;
    processMap_["unblockBuddyMember"] = &BuddyManagementServiceProcessor::process_unblockBuddyMember;
    processMap_["unregisterBuddy"] = &BuddyManagementServiceProcessor::process_unregisterBuddy;
    processMap_["unregisterBuddyAdmin"] = &BuddyManagementServiceProcessor::process_unregisterBuddyAdmin;
    processMap_["updateBuddyAdminProfileAttribute"] = &BuddyManagementServiceProcessor::process_updateBuddyAdminProfileAttribute;
    processMap_["updateBuddyAdminProfileImage"] = &BuddyManagementServiceProcessor::process_updateBuddyAdminProfileImage;
    processMap_["updateBuddyProfileAttributes"] = &BuddyManagementServiceProcessor::process_updateBuddyProfileAttributes;
    processMap_["updateBuddyProfileAttributesAsync"] = &BuddyManagementServiceProcessor::process_updateBuddyProfileAttributesAsync;
    processMap_["updateBuddyProfileImage"] = &BuddyManagementServiceProcessor::process_updateBuddyProfileImage;
    processMap_["updateBuddyProfileImageAsync"] = &BuddyManagementServiceProcessor::process_updateBuddyProfileImageAsync;
    processMap_["updateBuddySearchId"] = &BuddyManagementServiceProcessor::process_updateBuddySearchId;
    processMap_["updateBuddySettings"] = &BuddyManagementServiceProcessor::process_updateBuddySettings;
    processMap_["uploadBuddyContent"] = &BuddyManagementServiceProcessor::process_uploadBuddyContent;
  }

  virtual ~BuddyManagementServiceProcessor() {}
};

class BuddyManagementServiceProcessorFactory : public ::apache::thrift::TProcessorFactory {
 public:
  BuddyManagementServiceProcessorFactory(const ::std::shared_ptr< BuddyManagementServiceIfFactory >& handlerFactory) :
      handlerFactory_(handlerFactory) {}

  ::std::shared_ptr< ::apache::thrift::TProcessor > getProcessor(const ::apache::thrift::TConnectionInfo& connInfo);

 protected:
  ::std::shared_ptr< BuddyManagementServiceIfFactory > handlerFactory_;
};

class BuddyManagementServiceMultiface : virtual public BuddyManagementServiceIf {
 public:
  BuddyManagementServiceMultiface(std::vector<std::shared_ptr<BuddyManagementServiceIf> >& ifaces) : ifaces_(ifaces) {
  }
  virtual ~BuddyManagementServiceMultiface() {}
 protected:
  std::vector<std::shared_ptr<BuddyManagementServiceIf> > ifaces_;
  BuddyManagementServiceMultiface() {}
  void add(::std::shared_ptr<BuddyManagementServiceIf> iface) {
    ifaces_.push_back(iface);
  }
 public:
  void addBuddyMember(const std::string& requestId, const std::string& userMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addBuddyMember(requestId, userMid);
    }
    ifaces_[i]->addBuddyMember(requestId, userMid);
  }

  void addBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->addBuddyMembers(requestId, userMids);
    }
    ifaces_[i]->addBuddyMembers(requestId, userMids);
  }

  void blockBuddyMember(const std::string& requestId, const std::string& mid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->blockBuddyMember(requestId, mid);
    }
    ifaces_[i]->blockBuddyMember(requestId, mid);
  }

  void commitSendMessagesToAll(std::vector<SendBuddyMessageResult> & _return, const std::vector<std::string> & requestIdList) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->commitSendMessagesToAll(_return, requestIdList);
    }
    ifaces_[i]->commitSendMessagesToAll(_return, requestIdList);
    return;
  }

  void commitSendMessagesToMids(std::vector<SendBuddyMessageResult> & _return, const std::vector<std::string> & requestIdList, const std::vector<std::string> & mids) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->commitSendMessagesToMids(_return, requestIdList, mids);
    }
    ifaces_[i]->commitSendMessagesToMids(_return, requestIdList, mids);
    return;
  }

  bool containsBuddyMember(const std::string& requestId, const std::string& userMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->containsBuddyMember(requestId, userMid);
    }
    return ifaces_[i]->containsBuddyMember(requestId, userMid);
  }

  void downloadMessageContent(std::string& _return, const std::string& requestId, const std::string& messageId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->downloadMessageContent(_return, requestId, messageId);
    }
    ifaces_[i]->downloadMessageContent(_return, requestId, messageId);
    return;
  }

  void downloadMessageContentPreview(std::string& _return, const std::string& requestId, const std::string& messageId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->downloadMessageContentPreview(_return, requestId, messageId);
    }
    ifaces_[i]->downloadMessageContentPreview(_return, requestId, messageId);
    return;
  }

  void downloadProfileImage(std::string& _return, const std::string& requestId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->downloadProfileImage(_return, requestId);
    }
    ifaces_[i]->downloadProfileImage(_return, requestId);
    return;
  }

  void downloadProfileImagePreview(std::string& _return, const std::string& requestId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->downloadProfileImagePreview(_return, requestId);
    }
    ifaces_[i]->downloadProfileImagePreview(_return, requestId);
    return;
  }

  int64_t getActiveMemberCountByBuddyMid(const std::string& buddyMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getActiveMemberCountByBuddyMid(buddyMid);
    }
    return ifaces_[i]->getActiveMemberCountByBuddyMid(buddyMid);
  }

  void getActiveMemberMidsByBuddyMid(std::vector<std::string> & _return, const std::string& buddyMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getActiveMemberMidsByBuddyMid(_return, buddyMid);
    }
    ifaces_[i]->getActiveMemberMidsByBuddyMid(_return, buddyMid);
    return;
  }

  void getAllBuddyMembers(std::vector<std::string> & _return) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getAllBuddyMembers(_return);
    }
    ifaces_[i]->getAllBuddyMembers(_return);
    return;
  }

  void getBlockedBuddyMembers(std::vector<std::string> & _return) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getBlockedBuddyMembers(_return);
    }
    ifaces_[i]->getBlockedBuddyMembers(_return);
    return;
  }

  int64_t getBlockerCountByBuddyMid(const std::string& buddyMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getBlockerCountByBuddyMid(buddyMid);
    }
    return ifaces_[i]->getBlockerCountByBuddyMid(buddyMid);
  }

  void getBuddyDetailByMid(BuddyDetail& _return, const std::string& buddyMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getBuddyDetailByMid(_return, buddyMid);
    }
    ifaces_[i]->getBuddyDetailByMid(_return, buddyMid);
    return;
  }

  void getBuddyProfile(BuddyProfile& _return) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getBuddyProfile(_return);
    }
    ifaces_[i]->getBuddyProfile(_return);
    return;
  }

  void getContactTicket(Ticket& _return) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getContactTicket(_return);
    }
    ifaces_[i]->getContactTicket(_return);
    return;
  }

  int64_t getMemberCountByBuddyMid(const std::string& buddyMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getMemberCountByBuddyMid(buddyMid);
    }
    return ifaces_[i]->getMemberCountByBuddyMid(buddyMid);
  }

  void getSendBuddyMessageResult(SendBuddyMessageResult& _return, const std::string& sendBuddyMessageRequestId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSendBuddyMessageResult(_return, sendBuddyMessageRequestId);
    }
    ifaces_[i]->getSendBuddyMessageResult(_return, sendBuddyMessageRequestId);
    return;
  }

  void getSetBuddyOnAirResult(SetBuddyOnAirResult& _return, const std::string& setBuddyOnAirRequestId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getSetBuddyOnAirResult(_return, setBuddyOnAirRequestId);
    }
    ifaces_[i]->getSetBuddyOnAirResult(_return, setBuddyOnAirRequestId);
    return;
  }

  void getUpdateBuddyProfileResult(UpdateBuddyProfileResult& _return, const std::string& updateBuddyProfileRequestId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->getUpdateBuddyProfileResult(_return, updateBuddyProfileRequestId);
    }
    ifaces_[i]->getUpdateBuddyProfileResult(_return, updateBuddyProfileRequestId);
    return;
  }

  bool isBuddyOnAirByMid(const std::string& buddyMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->isBuddyOnAirByMid(buddyMid);
    }
    return ifaces_[i]->isBuddyOnAirByMid(buddyMid);
  }

  void linkAndSendBuddyContentMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& sourceContentId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->linkAndSendBuddyContentMessageToAllAsync(_return, requestId, msg, sourceContentId);
    }
    ifaces_[i]->linkAndSendBuddyContentMessageToAllAsync(_return, requestId, msg, sourceContentId);
    return;
  }

  void linkAndSendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& sourceContentId, const std::vector<std::string> & mids) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->linkAndSendBuddyContentMessageToMids(_return, requestId, msg, sourceContentId, mids);
    }
    ifaces_[i]->linkAndSendBuddyContentMessageToMids(_return, requestId, msg, sourceContentId, mids);
    return;
  }

  void notifyBuddyBlocked(const std::string& buddyMid, const std::string& blockerMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->notifyBuddyBlocked(buddyMid, blockerMid);
    }
    ifaces_[i]->notifyBuddyBlocked(buddyMid, blockerMid);
  }

  void notifyBuddyUnblocked(const std::string& buddyMid, const std::string& blockerMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->notifyBuddyUnblocked(buddyMid, blockerMid);
    }
    ifaces_[i]->notifyBuddyUnblocked(buddyMid, blockerMid);
  }

  void registerBuddy(std::string& _return, const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMeessage, const std::string& picture, const std::map<std::string, std::string> & settings) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->registerBuddy(_return, buddyId, searchId, displayName, statusMeessage, picture, settings);
    }
    ifaces_[i]->registerBuddy(_return, buddyId, searchId, displayName, statusMeessage, picture, settings);
    return;
  }

  void registerBuddyAdmin(std::string& _return, const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMessage, const std::string& picture) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->registerBuddyAdmin(_return, buddyId, searchId, displayName, statusMessage, picture);
    }
    ifaces_[i]->registerBuddyAdmin(_return, buddyId, searchId, displayName, statusMessage, picture);
    return;
  }

  void reissueContactTicket(std::string& _return, const int64_t expirationTime, const int32_t maxUseCount) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->reissueContactTicket(_return, expirationTime, maxUseCount);
    }
    ifaces_[i]->reissueContactTicket(_return, expirationTime, maxUseCount);
    return;
  }

  void removeBuddyMember(const std::string& requestId, const std::string& userMid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->removeBuddyMember(requestId, userMid);
    }
    ifaces_[i]->removeBuddyMember(requestId, userMid);
  }

  void removeBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->removeBuddyMembers(requestId, userMids);
    }
    ifaces_[i]->removeBuddyMembers(requestId, userMids);
  }

  void sendBuddyContentMessageToAll(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& content) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->sendBuddyContentMessageToAll(_return, requestId, msg, content);
    }
    ifaces_[i]->sendBuddyContentMessageToAll(_return, requestId, msg, content);
    return;
  }

  void sendBuddyContentMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& content) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->sendBuddyContentMessageToAllAsync(_return, requestId, msg, content);
    }
    ifaces_[i]->sendBuddyContentMessageToAllAsync(_return, requestId, msg, content);
    return;
  }

  void sendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->sendBuddyContentMessageToMids(_return, requestId, msg, content, mids);
    }
    ifaces_[i]->sendBuddyContentMessageToMids(_return, requestId, msg, content, mids);
    return;
  }

  void sendBuddyContentMessageToMidsAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->sendBuddyContentMessageToMidsAsync(_return, requestId, msg, content, mids);
    }
    ifaces_[i]->sendBuddyContentMessageToMidsAsync(_return, requestId, msg, content, mids);
    return;
  }

  void sendBuddyMessageToAll(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->sendBuddyMessageToAll(_return, requestId, msg);
    }
    ifaces_[i]->sendBuddyMessageToAll(_return, requestId, msg);
    return;
  }

  void sendBuddyMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->sendBuddyMessageToAllAsync(_return, requestId, msg);
    }
    ifaces_[i]->sendBuddyMessageToAllAsync(_return, requestId, msg);
    return;
  }

  void sendBuddyMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::vector<std::string> & mids) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->sendBuddyMessageToMids(_return, requestId, msg, mids);
    }
    ifaces_[i]->sendBuddyMessageToMids(_return, requestId, msg, mids);
    return;
  }

  void sendBuddyMessageToMidsAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::vector<std::string> & mids) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->sendBuddyMessageToMidsAsync(_return, requestId, msg, mids);
    }
    ifaces_[i]->sendBuddyMessageToMidsAsync(_return, requestId, msg, mids);
    return;
  }

  void sendIndividualEventToAllAsync(const std::string& requestId, const std::string& buddyMid, const NotificationStatus::type notificationStatus) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->sendIndividualEventToAllAsync(requestId, buddyMid, notificationStatus);
    }
    ifaces_[i]->sendIndividualEventToAllAsync(requestId, buddyMid, notificationStatus);
  }

  void setBuddyOnAir(SetBuddyOnAirResult& _return, const std::string& requestId, const bool onAir) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->setBuddyOnAir(_return, requestId, onAir);
    }
    ifaces_[i]->setBuddyOnAir(_return, requestId, onAir);
    return;
  }

  void setBuddyOnAirAsync(std::string& _return, const std::string& requestId, const bool onAir) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->setBuddyOnAirAsync(_return, requestId, onAir);
    }
    ifaces_[i]->setBuddyOnAirAsync(_return, requestId, onAir);
    return;
  }

  void storeMessage(SendBuddyMessageResult& _return, const std::string& requestId, const BuddyMessageRequest& messageRequest) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->storeMessage(_return, requestId, messageRequest);
    }
    ifaces_[i]->storeMessage(_return, requestId, messageRequest);
    return;
  }

  void unblockBuddyMember(const std::string& requestId, const std::string& mid) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->unblockBuddyMember(requestId, mid);
    }
    ifaces_[i]->unblockBuddyMember(requestId, mid);
  }

  void unregisterBuddy(const std::string& requestId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->unregisterBuddy(requestId);
    }
    ifaces_[i]->unregisterBuddy(requestId);
  }

  void unregisterBuddyAdmin(const std::string& requestId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->unregisterBuddyAdmin(requestId);
    }
    ifaces_[i]->unregisterBuddyAdmin(requestId);
  }

  void updateBuddyAdminProfileAttribute(const std::string& requestId, const std::map<std::string, std::string> & attributes) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateBuddyAdminProfileAttribute(requestId, attributes);
    }
    ifaces_[i]->updateBuddyAdminProfileAttribute(requestId, attributes);
  }

  void updateBuddyAdminProfileImage(const std::string& requestId, const std::string& picture) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateBuddyAdminProfileImage(requestId, picture);
    }
    ifaces_[i]->updateBuddyAdminProfileImage(requestId, picture);
  }

  void updateBuddyProfileAttributes(UpdateBuddyProfileResult& _return, const std::string& requestId, const std::map<std::string, std::string> & attributes) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateBuddyProfileAttributes(_return, requestId, attributes);
    }
    ifaces_[i]->updateBuddyProfileAttributes(_return, requestId, attributes);
    return;
  }

  void updateBuddyProfileAttributesAsync(std::string& _return, const std::string& requestId, const std::map<std::string, std::string> & attributes) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateBuddyProfileAttributesAsync(_return, requestId, attributes);
    }
    ifaces_[i]->updateBuddyProfileAttributesAsync(_return, requestId, attributes);
    return;
  }

  void updateBuddyProfileImage(UpdateBuddyProfileResult& _return, const std::string& requestId, const std::string& image) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateBuddyProfileImage(_return, requestId, image);
    }
    ifaces_[i]->updateBuddyProfileImage(_return, requestId, image);
    return;
  }

  void updateBuddyProfileImageAsync(std::string& _return, const std::string& requestId, const std::string& image) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateBuddyProfileImageAsync(_return, requestId, image);
    }
    ifaces_[i]->updateBuddyProfileImageAsync(_return, requestId, image);
    return;
  }

  void updateBuddySearchId(const std::string& requestId, const std::string& searchId) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateBuddySearchId(requestId, searchId);
    }
    ifaces_[i]->updateBuddySearchId(requestId, searchId);
  }

  void updateBuddySettings(const std::map<std::string, std::string> & settings) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->updateBuddySettings(settings);
    }
    ifaces_[i]->updateBuddySettings(settings);
  }

  void uploadBuddyContent(std::string& _return, const ContentType::type contentType, const std::string& content) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->uploadBuddyContent(_return, contentType, content);
    }
    ifaces_[i]->uploadBuddyContent(_return, contentType, content);
    return;
  }

};

// The 'concurrent' client is a thread safe client that correctly handles
// out of order responses.  It is slower than the regular client, so should
// only be used when you need to share a connection among multiple threads
class BuddyManagementServiceConcurrentClient : virtual public BuddyManagementServiceIf {
 public:
  BuddyManagementServiceConcurrentClient(std::shared_ptr< ::apache::thrift::protocol::TProtocol> prot, std::shared_ptr<::apache::thrift::async::TConcurrentClientSyncInfo> sync) : sync_(sync)
{
    setProtocol(prot);
  }
  BuddyManagementServiceConcurrentClient(std::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, std::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot, std::shared_ptr<::apache::thrift::async::TConcurrentClientSyncInfo> sync) : sync_(sync)
{
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(std::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(std::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, std::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void addBuddyMember(const std::string& requestId, const std::string& userMid);
  int32_t send_addBuddyMember(const std::string& requestId, const std::string& userMid);
  void recv_addBuddyMember(const int32_t seqid);
  void addBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids);
  int32_t send_addBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids);
  void recv_addBuddyMembers(const int32_t seqid);
  void blockBuddyMember(const std::string& requestId, const std::string& mid);
  int32_t send_blockBuddyMember(const std::string& requestId, const std::string& mid);
  void recv_blockBuddyMember(const int32_t seqid);
  void commitSendMessagesToAll(std::vector<SendBuddyMessageResult> & _return, const std::vector<std::string> & requestIdList);
  int32_t send_commitSendMessagesToAll(const std::vector<std::string> & requestIdList);
  void recv_commitSendMessagesToAll(std::vector<SendBuddyMessageResult> & _return, const int32_t seqid);
  void commitSendMessagesToMids(std::vector<SendBuddyMessageResult> & _return, const std::vector<std::string> & requestIdList, const std::vector<std::string> & mids);
  int32_t send_commitSendMessagesToMids(const std::vector<std::string> & requestIdList, const std::vector<std::string> & mids);
  void recv_commitSendMessagesToMids(std::vector<SendBuddyMessageResult> & _return, const int32_t seqid);
  bool containsBuddyMember(const std::string& requestId, const std::string& userMid);
  int32_t send_containsBuddyMember(const std::string& requestId, const std::string& userMid);
  bool recv_containsBuddyMember(const int32_t seqid);
  void downloadMessageContent(std::string& _return, const std::string& requestId, const std::string& messageId);
  int32_t send_downloadMessageContent(const std::string& requestId, const std::string& messageId);
  void recv_downloadMessageContent(std::string& _return, const int32_t seqid);
  void downloadMessageContentPreview(std::string& _return, const std::string& requestId, const std::string& messageId);
  int32_t send_downloadMessageContentPreview(const std::string& requestId, const std::string& messageId);
  void recv_downloadMessageContentPreview(std::string& _return, const int32_t seqid);
  void downloadProfileImage(std::string& _return, const std::string& requestId);
  int32_t send_downloadProfileImage(const std::string& requestId);
  void recv_downloadProfileImage(std::string& _return, const int32_t seqid);
  void downloadProfileImagePreview(std::string& _return, const std::string& requestId);
  int32_t send_downloadProfileImagePreview(const std::string& requestId);
  void recv_downloadProfileImagePreview(std::string& _return, const int32_t seqid);
  int64_t getActiveMemberCountByBuddyMid(const std::string& buddyMid);
  int32_t send_getActiveMemberCountByBuddyMid(const std::string& buddyMid);
  int64_t recv_getActiveMemberCountByBuddyMid(const int32_t seqid);
  void getActiveMemberMidsByBuddyMid(std::vector<std::string> & _return, const std::string& buddyMid);
  int32_t send_getActiveMemberMidsByBuddyMid(const std::string& buddyMid);
  void recv_getActiveMemberMidsByBuddyMid(std::vector<std::string> & _return, const int32_t seqid);
  void getAllBuddyMembers(std::vector<std::string> & _return);
  int32_t send_getAllBuddyMembers();
  void recv_getAllBuddyMembers(std::vector<std::string> & _return, const int32_t seqid);
  void getBlockedBuddyMembers(std::vector<std::string> & _return);
  int32_t send_getBlockedBuddyMembers();
  void recv_getBlockedBuddyMembers(std::vector<std::string> & _return, const int32_t seqid);
  int64_t getBlockerCountByBuddyMid(const std::string& buddyMid);
  int32_t send_getBlockerCountByBuddyMid(const std::string& buddyMid);
  int64_t recv_getBlockerCountByBuddyMid(const int32_t seqid);
  void getBuddyDetailByMid(BuddyDetail& _return, const std::string& buddyMid);
  int32_t send_getBuddyDetailByMid(const std::string& buddyMid);
  void recv_getBuddyDetailByMid(BuddyDetail& _return, const int32_t seqid);
  void getBuddyProfile(BuddyProfile& _return);
  int32_t send_getBuddyProfile();
  void recv_getBuddyProfile(BuddyProfile& _return, const int32_t seqid);
  void getContactTicket(Ticket& _return);
  int32_t send_getContactTicket();
  void recv_getContactTicket(Ticket& _return, const int32_t seqid);
  int64_t getMemberCountByBuddyMid(const std::string& buddyMid);
  int32_t send_getMemberCountByBuddyMid(const std::string& buddyMid);
  int64_t recv_getMemberCountByBuddyMid(const int32_t seqid);
  void getSendBuddyMessageResult(SendBuddyMessageResult& _return, const std::string& sendBuddyMessageRequestId);
  int32_t send_getSendBuddyMessageResult(const std::string& sendBuddyMessageRequestId);
  void recv_getSendBuddyMessageResult(SendBuddyMessageResult& _return, const int32_t seqid);
  void getSetBuddyOnAirResult(SetBuddyOnAirResult& _return, const std::string& setBuddyOnAirRequestId);
  int32_t send_getSetBuddyOnAirResult(const std::string& setBuddyOnAirRequestId);
  void recv_getSetBuddyOnAirResult(SetBuddyOnAirResult& _return, const int32_t seqid);
  void getUpdateBuddyProfileResult(UpdateBuddyProfileResult& _return, const std::string& updateBuddyProfileRequestId);
  int32_t send_getUpdateBuddyProfileResult(const std::string& updateBuddyProfileRequestId);
  void recv_getUpdateBuddyProfileResult(UpdateBuddyProfileResult& _return, const int32_t seqid);
  bool isBuddyOnAirByMid(const std::string& buddyMid);
  int32_t send_isBuddyOnAirByMid(const std::string& buddyMid);
  bool recv_isBuddyOnAirByMid(const int32_t seqid);
  void linkAndSendBuddyContentMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& sourceContentId);
  int32_t send_linkAndSendBuddyContentMessageToAllAsync(const std::string& requestId, const Message& msg, const std::string& sourceContentId);
  void recv_linkAndSendBuddyContentMessageToAllAsync(std::string& _return, const int32_t seqid);
  void linkAndSendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& sourceContentId, const std::vector<std::string> & mids);
  int32_t send_linkAndSendBuddyContentMessageToMids(const std::string& requestId, const Message& msg, const std::string& sourceContentId, const std::vector<std::string> & mids);
  void recv_linkAndSendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const int32_t seqid);
  void notifyBuddyBlocked(const std::string& buddyMid, const std::string& blockerMid);
  int32_t send_notifyBuddyBlocked(const std::string& buddyMid, const std::string& blockerMid);
  void recv_notifyBuddyBlocked(const int32_t seqid);
  void notifyBuddyUnblocked(const std::string& buddyMid, const std::string& blockerMid);
  int32_t send_notifyBuddyUnblocked(const std::string& buddyMid, const std::string& blockerMid);
  void recv_notifyBuddyUnblocked(const int32_t seqid);
  void registerBuddy(std::string& _return, const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMeessage, const std::string& picture, const std::map<std::string, std::string> & settings);
  int32_t send_registerBuddy(const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMeessage, const std::string& picture, const std::map<std::string, std::string> & settings);
  void recv_registerBuddy(std::string& _return, const int32_t seqid);
  void registerBuddyAdmin(std::string& _return, const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMessage, const std::string& picture);
  int32_t send_registerBuddyAdmin(const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMessage, const std::string& picture);
  void recv_registerBuddyAdmin(std::string& _return, const int32_t seqid);
  void reissueContactTicket(std::string& _return, const int64_t expirationTime, const int32_t maxUseCount);
  int32_t send_reissueContactTicket(const int64_t expirationTime, const int32_t maxUseCount);
  void recv_reissueContactTicket(std::string& _return, const int32_t seqid);
  void removeBuddyMember(const std::string& requestId, const std::string& userMid);
  int32_t send_removeBuddyMember(const std::string& requestId, const std::string& userMid);
  void recv_removeBuddyMember(const int32_t seqid);
  void removeBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids);
  int32_t send_removeBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids);
  void recv_removeBuddyMembers(const int32_t seqid);
  void sendBuddyContentMessageToAll(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& content);
  int32_t send_sendBuddyContentMessageToAll(const std::string& requestId, const Message& msg, const std::string& content);
  void recv_sendBuddyContentMessageToAll(SendBuddyMessageResult& _return, const int32_t seqid);
  void sendBuddyContentMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& content);
  int32_t send_sendBuddyContentMessageToAllAsync(const std::string& requestId, const Message& msg, const std::string& content);
  void recv_sendBuddyContentMessageToAllAsync(std::string& _return, const int32_t seqid);
  void sendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids);
  int32_t send_sendBuddyContentMessageToMids(const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids);
  void recv_sendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const int32_t seqid);
  void sendBuddyContentMessageToMidsAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids);
  int32_t send_sendBuddyContentMessageToMidsAsync(const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids);
  void recv_sendBuddyContentMessageToMidsAsync(std::string& _return, const int32_t seqid);
  void sendBuddyMessageToAll(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg);
  int32_t send_sendBuddyMessageToAll(const std::string& requestId, const Message& msg);
  void recv_sendBuddyMessageToAll(SendBuddyMessageResult& _return, const int32_t seqid);
  void sendBuddyMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg);
  int32_t send_sendBuddyMessageToAllAsync(const std::string& requestId, const Message& msg);
  void recv_sendBuddyMessageToAllAsync(std::string& _return, const int32_t seqid);
  void sendBuddyMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::vector<std::string> & mids);
  int32_t send_sendBuddyMessageToMids(const std::string& requestId, const Message& msg, const std::vector<std::string> & mids);
  void recv_sendBuddyMessageToMids(SendBuddyMessageResult& _return, const int32_t seqid);
  void sendBuddyMessageToMidsAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::vector<std::string> & mids);
  int32_t send_sendBuddyMessageToMidsAsync(const std::string& requestId, const Message& msg, const std::vector<std::string> & mids);
  void recv_sendBuddyMessageToMidsAsync(std::string& _return, const int32_t seqid);
  void sendIndividualEventToAllAsync(const std::string& requestId, const std::string& buddyMid, const NotificationStatus::type notificationStatus);
  int32_t send_sendIndividualEventToAllAsync(const std::string& requestId, const std::string& buddyMid, const NotificationStatus::type notificationStatus);
  void recv_sendIndividualEventToAllAsync(const int32_t seqid);
  void setBuddyOnAir(SetBuddyOnAirResult& _return, const std::string& requestId, const bool onAir);
  int32_t send_setBuddyOnAir(const std::string& requestId, const bool onAir);
  void recv_setBuddyOnAir(SetBuddyOnAirResult& _return, const int32_t seqid);
  void setBuddyOnAirAsync(std::string& _return, const std::string& requestId, const bool onAir);
  int32_t send_setBuddyOnAirAsync(const std::string& requestId, const bool onAir);
  void recv_setBuddyOnAirAsync(std::string& _return, const int32_t seqid);
  void storeMessage(SendBuddyMessageResult& _return, const std::string& requestId, const BuddyMessageRequest& messageRequest);
  int32_t send_storeMessage(const std::string& requestId, const BuddyMessageRequest& messageRequest);
  void recv_storeMessage(SendBuddyMessageResult& _return, const int32_t seqid);
  void unblockBuddyMember(const std::string& requestId, const std::string& mid);
  int32_t send_unblockBuddyMember(const std::string& requestId, const std::string& mid);
  void recv_unblockBuddyMember(const int32_t seqid);
  void unregisterBuddy(const std::string& requestId);
  int32_t send_unregisterBuddy(const std::string& requestId);
  void recv_unregisterBuddy(const int32_t seqid);
  void unregisterBuddyAdmin(const std::string& requestId);
  int32_t send_unregisterBuddyAdmin(const std::string& requestId);
  void recv_unregisterBuddyAdmin(const int32_t seqid);
  void updateBuddyAdminProfileAttribute(const std::string& requestId, const std::map<std::string, std::string> & attributes);
  int32_t send_updateBuddyAdminProfileAttribute(const std::string& requestId, const std::map<std::string, std::string> & attributes);
  void recv_updateBuddyAdminProfileAttribute(const int32_t seqid);
  void updateBuddyAdminProfileImage(const std::string& requestId, const std::string& picture);
  int32_t send_updateBuddyAdminProfileImage(const std::string& requestId, const std::string& picture);
  void recv_updateBuddyAdminProfileImage(const int32_t seqid);
  void updateBuddyProfileAttributes(UpdateBuddyProfileResult& _return, const std::string& requestId, const std::map<std::string, std::string> & attributes);
  int32_t send_updateBuddyProfileAttributes(const std::string& requestId, const std::map<std::string, std::string> & attributes);
  void recv_updateBuddyProfileAttributes(UpdateBuddyProfileResult& _return, const int32_t seqid);
  void updateBuddyProfileAttributesAsync(std::string& _return, const std::string& requestId, const std::map<std::string, std::string> & attributes);
  int32_t send_updateBuddyProfileAttributesAsync(const std::string& requestId, const std::map<std::string, std::string> & attributes);
  void recv_updateBuddyProfileAttributesAsync(std::string& _return, const int32_t seqid);
  void updateBuddyProfileImage(UpdateBuddyProfileResult& _return, const std::string& requestId, const std::string& image);
  int32_t send_updateBuddyProfileImage(const std::string& requestId, const std::string& image);
  void recv_updateBuddyProfileImage(UpdateBuddyProfileResult& _return, const int32_t seqid);
  void updateBuddyProfileImageAsync(std::string& _return, const std::string& requestId, const std::string& image);
  int32_t send_updateBuddyProfileImageAsync(const std::string& requestId, const std::string& image);
  void recv_updateBuddyProfileImageAsync(std::string& _return, const int32_t seqid);
  void updateBuddySearchId(const std::string& requestId, const std::string& searchId);
  int32_t send_updateBuddySearchId(const std::string& requestId, const std::string& searchId);
  void recv_updateBuddySearchId(const int32_t seqid);
  void updateBuddySettings(const std::map<std::string, std::string> & settings);
  int32_t send_updateBuddySettings(const std::map<std::string, std::string> & settings);
  void recv_updateBuddySettings(const int32_t seqid);
  void uploadBuddyContent(std::string& _return, const ContentType::type contentType, const std::string& content);
  int32_t send_uploadBuddyContent(const ContentType::type contentType, const std::string& content);
  void recv_uploadBuddyContent(std::string& _return, const int32_t seqid);
 protected:
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
  std::shared_ptr<::apache::thrift::async::TConcurrentClientSyncInfo> sync_;
};

#ifdef _MSC_VER
  #pragma warning( pop )
#endif



#endif
