// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "BuddyManagementService.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

class BuddyManagementServiceHandler : virtual public BuddyManagementServiceIf {
 public:
  BuddyManagementServiceHandler() {
    // Your initialization goes here
  }

  void addBuddyMember(const std::string& requestId, const std::string& userMid) {
    // Your implementation goes here
    printf("addBuddyMember\n");
  }

  void addBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids) {
    // Your implementation goes here
    printf("addBuddyMembers\n");
  }

  void blockBuddyMember(const std::string& requestId, const std::string& mid) {
    // Your implementation goes here
    printf("blockBuddyMember\n");
  }

  void commitSendMessagesToAll(std::vector<SendBuddyMessageResult> & _return, const std::vector<std::string> & requestIdList) {
    // Your implementation goes here
    printf("commitSendMessagesToAll\n");
  }

  void commitSendMessagesToMids(std::vector<SendBuddyMessageResult> & _return, const std::vector<std::string> & requestIdList, const std::vector<std::string> & mids) {
    // Your implementation goes here
    printf("commitSendMessagesToMids\n");
  }

  bool containsBuddyMember(const std::string& requestId, const std::string& userMid) {
    // Your implementation goes here
    printf("containsBuddyMember\n");
  }

  void downloadMessageContent(std::string& _return, const std::string& requestId, const std::string& messageId) {
    // Your implementation goes here
    printf("downloadMessageContent\n");
  }

  void downloadMessageContentPreview(std::string& _return, const std::string& requestId, const std::string& messageId) {
    // Your implementation goes here
    printf("downloadMessageContentPreview\n");
  }

  void downloadProfileImage(std::string& _return, const std::string& requestId) {
    // Your implementation goes here
    printf("downloadProfileImage\n");
  }

  void downloadProfileImagePreview(std::string& _return, const std::string& requestId) {
    // Your implementation goes here
    printf("downloadProfileImagePreview\n");
  }

  int64_t getActiveMemberCountByBuddyMid(const std::string& buddyMid) {
    // Your implementation goes here
    printf("getActiveMemberCountByBuddyMid\n");
  }

  void getActiveMemberMidsByBuddyMid(std::vector<std::string> & _return, const std::string& buddyMid) {
    // Your implementation goes here
    printf("getActiveMemberMidsByBuddyMid\n");
  }

  void getAllBuddyMembers(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("getAllBuddyMembers\n");
  }

  void getBlockedBuddyMembers(std::vector<std::string> & _return) {
    // Your implementation goes here
    printf("getBlockedBuddyMembers\n");
  }

  int64_t getBlockerCountByBuddyMid(const std::string& buddyMid) {
    // Your implementation goes here
    printf("getBlockerCountByBuddyMid\n");
  }

  void getBuddyDetailByMid(BuddyDetail& _return, const std::string& buddyMid) {
    // Your implementation goes here
    printf("getBuddyDetailByMid\n");
  }

  void getBuddyProfile(BuddyProfile& _return) {
    // Your implementation goes here
    printf("getBuddyProfile\n");
  }

  void getContactTicket(Ticket& _return) {
    // Your implementation goes here
    printf("getContactTicket\n");
  }

  int64_t getMemberCountByBuddyMid(const std::string& buddyMid) {
    // Your implementation goes here
    printf("getMemberCountByBuddyMid\n");
  }

  void getSendBuddyMessageResult(SendBuddyMessageResult& _return, const std::string& sendBuddyMessageRequestId) {
    // Your implementation goes here
    printf("getSendBuddyMessageResult\n");
  }

  void getSetBuddyOnAirResult(SetBuddyOnAirResult& _return, const std::string& setBuddyOnAirRequestId) {
    // Your implementation goes here
    printf("getSetBuddyOnAirResult\n");
  }

  void getUpdateBuddyProfileResult(UpdateBuddyProfileResult& _return, const std::string& updateBuddyProfileRequestId) {
    // Your implementation goes here
    printf("getUpdateBuddyProfileResult\n");
  }

  bool isBuddyOnAirByMid(const std::string& buddyMid) {
    // Your implementation goes here
    printf("isBuddyOnAirByMid\n");
  }

  void linkAndSendBuddyContentMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& sourceContentId) {
    // Your implementation goes here
    printf("linkAndSendBuddyContentMessageToAllAsync\n");
  }

  void linkAndSendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& sourceContentId, const std::vector<std::string> & mids) {
    // Your implementation goes here
    printf("linkAndSendBuddyContentMessageToMids\n");
  }

  void notifyBuddyBlocked(const std::string& buddyMid, const std::string& blockerMid) {
    // Your implementation goes here
    printf("notifyBuddyBlocked\n");
  }

  void notifyBuddyUnblocked(const std::string& buddyMid, const std::string& blockerMid) {
    // Your implementation goes here
    printf("notifyBuddyUnblocked\n");
  }

  void registerBuddy(std::string& _return, const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMeessage, const std::string& picture, const std::map<std::string, std::string> & settings) {
    // Your implementation goes here
    printf("registerBuddy\n");
  }

  void registerBuddyAdmin(std::string& _return, const std::string& buddyId, const std::string& searchId, const std::string& displayName, const std::string& statusMessage, const std::string& picture) {
    // Your implementation goes here
    printf("registerBuddyAdmin\n");
  }

  void reissueContactTicket(std::string& _return, const int64_t expirationTime, const int32_t maxUseCount) {
    // Your implementation goes here
    printf("reissueContactTicket\n");
  }

  void removeBuddyMember(const std::string& requestId, const std::string& userMid) {
    // Your implementation goes here
    printf("removeBuddyMember\n");
  }

  void removeBuddyMembers(const std::string& requestId, const std::vector<std::string> & userMids) {
    // Your implementation goes here
    printf("removeBuddyMembers\n");
  }

  void sendBuddyContentMessageToAll(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& content) {
    // Your implementation goes here
    printf("sendBuddyContentMessageToAll\n");
  }

  void sendBuddyContentMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& content) {
    // Your implementation goes here
    printf("sendBuddyContentMessageToAllAsync\n");
  }

  void sendBuddyContentMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids) {
    // Your implementation goes here
    printf("sendBuddyContentMessageToMids\n");
  }

  void sendBuddyContentMessageToMidsAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::string& content, const std::vector<std::string> & mids) {
    // Your implementation goes here
    printf("sendBuddyContentMessageToMidsAsync\n");
  }

  void sendBuddyMessageToAll(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg) {
    // Your implementation goes here
    printf("sendBuddyMessageToAll\n");
  }

  void sendBuddyMessageToAllAsync(std::string& _return, const std::string& requestId, const Message& msg) {
    // Your implementation goes here
    printf("sendBuddyMessageToAllAsync\n");
  }

  void sendBuddyMessageToMids(SendBuddyMessageResult& _return, const std::string& requestId, const Message& msg, const std::vector<std::string> & mids) {
    // Your implementation goes here
    printf("sendBuddyMessageToMids\n");
  }

  void sendBuddyMessageToMidsAsync(std::string& _return, const std::string& requestId, const Message& msg, const std::vector<std::string> & mids) {
    // Your implementation goes here
    printf("sendBuddyMessageToMidsAsync\n");
  }

  void sendIndividualEventToAllAsync(const std::string& requestId, const std::string& buddyMid, const NotificationStatus::type notificationStatus) {
    // Your implementation goes here
    printf("sendIndividualEventToAllAsync\n");
  }

  void setBuddyOnAir(SetBuddyOnAirResult& _return, const std::string& requestId, const bool onAir) {
    // Your implementation goes here
    printf("setBuddyOnAir\n");
  }

  void setBuddyOnAirAsync(std::string& _return, const std::string& requestId, const bool onAir) {
    // Your implementation goes here
    printf("setBuddyOnAirAsync\n");
  }

  void storeMessage(SendBuddyMessageResult& _return, const std::string& requestId, const BuddyMessageRequest& messageRequest) {
    // Your implementation goes here
    printf("storeMessage\n");
  }

  void unblockBuddyMember(const std::string& requestId, const std::string& mid) {
    // Your implementation goes here
    printf("unblockBuddyMember\n");
  }

  void unregisterBuddy(const std::string& requestId) {
    // Your implementation goes here
    printf("unregisterBuddy\n");
  }

  void unregisterBuddyAdmin(const std::string& requestId) {
    // Your implementation goes here
    printf("unregisterBuddyAdmin\n");
  }

  void updateBuddyAdminProfileAttribute(const std::string& requestId, const std::map<std::string, std::string> & attributes) {
    // Your implementation goes here
    printf("updateBuddyAdminProfileAttribute\n");
  }

  void updateBuddyAdminProfileImage(const std::string& requestId, const std::string& picture) {
    // Your implementation goes here
    printf("updateBuddyAdminProfileImage\n");
  }

  void updateBuddyProfileAttributes(UpdateBuddyProfileResult& _return, const std::string& requestId, const std::map<std::string, std::string> & attributes) {
    // Your implementation goes here
    printf("updateBuddyProfileAttributes\n");
  }

  void updateBuddyProfileAttributesAsync(std::string& _return, const std::string& requestId, const std::map<std::string, std::string> & attributes) {
    // Your implementation goes here
    printf("updateBuddyProfileAttributesAsync\n");
  }

  void updateBuddyProfileImage(UpdateBuddyProfileResult& _return, const std::string& requestId, const std::string& image) {
    // Your implementation goes here
    printf("updateBuddyProfileImage\n");
  }

  void updateBuddyProfileImageAsync(std::string& _return, const std::string& requestId, const std::string& image) {
    // Your implementation goes here
    printf("updateBuddyProfileImageAsync\n");
  }

  void updateBuddySearchId(const std::string& requestId, const std::string& searchId) {
    // Your implementation goes here
    printf("updateBuddySearchId\n");
  }

  void updateBuddySettings(const std::map<std::string, std::string> & settings) {
    // Your implementation goes here
    printf("updateBuddySettings\n");
  }

  void uploadBuddyContent(std::string& _return, const ContentType::type contentType, const std::string& content) {
    // Your implementation goes here
    printf("uploadBuddyContent\n");
  }

};

int main(int argc, char **argv) {
  int port = 9090;
  ::std::shared_ptr<BuddyManagementServiceHandler> handler(new BuddyManagementServiceHandler());
  ::std::shared_ptr<TProcessor> processor(new BuddyManagementServiceProcessor(handler));
  ::std::shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  ::std::shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  ::std::shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

