/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;


class BuddyManagementServiceProcessor implements TProcessor {

  private var BuddyManagementService_iface_ : BuddyManagementService;
  private var PROCESS_MAP = new StringMap< Int->TProtocol->TProtocol->Void >();

  public function new( iface : BuddyManagementService)
  {
    BuddyManagementService_iface_ = iface;
    PROCESS_MAP.set("addBuddyMember", addBuddyMember());
    PROCESS_MAP.set("addBuddyMembers", addBuddyMembers());
    PROCESS_MAP.set("blockBuddyMember", blockBuddyMember());
    PROCESS_MAP.set("commitSendMessagesToAll", commitSendMessagesToAll());
    PROCESS_MAP.set("commitSendMessagesToMids", commitSendMessagesToMids());
    PROCESS_MAP.set("containsBuddyMember", containsBuddyMember());
    PROCESS_MAP.set("downloadMessageContent", downloadMessageContent());
    PROCESS_MAP.set("downloadMessageContentPreview", downloadMessageContentPreview());
    PROCESS_MAP.set("downloadProfileImage", downloadProfileImage());
    PROCESS_MAP.set("downloadProfileImagePreview", downloadProfileImagePreview());
    PROCESS_MAP.set("getActiveMemberCountByBuddyMid", getActiveMemberCountByBuddyMid());
    PROCESS_MAP.set("getActiveMemberMidsByBuddyMid", getActiveMemberMidsByBuddyMid());
    PROCESS_MAP.set("getAllBuddyMembers", getAllBuddyMembers());
    PROCESS_MAP.set("getBlockedBuddyMembers", getBlockedBuddyMembers());
    PROCESS_MAP.set("getBlockerCountByBuddyMid", getBlockerCountByBuddyMid());
    PROCESS_MAP.set("getBuddyDetailByMid", getBuddyDetailByMid());
    PROCESS_MAP.set("getBuddyProfile", getBuddyProfile());
    PROCESS_MAP.set("getContactTicket", getContactTicket());
    PROCESS_MAP.set("getMemberCountByBuddyMid", getMemberCountByBuddyMid());
    PROCESS_MAP.set("getSendBuddyMessageResult", getSendBuddyMessageResult());
    PROCESS_MAP.set("getSetBuddyOnAirResult", getSetBuddyOnAirResult());
    PROCESS_MAP.set("getUpdateBuddyProfileResult", getUpdateBuddyProfileResult());
    PROCESS_MAP.set("isBuddyOnAirByMid", isBuddyOnAirByMid());
    PROCESS_MAP.set("linkAndSendBuddyContentMessageToAllAsync", linkAndSendBuddyContentMessageToAllAsync());
    PROCESS_MAP.set("linkAndSendBuddyContentMessageToMids", linkAndSendBuddyContentMessageToMids());
    PROCESS_MAP.set("notifyBuddyBlocked", notifyBuddyBlocked());
    PROCESS_MAP.set("notifyBuddyUnblocked", notifyBuddyUnblocked());
    PROCESS_MAP.set("registerBuddy", registerBuddy());
    PROCESS_MAP.set("registerBuddyAdmin", registerBuddyAdmin());
    PROCESS_MAP.set("reissueContactTicket", reissueContactTicket());
    PROCESS_MAP.set("removeBuddyMember", removeBuddyMember());
    PROCESS_MAP.set("removeBuddyMembers", removeBuddyMembers());
    PROCESS_MAP.set("sendBuddyContentMessageToAll", sendBuddyContentMessageToAll());
    PROCESS_MAP.set("sendBuddyContentMessageToAllAsync", sendBuddyContentMessageToAllAsync());
    PROCESS_MAP.set("sendBuddyContentMessageToMids", sendBuddyContentMessageToMids());
    PROCESS_MAP.set("sendBuddyContentMessageToMidsAsync", sendBuddyContentMessageToMidsAsync());
    PROCESS_MAP.set("sendBuddyMessageToAll", sendBuddyMessageToAll());
    PROCESS_MAP.set("sendBuddyMessageToAllAsync", sendBuddyMessageToAllAsync());
    PROCESS_MAP.set("sendBuddyMessageToMids", sendBuddyMessageToMids());
    PROCESS_MAP.set("sendBuddyMessageToMidsAsync", sendBuddyMessageToMidsAsync());
    PROCESS_MAP.set("sendIndividualEventToAllAsync", sendIndividualEventToAllAsync());
    PROCESS_MAP.set("setBuddyOnAir", setBuddyOnAir());
    PROCESS_MAP.set("setBuddyOnAirAsync", setBuddyOnAirAsync());
    PROCESS_MAP.set("storeMessage", storeMessage());
    PROCESS_MAP.set("unblockBuddyMember", unblockBuddyMember());
    PROCESS_MAP.set("unregisterBuddy", unregisterBuddy());
    PROCESS_MAP.set("unregisterBuddyAdmin", unregisterBuddyAdmin());
    PROCESS_MAP.set("updateBuddyAdminProfileAttribute", updateBuddyAdminProfileAttribute());
    PROCESS_MAP.set("updateBuddyAdminProfileImage", updateBuddyAdminProfileImage());
    PROCESS_MAP.set("updateBuddyProfileAttributes", updateBuddyProfileAttributes());
    PROCESS_MAP.set("updateBuddyProfileAttributesAsync", updateBuddyProfileAttributesAsync());
    PROCESS_MAP.set("updateBuddyProfileImage", updateBuddyProfileImage());
    PROCESS_MAP.set("updateBuddyProfileImageAsync", updateBuddyProfileImageAsync());
    PROCESS_MAP.set("updateBuddySearchId", updateBuddySearchId());
    PROCESS_MAP.set("updateBuddySettings", updateBuddySettings());
    PROCESS_MAP.set("uploadBuddyContent", uploadBuddyContent());
  }

  public function process( iprot : TProtocol, oprot : TProtocol) : Bool
  {
    var msg : TMessage = iprot.readMessageBegin();
    var fn  = PROCESS_MAP.get(msg.name);
    if (fn == null) {
      TProtocolUtil.skip(iprot, TType.STRUCT);
      iprot.readMessageEnd();
      var x = new TApplicationException(TApplicationException.UNKNOWN_METHOD, "Invalid method name: '"+msg.name+"'");
      oprot.writeMessageBegin(new TMessage(msg.name, TMessageType.EXCEPTION, msg.seqid));
      x.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
      return true;
    }
    fn( msg.seqid, iprot, oprot);
    return true;
  }

  private function addBuddyMember() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : AddBuddyMember_args = new AddBuddyMember_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : AddBuddyMember_result = new AddBuddyMember_result();
      try {
        BuddyManagementService_iface_.addBuddyMember(args.requestId, args.userMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing addBuddyMember", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing addBuddyMember");
        oprot.writeMessageBegin(new TMessage("addBuddyMember", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("addBuddyMember", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function addBuddyMembers() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : AddBuddyMembers_args = new AddBuddyMembers_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : AddBuddyMembers_result = new AddBuddyMembers_result();
      try {
        BuddyManagementService_iface_.addBuddyMembers(args.requestId, args.userMids);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing addBuddyMembers", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing addBuddyMembers");
        oprot.writeMessageBegin(new TMessage("addBuddyMembers", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("addBuddyMembers", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function blockBuddyMember() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : BlockBuddyMember_args = new BlockBuddyMember_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : BlockBuddyMember_result = new BlockBuddyMember_result();
      try {
        BuddyManagementService_iface_.blockBuddyMember(args.requestId, args.mid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing blockBuddyMember", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing blockBuddyMember");
        oprot.writeMessageBegin(new TMessage("blockBuddyMember", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("blockBuddyMember", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function commitSendMessagesToAll() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : CommitSendMessagesToAll_args = new CommitSendMessagesToAll_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : CommitSendMessagesToAll_result = new CommitSendMessagesToAll_result();
      try {
        result.success = BuddyManagementService_iface_.commitSendMessagesToAll(args.requestIdList);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing commitSendMessagesToAll", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing commitSendMessagesToAll");
        oprot.writeMessageBegin(new TMessage("commitSendMessagesToAll", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("commitSendMessagesToAll", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function commitSendMessagesToMids() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : CommitSendMessagesToMids_args = new CommitSendMessagesToMids_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : CommitSendMessagesToMids_result = new CommitSendMessagesToMids_result();
      try {
        result.success = BuddyManagementService_iface_.commitSendMessagesToMids(args.requestIdList, args.mids);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing commitSendMessagesToMids", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing commitSendMessagesToMids");
        oprot.writeMessageBegin(new TMessage("commitSendMessagesToMids", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("commitSendMessagesToMids", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function containsBuddyMember() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : ContainsBuddyMember_args = new ContainsBuddyMember_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : ContainsBuddyMember_result = new ContainsBuddyMember_result();
      try {
        result.success = BuddyManagementService_iface_.containsBuddyMember(args.requestId, args.userMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing containsBuddyMember", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing containsBuddyMember");
        oprot.writeMessageBegin(new TMessage("containsBuddyMember", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("containsBuddyMember", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function downloadMessageContent() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : DownloadMessageContent_args = new DownloadMessageContent_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : DownloadMessageContent_result = new DownloadMessageContent_result();
      try {
        result.success = BuddyManagementService_iface_.downloadMessageContent(args.requestId, args.messageId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing downloadMessageContent", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing downloadMessageContent");
        oprot.writeMessageBegin(new TMessage("downloadMessageContent", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("downloadMessageContent", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function downloadMessageContentPreview() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : DownloadMessageContentPreview_args = new DownloadMessageContentPreview_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : DownloadMessageContentPreview_result = new DownloadMessageContentPreview_result();
      try {
        result.success = BuddyManagementService_iface_.downloadMessageContentPreview(args.requestId, args.messageId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing downloadMessageContentPreview", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing downloadMessageContentPreview");
        oprot.writeMessageBegin(new TMessage("downloadMessageContentPreview", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("downloadMessageContentPreview", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function downloadProfileImage() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : DownloadProfileImage_args = new DownloadProfileImage_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : DownloadProfileImage_result = new DownloadProfileImage_result();
      try {
        result.success = BuddyManagementService_iface_.downloadProfileImage(args.requestId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing downloadProfileImage", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing downloadProfileImage");
        oprot.writeMessageBegin(new TMessage("downloadProfileImage", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("downloadProfileImage", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function downloadProfileImagePreview() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : DownloadProfileImagePreview_args = new DownloadProfileImagePreview_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : DownloadProfileImagePreview_result = new DownloadProfileImagePreview_result();
      try {
        result.success = BuddyManagementService_iface_.downloadProfileImagePreview(args.requestId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing downloadProfileImagePreview", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing downloadProfileImagePreview");
        oprot.writeMessageBegin(new TMessage("downloadProfileImagePreview", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("downloadProfileImagePreview", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getActiveMemberCountByBuddyMid() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetActiveMemberCountByBuddyMid_args = new GetActiveMemberCountByBuddyMid_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetActiveMemberCountByBuddyMid_result = new GetActiveMemberCountByBuddyMid_result();
      try {
        result.success = BuddyManagementService_iface_.getActiveMemberCountByBuddyMid(args.buddyMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getActiveMemberCountByBuddyMid", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getActiveMemberCountByBuddyMid");
        oprot.writeMessageBegin(new TMessage("getActiveMemberCountByBuddyMid", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getActiveMemberCountByBuddyMid", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getActiveMemberMidsByBuddyMid() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetActiveMemberMidsByBuddyMid_args = new GetActiveMemberMidsByBuddyMid_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetActiveMemberMidsByBuddyMid_result = new GetActiveMemberMidsByBuddyMid_result();
      try {
        result.success = BuddyManagementService_iface_.getActiveMemberMidsByBuddyMid(args.buddyMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getActiveMemberMidsByBuddyMid", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getActiveMemberMidsByBuddyMid");
        oprot.writeMessageBegin(new TMessage("getActiveMemberMidsByBuddyMid", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getActiveMemberMidsByBuddyMid", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getAllBuddyMembers() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetAllBuddyMembers_args = new GetAllBuddyMembers_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetAllBuddyMembers_result = new GetAllBuddyMembers_result();
      try {
        result.success = BuddyManagementService_iface_.getAllBuddyMembers();
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getAllBuddyMembers", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getAllBuddyMembers");
        oprot.writeMessageBegin(new TMessage("getAllBuddyMembers", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getAllBuddyMembers", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getBlockedBuddyMembers() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetBlockedBuddyMembers_args = new GetBlockedBuddyMembers_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetBlockedBuddyMembers_result = new GetBlockedBuddyMembers_result();
      try {
        result.success = BuddyManagementService_iface_.getBlockedBuddyMembers();
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getBlockedBuddyMembers", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getBlockedBuddyMembers");
        oprot.writeMessageBegin(new TMessage("getBlockedBuddyMembers", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getBlockedBuddyMembers", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getBlockerCountByBuddyMid() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetBlockerCountByBuddyMid_args = new GetBlockerCountByBuddyMid_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetBlockerCountByBuddyMid_result = new GetBlockerCountByBuddyMid_result();
      try {
        result.success = BuddyManagementService_iface_.getBlockerCountByBuddyMid(args.buddyMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getBlockerCountByBuddyMid", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getBlockerCountByBuddyMid");
        oprot.writeMessageBegin(new TMessage("getBlockerCountByBuddyMid", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getBlockerCountByBuddyMid", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getBuddyDetailByMid() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetBuddyDetailByMid_args = new GetBuddyDetailByMid_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetBuddyDetailByMid_result = new GetBuddyDetailByMid_result();
      try {
        result.success = BuddyManagementService_iface_.getBuddyDetailByMid(args.buddyMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getBuddyDetailByMid", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getBuddyDetailByMid");
        oprot.writeMessageBegin(new TMessage("getBuddyDetailByMid", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getBuddyDetailByMid", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getBuddyProfile() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetBuddyProfile_args = new GetBuddyProfile_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetBuddyProfile_result = new GetBuddyProfile_result();
      try {
        result.success = BuddyManagementService_iface_.getBuddyProfile();
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getBuddyProfile", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getBuddyProfile");
        oprot.writeMessageBegin(new TMessage("getBuddyProfile", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getBuddyProfile", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getContactTicket() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetContactTicket_args = new GetContactTicket_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetContactTicket_result = new GetContactTicket_result();
      try {
        result.success = BuddyManagementService_iface_.getContactTicket();
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getContactTicket", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getContactTicket");
        oprot.writeMessageBegin(new TMessage("getContactTicket", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getContactTicket", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getMemberCountByBuddyMid() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetMemberCountByBuddyMid_args = new GetMemberCountByBuddyMid_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetMemberCountByBuddyMid_result = new GetMemberCountByBuddyMid_result();
      try {
        result.success = BuddyManagementService_iface_.getMemberCountByBuddyMid(args.buddyMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getMemberCountByBuddyMid", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getMemberCountByBuddyMid");
        oprot.writeMessageBegin(new TMessage("getMemberCountByBuddyMid", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getMemberCountByBuddyMid", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSendBuddyMessageResult() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSendBuddyMessageResult_args = new GetSendBuddyMessageResult_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSendBuddyMessageResult_result = new GetSendBuddyMessageResult_result();
      try {
        result.success = BuddyManagementService_iface_.getSendBuddyMessageResult(args.sendBuddyMessageRequestId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSendBuddyMessageResult", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSendBuddyMessageResult");
        oprot.writeMessageBegin(new TMessage("getSendBuddyMessageResult", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSendBuddyMessageResult", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSetBuddyOnAirResult() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSetBuddyOnAirResult_args = new GetSetBuddyOnAirResult_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSetBuddyOnAirResult_result = new GetSetBuddyOnAirResult_result();
      try {
        result.success = BuddyManagementService_iface_.getSetBuddyOnAirResult(args.setBuddyOnAirRequestId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSetBuddyOnAirResult", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSetBuddyOnAirResult");
        oprot.writeMessageBegin(new TMessage("getSetBuddyOnAirResult", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSetBuddyOnAirResult", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getUpdateBuddyProfileResult() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetUpdateBuddyProfileResult_args = new GetUpdateBuddyProfileResult_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetUpdateBuddyProfileResult_result = new GetUpdateBuddyProfileResult_result();
      try {
        result.success = BuddyManagementService_iface_.getUpdateBuddyProfileResult(args.updateBuddyProfileRequestId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getUpdateBuddyProfileResult", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getUpdateBuddyProfileResult");
        oprot.writeMessageBegin(new TMessage("getUpdateBuddyProfileResult", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getUpdateBuddyProfileResult", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function isBuddyOnAirByMid() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : IsBuddyOnAirByMid_args = new IsBuddyOnAirByMid_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : IsBuddyOnAirByMid_result = new IsBuddyOnAirByMid_result();
      try {
        result.success = BuddyManagementService_iface_.isBuddyOnAirByMid(args.buddyMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing isBuddyOnAirByMid", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing isBuddyOnAirByMid");
        oprot.writeMessageBegin(new TMessage("isBuddyOnAirByMid", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("isBuddyOnAirByMid", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function linkAndSendBuddyContentMessageToAllAsync() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : LinkAndSendBuddyContentMessageToAllAsync_args = new LinkAndSendBuddyContentMessageToAllAsync_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : LinkAndSendBuddyContentMessageToAllAsync_result = new LinkAndSendBuddyContentMessageToAllAsync_result();
      try {
        result.success = BuddyManagementService_iface_.linkAndSendBuddyContentMessageToAllAsync(args.requestId, args.msg, args.sourceContentId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing linkAndSendBuddyContentMessageToAllAsync", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing linkAndSendBuddyContentMessageToAllAsync");
        oprot.writeMessageBegin(new TMessage("linkAndSendBuddyContentMessageToAllAsync", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("linkAndSendBuddyContentMessageToAllAsync", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function linkAndSendBuddyContentMessageToMids() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : LinkAndSendBuddyContentMessageToMids_args = new LinkAndSendBuddyContentMessageToMids_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : LinkAndSendBuddyContentMessageToMids_result = new LinkAndSendBuddyContentMessageToMids_result();
      try {
        result.success = BuddyManagementService_iface_.linkAndSendBuddyContentMessageToMids(args.requestId, args.msg, args.sourceContentId, args.mids);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing linkAndSendBuddyContentMessageToMids", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing linkAndSendBuddyContentMessageToMids");
        oprot.writeMessageBegin(new TMessage("linkAndSendBuddyContentMessageToMids", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("linkAndSendBuddyContentMessageToMids", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function notifyBuddyBlocked() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : NotifyBuddyBlocked_args = new NotifyBuddyBlocked_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : NotifyBuddyBlocked_result = new NotifyBuddyBlocked_result();
      try {
        BuddyManagementService_iface_.notifyBuddyBlocked(args.buddyMid, args.blockerMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing notifyBuddyBlocked", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing notifyBuddyBlocked");
        oprot.writeMessageBegin(new TMessage("notifyBuddyBlocked", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("notifyBuddyBlocked", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function notifyBuddyUnblocked() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : NotifyBuddyUnblocked_args = new NotifyBuddyUnblocked_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : NotifyBuddyUnblocked_result = new NotifyBuddyUnblocked_result();
      try {
        BuddyManagementService_iface_.notifyBuddyUnblocked(args.buddyMid, args.blockerMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing notifyBuddyUnblocked", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing notifyBuddyUnblocked");
        oprot.writeMessageBegin(new TMessage("notifyBuddyUnblocked", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("notifyBuddyUnblocked", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function registerBuddy() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : RegisterBuddy_args = new RegisterBuddy_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : RegisterBuddy_result = new RegisterBuddy_result();
      try {
        result.success = BuddyManagementService_iface_.registerBuddy(args.buddyId, args.searchId, args.displayName, args.statusMeessage, args.picture, args.settings);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing registerBuddy", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing registerBuddy");
        oprot.writeMessageBegin(new TMessage("registerBuddy", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("registerBuddy", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function registerBuddyAdmin() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : RegisterBuddyAdmin_args = new RegisterBuddyAdmin_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : RegisterBuddyAdmin_result = new RegisterBuddyAdmin_result();
      try {
        result.success = BuddyManagementService_iface_.registerBuddyAdmin(args.buddyId, args.searchId, args.displayName, args.statusMessage, args.picture);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing registerBuddyAdmin", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing registerBuddyAdmin");
        oprot.writeMessageBegin(new TMessage("registerBuddyAdmin", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("registerBuddyAdmin", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function reissueContactTicket() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : ReissueContactTicket_args = new ReissueContactTicket_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : ReissueContactTicket_result = new ReissueContactTicket_result();
      try {
        result.success = BuddyManagementService_iface_.reissueContactTicket(args.expirationTime, args.maxUseCount);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing reissueContactTicket", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing reissueContactTicket");
        oprot.writeMessageBegin(new TMessage("reissueContactTicket", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("reissueContactTicket", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function removeBuddyMember() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : RemoveBuddyMember_args = new RemoveBuddyMember_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : RemoveBuddyMember_result = new RemoveBuddyMember_result();
      try {
        BuddyManagementService_iface_.removeBuddyMember(args.requestId, args.userMid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing removeBuddyMember", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing removeBuddyMember");
        oprot.writeMessageBegin(new TMessage("removeBuddyMember", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("removeBuddyMember", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function removeBuddyMembers() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : RemoveBuddyMembers_args = new RemoveBuddyMembers_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : RemoveBuddyMembers_result = new RemoveBuddyMembers_result();
      try {
        BuddyManagementService_iface_.removeBuddyMembers(args.requestId, args.userMids);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing removeBuddyMembers", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing removeBuddyMembers");
        oprot.writeMessageBegin(new TMessage("removeBuddyMembers", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("removeBuddyMembers", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function sendBuddyContentMessageToAll() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SendBuddyContentMessageToAll_args = new SendBuddyContentMessageToAll_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SendBuddyContentMessageToAll_result = new SendBuddyContentMessageToAll_result();
      try {
        result.success = BuddyManagementService_iface_.sendBuddyContentMessageToAll(args.requestId, args.msg, args.content);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing sendBuddyContentMessageToAll", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing sendBuddyContentMessageToAll");
        oprot.writeMessageBegin(new TMessage("sendBuddyContentMessageToAll", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("sendBuddyContentMessageToAll", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function sendBuddyContentMessageToAllAsync() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SendBuddyContentMessageToAllAsync_args = new SendBuddyContentMessageToAllAsync_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SendBuddyContentMessageToAllAsync_result = new SendBuddyContentMessageToAllAsync_result();
      try {
        result.success = BuddyManagementService_iface_.sendBuddyContentMessageToAllAsync(args.requestId, args.msg, args.content);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing sendBuddyContentMessageToAllAsync", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing sendBuddyContentMessageToAllAsync");
        oprot.writeMessageBegin(new TMessage("sendBuddyContentMessageToAllAsync", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("sendBuddyContentMessageToAllAsync", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function sendBuddyContentMessageToMids() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SendBuddyContentMessageToMids_args = new SendBuddyContentMessageToMids_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SendBuddyContentMessageToMids_result = new SendBuddyContentMessageToMids_result();
      try {
        result.success = BuddyManagementService_iface_.sendBuddyContentMessageToMids(args.requestId, args.msg, args.content, args.mids);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing sendBuddyContentMessageToMids", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing sendBuddyContentMessageToMids");
        oprot.writeMessageBegin(new TMessage("sendBuddyContentMessageToMids", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("sendBuddyContentMessageToMids", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function sendBuddyContentMessageToMidsAsync() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SendBuddyContentMessageToMidsAsync_args = new SendBuddyContentMessageToMidsAsync_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SendBuddyContentMessageToMidsAsync_result = new SendBuddyContentMessageToMidsAsync_result();
      try {
        result.success = BuddyManagementService_iface_.sendBuddyContentMessageToMidsAsync(args.requestId, args.msg, args.content, args.mids);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing sendBuddyContentMessageToMidsAsync", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing sendBuddyContentMessageToMidsAsync");
        oprot.writeMessageBegin(new TMessage("sendBuddyContentMessageToMidsAsync", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("sendBuddyContentMessageToMidsAsync", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function sendBuddyMessageToAll() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SendBuddyMessageToAll_args = new SendBuddyMessageToAll_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SendBuddyMessageToAll_result = new SendBuddyMessageToAll_result();
      try {
        result.success = BuddyManagementService_iface_.sendBuddyMessageToAll(args.requestId, args.msg);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing sendBuddyMessageToAll", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing sendBuddyMessageToAll");
        oprot.writeMessageBegin(new TMessage("sendBuddyMessageToAll", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("sendBuddyMessageToAll", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function sendBuddyMessageToAllAsync() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SendBuddyMessageToAllAsync_args = new SendBuddyMessageToAllAsync_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SendBuddyMessageToAllAsync_result = new SendBuddyMessageToAllAsync_result();
      try {
        result.success = BuddyManagementService_iface_.sendBuddyMessageToAllAsync(args.requestId, args.msg);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing sendBuddyMessageToAllAsync", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing sendBuddyMessageToAllAsync");
        oprot.writeMessageBegin(new TMessage("sendBuddyMessageToAllAsync", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("sendBuddyMessageToAllAsync", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function sendBuddyMessageToMids() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SendBuddyMessageToMids_args = new SendBuddyMessageToMids_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SendBuddyMessageToMids_result = new SendBuddyMessageToMids_result();
      try {
        result.success = BuddyManagementService_iface_.sendBuddyMessageToMids(args.requestId, args.msg, args.mids);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing sendBuddyMessageToMids", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing sendBuddyMessageToMids");
        oprot.writeMessageBegin(new TMessage("sendBuddyMessageToMids", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("sendBuddyMessageToMids", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function sendBuddyMessageToMidsAsync() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SendBuddyMessageToMidsAsync_args = new SendBuddyMessageToMidsAsync_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SendBuddyMessageToMidsAsync_result = new SendBuddyMessageToMidsAsync_result();
      try {
        result.success = BuddyManagementService_iface_.sendBuddyMessageToMidsAsync(args.requestId, args.msg, args.mids);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing sendBuddyMessageToMidsAsync", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing sendBuddyMessageToMidsAsync");
        oprot.writeMessageBegin(new TMessage("sendBuddyMessageToMidsAsync", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("sendBuddyMessageToMidsAsync", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function sendIndividualEventToAllAsync() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SendIndividualEventToAllAsync_args = new SendIndividualEventToAllAsync_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SendIndividualEventToAllAsync_result = new SendIndividualEventToAllAsync_result();
      try {
        BuddyManagementService_iface_.sendIndividualEventToAllAsync(args.requestId, args.buddyMid, args.notificationStatus);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing sendIndividualEventToAllAsync", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing sendIndividualEventToAllAsync");
        oprot.writeMessageBegin(new TMessage("sendIndividualEventToAllAsync", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("sendIndividualEventToAllAsync", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function setBuddyOnAir() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SetBuddyOnAir_args = new SetBuddyOnAir_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SetBuddyOnAir_result = new SetBuddyOnAir_result();
      try {
        result.success = BuddyManagementService_iface_.setBuddyOnAir(args.requestId, args.onAir);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing setBuddyOnAir", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing setBuddyOnAir");
        oprot.writeMessageBegin(new TMessage("setBuddyOnAir", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("setBuddyOnAir", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function setBuddyOnAirAsync() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SetBuddyOnAirAsync_args = new SetBuddyOnAirAsync_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SetBuddyOnAirAsync_result = new SetBuddyOnAirAsync_result();
      try {
        result.success = BuddyManagementService_iface_.setBuddyOnAirAsync(args.requestId, args.onAir);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing setBuddyOnAirAsync", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing setBuddyOnAirAsync");
        oprot.writeMessageBegin(new TMessage("setBuddyOnAirAsync", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("setBuddyOnAirAsync", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function storeMessage() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : StoreMessage_args = new StoreMessage_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : StoreMessage_result = new StoreMessage_result();
      try {
        result.success = BuddyManagementService_iface_.storeMessage(args.requestId, args.messageRequest);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing storeMessage", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing storeMessage");
        oprot.writeMessageBegin(new TMessage("storeMessage", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("storeMessage", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function unblockBuddyMember() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UnblockBuddyMember_args = new UnblockBuddyMember_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UnblockBuddyMember_result = new UnblockBuddyMember_result();
      try {
        BuddyManagementService_iface_.unblockBuddyMember(args.requestId, args.mid);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing unblockBuddyMember", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing unblockBuddyMember");
        oprot.writeMessageBegin(new TMessage("unblockBuddyMember", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("unblockBuddyMember", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function unregisterBuddy() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UnregisterBuddy_args = new UnregisterBuddy_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UnregisterBuddy_result = new UnregisterBuddy_result();
      try {
        BuddyManagementService_iface_.unregisterBuddy(args.requestId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing unregisterBuddy", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing unregisterBuddy");
        oprot.writeMessageBegin(new TMessage("unregisterBuddy", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("unregisterBuddy", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function unregisterBuddyAdmin() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UnregisterBuddyAdmin_args = new UnregisterBuddyAdmin_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UnregisterBuddyAdmin_result = new UnregisterBuddyAdmin_result();
      try {
        BuddyManagementService_iface_.unregisterBuddyAdmin(args.requestId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing unregisterBuddyAdmin", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing unregisterBuddyAdmin");
        oprot.writeMessageBegin(new TMessage("unregisterBuddyAdmin", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("unregisterBuddyAdmin", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateBuddyAdminProfileAttribute() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateBuddyAdminProfileAttribute_args = new UpdateBuddyAdminProfileAttribute_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateBuddyAdminProfileAttribute_result = new UpdateBuddyAdminProfileAttribute_result();
      try {
        BuddyManagementService_iface_.updateBuddyAdminProfileAttribute(args.requestId, args.attributes);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateBuddyAdminProfileAttribute", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateBuddyAdminProfileAttribute");
        oprot.writeMessageBegin(new TMessage("updateBuddyAdminProfileAttribute", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateBuddyAdminProfileAttribute", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateBuddyAdminProfileImage() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateBuddyAdminProfileImage_args = new UpdateBuddyAdminProfileImage_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateBuddyAdminProfileImage_result = new UpdateBuddyAdminProfileImage_result();
      try {
        BuddyManagementService_iface_.updateBuddyAdminProfileImage(args.requestId, args.picture);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateBuddyAdminProfileImage", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateBuddyAdminProfileImage");
        oprot.writeMessageBegin(new TMessage("updateBuddyAdminProfileImage", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateBuddyAdminProfileImage", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateBuddyProfileAttributes() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateBuddyProfileAttributes_args = new UpdateBuddyProfileAttributes_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateBuddyProfileAttributes_result = new UpdateBuddyProfileAttributes_result();
      try {
        result.success = BuddyManagementService_iface_.updateBuddyProfileAttributes(args.requestId, args.attributes);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateBuddyProfileAttributes", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateBuddyProfileAttributes");
        oprot.writeMessageBegin(new TMessage("updateBuddyProfileAttributes", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateBuddyProfileAttributes", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateBuddyProfileAttributesAsync() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateBuddyProfileAttributesAsync_args = new UpdateBuddyProfileAttributesAsync_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateBuddyProfileAttributesAsync_result = new UpdateBuddyProfileAttributesAsync_result();
      try {
        result.success = BuddyManagementService_iface_.updateBuddyProfileAttributesAsync(args.requestId, args.attributes);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateBuddyProfileAttributesAsync", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateBuddyProfileAttributesAsync");
        oprot.writeMessageBegin(new TMessage("updateBuddyProfileAttributesAsync", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateBuddyProfileAttributesAsync", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateBuddyProfileImage() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateBuddyProfileImage_args = new UpdateBuddyProfileImage_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateBuddyProfileImage_result = new UpdateBuddyProfileImage_result();
      try {
        result.success = BuddyManagementService_iface_.updateBuddyProfileImage(args.requestId, args.image);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateBuddyProfileImage", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateBuddyProfileImage");
        oprot.writeMessageBegin(new TMessage("updateBuddyProfileImage", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateBuddyProfileImage", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateBuddyProfileImageAsync() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateBuddyProfileImageAsync_args = new UpdateBuddyProfileImageAsync_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateBuddyProfileImageAsync_result = new UpdateBuddyProfileImageAsync_result();
      try {
        result.success = BuddyManagementService_iface_.updateBuddyProfileImageAsync(args.requestId, args.image);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateBuddyProfileImageAsync", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateBuddyProfileImageAsync");
        oprot.writeMessageBegin(new TMessage("updateBuddyProfileImageAsync", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateBuddyProfileImageAsync", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateBuddySearchId() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateBuddySearchId_args = new UpdateBuddySearchId_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateBuddySearchId_result = new UpdateBuddySearchId_result();
      try {
        BuddyManagementService_iface_.updateBuddySearchId(args.requestId, args.searchId);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateBuddySearchId", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateBuddySearchId");
        oprot.writeMessageBegin(new TMessage("updateBuddySearchId", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateBuddySearchId", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateBuddySettings() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateBuddySettings_args = new UpdateBuddySettings_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateBuddySettings_result = new UpdateBuddySettings_result();
      try {
        BuddyManagementService_iface_.updateBuddySettings(args.settings);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateBuddySettings", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateBuddySettings");
        oprot.writeMessageBegin(new TMessage("updateBuddySettings", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateBuddySettings", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function uploadBuddyContent() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UploadBuddyContent_args = new UploadBuddyContent_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UploadBuddyContent_result = new UploadBuddyContent_result();
      try {
        result.success = BuddyManagementService_iface_.uploadBuddyContent(args.contentType, args.content);
      } catch (e:TalkException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing uploadBuddyContent", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing uploadBuddyContent");
        oprot.writeMessageBegin(new TMessage("uploadBuddyContent", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("uploadBuddyContent", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

}

