/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;



class BuddyServiceImpl implements BuddyService {

  public function new( iprot : TProtocol, oprot : TProtocol = null)
  {
    iprot_ = iprot;
    if (oprot == null) {
      oprot_ = iprot;
    } else {
      oprot_ = oprot;
    }
  }

  private var iprot_ : TProtocol;
  private var oprot_ : TProtocol;
  private var seqid_ : Int;

  public function getInputProtocol() : TProtocol
  {
    return this.iprot_;
  }

  public function getOutputProtocol() : TProtocol
  {
    return this.oprot_;
  }

  public function findBuddyContactsByQuery(language : String, country : String, query : String, fromIndex : haxe.Int32, count : haxe.Int32, requestSource : Int) : List< BuddySearchResult> {
    oprot_.writeMessageBegin(new TMessage("findBuddyContactsByQuery", TMessageType.CALL, seqid_));
    var args : FindBuddyContactsByQuery_args = new FindBuddyContactsByQuery_args();
    args.language = language;
    args.country = country;
    args.query = query;
    args.fromIndex = fromIndex;
    args.count = count;
    args.requestSource = requestSource;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< BuddySearchResult>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : FindBuddyContactsByQuery_result = new FindBuddyContactsByQuery_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "findBuddyContactsByQuery failed: unknown result");
    });
    return retval;
  }

  public function getBuddyContacts(language : String, country : String, classification : String, fromIndex : haxe.Int32, count : haxe.Int32) : List< Contact> {
    oprot_.writeMessageBegin(new TMessage("getBuddyContacts", TMessageType.CALL, seqid_));
    var args : GetBuddyContacts_args = new GetBuddyContacts_args();
    args.language = language;
    args.country = country;
    args.classification = classification;
    args.fromIndex = fromIndex;
    args.count = count;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< Contact>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetBuddyContacts_result = new GetBuddyContacts_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getBuddyContacts failed: unknown result");
    });
    return retval;
  }

  public function getBuddyDetail(buddyMid : String) : BuddyDetail {
    oprot_.writeMessageBegin(new TMessage("getBuddyDetail", TMessageType.CALL, seqid_));
    var args : GetBuddyDetail_args = new GetBuddyDetail_args();
    args.buddyMid = buddyMid;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : BuddyDetail;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetBuddyDetail_result = new GetBuddyDetail_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getBuddyDetail failed: unknown result");
    });
    return retval;
  }

  public function getBuddyOnAir(buddyMid : String) : BuddyOnAir {
    oprot_.writeMessageBegin(new TMessage("getBuddyOnAir", TMessageType.CALL, seqid_));
    var args : GetBuddyOnAir_args = new GetBuddyOnAir_args();
    args.buddyMid = buddyMid;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : BuddyOnAir;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetBuddyOnAir_result = new GetBuddyOnAir_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getBuddyOnAir failed: unknown result");
    });
    return retval;
  }

  public function getCountriesHavingBuddy() : List< String> {
    oprot_.writeMessageBegin(new TMessage("getCountriesHavingBuddy", TMessageType.CALL, seqid_));
    var args : GetCountriesHavingBuddy_args = new GetCountriesHavingBuddy_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetCountriesHavingBuddy_result = new GetCountriesHavingBuddy_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getCountriesHavingBuddy failed: unknown result");
    });
    return retval;
  }

  public function getNewlyReleasedBuddyIds(country : String) : StringMap< haxe.Int64> {
    oprot_.writeMessageBegin(new TMessage("getNewlyReleasedBuddyIds", TMessageType.CALL, seqid_));
    var args : GetNewlyReleasedBuddyIds_args = new GetNewlyReleasedBuddyIds_args();
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : StringMap< haxe.Int64>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetNewlyReleasedBuddyIds_result = new GetNewlyReleasedBuddyIds_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getNewlyReleasedBuddyIds failed: unknown result");
    });
    return retval;
  }

  public function getPopularBuddyBanner(language : String, country : String, applicationType : Int, resourceSpecification : String) : BuddyBanner {
    oprot_.writeMessageBegin(new TMessage("getPopularBuddyBanner", TMessageType.CALL, seqid_));
    var args : GetPopularBuddyBanner_args = new GetPopularBuddyBanner_args();
    args.language = language;
    args.country = country;
    args.applicationType = applicationType;
    args.resourceSpecification = resourceSpecification;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : BuddyBanner;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPopularBuddyBanner_result = new GetPopularBuddyBanner_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPopularBuddyBanner failed: unknown result");
    });
    return retval;
  }

  public function getPopularBuddyLists(language : String, country : String) : List< BuddyList> {
    oprot_.writeMessageBegin(new TMessage("getPopularBuddyLists", TMessageType.CALL, seqid_));
    var args : GetPopularBuddyLists_args = new GetPopularBuddyLists_args();
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< BuddyList>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPopularBuddyLists_result = new GetPopularBuddyLists_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPopularBuddyLists failed: unknown result");
    });
    return retval;
  }

  public function getPromotedBuddyContacts(language : String, country : String) : List< Contact> {
    oprot_.writeMessageBegin(new TMessage("getPromotedBuddyContacts", TMessageType.CALL, seqid_));
    var args : GetPromotedBuddyContacts_args = new GetPromotedBuddyContacts_args();
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< Contact>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPromotedBuddyContacts_result = new GetPromotedBuddyContacts_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPromotedBuddyContacts failed: unknown result");
    });
    return retval;
  }

}
