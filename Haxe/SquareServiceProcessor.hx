/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;


class SquareServiceProcessor implements TProcessor {

  private var SquareService_iface_ : SquareService;
  private var PROCESS_MAP = new StringMap< Int->TProtocol->TProtocol->Void >();

  public function new( iface : SquareService)
  {
    SquareService_iface_ = iface;
    PROCESS_MAP.set("getSquareChatAnnouncements", getSquareChatAnnouncements());
    PROCESS_MAP.set("deleteSquareChatAnnouncement", deleteSquareChatAnnouncement());
    PROCESS_MAP.set("createSquareChatAnnouncement", createSquareChatAnnouncement());
    PROCESS_MAP.set("getNoteStatus", getNoteStatus());
    PROCESS_MAP.set("getSquareStatus", getSquareStatus());
    PROCESS_MAP.set("reportSquareMember", reportSquareMember());
    PROCESS_MAP.set("reportSquareMessage", reportSquareMessage());
    PROCESS_MAP.set("reportSquareChat", reportSquareChat());
    PROCESS_MAP.set("reportSquare", reportSquare());
    PROCESS_MAP.set("updateSquareMemberRelation", updateSquareMemberRelation());
    PROCESS_MAP.set("updateSquareAuthority", updateSquareAuthority());
    PROCESS_MAP.set("updateSquareChatMember", updateSquareChatMember());
    PROCESS_MAP.set("updateSquareChat", updateSquareChat());
    PROCESS_MAP.set("refreshSubscriptions", refreshSubscriptions());
    PROCESS_MAP.set("removeSubscriptions", removeSubscriptions());
    PROCESS_MAP.set("rejectSquareMembers", rejectSquareMembers());
    PROCESS_MAP.set("updateSquareMembers", updateSquareMembers());
    PROCESS_MAP.set("updateSquareMember", updateSquareMember());
    PROCESS_MAP.set("updateSquareFeatureSet", updateSquareFeatureSet());
    PROCESS_MAP.set("getSquareFeatureSet", getSquareFeatureSet());
    PROCESS_MAP.set("searchSquares", searchSquares());
    PROCESS_MAP.set("updateSquare", updateSquare());
    PROCESS_MAP.set("getCategories", getCategories());
    PROCESS_MAP.set("searchSquareMembers", searchSquareMembers());
    PROCESS_MAP.set("fetchSquareChatEvents", fetchSquareChatEvents());
    PROCESS_MAP.set("fetchMyEvents", fetchMyEvents());
    PROCESS_MAP.set("markAsRead", markAsRead());
    PROCESS_MAP.set("getSquareAuthority", getSquareAuthority());
    PROCESS_MAP.set("sendMessage", sendMessage());
    PROCESS_MAP.set("leaveSquare", leaveSquare());
    PROCESS_MAP.set("leaveSquareChat", leaveSquareChat());
    PROCESS_MAP.set("joinSquareChat", joinSquareChat());
    PROCESS_MAP.set("joinSquare", joinSquare());
    PROCESS_MAP.set("inviteToSquare", inviteToSquare());
    PROCESS_MAP.set("inviteToSquareChat", inviteToSquareChat());
    PROCESS_MAP.set("getSquareMember", getSquareMember());
    PROCESS_MAP.set("getSquareMembers", getSquareMembers());
    PROCESS_MAP.set("getSquareMemberRelation", getSquareMemberRelation());
    PROCESS_MAP.set("getSquareMemberRelations", getSquareMemberRelations());
    PROCESS_MAP.set("getSquareChatMembers", getSquareChatMembers());
    PROCESS_MAP.set("getSquareChatStatus", getSquareChatStatus());
    PROCESS_MAP.set("getSquareChat", getSquareChat());
    PROCESS_MAP.set("getSquare", getSquare());
    PROCESS_MAP.set("getJoinedSquares", getJoinedSquares());
    PROCESS_MAP.set("getJoinedSquareChats", getJoinedSquareChats());
    PROCESS_MAP.set("approveSquareMembers", approveSquareMembers());
    PROCESS_MAP.set("createSquareChat", createSquareChat());
    PROCESS_MAP.set("createSquare", createSquare());
    PROCESS_MAP.set("deleteSquareChat", deleteSquareChat());
    PROCESS_MAP.set("deleteSquare", deleteSquare());
    PROCESS_MAP.set("destroyMessage", destroyMessage());
    PROCESS_MAP.set("getJoinableSquareChats", getJoinableSquareChats());
    PROCESS_MAP.set("getInvitationTicketUrl", getInvitationTicketUrl());
    PROCESS_MAP.set("findSquareByInvitationTicket", findSquareByInvitationTicket());
  }

  public function process( iprot : TProtocol, oprot : TProtocol) : Bool
  {
    var msg : TMessage = iprot.readMessageBegin();
    var fn  = PROCESS_MAP.get(msg.name);
    if (fn == null) {
      TProtocolUtil.skip(iprot, TType.STRUCT);
      iprot.readMessageEnd();
      var x = new TApplicationException(TApplicationException.UNKNOWN_METHOD, "Invalid method name: '"+msg.name+"'");
      oprot.writeMessageBegin(new TMessage(msg.name, TMessageType.EXCEPTION, msg.seqid));
      x.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
      return true;
    }
    fn( msg.seqid, iprot, oprot);
    return true;
  }

  private function getSquareChatAnnouncements() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareChatAnnouncements_args = new GetSquareChatAnnouncements_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareChatAnnouncements_result = new GetSquareChatAnnouncements_result();
      try {
        result.success = SquareService_iface_.getSquareChatAnnouncements(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareChatAnnouncements", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareChatAnnouncements");
        oprot.writeMessageBegin(new TMessage("getSquareChatAnnouncements", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareChatAnnouncements", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function deleteSquareChatAnnouncement() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : DeleteSquareChatAnnouncement_args = new DeleteSquareChatAnnouncement_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : DeleteSquareChatAnnouncement_result = new DeleteSquareChatAnnouncement_result();
      try {
        result.success = SquareService_iface_.deleteSquareChatAnnouncement(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing deleteSquareChatAnnouncement", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing deleteSquareChatAnnouncement");
        oprot.writeMessageBegin(new TMessage("deleteSquareChatAnnouncement", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("deleteSquareChatAnnouncement", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function createSquareChatAnnouncement() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : CreateSquareChatAnnouncement_args = new CreateSquareChatAnnouncement_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : CreateSquareChatAnnouncement_result = new CreateSquareChatAnnouncement_result();
      try {
        result.success = SquareService_iface_.createSquareChatAnnouncement(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing createSquareChatAnnouncement", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing createSquareChatAnnouncement");
        oprot.writeMessageBegin(new TMessage("createSquareChatAnnouncement", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("createSquareChatAnnouncement", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getNoteStatus() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetNoteStatus_args = new GetNoteStatus_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetNoteStatus_result = new GetNoteStatus_result();
      try {
        result.success = SquareService_iface_.getNoteStatus(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getNoteStatus", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getNoteStatus");
        oprot.writeMessageBegin(new TMessage("getNoteStatus", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getNoteStatus", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquareStatus() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareStatus_args = new GetSquareStatus_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareStatus_result = new GetSquareStatus_result();
      try {
        result.success = SquareService_iface_.getSquareStatus(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareStatus", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareStatus");
        oprot.writeMessageBegin(new TMessage("getSquareStatus", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareStatus", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function reportSquareMember() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : ReportSquareMember_args = new ReportSquareMember_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : ReportSquareMember_result = new ReportSquareMember_result();
      try {
        result.success = SquareService_iface_.reportSquareMember(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing reportSquareMember", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing reportSquareMember");
        oprot.writeMessageBegin(new TMessage("reportSquareMember", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("reportSquareMember", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function reportSquareMessage() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : ReportSquareMessage_args = new ReportSquareMessage_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : ReportSquareMessage_result = new ReportSquareMessage_result();
      try {
        result.success = SquareService_iface_.reportSquareMessage(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing reportSquareMessage", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing reportSquareMessage");
        oprot.writeMessageBegin(new TMessage("reportSquareMessage", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("reportSquareMessage", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function reportSquareChat() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : ReportSquareChat_args = new ReportSquareChat_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : ReportSquareChat_result = new ReportSquareChat_result();
      try {
        result.success = SquareService_iface_.reportSquareChat(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing reportSquareChat", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing reportSquareChat");
        oprot.writeMessageBegin(new TMessage("reportSquareChat", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("reportSquareChat", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function reportSquare() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : ReportSquare_args = new ReportSquare_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : ReportSquare_result = new ReportSquare_result();
      try {
        result.success = SquareService_iface_.reportSquare(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing reportSquare", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing reportSquare");
        oprot.writeMessageBegin(new TMessage("reportSquare", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("reportSquare", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateSquareMemberRelation() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateSquareMemberRelation_args = new UpdateSquareMemberRelation_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateSquareMemberRelation_result = new UpdateSquareMemberRelation_result();
      try {
        result.success = SquareService_iface_.updateSquareMemberRelation(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateSquareMemberRelation", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateSquareMemberRelation");
        oprot.writeMessageBegin(new TMessage("updateSquareMemberRelation", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateSquareMemberRelation", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateSquareAuthority() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateSquareAuthority_args = new UpdateSquareAuthority_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateSquareAuthority_result = new UpdateSquareAuthority_result();
      try {
        result.success = SquareService_iface_.updateSquareAuthority(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateSquareAuthority", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateSquareAuthority");
        oprot.writeMessageBegin(new TMessage("updateSquareAuthority", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateSquareAuthority", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateSquareChatMember() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateSquareChatMember_args = new UpdateSquareChatMember_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateSquareChatMember_result = new UpdateSquareChatMember_result();
      try {
        result.success = SquareService_iface_.updateSquareChatMember(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateSquareChatMember", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateSquareChatMember");
        oprot.writeMessageBegin(new TMessage("updateSquareChatMember", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateSquareChatMember", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateSquareChat() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateSquareChat_args = new UpdateSquareChat_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateSquareChat_result = new UpdateSquareChat_result();
      try {
        result.success = SquareService_iface_.updateSquareChat(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateSquareChat", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateSquareChat");
        oprot.writeMessageBegin(new TMessage("updateSquareChat", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateSquareChat", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function refreshSubscriptions() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : RefreshSubscriptions_args = new RefreshSubscriptions_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : RefreshSubscriptions_result = new RefreshSubscriptions_result();
      try {
        result.success = SquareService_iface_.refreshSubscriptions(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing refreshSubscriptions", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing refreshSubscriptions");
        oprot.writeMessageBegin(new TMessage("refreshSubscriptions", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("refreshSubscriptions", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function removeSubscriptions() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : RemoveSubscriptions_args = new RemoveSubscriptions_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : RemoveSubscriptions_result = new RemoveSubscriptions_result();
      try {
        result.success = SquareService_iface_.removeSubscriptions(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing removeSubscriptions", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing removeSubscriptions");
        oprot.writeMessageBegin(new TMessage("removeSubscriptions", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("removeSubscriptions", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function rejectSquareMembers() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : RejectSquareMembers_args = new RejectSquareMembers_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : RejectSquareMembers_result = new RejectSquareMembers_result();
      try {
        result.success = SquareService_iface_.rejectSquareMembers(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing rejectSquareMembers", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing rejectSquareMembers");
        oprot.writeMessageBegin(new TMessage("rejectSquareMembers", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("rejectSquareMembers", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateSquareMembers() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateSquareMembers_args = new UpdateSquareMembers_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateSquareMembers_result = new UpdateSquareMembers_result();
      try {
        result.success = SquareService_iface_.updateSquareMembers(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateSquareMembers", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateSquareMembers");
        oprot.writeMessageBegin(new TMessage("updateSquareMembers", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateSquareMembers", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateSquareMember() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateSquareMember_args = new UpdateSquareMember_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateSquareMember_result = new UpdateSquareMember_result();
      try {
        result.success = SquareService_iface_.updateSquareMember(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateSquareMember", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateSquareMember");
        oprot.writeMessageBegin(new TMessage("updateSquareMember", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateSquareMember", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateSquareFeatureSet() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateSquareFeatureSet_args = new UpdateSquareFeatureSet_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateSquareFeatureSet_result = new UpdateSquareFeatureSet_result();
      try {
        result.success = SquareService_iface_.updateSquareFeatureSet(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateSquareFeatureSet", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateSquareFeatureSet");
        oprot.writeMessageBegin(new TMessage("updateSquareFeatureSet", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateSquareFeatureSet", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquareFeatureSet() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareFeatureSet_args = new GetSquareFeatureSet_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareFeatureSet_result = new GetSquareFeatureSet_result();
      try {
        result.success = SquareService_iface_.getSquareFeatureSet(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareFeatureSet", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareFeatureSet");
        oprot.writeMessageBegin(new TMessage("getSquareFeatureSet", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareFeatureSet", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function searchSquares() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SearchSquares_args = new SearchSquares_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SearchSquares_result = new SearchSquares_result();
      try {
        result.success = SquareService_iface_.searchSquares(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing searchSquares", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing searchSquares");
        oprot.writeMessageBegin(new TMessage("searchSquares", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("searchSquares", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function updateSquare() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : UpdateSquare_args = new UpdateSquare_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : UpdateSquare_result = new UpdateSquare_result();
      try {
        result.success = SquareService_iface_.updateSquare(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing updateSquare", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing updateSquare");
        oprot.writeMessageBegin(new TMessage("updateSquare", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("updateSquare", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getCategories() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetCategories_args = new GetCategories_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetCategories_result = new GetCategories_result();
      try {
        result.success = SquareService_iface_.getCategories(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getCategories", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getCategories");
        oprot.writeMessageBegin(new TMessage("getCategories", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getCategories", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function searchSquareMembers() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SearchSquareMembers_args = new SearchSquareMembers_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SearchSquareMembers_result = new SearchSquareMembers_result();
      try {
        result.success = SquareService_iface_.searchSquareMembers(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing searchSquareMembers", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing searchSquareMembers");
        oprot.writeMessageBegin(new TMessage("searchSquareMembers", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("searchSquareMembers", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function fetchSquareChatEvents() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : FetchSquareChatEvents_args = new FetchSquareChatEvents_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : FetchSquareChatEvents_result = new FetchSquareChatEvents_result();
      try {
        result.success = SquareService_iface_.fetchSquareChatEvents(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing fetchSquareChatEvents", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing fetchSquareChatEvents");
        oprot.writeMessageBegin(new TMessage("fetchSquareChatEvents", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("fetchSquareChatEvents", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function fetchMyEvents() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : FetchMyEvents_args = new FetchMyEvents_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : FetchMyEvents_result = new FetchMyEvents_result();
      try {
        result.success = SquareService_iface_.fetchMyEvents(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing fetchMyEvents", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing fetchMyEvents");
        oprot.writeMessageBegin(new TMessage("fetchMyEvents", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("fetchMyEvents", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function markAsRead() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : MarkAsRead_args = new MarkAsRead_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : MarkAsRead_result = new MarkAsRead_result();
      try {
        result.success = SquareService_iface_.markAsRead(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing markAsRead", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing markAsRead");
        oprot.writeMessageBegin(new TMessage("markAsRead", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("markAsRead", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquareAuthority() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareAuthority_args = new GetSquareAuthority_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareAuthority_result = new GetSquareAuthority_result();
      try {
        result.success = SquareService_iface_.getSquareAuthority(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareAuthority", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareAuthority");
        oprot.writeMessageBegin(new TMessage("getSquareAuthority", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareAuthority", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function sendMessage() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : SendMessage_args = new SendMessage_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : SendMessage_result = new SendMessage_result();
      try {
        result.success = SquareService_iface_.sendMessage(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing sendMessage", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing sendMessage");
        oprot.writeMessageBegin(new TMessage("sendMessage", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("sendMessage", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function leaveSquare() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : LeaveSquare_args = new LeaveSquare_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : LeaveSquare_result = new LeaveSquare_result();
      try {
        result.success = SquareService_iface_.leaveSquare(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing leaveSquare", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing leaveSquare");
        oprot.writeMessageBegin(new TMessage("leaveSquare", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("leaveSquare", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function leaveSquareChat() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : LeaveSquareChat_args = new LeaveSquareChat_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : LeaveSquareChat_result = new LeaveSquareChat_result();
      try {
        result.success = SquareService_iface_.leaveSquareChat(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing leaveSquareChat", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing leaveSquareChat");
        oprot.writeMessageBegin(new TMessage("leaveSquareChat", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("leaveSquareChat", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function joinSquareChat() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : JoinSquareChat_args = new JoinSquareChat_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : JoinSquareChat_result = new JoinSquareChat_result();
      try {
        result.success = SquareService_iface_.joinSquareChat(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing joinSquareChat", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing joinSquareChat");
        oprot.writeMessageBegin(new TMessage("joinSquareChat", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("joinSquareChat", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function joinSquare() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : JoinSquare_args = new JoinSquare_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : JoinSquare_result = new JoinSquare_result();
      try {
        result.success = SquareService_iface_.joinSquare(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing joinSquare", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing joinSquare");
        oprot.writeMessageBegin(new TMessage("joinSquare", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("joinSquare", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function inviteToSquare() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : InviteToSquare_args = new InviteToSquare_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : InviteToSquare_result = new InviteToSquare_result();
      try {
        result.success = SquareService_iface_.inviteToSquare(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing inviteToSquare", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing inviteToSquare");
        oprot.writeMessageBegin(new TMessage("inviteToSquare", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("inviteToSquare", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function inviteToSquareChat() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : InviteToSquareChat_args = new InviteToSquareChat_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : InviteToSquareChat_result = new InviteToSquareChat_result();
      try {
        result.success = SquareService_iface_.inviteToSquareChat(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing inviteToSquareChat", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing inviteToSquareChat");
        oprot.writeMessageBegin(new TMessage("inviteToSquareChat", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("inviteToSquareChat", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquareMember() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareMember_args = new GetSquareMember_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareMember_result = new GetSquareMember_result();
      try {
        result.success = SquareService_iface_.getSquareMember(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareMember", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareMember");
        oprot.writeMessageBegin(new TMessage("getSquareMember", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareMember", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquareMembers() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareMembers_args = new GetSquareMembers_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareMembers_result = new GetSquareMembers_result();
      try {
        result.success = SquareService_iface_.getSquareMembers(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareMembers", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareMembers");
        oprot.writeMessageBegin(new TMessage("getSquareMembers", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareMembers", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquareMemberRelation() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareMemberRelation_args = new GetSquareMemberRelation_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareMemberRelation_result = new GetSquareMemberRelation_result();
      try {
        result.success = SquareService_iface_.getSquareMemberRelation(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareMemberRelation", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareMemberRelation");
        oprot.writeMessageBegin(new TMessage("getSquareMemberRelation", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareMemberRelation", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquareMemberRelations() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareMemberRelations_args = new GetSquareMemberRelations_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareMemberRelations_result = new GetSquareMemberRelations_result();
      try {
        result.success = SquareService_iface_.getSquareMemberRelations(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareMemberRelations", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareMemberRelations");
        oprot.writeMessageBegin(new TMessage("getSquareMemberRelations", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareMemberRelations", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquareChatMembers() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareChatMembers_args = new GetSquareChatMembers_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareChatMembers_result = new GetSquareChatMembers_result();
      try {
        result.success = SquareService_iface_.getSquareChatMembers(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareChatMembers", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareChatMembers");
        oprot.writeMessageBegin(new TMessage("getSquareChatMembers", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareChatMembers", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquareChatStatus() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareChatStatus_args = new GetSquareChatStatus_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareChatStatus_result = new GetSquareChatStatus_result();
      try {
        result.success = SquareService_iface_.getSquareChatStatus(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareChatStatus", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareChatStatus");
        oprot.writeMessageBegin(new TMessage("getSquareChatStatus", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareChatStatus", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquareChat() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquareChat_args = new GetSquareChat_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquareChat_result = new GetSquareChat_result();
      try {
        result.success = SquareService_iface_.getSquareChat(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquareChat", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquareChat");
        oprot.writeMessageBegin(new TMessage("getSquareChat", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquareChat", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getSquare() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetSquare_args = new GetSquare_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetSquare_result = new GetSquare_result();
      try {
        result.success = SquareService_iface_.getSquare(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getSquare", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getSquare");
        oprot.writeMessageBegin(new TMessage("getSquare", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getSquare", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getJoinedSquares() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetJoinedSquares_args = new GetJoinedSquares_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetJoinedSquares_result = new GetJoinedSquares_result();
      try {
        result.success = SquareService_iface_.getJoinedSquares(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getJoinedSquares", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getJoinedSquares");
        oprot.writeMessageBegin(new TMessage("getJoinedSquares", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getJoinedSquares", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getJoinedSquareChats() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetJoinedSquareChats_args = new GetJoinedSquareChats_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetJoinedSquareChats_result = new GetJoinedSquareChats_result();
      try {
        result.success = SquareService_iface_.getJoinedSquareChats(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getJoinedSquareChats", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getJoinedSquareChats");
        oprot.writeMessageBegin(new TMessage("getJoinedSquareChats", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getJoinedSquareChats", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function approveSquareMembers() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : ApproveSquareMembers_args = new ApproveSquareMembers_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : ApproveSquareMembers_result = new ApproveSquareMembers_result();
      try {
        result.success = SquareService_iface_.approveSquareMembers(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing approveSquareMembers", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing approveSquareMembers");
        oprot.writeMessageBegin(new TMessage("approveSquareMembers", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("approveSquareMembers", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function createSquareChat() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : CreateSquareChat_args = new CreateSquareChat_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : CreateSquareChat_result = new CreateSquareChat_result();
      try {
        result.success = SquareService_iface_.createSquareChat(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing createSquareChat", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing createSquareChat");
        oprot.writeMessageBegin(new TMessage("createSquareChat", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("createSquareChat", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function createSquare() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : CreateSquare_args = new CreateSquare_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : CreateSquare_result = new CreateSquare_result();
      try {
        result.success = SquareService_iface_.createSquare(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing createSquare", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing createSquare");
        oprot.writeMessageBegin(new TMessage("createSquare", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("createSquare", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function deleteSquareChat() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : DeleteSquareChat_args = new DeleteSquareChat_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : DeleteSquareChat_result = new DeleteSquareChat_result();
      try {
        result.success = SquareService_iface_.deleteSquareChat(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing deleteSquareChat", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing deleteSquareChat");
        oprot.writeMessageBegin(new TMessage("deleteSquareChat", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("deleteSquareChat", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function deleteSquare() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : DeleteSquare_args = new DeleteSquare_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : DeleteSquare_result = new DeleteSquare_result();
      try {
        result.success = SquareService_iface_.deleteSquare(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing deleteSquare", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing deleteSquare");
        oprot.writeMessageBegin(new TMessage("deleteSquare", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("deleteSquare", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function destroyMessage() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : DestroyMessage_args = new DestroyMessage_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : DestroyMessage_result = new DestroyMessage_result();
      try {
        result.success = SquareService_iface_.destroyMessage(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing destroyMessage", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing destroyMessage");
        oprot.writeMessageBegin(new TMessage("destroyMessage", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("destroyMessage", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getJoinableSquareChats() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetJoinableSquareChats_args = new GetJoinableSquareChats_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetJoinableSquareChats_result = new GetJoinableSquareChats_result();
      try {
        result.success = SquareService_iface_.getJoinableSquareChats(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getJoinableSquareChats", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getJoinableSquareChats");
        oprot.writeMessageBegin(new TMessage("getJoinableSquareChats", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getJoinableSquareChats", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function getInvitationTicketUrl() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : GetInvitationTicketUrl_args = new GetInvitationTicketUrl_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : GetInvitationTicketUrl_result = new GetInvitationTicketUrl_result();
      try {
        result.success = SquareService_iface_.getInvitationTicketUrl(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing getInvitationTicketUrl", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getInvitationTicketUrl");
        oprot.writeMessageBegin(new TMessage("getInvitationTicketUrl", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("getInvitationTicketUrl", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

  private function findSquareByInvitationTicket() : Int->TProtocol->TProtocol->Void {
    return function( seqid : Int, iprot : TProtocol, oprot : TProtocol) : Void
    {
      var args : FindSquareByInvitationTicket_args = new FindSquareByInvitationTicket_args();
      args.read(iprot);
      iprot.readMessageEnd();
      var result : FindSquareByInvitationTicket_result = new FindSquareByInvitationTicket_result();
      try {
        result.success = SquareService_iface_.findSquareByInvitationTicket(args.request);
      } catch (e:SquareException) {
        result.e = e;
      } catch (th : Dynamic) {
        trace("Internal error processing findSquareByInvitationTicket", th);
        var x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing findSquareByInvitationTicket");
        oprot.writeMessageBegin(new TMessage("findSquareByInvitationTicket", TMessageType.EXCEPTION, seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return;
      }
      oprot.writeMessageBegin(new TMessage("findSquareByInvitationTicket", TMessageType.REPLY, seqid));
      result.write(oprot);
      oprot.writeMessageEnd();
      oprot.getTransport().flush();
    }

  }

}

