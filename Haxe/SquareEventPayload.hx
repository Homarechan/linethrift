/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;


class SquareEventPayload implements TBase {
  
  static var STRUCT_DESC = { new TStruct("SquareEventPayload"); };
  static var RECEIVE_MESSAGE_FIELD_DESC = { new TField("receiveMessage", TType.STRUCT, 1); };
  static var SEND_MESSAGE_FIELD_DESC = { new TField("sendMessage", TType.STRUCT, 2); };
  static var NOTIFIED_JOIN_SQUARE_CHAT_FIELD_DESC = { new TField("notifiedJoinSquareChat", TType.STRUCT, 3); };
  static var NOTIFIED_INVITE_INTO_SQUARE_CHAT_FIELD_DESC = { new TField("notifiedInviteIntoSquareChat", TType.STRUCT, 4); };
  static var NOTIFIED_LEAVE_SQUARE_CHAT_FIELD_DESC = { new TField("notifiedLeaveSquareChat", TType.STRUCT, 5); };
  static var NOTIFIED_DESTROY_MESSAGE_FIELD_DESC = { new TField("notifiedDestroyMessage", TType.STRUCT, 6); };
  static var NOTIFIED_MARK_AS_READ_FIELD_DESC = { new TField("notifiedMarkAsRead", TType.STRUCT, 7); };
  static var NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE_FIELD_DESC = { new TField("notifiedUpdateSquareMemberProfile", TType.STRUCT, 8); };
  static var NOTIFIED_KICKOUT_FROM_SQUARE_FIELD_DESC = { new TField("notifiedKickoutFromSquare", TType.STRUCT, 20); };
  static var NOTIFIED_SHUTDOWN_SQUARE_FIELD_DESC = { new TField("notifiedShutdownSquare", TType.STRUCT, 19); };
  static var NOTIFIED_DELETE_SQUARE_CHAT_FIELD_DESC = { new TField("notifiedDeleteSquareChat", TType.STRUCT, 21); };
  static var NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME_FIELD_DESC = { new TField("notifiedUpdateSquareChatProfileName", TType.STRUCT, 31); };
  static var NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE_FIELD_DESC = { new TField("notifiedUpdateSquareChatProfileImage", TType.STRUCT, 32); };
  static var NOTIFIED_UPDATE_SQUARE_STATUS_FIELD_DESC = { new TField("notifiedUpdateSquareStatus", TType.STRUCT, 14); };
  static var NOTIFIED_UPDATE_SQUARE_CHAT_STATUS_FIELD_DESC = { new TField("notifiedUpdateSquareChatStatus", TType.STRUCT, 15); };
  static var NOTIFIED_CREATE_SQUARE_MEMBER_FIELD_DESC = { new TField("notifiedCreateSquareMember", TType.STRUCT, 16); };
  static var NOTIFIED_CREATE_SQUARE_CHAT_MEMBER_FIELD_DESC = { new TField("notifiedCreateSquareChatMember", TType.STRUCT, 17); };
  static var NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION_FIELD_DESC = { new TField("notifiedUpdateSquareMemberRelation", TType.STRUCT, 18); };
  static var NOTIFIED_UPDATE_SQUARE_FIELD_DESC = { new TField("notifiedUpdateSquare", TType.STRUCT, 9); };
  static var NOTIFIED_UPDATE_SQUARE_MEMBER_FIELD_DESC = { new TField("notifiedUpdateSquareMember", TType.STRUCT, 10); };
  static var NOTIFIED_UPDATE_SQUARE_CHAT_FIELD_DESC = { new TField("notifiedUpdateSquareChat", TType.STRUCT, 11); };
  static var NOTIFICATION_JOIN_REQUEST_FIELD_DESC = { new TField("notificationJoinRequest", TType.STRUCT, 22); };
  static var NOTIFICATION_JOINED_FIELD_DESC = { new TField("notificationJoined", TType.STRUCT, 23); };
  static var NOTIFICATION_PROMOTE_COADMIN_FIELD_DESC = { new TField("notificationPromoteCoadmin", TType.STRUCT, 24); };
  static var NOTIFICATION_PROMOTE_ADMIN_FIELD_DESC = { new TField("notificationPromoteAdmin", TType.STRUCT, 25); };
  static var NOTIFICATION_DEMOTE_MEMBER_FIELD_DESC = { new TField("notificationDemoteMember", TType.STRUCT, 26); };
  static var NOTIFICATION_KICKED_OUT_FIELD_DESC = { new TField("notificationKickedOut", TType.STRUCT, 27); };
  static var NOTIFICATION_SQUARE_DELETE_FIELD_DESC = { new TField("notificationSquareDelete", TType.STRUCT, 28); };
  static var NOTIFICATION_SQUARE_CHAT_DELETE_FIELD_DESC = { new TField("notificationSquareChatDelete", TType.STRUCT, 29); };
  static var NOTIFICATION_MESSAGE_FIELD_DESC = { new TField("notificationMessage", TType.STRUCT, 30); };
  static var NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER_FIELD_DESC = { new TField("notifiedUpdateSquareChatMember", TType.STRUCT, 12); };
  static var NOTIFIED_UPDATE_SQUARE_AUTHORITY_FIELD_DESC = { new TField("notifiedUpdateSquareAuthority", TType.STRUCT, 13); };
  static var NOTIFIED_UPDATE_SQUARE_FEATURE_SET_FIELD_DESC = { new TField("notifiedUpdateSquareFeatureSet", TType.STRUCT, 33); };

  @:isVar
  public var receiveMessage(get,set) : SquareEventReceiveMessage;
  @:isVar
  public var sendMessage(get,set) : SquareEventSendMessage;
  @:isVar
  public var notifiedJoinSquareChat(get,set) : SquareEventNotifiedJoinSquareChat;
  @:isVar
  public var notifiedInviteIntoSquareChat(get,set) : SquareEventNotifiedInviteIntoSquareChat;
  @:isVar
  public var notifiedLeaveSquareChat(get,set) : SquareEventNotifiedLeaveSquareChat;
  @:isVar
  public var notifiedDestroyMessage(get,set) : SquareEventNotifiedDestroyMessage;
  @:isVar
  public var notifiedMarkAsRead(get,set) : SquareEventNotifiedMarkAsRead;
  @:isVar
  public var notifiedUpdateSquareMemberProfile(get,set) : SquareEventNotifiedUpdateSquareMemberProfile;
  @:isVar
  public var notifiedKickoutFromSquare(get,set) : SquareEventNotifiedKickoutFromSquare;
  @:isVar
  public var notifiedShutdownSquare(get,set) : SquareEventNotifiedShutdownSquare;
  @:isVar
  public var notifiedDeleteSquareChat(get,set) : SquareEventNotifiedDeleteSquareChat;
  @:isVar
  public var notifiedUpdateSquareChatProfileName(get,set) : SquareEventNotifiedUpdateSquareChatProfileName;
  @:isVar
  public var notifiedUpdateSquareChatProfileImage(get,set) : SquareEventNotifiedUpdateSquareChatProfileImage;
  @:isVar
  public var notifiedUpdateSquareStatus(get,set) : SquareEventNotifiedUpdateSquareStatus;
  @:isVar
  public var notifiedUpdateSquareChatStatus(get,set) : SquareEventNotifiedUpdateSquareChatStatus;
  @:isVar
  public var notifiedCreateSquareMember(get,set) : SquareEventNotifiedCreateSquareMember;
  @:isVar
  public var notifiedCreateSquareChatMember(get,set) : SquareEventNotifiedCreateSquareChatMember;
  @:isVar
  public var notifiedUpdateSquareMemberRelation(get,set) : SquareEventNotifiedUpdateSquareMemberRelation;
  @:isVar
  public var notifiedUpdateSquare(get,set) : SquareEventNotifiedUpdateSquare;
  @:isVar
  public var notifiedUpdateSquareMember(get,set) : SquareEventNotifiedUpdateSquareMember;
  @:isVar
  public var notifiedUpdateSquareChat(get,set) : SquareEventNotifiedUpdateSquareChat;
  @:isVar
  public var notificationJoinRequest(get,set) : SquareEventNotificationJoinRequest;
  @:isVar
  public var notificationJoined(get,set) : SquareEventNotificationMemberUpdate;
  @:isVar
  public var notificationPromoteCoadmin(get,set) : SquareEventNotificationMemberUpdate;
  @:isVar
  public var notificationPromoteAdmin(get,set) : SquareEventNotificationMemberUpdate;
  @:isVar
  public var notificationDemoteMember(get,set) : SquareEventNotificationMemberUpdate;
  @:isVar
  public var notificationKickedOut(get,set) : SquareEventNotificationMemberUpdate;
  @:isVar
  public var notificationSquareDelete(get,set) : SquareEventNotificationSquareDelete;
  @:isVar
  public var notificationSquareChatDelete(get,set) : SquareEventNotificationSquareChatDelete;
  @:isVar
  public var notificationMessage(get,set) : SquareEventNotificationMessage;
  @:isVar
  public var notifiedUpdateSquareChatMember(get,set) : SquareEventNotifiedUpdateSquareChatMember;
  @:isVar
  public var notifiedUpdateSquareAuthority(get,set) : SquareEventNotifiedUpdateSquareAuthority;
  @:isVar
  public var notifiedUpdateSquareFeatureSet(get,set) : SquareEventNotifiedUpdateSquareFeatureSet;

  inline static var RECEIVEMESSAGE_FIELD_ID : Int = 1;
  inline static var SENDMESSAGE_FIELD_ID : Int = 2;
  inline static var NOTIFIEDJOINSQUARECHAT_FIELD_ID : Int = 3;
  inline static var NOTIFIEDINVITEINTOSQUARECHAT_FIELD_ID : Int = 4;
  inline static var NOTIFIEDLEAVESQUARECHAT_FIELD_ID : Int = 5;
  inline static var NOTIFIEDDESTROYMESSAGE_FIELD_ID : Int = 6;
  inline static var NOTIFIEDMARKASREAD_FIELD_ID : Int = 7;
  inline static var NOTIFIEDUPDATESQUAREMEMBERPROFILE_FIELD_ID : Int = 8;
  inline static var NOTIFIEDKICKOUTFROMSQUARE_FIELD_ID : Int = 20;
  inline static var NOTIFIEDSHUTDOWNSQUARE_FIELD_ID : Int = 19;
  inline static var NOTIFIEDDELETESQUARECHAT_FIELD_ID : Int = 21;
  inline static var NOTIFIEDUPDATESQUARECHATPROFILENAME_FIELD_ID : Int = 31;
  inline static var NOTIFIEDUPDATESQUARECHATPROFILEIMAGE_FIELD_ID : Int = 32;
  inline static var NOTIFIEDUPDATESQUARESTATUS_FIELD_ID : Int = 14;
  inline static var NOTIFIEDUPDATESQUARECHATSTATUS_FIELD_ID : Int = 15;
  inline static var NOTIFIEDCREATESQUAREMEMBER_FIELD_ID : Int = 16;
  inline static var NOTIFIEDCREATESQUARECHATMEMBER_FIELD_ID : Int = 17;
  inline static var NOTIFIEDUPDATESQUAREMEMBERRELATION_FIELD_ID : Int = 18;
  inline static var NOTIFIEDUPDATESQUARE_FIELD_ID : Int = 9;
  inline static var NOTIFIEDUPDATESQUAREMEMBER_FIELD_ID : Int = 10;
  inline static var NOTIFIEDUPDATESQUARECHAT_FIELD_ID : Int = 11;
  inline static var NOTIFICATIONJOINREQUEST_FIELD_ID : Int = 22;
  inline static var NOTIFICATIONJOINED_FIELD_ID : Int = 23;
  inline static var NOTIFICATIONPROMOTECOADMIN_FIELD_ID : Int = 24;
  inline static var NOTIFICATIONPROMOTEADMIN_FIELD_ID : Int = 25;
  inline static var NOTIFICATIONDEMOTEMEMBER_FIELD_ID : Int = 26;
  inline static var NOTIFICATIONKICKEDOUT_FIELD_ID : Int = 27;
  inline static var NOTIFICATIONSQUAREDELETE_FIELD_ID : Int = 28;
  inline static var NOTIFICATIONSQUARECHATDELETE_FIELD_ID : Int = 29;
  inline static var NOTIFICATIONMESSAGE_FIELD_ID : Int = 30;
  inline static var NOTIFIEDUPDATESQUARECHATMEMBER_FIELD_ID : Int = 12;
  inline static var NOTIFIEDUPDATESQUAREAUTHORITY_FIELD_ID : Int = 13;
  inline static var NOTIFIEDUPDATESQUAREFEATURESET_FIELD_ID : Int = 33;


  public function new() {
  }

  public function get_receiveMessage() : SquareEventReceiveMessage {
    return this.receiveMessage;
  }

  public function set_receiveMessage(receiveMessage:SquareEventReceiveMessage) : SquareEventReceiveMessage {
    this.receiveMessage = receiveMessage;
    return this.receiveMessage;
  }

  public function unsetReceiveMessage() : Void {
    this.receiveMessage = null;
  }

  // Returns true if field receiveMessage is set (has been assigned a value) and false otherwise
  public function isSetReceiveMessage() : Bool {
    return this.receiveMessage != null;
  }

  public function get_sendMessage() : SquareEventSendMessage {
    return this.sendMessage;
  }

  public function set_sendMessage(sendMessage:SquareEventSendMessage) : SquareEventSendMessage {
    this.sendMessage = sendMessage;
    return this.sendMessage;
  }

  public function unsetSendMessage() : Void {
    this.sendMessage = null;
  }

  // Returns true if field sendMessage is set (has been assigned a value) and false otherwise
  public function isSetSendMessage() : Bool {
    return this.sendMessage != null;
  }

  public function get_notifiedJoinSquareChat() : SquareEventNotifiedJoinSquareChat {
    return this.notifiedJoinSquareChat;
  }

  public function set_notifiedJoinSquareChat(notifiedJoinSquareChat:SquareEventNotifiedJoinSquareChat) : SquareEventNotifiedJoinSquareChat {
    this.notifiedJoinSquareChat = notifiedJoinSquareChat;
    return this.notifiedJoinSquareChat;
  }

  public function unsetNotifiedJoinSquareChat() : Void {
    this.notifiedJoinSquareChat = null;
  }

  // Returns true if field notifiedJoinSquareChat is set (has been assigned a value) and false otherwise
  public function isSetNotifiedJoinSquareChat() : Bool {
    return this.notifiedJoinSquareChat != null;
  }

  public function get_notifiedInviteIntoSquareChat() : SquareEventNotifiedInviteIntoSquareChat {
    return this.notifiedInviteIntoSquareChat;
  }

  public function set_notifiedInviteIntoSquareChat(notifiedInviteIntoSquareChat:SquareEventNotifiedInviteIntoSquareChat) : SquareEventNotifiedInviteIntoSquareChat {
    this.notifiedInviteIntoSquareChat = notifiedInviteIntoSquareChat;
    return this.notifiedInviteIntoSquareChat;
  }

  public function unsetNotifiedInviteIntoSquareChat() : Void {
    this.notifiedInviteIntoSquareChat = null;
  }

  // Returns true if field notifiedInviteIntoSquareChat is set (has been assigned a value) and false otherwise
  public function isSetNotifiedInviteIntoSquareChat() : Bool {
    return this.notifiedInviteIntoSquareChat != null;
  }

  public function get_notifiedLeaveSquareChat() : SquareEventNotifiedLeaveSquareChat {
    return this.notifiedLeaveSquareChat;
  }

  public function set_notifiedLeaveSquareChat(notifiedLeaveSquareChat:SquareEventNotifiedLeaveSquareChat) : SquareEventNotifiedLeaveSquareChat {
    this.notifiedLeaveSquareChat = notifiedLeaveSquareChat;
    return this.notifiedLeaveSquareChat;
  }

  public function unsetNotifiedLeaveSquareChat() : Void {
    this.notifiedLeaveSquareChat = null;
  }

  // Returns true if field notifiedLeaveSquareChat is set (has been assigned a value) and false otherwise
  public function isSetNotifiedLeaveSquareChat() : Bool {
    return this.notifiedLeaveSquareChat != null;
  }

  public function get_notifiedDestroyMessage() : SquareEventNotifiedDestroyMessage {
    return this.notifiedDestroyMessage;
  }

  public function set_notifiedDestroyMessage(notifiedDestroyMessage:SquareEventNotifiedDestroyMessage) : SquareEventNotifiedDestroyMessage {
    this.notifiedDestroyMessage = notifiedDestroyMessage;
    return this.notifiedDestroyMessage;
  }

  public function unsetNotifiedDestroyMessage() : Void {
    this.notifiedDestroyMessage = null;
  }

  // Returns true if field notifiedDestroyMessage is set (has been assigned a value) and false otherwise
  public function isSetNotifiedDestroyMessage() : Bool {
    return this.notifiedDestroyMessage != null;
  }

  public function get_notifiedMarkAsRead() : SquareEventNotifiedMarkAsRead {
    return this.notifiedMarkAsRead;
  }

  public function set_notifiedMarkAsRead(notifiedMarkAsRead:SquareEventNotifiedMarkAsRead) : SquareEventNotifiedMarkAsRead {
    this.notifiedMarkAsRead = notifiedMarkAsRead;
    return this.notifiedMarkAsRead;
  }

  public function unsetNotifiedMarkAsRead() : Void {
    this.notifiedMarkAsRead = null;
  }

  // Returns true if field notifiedMarkAsRead is set (has been assigned a value) and false otherwise
  public function isSetNotifiedMarkAsRead() : Bool {
    return this.notifiedMarkAsRead != null;
  }

  public function get_notifiedUpdateSquareMemberProfile() : SquareEventNotifiedUpdateSquareMemberProfile {
    return this.notifiedUpdateSquareMemberProfile;
  }

  public function set_notifiedUpdateSquareMemberProfile(notifiedUpdateSquareMemberProfile:SquareEventNotifiedUpdateSquareMemberProfile) : SquareEventNotifiedUpdateSquareMemberProfile {
    this.notifiedUpdateSquareMemberProfile = notifiedUpdateSquareMemberProfile;
    return this.notifiedUpdateSquareMemberProfile;
  }

  public function unsetNotifiedUpdateSquareMemberProfile() : Void {
    this.notifiedUpdateSquareMemberProfile = null;
  }

  // Returns true if field notifiedUpdateSquareMemberProfile is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareMemberProfile() : Bool {
    return this.notifiedUpdateSquareMemberProfile != null;
  }

  public function get_notifiedKickoutFromSquare() : SquareEventNotifiedKickoutFromSquare {
    return this.notifiedKickoutFromSquare;
  }

  public function set_notifiedKickoutFromSquare(notifiedKickoutFromSquare:SquareEventNotifiedKickoutFromSquare) : SquareEventNotifiedKickoutFromSquare {
    this.notifiedKickoutFromSquare = notifiedKickoutFromSquare;
    return this.notifiedKickoutFromSquare;
  }

  public function unsetNotifiedKickoutFromSquare() : Void {
    this.notifiedKickoutFromSquare = null;
  }

  // Returns true if field notifiedKickoutFromSquare is set (has been assigned a value) and false otherwise
  public function isSetNotifiedKickoutFromSquare() : Bool {
    return this.notifiedKickoutFromSquare != null;
  }

  public function get_notifiedShutdownSquare() : SquareEventNotifiedShutdownSquare {
    return this.notifiedShutdownSquare;
  }

  public function set_notifiedShutdownSquare(notifiedShutdownSquare:SquareEventNotifiedShutdownSquare) : SquareEventNotifiedShutdownSquare {
    this.notifiedShutdownSquare = notifiedShutdownSquare;
    return this.notifiedShutdownSquare;
  }

  public function unsetNotifiedShutdownSquare() : Void {
    this.notifiedShutdownSquare = null;
  }

  // Returns true if field notifiedShutdownSquare is set (has been assigned a value) and false otherwise
  public function isSetNotifiedShutdownSquare() : Bool {
    return this.notifiedShutdownSquare != null;
  }

  public function get_notifiedDeleteSquareChat() : SquareEventNotifiedDeleteSquareChat {
    return this.notifiedDeleteSquareChat;
  }

  public function set_notifiedDeleteSquareChat(notifiedDeleteSquareChat:SquareEventNotifiedDeleteSquareChat) : SquareEventNotifiedDeleteSquareChat {
    this.notifiedDeleteSquareChat = notifiedDeleteSquareChat;
    return this.notifiedDeleteSquareChat;
  }

  public function unsetNotifiedDeleteSquareChat() : Void {
    this.notifiedDeleteSquareChat = null;
  }

  // Returns true if field notifiedDeleteSquareChat is set (has been assigned a value) and false otherwise
  public function isSetNotifiedDeleteSquareChat() : Bool {
    return this.notifiedDeleteSquareChat != null;
  }

  public function get_notifiedUpdateSquareChatProfileName() : SquareEventNotifiedUpdateSquareChatProfileName {
    return this.notifiedUpdateSquareChatProfileName;
  }

  public function set_notifiedUpdateSquareChatProfileName(notifiedUpdateSquareChatProfileName:SquareEventNotifiedUpdateSquareChatProfileName) : SquareEventNotifiedUpdateSquareChatProfileName {
    this.notifiedUpdateSquareChatProfileName = notifiedUpdateSquareChatProfileName;
    return this.notifiedUpdateSquareChatProfileName;
  }

  public function unsetNotifiedUpdateSquareChatProfileName() : Void {
    this.notifiedUpdateSquareChatProfileName = null;
  }

  // Returns true if field notifiedUpdateSquareChatProfileName is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareChatProfileName() : Bool {
    return this.notifiedUpdateSquareChatProfileName != null;
  }

  public function get_notifiedUpdateSquareChatProfileImage() : SquareEventNotifiedUpdateSquareChatProfileImage {
    return this.notifiedUpdateSquareChatProfileImage;
  }

  public function set_notifiedUpdateSquareChatProfileImage(notifiedUpdateSquareChatProfileImage:SquareEventNotifiedUpdateSquareChatProfileImage) : SquareEventNotifiedUpdateSquareChatProfileImage {
    this.notifiedUpdateSquareChatProfileImage = notifiedUpdateSquareChatProfileImage;
    return this.notifiedUpdateSquareChatProfileImage;
  }

  public function unsetNotifiedUpdateSquareChatProfileImage() : Void {
    this.notifiedUpdateSquareChatProfileImage = null;
  }

  // Returns true if field notifiedUpdateSquareChatProfileImage is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareChatProfileImage() : Bool {
    return this.notifiedUpdateSquareChatProfileImage != null;
  }

  public function get_notifiedUpdateSquareStatus() : SquareEventNotifiedUpdateSquareStatus {
    return this.notifiedUpdateSquareStatus;
  }

  public function set_notifiedUpdateSquareStatus(notifiedUpdateSquareStatus:SquareEventNotifiedUpdateSquareStatus) : SquareEventNotifiedUpdateSquareStatus {
    this.notifiedUpdateSquareStatus = notifiedUpdateSquareStatus;
    return this.notifiedUpdateSquareStatus;
  }

  public function unsetNotifiedUpdateSquareStatus() : Void {
    this.notifiedUpdateSquareStatus = null;
  }

  // Returns true if field notifiedUpdateSquareStatus is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareStatus() : Bool {
    return this.notifiedUpdateSquareStatus != null;
  }

  public function get_notifiedUpdateSquareChatStatus() : SquareEventNotifiedUpdateSquareChatStatus {
    return this.notifiedUpdateSquareChatStatus;
  }

  public function set_notifiedUpdateSquareChatStatus(notifiedUpdateSquareChatStatus:SquareEventNotifiedUpdateSquareChatStatus) : SquareEventNotifiedUpdateSquareChatStatus {
    this.notifiedUpdateSquareChatStatus = notifiedUpdateSquareChatStatus;
    return this.notifiedUpdateSquareChatStatus;
  }

  public function unsetNotifiedUpdateSquareChatStatus() : Void {
    this.notifiedUpdateSquareChatStatus = null;
  }

  // Returns true if field notifiedUpdateSquareChatStatus is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareChatStatus() : Bool {
    return this.notifiedUpdateSquareChatStatus != null;
  }

  public function get_notifiedCreateSquareMember() : SquareEventNotifiedCreateSquareMember {
    return this.notifiedCreateSquareMember;
  }

  public function set_notifiedCreateSquareMember(notifiedCreateSquareMember:SquareEventNotifiedCreateSquareMember) : SquareEventNotifiedCreateSquareMember {
    this.notifiedCreateSquareMember = notifiedCreateSquareMember;
    return this.notifiedCreateSquareMember;
  }

  public function unsetNotifiedCreateSquareMember() : Void {
    this.notifiedCreateSquareMember = null;
  }

  // Returns true if field notifiedCreateSquareMember is set (has been assigned a value) and false otherwise
  public function isSetNotifiedCreateSquareMember() : Bool {
    return this.notifiedCreateSquareMember != null;
  }

  public function get_notifiedCreateSquareChatMember() : SquareEventNotifiedCreateSquareChatMember {
    return this.notifiedCreateSquareChatMember;
  }

  public function set_notifiedCreateSquareChatMember(notifiedCreateSquareChatMember:SquareEventNotifiedCreateSquareChatMember) : SquareEventNotifiedCreateSquareChatMember {
    this.notifiedCreateSquareChatMember = notifiedCreateSquareChatMember;
    return this.notifiedCreateSquareChatMember;
  }

  public function unsetNotifiedCreateSquareChatMember() : Void {
    this.notifiedCreateSquareChatMember = null;
  }

  // Returns true if field notifiedCreateSquareChatMember is set (has been assigned a value) and false otherwise
  public function isSetNotifiedCreateSquareChatMember() : Bool {
    return this.notifiedCreateSquareChatMember != null;
  }

  public function get_notifiedUpdateSquareMemberRelation() : SquareEventNotifiedUpdateSquareMemberRelation {
    return this.notifiedUpdateSquareMemberRelation;
  }

  public function set_notifiedUpdateSquareMemberRelation(notifiedUpdateSquareMemberRelation:SquareEventNotifiedUpdateSquareMemberRelation) : SquareEventNotifiedUpdateSquareMemberRelation {
    this.notifiedUpdateSquareMemberRelation = notifiedUpdateSquareMemberRelation;
    return this.notifiedUpdateSquareMemberRelation;
  }

  public function unsetNotifiedUpdateSquareMemberRelation() : Void {
    this.notifiedUpdateSquareMemberRelation = null;
  }

  // Returns true if field notifiedUpdateSquareMemberRelation is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareMemberRelation() : Bool {
    return this.notifiedUpdateSquareMemberRelation != null;
  }

  public function get_notifiedUpdateSquare() : SquareEventNotifiedUpdateSquare {
    return this.notifiedUpdateSquare;
  }

  public function set_notifiedUpdateSquare(notifiedUpdateSquare:SquareEventNotifiedUpdateSquare) : SquareEventNotifiedUpdateSquare {
    this.notifiedUpdateSquare = notifiedUpdateSquare;
    return this.notifiedUpdateSquare;
  }

  public function unsetNotifiedUpdateSquare() : Void {
    this.notifiedUpdateSquare = null;
  }

  // Returns true if field notifiedUpdateSquare is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquare() : Bool {
    return this.notifiedUpdateSquare != null;
  }

  public function get_notifiedUpdateSquareMember() : SquareEventNotifiedUpdateSquareMember {
    return this.notifiedUpdateSquareMember;
  }

  public function set_notifiedUpdateSquareMember(notifiedUpdateSquareMember:SquareEventNotifiedUpdateSquareMember) : SquareEventNotifiedUpdateSquareMember {
    this.notifiedUpdateSquareMember = notifiedUpdateSquareMember;
    return this.notifiedUpdateSquareMember;
  }

  public function unsetNotifiedUpdateSquareMember() : Void {
    this.notifiedUpdateSquareMember = null;
  }

  // Returns true if field notifiedUpdateSquareMember is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareMember() : Bool {
    return this.notifiedUpdateSquareMember != null;
  }

  public function get_notifiedUpdateSquareChat() : SquareEventNotifiedUpdateSquareChat {
    return this.notifiedUpdateSquareChat;
  }

  public function set_notifiedUpdateSquareChat(notifiedUpdateSquareChat:SquareEventNotifiedUpdateSquareChat) : SquareEventNotifiedUpdateSquareChat {
    this.notifiedUpdateSquareChat = notifiedUpdateSquareChat;
    return this.notifiedUpdateSquareChat;
  }

  public function unsetNotifiedUpdateSquareChat() : Void {
    this.notifiedUpdateSquareChat = null;
  }

  // Returns true if field notifiedUpdateSquareChat is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareChat() : Bool {
    return this.notifiedUpdateSquareChat != null;
  }

  public function get_notificationJoinRequest() : SquareEventNotificationJoinRequest {
    return this.notificationJoinRequest;
  }

  public function set_notificationJoinRequest(notificationJoinRequest:SquareEventNotificationJoinRequest) : SquareEventNotificationJoinRequest {
    this.notificationJoinRequest = notificationJoinRequest;
    return this.notificationJoinRequest;
  }

  public function unsetNotificationJoinRequest() : Void {
    this.notificationJoinRequest = null;
  }

  // Returns true if field notificationJoinRequest is set (has been assigned a value) and false otherwise
  public function isSetNotificationJoinRequest() : Bool {
    return this.notificationJoinRequest != null;
  }

  public function get_notificationJoined() : SquareEventNotificationMemberUpdate {
    return this.notificationJoined;
  }

  public function set_notificationJoined(notificationJoined:SquareEventNotificationMemberUpdate) : SquareEventNotificationMemberUpdate {
    this.notificationJoined = notificationJoined;
    return this.notificationJoined;
  }

  public function unsetNotificationJoined() : Void {
    this.notificationJoined = null;
  }

  // Returns true if field notificationJoined is set (has been assigned a value) and false otherwise
  public function isSetNotificationJoined() : Bool {
    return this.notificationJoined != null;
  }

  public function get_notificationPromoteCoadmin() : SquareEventNotificationMemberUpdate {
    return this.notificationPromoteCoadmin;
  }

  public function set_notificationPromoteCoadmin(notificationPromoteCoadmin:SquareEventNotificationMemberUpdate) : SquareEventNotificationMemberUpdate {
    this.notificationPromoteCoadmin = notificationPromoteCoadmin;
    return this.notificationPromoteCoadmin;
  }

  public function unsetNotificationPromoteCoadmin() : Void {
    this.notificationPromoteCoadmin = null;
  }

  // Returns true if field notificationPromoteCoadmin is set (has been assigned a value) and false otherwise
  public function isSetNotificationPromoteCoadmin() : Bool {
    return this.notificationPromoteCoadmin != null;
  }

  public function get_notificationPromoteAdmin() : SquareEventNotificationMemberUpdate {
    return this.notificationPromoteAdmin;
  }

  public function set_notificationPromoteAdmin(notificationPromoteAdmin:SquareEventNotificationMemberUpdate) : SquareEventNotificationMemberUpdate {
    this.notificationPromoteAdmin = notificationPromoteAdmin;
    return this.notificationPromoteAdmin;
  }

  public function unsetNotificationPromoteAdmin() : Void {
    this.notificationPromoteAdmin = null;
  }

  // Returns true if field notificationPromoteAdmin is set (has been assigned a value) and false otherwise
  public function isSetNotificationPromoteAdmin() : Bool {
    return this.notificationPromoteAdmin != null;
  }

  public function get_notificationDemoteMember() : SquareEventNotificationMemberUpdate {
    return this.notificationDemoteMember;
  }

  public function set_notificationDemoteMember(notificationDemoteMember:SquareEventNotificationMemberUpdate) : SquareEventNotificationMemberUpdate {
    this.notificationDemoteMember = notificationDemoteMember;
    return this.notificationDemoteMember;
  }

  public function unsetNotificationDemoteMember() : Void {
    this.notificationDemoteMember = null;
  }

  // Returns true if field notificationDemoteMember is set (has been assigned a value) and false otherwise
  public function isSetNotificationDemoteMember() : Bool {
    return this.notificationDemoteMember != null;
  }

  public function get_notificationKickedOut() : SquareEventNotificationMemberUpdate {
    return this.notificationKickedOut;
  }

  public function set_notificationKickedOut(notificationKickedOut:SquareEventNotificationMemberUpdate) : SquareEventNotificationMemberUpdate {
    this.notificationKickedOut = notificationKickedOut;
    return this.notificationKickedOut;
  }

  public function unsetNotificationKickedOut() : Void {
    this.notificationKickedOut = null;
  }

  // Returns true if field notificationKickedOut is set (has been assigned a value) and false otherwise
  public function isSetNotificationKickedOut() : Bool {
    return this.notificationKickedOut != null;
  }

  public function get_notificationSquareDelete() : SquareEventNotificationSquareDelete {
    return this.notificationSquareDelete;
  }

  public function set_notificationSquareDelete(notificationSquareDelete:SquareEventNotificationSquareDelete) : SquareEventNotificationSquareDelete {
    this.notificationSquareDelete = notificationSquareDelete;
    return this.notificationSquareDelete;
  }

  public function unsetNotificationSquareDelete() : Void {
    this.notificationSquareDelete = null;
  }

  // Returns true if field notificationSquareDelete is set (has been assigned a value) and false otherwise
  public function isSetNotificationSquareDelete() : Bool {
    return this.notificationSquareDelete != null;
  }

  public function get_notificationSquareChatDelete() : SquareEventNotificationSquareChatDelete {
    return this.notificationSquareChatDelete;
  }

  public function set_notificationSquareChatDelete(notificationSquareChatDelete:SquareEventNotificationSquareChatDelete) : SquareEventNotificationSquareChatDelete {
    this.notificationSquareChatDelete = notificationSquareChatDelete;
    return this.notificationSquareChatDelete;
  }

  public function unsetNotificationSquareChatDelete() : Void {
    this.notificationSquareChatDelete = null;
  }

  // Returns true if field notificationSquareChatDelete is set (has been assigned a value) and false otherwise
  public function isSetNotificationSquareChatDelete() : Bool {
    return this.notificationSquareChatDelete != null;
  }

  public function get_notificationMessage() : SquareEventNotificationMessage {
    return this.notificationMessage;
  }

  public function set_notificationMessage(notificationMessage:SquareEventNotificationMessage) : SquareEventNotificationMessage {
    this.notificationMessage = notificationMessage;
    return this.notificationMessage;
  }

  public function unsetNotificationMessage() : Void {
    this.notificationMessage = null;
  }

  // Returns true if field notificationMessage is set (has been assigned a value) and false otherwise
  public function isSetNotificationMessage() : Bool {
    return this.notificationMessage != null;
  }

  public function get_notifiedUpdateSquareChatMember() : SquareEventNotifiedUpdateSquareChatMember {
    return this.notifiedUpdateSquareChatMember;
  }

  public function set_notifiedUpdateSquareChatMember(notifiedUpdateSquareChatMember:SquareEventNotifiedUpdateSquareChatMember) : SquareEventNotifiedUpdateSquareChatMember {
    this.notifiedUpdateSquareChatMember = notifiedUpdateSquareChatMember;
    return this.notifiedUpdateSquareChatMember;
  }

  public function unsetNotifiedUpdateSquareChatMember() : Void {
    this.notifiedUpdateSquareChatMember = null;
  }

  // Returns true if field notifiedUpdateSquareChatMember is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareChatMember() : Bool {
    return this.notifiedUpdateSquareChatMember != null;
  }

  public function get_notifiedUpdateSquareAuthority() : SquareEventNotifiedUpdateSquareAuthority {
    return this.notifiedUpdateSquareAuthority;
  }

  public function set_notifiedUpdateSquareAuthority(notifiedUpdateSquareAuthority:SquareEventNotifiedUpdateSquareAuthority) : SquareEventNotifiedUpdateSquareAuthority {
    this.notifiedUpdateSquareAuthority = notifiedUpdateSquareAuthority;
    return this.notifiedUpdateSquareAuthority;
  }

  public function unsetNotifiedUpdateSquareAuthority() : Void {
    this.notifiedUpdateSquareAuthority = null;
  }

  // Returns true if field notifiedUpdateSquareAuthority is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareAuthority() : Bool {
    return this.notifiedUpdateSquareAuthority != null;
  }

  public function get_notifiedUpdateSquareFeatureSet() : SquareEventNotifiedUpdateSquareFeatureSet {
    return this.notifiedUpdateSquareFeatureSet;
  }

  public function set_notifiedUpdateSquareFeatureSet(notifiedUpdateSquareFeatureSet:SquareEventNotifiedUpdateSquareFeatureSet) : SquareEventNotifiedUpdateSquareFeatureSet {
    this.notifiedUpdateSquareFeatureSet = notifiedUpdateSquareFeatureSet;
    return this.notifiedUpdateSquareFeatureSet;
  }

  public function unsetNotifiedUpdateSquareFeatureSet() : Void {
    this.notifiedUpdateSquareFeatureSet = null;
  }

  // Returns true if field notifiedUpdateSquareFeatureSet is set (has been assigned a value) and false otherwise
  public function isSetNotifiedUpdateSquareFeatureSet() : Bool {
    return this.notifiedUpdateSquareFeatureSet != null;
  }

  public function setFieldValue(fieldID : Int, value : Dynamic) : Void {
    switch (fieldID) {
    case RECEIVEMESSAGE_FIELD_ID:
      if (value == null) {
        unsetReceiveMessage();
      } else {
        this.receiveMessage = value;
      }

    case SENDMESSAGE_FIELD_ID:
      if (value == null) {
        unsetSendMessage();
      } else {
        this.sendMessage = value;
      }

    case NOTIFIEDJOINSQUARECHAT_FIELD_ID:
      if (value == null) {
        unsetNotifiedJoinSquareChat();
      } else {
        this.notifiedJoinSquareChat = value;
      }

    case NOTIFIEDINVITEINTOSQUARECHAT_FIELD_ID:
      if (value == null) {
        unsetNotifiedInviteIntoSquareChat();
      } else {
        this.notifiedInviteIntoSquareChat = value;
      }

    case NOTIFIEDLEAVESQUARECHAT_FIELD_ID:
      if (value == null) {
        unsetNotifiedLeaveSquareChat();
      } else {
        this.notifiedLeaveSquareChat = value;
      }

    case NOTIFIEDDESTROYMESSAGE_FIELD_ID:
      if (value == null) {
        unsetNotifiedDestroyMessage();
      } else {
        this.notifiedDestroyMessage = value;
      }

    case NOTIFIEDMARKASREAD_FIELD_ID:
      if (value == null) {
        unsetNotifiedMarkAsRead();
      } else {
        this.notifiedMarkAsRead = value;
      }

    case NOTIFIEDUPDATESQUAREMEMBERPROFILE_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareMemberProfile();
      } else {
        this.notifiedUpdateSquareMemberProfile = value;
      }

    case NOTIFIEDKICKOUTFROMSQUARE_FIELD_ID:
      if (value == null) {
        unsetNotifiedKickoutFromSquare();
      } else {
        this.notifiedKickoutFromSquare = value;
      }

    case NOTIFIEDSHUTDOWNSQUARE_FIELD_ID:
      if (value == null) {
        unsetNotifiedShutdownSquare();
      } else {
        this.notifiedShutdownSquare = value;
      }

    case NOTIFIEDDELETESQUARECHAT_FIELD_ID:
      if (value == null) {
        unsetNotifiedDeleteSquareChat();
      } else {
        this.notifiedDeleteSquareChat = value;
      }

    case NOTIFIEDUPDATESQUARECHATPROFILENAME_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareChatProfileName();
      } else {
        this.notifiedUpdateSquareChatProfileName = value;
      }

    case NOTIFIEDUPDATESQUARECHATPROFILEIMAGE_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareChatProfileImage();
      } else {
        this.notifiedUpdateSquareChatProfileImage = value;
      }

    case NOTIFIEDUPDATESQUARESTATUS_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareStatus();
      } else {
        this.notifiedUpdateSquareStatus = value;
      }

    case NOTIFIEDUPDATESQUARECHATSTATUS_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareChatStatus();
      } else {
        this.notifiedUpdateSquareChatStatus = value;
      }

    case NOTIFIEDCREATESQUAREMEMBER_FIELD_ID:
      if (value == null) {
        unsetNotifiedCreateSquareMember();
      } else {
        this.notifiedCreateSquareMember = value;
      }

    case NOTIFIEDCREATESQUARECHATMEMBER_FIELD_ID:
      if (value == null) {
        unsetNotifiedCreateSquareChatMember();
      } else {
        this.notifiedCreateSquareChatMember = value;
      }

    case NOTIFIEDUPDATESQUAREMEMBERRELATION_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareMemberRelation();
      } else {
        this.notifiedUpdateSquareMemberRelation = value;
      }

    case NOTIFIEDUPDATESQUARE_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquare();
      } else {
        this.notifiedUpdateSquare = value;
      }

    case NOTIFIEDUPDATESQUAREMEMBER_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareMember();
      } else {
        this.notifiedUpdateSquareMember = value;
      }

    case NOTIFIEDUPDATESQUARECHAT_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareChat();
      } else {
        this.notifiedUpdateSquareChat = value;
      }

    case NOTIFICATIONJOINREQUEST_FIELD_ID:
      if (value == null) {
        unsetNotificationJoinRequest();
      } else {
        this.notificationJoinRequest = value;
      }

    case NOTIFICATIONJOINED_FIELD_ID:
      if (value == null) {
        unsetNotificationJoined();
      } else {
        this.notificationJoined = value;
      }

    case NOTIFICATIONPROMOTECOADMIN_FIELD_ID:
      if (value == null) {
        unsetNotificationPromoteCoadmin();
      } else {
        this.notificationPromoteCoadmin = value;
      }

    case NOTIFICATIONPROMOTEADMIN_FIELD_ID:
      if (value == null) {
        unsetNotificationPromoteAdmin();
      } else {
        this.notificationPromoteAdmin = value;
      }

    case NOTIFICATIONDEMOTEMEMBER_FIELD_ID:
      if (value == null) {
        unsetNotificationDemoteMember();
      } else {
        this.notificationDemoteMember = value;
      }

    case NOTIFICATIONKICKEDOUT_FIELD_ID:
      if (value == null) {
        unsetNotificationKickedOut();
      } else {
        this.notificationKickedOut = value;
      }

    case NOTIFICATIONSQUAREDELETE_FIELD_ID:
      if (value == null) {
        unsetNotificationSquareDelete();
      } else {
        this.notificationSquareDelete = value;
      }

    case NOTIFICATIONSQUARECHATDELETE_FIELD_ID:
      if (value == null) {
        unsetNotificationSquareChatDelete();
      } else {
        this.notificationSquareChatDelete = value;
      }

    case NOTIFICATIONMESSAGE_FIELD_ID:
      if (value == null) {
        unsetNotificationMessage();
      } else {
        this.notificationMessage = value;
      }

    case NOTIFIEDUPDATESQUARECHATMEMBER_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareChatMember();
      } else {
        this.notifiedUpdateSquareChatMember = value;
      }

    case NOTIFIEDUPDATESQUAREAUTHORITY_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareAuthority();
      } else {
        this.notifiedUpdateSquareAuthority = value;
      }

    case NOTIFIEDUPDATESQUAREFEATURESET_FIELD_ID:
      if (value == null) {
        unsetNotifiedUpdateSquareFeatureSet();
      } else {
        this.notifiedUpdateSquareFeatureSet = value;
      }

    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  public function getFieldValue(fieldID : Int) : Dynamic {
    switch (fieldID) {
    case RECEIVEMESSAGE_FIELD_ID:
      return this.receiveMessage;
    case SENDMESSAGE_FIELD_ID:
      return this.sendMessage;
    case NOTIFIEDJOINSQUARECHAT_FIELD_ID:
      return this.notifiedJoinSquareChat;
    case NOTIFIEDINVITEINTOSQUARECHAT_FIELD_ID:
      return this.notifiedInviteIntoSquareChat;
    case NOTIFIEDLEAVESQUARECHAT_FIELD_ID:
      return this.notifiedLeaveSquareChat;
    case NOTIFIEDDESTROYMESSAGE_FIELD_ID:
      return this.notifiedDestroyMessage;
    case NOTIFIEDMARKASREAD_FIELD_ID:
      return this.notifiedMarkAsRead;
    case NOTIFIEDUPDATESQUAREMEMBERPROFILE_FIELD_ID:
      return this.notifiedUpdateSquareMemberProfile;
    case NOTIFIEDKICKOUTFROMSQUARE_FIELD_ID:
      return this.notifiedKickoutFromSquare;
    case NOTIFIEDSHUTDOWNSQUARE_FIELD_ID:
      return this.notifiedShutdownSquare;
    case NOTIFIEDDELETESQUARECHAT_FIELD_ID:
      return this.notifiedDeleteSquareChat;
    case NOTIFIEDUPDATESQUARECHATPROFILENAME_FIELD_ID:
      return this.notifiedUpdateSquareChatProfileName;
    case NOTIFIEDUPDATESQUARECHATPROFILEIMAGE_FIELD_ID:
      return this.notifiedUpdateSquareChatProfileImage;
    case NOTIFIEDUPDATESQUARESTATUS_FIELD_ID:
      return this.notifiedUpdateSquareStatus;
    case NOTIFIEDUPDATESQUARECHATSTATUS_FIELD_ID:
      return this.notifiedUpdateSquareChatStatus;
    case NOTIFIEDCREATESQUAREMEMBER_FIELD_ID:
      return this.notifiedCreateSquareMember;
    case NOTIFIEDCREATESQUARECHATMEMBER_FIELD_ID:
      return this.notifiedCreateSquareChatMember;
    case NOTIFIEDUPDATESQUAREMEMBERRELATION_FIELD_ID:
      return this.notifiedUpdateSquareMemberRelation;
    case NOTIFIEDUPDATESQUARE_FIELD_ID:
      return this.notifiedUpdateSquare;
    case NOTIFIEDUPDATESQUAREMEMBER_FIELD_ID:
      return this.notifiedUpdateSquareMember;
    case NOTIFIEDUPDATESQUARECHAT_FIELD_ID:
      return this.notifiedUpdateSquareChat;
    case NOTIFICATIONJOINREQUEST_FIELD_ID:
      return this.notificationJoinRequest;
    case NOTIFICATIONJOINED_FIELD_ID:
      return this.notificationJoined;
    case NOTIFICATIONPROMOTECOADMIN_FIELD_ID:
      return this.notificationPromoteCoadmin;
    case NOTIFICATIONPROMOTEADMIN_FIELD_ID:
      return this.notificationPromoteAdmin;
    case NOTIFICATIONDEMOTEMEMBER_FIELD_ID:
      return this.notificationDemoteMember;
    case NOTIFICATIONKICKEDOUT_FIELD_ID:
      return this.notificationKickedOut;
    case NOTIFICATIONSQUAREDELETE_FIELD_ID:
      return this.notificationSquareDelete;
    case NOTIFICATIONSQUARECHATDELETE_FIELD_ID:
      return this.notificationSquareChatDelete;
    case NOTIFICATIONMESSAGE_FIELD_ID:
      return this.notificationMessage;
    case NOTIFIEDUPDATESQUARECHATMEMBER_FIELD_ID:
      return this.notifiedUpdateSquareChatMember;
    case NOTIFIEDUPDATESQUAREAUTHORITY_FIELD_ID:
      return this.notifiedUpdateSquareAuthority;
    case NOTIFIEDUPDATESQUAREFEATURESET_FIELD_ID:
      return this.notifiedUpdateSquareFeatureSet;
    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  public function isSet(fieldID : Int) : Bool {
    switch (fieldID) {
    case RECEIVEMESSAGE_FIELD_ID:
      return isSetReceiveMessage();
    case SENDMESSAGE_FIELD_ID:
      return isSetSendMessage();
    case NOTIFIEDJOINSQUARECHAT_FIELD_ID:
      return isSetNotifiedJoinSquareChat();
    case NOTIFIEDINVITEINTOSQUARECHAT_FIELD_ID:
      return isSetNotifiedInviteIntoSquareChat();
    case NOTIFIEDLEAVESQUARECHAT_FIELD_ID:
      return isSetNotifiedLeaveSquareChat();
    case NOTIFIEDDESTROYMESSAGE_FIELD_ID:
      return isSetNotifiedDestroyMessage();
    case NOTIFIEDMARKASREAD_FIELD_ID:
      return isSetNotifiedMarkAsRead();
    case NOTIFIEDUPDATESQUAREMEMBERPROFILE_FIELD_ID:
      return isSetNotifiedUpdateSquareMemberProfile();
    case NOTIFIEDKICKOUTFROMSQUARE_FIELD_ID:
      return isSetNotifiedKickoutFromSquare();
    case NOTIFIEDSHUTDOWNSQUARE_FIELD_ID:
      return isSetNotifiedShutdownSquare();
    case NOTIFIEDDELETESQUARECHAT_FIELD_ID:
      return isSetNotifiedDeleteSquareChat();
    case NOTIFIEDUPDATESQUARECHATPROFILENAME_FIELD_ID:
      return isSetNotifiedUpdateSquareChatProfileName();
    case NOTIFIEDUPDATESQUARECHATPROFILEIMAGE_FIELD_ID:
      return isSetNotifiedUpdateSquareChatProfileImage();
    case NOTIFIEDUPDATESQUARESTATUS_FIELD_ID:
      return isSetNotifiedUpdateSquareStatus();
    case NOTIFIEDUPDATESQUARECHATSTATUS_FIELD_ID:
      return isSetNotifiedUpdateSquareChatStatus();
    case NOTIFIEDCREATESQUAREMEMBER_FIELD_ID:
      return isSetNotifiedCreateSquareMember();
    case NOTIFIEDCREATESQUARECHATMEMBER_FIELD_ID:
      return isSetNotifiedCreateSquareChatMember();
    case NOTIFIEDUPDATESQUAREMEMBERRELATION_FIELD_ID:
      return isSetNotifiedUpdateSquareMemberRelation();
    case NOTIFIEDUPDATESQUARE_FIELD_ID:
      return isSetNotifiedUpdateSquare();
    case NOTIFIEDUPDATESQUAREMEMBER_FIELD_ID:
      return isSetNotifiedUpdateSquareMember();
    case NOTIFIEDUPDATESQUARECHAT_FIELD_ID:
      return isSetNotifiedUpdateSquareChat();
    case NOTIFICATIONJOINREQUEST_FIELD_ID:
      return isSetNotificationJoinRequest();
    case NOTIFICATIONJOINED_FIELD_ID:
      return isSetNotificationJoined();
    case NOTIFICATIONPROMOTECOADMIN_FIELD_ID:
      return isSetNotificationPromoteCoadmin();
    case NOTIFICATIONPROMOTEADMIN_FIELD_ID:
      return isSetNotificationPromoteAdmin();
    case NOTIFICATIONDEMOTEMEMBER_FIELD_ID:
      return isSetNotificationDemoteMember();
    case NOTIFICATIONKICKEDOUT_FIELD_ID:
      return isSetNotificationKickedOut();
    case NOTIFICATIONSQUAREDELETE_FIELD_ID:
      return isSetNotificationSquareDelete();
    case NOTIFICATIONSQUARECHATDELETE_FIELD_ID:
      return isSetNotificationSquareChatDelete();
    case NOTIFICATIONMESSAGE_FIELD_ID:
      return isSetNotificationMessage();
    case NOTIFIEDUPDATESQUARECHATMEMBER_FIELD_ID:
      return isSetNotifiedUpdateSquareChatMember();
    case NOTIFIEDUPDATESQUAREAUTHORITY_FIELD_ID:
      return isSetNotifiedUpdateSquareAuthority();
    case NOTIFIEDUPDATESQUAREFEATURESET_FIELD_ID:
      return isSetNotifiedUpdateSquareFeatureSet();
    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  public function read( iprot : TProtocol) : Void {
    iprot.IncrementRecursionDepth();
    try
    {
      var field : TField;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case RECEIVEMESSAGE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.receiveMessage = new SquareEventReceiveMessage();
              this.receiveMessage.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case SENDMESSAGE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.sendMessage = new SquareEventSendMessage();
              this.sendMessage.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDJOINSQUARECHAT_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedJoinSquareChat = new SquareEventNotifiedJoinSquareChat();
              this.notifiedJoinSquareChat.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDINVITEINTOSQUARECHAT_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedInviteIntoSquareChat = new SquareEventNotifiedInviteIntoSquareChat();
              this.notifiedInviteIntoSquareChat.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDLEAVESQUARECHAT_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedLeaveSquareChat = new SquareEventNotifiedLeaveSquareChat();
              this.notifiedLeaveSquareChat.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDDESTROYMESSAGE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedDestroyMessage = new SquareEventNotifiedDestroyMessage();
              this.notifiedDestroyMessage.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDMARKASREAD_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedMarkAsRead = new SquareEventNotifiedMarkAsRead();
              this.notifiedMarkAsRead.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUAREMEMBERPROFILE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareMemberProfile = new SquareEventNotifiedUpdateSquareMemberProfile();
              this.notifiedUpdateSquareMemberProfile.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDKICKOUTFROMSQUARE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedKickoutFromSquare = new SquareEventNotifiedKickoutFromSquare();
              this.notifiedKickoutFromSquare.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDSHUTDOWNSQUARE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedShutdownSquare = new SquareEventNotifiedShutdownSquare();
              this.notifiedShutdownSquare.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDDELETESQUARECHAT_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedDeleteSquareChat = new SquareEventNotifiedDeleteSquareChat();
              this.notifiedDeleteSquareChat.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUARECHATPROFILENAME_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareChatProfileName = new SquareEventNotifiedUpdateSquareChatProfileName();
              this.notifiedUpdateSquareChatProfileName.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUARECHATPROFILEIMAGE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareChatProfileImage = new SquareEventNotifiedUpdateSquareChatProfileImage();
              this.notifiedUpdateSquareChatProfileImage.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUARESTATUS_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareStatus = new SquareEventNotifiedUpdateSquareStatus();
              this.notifiedUpdateSquareStatus.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUARECHATSTATUS_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareChatStatus = new SquareEventNotifiedUpdateSquareChatStatus();
              this.notifiedUpdateSquareChatStatus.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDCREATESQUAREMEMBER_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedCreateSquareMember = new SquareEventNotifiedCreateSquareMember();
              this.notifiedCreateSquareMember.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDCREATESQUARECHATMEMBER_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedCreateSquareChatMember = new SquareEventNotifiedCreateSquareChatMember();
              this.notifiedCreateSquareChatMember.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUAREMEMBERRELATION_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareMemberRelation = new SquareEventNotifiedUpdateSquareMemberRelation();
              this.notifiedUpdateSquareMemberRelation.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUARE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquare = new SquareEventNotifiedUpdateSquare();
              this.notifiedUpdateSquare.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUAREMEMBER_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareMember = new SquareEventNotifiedUpdateSquareMember();
              this.notifiedUpdateSquareMember.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUARECHAT_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareChat = new SquareEventNotifiedUpdateSquareChat();
              this.notifiedUpdateSquareChat.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFICATIONJOINREQUEST_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notificationJoinRequest = new SquareEventNotificationJoinRequest();
              this.notificationJoinRequest.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFICATIONJOINED_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notificationJoined = new SquareEventNotificationMemberUpdate();
              this.notificationJoined.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFICATIONPROMOTECOADMIN_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notificationPromoteCoadmin = new SquareEventNotificationMemberUpdate();
              this.notificationPromoteCoadmin.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFICATIONPROMOTEADMIN_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notificationPromoteAdmin = new SquareEventNotificationMemberUpdate();
              this.notificationPromoteAdmin.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFICATIONDEMOTEMEMBER_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notificationDemoteMember = new SquareEventNotificationMemberUpdate();
              this.notificationDemoteMember.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFICATIONKICKEDOUT_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notificationKickedOut = new SquareEventNotificationMemberUpdate();
              this.notificationKickedOut.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFICATIONSQUAREDELETE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notificationSquareDelete = new SquareEventNotificationSquareDelete();
              this.notificationSquareDelete.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFICATIONSQUARECHATDELETE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notificationSquareChatDelete = new SquareEventNotificationSquareChatDelete();
              this.notificationSquareChatDelete.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFICATIONMESSAGE_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notificationMessage = new SquareEventNotificationMessage();
              this.notificationMessage.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUARECHATMEMBER_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareChatMember = new SquareEventNotifiedUpdateSquareChatMember();
              this.notifiedUpdateSquareChatMember.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUAREAUTHORITY_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareAuthority = new SquareEventNotifiedUpdateSquareAuthority();
              this.notifiedUpdateSquareAuthority.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NOTIFIEDUPDATESQUAREFEATURESET_FIELD_ID:
            if (field.type == TType.STRUCT) {
              this.notifiedUpdateSquareFeatureSet = new SquareEventNotifiedUpdateSquareFeatureSet();
              this.notifiedUpdateSquareFeatureSet.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      iprot.DecrementRecursionDepth();
    }
    catch(e:Dynamic)
    {
      iprot.DecrementRecursionDepth();
      throw e;
    }

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public function write(oprot:TProtocol) : Void {
    validate();
    oprot.IncrementRecursionDepth();
    try
    {
      oprot.writeStructBegin(STRUCT_DESC);
      if (this.receiveMessage != null) {
        oprot.writeFieldBegin(RECEIVE_MESSAGE_FIELD_DESC);
        this.receiveMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.sendMessage != null) {
        oprot.writeFieldBegin(SEND_MESSAGE_FIELD_DESC);
        this.sendMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedJoinSquareChat != null) {
        oprot.writeFieldBegin(NOTIFIED_JOIN_SQUARE_CHAT_FIELD_DESC);
        this.notifiedJoinSquareChat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedInviteIntoSquareChat != null) {
        oprot.writeFieldBegin(NOTIFIED_INVITE_INTO_SQUARE_CHAT_FIELD_DESC);
        this.notifiedInviteIntoSquareChat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedLeaveSquareChat != null) {
        oprot.writeFieldBegin(NOTIFIED_LEAVE_SQUARE_CHAT_FIELD_DESC);
        this.notifiedLeaveSquareChat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedDestroyMessage != null) {
        oprot.writeFieldBegin(NOTIFIED_DESTROY_MESSAGE_FIELD_DESC);
        this.notifiedDestroyMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedMarkAsRead != null) {
        oprot.writeFieldBegin(NOTIFIED_MARK_AS_READ_FIELD_DESC);
        this.notifiedMarkAsRead.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareMemberProfile != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE_FIELD_DESC);
        this.notifiedUpdateSquareMemberProfile.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquare != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_FIELD_DESC);
        this.notifiedUpdateSquare.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareMember != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_MEMBER_FIELD_DESC);
        this.notifiedUpdateSquareMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareChat != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_CHAT_FIELD_DESC);
        this.notifiedUpdateSquareChat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareChatMember != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER_FIELD_DESC);
        this.notifiedUpdateSquareChatMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareAuthority != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_AUTHORITY_FIELD_DESC);
        this.notifiedUpdateSquareAuthority.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareStatus != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_STATUS_FIELD_DESC);
        this.notifiedUpdateSquareStatus.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareChatStatus != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_CHAT_STATUS_FIELD_DESC);
        this.notifiedUpdateSquareChatStatus.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedCreateSquareMember != null) {
        oprot.writeFieldBegin(NOTIFIED_CREATE_SQUARE_MEMBER_FIELD_DESC);
        this.notifiedCreateSquareMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedCreateSquareChatMember != null) {
        oprot.writeFieldBegin(NOTIFIED_CREATE_SQUARE_CHAT_MEMBER_FIELD_DESC);
        this.notifiedCreateSquareChatMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareMemberRelation != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION_FIELD_DESC);
        this.notifiedUpdateSquareMemberRelation.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedShutdownSquare != null) {
        oprot.writeFieldBegin(NOTIFIED_SHUTDOWN_SQUARE_FIELD_DESC);
        this.notifiedShutdownSquare.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedKickoutFromSquare != null) {
        oprot.writeFieldBegin(NOTIFIED_KICKOUT_FROM_SQUARE_FIELD_DESC);
        this.notifiedKickoutFromSquare.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedDeleteSquareChat != null) {
        oprot.writeFieldBegin(NOTIFIED_DELETE_SQUARE_CHAT_FIELD_DESC);
        this.notifiedDeleteSquareChat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notificationJoinRequest != null) {
        oprot.writeFieldBegin(NOTIFICATION_JOIN_REQUEST_FIELD_DESC);
        this.notificationJoinRequest.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notificationJoined != null) {
        oprot.writeFieldBegin(NOTIFICATION_JOINED_FIELD_DESC);
        this.notificationJoined.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notificationPromoteCoadmin != null) {
        oprot.writeFieldBegin(NOTIFICATION_PROMOTE_COADMIN_FIELD_DESC);
        this.notificationPromoteCoadmin.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notificationPromoteAdmin != null) {
        oprot.writeFieldBegin(NOTIFICATION_PROMOTE_ADMIN_FIELD_DESC);
        this.notificationPromoteAdmin.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notificationDemoteMember != null) {
        oprot.writeFieldBegin(NOTIFICATION_DEMOTE_MEMBER_FIELD_DESC);
        this.notificationDemoteMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notificationKickedOut != null) {
        oprot.writeFieldBegin(NOTIFICATION_KICKED_OUT_FIELD_DESC);
        this.notificationKickedOut.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notificationSquareDelete != null) {
        oprot.writeFieldBegin(NOTIFICATION_SQUARE_DELETE_FIELD_DESC);
        this.notificationSquareDelete.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notificationSquareChatDelete != null) {
        oprot.writeFieldBegin(NOTIFICATION_SQUARE_CHAT_DELETE_FIELD_DESC);
        this.notificationSquareChatDelete.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notificationMessage != null) {
        oprot.writeFieldBegin(NOTIFICATION_MESSAGE_FIELD_DESC);
        this.notificationMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareChatProfileName != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME_FIELD_DESC);
        this.notifiedUpdateSquareChatProfileName.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareChatProfileImage != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE_FIELD_DESC);
        this.notifiedUpdateSquareChatProfileImage.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.notifiedUpdateSquareFeatureSet != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_FEATURE_SET_FIELD_DESC);
        this.notifiedUpdateSquareFeatureSet.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
      oprot.DecrementRecursionDepth();
    }
    catch(e:Dynamic)
    {
      oprot.DecrementRecursionDepth();
      throw e;
    }
  }

  public function toString() : String {
    var ret : String = "SquareEventPayload(";
    var first : Bool = true;

    ret += "receiveMessage:";
    if (this.receiveMessage == null) {
      ret += "null";
    } else {
      ret += this.receiveMessage;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "sendMessage:";
    if (this.sendMessage == null) {
      ret += "null";
    } else {
      ret += this.sendMessage;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedJoinSquareChat:";
    if (this.notifiedJoinSquareChat == null) {
      ret += "null";
    } else {
      ret += this.notifiedJoinSquareChat;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedInviteIntoSquareChat:";
    if (this.notifiedInviteIntoSquareChat == null) {
      ret += "null";
    } else {
      ret += this.notifiedInviteIntoSquareChat;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedLeaveSquareChat:";
    if (this.notifiedLeaveSquareChat == null) {
      ret += "null";
    } else {
      ret += this.notifiedLeaveSquareChat;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedDestroyMessage:";
    if (this.notifiedDestroyMessage == null) {
      ret += "null";
    } else {
      ret += this.notifiedDestroyMessage;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedMarkAsRead:";
    if (this.notifiedMarkAsRead == null) {
      ret += "null";
    } else {
      ret += this.notifiedMarkAsRead;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareMemberProfile:";
    if (this.notifiedUpdateSquareMemberProfile == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareMemberProfile;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedKickoutFromSquare:";
    if (this.notifiedKickoutFromSquare == null) {
      ret += "null";
    } else {
      ret += this.notifiedKickoutFromSquare;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedShutdownSquare:";
    if (this.notifiedShutdownSquare == null) {
      ret += "null";
    } else {
      ret += this.notifiedShutdownSquare;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedDeleteSquareChat:";
    if (this.notifiedDeleteSquareChat == null) {
      ret += "null";
    } else {
      ret += this.notifiedDeleteSquareChat;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareChatProfileName:";
    if (this.notifiedUpdateSquareChatProfileName == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareChatProfileName;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareChatProfileImage:";
    if (this.notifiedUpdateSquareChatProfileImage == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareChatProfileImage;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareStatus:";
    if (this.notifiedUpdateSquareStatus == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareStatus;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareChatStatus:";
    if (this.notifiedUpdateSquareChatStatus == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareChatStatus;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedCreateSquareMember:";
    if (this.notifiedCreateSquareMember == null) {
      ret += "null";
    } else {
      ret += this.notifiedCreateSquareMember;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedCreateSquareChatMember:";
    if (this.notifiedCreateSquareChatMember == null) {
      ret += "null";
    } else {
      ret += this.notifiedCreateSquareChatMember;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareMemberRelation:";
    if (this.notifiedUpdateSquareMemberRelation == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareMemberRelation;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquare:";
    if (this.notifiedUpdateSquare == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquare;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareMember:";
    if (this.notifiedUpdateSquareMember == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareMember;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareChat:";
    if (this.notifiedUpdateSquareChat == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareChat;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notificationJoinRequest:";
    if (this.notificationJoinRequest == null) {
      ret += "null";
    } else {
      ret += this.notificationJoinRequest;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notificationJoined:";
    if (this.notificationJoined == null) {
      ret += "null";
    } else {
      ret += this.notificationJoined;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notificationPromoteCoadmin:";
    if (this.notificationPromoteCoadmin == null) {
      ret += "null";
    } else {
      ret += this.notificationPromoteCoadmin;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notificationPromoteAdmin:";
    if (this.notificationPromoteAdmin == null) {
      ret += "null";
    } else {
      ret += this.notificationPromoteAdmin;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notificationDemoteMember:";
    if (this.notificationDemoteMember == null) {
      ret += "null";
    } else {
      ret += this.notificationDemoteMember;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notificationKickedOut:";
    if (this.notificationKickedOut == null) {
      ret += "null";
    } else {
      ret += this.notificationKickedOut;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notificationSquareDelete:";
    if (this.notificationSquareDelete == null) {
      ret += "null";
    } else {
      ret += this.notificationSquareDelete;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notificationSquareChatDelete:";
    if (this.notificationSquareChatDelete == null) {
      ret += "null";
    } else {
      ret += this.notificationSquareChatDelete;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notificationMessage:";
    if (this.notificationMessage == null) {
      ret += "null";
    } else {
      ret += this.notificationMessage;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareChatMember:";
    if (this.notifiedUpdateSquareChatMember == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareChatMember;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareAuthority:";
    if (this.notifiedUpdateSquareAuthority == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareAuthority;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "notifiedUpdateSquareFeatureSet:";
    if (this.notifiedUpdateSquareFeatureSet == null) {
      ret += "null";
    } else {
      ret += this.notifiedUpdateSquareFeatureSet;
    }
    first = false;
    ret += ")";
    return ret;
  }

  public function validate() : Void {
    // check for required fields
    // check that fields of type enum have valid values
  }

}

