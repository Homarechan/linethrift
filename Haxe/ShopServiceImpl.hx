/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;



class ShopServiceImpl implements ShopService {

  public function new( iprot : TProtocol, oprot : TProtocol = null)
  {
    iprot_ = iprot;
    if (oprot == null) {
      oprot_ = iprot;
    } else {
      oprot_ = oprot;
    }
  }

  private var iprot_ : TProtocol;
  private var oprot_ : TProtocol;
  private var seqid_ : Int;

  public function getInputProtocol() : TProtocol
  {
    return this.iprot_;
  }

  public function getOutputProtocol() : TProtocol
  {
    return this.oprot_;
  }

  public function buyCoinProduct(paymentReservation : PaymentReservation) : Void {
    oprot_.writeMessageBegin(new TMessage("buyCoinProduct", TMessageType.CALL, seqid_));
    var args : BuyCoinProduct_args = new BuyCoinProduct_args();
    args.paymentReservation = paymentReservation;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : BuyCoinProduct_result = new BuyCoinProduct_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.e != null) {
        throw result.e;
      }
      return;
    });
  }

  public function buyFreeProduct(receiverMid : String, productId : String, messageTemplate : haxe.Int32, language : String, country : String, packageId : haxe.Int64) : Void {
    oprot_.writeMessageBegin(new TMessage("buyFreeProduct", TMessageType.CALL, seqid_));
    var args : BuyFreeProduct_args = new BuyFreeProduct_args();
    args.receiverMid = receiverMid;
    args.productId = productId;
    args.messageTemplate = messageTemplate;
    args.language = language;
    args.country = country;
    args.packageId = packageId;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : BuyFreeProduct_result = new BuyFreeProduct_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.e != null) {
        throw result.e;
      }
      return;
    });
  }

  public function buyMustbuyProduct(receiverMid : String, productId : String, messageTemplate : haxe.Int32, language : String, country : String, packageId : haxe.Int64, serialNumber : String) : Void {
    oprot_.writeMessageBegin(new TMessage("buyMustbuyProduct", TMessageType.CALL, seqid_));
    var args : BuyMustbuyProduct_args = new BuyMustbuyProduct_args();
    args.receiverMid = receiverMid;
    args.productId = productId;
    args.messageTemplate = messageTemplate;
    args.language = language;
    args.country = country;
    args.packageId = packageId;
    args.serialNumber = serialNumber;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : BuyMustbuyProduct_result = new BuyMustbuyProduct_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.e != null) {
        throw result.e;
      }
      return;
    });
  }

  public function checkCanReceivePresent(recipientMid : String, packageId : haxe.Int64, language : String, country : String) : Void {
    oprot_.writeMessageBegin(new TMessage("checkCanReceivePresent", TMessageType.CALL, seqid_));
    var args : CheckCanReceivePresent_args = new CheckCanReceivePresent_args();
    args.recipientMid = recipientMid;
    args.packageId = packageId;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : CheckCanReceivePresent_result = new CheckCanReceivePresent_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.e != null) {
        throw result.e;
      }
      return;
    });
  }

  public function getActivePurchases(start : haxe.Int64, size : haxe.Int32, language : String, country : String) : ProductList {
    oprot_.writeMessageBegin(new TMessage("getActivePurchases", TMessageType.CALL, seqid_));
    var args : GetActivePurchases_args = new GetActivePurchases_args();
    args.start = start;
    args.size = size;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetActivePurchases_result = new GetActivePurchases_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getActivePurchases failed: unknown result");
    });
    return retval;
  }

  public function getActivePurchaseVersions(start : haxe.Int64, size : haxe.Int32, language : String, country : String) : ProductSimpleList {
    oprot_.writeMessageBegin(new TMessage("getActivePurchaseVersions", TMessageType.CALL, seqid_));
    var args : GetActivePurchaseVersions_args = new GetActivePurchaseVersions_args();
    args.start = start;
    args.size = size;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductSimpleList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetActivePurchaseVersions_result = new GetActivePurchaseVersions_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getActivePurchaseVersions failed: unknown result");
    });
    return retval;
  }

  public function getCoinProducts(appStoreCode : Int, country : String, language : String) : List< CoinProductItem> {
    oprot_.writeMessageBegin(new TMessage("getCoinProducts", TMessageType.CALL, seqid_));
    var args : GetCoinProducts_args = new GetCoinProducts_args();
    args.appStoreCode = appStoreCode;
    args.country = country;
    args.language = language;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< CoinProductItem>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetCoinProducts_result = new GetCoinProducts_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getCoinProducts failed: unknown result");
    });
    return retval;
  }

  public function getCoinProductsByPgCode(appStoreCode : Int, pgCode : Int, country : String, language : String) : List< CoinProductItem> {
    oprot_.writeMessageBegin(new TMessage("getCoinProductsByPgCode", TMessageType.CALL, seqid_));
    var args : GetCoinProductsByPgCode_args = new GetCoinProductsByPgCode_args();
    args.appStoreCode = appStoreCode;
    args.pgCode = pgCode;
    args.country = country;
    args.language = language;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< CoinProductItem>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetCoinProductsByPgCode_result = new GetCoinProductsByPgCode_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getCoinProductsByPgCode failed: unknown result");
    });
    return retval;
  }

  public function getCoinPurchaseHistory(request : CoinHistoryCondition) : CoinHistoryResult {
    oprot_.writeMessageBegin(new TMessage("getCoinPurchaseHistory", TMessageType.CALL, seqid_));
    var args : GetCoinPurchaseHistory_args = new GetCoinPurchaseHistory_args();
    args.request = request;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : CoinHistoryResult;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetCoinPurchaseHistory_result = new GetCoinPurchaseHistory_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getCoinPurchaseHistory failed: unknown result");
    });
    return retval;
  }

  public function getCoinUseAndRefundHistory(request : CoinHistoryCondition) : CoinHistoryResult {
    oprot_.writeMessageBegin(new TMessage("getCoinUseAndRefundHistory", TMessageType.CALL, seqid_));
    var args : GetCoinUseAndRefundHistory_args = new GetCoinUseAndRefundHistory_args();
    args.request = request;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : CoinHistoryResult;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetCoinUseAndRefundHistory_result = new GetCoinUseAndRefundHistory_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getCoinUseAndRefundHistory failed: unknown result");
    });
    return retval;
  }

  public function getDownloads(start : haxe.Int64, size : haxe.Int32, language : String, country : String) : ProductList {
    oprot_.writeMessageBegin(new TMessage("getDownloads", TMessageType.CALL, seqid_));
    var args : GetDownloads_args = new GetDownloads_args();
    args.start = start;
    args.size = size;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetDownloads_result = new GetDownloads_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getDownloads failed: unknown result");
    });
    return retval;
  }

  public function getEventPackages(start : haxe.Int64, size : haxe.Int32, language : String, country : String) : ProductList {
    oprot_.writeMessageBegin(new TMessage("getEventPackages", TMessageType.CALL, seqid_));
    var args : GetEventPackages_args = new GetEventPackages_args();
    args.start = start;
    args.size = size;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetEventPackages_result = new GetEventPackages_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getEventPackages failed: unknown result");
    });
    return retval;
  }

  public function getNewlyReleasedPackages(start : haxe.Int64, size : haxe.Int32, language : String, country : String) : ProductList {
    oprot_.writeMessageBegin(new TMessage("getNewlyReleasedPackages", TMessageType.CALL, seqid_));
    var args : GetNewlyReleasedPackages_args = new GetNewlyReleasedPackages_args();
    args.start = start;
    args.size = size;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetNewlyReleasedPackages_result = new GetNewlyReleasedPackages_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getNewlyReleasedPackages failed: unknown result");
    });
    return retval;
  }

  public function getPopularPackages(start : haxe.Int64, size : haxe.Int32, language : String, country : String) : ProductList {
    oprot_.writeMessageBegin(new TMessage("getPopularPackages", TMessageType.CALL, seqid_));
    var args : GetPopularPackages_args = new GetPopularPackages_args();
    args.start = start;
    args.size = size;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPopularPackages_result = new GetPopularPackages_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPopularPackages failed: unknown result");
    });
    return retval;
  }

  public function getPresentsReceived(start : haxe.Int64, size : haxe.Int32, language : String, country : String) : ProductList {
    oprot_.writeMessageBegin(new TMessage("getPresentsReceived", TMessageType.CALL, seqid_));
    var args : GetPresentsReceived_args = new GetPresentsReceived_args();
    args.start = start;
    args.size = size;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPresentsReceived_result = new GetPresentsReceived_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPresentsReceived failed: unknown result");
    });
    return retval;
  }

  public function getPresentsSent(start : haxe.Int64, size : haxe.Int32, language : String, country : String) : ProductList {
    oprot_.writeMessageBegin(new TMessage("getPresentsSent", TMessageType.CALL, seqid_));
    var args : GetPresentsSent_args = new GetPresentsSent_args();
    args.start = start;
    args.size = size;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPresentsSent_result = new GetPresentsSent_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPresentsSent failed: unknown result");
    });
    return retval;
  }

  public function getProduct(packageID : haxe.Int64, language : String, country : String) : Product {
    oprot_.writeMessageBegin(new TMessage("getProduct", TMessageType.CALL, seqid_));
    var args : GetProduct_args = new GetProduct_args();
    args.packageID = packageID;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Product;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetProduct_result = new GetProduct_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getProduct failed: unknown result");
    });
    return retval;
  }

  public function getProductList(productIdList : List< String>, language : String, country : String) : ProductList {
    oprot_.writeMessageBegin(new TMessage("getProductList", TMessageType.CALL, seqid_));
    var args : GetProductList_args = new GetProductList_args();
    args.productIdList = productIdList;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetProductList_result = new GetProductList_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getProductList failed: unknown result");
    });
    return retval;
  }

  public function getProductListWithCarrier(productIdList : List< String>, language : String, country : String, carrierCode : String) : ProductList {
    oprot_.writeMessageBegin(new TMessage("getProductListWithCarrier", TMessageType.CALL, seqid_));
    var args : GetProductListWithCarrier_args = new GetProductListWithCarrier_args();
    args.productIdList = productIdList;
    args.language = language;
    args.country = country;
    args.carrierCode = carrierCode;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetProductListWithCarrier_result = new GetProductListWithCarrier_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getProductListWithCarrier failed: unknown result");
    });
    return retval;
  }

  public function getProductWithCarrier(packageID : haxe.Int64, language : String, country : String, carrierCode : String) : Product {
    oprot_.writeMessageBegin(new TMessage("getProductWithCarrier", TMessageType.CALL, seqid_));
    var args : GetProductWithCarrier_args = new GetProductWithCarrier_args();
    args.packageID = packageID;
    args.language = language;
    args.country = country;
    args.carrierCode = carrierCode;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Product;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetProductWithCarrier_result = new GetProductWithCarrier_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getProductWithCarrier failed: unknown result");
    });
    return retval;
  }

  public function getPurchaseHistory(start : haxe.Int64, size : haxe.Int32, language : String, country : String) : ProductList {
    oprot_.writeMessageBegin(new TMessage("getPurchaseHistory", TMessageType.CALL, seqid_));
    var args : GetPurchaseHistory_args = new GetPurchaseHistory_args();
    args.start = start;
    args.size = size;
    args.language = language;
    args.country = country;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ProductList;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPurchaseHistory_result = new GetPurchaseHistory_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPurchaseHistory failed: unknown result");
    });
    return retval;
  }

  public function getTotalBalance(appStoreCode : Int) : Coin {
    oprot_.writeMessageBegin(new TMessage("getTotalBalance", TMessageType.CALL, seqid_));
    var args : GetTotalBalance_args = new GetTotalBalance_args();
    args.appStoreCode = appStoreCode;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Coin;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetTotalBalance_result = new GetTotalBalance_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getTotalBalance failed: unknown result");
    });
    return retval;
  }

  public function notifyDownloaded(packageId : haxe.Int64, language : String) : haxe.Int64 {
    oprot_.writeMessageBegin(new TMessage("notifyDownloaded", TMessageType.CALL, seqid_));
    var args : NotifyDownloaded_args = new NotifyDownloaded_args();
    args.packageId = packageId;
    args.language = language;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : haxe.Int64;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : NotifyDownloaded_result = new NotifyDownloaded_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "notifyDownloaded failed: unknown result");
    });
    return retval;
  }

  public function reserveCoinPurchase(request : CoinPurchaseReservation) : PaymentReservationResult {
    oprot_.writeMessageBegin(new TMessage("reserveCoinPurchase", TMessageType.CALL, seqid_));
    var args : ReserveCoinPurchase_args = new ReserveCoinPurchase_args();
    args.request = request;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PaymentReservationResult;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : ReserveCoinPurchase_result = new ReserveCoinPurchase_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "reserveCoinPurchase failed: unknown result");
    });
    return retval;
  }

  public function reservePayment(paymentReservation : PaymentReservation) : PaymentReservationResult {
    oprot_.writeMessageBegin(new TMessage("reservePayment", TMessageType.CALL, seqid_));
    var args : ReservePayment_args = new ReservePayment_args();
    args.paymentReservation = paymentReservation;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PaymentReservationResult;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : ReservePayment_result = new ReservePayment_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "reservePayment failed: unknown result");
    });
    return retval;
  }

}
