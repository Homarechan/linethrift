/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;



class CallServiceImpl implements CallService {

  public function new( iprot : TProtocol, oprot : TProtocol = null)
  {
    iprot_ = iprot;
    if (oprot == null) {
      oprot_ = iprot;
    } else {
      oprot_ = oprot;
    }
  }

  private var iprot_ : TProtocol;
  private var oprot_ : TProtocol;
  private var seqid_ : Int;

  public function getInputProtocol() : TProtocol
  {
    return this.iprot_;
  }

  public function getOutputProtocol() : TProtocol
  {
    return this.oprot_;
  }

  public function getUserStatus(mid : String) : Int {
    oprot_.writeMessageBegin(new TMessage("getUserStatus", TMessageType.CALL, seqid_));
    var args : GetUserStatus_args = new GetUserStatus_args();
    args.mid = mid;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Int;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetUserStatus_result = new GetUserStatus_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getUserStatus failed: unknown result");
    });
    return retval;
  }

  public function updateProfileAttributeForChannel(profileAttribute : Int, value : String) : Void {
    oprot_.writeMessageBegin(new TMessage("updateProfileAttributeForChannel", TMessageType.CALL, seqid_));
    var args : UpdateProfileAttributeForChannel_args = new UpdateProfileAttributeForChannel_args();
    args.profileAttribute = profileAttribute;
    args.value = value;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : UpdateProfileAttributeForChannel_result = new UpdateProfileAttributeForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.e != null) {
        throw result.e;
      }
      return;
    });
  }

  public function updateExtendedProfileAttribute(attr : Int, extendedProfile : ExtendedProfile) : Void {
    oprot_.writeMessageBegin(new TMessage("updateExtendedProfileAttribute", TMessageType.CALL, seqid_));
    var args : UpdateExtendedProfileAttribute_args = new UpdateExtendedProfileAttribute_args();
    args.attr = attr;
    args.extendedProfile = extendedProfile;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : UpdateExtendedProfileAttribute_result = new UpdateExtendedProfileAttribute_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.e != null) {
        throw result.e;
      }
      return;
    });
  }

  public function getAllSimpleChannelContacts(statusSticonFallbackDisabled : Bool) : List< SimpleChannelContact> {
    oprot_.writeMessageBegin(new TMessage("getAllSimpleChannelContacts", TMessageType.CALL, seqid_));
    var args : GetAllSimpleChannelContacts_args = new GetAllSimpleChannelContacts_args();
    args.statusSticonFallbackDisabled = statusSticonFallbackDisabled;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< SimpleChannelContact>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetAllSimpleChannelContacts_result = new GetAllSimpleChannelContacts_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getAllSimpleChannelContacts failed: unknown result");
    });
    return retval;
  }

  public function getUserIdentities() : IntMap< String> {
    oprot_.writeMessageBegin(new TMessage("getUserIdentities", TMessageType.CALL, seqid_));
    var args : GetUserIdentities_args = new GetUserIdentities_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : IntMap< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetUserIdentities_result = new GetUserIdentities_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getUserIdentities failed: unknown result");
    });
    return retval;
  }

  public function markPaidCallAd(dialedNumber : String, language : String, disableCallerId : Bool) : PaidCallDialing {
    oprot_.writeMessageBegin(new TMessage("markPaidCallAd", TMessageType.CALL, seqid_));
    var args : MarkPaidCallAd_args = new MarkPaidCallAd_args();
    args.dialedNumber = dialedNumber;
    args.language = language;
    args.disableCallerId = disableCallerId;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PaidCallDialing;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : MarkPaidCallAd_result = new MarkPaidCallAd_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "markPaidCallAd failed: unknown result");
    });
    return retval;
  }

  public function isGroupMember(groupId : String) : Bool {
    oprot_.writeMessageBegin(new TMessage("isGroupMember", TMessageType.CALL, seqid_));
    var args : IsGroupMember_args = new IsGroupMember_args();
    args.groupId = groupId;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Bool;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : IsGroupMember_result = new IsGroupMember_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "isGroupMember failed: unknown result");
    });
    return retval;
  }

  public function getPhoneInfoFromPhoneNumber(region : String, phoneNumber : String) : PhoneInfoForChannel {
    oprot_.writeMessageBegin(new TMessage("getPhoneInfoFromPhoneNumber", TMessageType.CALL, seqid_));
    var args : GetPhoneInfoFromPhoneNumber_args = new GetPhoneInfoFromPhoneNumber_args();
    args.region = region;
    args.phoneNumber = phoneNumber;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PhoneInfoForChannel;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPhoneInfoFromPhoneNumber_result = new GetPhoneInfoFromPhoneNumber_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPhoneInfoFromPhoneNumber failed: unknown result");
    });
    return retval;
  }

  public function redeemPaidCallVoucher(serial : String, language : String) : PaidCallRedeemResult {
    oprot_.writeMessageBegin(new TMessage("redeemPaidCallVoucher", TMessageType.CALL, seqid_));
    var args : RedeemPaidCallVoucher_args = new RedeemPaidCallVoucher_args();
    args.serial = serial;
    args.language = language;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PaidCallRedeemResult;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : RedeemPaidCallVoucher_result = new RedeemPaidCallVoucher_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "redeemPaidCallVoucher failed: unknown result");
    });
    return retval;
  }

  public function getPreferredDisplayName(mids : List< String>) : StringMap< String> {
    oprot_.writeMessageBegin(new TMessage("getPreferredDisplayName", TMessageType.CALL, seqid_));
    var args : GetPreferredDisplayName_args = new GetPreferredDisplayName_args();
    args.mids = mids;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : StringMap< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPreferredDisplayName_result = new GetPreferredDisplayName_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPreferredDisplayName failed: unknown result");
    });
    return retval;
  }

  public function getContactsForChannel(ids : List< String>) : List< Contact> {
    oprot_.writeMessageBegin(new TMessage("getContactsForChannel", TMessageType.CALL, seqid_));
    var args : GetContactsForChannel_args = new GetContactsForChannel_args();
    args.ids = ids;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< Contact>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetContactsForChannel_result = new GetContactsForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getContactsForChannel failed: unknown result");
    });
    return retval;
  }

  public function getCallCreditProducts(appStoreCode : Int, pgCode : Int, country : String, language : String) : List< CoinProductItem> {
    oprot_.writeMessageBegin(new TMessage("getCallCreditProducts", TMessageType.CALL, seqid_));
    var args : GetCallCreditProducts_args = new GetCallCreditProducts_args();
    args.appStoreCode = appStoreCode;
    args.pgCode = pgCode;
    args.country = country;
    args.language = language;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< CoinProductItem>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetCallCreditProducts_result = new GetCallCreditProducts_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getCallCreditProducts failed: unknown result");
    });
    return retval;
  }

  public function getCompactContacts(lastModifiedTimestamp : haxe.Int64) : List< CompactContact> {
    oprot_.writeMessageBegin(new TMessage("getCompactContacts", TMessageType.CALL, seqid_));
    var args : GetCompactContacts_args = new GetCompactContacts_args();
    args.lastModifiedTimestamp = lastModifiedTimestamp;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< CompactContact>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetCompactContacts_result = new GetCompactContacts_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getCompactContacts failed: unknown result");
    });
    return retval;
  }

  public function notifyNotiCenterEvent(event : NotiCenterEventData) : Void {
    oprot_.writeMessageBegin(new TMessage("notifyNotiCenterEvent", TMessageType.CALL, seqid_));
    var args : NotifyNotiCenterEvent_args = new NotifyNotiCenterEvent_args();
    args.event = event;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : NotifyNotiCenterEvent_result = new NotifyNotiCenterEvent_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.e != null) {
        throw result.e;
      }
      return;
    });
  }

  public function isInContact(mid : String) : Bool {
    oprot_.writeMessageBegin(new TMessage("isInContact", TMessageType.CALL, seqid_));
    var args : IsInContact_args = new IsInContact_args();
    args.mid = mid;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Bool;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : IsInContact_result = new IsInContact_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "isInContact failed: unknown result");
    });
    return retval;
  }

  public function lookupGroupMembers(groupId : String, mids : List< String>) : List< SimpleChannelContact> {
    oprot_.writeMessageBegin(new TMessage("lookupGroupMembers", TMessageType.CALL, seqid_));
    var args : LookupGroupMembers_args = new LookupGroupMembers_args();
    args.groupId = groupId;
    args.mids = mids;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< SimpleChannelContact>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : LookupGroupMembers_result = new LookupGroupMembers_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "lookupGroupMembers failed: unknown result");
    });
    return retval;
  }

  public function getRoomInformation(roomMid : String) : Room {
    oprot_.writeMessageBegin(new TMessage("getRoomInformation", TMessageType.CALL, seqid_));
    var args : GetRoomInformation_args = new GetRoomInformation_args();
    args.roomMid = roomMid;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Room;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetRoomInformation_result = new GetRoomInformation_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getRoomInformation failed: unknown result");
    });
    return retval;
  }

  public function getGroupCall(chatMid : String) : GroupCall {
    oprot_.writeMessageBegin(new TMessage("getGroupCall", TMessageType.CALL, seqid_));
    var args : GetGroupCall_args = new GetGroupCall_args();
    args.chatMid = chatMid;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : GroupCall;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetGroupCall_result = new GetGroupCall_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getGroupCall failed: unknown result");
    });
    return retval;
  }

  public function isAllowSecondaryDeviceLogin() : Bool {
    oprot_.writeMessageBegin(new TMessage("isAllowSecondaryDeviceLogin", TMessageType.CALL, seqid_));
    var args : IsAllowSecondaryDeviceLogin_args = new IsAllowSecondaryDeviceLogin_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Bool;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : IsAllowSecondaryDeviceLogin_result = new IsAllowSecondaryDeviceLogin_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "isAllowSecondaryDeviceLogin failed: unknown result");
    });
    return retval;
  }

  public function getPrimaryClientForChannel() : SimpleChannelClient {
    oprot_.writeMessageBegin(new TMessage("getPrimaryClientForChannel", TMessageType.CALL, seqid_));
    var args : GetPrimaryClientForChannel_args = new GetPrimaryClientForChannel_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : SimpleChannelClient;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPrimaryClientForChannel_result = new GetPrimaryClientForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPrimaryClientForChannel failed: unknown result");
    });
    return retval;
  }

  public function createRoomWithBuddy(reqSeq : haxe.Int32, buddyMid : String, contactIds : List< String>) : Room {
    oprot_.writeMessageBegin(new TMessage("createRoomWithBuddy", TMessageType.CALL, seqid_));
    var args : CreateRoomWithBuddy_args = new CreateRoomWithBuddy_args();
    args.reqSeq = reqSeq;
    args.buddyMid = buddyMid;
    args.contactIds = contactIds;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Room;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : CreateRoomWithBuddy_result = new CreateRoomWithBuddy_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "createRoomWithBuddy failed: unknown result");
    });
    return retval;
  }

  public function getDisplayName(mid : String) : String {
    oprot_.writeMessageBegin(new TMessage("getDisplayName", TMessageType.CALL, seqid_));
    var args : GetDisplayName_args = new GetDisplayName_args();
    args.mid = mid;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : String;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetDisplayName_result = new GetDisplayName_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getDisplayName failed: unknown result");
    });
    return retval;
  }

  public function getPaidCallMetadata(language : String) : PaidCallMetadataResult {
    oprot_.writeMessageBegin(new TMessage("getPaidCallMetadata", TMessageType.CALL, seqid_));
    var args : GetPaidCallMetadata_args = new GetPaidCallMetadata_args();
    args.language = language;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PaidCallMetadataResult;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPaidCallMetadata_result = new GetPaidCallMetadata_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPaidCallMetadata failed: unknown result");
    });
    return retval;
  }

  public function getMid() : String {
    oprot_.writeMessageBegin(new TMessage("getMid", TMessageType.CALL, seqid_));
    var args : GetMid_args = new GetMid_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : String;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetMid_result = new GetMid_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getMid failed: unknown result");
    });
    return retval;
  }

  public function getUserCountryForBilling(country : String, remoteIp : String) : String {
    oprot_.writeMessageBegin(new TMessage("getUserCountryForBilling", TMessageType.CALL, seqid_));
    var args : GetUserCountryForBilling_args = new GetUserCountryForBilling_args();
    args.country = country;
    args.remoteIp = remoteIp;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : String;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetUserCountryForBilling_result = new GetUserCountryForBilling_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getUserCountryForBilling failed: unknown result");
    });
    return retval;
  }

  public function getFavoriteGroupIdsForChannel() : List< String> {
    oprot_.writeMessageBegin(new TMessage("getFavoriteGroupIdsForChannel", TMessageType.CALL, seqid_));
    var args : GetFavoriteGroupIdsForChannel_args = new GetFavoriteGroupIdsForChannel_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetFavoriteGroupIdsForChannel_result = new GetFavoriteGroupIdsForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getFavoriteGroupIdsForChannel failed: unknown result");
    });
    return retval;
  }

  public function getPaidCallHistory(start : haxe.Int64, size : haxe.Int32, language : String) : PaidCallHistoryResult {
    oprot_.writeMessageBegin(new TMessage("getPaidCallHistory", TMessageType.CALL, seqid_));
    var args : GetPaidCallHistory_args = new GetPaidCallHistory_args();
    args.start = start;
    args.size = size;
    args.language = language;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PaidCallHistoryResult;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPaidCallHistory_result = new GetPaidCallHistory_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPaidCallHistory failed: unknown result");
    });
    return retval;
  }

  public function sendPinCodeOperation(verifier : String) : Void {
    oprot_.writeMessageBegin(new TMessage("sendPinCodeOperation", TMessageType.CALL, seqid_));
    var args : SendPinCodeOperation_args = new SendPinCodeOperation_args();
    args.verifier = verifier;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : SendPinCodeOperation_result = new SendPinCodeOperation_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.e != null) {
        throw result.e;
      }
      return;
    });
  }

  public function inviteIntoGroupCall(chatMid : String, memberMids : List< String>, mediaType : Int) : Void {
    oprot_.writeMessageBegin(new TMessage("inviteIntoGroupCall", TMessageType.CALL, seqid_));
    var args : InviteIntoGroupCall_args = new InviteIntoGroupCall_args();
    args.chatMid = chatMid;
    args.memberMids = memberMids;
    args.mediaType = mediaType;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : InviteIntoGroupCall_result = new InviteIntoGroupCall_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.e != null) {
        throw result.e;
      }
      return;
    });
  }

  public function getFriendMids() : List< String> {
    oprot_.writeMessageBegin(new TMessage("getFriendMids", TMessageType.CALL, seqid_));
    var args : GetFriendMids_args = new GetFriendMids_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetFriendMids_result = new GetFriendMids_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getFriendMids failed: unknown result");
    });
    return retval;
  }

  public function getMetaProfile() : MetaProfile {
    oprot_.writeMessageBegin(new TMessage("getMetaProfile", TMessageType.CALL, seqid_));
    var args : GetMetaProfile_args = new GetMetaProfile_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : MetaProfile;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetMetaProfile_result = new GetMetaProfile_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getMetaProfile failed: unknown result");
    });
    return retval;
  }

  public function sendMessageForChannel(message : Message) : Message {
    oprot_.writeMessageBegin(new TMessage("sendMessageForChannel", TMessageType.CALL, seqid_));
    var args : SendMessageForChannel_args = new SendMessageForChannel_args();
    args.message = message;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Message;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : SendMessageForChannel_result = new SendMessageForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "sendMessageForChannel failed: unknown result");
    });
    return retval;
  }

  public function activeBuddySubscriberCount() : haxe.Int64 {
    oprot_.writeMessageBegin(new TMessage("activeBuddySubscriberCount", TMessageType.CALL, seqid_));
    var args : ActiveBuddySubscriberCount_args = new ActiveBuddySubscriberCount_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : haxe.Int64;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : ActiveBuddySubscriberCount_result = new ActiveBuddySubscriberCount_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "activeBuddySubscriberCount failed: unknown result");
    });
    return retval;
  }

  public function getCallCreditPurchaseHistory(request : CoinHistoryCondition) : CoinHistoryResult {
    oprot_.writeMessageBegin(new TMessage("getCallCreditPurchaseHistory", TMessageType.CALL, seqid_));
    var args : GetCallCreditPurchaseHistory_args = new GetCallCreditPurchaseHistory_args();
    args.request = request;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : CoinHistoryResult;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetCallCreditPurchaseHistory_result = new GetCallCreditPurchaseHistory_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getCallCreditPurchaseHistory failed: unknown result");
    });
    return retval;
  }

  public function isRoomMember(roomId : String) : Bool {
    oprot_.writeMessageBegin(new TMessage("isRoomMember", TMessageType.CALL, seqid_));
    var args : IsRoomMember_args = new IsRoomMember_args();
    args.roomId = roomId;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Bool;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : IsRoomMember_result = new IsRoomMember_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "isRoomMember failed: unknown result");
    });
    return retval;
  }

  public function sendSystemOAMessage(message : Message) : Message {
    oprot_.writeMessageBegin(new TMessage("sendSystemOAMessage", TMessageType.CALL, seqid_));
    var args : SendSystemOAMessage_args = new SendSystemOAMessage_args();
    args.message = message;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Message;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : SendSystemOAMessage_result = new SendSystemOAMessage_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "sendSystemOAMessage failed: unknown result");
    });
    return retval;
  }

  public function acquirePaidCallRoute(paidCallType : Int, dialedNumber : String, language : String, networkCode : String, disableCallerId : Bool, referer : String, adSessionId : String) : PaidCallResponse {
    oprot_.writeMessageBegin(new TMessage("acquirePaidCallRoute", TMessageType.CALL, seqid_));
    var args : AcquirePaidCallRoute_args = new AcquirePaidCallRoute_args();
    args.paidCallType = paidCallType;
    args.dialedNumber = dialedNumber;
    args.language = language;
    args.networkCode = networkCode;
    args.disableCallerId = disableCallerId;
    args.referer = referer;
    args.adSessionId = adSessionId;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PaidCallResponse;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : AcquirePaidCallRoute_result = new AcquirePaidCallRoute_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "acquirePaidCallRoute failed: unknown result");
    });
    return retval;
  }

  public function getGroupsForChannel(groupIds : List< String>) : List< Group> {
    oprot_.writeMessageBegin(new TMessage("getGroupsForChannel", TMessageType.CALL, seqid_));
    var args : GetGroupsForChannel_args = new GetGroupsForChannel_args();
    args.groupIds = groupIds;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< Group>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetGroupsForChannel_result = new GetGroupsForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getGroupsForChannel failed: unknown result");
    });
    return retval;
  }

  public function getUserCreateTime() : haxe.Int64 {
    oprot_.writeMessageBegin(new TMessage("getUserCreateTime", TMessageType.CALL, seqid_));
    var args : GetUserCreateTime_args = new GetUserCreateTime_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : haxe.Int64;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetUserCreateTime_result = new GetUserCreateTime_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getUserCreateTime failed: unknown result");
    });
    return retval;
  }

  public function registerChannelCP(cpId : String, registerPassword : String) : String {
    oprot_.writeMessageBegin(new TMessage("registerChannelCP", TMessageType.CALL, seqid_));
    var args : RegisterChannelCP_args = new RegisterChannelCP_args();
    args.cpId = cpId;
    args.registerPassword = registerPassword;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : String;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : RegisterChannelCP_result = new RegisterChannelCP_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "registerChannelCP failed: unknown result");
    });
    return retval;
  }

  public function reserveCallCreditPurchase(request : CoinPurchaseReservation) : PaymentReservationResult {
    oprot_.writeMessageBegin(new TMessage("reserveCallCreditPurchase", TMessageType.CALL, seqid_));
    var args : ReserveCallCreditPurchase_args = new ReserveCallCreditPurchase_args();
    args.request = request;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PaymentReservationResult;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : ReserveCallCreditPurchase_result = new ReserveCallCreditPurchase_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "reserveCallCreditPurchase failed: unknown result");
    });
    return retval;
  }

  public function acquirePaidCallCurrencyExchangeRate(language : String) : List< PaidCallCurrencyExchangeRate> {
    oprot_.writeMessageBegin(new TMessage("acquirePaidCallCurrencyExchangeRate", TMessageType.CALL, seqid_));
    var args : AcquirePaidCallCurrencyExchangeRate_args = new AcquirePaidCallCurrencyExchangeRate_args();
    args.language = language;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< PaidCallCurrencyExchangeRate>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : AcquirePaidCallCurrencyExchangeRate_result = new AcquirePaidCallCurrencyExchangeRate_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "acquirePaidCallCurrencyExchangeRate failed: unknown result");
    });
    return retval;
  }

  public function getRoomMemberMidsForAppPlatform(roomId : String) : List< String> {
    oprot_.writeMessageBegin(new TMessage("getRoomMemberMidsForAppPlatform", TMessageType.CALL, seqid_));
    var args : GetRoomMemberMidsForAppPlatform_args = new GetRoomMemberMidsForAppPlatform_args();
    args.roomId = roomId;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetRoomMemberMidsForAppPlatform_result = new GetRoomMemberMidsForAppPlatform_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getRoomMemberMidsForAppPlatform failed: unknown result");
    });
    return retval;
  }

  public function getPaidCallBalanceList(language : String) : List< PaidCallBalance> {
    oprot_.writeMessageBegin(new TMessage("getPaidCallBalanceList", TMessageType.CALL, seqid_));
    var args : GetPaidCallBalanceList_args = new GetPaidCallBalanceList_args();
    args.language = language;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< PaidCallBalance>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPaidCallBalanceList_result = new GetPaidCallBalanceList_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPaidCallBalanceList failed: unknown result");
    });
    return retval;
  }

  public function getPersonalInfos(requiredPersonalInfos : IntSet) : IntMap< String> {
    oprot_.writeMessageBegin(new TMessage("getPersonalInfos", TMessageType.CALL, seqid_));
    var args : GetPersonalInfos_args = new GetPersonalInfos_args();
    args.requiredPersonalInfos = requiredPersonalInfos;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : IntMap< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPersonalInfos_result = new GetPersonalInfos_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPersonalInfos failed: unknown result");
    });
    return retval;
  }

  public function getPrimaryClientsForChannel(userMids : List< String>) : List< SimpleChannelClient> {
    oprot_.writeMessageBegin(new TMessage("getPrimaryClientsForChannel", TMessageType.CALL, seqid_));
    var args : GetPrimaryClientsForChannel_args = new GetPrimaryClientsForChannel_args();
    args.userMids = userMids;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< SimpleChannelClient>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPrimaryClientsForChannel_result = new GetPrimaryClientsForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPrimaryClientsForChannel failed: unknown result");
    });
    return retval;
  }

  public function addBuddyToContact(buddyMid : String) : ContactTransition {
    oprot_.writeMessageBegin(new TMessage("addBuddyToContact", TMessageType.CALL, seqid_));
    var args : AddBuddyToContact_args = new AddBuddyToContact_args();
    args.buddyMid = buddyMid;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ContactTransition;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : AddBuddyToContact_result = new AddBuddyToContact_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "addBuddyToContact failed: unknown result");
    });
    return retval;
  }

  public function getGroupMemberMidsForAppPlatform(groupId : String) : List< String> {
    oprot_.writeMessageBegin(new TMessage("getGroupMemberMidsForAppPlatform", TMessageType.CALL, seqid_));
    var args : GetGroupMemberMidsForAppPlatform_args = new GetGroupMemberMidsForAppPlatform_args();
    args.groupId = groupId;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetGroupMemberMidsForAppPlatform_result = new GetGroupMemberMidsForAppPlatform_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getGroupMemberMidsForAppPlatform failed: unknown result");
    });
    return retval;
  }

  public function getUserLanguage() : String {
    oprot_.writeMessageBegin(new TMessage("getUserLanguage", TMessageType.CALL, seqid_));
    var args : GetUserLanguage_args = new GetUserLanguage_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : String;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetUserLanguage_result = new GetUserLanguage_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getUserLanguage failed: unknown result");
    });
    return retval;
  }

  public function lookupPaidCall(dialedNumber : String, language : String, referer : String) : PaidCallResponse {
    oprot_.writeMessageBegin(new TMessage("lookupPaidCall", TMessageType.CALL, seqid_));
    var args : LookupPaidCall_args = new LookupPaidCall_args();
    args.dialedNumber = dialedNumber;
    args.language = language;
    args.referer = referer;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PaidCallResponse;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : LookupPaidCall_result = new LookupPaidCall_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "lookupPaidCall failed: unknown result");
    });
    return retval;
  }

  public function getExtendedProfile() : ExtendedProfile {
    oprot_.writeMessageBegin(new TMessage("getExtendedProfile", TMessageType.CALL, seqid_));
    var args : GetExtendedProfile_args = new GetExtendedProfile_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : ExtendedProfile;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetExtendedProfile_result = new GetExtendedProfile_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getExtendedProfile failed: unknown result");
    });
    return retval;
  }

  public function getReverseCompactContacts(ids : List< String>) : StringMap< CompactContact> {
    oprot_.writeMessageBegin(new TMessage("getReverseCompactContacts", TMessageType.CALL, seqid_));
    var args : GetReverseCompactContacts_args = new GetReverseCompactContacts_args();
    args.ids = ids;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : StringMap< CompactContact>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetReverseCompactContacts_result = new GetReverseCompactContacts_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getReverseCompactContacts failed: unknown result");
    });
    return retval;
  }

  public function getPaidCallAdStatus() : PaidCallAdResult {
    oprot_.writeMessageBegin(new TMessage("getPaidCallAdStatus", TMessageType.CALL, seqid_));
    var args : GetPaidCallAdStatus_args = new GetPaidCallAdStatus_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : PaidCallAdResult;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetPaidCallAdStatus_result = new GetPaidCallAdStatus_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getPaidCallAdStatus failed: unknown result");
    });
    return retval;
  }

  public function findContactByUseridWithoutAbuseBlockForChannel(userid : String) : Contact {
    oprot_.writeMessageBegin(new TMessage("findContactByUseridWithoutAbuseBlockForChannel", TMessageType.CALL, seqid_));
    var args : FindContactByUseridWithoutAbuseBlockForChannel_args = new FindContactByUseridWithoutAbuseBlockForChannel_args();
    args.userid = userid;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Contact;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : FindContactByUseridWithoutAbuseBlockForChannel_result = new FindContactByUseridWithoutAbuseBlockForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "findContactByUseridWithoutAbuseBlockForChannel failed: unknown result");
    });
    return retval;
  }

  public function getGroupMemberMids(groupId : String) : List< String> {
    oprot_.writeMessageBegin(new TMessage("getGroupMemberMids", TMessageType.CALL, seqid_));
    var args : GetGroupMemberMids_args = new GetGroupMemberMids_args();
    args.groupId = groupId;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetGroupMemberMids_result = new GetGroupMemberMids_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getGroupMemberMids failed: unknown result");
    });
    return retval;
  }

  public function sendMessageWithoutRelationship(message : Message) : Message {
    oprot_.writeMessageBegin(new TMessage("sendMessageWithoutRelationship", TMessageType.CALL, seqid_));
    var args : SendMessageWithoutRelationship_args = new SendMessageWithoutRelationship_args();
    args.message = message;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Message;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : SendMessageWithoutRelationship_result = new SendMessageWithoutRelationship_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "sendMessageWithoutRelationship failed: unknown result");
    });
    return retval;
  }

  public function displayBuddySubscriberCountInBulk(mids : List< String>) : StringMap< haxe.Int64> {
    oprot_.writeMessageBegin(new TMessage("displayBuddySubscriberCountInBulk", TMessageType.CALL, seqid_));
    var args : DisplayBuddySubscriberCountInBulk_args = new DisplayBuddySubscriberCountInBulk_args();
    args.mids = mids;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : StringMap< haxe.Int64>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : DisplayBuddySubscriberCountInBulk_result = new DisplayBuddySubscriberCountInBulk_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "displayBuddySubscriberCountInBulk failed: unknown result");
    });
    return retval;
  }

  public function lookupRoomMembers(roomId : String, mids : List< String>) : List< SimpleChannelContact> {
    oprot_.writeMessageBegin(new TMessage("lookupRoomMembers", TMessageType.CALL, seqid_));
    var args : LookupRoomMembers_args = new LookupRoomMembers_args();
    args.roomId = roomId;
    args.mids = mids;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< SimpleChannelContact>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : LookupRoomMembers_result = new LookupRoomMembers_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "lookupRoomMembers failed: unknown result");
    });
    return retval;
  }

  public function getFavoriteMidsForChannel() : List< String> {
    oprot_.writeMessageBegin(new TMessage("getFavoriteMidsForChannel", TMessageType.CALL, seqid_));
    var args : GetFavoriteMidsForChannel_args = new GetFavoriteMidsForChannel_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetFavoriteMidsForChannel_result = new GetFavoriteMidsForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getFavoriteMidsForChannel failed: unknown result");
    });
    return retval;
  }

  public function getAllContactIdsForChannel() : List< String> {
    oprot_.writeMessageBegin(new TMessage("getAllContactIdsForChannel", TMessageType.CALL, seqid_));
    var args : GetAllContactIdsForChannel_args = new GetAllContactIdsForChannel_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetAllContactIdsForChannel_result = new GetAllContactIdsForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getAllContactIdsForChannel failed: unknown result");
    });
    return retval;
  }

  public function displayBuddySubscriberCount() : haxe.Int64 {
    oprot_.writeMessageBegin(new TMessage("displayBuddySubscriberCount", TMessageType.CALL, seqid_));
    var args : DisplayBuddySubscriberCount_args = new DisplayBuddySubscriberCount_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : haxe.Int64;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : DisplayBuddySubscriberCount_result = new DisplayBuddySubscriberCount_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "displayBuddySubscriberCount failed: unknown result");
    });
    return retval;
  }

  public function getProfileForChannel() : Profile {
    oprot_.writeMessageBegin(new TMessage("getProfileForChannel", TMessageType.CALL, seqid_));
    var args : GetProfileForChannel_args = new GetProfileForChannel_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : Profile;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetProfileForChannel_result = new GetProfileForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getProfileForChannel failed: unknown result");
    });
    return retval;
  }

  public function getUserTickets(userMids : List< String>) : List< UserTicketResponse> {
    oprot_.writeMessageBegin(new TMessage("getUserTickets", TMessageType.CALL, seqid_));
    var args : GetUserTickets_args = new GetUserTickets_args();
    args.userMids = userMids;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< UserTicketResponse>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetUserTickets_result = new GetUserTickets_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getUserTickets failed: unknown result");
    });
    return retval;
  }

  public function getOAFriendMids() : List< String> {
    oprot_.writeMessageBegin(new TMessage("getOAFriendMids", TMessageType.CALL, seqid_));
    var args : GetOAFriendMids_args = new GetOAFriendMids_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetOAFriendMids_result = new GetOAFriendMids_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getOAFriendMids failed: unknown result");
    });
    return retval;
  }

  public function searchPaidCallUserRate(countryCode : String, language : String) : List< PaidCallUserRate> {
    oprot_.writeMessageBegin(new TMessage("searchPaidCallUserRate", TMessageType.CALL, seqid_));
    var args : SearchPaidCallUserRate_args = new SearchPaidCallUserRate_args();
    args.countryCode = countryCode;
    args.language = language;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< PaidCallUserRate>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : SearchPaidCallUserRate_result = new SearchPaidCallUserRate_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "searchPaidCallUserRate failed: unknown result");
    });
    return retval;
  }

  public function getJoinedGroupIdsForChannel() : List< String> {
    oprot_.writeMessageBegin(new TMessage("getJoinedGroupIdsForChannel", TMessageType.CALL, seqid_));
    var args : GetJoinedGroupIdsForChannel_args = new GetJoinedGroupIdsForChannel_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetJoinedGroupIdsForChannel_result = new GetJoinedGroupIdsForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getJoinedGroupIdsForChannel failed: unknown result");
    });
    return retval;
  }

  public function acquireGroupCallRoute(chatMid : String, mediaType : Int) : GroupCallRoute {
    oprot_.writeMessageBegin(new TMessage("acquireGroupCallRoute", TMessageType.CALL, seqid_));
    var args : AcquireGroupCallRoute_args = new AcquireGroupCallRoute_args();
    args.chatMid = chatMid;
    args.mediaType = mediaType;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : GroupCallRoute;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : AcquireGroupCallRoute_result = new AcquireGroupCallRoute_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "acquireGroupCallRoute failed: unknown result");
    });
    return retval;
  }

  public function getUserMidsWhoAddedMe() : List< String> {
    oprot_.writeMessageBegin(new TMessage("getUserMidsWhoAddedMe", TMessageType.CALL, seqid_));
    var args : GetUserMidsWhoAddedMe_args = new GetUserMidsWhoAddedMe_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< String>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetUserMidsWhoAddedMe_result = new GetUserMidsWhoAddedMe_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getUserMidsWhoAddedMe failed: unknown result");
    });
    return retval;
  }

  public function getIdentityCredential() : IdentityCredential {
    oprot_.writeMessageBegin(new TMessage("getIdentityCredential", TMessageType.CALL, seqid_));
    var args : GetIdentityCredential_args = new GetIdentityCredential_args();
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : IdentityCredential;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetIdentityCredential_result = new GetIdentityCredential_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getIdentityCredential failed: unknown result");
    });
    return retval;
  }

  public function addOperationForChannel(opType : Int, param1 : String, param2 : String, param3 : String) : Void {
    oprot_.writeMessageBegin(new TMessage("addOperationForChannel", TMessageType.CALL, seqid_));
    var args : AddOperationForChannel_args = new AddOperationForChannel_args();
    args.opType = opType;
    args.param1 = param1;
    args.param2 = param2;
    args.param3 = param3;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : AddOperationForChannel_result = new AddOperationForChannel_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.e != null) {
        throw result.e;
      }
      return;
    });
  }

  public function getSimpleChannelContacts(ids : List< String>, statusSticonFallbackDisabled : Bool) : List< SimpleChannelContact> {
    oprot_.writeMessageBegin(new TMessage("getSimpleChannelContacts", TMessageType.CALL, seqid_));
    var args : GetSimpleChannelContacts_args = new GetSimpleChannelContacts_args();
    args.ids = ids;
    args.statusSticonFallbackDisabled = statusSticonFallbackDisabled;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : List< SimpleChannelContact>;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetSimpleChannelContacts_result = new GetSimpleChannelContacts_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getSimpleChannelContacts failed: unknown result");
    });
    return retval;
  }

  public function getUserLastSentMessageTimeStamp(mid : String) : haxe.Int64 {
    oprot_.writeMessageBegin(new TMessage("getUserLastSentMessageTimeStamp", TMessageType.CALL, seqid_));
    var args : GetUserLastSentMessageTimeStamp_args = new GetUserLastSentMessageTimeStamp_args();
    args.mid = mid;
    args.write(oprot_);
    oprot_.writeMessageEnd();
    var retval : haxe.Int64;
    oprot_.getTransport().flush(function(error:Dynamic) : Void {
      if (error != null) {
        throw error;
      }
      var msg : TMessage = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        var x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      var result : GetUserLastSentMessageTimeStamp_result = new GetUserLastSentMessageTimeStamp_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        retval = result.success;
        return;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT,
                                  "getUserLastSentMessageTimeStamp failed: unknown result");
    });
    return retval;
  }

}
