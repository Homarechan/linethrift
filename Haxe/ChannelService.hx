/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;


interface ChannelService {

  function issueOTP(channelId : String) : OTPResult;

  function approveChannelAndIssueChannelToken(channelId : String) : ChannelToken;

  function approveChannelAndIssueRequestToken(channelId : String, otpId : String) : String;

  function fetchNotificationItems(localRev : haxe.Int64) : NotificationFetchResult;

  function getApprovedChannels(lastSynced : haxe.Int64, locale : String) : ApprovedChannelInfos;

  function getChannelInfo(channelId : String, locale : String) : ChannelInfo;

  function getChannelNotificationSetting(channelId : String, locale : String) : ChannelNotificationSetting;

  function getChannelNotificationSettings(locale : String) : List< ChannelNotificationSetting>;

  function getChannels(lastSynced : haxe.Int64, locale : String) : ChannelInfos;

  function getDomains(lastSynced : haxe.Int64) : ChannelDomains;

  function getFriendChannelMatrices(channelIds : List< String>) : FriendChannelMatricesResponse;

  function updateChannelSettings(channelSettings : ChannelSettings) : Bool;

  function getCommonDomains(lastSynced : haxe.Int64) : ChannelDomains;

  function getNotificationBadgeCount(localRev : haxe.Int64) : haxe.Int32;

  function issueChannelToken(channelId : String) : ChannelToken;

  function issueRequestToken(channelId : String, otpId : String) : String;

  function issueRequestTokenWithAuthScheme(channelId : String, otpId : String, authScheme : List< String>, returnUrl : String) : RequestTokenResponse;

  function issueRequestTokenForAutoLogin(channelId : String, otpId : String, redirectUrl : String) : String;

  function getUpdatedChannelIds(channelIds : List< ChannelIdWithLastUpdated>) : List< String>;

  function reserveCoinUse(request : CoinUseReservation, locale : String) : String;

  function revokeChannel(channelId : String) : Void;

  function syncChannelData(lastSynced : haxe.Int64, locale : String) : ChannelSyncDatas;

  function updateChannelNotificationSetting(setting : List< ChannelNotificationSetting>) : Void;

}

