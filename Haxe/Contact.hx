/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;


class Contact implements TBase {
  
  static var STRUCT_DESC = { new TStruct("Contact"); };
  static var MID_FIELD_DESC = { new TField("mid", TType.STRING, 1); };
  static var CREATED_TIME_FIELD_DESC = { new TField("createdTime", TType.I64, 2); };
  static var TYPE_FIELD_DESC = { new TField("type", TType.I32, 10); };
  static var STATUS_FIELD_DESC = { new TField("status", TType.I32, 11); };
  static var RELATION_FIELD_DESC = { new TField("relation", TType.I32, 21); };
  static var DISPLAY_NAME_FIELD_DESC = { new TField("displayName", TType.STRING, 22); };
  static var PHONETIC_NAME_FIELD_DESC = { new TField("phoneticName", TType.STRING, 23); };
  static var PICTURE_STATUS_FIELD_DESC = { new TField("pictureStatus", TType.STRING, 24); };
  static var THUMBNAIL_URL_FIELD_DESC = { new TField("thumbnailUrl", TType.STRING, 25); };
  static var STATUS_MESSAGE_FIELD_DESC = { new TField("statusMessage", TType.STRING, 26); };
  static var DISPLAY_NAME_OVERRIDDEN_FIELD_DESC = { new TField("displayNameOverridden", TType.STRING, 27); };
  static var FAVORITE_TIME_FIELD_DESC = { new TField("favoriteTime", TType.I64, 28); };
  static var CAPABLE_VOICE_CALL_FIELD_DESC = { new TField("capableVoiceCall", TType.BOOL, 31); };
  static var CAPABLE_VIDEO_CALL_FIELD_DESC = { new TField("capableVideoCall", TType.BOOL, 32); };
  static var CAPABLE_MYHOME_FIELD_DESC = { new TField("capableMyhome", TType.BOOL, 33); };
  static var CAPABLE_BUDDY_FIELD_DESC = { new TField("capableBuddy", TType.BOOL, 34); };
  static var ATTRIBUTES_FIELD_DESC = { new TField("attributes", TType.I32, 35); };
  static var SETTINGS_FIELD_DESC = { new TField("settings", TType.I64, 36); };
  static var PICTURE_PATH_FIELD_DESC = { new TField("picturePath", TType.STRING, 37); };
  static var RECOMMEND_PARAMS_FIELD_DESC = { new TField("recommendParams", TType.STRING, 38); };
  static var FRIEND_REQUEST_STATUS_FIELD_DESC = { new TField("friendRequestStatus", TType.I32, 39); };
  static var MUSIC_PROFILE_FIELD_DESC = { new TField("musicProfile", TType.STRING, 40); };
  static var VIDEO_PROFILE_FIELD_DESC = { new TField("videoProfile", TType.STRING, 42); };

  @:isVar
  public var mid(get,set) : String;
  @:isVar
  public var createdTime(get,set) : haxe.Int64;
  @:isVar
  public var type(get,set) : Int;
  @:isVar
  public var status(get,set) : Int;
  @:isVar
  public var relation(get,set) : Int;
  @:isVar
  public var displayName(get,set) : String;
  @:isVar
  public var phoneticName(get,set) : String;
  @:isVar
  public var pictureStatus(get,set) : String;
  @:isVar
  public var thumbnailUrl(get,set) : String;
  @:isVar
  public var statusMessage(get,set) : String;
  @:isVar
  public var displayNameOverridden(get,set) : String;
  @:isVar
  public var favoriteTime(get,set) : haxe.Int64;
  @:isVar
  public var capableVoiceCall(get,set) : Bool;
  @:isVar
  public var capableVideoCall(get,set) : Bool;
  @:isVar
  public var capableMyhome(get,set) : Bool;
  @:isVar
  public var capableBuddy(get,set) : Bool;
  @:isVar
  public var attributes(get,set) : haxe.Int32;
  @:isVar
  public var settings(get,set) : haxe.Int64;
  @:isVar
  public var picturePath(get,set) : String;
  @:isVar
  public var recommendParams(get,set) : String;
  @:isVar
  public var friendRequestStatus(get,set) : Int;
  @:isVar
  public var musicProfile(get,set) : String;
  @:isVar
  public var videoProfile(get,set) : String;

  inline static var MID_FIELD_ID : Int = 1;
  inline static var CREATEDTIME_FIELD_ID : Int = 2;
  inline static var TYPE_FIELD_ID : Int = 10;
  inline static var STATUS_FIELD_ID : Int = 11;
  inline static var RELATION_FIELD_ID : Int = 21;
  inline static var DISPLAYNAME_FIELD_ID : Int = 22;
  inline static var PHONETICNAME_FIELD_ID : Int = 23;
  inline static var PICTURESTATUS_FIELD_ID : Int = 24;
  inline static var THUMBNAILURL_FIELD_ID : Int = 25;
  inline static var STATUSMESSAGE_FIELD_ID : Int = 26;
  inline static var DISPLAYNAMEOVERRIDDEN_FIELD_ID : Int = 27;
  inline static var FAVORITETIME_FIELD_ID : Int = 28;
  inline static var CAPABLEVOICECALL_FIELD_ID : Int = 31;
  inline static var CAPABLEVIDEOCALL_FIELD_ID : Int = 32;
  inline static var CAPABLEMYHOME_FIELD_ID : Int = 33;
  inline static var CAPABLEBUDDY_FIELD_ID : Int = 34;
  inline static var ATTRIBUTES_FIELD_ID : Int = 35;
  inline static var SETTINGS_FIELD_ID : Int = 36;
  inline static var PICTUREPATH_FIELD_ID : Int = 37;
  inline static var RECOMMENDPARAMS_FIELD_ID : Int = 38;
  inline static var FRIENDREQUESTSTATUS_FIELD_ID : Int = 39;
  inline static var MUSICPROFILE_FIELD_ID : Int = 40;
  inline static var VIDEOPROFILE_FIELD_ID : Int = 42;

  private var __isset_createdTime : Bool = false;
  private var __isset_type : Bool = false;
  private var __isset_status : Bool = false;
  private var __isset_relation : Bool = false;
  private var __isset_favoriteTime : Bool = false;
  private var __isset_capableVoiceCall : Bool = false;
  private var __isset_capableVideoCall : Bool = false;
  private var __isset_capableMyhome : Bool = false;
  private var __isset_capableBuddy : Bool = false;
  private var __isset_attributes : Bool = false;
  private var __isset_settings : Bool = false;
  private var __isset_friendRequestStatus : Bool = false;

  public function new() {
  }

  public function get_mid() : String {
    return this.mid;
  }

  public function set_mid(mid:String) : String {
    this.mid = mid;
    return this.mid;
  }

  public function unsetMid() : Void {
    this.mid = null;
  }

  // Returns true if field mid is set (has been assigned a value) and false otherwise
  public function isSetMid() : Bool {
    return this.mid != null;
  }

  public function get_createdTime() : haxe.Int64 {
    return this.createdTime;
  }

  public function set_createdTime(createdTime:haxe.Int64) : haxe.Int64 {
    this.createdTime = createdTime;
    this.__isset_createdTime = true;
    return this.createdTime;
  }

  public function unsetCreatedTime() : Void {
    this.__isset_createdTime = false;
  }

  // Returns true if field createdTime is set (has been assigned a value) and false otherwise
  public function isSetCreatedTime() : Bool {
    return this.__isset_createdTime;
  }

  public function get_type() : Int {
    return this.type;
  }

  public function set_type(type:Int) : Int {
    this.type = type;
    this.__isset_type = true;
    return this.type;
  }

  public function unsetType() : Void {
    this.__isset_type = false;
  }

  // Returns true if field type is set (has been assigned a value) and false otherwise
  public function isSetType() : Bool {
    return this.__isset_type;
  }

  public function get_status() : Int {
    return this.status;
  }

  public function set_status(status:Int) : Int {
    this.status = status;
    this.__isset_status = true;
    return this.status;
  }

  public function unsetStatus() : Void {
    this.__isset_status = false;
  }

  // Returns true if field status is set (has been assigned a value) and false otherwise
  public function isSetStatus() : Bool {
    return this.__isset_status;
  }

  public function get_relation() : Int {
    return this.relation;
  }

  public function set_relation(relation:Int) : Int {
    this.relation = relation;
    this.__isset_relation = true;
    return this.relation;
  }

  public function unsetRelation() : Void {
    this.__isset_relation = false;
  }

  // Returns true if field relation is set (has been assigned a value) and false otherwise
  public function isSetRelation() : Bool {
    return this.__isset_relation;
  }

  public function get_displayName() : String {
    return this.displayName;
  }

  public function set_displayName(displayName:String) : String {
    this.displayName = displayName;
    return this.displayName;
  }

  public function unsetDisplayName() : Void {
    this.displayName = null;
  }

  // Returns true if field displayName is set (has been assigned a value) and false otherwise
  public function isSetDisplayName() : Bool {
    return this.displayName != null;
  }

  public function get_phoneticName() : String {
    return this.phoneticName;
  }

  public function set_phoneticName(phoneticName:String) : String {
    this.phoneticName = phoneticName;
    return this.phoneticName;
  }

  public function unsetPhoneticName() : Void {
    this.phoneticName = null;
  }

  // Returns true if field phoneticName is set (has been assigned a value) and false otherwise
  public function isSetPhoneticName() : Bool {
    return this.phoneticName != null;
  }

  public function get_pictureStatus() : String {
    return this.pictureStatus;
  }

  public function set_pictureStatus(pictureStatus:String) : String {
    this.pictureStatus = pictureStatus;
    return this.pictureStatus;
  }

  public function unsetPictureStatus() : Void {
    this.pictureStatus = null;
  }

  // Returns true if field pictureStatus is set (has been assigned a value) and false otherwise
  public function isSetPictureStatus() : Bool {
    return this.pictureStatus != null;
  }

  public function get_thumbnailUrl() : String {
    return this.thumbnailUrl;
  }

  public function set_thumbnailUrl(thumbnailUrl:String) : String {
    this.thumbnailUrl = thumbnailUrl;
    return this.thumbnailUrl;
  }

  public function unsetThumbnailUrl() : Void {
    this.thumbnailUrl = null;
  }

  // Returns true if field thumbnailUrl is set (has been assigned a value) and false otherwise
  public function isSetThumbnailUrl() : Bool {
    return this.thumbnailUrl != null;
  }

  public function get_statusMessage() : String {
    return this.statusMessage;
  }

  public function set_statusMessage(statusMessage:String) : String {
    this.statusMessage = statusMessage;
    return this.statusMessage;
  }

  public function unsetStatusMessage() : Void {
    this.statusMessage = null;
  }

  // Returns true if field statusMessage is set (has been assigned a value) and false otherwise
  public function isSetStatusMessage() : Bool {
    return this.statusMessage != null;
  }

  public function get_displayNameOverridden() : String {
    return this.displayNameOverridden;
  }

  public function set_displayNameOverridden(displayNameOverridden:String) : String {
    this.displayNameOverridden = displayNameOverridden;
    return this.displayNameOverridden;
  }

  public function unsetDisplayNameOverridden() : Void {
    this.displayNameOverridden = null;
  }

  // Returns true if field displayNameOverridden is set (has been assigned a value) and false otherwise
  public function isSetDisplayNameOverridden() : Bool {
    return this.displayNameOverridden != null;
  }

  public function get_favoriteTime() : haxe.Int64 {
    return this.favoriteTime;
  }

  public function set_favoriteTime(favoriteTime:haxe.Int64) : haxe.Int64 {
    this.favoriteTime = favoriteTime;
    this.__isset_favoriteTime = true;
    return this.favoriteTime;
  }

  public function unsetFavoriteTime() : Void {
    this.__isset_favoriteTime = false;
  }

  // Returns true if field favoriteTime is set (has been assigned a value) and false otherwise
  public function isSetFavoriteTime() : Bool {
    return this.__isset_favoriteTime;
  }

  public function get_capableVoiceCall() : Bool {
    return this.capableVoiceCall;
  }

  public function set_capableVoiceCall(capableVoiceCall:Bool) : Bool {
    this.capableVoiceCall = capableVoiceCall;
    this.__isset_capableVoiceCall = true;
    return this.capableVoiceCall;
  }

  public function unsetCapableVoiceCall() : Void {
    this.__isset_capableVoiceCall = false;
  }

  // Returns true if field capableVoiceCall is set (has been assigned a value) and false otherwise
  public function isSetCapableVoiceCall() : Bool {
    return this.__isset_capableVoiceCall;
  }

  public function get_capableVideoCall() : Bool {
    return this.capableVideoCall;
  }

  public function set_capableVideoCall(capableVideoCall:Bool) : Bool {
    this.capableVideoCall = capableVideoCall;
    this.__isset_capableVideoCall = true;
    return this.capableVideoCall;
  }

  public function unsetCapableVideoCall() : Void {
    this.__isset_capableVideoCall = false;
  }

  // Returns true if field capableVideoCall is set (has been assigned a value) and false otherwise
  public function isSetCapableVideoCall() : Bool {
    return this.__isset_capableVideoCall;
  }

  public function get_capableMyhome() : Bool {
    return this.capableMyhome;
  }

  public function set_capableMyhome(capableMyhome:Bool) : Bool {
    this.capableMyhome = capableMyhome;
    this.__isset_capableMyhome = true;
    return this.capableMyhome;
  }

  public function unsetCapableMyhome() : Void {
    this.__isset_capableMyhome = false;
  }

  // Returns true if field capableMyhome is set (has been assigned a value) and false otherwise
  public function isSetCapableMyhome() : Bool {
    return this.__isset_capableMyhome;
  }

  public function get_capableBuddy() : Bool {
    return this.capableBuddy;
  }

  public function set_capableBuddy(capableBuddy:Bool) : Bool {
    this.capableBuddy = capableBuddy;
    this.__isset_capableBuddy = true;
    return this.capableBuddy;
  }

  public function unsetCapableBuddy() : Void {
    this.__isset_capableBuddy = false;
  }

  // Returns true if field capableBuddy is set (has been assigned a value) and false otherwise
  public function isSetCapableBuddy() : Bool {
    return this.__isset_capableBuddy;
  }

  public function get_attributes() : haxe.Int32 {
    return this.attributes;
  }

  public function set_attributes(attributes:haxe.Int32) : haxe.Int32 {
    this.attributes = attributes;
    this.__isset_attributes = true;
    return this.attributes;
  }

  public function unsetAttributes() : Void {
    this.__isset_attributes = false;
  }

  // Returns true if field attributes is set (has been assigned a value) and false otherwise
  public function isSetAttributes() : Bool {
    return this.__isset_attributes;
  }

  public function get_settings() : haxe.Int64 {
    return this.settings;
  }

  public function set_settings(settings:haxe.Int64) : haxe.Int64 {
    this.settings = settings;
    this.__isset_settings = true;
    return this.settings;
  }

  public function unsetSettings() : Void {
    this.__isset_settings = false;
  }

  // Returns true if field settings is set (has been assigned a value) and false otherwise
  public function isSetSettings() : Bool {
    return this.__isset_settings;
  }

  public function get_picturePath() : String {
    return this.picturePath;
  }

  public function set_picturePath(picturePath:String) : String {
    this.picturePath = picturePath;
    return this.picturePath;
  }

  public function unsetPicturePath() : Void {
    this.picturePath = null;
  }

  // Returns true if field picturePath is set (has been assigned a value) and false otherwise
  public function isSetPicturePath() : Bool {
    return this.picturePath != null;
  }

  public function get_recommendParams() : String {
    return this.recommendParams;
  }

  public function set_recommendParams(recommendParams:String) : String {
    this.recommendParams = recommendParams;
    return this.recommendParams;
  }

  public function unsetRecommendParams() : Void {
    this.recommendParams = null;
  }

  // Returns true if field recommendParams is set (has been assigned a value) and false otherwise
  public function isSetRecommendParams() : Bool {
    return this.recommendParams != null;
  }

  public function get_friendRequestStatus() : Int {
    return this.friendRequestStatus;
  }

  public function set_friendRequestStatus(friendRequestStatus:Int) : Int {
    this.friendRequestStatus = friendRequestStatus;
    this.__isset_friendRequestStatus = true;
    return this.friendRequestStatus;
  }

  public function unsetFriendRequestStatus() : Void {
    this.__isset_friendRequestStatus = false;
  }

  // Returns true if field friendRequestStatus is set (has been assigned a value) and false otherwise
  public function isSetFriendRequestStatus() : Bool {
    return this.__isset_friendRequestStatus;
  }

  public function get_musicProfile() : String {
    return this.musicProfile;
  }

  public function set_musicProfile(musicProfile:String) : String {
    this.musicProfile = musicProfile;
    return this.musicProfile;
  }

  public function unsetMusicProfile() : Void {
    this.musicProfile = null;
  }

  // Returns true if field musicProfile is set (has been assigned a value) and false otherwise
  public function isSetMusicProfile() : Bool {
    return this.musicProfile != null;
  }

  public function get_videoProfile() : String {
    return this.videoProfile;
  }

  public function set_videoProfile(videoProfile:String) : String {
    this.videoProfile = videoProfile;
    return this.videoProfile;
  }

  public function unsetVideoProfile() : Void {
    this.videoProfile = null;
  }

  // Returns true if field videoProfile is set (has been assigned a value) and false otherwise
  public function isSetVideoProfile() : Bool {
    return this.videoProfile != null;
  }

  public function setFieldValue(fieldID : Int, value : Dynamic) : Void {
    switch (fieldID) {
    case MID_FIELD_ID:
      if (value == null) {
        unsetMid();
      } else {
        this.mid = value;
      }

    case CREATEDTIME_FIELD_ID:
      if (value == null) {
        unsetCreatedTime();
      } else {
        this.createdTime = value;
      }

    case TYPE_FIELD_ID:
      if (value == null) {
        unsetType();
      } else {
        this.type = value;
      }

    case STATUS_FIELD_ID:
      if (value == null) {
        unsetStatus();
      } else {
        this.status = value;
      }

    case RELATION_FIELD_ID:
      if (value == null) {
        unsetRelation();
      } else {
        this.relation = value;
      }

    case DISPLAYNAME_FIELD_ID:
      if (value == null) {
        unsetDisplayName();
      } else {
        this.displayName = value;
      }

    case PHONETICNAME_FIELD_ID:
      if (value == null) {
        unsetPhoneticName();
      } else {
        this.phoneticName = value;
      }

    case PICTURESTATUS_FIELD_ID:
      if (value == null) {
        unsetPictureStatus();
      } else {
        this.pictureStatus = value;
      }

    case THUMBNAILURL_FIELD_ID:
      if (value == null) {
        unsetThumbnailUrl();
      } else {
        this.thumbnailUrl = value;
      }

    case STATUSMESSAGE_FIELD_ID:
      if (value == null) {
        unsetStatusMessage();
      } else {
        this.statusMessage = value;
      }

    case DISPLAYNAMEOVERRIDDEN_FIELD_ID:
      if (value == null) {
        unsetDisplayNameOverridden();
      } else {
        this.displayNameOverridden = value;
      }

    case FAVORITETIME_FIELD_ID:
      if (value == null) {
        unsetFavoriteTime();
      } else {
        this.favoriteTime = value;
      }

    case CAPABLEVOICECALL_FIELD_ID:
      if (value == null) {
        unsetCapableVoiceCall();
      } else {
        this.capableVoiceCall = value;
      }

    case CAPABLEVIDEOCALL_FIELD_ID:
      if (value == null) {
        unsetCapableVideoCall();
      } else {
        this.capableVideoCall = value;
      }

    case CAPABLEMYHOME_FIELD_ID:
      if (value == null) {
        unsetCapableMyhome();
      } else {
        this.capableMyhome = value;
      }

    case CAPABLEBUDDY_FIELD_ID:
      if (value == null) {
        unsetCapableBuddy();
      } else {
        this.capableBuddy = value;
      }

    case ATTRIBUTES_FIELD_ID:
      if (value == null) {
        unsetAttributes();
      } else {
        this.attributes = value;
      }

    case SETTINGS_FIELD_ID:
      if (value == null) {
        unsetSettings();
      } else {
        this.settings = value;
      }

    case PICTUREPATH_FIELD_ID:
      if (value == null) {
        unsetPicturePath();
      } else {
        this.picturePath = value;
      }

    case RECOMMENDPARAMS_FIELD_ID:
      if (value == null) {
        unsetRecommendParams();
      } else {
        this.recommendParams = value;
      }

    case FRIENDREQUESTSTATUS_FIELD_ID:
      if (value == null) {
        unsetFriendRequestStatus();
      } else {
        this.friendRequestStatus = value;
      }

    case MUSICPROFILE_FIELD_ID:
      if (value == null) {
        unsetMusicProfile();
      } else {
        this.musicProfile = value;
      }

    case VIDEOPROFILE_FIELD_ID:
      if (value == null) {
        unsetVideoProfile();
      } else {
        this.videoProfile = value;
      }

    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  public function getFieldValue(fieldID : Int) : Dynamic {
    switch (fieldID) {
    case MID_FIELD_ID:
      return this.mid;
    case CREATEDTIME_FIELD_ID:
      return this.createdTime;
    case TYPE_FIELD_ID:
      return this.type;
    case STATUS_FIELD_ID:
      return this.status;
    case RELATION_FIELD_ID:
      return this.relation;
    case DISPLAYNAME_FIELD_ID:
      return this.displayName;
    case PHONETICNAME_FIELD_ID:
      return this.phoneticName;
    case PICTURESTATUS_FIELD_ID:
      return this.pictureStatus;
    case THUMBNAILURL_FIELD_ID:
      return this.thumbnailUrl;
    case STATUSMESSAGE_FIELD_ID:
      return this.statusMessage;
    case DISPLAYNAMEOVERRIDDEN_FIELD_ID:
      return this.displayNameOverridden;
    case FAVORITETIME_FIELD_ID:
      return this.favoriteTime;
    case CAPABLEVOICECALL_FIELD_ID:
      return this.capableVoiceCall;
    case CAPABLEVIDEOCALL_FIELD_ID:
      return this.capableVideoCall;
    case CAPABLEMYHOME_FIELD_ID:
      return this.capableMyhome;
    case CAPABLEBUDDY_FIELD_ID:
      return this.capableBuddy;
    case ATTRIBUTES_FIELD_ID:
      return this.attributes;
    case SETTINGS_FIELD_ID:
      return this.settings;
    case PICTUREPATH_FIELD_ID:
      return this.picturePath;
    case RECOMMENDPARAMS_FIELD_ID:
      return this.recommendParams;
    case FRIENDREQUESTSTATUS_FIELD_ID:
      return this.friendRequestStatus;
    case MUSICPROFILE_FIELD_ID:
      return this.musicProfile;
    case VIDEOPROFILE_FIELD_ID:
      return this.videoProfile;
    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  public function isSet(fieldID : Int) : Bool {
    switch (fieldID) {
    case MID_FIELD_ID:
      return isSetMid();
    case CREATEDTIME_FIELD_ID:
      return isSetCreatedTime();
    case TYPE_FIELD_ID:
      return isSetType();
    case STATUS_FIELD_ID:
      return isSetStatus();
    case RELATION_FIELD_ID:
      return isSetRelation();
    case DISPLAYNAME_FIELD_ID:
      return isSetDisplayName();
    case PHONETICNAME_FIELD_ID:
      return isSetPhoneticName();
    case PICTURESTATUS_FIELD_ID:
      return isSetPictureStatus();
    case THUMBNAILURL_FIELD_ID:
      return isSetThumbnailUrl();
    case STATUSMESSAGE_FIELD_ID:
      return isSetStatusMessage();
    case DISPLAYNAMEOVERRIDDEN_FIELD_ID:
      return isSetDisplayNameOverridden();
    case FAVORITETIME_FIELD_ID:
      return isSetFavoriteTime();
    case CAPABLEVOICECALL_FIELD_ID:
      return isSetCapableVoiceCall();
    case CAPABLEVIDEOCALL_FIELD_ID:
      return isSetCapableVideoCall();
    case CAPABLEMYHOME_FIELD_ID:
      return isSetCapableMyhome();
    case CAPABLEBUDDY_FIELD_ID:
      return isSetCapableBuddy();
    case ATTRIBUTES_FIELD_ID:
      return isSetAttributes();
    case SETTINGS_FIELD_ID:
      return isSetSettings();
    case PICTUREPATH_FIELD_ID:
      return isSetPicturePath();
    case RECOMMENDPARAMS_FIELD_ID:
      return isSetRecommendParams();
    case FRIENDREQUESTSTATUS_FIELD_ID:
      return isSetFriendRequestStatus();
    case MUSICPROFILE_FIELD_ID:
      return isSetMusicProfile();
    case VIDEOPROFILE_FIELD_ID:
      return isSetVideoProfile();
    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  public function read( iprot : TProtocol) : Void {
    iprot.IncrementRecursionDepth();
    try
    {
      var field : TField;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case MID_FIELD_ID:
            if (field.type == TType.STRING) {
              this.mid = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case CREATEDTIME_FIELD_ID:
            if (field.type == TType.I64) {
              this.createdTime = iprot.readI64();
              this.__isset_createdTime = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case TYPE_FIELD_ID:
            if (field.type == TType.I32) {
              this.type = iprot.readI32();
              this.__isset_type = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case STATUS_FIELD_ID:
            if (field.type == TType.I32) {
              this.status = iprot.readI32();
              this.__isset_status = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case RELATION_FIELD_ID:
            if (field.type == TType.I32) {
              this.relation = iprot.readI32();
              this.__isset_relation = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case DISPLAYNAME_FIELD_ID:
            if (field.type == TType.STRING) {
              this.displayName = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case PHONETICNAME_FIELD_ID:
            if (field.type == TType.STRING) {
              this.phoneticName = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case PICTURESTATUS_FIELD_ID:
            if (field.type == TType.STRING) {
              this.pictureStatus = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case THUMBNAILURL_FIELD_ID:
            if (field.type == TType.STRING) {
              this.thumbnailUrl = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case STATUSMESSAGE_FIELD_ID:
            if (field.type == TType.STRING) {
              this.statusMessage = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case DISPLAYNAMEOVERRIDDEN_FIELD_ID:
            if (field.type == TType.STRING) {
              this.displayNameOverridden = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case FAVORITETIME_FIELD_ID:
            if (field.type == TType.I64) {
              this.favoriteTime = iprot.readI64();
              this.__isset_favoriteTime = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case CAPABLEVOICECALL_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.capableVoiceCall = iprot.readBool();
              this.__isset_capableVoiceCall = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case CAPABLEVIDEOCALL_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.capableVideoCall = iprot.readBool();
              this.__isset_capableVideoCall = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case CAPABLEMYHOME_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.capableMyhome = iprot.readBool();
              this.__isset_capableMyhome = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case CAPABLEBUDDY_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.capableBuddy = iprot.readBool();
              this.__isset_capableBuddy = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case ATTRIBUTES_FIELD_ID:
            if (field.type == TType.I32) {
              this.attributes = iprot.readI32();
              this.__isset_attributes = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case SETTINGS_FIELD_ID:
            if (field.type == TType.I64) {
              this.settings = iprot.readI64();
              this.__isset_settings = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case PICTUREPATH_FIELD_ID:
            if (field.type == TType.STRING) {
              this.picturePath = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case RECOMMENDPARAMS_FIELD_ID:
            if (field.type == TType.STRING) {
              this.recommendParams = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case FRIENDREQUESTSTATUS_FIELD_ID:
            if (field.type == TType.I32) {
              this.friendRequestStatus = iprot.readI32();
              this.__isset_friendRequestStatus = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case MUSICPROFILE_FIELD_ID:
            if (field.type == TType.STRING) {
              this.musicProfile = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case VIDEOPROFILE_FIELD_ID:
            if (field.type == TType.STRING) {
              this.videoProfile = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      iprot.DecrementRecursionDepth();
    }
    catch(e:Dynamic)
    {
      iprot.DecrementRecursionDepth();
      throw e;
    }

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public function write(oprot:TProtocol) : Void {
    validate();
    oprot.IncrementRecursionDepth();
    try
    {
      oprot.writeStructBegin(STRUCT_DESC);
      if (this.mid != null) {
        oprot.writeFieldBegin(MID_FIELD_DESC);
        oprot.writeString(this.mid);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATED_TIME_FIELD_DESC);
      oprot.writeI64(this.createdTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TYPE_FIELD_DESC);
      oprot.writeI32(this.type);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(this.status);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RELATION_FIELD_DESC);
      oprot.writeI32(this.relation);
      oprot.writeFieldEnd();
      if (this.displayName != null) {
        oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
        oprot.writeString(this.displayName);
        oprot.writeFieldEnd();
      }
      if (this.phoneticName != null) {
        oprot.writeFieldBegin(PHONETIC_NAME_FIELD_DESC);
        oprot.writeString(this.phoneticName);
        oprot.writeFieldEnd();
      }
      if (this.pictureStatus != null) {
        oprot.writeFieldBegin(PICTURE_STATUS_FIELD_DESC);
        oprot.writeString(this.pictureStatus);
        oprot.writeFieldEnd();
      }
      if (this.thumbnailUrl != null) {
        oprot.writeFieldBegin(THUMBNAIL_URL_FIELD_DESC);
        oprot.writeString(this.thumbnailUrl);
        oprot.writeFieldEnd();
      }
      if (this.statusMessage != null) {
        oprot.writeFieldBegin(STATUS_MESSAGE_FIELD_DESC);
        oprot.writeString(this.statusMessage);
        oprot.writeFieldEnd();
      }
      if (this.displayNameOverridden != null) {
        oprot.writeFieldBegin(DISPLAY_NAME_OVERRIDDEN_FIELD_DESC);
        oprot.writeString(this.displayNameOverridden);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FAVORITE_TIME_FIELD_DESC);
      oprot.writeI64(this.favoriteTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CAPABLE_VOICE_CALL_FIELD_DESC);
      oprot.writeBool(this.capableVoiceCall);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CAPABLE_VIDEO_CALL_FIELD_DESC);
      oprot.writeBool(this.capableVideoCall);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CAPABLE_MYHOME_FIELD_DESC);
      oprot.writeBool(this.capableMyhome);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CAPABLE_BUDDY_FIELD_DESC);
      oprot.writeBool(this.capableBuddy);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ATTRIBUTES_FIELD_DESC);
      oprot.writeI32(this.attributes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SETTINGS_FIELD_DESC);
      oprot.writeI64(this.settings);
      oprot.writeFieldEnd();
      if (this.picturePath != null) {
        oprot.writeFieldBegin(PICTURE_PATH_FIELD_DESC);
        oprot.writeString(this.picturePath);
        oprot.writeFieldEnd();
      }
      if (this.recommendParams != null) {
        oprot.writeFieldBegin(RECOMMEND_PARAMS_FIELD_DESC);
        oprot.writeString(this.recommendParams);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FRIEND_REQUEST_STATUS_FIELD_DESC);
      oprot.writeI32(this.friendRequestStatus);
      oprot.writeFieldEnd();
      if (this.musicProfile != null) {
        oprot.writeFieldBegin(MUSIC_PROFILE_FIELD_DESC);
        oprot.writeString(this.musicProfile);
        oprot.writeFieldEnd();
      }
      if (this.videoProfile != null) {
        oprot.writeFieldBegin(VIDEO_PROFILE_FIELD_DESC);
        oprot.writeString(this.videoProfile);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
      oprot.DecrementRecursionDepth();
    }
    catch(e:Dynamic)
    {
      oprot.DecrementRecursionDepth();
      throw e;
    }
  }

  public function toString() : String {
    var ret : String = "Contact(";
    var first : Bool = true;

    ret += "mid:";
    if (this.mid == null) {
      ret += "null";
    } else {
      ret += this.mid;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "createdTime:";
    ret += this.createdTime;
    first = false;
    if (!first) ret +=  ", ";
    ret += "type:";
    var type_name : String = .ContactType.VALUES_TO_NAMES[this.type];
    if (type_name != null) {
      ret += type_name;
      ret += " (";
    }
    ret += this.type;
    if (type_name != null) {
      ret += ")";
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "status:";
    var status_name : String = .ContactStatus.VALUES_TO_NAMES[this.status];
    if (status_name != null) {
      ret += status_name;
      ret += " (";
    }
    ret += this.status;
    if (status_name != null) {
      ret += ")";
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "relation:";
    var relation_name : String = .ContactRelation.VALUES_TO_NAMES[this.relation];
    if (relation_name != null) {
      ret += relation_name;
      ret += " (";
    }
    ret += this.relation;
    if (relation_name != null) {
      ret += ")";
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "displayName:";
    if (this.displayName == null) {
      ret += "null";
    } else {
      ret += this.displayName;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "phoneticName:";
    if (this.phoneticName == null) {
      ret += "null";
    } else {
      ret += this.phoneticName;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "pictureStatus:";
    if (this.pictureStatus == null) {
      ret += "null";
    } else {
      ret += this.pictureStatus;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "thumbnailUrl:";
    if (this.thumbnailUrl == null) {
      ret += "null";
    } else {
      ret += this.thumbnailUrl;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "statusMessage:";
    if (this.statusMessage == null) {
      ret += "null";
    } else {
      ret += this.statusMessage;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "displayNameOverridden:";
    if (this.displayNameOverridden == null) {
      ret += "null";
    } else {
      ret += this.displayNameOverridden;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "favoriteTime:";
    ret += this.favoriteTime;
    first = false;
    if (!first) ret +=  ", ";
    ret += "capableVoiceCall:";
    ret += this.capableVoiceCall;
    first = false;
    if (!first) ret +=  ", ";
    ret += "capableVideoCall:";
    ret += this.capableVideoCall;
    first = false;
    if (!first) ret +=  ", ";
    ret += "capableMyhome:";
    ret += this.capableMyhome;
    first = false;
    if (!first) ret +=  ", ";
    ret += "capableBuddy:";
    ret += this.capableBuddy;
    first = false;
    if (!first) ret +=  ", ";
    ret += "attributes:";
    ret += this.attributes;
    first = false;
    if (!first) ret +=  ", ";
    ret += "settings:";
    ret += this.settings;
    first = false;
    if (!first) ret +=  ", ";
    ret += "picturePath:";
    if (this.picturePath == null) {
      ret += "null";
    } else {
      ret += this.picturePath;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "recommendParams:";
    if (this.recommendParams == null) {
      ret += "null";
    } else {
      ret += this.recommendParams;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "friendRequestStatus:";
    var friendRequestStatus_name : String = .FriendRequestStatus.VALUES_TO_NAMES[this.friendRequestStatus];
    if (friendRequestStatus_name != null) {
      ret += friendRequestStatus_name;
      ret += " (";
    }
    ret += this.friendRequestStatus;
    if (friendRequestStatus_name != null) {
      ret += ")";
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "musicProfile:";
    if (this.musicProfile == null) {
      ret += "null";
    } else {
      ret += this.musicProfile;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "videoProfile:";
    if (this.videoProfile == null) {
      ret += "null";
    } else {
      ret += this.videoProfile;
    }
    first = false;
    ret += ")";
    return ret;
  }

  public function validate() : Void {
    // check for required fields
    // check that fields of type enum have valid values
    if (isSetType() && !.ContactType.VALID_VALUES.contains(type)){
      throw new TProtocolException(TProtocolException.UNKNOWN, "The field 'type' has been assigned the invalid value " + type);
    }
    if (isSetStatus() && !.ContactStatus.VALID_VALUES.contains(status)){
      throw new TProtocolException(TProtocolException.UNKNOWN, "The field 'status' has been assigned the invalid value " + status);
    }
    if (isSetRelation() && !.ContactRelation.VALID_VALUES.contains(relation)){
      throw new TProtocolException(TProtocolException.UNKNOWN, "The field 'relation' has been assigned the invalid value " + relation);
    }
    if (isSetFriendRequestStatus() && !.FriendRequestStatus.VALID_VALUES.contains(friendRequestStatus)){
      throw new TProtocolException(TProtocolException.UNKNOWN, "The field 'friendRequestStatus' has been assigned the invalid value " + friendRequestStatus);
    }
  }

}

