/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;


class ExtendedProfileBirthday implements TBase {
  
  static var STRUCT_DESC = { new TStruct("ExtendedProfileBirthday"); };
  static var YEAR_FIELD_DESC = { new TField("year", TType.STRING, 1); };
  static var YEAR_PRIVACY_LEVEL_TYPE_FIELD_DESC = { new TField("yearPrivacyLevelType", TType.I32, 2); };
  static var YEAR_ENABLED_FIELD_DESC = { new TField("yearEnabled", TType.BOOL, 3); };
  static var DAY_FIELD_DESC = { new TField("day", TType.STRING, 5); };
  static var DAY_PRIVACY_LEVEL_TYPE_FIELD_DESC = { new TField("dayPrivacyLevelType", TType.I32, 6); };
  static var DAY_ENABLED_FIELD_DESC = { new TField("dayEnabled", TType.BOOL, 7); };

  @:isVar
  public var year(get,set) : String;
  @:isVar
  public var yearPrivacyLevelType(get,set) : Int;
  @:isVar
  public var yearEnabled(get,set) : Bool;
  @:isVar
  public var day(get,set) : String;
  @:isVar
  public var dayPrivacyLevelType(get,set) : Int;
  @:isVar
  public var dayEnabled(get,set) : Bool;

  inline static var YEAR_FIELD_ID : Int = 1;
  inline static var YEARPRIVACYLEVELTYPE_FIELD_ID : Int = 2;
  inline static var YEARENABLED_FIELD_ID : Int = 3;
  inline static var DAY_FIELD_ID : Int = 5;
  inline static var DAYPRIVACYLEVELTYPE_FIELD_ID : Int = 6;
  inline static var DAYENABLED_FIELD_ID : Int = 7;

  private var __isset_yearPrivacyLevelType : Bool = false;
  private var __isset_yearEnabled : Bool = false;
  private var __isset_dayPrivacyLevelType : Bool = false;
  private var __isset_dayEnabled : Bool = false;

  public function new() {
  }

  public function get_year() : String {
    return this.year;
  }

  public function set_year(year:String) : String {
    this.year = year;
    return this.year;
  }

  public function unsetYear() : Void {
    this.year = null;
  }

  // Returns true if field year is set (has been assigned a value) and false otherwise
  public function isSetYear() : Bool {
    return this.year != null;
  }

  public function get_yearPrivacyLevelType() : Int {
    return this.yearPrivacyLevelType;
  }

  public function set_yearPrivacyLevelType(yearPrivacyLevelType:Int) : Int {
    this.yearPrivacyLevelType = yearPrivacyLevelType;
    this.__isset_yearPrivacyLevelType = true;
    return this.yearPrivacyLevelType;
  }

  public function unsetYearPrivacyLevelType() : Void {
    this.__isset_yearPrivacyLevelType = false;
  }

  // Returns true if field yearPrivacyLevelType is set (has been assigned a value) and false otherwise
  public function isSetYearPrivacyLevelType() : Bool {
    return this.__isset_yearPrivacyLevelType;
  }

  public function get_yearEnabled() : Bool {
    return this.yearEnabled;
  }

  public function set_yearEnabled(yearEnabled:Bool) : Bool {
    this.yearEnabled = yearEnabled;
    this.__isset_yearEnabled = true;
    return this.yearEnabled;
  }

  public function unsetYearEnabled() : Void {
    this.__isset_yearEnabled = false;
  }

  // Returns true if field yearEnabled is set (has been assigned a value) and false otherwise
  public function isSetYearEnabled() : Bool {
    return this.__isset_yearEnabled;
  }

  public function get_day() : String {
    return this.day;
  }

  public function set_day(day:String) : String {
    this.day = day;
    return this.day;
  }

  public function unsetDay() : Void {
    this.day = null;
  }

  // Returns true if field day is set (has been assigned a value) and false otherwise
  public function isSetDay() : Bool {
    return this.day != null;
  }

  public function get_dayPrivacyLevelType() : Int {
    return this.dayPrivacyLevelType;
  }

  public function set_dayPrivacyLevelType(dayPrivacyLevelType:Int) : Int {
    this.dayPrivacyLevelType = dayPrivacyLevelType;
    this.__isset_dayPrivacyLevelType = true;
    return this.dayPrivacyLevelType;
  }

  public function unsetDayPrivacyLevelType() : Void {
    this.__isset_dayPrivacyLevelType = false;
  }

  // Returns true if field dayPrivacyLevelType is set (has been assigned a value) and false otherwise
  public function isSetDayPrivacyLevelType() : Bool {
    return this.__isset_dayPrivacyLevelType;
  }

  public function get_dayEnabled() : Bool {
    return this.dayEnabled;
  }

  public function set_dayEnabled(dayEnabled:Bool) : Bool {
    this.dayEnabled = dayEnabled;
    this.__isset_dayEnabled = true;
    return this.dayEnabled;
  }

  public function unsetDayEnabled() : Void {
    this.__isset_dayEnabled = false;
  }

  // Returns true if field dayEnabled is set (has been assigned a value) and false otherwise
  public function isSetDayEnabled() : Bool {
    return this.__isset_dayEnabled;
  }

  public function setFieldValue(fieldID : Int, value : Dynamic) : Void {
    switch (fieldID) {
    case YEAR_FIELD_ID:
      if (value == null) {
        unsetYear();
      } else {
        this.year = value;
      }

    case YEARPRIVACYLEVELTYPE_FIELD_ID:
      if (value == null) {
        unsetYearPrivacyLevelType();
      } else {
        this.yearPrivacyLevelType = value;
      }

    case YEARENABLED_FIELD_ID:
      if (value == null) {
        unsetYearEnabled();
      } else {
        this.yearEnabled = value;
      }

    case DAY_FIELD_ID:
      if (value == null) {
        unsetDay();
      } else {
        this.day = value;
      }

    case DAYPRIVACYLEVELTYPE_FIELD_ID:
      if (value == null) {
        unsetDayPrivacyLevelType();
      } else {
        this.dayPrivacyLevelType = value;
      }

    case DAYENABLED_FIELD_ID:
      if (value == null) {
        unsetDayEnabled();
      } else {
        this.dayEnabled = value;
      }

    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  public function getFieldValue(fieldID : Int) : Dynamic {
    switch (fieldID) {
    case YEAR_FIELD_ID:
      return this.year;
    case YEARPRIVACYLEVELTYPE_FIELD_ID:
      return this.yearPrivacyLevelType;
    case YEARENABLED_FIELD_ID:
      return this.yearEnabled;
    case DAY_FIELD_ID:
      return this.day;
    case DAYPRIVACYLEVELTYPE_FIELD_ID:
      return this.dayPrivacyLevelType;
    case DAYENABLED_FIELD_ID:
      return this.dayEnabled;
    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  public function isSet(fieldID : Int) : Bool {
    switch (fieldID) {
    case YEAR_FIELD_ID:
      return isSetYear();
    case YEARPRIVACYLEVELTYPE_FIELD_ID:
      return isSetYearPrivacyLevelType();
    case YEARENABLED_FIELD_ID:
      return isSetYearEnabled();
    case DAY_FIELD_ID:
      return isSetDay();
    case DAYPRIVACYLEVELTYPE_FIELD_ID:
      return isSetDayPrivacyLevelType();
    case DAYENABLED_FIELD_ID:
      return isSetDayEnabled();
    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  public function read( iprot : TProtocol) : Void {
    iprot.IncrementRecursionDepth();
    try
    {
      var field : TField;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case YEAR_FIELD_ID:
            if (field.type == TType.STRING) {
              this.year = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case YEARPRIVACYLEVELTYPE_FIELD_ID:
            if (field.type == TType.I32) {
              this.yearPrivacyLevelType = iprot.readI32();
              this.__isset_yearPrivacyLevelType = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case YEARENABLED_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.yearEnabled = iprot.readBool();
              this.__isset_yearEnabled = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case DAY_FIELD_ID:
            if (field.type == TType.STRING) {
              this.day = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case DAYPRIVACYLEVELTYPE_FIELD_ID:
            if (field.type == TType.I32) {
              this.dayPrivacyLevelType = iprot.readI32();
              this.__isset_dayPrivacyLevelType = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case DAYENABLED_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.dayEnabled = iprot.readBool();
              this.__isset_dayEnabled = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      iprot.DecrementRecursionDepth();
    }
    catch(e:Dynamic)
    {
      iprot.DecrementRecursionDepth();
      throw e;
    }

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public function write(oprot:TProtocol) : Void {
    validate();
    oprot.IncrementRecursionDepth();
    try
    {
      oprot.writeStructBegin(STRUCT_DESC);
      if (this.year != null) {
        oprot.writeFieldBegin(YEAR_FIELD_DESC);
        oprot.writeString(this.year);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(YEAR_PRIVACY_LEVEL_TYPE_FIELD_DESC);
      oprot.writeI32(this.yearPrivacyLevelType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(YEAR_ENABLED_FIELD_DESC);
      oprot.writeBool(this.yearEnabled);
      oprot.writeFieldEnd();
      if (this.day != null) {
        oprot.writeFieldBegin(DAY_FIELD_DESC);
        oprot.writeString(this.day);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DAY_PRIVACY_LEVEL_TYPE_FIELD_DESC);
      oprot.writeI32(this.dayPrivacyLevelType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DAY_ENABLED_FIELD_DESC);
      oprot.writeBool(this.dayEnabled);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
      oprot.DecrementRecursionDepth();
    }
    catch(e:Dynamic)
    {
      oprot.DecrementRecursionDepth();
      throw e;
    }
  }

  public function toString() : String {
    var ret : String = "ExtendedProfileBirthday(";
    var first : Bool = true;

    ret += "year:";
    if (this.year == null) {
      ret += "null";
    } else {
      ret += this.year;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "yearPrivacyLevelType:";
    var yearPrivacyLevelType_name : String = .PrivacyLevelType.VALUES_TO_NAMES[this.yearPrivacyLevelType];
    if (yearPrivacyLevelType_name != null) {
      ret += yearPrivacyLevelType_name;
      ret += " (";
    }
    ret += this.yearPrivacyLevelType;
    if (yearPrivacyLevelType_name != null) {
      ret += ")";
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "yearEnabled:";
    ret += this.yearEnabled;
    first = false;
    if (!first) ret +=  ", ";
    ret += "day:";
    if (this.day == null) {
      ret += "null";
    } else {
      ret += this.day;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "dayPrivacyLevelType:";
    var dayPrivacyLevelType_name : String = .PrivacyLevelType.VALUES_TO_NAMES[this.dayPrivacyLevelType];
    if (dayPrivacyLevelType_name != null) {
      ret += dayPrivacyLevelType_name;
      ret += " (";
    }
    ret += this.dayPrivacyLevelType;
    if (dayPrivacyLevelType_name != null) {
      ret += ")";
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "dayEnabled:";
    ret += this.dayEnabled;
    first = false;
    ret += ")";
    return ret;
  }

  public function validate() : Void {
    // check for required fields
    // check that fields of type enum have valid values
    if (isSetYearPrivacyLevelType() && !.PrivacyLevelType.VALID_VALUES.contains(yearPrivacyLevelType)){
      throw new TProtocolException(TProtocolException.UNKNOWN, "The field 'yearPrivacyLevelType' has been assigned the invalid value " + yearPrivacyLevelType);
    }
    if (isSetDayPrivacyLevelType() && !.PrivacyLevelType.VALID_VALUES.contains(dayPrivacyLevelType)){
      throw new TProtocolException(TProtocolException.UNKNOWN, "The field 'dayPrivacyLevelType' has been assigned the invalid value " + dayPrivacyLevelType);
    }
  }

}

