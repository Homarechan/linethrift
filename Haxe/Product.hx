/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;


class Product implements TBase {
  
  static var STRUCT_DESC = { new TStruct("Product"); };
  static var PRODUCT_ID_FIELD_DESC = { new TField("productId", TType.STRING, 1); };
  static var PACKAGE_ID_FIELD_DESC = { new TField("packageId", TType.I64, 2); };
  static var VERSION_FIELD_DESC = { new TField("version", TType.I32, 3); };
  static var AUTHOR_NAME_FIELD_DESC = { new TField("authorName", TType.STRING, 4); };
  static var ON_SALE_FIELD_DESC = { new TField("onSale", TType.BOOL, 5); };
  static var VALID_DAYS_FIELD_DESC = { new TField("validDays", TType.I32, 6); };
  static var SALE_TYPE_FIELD_DESC = { new TField("saleType", TType.I32, 7); };
  static var COPYRIGHT_FIELD_DESC = { new TField("copyright", TType.STRING, 8); };
  static var TITLE_FIELD_DESC = { new TField("title", TType.STRING, 9); };
  static var DESCRIPTION_TEXT_FIELD_DESC = { new TField("descriptionText", TType.STRING, 10); };
  static var SHOP_ORDER_ID_FIELD_DESC = { new TField("shopOrderId", TType.I64, 11); };
  static var FROM_MID_FIELD_DESC = { new TField("fromMid", TType.STRING, 12); };
  static var TO_MID_FIELD_DESC = { new TField("toMid", TType.STRING, 13); };
  static var VALID_UNTIL_FIELD_DESC = { new TField("validUntil", TType.I64, 14); };
  static var PRICE_TIER_FIELD_DESC = { new TField("priceTier", TType.I32, 15); };
  static var PRICE_FIELD_DESC = { new TField("price", TType.STRING, 16); };
  static var CURRENCY_FIELD_DESC = { new TField("currency", TType.STRING, 17); };
  static var CURRENCY_SYMBOL_FIELD_DESC = { new TField("currencySymbol", TType.STRING, 18); };
  static var PAYMENT_TYPE_FIELD_DESC = { new TField("paymentType", TType.I32, 19); };
  static var CREATE_DATE_FIELD_DESC = { new TField("createDate", TType.I64, 20); };
  static var OWN_FLAG_FIELD_DESC = { new TField("ownFlag", TType.BOOL, 21); };
  static var EVENT_TYPE_FIELD_DESC = { new TField("eventType", TType.I32, 22); };
  static var URL_SCHEMA_FIELD_DESC = { new TField("urlSchema", TType.STRING, 23); };
  static var DOWNLOAD_URL_FIELD_DESC = { new TField("downloadUrl", TType.STRING, 24); };
  static var BUDDY_MID_FIELD_DESC = { new TField("buddyMid", TType.STRING, 25); };
  static var PUBLISH_SINCE_FIELD_DESC = { new TField("publishSince", TType.I64, 26); };
  static var NEW_FLAG_FIELD_DESC = { new TField("newFlag", TType.BOOL, 27); };
  static var MISSION_FLAG_FIELD_DESC = { new TField("missionFlag", TType.BOOL, 28); };
  static var CATEGORIES_FIELD_DESC = { new TField("categories", TType.LIST, 29); };
  static var MISSION_BUTTON_TEXT_FIELD_DESC = { new TField("missionButtonText", TType.STRING, 30); };
  static var MISSION_SHORT_DESCRIPTION_FIELD_DESC = { new TField("missionShortDescription", TType.STRING, 31); };
  static var AUTHOR_ID_FIELD_DESC = { new TField("authorId", TType.STRING, 32); };
  static var GRANTED_BY_DEFAULT_FIELD_DESC = { new TField("grantedByDefault", TType.BOOL, 41); };
  static var DISPLAY_ORDER_FIELD_DESC = { new TField("displayOrder", TType.I32, 42); };
  static var AVAILABLE_FOR_PRESENT_FIELD_DESC = { new TField("availableForPresent", TType.BOOL, 43); };
  static var AVAILABLE_FOR_MYSELF_FIELD_DESC = { new TField("availableForMyself", TType.BOOL, 44); };
  static var HAS_ANIMATION_FIELD_DESC = { new TField("hasAnimation", TType.BOOL, 51); };
  static var HAS_SOUND_FIELD_DESC = { new TField("hasSound", TType.BOOL, 52); };
  static var RECOMMENDATIONS_ENABLED_FIELD_DESC = { new TField("recommendationsEnabled", TType.BOOL, 53); };
  static var STICKER_RESOURCE_TYPE_FIELD_DESC = { new TField("stickerResourceType", TType.I32, 54); };

  @:isVar
  public var productId(get,set) : String;
  @:isVar
  public var packageId(get,set) : haxe.Int64;
  @:isVar
  public var version(get,set) : haxe.Int32;
  @:isVar
  public var authorName(get,set) : String;
  @:isVar
  public var onSale(get,set) : Bool;
  @:isVar
  public var validDays(get,set) : haxe.Int32;
  @:isVar
  public var saleType(get,set) : haxe.Int32;
  @:isVar
  public var copyright(get,set) : String;
  @:isVar
  public var title(get,set) : String;
  @:isVar
  public var descriptionText(get,set) : String;
  @:isVar
  public var shopOrderId(get,set) : haxe.Int64;
  @:isVar
  public var fromMid(get,set) : String;
  @:isVar
  public var toMid(get,set) : String;
  @:isVar
  public var validUntil(get,set) : haxe.Int64;
  @:isVar
  public var priceTier(get,set) : haxe.Int32;
  @:isVar
  public var price(get,set) : String;
  @:isVar
  public var currency(get,set) : String;
  @:isVar
  public var currencySymbol(get,set) : String;
  @:isVar
  public var paymentType(get,set) : Int;
  @:isVar
  public var createDate(get,set) : haxe.Int64;
  @:isVar
  public var ownFlag(get,set) : Bool;
  @:isVar
  public var eventType(get,set) : Int;
  @:isVar
  public var urlSchema(get,set) : String;
  @:isVar
  public var downloadUrl(get,set) : String;
  @:isVar
  public var buddyMid(get,set) : String;
  @:isVar
  public var publishSince(get,set) : haxe.Int64;
  @:isVar
  public var newFlag(get,set) : Bool;
  @:isVar
  public var missionFlag(get,set) : Bool;
  @:isVar
  public var categories(get,set) : List< ProductCategory>;
  @:isVar
  public var missionButtonText(get,set) : String;
  @:isVar
  public var missionShortDescription(get,set) : String;
  @:isVar
  public var authorId(get,set) : String;
  @:isVar
  public var grantedByDefault(get,set) : Bool;
  @:isVar
  public var displayOrder(get,set) : haxe.Int32;
  @:isVar
  public var availableForPresent(get,set) : Bool;
  @:isVar
  public var availableForMyself(get,set) : Bool;
  @:isVar
  public var hasAnimation(get,set) : Bool;
  @:isVar
  public var hasSound(get,set) : Bool;
  @:isVar
  public var recommendationsEnabled(get,set) : Bool;
  @:isVar
  public var stickerResourceType(get,set) : Int;

  inline static var PRODUCTID_FIELD_ID : Int = 1;
  inline static var PACKAGEID_FIELD_ID : Int = 2;
  inline static var VERSION_FIELD_ID : Int = 3;
  inline static var AUTHORNAME_FIELD_ID : Int = 4;
  inline static var ONSALE_FIELD_ID : Int = 5;
  inline static var VALIDDAYS_FIELD_ID : Int = 6;
  inline static var SALETYPE_FIELD_ID : Int = 7;
  inline static var COPYRIGHT_FIELD_ID : Int = 8;
  inline static var TITLE_FIELD_ID : Int = 9;
  inline static var DESCRIPTIONTEXT_FIELD_ID : Int = 10;
  inline static var SHOPORDERID_FIELD_ID : Int = 11;
  inline static var FROMMID_FIELD_ID : Int = 12;
  inline static var TOMID_FIELD_ID : Int = 13;
  inline static var VALIDUNTIL_FIELD_ID : Int = 14;
  inline static var PRICETIER_FIELD_ID : Int = 15;
  inline static var PRICE_FIELD_ID : Int = 16;
  inline static var CURRENCY_FIELD_ID : Int = 17;
  inline static var CURRENCYSYMBOL_FIELD_ID : Int = 18;
  inline static var PAYMENTTYPE_FIELD_ID : Int = 19;
  inline static var CREATEDATE_FIELD_ID : Int = 20;
  inline static var OWNFLAG_FIELD_ID : Int = 21;
  inline static var EVENTTYPE_FIELD_ID : Int = 22;
  inline static var URLSCHEMA_FIELD_ID : Int = 23;
  inline static var DOWNLOADURL_FIELD_ID : Int = 24;
  inline static var BUDDYMID_FIELD_ID : Int = 25;
  inline static var PUBLISHSINCE_FIELD_ID : Int = 26;
  inline static var NEWFLAG_FIELD_ID : Int = 27;
  inline static var MISSIONFLAG_FIELD_ID : Int = 28;
  inline static var CATEGORIES_FIELD_ID : Int = 29;
  inline static var MISSIONBUTTONTEXT_FIELD_ID : Int = 30;
  inline static var MISSIONSHORTDESCRIPTION_FIELD_ID : Int = 31;
  inline static var AUTHORID_FIELD_ID : Int = 32;
  inline static var GRANTEDBYDEFAULT_FIELD_ID : Int = 41;
  inline static var DISPLAYORDER_FIELD_ID : Int = 42;
  inline static var AVAILABLEFORPRESENT_FIELD_ID : Int = 43;
  inline static var AVAILABLEFORMYSELF_FIELD_ID : Int = 44;
  inline static var HASANIMATION_FIELD_ID : Int = 51;
  inline static var HASSOUND_FIELD_ID : Int = 52;
  inline static var RECOMMENDATIONSENABLED_FIELD_ID : Int = 53;
  inline static var STICKERRESOURCETYPE_FIELD_ID : Int = 54;

  private var __isset_packageId : Bool = false;
  private var __isset_version : Bool = false;
  private var __isset_onSale : Bool = false;
  private var __isset_validDays : Bool = false;
  private var __isset_saleType : Bool = false;
  private var __isset_shopOrderId : Bool = false;
  private var __isset_validUntil : Bool = false;
  private var __isset_priceTier : Bool = false;
  private var __isset_paymentType : Bool = false;
  private var __isset_createDate : Bool = false;
  private var __isset_ownFlag : Bool = false;
  private var __isset_eventType : Bool = false;
  private var __isset_publishSince : Bool = false;
  private var __isset_newFlag : Bool = false;
  private var __isset_missionFlag : Bool = false;
  private var __isset_grantedByDefault : Bool = false;
  private var __isset_displayOrder : Bool = false;
  private var __isset_availableForPresent : Bool = false;
  private var __isset_availableForMyself : Bool = false;
  private var __isset_hasAnimation : Bool = false;
  private var __isset_hasSound : Bool = false;
  private var __isset_recommendationsEnabled : Bool = false;
  private var __isset_stickerResourceType : Bool = false;

  public function new() {
  }

  public function get_productId() : String {
    return this.productId;
  }

  public function set_productId(productId:String) : String {
    this.productId = productId;
    return this.productId;
  }

  public function unsetProductId() : Void {
    this.productId = null;
  }

  // Returns true if field productId is set (has been assigned a value) and false otherwise
  public function isSetProductId() : Bool {
    return this.productId != null;
  }

  public function get_packageId() : haxe.Int64 {
    return this.packageId;
  }

  public function set_packageId(packageId:haxe.Int64) : haxe.Int64 {
    this.packageId = packageId;
    this.__isset_packageId = true;
    return this.packageId;
  }

  public function unsetPackageId() : Void {
    this.__isset_packageId = false;
  }

  // Returns true if field packageId is set (has been assigned a value) and false otherwise
  public function isSetPackageId() : Bool {
    return this.__isset_packageId;
  }

  public function get_version() : haxe.Int32 {
    return this.version;
  }

  public function set_version(version:haxe.Int32) : haxe.Int32 {
    this.version = version;
    this.__isset_version = true;
    return this.version;
  }

  public function unsetVersion() : Void {
    this.__isset_version = false;
  }

  // Returns true if field version is set (has been assigned a value) and false otherwise
  public function isSetVersion() : Bool {
    return this.__isset_version;
  }

  public function get_authorName() : String {
    return this.authorName;
  }

  public function set_authorName(authorName:String) : String {
    this.authorName = authorName;
    return this.authorName;
  }

  public function unsetAuthorName() : Void {
    this.authorName = null;
  }

  // Returns true if field authorName is set (has been assigned a value) and false otherwise
  public function isSetAuthorName() : Bool {
    return this.authorName != null;
  }

  public function get_onSale() : Bool {
    return this.onSale;
  }

  public function set_onSale(onSale:Bool) : Bool {
    this.onSale = onSale;
    this.__isset_onSale = true;
    return this.onSale;
  }

  public function unsetOnSale() : Void {
    this.__isset_onSale = false;
  }

  // Returns true if field onSale is set (has been assigned a value) and false otherwise
  public function isSetOnSale() : Bool {
    return this.__isset_onSale;
  }

  public function get_validDays() : haxe.Int32 {
    return this.validDays;
  }

  public function set_validDays(validDays:haxe.Int32) : haxe.Int32 {
    this.validDays = validDays;
    this.__isset_validDays = true;
    return this.validDays;
  }

  public function unsetValidDays() : Void {
    this.__isset_validDays = false;
  }

  // Returns true if field validDays is set (has been assigned a value) and false otherwise
  public function isSetValidDays() : Bool {
    return this.__isset_validDays;
  }

  public function get_saleType() : haxe.Int32 {
    return this.saleType;
  }

  public function set_saleType(saleType:haxe.Int32) : haxe.Int32 {
    this.saleType = saleType;
    this.__isset_saleType = true;
    return this.saleType;
  }

  public function unsetSaleType() : Void {
    this.__isset_saleType = false;
  }

  // Returns true if field saleType is set (has been assigned a value) and false otherwise
  public function isSetSaleType() : Bool {
    return this.__isset_saleType;
  }

  public function get_copyright() : String {
    return this.copyright;
  }

  public function set_copyright(copyright:String) : String {
    this.copyright = copyright;
    return this.copyright;
  }

  public function unsetCopyright() : Void {
    this.copyright = null;
  }

  // Returns true if field copyright is set (has been assigned a value) and false otherwise
  public function isSetCopyright() : Bool {
    return this.copyright != null;
  }

  public function get_title() : String {
    return this.title;
  }

  public function set_title(title:String) : String {
    this.title = title;
    return this.title;
  }

  public function unsetTitle() : Void {
    this.title = null;
  }

  // Returns true if field title is set (has been assigned a value) and false otherwise
  public function isSetTitle() : Bool {
    return this.title != null;
  }

  public function get_descriptionText() : String {
    return this.descriptionText;
  }

  public function set_descriptionText(descriptionText:String) : String {
    this.descriptionText = descriptionText;
    return this.descriptionText;
  }

  public function unsetDescriptionText() : Void {
    this.descriptionText = null;
  }

  // Returns true if field descriptionText is set (has been assigned a value) and false otherwise
  public function isSetDescriptionText() : Bool {
    return this.descriptionText != null;
  }

  public function get_shopOrderId() : haxe.Int64 {
    return this.shopOrderId;
  }

  public function set_shopOrderId(shopOrderId:haxe.Int64) : haxe.Int64 {
    this.shopOrderId = shopOrderId;
    this.__isset_shopOrderId = true;
    return this.shopOrderId;
  }

  public function unsetShopOrderId() : Void {
    this.__isset_shopOrderId = false;
  }

  // Returns true if field shopOrderId is set (has been assigned a value) and false otherwise
  public function isSetShopOrderId() : Bool {
    return this.__isset_shopOrderId;
  }

  public function get_fromMid() : String {
    return this.fromMid;
  }

  public function set_fromMid(fromMid:String) : String {
    this.fromMid = fromMid;
    return this.fromMid;
  }

  public function unsetFromMid() : Void {
    this.fromMid = null;
  }

  // Returns true if field fromMid is set (has been assigned a value) and false otherwise
  public function isSetFromMid() : Bool {
    return this.fromMid != null;
  }

  public function get_toMid() : String {
    return this.toMid;
  }

  public function set_toMid(toMid:String) : String {
    this.toMid = toMid;
    return this.toMid;
  }

  public function unsetToMid() : Void {
    this.toMid = null;
  }

  // Returns true if field toMid is set (has been assigned a value) and false otherwise
  public function isSetToMid() : Bool {
    return this.toMid != null;
  }

  public function get_validUntil() : haxe.Int64 {
    return this.validUntil;
  }

  public function set_validUntil(validUntil:haxe.Int64) : haxe.Int64 {
    this.validUntil = validUntil;
    this.__isset_validUntil = true;
    return this.validUntil;
  }

  public function unsetValidUntil() : Void {
    this.__isset_validUntil = false;
  }

  // Returns true if field validUntil is set (has been assigned a value) and false otherwise
  public function isSetValidUntil() : Bool {
    return this.__isset_validUntil;
  }

  public function get_priceTier() : haxe.Int32 {
    return this.priceTier;
  }

  public function set_priceTier(priceTier:haxe.Int32) : haxe.Int32 {
    this.priceTier = priceTier;
    this.__isset_priceTier = true;
    return this.priceTier;
  }

  public function unsetPriceTier() : Void {
    this.__isset_priceTier = false;
  }

  // Returns true if field priceTier is set (has been assigned a value) and false otherwise
  public function isSetPriceTier() : Bool {
    return this.__isset_priceTier;
  }

  public function get_price() : String {
    return this.price;
  }

  public function set_price(price:String) : String {
    this.price = price;
    return this.price;
  }

  public function unsetPrice() : Void {
    this.price = null;
  }

  // Returns true if field price is set (has been assigned a value) and false otherwise
  public function isSetPrice() : Bool {
    return this.price != null;
  }

  public function get_currency() : String {
    return this.currency;
  }

  public function set_currency(currency:String) : String {
    this.currency = currency;
    return this.currency;
  }

  public function unsetCurrency() : Void {
    this.currency = null;
  }

  // Returns true if field currency is set (has been assigned a value) and false otherwise
  public function isSetCurrency() : Bool {
    return this.currency != null;
  }

  public function get_currencySymbol() : String {
    return this.currencySymbol;
  }

  public function set_currencySymbol(currencySymbol:String) : String {
    this.currencySymbol = currencySymbol;
    return this.currencySymbol;
  }

  public function unsetCurrencySymbol() : Void {
    this.currencySymbol = null;
  }

  // Returns true if field currencySymbol is set (has been assigned a value) and false otherwise
  public function isSetCurrencySymbol() : Bool {
    return this.currencySymbol != null;
  }

  public function get_paymentType() : Int {
    return this.paymentType;
  }

  public function set_paymentType(paymentType:Int) : Int {
    this.paymentType = paymentType;
    this.__isset_paymentType = true;
    return this.paymentType;
  }

  public function unsetPaymentType() : Void {
    this.__isset_paymentType = false;
  }

  // Returns true if field paymentType is set (has been assigned a value) and false otherwise
  public function isSetPaymentType() : Bool {
    return this.__isset_paymentType;
  }

  public function get_createDate() : haxe.Int64 {
    return this.createDate;
  }

  public function set_createDate(createDate:haxe.Int64) : haxe.Int64 {
    this.createDate = createDate;
    this.__isset_createDate = true;
    return this.createDate;
  }

  public function unsetCreateDate() : Void {
    this.__isset_createDate = false;
  }

  // Returns true if field createDate is set (has been assigned a value) and false otherwise
  public function isSetCreateDate() : Bool {
    return this.__isset_createDate;
  }

  public function get_ownFlag() : Bool {
    return this.ownFlag;
  }

  public function set_ownFlag(ownFlag:Bool) : Bool {
    this.ownFlag = ownFlag;
    this.__isset_ownFlag = true;
    return this.ownFlag;
  }

  public function unsetOwnFlag() : Void {
    this.__isset_ownFlag = false;
  }

  // Returns true if field ownFlag is set (has been assigned a value) and false otherwise
  public function isSetOwnFlag() : Bool {
    return this.__isset_ownFlag;
  }

  public function get_eventType() : Int {
    return this.eventType;
  }

  public function set_eventType(eventType:Int) : Int {
    this.eventType = eventType;
    this.__isset_eventType = true;
    return this.eventType;
  }

  public function unsetEventType() : Void {
    this.__isset_eventType = false;
  }

  // Returns true if field eventType is set (has been assigned a value) and false otherwise
  public function isSetEventType() : Bool {
    return this.__isset_eventType;
  }

  public function get_urlSchema() : String {
    return this.urlSchema;
  }

  public function set_urlSchema(urlSchema:String) : String {
    this.urlSchema = urlSchema;
    return this.urlSchema;
  }

  public function unsetUrlSchema() : Void {
    this.urlSchema = null;
  }

  // Returns true if field urlSchema is set (has been assigned a value) and false otherwise
  public function isSetUrlSchema() : Bool {
    return this.urlSchema != null;
  }

  public function get_downloadUrl() : String {
    return this.downloadUrl;
  }

  public function set_downloadUrl(downloadUrl:String) : String {
    this.downloadUrl = downloadUrl;
    return this.downloadUrl;
  }

  public function unsetDownloadUrl() : Void {
    this.downloadUrl = null;
  }

  // Returns true if field downloadUrl is set (has been assigned a value) and false otherwise
  public function isSetDownloadUrl() : Bool {
    return this.downloadUrl != null;
  }

  public function get_buddyMid() : String {
    return this.buddyMid;
  }

  public function set_buddyMid(buddyMid:String) : String {
    this.buddyMid = buddyMid;
    return this.buddyMid;
  }

  public function unsetBuddyMid() : Void {
    this.buddyMid = null;
  }

  // Returns true if field buddyMid is set (has been assigned a value) and false otherwise
  public function isSetBuddyMid() : Bool {
    return this.buddyMid != null;
  }

  public function get_publishSince() : haxe.Int64 {
    return this.publishSince;
  }

  public function set_publishSince(publishSince:haxe.Int64) : haxe.Int64 {
    this.publishSince = publishSince;
    this.__isset_publishSince = true;
    return this.publishSince;
  }

  public function unsetPublishSince() : Void {
    this.__isset_publishSince = false;
  }

  // Returns true if field publishSince is set (has been assigned a value) and false otherwise
  public function isSetPublishSince() : Bool {
    return this.__isset_publishSince;
  }

  public function get_newFlag() : Bool {
    return this.newFlag;
  }

  public function set_newFlag(newFlag:Bool) : Bool {
    this.newFlag = newFlag;
    this.__isset_newFlag = true;
    return this.newFlag;
  }

  public function unsetNewFlag() : Void {
    this.__isset_newFlag = false;
  }

  // Returns true if field newFlag is set (has been assigned a value) and false otherwise
  public function isSetNewFlag() : Bool {
    return this.__isset_newFlag;
  }

  public function get_missionFlag() : Bool {
    return this.missionFlag;
  }

  public function set_missionFlag(missionFlag:Bool) : Bool {
    this.missionFlag = missionFlag;
    this.__isset_missionFlag = true;
    return this.missionFlag;
  }

  public function unsetMissionFlag() : Void {
    this.__isset_missionFlag = false;
  }

  // Returns true if field missionFlag is set (has been assigned a value) and false otherwise
  public function isSetMissionFlag() : Bool {
    return this.__isset_missionFlag;
  }

  public function get_categories() : List< ProductCategory> {
    return this.categories;
  }

  public function set_categories(categories:List< ProductCategory>) : List< ProductCategory> {
    this.categories = categories;
    return this.categories;
  }

  public function unsetCategories() : Void {
    this.categories = null;
  }

  // Returns true if field categories is set (has been assigned a value) and false otherwise
  public function isSetCategories() : Bool {
    return this.categories != null;
  }

  public function get_missionButtonText() : String {
    return this.missionButtonText;
  }

  public function set_missionButtonText(missionButtonText:String) : String {
    this.missionButtonText = missionButtonText;
    return this.missionButtonText;
  }

  public function unsetMissionButtonText() : Void {
    this.missionButtonText = null;
  }

  // Returns true if field missionButtonText is set (has been assigned a value) and false otherwise
  public function isSetMissionButtonText() : Bool {
    return this.missionButtonText != null;
  }

  public function get_missionShortDescription() : String {
    return this.missionShortDescription;
  }

  public function set_missionShortDescription(missionShortDescription:String) : String {
    this.missionShortDescription = missionShortDescription;
    return this.missionShortDescription;
  }

  public function unsetMissionShortDescription() : Void {
    this.missionShortDescription = null;
  }

  // Returns true if field missionShortDescription is set (has been assigned a value) and false otherwise
  public function isSetMissionShortDescription() : Bool {
    return this.missionShortDescription != null;
  }

  public function get_authorId() : String {
    return this.authorId;
  }

  public function set_authorId(authorId:String) : String {
    this.authorId = authorId;
    return this.authorId;
  }

  public function unsetAuthorId() : Void {
    this.authorId = null;
  }

  // Returns true if field authorId is set (has been assigned a value) and false otherwise
  public function isSetAuthorId() : Bool {
    return this.authorId != null;
  }

  public function get_grantedByDefault() : Bool {
    return this.grantedByDefault;
  }

  public function set_grantedByDefault(grantedByDefault:Bool) : Bool {
    this.grantedByDefault = grantedByDefault;
    this.__isset_grantedByDefault = true;
    return this.grantedByDefault;
  }

  public function unsetGrantedByDefault() : Void {
    this.__isset_grantedByDefault = false;
  }

  // Returns true if field grantedByDefault is set (has been assigned a value) and false otherwise
  public function isSetGrantedByDefault() : Bool {
    return this.__isset_grantedByDefault;
  }

  public function get_displayOrder() : haxe.Int32 {
    return this.displayOrder;
  }

  public function set_displayOrder(displayOrder:haxe.Int32) : haxe.Int32 {
    this.displayOrder = displayOrder;
    this.__isset_displayOrder = true;
    return this.displayOrder;
  }

  public function unsetDisplayOrder() : Void {
    this.__isset_displayOrder = false;
  }

  // Returns true if field displayOrder is set (has been assigned a value) and false otherwise
  public function isSetDisplayOrder() : Bool {
    return this.__isset_displayOrder;
  }

  public function get_availableForPresent() : Bool {
    return this.availableForPresent;
  }

  public function set_availableForPresent(availableForPresent:Bool) : Bool {
    this.availableForPresent = availableForPresent;
    this.__isset_availableForPresent = true;
    return this.availableForPresent;
  }

  public function unsetAvailableForPresent() : Void {
    this.__isset_availableForPresent = false;
  }

  // Returns true if field availableForPresent is set (has been assigned a value) and false otherwise
  public function isSetAvailableForPresent() : Bool {
    return this.__isset_availableForPresent;
  }

  public function get_availableForMyself() : Bool {
    return this.availableForMyself;
  }

  public function set_availableForMyself(availableForMyself:Bool) : Bool {
    this.availableForMyself = availableForMyself;
    this.__isset_availableForMyself = true;
    return this.availableForMyself;
  }

  public function unsetAvailableForMyself() : Void {
    this.__isset_availableForMyself = false;
  }

  // Returns true if field availableForMyself is set (has been assigned a value) and false otherwise
  public function isSetAvailableForMyself() : Bool {
    return this.__isset_availableForMyself;
  }

  public function get_hasAnimation() : Bool {
    return this.hasAnimation;
  }

  public function set_hasAnimation(hasAnimation:Bool) : Bool {
    this.hasAnimation = hasAnimation;
    this.__isset_hasAnimation = true;
    return this.hasAnimation;
  }

  public function unsetHasAnimation() : Void {
    this.__isset_hasAnimation = false;
  }

  // Returns true if field hasAnimation is set (has been assigned a value) and false otherwise
  public function isSetHasAnimation() : Bool {
    return this.__isset_hasAnimation;
  }

  public function get_hasSound() : Bool {
    return this.hasSound;
  }

  public function set_hasSound(hasSound:Bool) : Bool {
    this.hasSound = hasSound;
    this.__isset_hasSound = true;
    return this.hasSound;
  }

  public function unsetHasSound() : Void {
    this.__isset_hasSound = false;
  }

  // Returns true if field hasSound is set (has been assigned a value) and false otherwise
  public function isSetHasSound() : Bool {
    return this.__isset_hasSound;
  }

  public function get_recommendationsEnabled() : Bool {
    return this.recommendationsEnabled;
  }

  public function set_recommendationsEnabled(recommendationsEnabled:Bool) : Bool {
    this.recommendationsEnabled = recommendationsEnabled;
    this.__isset_recommendationsEnabled = true;
    return this.recommendationsEnabled;
  }

  public function unsetRecommendationsEnabled() : Void {
    this.__isset_recommendationsEnabled = false;
  }

  // Returns true if field recommendationsEnabled is set (has been assigned a value) and false otherwise
  public function isSetRecommendationsEnabled() : Bool {
    return this.__isset_recommendationsEnabled;
  }

  public function get_stickerResourceType() : Int {
    return this.stickerResourceType;
  }

  public function set_stickerResourceType(stickerResourceType:Int) : Int {
    this.stickerResourceType = stickerResourceType;
    this.__isset_stickerResourceType = true;
    return this.stickerResourceType;
  }

  public function unsetStickerResourceType() : Void {
    this.__isset_stickerResourceType = false;
  }

  // Returns true if field stickerResourceType is set (has been assigned a value) and false otherwise
  public function isSetStickerResourceType() : Bool {
    return this.__isset_stickerResourceType;
  }

  public function setFieldValue(fieldID : Int, value : Dynamic) : Void {
    switch (fieldID) {
    case PRODUCTID_FIELD_ID:
      if (value == null) {
        unsetProductId();
      } else {
        this.productId = value;
      }

    case PACKAGEID_FIELD_ID:
      if (value == null) {
        unsetPackageId();
      } else {
        this.packageId = value;
      }

    case VERSION_FIELD_ID:
      if (value == null) {
        unsetVersion();
      } else {
        this.version = value;
      }

    case AUTHORNAME_FIELD_ID:
      if (value == null) {
        unsetAuthorName();
      } else {
        this.authorName = value;
      }

    case ONSALE_FIELD_ID:
      if (value == null) {
        unsetOnSale();
      } else {
        this.onSale = value;
      }

    case VALIDDAYS_FIELD_ID:
      if (value == null) {
        unsetValidDays();
      } else {
        this.validDays = value;
      }

    case SALETYPE_FIELD_ID:
      if (value == null) {
        unsetSaleType();
      } else {
        this.saleType = value;
      }

    case COPYRIGHT_FIELD_ID:
      if (value == null) {
        unsetCopyright();
      } else {
        this.copyright = value;
      }

    case TITLE_FIELD_ID:
      if (value == null) {
        unsetTitle();
      } else {
        this.title = value;
      }

    case DESCRIPTIONTEXT_FIELD_ID:
      if (value == null) {
        unsetDescriptionText();
      } else {
        this.descriptionText = value;
      }

    case SHOPORDERID_FIELD_ID:
      if (value == null) {
        unsetShopOrderId();
      } else {
        this.shopOrderId = value;
      }

    case FROMMID_FIELD_ID:
      if (value == null) {
        unsetFromMid();
      } else {
        this.fromMid = value;
      }

    case TOMID_FIELD_ID:
      if (value == null) {
        unsetToMid();
      } else {
        this.toMid = value;
      }

    case VALIDUNTIL_FIELD_ID:
      if (value == null) {
        unsetValidUntil();
      } else {
        this.validUntil = value;
      }

    case PRICETIER_FIELD_ID:
      if (value == null) {
        unsetPriceTier();
      } else {
        this.priceTier = value;
      }

    case PRICE_FIELD_ID:
      if (value == null) {
        unsetPrice();
      } else {
        this.price = value;
      }

    case CURRENCY_FIELD_ID:
      if (value == null) {
        unsetCurrency();
      } else {
        this.currency = value;
      }

    case CURRENCYSYMBOL_FIELD_ID:
      if (value == null) {
        unsetCurrencySymbol();
      } else {
        this.currencySymbol = value;
      }

    case PAYMENTTYPE_FIELD_ID:
      if (value == null) {
        unsetPaymentType();
      } else {
        this.paymentType = value;
      }

    case CREATEDATE_FIELD_ID:
      if (value == null) {
        unsetCreateDate();
      } else {
        this.createDate = value;
      }

    case OWNFLAG_FIELD_ID:
      if (value == null) {
        unsetOwnFlag();
      } else {
        this.ownFlag = value;
      }

    case EVENTTYPE_FIELD_ID:
      if (value == null) {
        unsetEventType();
      } else {
        this.eventType = value;
      }

    case URLSCHEMA_FIELD_ID:
      if (value == null) {
        unsetUrlSchema();
      } else {
        this.urlSchema = value;
      }

    case DOWNLOADURL_FIELD_ID:
      if (value == null) {
        unsetDownloadUrl();
      } else {
        this.downloadUrl = value;
      }

    case BUDDYMID_FIELD_ID:
      if (value == null) {
        unsetBuddyMid();
      } else {
        this.buddyMid = value;
      }

    case PUBLISHSINCE_FIELD_ID:
      if (value == null) {
        unsetPublishSince();
      } else {
        this.publishSince = value;
      }

    case NEWFLAG_FIELD_ID:
      if (value == null) {
        unsetNewFlag();
      } else {
        this.newFlag = value;
      }

    case MISSIONFLAG_FIELD_ID:
      if (value == null) {
        unsetMissionFlag();
      } else {
        this.missionFlag = value;
      }

    case CATEGORIES_FIELD_ID:
      if (value == null) {
        unsetCategories();
      } else {
        this.categories = value;
      }

    case MISSIONBUTTONTEXT_FIELD_ID:
      if (value == null) {
        unsetMissionButtonText();
      } else {
        this.missionButtonText = value;
      }

    case MISSIONSHORTDESCRIPTION_FIELD_ID:
      if (value == null) {
        unsetMissionShortDescription();
      } else {
        this.missionShortDescription = value;
      }

    case AUTHORID_FIELD_ID:
      if (value == null) {
        unsetAuthorId();
      } else {
        this.authorId = value;
      }

    case GRANTEDBYDEFAULT_FIELD_ID:
      if (value == null) {
        unsetGrantedByDefault();
      } else {
        this.grantedByDefault = value;
      }

    case DISPLAYORDER_FIELD_ID:
      if (value == null) {
        unsetDisplayOrder();
      } else {
        this.displayOrder = value;
      }

    case AVAILABLEFORPRESENT_FIELD_ID:
      if (value == null) {
        unsetAvailableForPresent();
      } else {
        this.availableForPresent = value;
      }

    case AVAILABLEFORMYSELF_FIELD_ID:
      if (value == null) {
        unsetAvailableForMyself();
      } else {
        this.availableForMyself = value;
      }

    case HASANIMATION_FIELD_ID:
      if (value == null) {
        unsetHasAnimation();
      } else {
        this.hasAnimation = value;
      }

    case HASSOUND_FIELD_ID:
      if (value == null) {
        unsetHasSound();
      } else {
        this.hasSound = value;
      }

    case RECOMMENDATIONSENABLED_FIELD_ID:
      if (value == null) {
        unsetRecommendationsEnabled();
      } else {
        this.recommendationsEnabled = value;
      }

    case STICKERRESOURCETYPE_FIELD_ID:
      if (value == null) {
        unsetStickerResourceType();
      } else {
        this.stickerResourceType = value;
      }

    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  public function getFieldValue(fieldID : Int) : Dynamic {
    switch (fieldID) {
    case PRODUCTID_FIELD_ID:
      return this.productId;
    case PACKAGEID_FIELD_ID:
      return this.packageId;
    case VERSION_FIELD_ID:
      return this.version;
    case AUTHORNAME_FIELD_ID:
      return this.authorName;
    case ONSALE_FIELD_ID:
      return this.onSale;
    case VALIDDAYS_FIELD_ID:
      return this.validDays;
    case SALETYPE_FIELD_ID:
      return this.saleType;
    case COPYRIGHT_FIELD_ID:
      return this.copyright;
    case TITLE_FIELD_ID:
      return this.title;
    case DESCRIPTIONTEXT_FIELD_ID:
      return this.descriptionText;
    case SHOPORDERID_FIELD_ID:
      return this.shopOrderId;
    case FROMMID_FIELD_ID:
      return this.fromMid;
    case TOMID_FIELD_ID:
      return this.toMid;
    case VALIDUNTIL_FIELD_ID:
      return this.validUntil;
    case PRICETIER_FIELD_ID:
      return this.priceTier;
    case PRICE_FIELD_ID:
      return this.price;
    case CURRENCY_FIELD_ID:
      return this.currency;
    case CURRENCYSYMBOL_FIELD_ID:
      return this.currencySymbol;
    case PAYMENTTYPE_FIELD_ID:
      return this.paymentType;
    case CREATEDATE_FIELD_ID:
      return this.createDate;
    case OWNFLAG_FIELD_ID:
      return this.ownFlag;
    case EVENTTYPE_FIELD_ID:
      return this.eventType;
    case URLSCHEMA_FIELD_ID:
      return this.urlSchema;
    case DOWNLOADURL_FIELD_ID:
      return this.downloadUrl;
    case BUDDYMID_FIELD_ID:
      return this.buddyMid;
    case PUBLISHSINCE_FIELD_ID:
      return this.publishSince;
    case NEWFLAG_FIELD_ID:
      return this.newFlag;
    case MISSIONFLAG_FIELD_ID:
      return this.missionFlag;
    case CATEGORIES_FIELD_ID:
      return this.categories;
    case MISSIONBUTTONTEXT_FIELD_ID:
      return this.missionButtonText;
    case MISSIONSHORTDESCRIPTION_FIELD_ID:
      return this.missionShortDescription;
    case AUTHORID_FIELD_ID:
      return this.authorId;
    case GRANTEDBYDEFAULT_FIELD_ID:
      return this.grantedByDefault;
    case DISPLAYORDER_FIELD_ID:
      return this.displayOrder;
    case AVAILABLEFORPRESENT_FIELD_ID:
      return this.availableForPresent;
    case AVAILABLEFORMYSELF_FIELD_ID:
      return this.availableForMyself;
    case HASANIMATION_FIELD_ID:
      return this.hasAnimation;
    case HASSOUND_FIELD_ID:
      return this.hasSound;
    case RECOMMENDATIONSENABLED_FIELD_ID:
      return this.recommendationsEnabled;
    case STICKERRESOURCETYPE_FIELD_ID:
      return this.stickerResourceType;
    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  public function isSet(fieldID : Int) : Bool {
    switch (fieldID) {
    case PRODUCTID_FIELD_ID:
      return isSetProductId();
    case PACKAGEID_FIELD_ID:
      return isSetPackageId();
    case VERSION_FIELD_ID:
      return isSetVersion();
    case AUTHORNAME_FIELD_ID:
      return isSetAuthorName();
    case ONSALE_FIELD_ID:
      return isSetOnSale();
    case VALIDDAYS_FIELD_ID:
      return isSetValidDays();
    case SALETYPE_FIELD_ID:
      return isSetSaleType();
    case COPYRIGHT_FIELD_ID:
      return isSetCopyright();
    case TITLE_FIELD_ID:
      return isSetTitle();
    case DESCRIPTIONTEXT_FIELD_ID:
      return isSetDescriptionText();
    case SHOPORDERID_FIELD_ID:
      return isSetShopOrderId();
    case FROMMID_FIELD_ID:
      return isSetFromMid();
    case TOMID_FIELD_ID:
      return isSetToMid();
    case VALIDUNTIL_FIELD_ID:
      return isSetValidUntil();
    case PRICETIER_FIELD_ID:
      return isSetPriceTier();
    case PRICE_FIELD_ID:
      return isSetPrice();
    case CURRENCY_FIELD_ID:
      return isSetCurrency();
    case CURRENCYSYMBOL_FIELD_ID:
      return isSetCurrencySymbol();
    case PAYMENTTYPE_FIELD_ID:
      return isSetPaymentType();
    case CREATEDATE_FIELD_ID:
      return isSetCreateDate();
    case OWNFLAG_FIELD_ID:
      return isSetOwnFlag();
    case EVENTTYPE_FIELD_ID:
      return isSetEventType();
    case URLSCHEMA_FIELD_ID:
      return isSetUrlSchema();
    case DOWNLOADURL_FIELD_ID:
      return isSetDownloadUrl();
    case BUDDYMID_FIELD_ID:
      return isSetBuddyMid();
    case PUBLISHSINCE_FIELD_ID:
      return isSetPublishSince();
    case NEWFLAG_FIELD_ID:
      return isSetNewFlag();
    case MISSIONFLAG_FIELD_ID:
      return isSetMissionFlag();
    case CATEGORIES_FIELD_ID:
      return isSetCategories();
    case MISSIONBUTTONTEXT_FIELD_ID:
      return isSetMissionButtonText();
    case MISSIONSHORTDESCRIPTION_FIELD_ID:
      return isSetMissionShortDescription();
    case AUTHORID_FIELD_ID:
      return isSetAuthorId();
    case GRANTEDBYDEFAULT_FIELD_ID:
      return isSetGrantedByDefault();
    case DISPLAYORDER_FIELD_ID:
      return isSetDisplayOrder();
    case AVAILABLEFORPRESENT_FIELD_ID:
      return isSetAvailableForPresent();
    case AVAILABLEFORMYSELF_FIELD_ID:
      return isSetAvailableForMyself();
    case HASANIMATION_FIELD_ID:
      return isSetHasAnimation();
    case HASSOUND_FIELD_ID:
      return isSetHasSound();
    case RECOMMENDATIONSENABLED_FIELD_ID:
      return isSetRecommendationsEnabled();
    case STICKERRESOURCETYPE_FIELD_ID:
      return isSetStickerResourceType();
    default:
      throw new ArgumentError("Field " + fieldID + " doesn't exist!");
    }
  }

  public function read( iprot : TProtocol) : Void {
    iprot.IncrementRecursionDepth();
    try
    {
      var field : TField;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case PRODUCTID_FIELD_ID:
            if (field.type == TType.STRING) {
              this.productId = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case PACKAGEID_FIELD_ID:
            if (field.type == TType.I64) {
              this.packageId = iprot.readI64();
              this.__isset_packageId = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case VERSION_FIELD_ID:
            if (field.type == TType.I32) {
              this.version = iprot.readI32();
              this.__isset_version = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case AUTHORNAME_FIELD_ID:
            if (field.type == TType.STRING) {
              this.authorName = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case ONSALE_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.onSale = iprot.readBool();
              this.__isset_onSale = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case VALIDDAYS_FIELD_ID:
            if (field.type == TType.I32) {
              this.validDays = iprot.readI32();
              this.__isset_validDays = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case SALETYPE_FIELD_ID:
            if (field.type == TType.I32) {
              this.saleType = iprot.readI32();
              this.__isset_saleType = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case COPYRIGHT_FIELD_ID:
            if (field.type == TType.STRING) {
              this.copyright = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case TITLE_FIELD_ID:
            if (field.type == TType.STRING) {
              this.title = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case DESCRIPTIONTEXT_FIELD_ID:
            if (field.type == TType.STRING) {
              this.descriptionText = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case SHOPORDERID_FIELD_ID:
            if (field.type == TType.I64) {
              this.shopOrderId = iprot.readI64();
              this.__isset_shopOrderId = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case FROMMID_FIELD_ID:
            if (field.type == TType.STRING) {
              this.fromMid = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case TOMID_FIELD_ID:
            if (field.type == TType.STRING) {
              this.toMid = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case VALIDUNTIL_FIELD_ID:
            if (field.type == TType.I64) {
              this.validUntil = iprot.readI64();
              this.__isset_validUntil = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case PRICETIER_FIELD_ID:
            if (field.type == TType.I32) {
              this.priceTier = iprot.readI32();
              this.__isset_priceTier = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case PRICE_FIELD_ID:
            if (field.type == TType.STRING) {
              this.price = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case CURRENCY_FIELD_ID:
            if (field.type == TType.STRING) {
              this.currency = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case CURRENCYSYMBOL_FIELD_ID:
            if (field.type == TType.STRING) {
              this.currencySymbol = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case PAYMENTTYPE_FIELD_ID:
            if (field.type == TType.I32) {
              this.paymentType = iprot.readI32();
              this.__isset_paymentType = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case CREATEDATE_FIELD_ID:
            if (field.type == TType.I64) {
              this.createDate = iprot.readI64();
              this.__isset_createDate = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case OWNFLAG_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.ownFlag = iprot.readBool();
              this.__isset_ownFlag = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case EVENTTYPE_FIELD_ID:
            if (field.type == TType.I32) {
              this.eventType = iprot.readI32();
              this.__isset_eventType = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case URLSCHEMA_FIELD_ID:
            if (field.type == TType.STRING) {
              this.urlSchema = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case DOWNLOADURL_FIELD_ID:
            if (field.type == TType.STRING) {
              this.downloadUrl = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case BUDDYMID_FIELD_ID:
            if (field.type == TType.STRING) {
              this.buddyMid = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case PUBLISHSINCE_FIELD_ID:
            if (field.type == TType.I64) {
              this.publishSince = iprot.readI64();
              this.__isset_publishSince = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case NEWFLAG_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.newFlag = iprot.readBool();
              this.__isset_newFlag = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case MISSIONFLAG_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.missionFlag = iprot.readBool();
              this.__isset_missionFlag = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case CATEGORIES_FIELD_ID:
            if (field.type == TType.LIST) {
              {
                var _list211 = iprot.readListBegin();
                this.categories = new List< ProductCategory>();
                for( _i212 in 0 ... _list211.size)
                {
                  var _elem213 : ProductCategory;
                  _elem213 = new ProductCategory();
                  _elem213.read(iprot);
                  this.categories.add(_elem213);
                }
                iprot.readListEnd();
              }
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case MISSIONBUTTONTEXT_FIELD_ID:
            if (field.type == TType.STRING) {
              this.missionButtonText = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case MISSIONSHORTDESCRIPTION_FIELD_ID:
            if (field.type == TType.STRING) {
              this.missionShortDescription = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case AUTHORID_FIELD_ID:
            if (field.type == TType.STRING) {
              this.authorId = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case GRANTEDBYDEFAULT_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.grantedByDefault = iprot.readBool();
              this.__isset_grantedByDefault = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case DISPLAYORDER_FIELD_ID:
            if (field.type == TType.I32) {
              this.displayOrder = iprot.readI32();
              this.__isset_displayOrder = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case AVAILABLEFORPRESENT_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.availableForPresent = iprot.readBool();
              this.__isset_availableForPresent = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case AVAILABLEFORMYSELF_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.availableForMyself = iprot.readBool();
              this.__isset_availableForMyself = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case HASANIMATION_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.hasAnimation = iprot.readBool();
              this.__isset_hasAnimation = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case HASSOUND_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.hasSound = iprot.readBool();
              this.__isset_hasSound = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case RECOMMENDATIONSENABLED_FIELD_ID:
            if (field.type == TType.BOOL) {
              this.recommendationsEnabled = iprot.readBool();
              this.__isset_recommendationsEnabled = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          case STICKERRESOURCETYPE_FIELD_ID:
            if (field.type == TType.I32) {
              this.stickerResourceType = iprot.readI32();
              this.__isset_stickerResourceType = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      iprot.DecrementRecursionDepth();
    }
    catch(e:Dynamic)
    {
      iprot.DecrementRecursionDepth();
      throw e;
    }

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public function write(oprot:TProtocol) : Void {
    validate();
    oprot.IncrementRecursionDepth();
    try
    {
      oprot.writeStructBegin(STRUCT_DESC);
      if (this.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(this.productId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PACKAGE_ID_FIELD_DESC);
      oprot.writeI64(this.packageId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI32(this.version);
      oprot.writeFieldEnd();
      if (this.authorName != null) {
        oprot.writeFieldBegin(AUTHOR_NAME_FIELD_DESC);
        oprot.writeString(this.authorName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ON_SALE_FIELD_DESC);
      oprot.writeBool(this.onSale);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VALID_DAYS_FIELD_DESC);
      oprot.writeI32(this.validDays);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SALE_TYPE_FIELD_DESC);
      oprot.writeI32(this.saleType);
      oprot.writeFieldEnd();
      if (this.copyright != null) {
        oprot.writeFieldBegin(COPYRIGHT_FIELD_DESC);
        oprot.writeString(this.copyright);
        oprot.writeFieldEnd();
      }
      if (this.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(this.title);
        oprot.writeFieldEnd();
      }
      if (this.descriptionText != null) {
        oprot.writeFieldBegin(DESCRIPTION_TEXT_FIELD_DESC);
        oprot.writeString(this.descriptionText);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SHOP_ORDER_ID_FIELD_DESC);
      oprot.writeI64(this.shopOrderId);
      oprot.writeFieldEnd();
      if (this.fromMid != null) {
        oprot.writeFieldBegin(FROM_MID_FIELD_DESC);
        oprot.writeString(this.fromMid);
        oprot.writeFieldEnd();
      }
      if (this.toMid != null) {
        oprot.writeFieldBegin(TO_MID_FIELD_DESC);
        oprot.writeString(this.toMid);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VALID_UNTIL_FIELD_DESC);
      oprot.writeI64(this.validUntil);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PRICE_TIER_FIELD_DESC);
      oprot.writeI32(this.priceTier);
      oprot.writeFieldEnd();
      if (this.price != null) {
        oprot.writeFieldBegin(PRICE_FIELD_DESC);
        oprot.writeString(this.price);
        oprot.writeFieldEnd();
      }
      if (this.currency != null) {
        oprot.writeFieldBegin(CURRENCY_FIELD_DESC);
        oprot.writeString(this.currency);
        oprot.writeFieldEnd();
      }
      if (this.currencySymbol != null) {
        oprot.writeFieldBegin(CURRENCY_SYMBOL_FIELD_DESC);
        oprot.writeString(this.currencySymbol);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAYMENT_TYPE_FIELD_DESC);
      oprot.writeI32(this.paymentType);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_DATE_FIELD_DESC);
      oprot.writeI64(this.createDate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OWN_FLAG_FIELD_DESC);
      oprot.writeBool(this.ownFlag);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EVENT_TYPE_FIELD_DESC);
      oprot.writeI32(this.eventType);
      oprot.writeFieldEnd();
      if (this.urlSchema != null) {
        oprot.writeFieldBegin(URL_SCHEMA_FIELD_DESC);
        oprot.writeString(this.urlSchema);
        oprot.writeFieldEnd();
      }
      if (this.downloadUrl != null) {
        oprot.writeFieldBegin(DOWNLOAD_URL_FIELD_DESC);
        oprot.writeString(this.downloadUrl);
        oprot.writeFieldEnd();
      }
      if (this.buddyMid != null) {
        oprot.writeFieldBegin(BUDDY_MID_FIELD_DESC);
        oprot.writeString(this.buddyMid);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PUBLISH_SINCE_FIELD_DESC);
      oprot.writeI64(this.publishSince);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NEW_FLAG_FIELD_DESC);
      oprot.writeBool(this.newFlag);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MISSION_FLAG_FIELD_DESC);
      oprot.writeBool(this.missionFlag);
      oprot.writeFieldEnd();
      if (this.categories != null) {
        oprot.writeFieldBegin(CATEGORIES_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.categories.length));
          for( elem214 in this.categories)
          {
            elem214.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (this.missionButtonText != null) {
        oprot.writeFieldBegin(MISSION_BUTTON_TEXT_FIELD_DESC);
        oprot.writeString(this.missionButtonText);
        oprot.writeFieldEnd();
      }
      if (this.missionShortDescription != null) {
        oprot.writeFieldBegin(MISSION_SHORT_DESCRIPTION_FIELD_DESC);
        oprot.writeString(this.missionShortDescription);
        oprot.writeFieldEnd();
      }
      if (this.authorId != null) {
        oprot.writeFieldBegin(AUTHOR_ID_FIELD_DESC);
        oprot.writeString(this.authorId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(GRANTED_BY_DEFAULT_FIELD_DESC);
      oprot.writeBool(this.grantedByDefault);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DISPLAY_ORDER_FIELD_DESC);
      oprot.writeI32(this.displayOrder);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AVAILABLE_FOR_PRESENT_FIELD_DESC);
      oprot.writeBool(this.availableForPresent);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AVAILABLE_FOR_MYSELF_FIELD_DESC);
      oprot.writeBool(this.availableForMyself);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(HAS_ANIMATION_FIELD_DESC);
      oprot.writeBool(this.hasAnimation);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(HAS_SOUND_FIELD_DESC);
      oprot.writeBool(this.hasSound);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RECOMMENDATIONS_ENABLED_FIELD_DESC);
      oprot.writeBool(this.recommendationsEnabled);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STICKER_RESOURCE_TYPE_FIELD_DESC);
      oprot.writeI32(this.stickerResourceType);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
      oprot.DecrementRecursionDepth();
    }
    catch(e:Dynamic)
    {
      oprot.DecrementRecursionDepth();
      throw e;
    }
  }

  public function toString() : String {
    var ret : String = "Product(";
    var first : Bool = true;

    ret += "productId:";
    if (this.productId == null) {
      ret += "null";
    } else {
      ret += this.productId;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "packageId:";
    ret += this.packageId;
    first = false;
    if (!first) ret +=  ", ";
    ret += "version:";
    ret += this.version;
    first = false;
    if (!first) ret +=  ", ";
    ret += "authorName:";
    if (this.authorName == null) {
      ret += "null";
    } else {
      ret += this.authorName;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "onSale:";
    ret += this.onSale;
    first = false;
    if (!first) ret +=  ", ";
    ret += "validDays:";
    ret += this.validDays;
    first = false;
    if (!first) ret +=  ", ";
    ret += "saleType:";
    ret += this.saleType;
    first = false;
    if (!first) ret +=  ", ";
    ret += "copyright:";
    if (this.copyright == null) {
      ret += "null";
    } else {
      ret += this.copyright;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "title:";
    if (this.title == null) {
      ret += "null";
    } else {
      ret += this.title;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "descriptionText:";
    if (this.descriptionText == null) {
      ret += "null";
    } else {
      ret += this.descriptionText;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "shopOrderId:";
    ret += this.shopOrderId;
    first = false;
    if (!first) ret +=  ", ";
    ret += "fromMid:";
    if (this.fromMid == null) {
      ret += "null";
    } else {
      ret += this.fromMid;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "toMid:";
    if (this.toMid == null) {
      ret += "null";
    } else {
      ret += this.toMid;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "validUntil:";
    ret += this.validUntil;
    first = false;
    if (!first) ret +=  ", ";
    ret += "priceTier:";
    ret += this.priceTier;
    first = false;
    if (!first) ret +=  ", ";
    ret += "price:";
    if (this.price == null) {
      ret += "null";
    } else {
      ret += this.price;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "currency:";
    if (this.currency == null) {
      ret += "null";
    } else {
      ret += this.currency;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "currencySymbol:";
    if (this.currencySymbol == null) {
      ret += "null";
    } else {
      ret += this.currencySymbol;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "paymentType:";
    var paymentType_name : String = .PaymentType.VALUES_TO_NAMES[this.paymentType];
    if (paymentType_name != null) {
      ret += paymentType_name;
      ret += " (";
    }
    ret += this.paymentType;
    if (paymentType_name != null) {
      ret += ")";
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "createDate:";
    ret += this.createDate;
    first = false;
    if (!first) ret +=  ", ";
    ret += "ownFlag:";
    ret += this.ownFlag;
    first = false;
    if (!first) ret +=  ", ";
    ret += "eventType:";
    var eventType_name : String = .ProductEventType.VALUES_TO_NAMES[this.eventType];
    if (eventType_name != null) {
      ret += eventType_name;
      ret += " (";
    }
    ret += this.eventType;
    if (eventType_name != null) {
      ret += ")";
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "urlSchema:";
    if (this.urlSchema == null) {
      ret += "null";
    } else {
      ret += this.urlSchema;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "downloadUrl:";
    if (this.downloadUrl == null) {
      ret += "null";
    } else {
      ret += this.downloadUrl;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "buddyMid:";
    if (this.buddyMid == null) {
      ret += "null";
    } else {
      ret += this.buddyMid;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "publishSince:";
    ret += this.publishSince;
    first = false;
    if (!first) ret +=  ", ";
    ret += "newFlag:";
    ret += this.newFlag;
    first = false;
    if (!first) ret +=  ", ";
    ret += "missionFlag:";
    ret += this.missionFlag;
    first = false;
    if (!first) ret +=  ", ";
    ret += "categories:";
    if (this.categories == null) {
      ret += "null";
    } else {
      ret += this.categories;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "missionButtonText:";
    if (this.missionButtonText == null) {
      ret += "null";
    } else {
      ret += this.missionButtonText;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "missionShortDescription:";
    if (this.missionShortDescription == null) {
      ret += "null";
    } else {
      ret += this.missionShortDescription;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "authorId:";
    if (this.authorId == null) {
      ret += "null";
    } else {
      ret += this.authorId;
    }
    first = false;
    if (!first) ret +=  ", ";
    ret += "grantedByDefault:";
    ret += this.grantedByDefault;
    first = false;
    if (!first) ret +=  ", ";
    ret += "displayOrder:";
    ret += this.displayOrder;
    first = false;
    if (!first) ret +=  ", ";
    ret += "availableForPresent:";
    ret += this.availableForPresent;
    first = false;
    if (!first) ret +=  ", ";
    ret += "availableForMyself:";
    ret += this.availableForMyself;
    first = false;
    if (!first) ret +=  ", ";
    ret += "hasAnimation:";
    ret += this.hasAnimation;
    first = false;
    if (!first) ret +=  ", ";
    ret += "hasSound:";
    ret += this.hasSound;
    first = false;
    if (!first) ret +=  ", ";
    ret += "recommendationsEnabled:";
    ret += this.recommendationsEnabled;
    first = false;
    if (!first) ret +=  ", ";
    ret += "stickerResourceType:";
    var stickerResourceType_name : String = .StickerResourceType.VALUES_TO_NAMES[this.stickerResourceType];
    if (stickerResourceType_name != null) {
      ret += stickerResourceType_name;
      ret += " (";
    }
    ret += this.stickerResourceType;
    if (stickerResourceType_name != null) {
      ret += ")";
    }
    first = false;
    ret += ")";
    return ret;
  }

  public function validate() : Void {
    // check for required fields
    // check that fields of type enum have valid values
    if (isSetPaymentType() && !.PaymentType.VALID_VALUES.contains(paymentType)){
      throw new TProtocolException(TProtocolException.UNKNOWN, "The field 'paymentType' has been assigned the invalid value " + paymentType);
    }
    if (isSetEventType() && !.ProductEventType.VALID_VALUES.contains(eventType)){
      throw new TProtocolException(TProtocolException.UNKNOWN, "The field 'eventType' has been assigned the invalid value " + eventType);
    }
    if (isSetStickerResourceType() && !.StickerResourceType.VALID_VALUES.contains(stickerResourceType)){
      throw new TProtocolException(TProtocolException.UNKNOWN, "The field 'stickerResourceType' has been assigned the invalid value " + stickerResourceType);
    }
  }

}

