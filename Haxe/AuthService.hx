/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;


interface AuthService {

  function updatePassword(authSessionId : String, request : IdentityCredentialRequest) : IdentityCredentialResponse;

  function getAuthRSAKey(authSessionId : String, identityProvider : Int) : RSAKey;

  function openAuthSession(request : AuthSessionRequest) : String;

  function normalizePhoneNumber(countryCode : String, phoneNumber : String, countryCodeHint : String) : String;

  function respondE2EELoginRequest(verifier : String, publicKey : E2EEPublicKey, encryptedKeyChain : haxe.io.Bytes, hashKeyChain : haxe.io.Bytes, errorCode : Int) : Void;

  function confirmE2EELogin(verifier : String, deviceSecret : haxe.io.Bytes) : String;

  function logoutZ() : Void;

  function loginZ(loginRequest : LoginRequest) : LoginResult;

  function issueTokenForAccountMigrationSettings(enforce : Bool) : SecurityCenterResult;

  function issueTokenForAccountMigration(migrationSessionId : String) : SecurityCenterResult;

  function verifyQrcodeWithE2EE(verifier : String, pinCode : String, errorCode : Int, publicKey : E2EEPublicKey, encryptedKeyChain : haxe.io.Bytes, hashKeyChain : haxe.io.Bytes) : String;

}

