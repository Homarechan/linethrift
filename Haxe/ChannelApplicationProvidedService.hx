/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;


interface ChannelApplicationProvidedService {

  function activeBuddySubscriberCount() : haxe.Int64;

  function addOperationForChannel(opType : Int, param1 : String, param2 : String, param3 : String) : Void;

  function displayBuddySubscriberCount() : haxe.Int64;

  function findContactByUseridWithoutAbuseBlockForChannel(userid : String) : Contact;

  function getAllContactIdsForChannel() : List< String>;

  function getCompactContacts(lastModifiedTimestamp : haxe.Int64) : List< CompactContact>;

  function getContactsForChannel(ids : List< String>) : List< Contact>;

  function getDisplayName(mid : String) : String;

  function getFavoriteMidsForChannel() : List< String>;

  function getFriendMids() : List< String>;

  function getGroupMemberMids(groupId : String) : List< String>;

  function getGroupsForChannel(groupIds : List< String>) : List< Group>;

  function getIdentityCredential() : IdentityCredential;

  function getJoinedGroupIdsForChannel() : List< String>;

  function getMetaProfile() : MetaProfile;

  function getMid() : String;

  function getPrimaryClientForChannel() : SimpleChannelClient;

  function getProfileForChannel() : Profile;

  function getSimpleChannelContacts(ids : List< String>) : List< SimpleChannelContact>;

  function getUserCountryForBilling(country : String, remoteIp : String) : String;

  function getUserCreateTime() : haxe.Int64;

  function getUserIdentities() : IntMap< String>;

  function getUserLanguage() : String;

  function getUserMidsWhoAddedMe() : List< String>;

  function isGroupMember(groupId : String) : Bool;

  function isInContact(mid : String) : Bool;

  function registerChannelCP(cpId : String, registerPassword : String) : String;

  function removeNotificationStatus(notificationStatus : Int) : Void;

  function sendMessageForChannel(message : Message) : Message;

  function sendPinCodeOperation(verifier : String) : Void;

  function updateProfileAttributeForChannel(profileAttribute : Int, value : String) : Void;

}

