/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package;

import org.apache.thrift.helper.*;
import haxe.io.Bytes;
import haxe.ds.IntMap;
import haxe.ds.StringMap;
import haxe.ds.ObjectMap;

#if flash
import flash.errors.ArgumentError;
#end

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;


interface CallService {

  function getUserStatus(mid : String) : Int;

  function updateProfileAttributeForChannel(profileAttribute : Int, value : String) : Void;

  function updateExtendedProfileAttribute(attr : Int, extendedProfile : ExtendedProfile) : Void;

  function getAllSimpleChannelContacts(statusSticonFallbackDisabled : Bool) : List< SimpleChannelContact>;

  function getUserIdentities() : IntMap< String>;

  function markPaidCallAd(dialedNumber : String, language : String, disableCallerId : Bool) : PaidCallDialing;

  function isGroupMember(groupId : String) : Bool;

  function getPhoneInfoFromPhoneNumber(region : String, phoneNumber : String) : PhoneInfoForChannel;

  function redeemPaidCallVoucher(serial : String, language : String) : PaidCallRedeemResult;

  function getPreferredDisplayName(mids : List< String>) : StringMap< String>;

  function getContactsForChannel(ids : List< String>) : List< Contact>;

  function getCallCreditProducts(appStoreCode : Int, pgCode : Int, country : String, language : String) : List< CoinProductItem>;

  function getCompactContacts(lastModifiedTimestamp : haxe.Int64) : List< CompactContact>;

  function notifyNotiCenterEvent(event : NotiCenterEventData) : Void;

  function isInContact(mid : String) : Bool;

  function lookupGroupMembers(groupId : String, mids : List< String>) : List< SimpleChannelContact>;

  function getRoomInformation(roomMid : String) : Room;

  function getGroupCall(chatMid : String) : GroupCall;

  function isAllowSecondaryDeviceLogin() : Bool;

  function getPrimaryClientForChannel() : SimpleChannelClient;

  function createRoomWithBuddy(reqSeq : haxe.Int32, buddyMid : String, contactIds : List< String>) : Room;

  function getDisplayName(mid : String) : String;

  function getPaidCallMetadata(language : String) : PaidCallMetadataResult;

  function getMid() : String;

  function getUserCountryForBilling(country : String, remoteIp : String) : String;

  function getFavoriteGroupIdsForChannel() : List< String>;

  function getPaidCallHistory(start : haxe.Int64, size : haxe.Int32, language : String) : PaidCallHistoryResult;

  function sendPinCodeOperation(verifier : String) : Void;

  function inviteIntoGroupCall(chatMid : String, memberMids : List< String>, mediaType : Int) : Void;

  function getFriendMids() : List< String>;

  function getMetaProfile() : MetaProfile;

  function sendMessageForChannel(message : Message) : Message;

  function activeBuddySubscriberCount() : haxe.Int64;

  function getCallCreditPurchaseHistory(request : CoinHistoryCondition) : CoinHistoryResult;

  function isRoomMember(roomId : String) : Bool;

  function sendSystemOAMessage(message : Message) : Message;

  function acquirePaidCallRoute(paidCallType : Int, dialedNumber : String, language : String, networkCode : String, disableCallerId : Bool, referer : String, adSessionId : String) : PaidCallResponse;

  function getGroupsForChannel(groupIds : List< String>) : List< Group>;

  function getUserCreateTime() : haxe.Int64;

  function registerChannelCP(cpId : String, registerPassword : String) : String;

  function reserveCallCreditPurchase(request : CoinPurchaseReservation) : PaymentReservationResult;

  function acquirePaidCallCurrencyExchangeRate(language : String) : List< PaidCallCurrencyExchangeRate>;

  function getRoomMemberMidsForAppPlatform(roomId : String) : List< String>;

  function getPaidCallBalanceList(language : String) : List< PaidCallBalance>;

  function getPersonalInfos(requiredPersonalInfos : IntSet) : IntMap< String>;

  function getPrimaryClientsForChannel(userMids : List< String>) : List< SimpleChannelClient>;

  function addBuddyToContact(buddyMid : String) : ContactTransition;

  function getGroupMemberMidsForAppPlatform(groupId : String) : List< String>;

  function getUserLanguage() : String;

  function lookupPaidCall(dialedNumber : String, language : String, referer : String) : PaidCallResponse;

  function getExtendedProfile() : ExtendedProfile;

  function getReverseCompactContacts(ids : List< String>) : StringMap< CompactContact>;

  function getPaidCallAdStatus() : PaidCallAdResult;

  function findContactByUseridWithoutAbuseBlockForChannel(userid : String) : Contact;

  function getGroupMemberMids(groupId : String) : List< String>;

  function sendMessageWithoutRelationship(message : Message) : Message;

  function displayBuddySubscriberCountInBulk(mids : List< String>) : StringMap< haxe.Int64>;

  function lookupRoomMembers(roomId : String, mids : List< String>) : List< SimpleChannelContact>;

  function getFavoriteMidsForChannel() : List< String>;

  function getAllContactIdsForChannel() : List< String>;

  function displayBuddySubscriberCount() : haxe.Int64;

  function getProfileForChannel() : Profile;

  function getUserTickets(userMids : List< String>) : List< UserTicketResponse>;

  function getOAFriendMids() : List< String>;

  function searchPaidCallUserRate(countryCode : String, language : String) : List< PaidCallUserRate>;

  function getJoinedGroupIdsForChannel() : List< String>;

  function acquireGroupCallRoute(chatMid : String, mediaType : Int) : GroupCallRoute;

  function getUserMidsWhoAddedMe() : List< String>;

  function getIdentityCredential() : IdentityCredential;

  function addOperationForChannel(opType : Int, param1 : String, param2 : String, param3 : String) : Void;

  function getSimpleChannelContacts(ids : List< String>, statusSticonFallbackDisabled : Bool) : List< SimpleChannelContact>;

  function getUserLastSentMessageTimeStamp(mid : String) : haxe.Int64;

}

