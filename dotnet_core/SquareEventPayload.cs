/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Threading;
using System.Threading.Tasks;
using Thrift;
using Thrift.Collections;

using Thrift.Protocols;
using Thrift.Protocols.Entities;
using Thrift.Protocols.Utilities;
using Thrift.Transports;
using Thrift.Transports.Client;
using Thrift.Transports.Server;



public partial class SquareEventPayload : TBase
{
  private SquareEventReceiveMessage _receiveMessage;
  private SquareEventSendMessage _sendMessage;
  private SquareEventNotifiedJoinSquareChat _notifiedJoinSquareChat;
  private SquareEventNotifiedInviteIntoSquareChat _notifiedInviteIntoSquareChat;
  private SquareEventNotifiedLeaveSquareChat _notifiedLeaveSquareChat;
  private SquareEventNotifiedDestroyMessage _notifiedDestroyMessage;
  private SquareEventNotifiedMarkAsRead _notifiedMarkAsRead;
  private SquareEventNotifiedUpdateSquareMemberProfile _notifiedUpdateSquareMemberProfile;
  private SquareEventNotifiedKickoutFromSquare _notifiedKickoutFromSquare;
  private SquareEventNotifiedShutdownSquare _notifiedShutdownSquare;
  private SquareEventNotifiedDeleteSquareChat _notifiedDeleteSquareChat;
  private SquareEventNotifiedUpdateSquareChatProfileName _notifiedUpdateSquareChatProfileName;
  private SquareEventNotifiedUpdateSquareChatProfileImage _notifiedUpdateSquareChatProfileImage;
  private SquareEventNotifiedUpdateSquareStatus _notifiedUpdateSquareStatus;
  private SquareEventNotifiedUpdateSquareChatStatus _notifiedUpdateSquareChatStatus;
  private SquareEventNotifiedCreateSquareMember _notifiedCreateSquareMember;
  private SquareEventNotifiedCreateSquareChatMember _notifiedCreateSquareChatMember;
  private SquareEventNotifiedUpdateSquareMemberRelation _notifiedUpdateSquareMemberRelation;
  private SquareEventNotifiedUpdateSquare _notifiedUpdateSquare;
  private SquareEventNotifiedUpdateSquareMember _notifiedUpdateSquareMember;
  private SquareEventNotifiedUpdateSquareChat _notifiedUpdateSquareChat;
  private SquareEventNotificationJoinRequest _notificationJoinRequest;
  private SquareEventNotificationMemberUpdate _notificationJoined;
  private SquareEventNotificationMemberUpdate _notificationPromoteCoadmin;
  private SquareEventNotificationMemberUpdate _notificationPromoteAdmin;
  private SquareEventNotificationMemberUpdate _notificationDemoteMember;
  private SquareEventNotificationMemberUpdate _notificationKickedOut;
  private SquareEventNotificationSquareDelete _notificationSquareDelete;
  private SquareEventNotificationSquareChatDelete _notificationSquareChatDelete;
  private SquareEventNotificationMessage _notificationMessage;
  private SquareEventNotifiedUpdateSquareChatMember _notifiedUpdateSquareChatMember;
  private SquareEventNotifiedUpdateSquareAuthority _notifiedUpdateSquareAuthority;
  private SquareEventNotifiedUpdateSquareFeatureSet _notifiedUpdateSquareFeatureSet;

  public SquareEventReceiveMessage ReceiveMessage
  {
    get
    {
      return _receiveMessage;
    }
    set
    {
      __isset.receiveMessage = true;
      this._receiveMessage = value;
    }
  }

  public SquareEventSendMessage SendMessage
  {
    get
    {
      return _sendMessage;
    }
    set
    {
      __isset.sendMessage = true;
      this._sendMessage = value;
    }
  }

  public SquareEventNotifiedJoinSquareChat NotifiedJoinSquareChat
  {
    get
    {
      return _notifiedJoinSquareChat;
    }
    set
    {
      __isset.notifiedJoinSquareChat = true;
      this._notifiedJoinSquareChat = value;
    }
  }

  public SquareEventNotifiedInviteIntoSquareChat NotifiedInviteIntoSquareChat
  {
    get
    {
      return _notifiedInviteIntoSquareChat;
    }
    set
    {
      __isset.notifiedInviteIntoSquareChat = true;
      this._notifiedInviteIntoSquareChat = value;
    }
  }

  public SquareEventNotifiedLeaveSquareChat NotifiedLeaveSquareChat
  {
    get
    {
      return _notifiedLeaveSquareChat;
    }
    set
    {
      __isset.notifiedLeaveSquareChat = true;
      this._notifiedLeaveSquareChat = value;
    }
  }

  public SquareEventNotifiedDestroyMessage NotifiedDestroyMessage
  {
    get
    {
      return _notifiedDestroyMessage;
    }
    set
    {
      __isset.notifiedDestroyMessage = true;
      this._notifiedDestroyMessage = value;
    }
  }

  public SquareEventNotifiedMarkAsRead NotifiedMarkAsRead
  {
    get
    {
      return _notifiedMarkAsRead;
    }
    set
    {
      __isset.notifiedMarkAsRead = true;
      this._notifiedMarkAsRead = value;
    }
  }

  public SquareEventNotifiedUpdateSquareMemberProfile NotifiedUpdateSquareMemberProfile
  {
    get
    {
      return _notifiedUpdateSquareMemberProfile;
    }
    set
    {
      __isset.notifiedUpdateSquareMemberProfile = true;
      this._notifiedUpdateSquareMemberProfile = value;
    }
  }

  public SquareEventNotifiedKickoutFromSquare NotifiedKickoutFromSquare
  {
    get
    {
      return _notifiedKickoutFromSquare;
    }
    set
    {
      __isset.notifiedKickoutFromSquare = true;
      this._notifiedKickoutFromSquare = value;
    }
  }

  public SquareEventNotifiedShutdownSquare NotifiedShutdownSquare
  {
    get
    {
      return _notifiedShutdownSquare;
    }
    set
    {
      __isset.notifiedShutdownSquare = true;
      this._notifiedShutdownSquare = value;
    }
  }

  public SquareEventNotifiedDeleteSquareChat NotifiedDeleteSquareChat
  {
    get
    {
      return _notifiedDeleteSquareChat;
    }
    set
    {
      __isset.notifiedDeleteSquareChat = true;
      this._notifiedDeleteSquareChat = value;
    }
  }

  public SquareEventNotifiedUpdateSquareChatProfileName NotifiedUpdateSquareChatProfileName
  {
    get
    {
      return _notifiedUpdateSquareChatProfileName;
    }
    set
    {
      __isset.notifiedUpdateSquareChatProfileName = true;
      this._notifiedUpdateSquareChatProfileName = value;
    }
  }

  public SquareEventNotifiedUpdateSquareChatProfileImage NotifiedUpdateSquareChatProfileImage
  {
    get
    {
      return _notifiedUpdateSquareChatProfileImage;
    }
    set
    {
      __isset.notifiedUpdateSquareChatProfileImage = true;
      this._notifiedUpdateSquareChatProfileImage = value;
    }
  }

  public SquareEventNotifiedUpdateSquareStatus NotifiedUpdateSquareStatus
  {
    get
    {
      return _notifiedUpdateSquareStatus;
    }
    set
    {
      __isset.notifiedUpdateSquareStatus = true;
      this._notifiedUpdateSquareStatus = value;
    }
  }

  public SquareEventNotifiedUpdateSquareChatStatus NotifiedUpdateSquareChatStatus
  {
    get
    {
      return _notifiedUpdateSquareChatStatus;
    }
    set
    {
      __isset.notifiedUpdateSquareChatStatus = true;
      this._notifiedUpdateSquareChatStatus = value;
    }
  }

  public SquareEventNotifiedCreateSquareMember NotifiedCreateSquareMember
  {
    get
    {
      return _notifiedCreateSquareMember;
    }
    set
    {
      __isset.notifiedCreateSquareMember = true;
      this._notifiedCreateSquareMember = value;
    }
  }

  public SquareEventNotifiedCreateSquareChatMember NotifiedCreateSquareChatMember
  {
    get
    {
      return _notifiedCreateSquareChatMember;
    }
    set
    {
      __isset.notifiedCreateSquareChatMember = true;
      this._notifiedCreateSquareChatMember = value;
    }
  }

  public SquareEventNotifiedUpdateSquareMemberRelation NotifiedUpdateSquareMemberRelation
  {
    get
    {
      return _notifiedUpdateSquareMemberRelation;
    }
    set
    {
      __isset.notifiedUpdateSquareMemberRelation = true;
      this._notifiedUpdateSquareMemberRelation = value;
    }
  }

  public SquareEventNotifiedUpdateSquare NotifiedUpdateSquare
  {
    get
    {
      return _notifiedUpdateSquare;
    }
    set
    {
      __isset.notifiedUpdateSquare = true;
      this._notifiedUpdateSquare = value;
    }
  }

  public SquareEventNotifiedUpdateSquareMember NotifiedUpdateSquareMember
  {
    get
    {
      return _notifiedUpdateSquareMember;
    }
    set
    {
      __isset.notifiedUpdateSquareMember = true;
      this._notifiedUpdateSquareMember = value;
    }
  }

  public SquareEventNotifiedUpdateSquareChat NotifiedUpdateSquareChat
  {
    get
    {
      return _notifiedUpdateSquareChat;
    }
    set
    {
      __isset.notifiedUpdateSquareChat = true;
      this._notifiedUpdateSquareChat = value;
    }
  }

  public SquareEventNotificationJoinRequest NotificationJoinRequest
  {
    get
    {
      return _notificationJoinRequest;
    }
    set
    {
      __isset.notificationJoinRequest = true;
      this._notificationJoinRequest = value;
    }
  }

  public SquareEventNotificationMemberUpdate NotificationJoined
  {
    get
    {
      return _notificationJoined;
    }
    set
    {
      __isset.notificationJoined = true;
      this._notificationJoined = value;
    }
  }

  public SquareEventNotificationMemberUpdate NotificationPromoteCoadmin
  {
    get
    {
      return _notificationPromoteCoadmin;
    }
    set
    {
      __isset.notificationPromoteCoadmin = true;
      this._notificationPromoteCoadmin = value;
    }
  }

  public SquareEventNotificationMemberUpdate NotificationPromoteAdmin
  {
    get
    {
      return _notificationPromoteAdmin;
    }
    set
    {
      __isset.notificationPromoteAdmin = true;
      this._notificationPromoteAdmin = value;
    }
  }

  public SquareEventNotificationMemberUpdate NotificationDemoteMember
  {
    get
    {
      return _notificationDemoteMember;
    }
    set
    {
      __isset.notificationDemoteMember = true;
      this._notificationDemoteMember = value;
    }
  }

  public SquareEventNotificationMemberUpdate NotificationKickedOut
  {
    get
    {
      return _notificationKickedOut;
    }
    set
    {
      __isset.notificationKickedOut = true;
      this._notificationKickedOut = value;
    }
  }

  public SquareEventNotificationSquareDelete NotificationSquareDelete
  {
    get
    {
      return _notificationSquareDelete;
    }
    set
    {
      __isset.notificationSquareDelete = true;
      this._notificationSquareDelete = value;
    }
  }

  public SquareEventNotificationSquareChatDelete NotificationSquareChatDelete
  {
    get
    {
      return _notificationSquareChatDelete;
    }
    set
    {
      __isset.notificationSquareChatDelete = true;
      this._notificationSquareChatDelete = value;
    }
  }

  public SquareEventNotificationMessage NotificationMessage
  {
    get
    {
      return _notificationMessage;
    }
    set
    {
      __isset.notificationMessage = true;
      this._notificationMessage = value;
    }
  }

  public SquareEventNotifiedUpdateSquareChatMember NotifiedUpdateSquareChatMember
  {
    get
    {
      return _notifiedUpdateSquareChatMember;
    }
    set
    {
      __isset.notifiedUpdateSquareChatMember = true;
      this._notifiedUpdateSquareChatMember = value;
    }
  }

  public SquareEventNotifiedUpdateSquareAuthority NotifiedUpdateSquareAuthority
  {
    get
    {
      return _notifiedUpdateSquareAuthority;
    }
    set
    {
      __isset.notifiedUpdateSquareAuthority = true;
      this._notifiedUpdateSquareAuthority = value;
    }
  }

  public SquareEventNotifiedUpdateSquareFeatureSet NotifiedUpdateSquareFeatureSet
  {
    get
    {
      return _notifiedUpdateSquareFeatureSet;
    }
    set
    {
      __isset.notifiedUpdateSquareFeatureSet = true;
      this._notifiedUpdateSquareFeatureSet = value;
    }
  }


  public Isset __isset;
  public struct Isset
  {
    public bool receiveMessage;
    public bool sendMessage;
    public bool notifiedJoinSquareChat;
    public bool notifiedInviteIntoSquareChat;
    public bool notifiedLeaveSquareChat;
    public bool notifiedDestroyMessage;
    public bool notifiedMarkAsRead;
    public bool notifiedUpdateSquareMemberProfile;
    public bool notifiedKickoutFromSquare;
    public bool notifiedShutdownSquare;
    public bool notifiedDeleteSquareChat;
    public bool notifiedUpdateSquareChatProfileName;
    public bool notifiedUpdateSquareChatProfileImage;
    public bool notifiedUpdateSquareStatus;
    public bool notifiedUpdateSquareChatStatus;
    public bool notifiedCreateSquareMember;
    public bool notifiedCreateSquareChatMember;
    public bool notifiedUpdateSquareMemberRelation;
    public bool notifiedUpdateSquare;
    public bool notifiedUpdateSquareMember;
    public bool notifiedUpdateSquareChat;
    public bool notificationJoinRequest;
    public bool notificationJoined;
    public bool notificationPromoteCoadmin;
    public bool notificationPromoteAdmin;
    public bool notificationDemoteMember;
    public bool notificationKickedOut;
    public bool notificationSquareDelete;
    public bool notificationSquareChatDelete;
    public bool notificationMessage;
    public bool notifiedUpdateSquareChatMember;
    public bool notifiedUpdateSquareAuthority;
    public bool notifiedUpdateSquareFeatureSet;
  }

  public SquareEventPayload()
  {
  }

  public async Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      await iprot.ReadStructBeginAsync(cancellationToken);
      while (true)
      {
        field = await iprot.ReadFieldBeginAsync(cancellationToken);
        if (field.Type == TType.Stop)
        {
          break;
        }

        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct)
            {
              ReceiveMessage = new SquareEventReceiveMessage();
              await ReceiveMessage.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 2:
            if (field.Type == TType.Struct)
            {
              SendMessage = new SquareEventSendMessage();
              await SendMessage.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 3:
            if (field.Type == TType.Struct)
            {
              NotifiedJoinSquareChat = new SquareEventNotifiedJoinSquareChat();
              await NotifiedJoinSquareChat.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 4:
            if (field.Type == TType.Struct)
            {
              NotifiedInviteIntoSquareChat = new SquareEventNotifiedInviteIntoSquareChat();
              await NotifiedInviteIntoSquareChat.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 5:
            if (field.Type == TType.Struct)
            {
              NotifiedLeaveSquareChat = new SquareEventNotifiedLeaveSquareChat();
              await NotifiedLeaveSquareChat.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 6:
            if (field.Type == TType.Struct)
            {
              NotifiedDestroyMessage = new SquareEventNotifiedDestroyMessage();
              await NotifiedDestroyMessage.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 7:
            if (field.Type == TType.Struct)
            {
              NotifiedMarkAsRead = new SquareEventNotifiedMarkAsRead();
              await NotifiedMarkAsRead.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 8:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareMemberProfile = new SquareEventNotifiedUpdateSquareMemberProfile();
              await NotifiedUpdateSquareMemberProfile.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 20:
            if (field.Type == TType.Struct)
            {
              NotifiedKickoutFromSquare = new SquareEventNotifiedKickoutFromSquare();
              await NotifiedKickoutFromSquare.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 19:
            if (field.Type == TType.Struct)
            {
              NotifiedShutdownSquare = new SquareEventNotifiedShutdownSquare();
              await NotifiedShutdownSquare.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 21:
            if (field.Type == TType.Struct)
            {
              NotifiedDeleteSquareChat = new SquareEventNotifiedDeleteSquareChat();
              await NotifiedDeleteSquareChat.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 31:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareChatProfileName = new SquareEventNotifiedUpdateSquareChatProfileName();
              await NotifiedUpdateSquareChatProfileName.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 32:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareChatProfileImage = new SquareEventNotifiedUpdateSquareChatProfileImage();
              await NotifiedUpdateSquareChatProfileImage.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 14:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareStatus = new SquareEventNotifiedUpdateSquareStatus();
              await NotifiedUpdateSquareStatus.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 15:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareChatStatus = new SquareEventNotifiedUpdateSquareChatStatus();
              await NotifiedUpdateSquareChatStatus.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 16:
            if (field.Type == TType.Struct)
            {
              NotifiedCreateSquareMember = new SquareEventNotifiedCreateSquareMember();
              await NotifiedCreateSquareMember.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 17:
            if (field.Type == TType.Struct)
            {
              NotifiedCreateSquareChatMember = new SquareEventNotifiedCreateSquareChatMember();
              await NotifiedCreateSquareChatMember.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 18:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareMemberRelation = new SquareEventNotifiedUpdateSquareMemberRelation();
              await NotifiedUpdateSquareMemberRelation.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 9:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquare = new SquareEventNotifiedUpdateSquare();
              await NotifiedUpdateSquare.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 10:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareMember = new SquareEventNotifiedUpdateSquareMember();
              await NotifiedUpdateSquareMember.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 11:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareChat = new SquareEventNotifiedUpdateSquareChat();
              await NotifiedUpdateSquareChat.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 22:
            if (field.Type == TType.Struct)
            {
              NotificationJoinRequest = new SquareEventNotificationJoinRequest();
              await NotificationJoinRequest.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 23:
            if (field.Type == TType.Struct)
            {
              NotificationJoined = new SquareEventNotificationMemberUpdate();
              await NotificationJoined.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 24:
            if (field.Type == TType.Struct)
            {
              NotificationPromoteCoadmin = new SquareEventNotificationMemberUpdate();
              await NotificationPromoteCoadmin.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 25:
            if (field.Type == TType.Struct)
            {
              NotificationPromoteAdmin = new SquareEventNotificationMemberUpdate();
              await NotificationPromoteAdmin.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 26:
            if (field.Type == TType.Struct)
            {
              NotificationDemoteMember = new SquareEventNotificationMemberUpdate();
              await NotificationDemoteMember.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 27:
            if (field.Type == TType.Struct)
            {
              NotificationKickedOut = new SquareEventNotificationMemberUpdate();
              await NotificationKickedOut.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 28:
            if (field.Type == TType.Struct)
            {
              NotificationSquareDelete = new SquareEventNotificationSquareDelete();
              await NotificationSquareDelete.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 29:
            if (field.Type == TType.Struct)
            {
              NotificationSquareChatDelete = new SquareEventNotificationSquareChatDelete();
              await NotificationSquareChatDelete.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 30:
            if (field.Type == TType.Struct)
            {
              NotificationMessage = new SquareEventNotificationMessage();
              await NotificationMessage.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 12:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareChatMember = new SquareEventNotifiedUpdateSquareChatMember();
              await NotifiedUpdateSquareChatMember.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 13:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareAuthority = new SquareEventNotifiedUpdateSquareAuthority();
              await NotifiedUpdateSquareAuthority.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          case 33:
            if (field.Type == TType.Struct)
            {
              NotifiedUpdateSquareFeatureSet = new SquareEventNotifiedUpdateSquareFeatureSet();
              await NotifiedUpdateSquareFeatureSet.ReadAsync(iprot, cancellationToken);
            }
            else
            {
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            }
            break;
          default: 
            await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
            break;
        }

        await iprot.ReadFieldEndAsync(cancellationToken);
      }

      await iprot.ReadStructEndAsync(cancellationToken);
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public async Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken)
  {
    oprot.IncrementRecursionDepth();
    try
    {
      var struc = new TStruct("SquareEventPayload");
      await oprot.WriteStructBeginAsync(struc, cancellationToken);
      var field = new TField();
      if (ReceiveMessage != null && __isset.receiveMessage)
      {
        field.Name = "receiveMessage";
        field.Type = TType.Struct;
        field.ID = 1;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await ReceiveMessage.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (SendMessage != null && __isset.sendMessage)
      {
        field.Name = "sendMessage";
        field.Type = TType.Struct;
        field.ID = 2;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await SendMessage.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedJoinSquareChat != null && __isset.notifiedJoinSquareChat)
      {
        field.Name = "notifiedJoinSquareChat";
        field.Type = TType.Struct;
        field.ID = 3;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedJoinSquareChat.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedInviteIntoSquareChat != null && __isset.notifiedInviteIntoSquareChat)
      {
        field.Name = "notifiedInviteIntoSquareChat";
        field.Type = TType.Struct;
        field.ID = 4;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedInviteIntoSquareChat.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedLeaveSquareChat != null && __isset.notifiedLeaveSquareChat)
      {
        field.Name = "notifiedLeaveSquareChat";
        field.Type = TType.Struct;
        field.ID = 5;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedLeaveSquareChat.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedDestroyMessage != null && __isset.notifiedDestroyMessage)
      {
        field.Name = "notifiedDestroyMessage";
        field.Type = TType.Struct;
        field.ID = 6;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedDestroyMessage.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedMarkAsRead != null && __isset.notifiedMarkAsRead)
      {
        field.Name = "notifiedMarkAsRead";
        field.Type = TType.Struct;
        field.ID = 7;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedMarkAsRead.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareMemberProfile != null && __isset.notifiedUpdateSquareMemberProfile)
      {
        field.Name = "notifiedUpdateSquareMemberProfile";
        field.Type = TType.Struct;
        field.ID = 8;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareMemberProfile.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquare != null && __isset.notifiedUpdateSquare)
      {
        field.Name = "notifiedUpdateSquare";
        field.Type = TType.Struct;
        field.ID = 9;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquare.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareMember != null && __isset.notifiedUpdateSquareMember)
      {
        field.Name = "notifiedUpdateSquareMember";
        field.Type = TType.Struct;
        field.ID = 10;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareMember.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareChat != null && __isset.notifiedUpdateSquareChat)
      {
        field.Name = "notifiedUpdateSquareChat";
        field.Type = TType.Struct;
        field.ID = 11;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareChat.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareChatMember != null && __isset.notifiedUpdateSquareChatMember)
      {
        field.Name = "notifiedUpdateSquareChatMember";
        field.Type = TType.Struct;
        field.ID = 12;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareChatMember.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareAuthority != null && __isset.notifiedUpdateSquareAuthority)
      {
        field.Name = "notifiedUpdateSquareAuthority";
        field.Type = TType.Struct;
        field.ID = 13;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareAuthority.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareStatus != null && __isset.notifiedUpdateSquareStatus)
      {
        field.Name = "notifiedUpdateSquareStatus";
        field.Type = TType.Struct;
        field.ID = 14;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareStatus.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareChatStatus != null && __isset.notifiedUpdateSquareChatStatus)
      {
        field.Name = "notifiedUpdateSquareChatStatus";
        field.Type = TType.Struct;
        field.ID = 15;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareChatStatus.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedCreateSquareMember != null && __isset.notifiedCreateSquareMember)
      {
        field.Name = "notifiedCreateSquareMember";
        field.Type = TType.Struct;
        field.ID = 16;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedCreateSquareMember.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedCreateSquareChatMember != null && __isset.notifiedCreateSquareChatMember)
      {
        field.Name = "notifiedCreateSquareChatMember";
        field.Type = TType.Struct;
        field.ID = 17;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedCreateSquareChatMember.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareMemberRelation != null && __isset.notifiedUpdateSquareMemberRelation)
      {
        field.Name = "notifiedUpdateSquareMemberRelation";
        field.Type = TType.Struct;
        field.ID = 18;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareMemberRelation.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedShutdownSquare != null && __isset.notifiedShutdownSquare)
      {
        field.Name = "notifiedShutdownSquare";
        field.Type = TType.Struct;
        field.ID = 19;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedShutdownSquare.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedKickoutFromSquare != null && __isset.notifiedKickoutFromSquare)
      {
        field.Name = "notifiedKickoutFromSquare";
        field.Type = TType.Struct;
        field.ID = 20;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedKickoutFromSquare.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedDeleteSquareChat != null && __isset.notifiedDeleteSquareChat)
      {
        field.Name = "notifiedDeleteSquareChat";
        field.Type = TType.Struct;
        field.ID = 21;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedDeleteSquareChat.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotificationJoinRequest != null && __isset.notificationJoinRequest)
      {
        field.Name = "notificationJoinRequest";
        field.Type = TType.Struct;
        field.ID = 22;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotificationJoinRequest.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotificationJoined != null && __isset.notificationJoined)
      {
        field.Name = "notificationJoined";
        field.Type = TType.Struct;
        field.ID = 23;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotificationJoined.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotificationPromoteCoadmin != null && __isset.notificationPromoteCoadmin)
      {
        field.Name = "notificationPromoteCoadmin";
        field.Type = TType.Struct;
        field.ID = 24;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotificationPromoteCoadmin.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotificationPromoteAdmin != null && __isset.notificationPromoteAdmin)
      {
        field.Name = "notificationPromoteAdmin";
        field.Type = TType.Struct;
        field.ID = 25;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotificationPromoteAdmin.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotificationDemoteMember != null && __isset.notificationDemoteMember)
      {
        field.Name = "notificationDemoteMember";
        field.Type = TType.Struct;
        field.ID = 26;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotificationDemoteMember.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotificationKickedOut != null && __isset.notificationKickedOut)
      {
        field.Name = "notificationKickedOut";
        field.Type = TType.Struct;
        field.ID = 27;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotificationKickedOut.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotificationSquareDelete != null && __isset.notificationSquareDelete)
      {
        field.Name = "notificationSquareDelete";
        field.Type = TType.Struct;
        field.ID = 28;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotificationSquareDelete.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotificationSquareChatDelete != null && __isset.notificationSquareChatDelete)
      {
        field.Name = "notificationSquareChatDelete";
        field.Type = TType.Struct;
        field.ID = 29;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotificationSquareChatDelete.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotificationMessage != null && __isset.notificationMessage)
      {
        field.Name = "notificationMessage";
        field.Type = TType.Struct;
        field.ID = 30;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotificationMessage.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareChatProfileName != null && __isset.notifiedUpdateSquareChatProfileName)
      {
        field.Name = "notifiedUpdateSquareChatProfileName";
        field.Type = TType.Struct;
        field.ID = 31;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareChatProfileName.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareChatProfileImage != null && __isset.notifiedUpdateSquareChatProfileImage)
      {
        field.Name = "notifiedUpdateSquareChatProfileImage";
        field.Type = TType.Struct;
        field.ID = 32;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareChatProfileImage.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      if (NotifiedUpdateSquareFeatureSet != null && __isset.notifiedUpdateSquareFeatureSet)
      {
        field.Name = "notifiedUpdateSquareFeatureSet";
        field.Type = TType.Struct;
        field.ID = 33;
        await oprot.WriteFieldBeginAsync(field, cancellationToken);
        await NotifiedUpdateSquareFeatureSet.WriteAsync(oprot, cancellationToken);
        await oprot.WriteFieldEndAsync(cancellationToken);
      }
      await oprot.WriteFieldStopAsync(cancellationToken);
      await oprot.WriteStructEndAsync(cancellationToken);
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString()
  {
    var sb = new StringBuilder("SquareEventPayload(");
    bool __first = true;
    if (ReceiveMessage != null && __isset.receiveMessage)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("ReceiveMessage: ");
      sb.Append(ReceiveMessage== null ? "<null>" : ReceiveMessage.ToString());
    }
    if (SendMessage != null && __isset.sendMessage)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("SendMessage: ");
      sb.Append(SendMessage== null ? "<null>" : SendMessage.ToString());
    }
    if (NotifiedJoinSquareChat != null && __isset.notifiedJoinSquareChat)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedJoinSquareChat: ");
      sb.Append(NotifiedJoinSquareChat== null ? "<null>" : NotifiedJoinSquareChat.ToString());
    }
    if (NotifiedInviteIntoSquareChat != null && __isset.notifiedInviteIntoSquareChat)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedInviteIntoSquareChat: ");
      sb.Append(NotifiedInviteIntoSquareChat== null ? "<null>" : NotifiedInviteIntoSquareChat.ToString());
    }
    if (NotifiedLeaveSquareChat != null && __isset.notifiedLeaveSquareChat)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedLeaveSquareChat: ");
      sb.Append(NotifiedLeaveSquareChat== null ? "<null>" : NotifiedLeaveSquareChat.ToString());
    }
    if (NotifiedDestroyMessage != null && __isset.notifiedDestroyMessage)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedDestroyMessage: ");
      sb.Append(NotifiedDestroyMessage== null ? "<null>" : NotifiedDestroyMessage.ToString());
    }
    if (NotifiedMarkAsRead != null && __isset.notifiedMarkAsRead)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedMarkAsRead: ");
      sb.Append(NotifiedMarkAsRead== null ? "<null>" : NotifiedMarkAsRead.ToString());
    }
    if (NotifiedUpdateSquareMemberProfile != null && __isset.notifiedUpdateSquareMemberProfile)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareMemberProfile: ");
      sb.Append(NotifiedUpdateSquareMemberProfile== null ? "<null>" : NotifiedUpdateSquareMemberProfile.ToString());
    }
    if (NotifiedKickoutFromSquare != null && __isset.notifiedKickoutFromSquare)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedKickoutFromSquare: ");
      sb.Append(NotifiedKickoutFromSquare== null ? "<null>" : NotifiedKickoutFromSquare.ToString());
    }
    if (NotifiedShutdownSquare != null && __isset.notifiedShutdownSquare)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedShutdownSquare: ");
      sb.Append(NotifiedShutdownSquare== null ? "<null>" : NotifiedShutdownSquare.ToString());
    }
    if (NotifiedDeleteSquareChat != null && __isset.notifiedDeleteSquareChat)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedDeleteSquareChat: ");
      sb.Append(NotifiedDeleteSquareChat== null ? "<null>" : NotifiedDeleteSquareChat.ToString());
    }
    if (NotifiedUpdateSquareChatProfileName != null && __isset.notifiedUpdateSquareChatProfileName)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareChatProfileName: ");
      sb.Append(NotifiedUpdateSquareChatProfileName== null ? "<null>" : NotifiedUpdateSquareChatProfileName.ToString());
    }
    if (NotifiedUpdateSquareChatProfileImage != null && __isset.notifiedUpdateSquareChatProfileImage)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareChatProfileImage: ");
      sb.Append(NotifiedUpdateSquareChatProfileImage== null ? "<null>" : NotifiedUpdateSquareChatProfileImage.ToString());
    }
    if (NotifiedUpdateSquareStatus != null && __isset.notifiedUpdateSquareStatus)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareStatus: ");
      sb.Append(NotifiedUpdateSquareStatus== null ? "<null>" : NotifiedUpdateSquareStatus.ToString());
    }
    if (NotifiedUpdateSquareChatStatus != null && __isset.notifiedUpdateSquareChatStatus)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareChatStatus: ");
      sb.Append(NotifiedUpdateSquareChatStatus== null ? "<null>" : NotifiedUpdateSquareChatStatus.ToString());
    }
    if (NotifiedCreateSquareMember != null && __isset.notifiedCreateSquareMember)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedCreateSquareMember: ");
      sb.Append(NotifiedCreateSquareMember== null ? "<null>" : NotifiedCreateSquareMember.ToString());
    }
    if (NotifiedCreateSquareChatMember != null && __isset.notifiedCreateSquareChatMember)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedCreateSquareChatMember: ");
      sb.Append(NotifiedCreateSquareChatMember== null ? "<null>" : NotifiedCreateSquareChatMember.ToString());
    }
    if (NotifiedUpdateSquareMemberRelation != null && __isset.notifiedUpdateSquareMemberRelation)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareMemberRelation: ");
      sb.Append(NotifiedUpdateSquareMemberRelation== null ? "<null>" : NotifiedUpdateSquareMemberRelation.ToString());
    }
    if (NotifiedUpdateSquare != null && __isset.notifiedUpdateSquare)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquare: ");
      sb.Append(NotifiedUpdateSquare== null ? "<null>" : NotifiedUpdateSquare.ToString());
    }
    if (NotifiedUpdateSquareMember != null && __isset.notifiedUpdateSquareMember)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareMember: ");
      sb.Append(NotifiedUpdateSquareMember== null ? "<null>" : NotifiedUpdateSquareMember.ToString());
    }
    if (NotifiedUpdateSquareChat != null && __isset.notifiedUpdateSquareChat)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareChat: ");
      sb.Append(NotifiedUpdateSquareChat== null ? "<null>" : NotifiedUpdateSquareChat.ToString());
    }
    if (NotificationJoinRequest != null && __isset.notificationJoinRequest)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotificationJoinRequest: ");
      sb.Append(NotificationJoinRequest== null ? "<null>" : NotificationJoinRequest.ToString());
    }
    if (NotificationJoined != null && __isset.notificationJoined)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotificationJoined: ");
      sb.Append(NotificationJoined== null ? "<null>" : NotificationJoined.ToString());
    }
    if (NotificationPromoteCoadmin != null && __isset.notificationPromoteCoadmin)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotificationPromoteCoadmin: ");
      sb.Append(NotificationPromoteCoadmin== null ? "<null>" : NotificationPromoteCoadmin.ToString());
    }
    if (NotificationPromoteAdmin != null && __isset.notificationPromoteAdmin)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotificationPromoteAdmin: ");
      sb.Append(NotificationPromoteAdmin== null ? "<null>" : NotificationPromoteAdmin.ToString());
    }
    if (NotificationDemoteMember != null && __isset.notificationDemoteMember)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotificationDemoteMember: ");
      sb.Append(NotificationDemoteMember== null ? "<null>" : NotificationDemoteMember.ToString());
    }
    if (NotificationKickedOut != null && __isset.notificationKickedOut)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotificationKickedOut: ");
      sb.Append(NotificationKickedOut== null ? "<null>" : NotificationKickedOut.ToString());
    }
    if (NotificationSquareDelete != null && __isset.notificationSquareDelete)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotificationSquareDelete: ");
      sb.Append(NotificationSquareDelete== null ? "<null>" : NotificationSquareDelete.ToString());
    }
    if (NotificationSquareChatDelete != null && __isset.notificationSquareChatDelete)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotificationSquareChatDelete: ");
      sb.Append(NotificationSquareChatDelete== null ? "<null>" : NotificationSquareChatDelete.ToString());
    }
    if (NotificationMessage != null && __isset.notificationMessage)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotificationMessage: ");
      sb.Append(NotificationMessage== null ? "<null>" : NotificationMessage.ToString());
    }
    if (NotifiedUpdateSquareChatMember != null && __isset.notifiedUpdateSquareChatMember)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareChatMember: ");
      sb.Append(NotifiedUpdateSquareChatMember== null ? "<null>" : NotifiedUpdateSquareChatMember.ToString());
    }
    if (NotifiedUpdateSquareAuthority != null && __isset.notifiedUpdateSquareAuthority)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareAuthority: ");
      sb.Append(NotifiedUpdateSquareAuthority== null ? "<null>" : NotifiedUpdateSquareAuthority.ToString());
    }
    if (NotifiedUpdateSquareFeatureSet != null && __isset.notifiedUpdateSquareFeatureSet)
    {
      if(!__first) { sb.Append(", "); }
      __first = false;
      sb.Append("NotifiedUpdateSquareFeatureSet: ");
      sb.Append(NotifiedUpdateSquareFeatureSet== null ? "<null>" : NotifiedUpdateSquareFeatureSet.ToString());
    }
    sb.Append(")");
    return sb.ToString();
  }
}

