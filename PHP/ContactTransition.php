<?php
/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

class ContactTransition
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'ownerMid',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        2 => array(
            'var' => 'targetMid',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        3 => array(
            'var' => 'previousStatus',
            'isRequired' => false,
            'type' => TType::I32,
        ),
        4 => array(
            'var' => 'resultStatus',
            'isRequired' => false,
            'type' => TType::I32,
        ),
    );

    /**
     * @var string
     */
    public $ownerMid = null;
    /**
     * @var string
     */
    public $targetMid = null;
    /**
     * @var int
     */
    public $previousStatus = null;
    /**
     * @var int
     */
    public $resultStatus = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            if (isset($vals['ownerMid'])) {
                $this->ownerMid = $vals['ownerMid'];
            }
            if (isset($vals['targetMid'])) {
                $this->targetMid = $vals['targetMid'];
            }
            if (isset($vals['previousStatus'])) {
                $this->previousStatus = $vals['previousStatus'];
            }
            if (isset($vals['resultStatus'])) {
                $this->resultStatus = $vals['resultStatus'];
            }
        }
    }

    public function getName()
    {
        return 'ContactTransition';
    }


    public function read($input)
    {
        $xfer = 0;
        $fname = null;
        $ftype = 0;
        $fid = 0;
        $xfer += $input->readStructBegin($fname);
        while (true) {
            $xfer += $input->readFieldBegin($fname, $ftype, $fid);
            if ($ftype == TType::STOP) {
                break;
            }
            switch ($fid) {
                case 1:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->ownerMid);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 2:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->targetMid);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 3:
                    if ($ftype == TType::I32) {
                        $xfer += $input->readI32($this->previousStatus);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 4:
                    if ($ftype == TType::I32) {
                        $xfer += $input->readI32($this->resultStatus);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                default:
                    $xfer += $input->skip($ftype);
                    break;
            }
            $xfer += $input->readFieldEnd();
        }
        $xfer += $input->readStructEnd();
        return $xfer;
    }

    public function write($output)
    {
        $xfer = 0;
        $xfer += $output->writeStructBegin('ContactTransition');
        if ($this->ownerMid !== null) {
            $xfer += $output->writeFieldBegin('ownerMid', TType::STRING, 1);
            $xfer += $output->writeString($this->ownerMid);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->targetMid !== null) {
            $xfer += $output->writeFieldBegin('targetMid', TType::STRING, 2);
            $xfer += $output->writeString($this->targetMid);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->previousStatus !== null) {
            $xfer += $output->writeFieldBegin('previousStatus', TType::I32, 3);
            $xfer += $output->writeI32($this->previousStatus);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->resultStatus !== null) {
            $xfer += $output->writeFieldBegin('resultStatus', TType::I32, 4);
            $xfer += $output->writeI32($this->resultStatus);
            $xfer += $output->writeFieldEnd();
        }
        $xfer += $output->writeFieldStop();
        $xfer += $output->writeStructEnd();
        return $xfer;
    }
}
