<?php
/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

class BuddyProfile
{
    static public $isValidate = false;

    static public $_TSPEC = array(
        1 => array(
            'var' => 'buddyId',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        2 => array(
            'var' => 'mid',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        3 => array(
            'var' => 'searchId',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        4 => array(
            'var' => 'displayName',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        5 => array(
            'var' => 'statusMessage',
            'isRequired' => false,
            'type' => TType::STRING,
        ),
        11 => array(
            'var' => 'contactCount',
            'isRequired' => false,
            'type' => TType::I64,
        ),
    );

    /**
     * @var string
     */
    public $buddyId = null;
    /**
     * @var string
     */
    public $mid = null;
    /**
     * @var string
     */
    public $searchId = null;
    /**
     * @var string
     */
    public $displayName = null;
    /**
     * @var string
     */
    public $statusMessage = null;
    /**
     * @var int
     */
    public $contactCount = null;

    public function __construct($vals = null)
    {
        if (is_array($vals)) {
            if (isset($vals['buddyId'])) {
                $this->buddyId = $vals['buddyId'];
            }
            if (isset($vals['mid'])) {
                $this->mid = $vals['mid'];
            }
            if (isset($vals['searchId'])) {
                $this->searchId = $vals['searchId'];
            }
            if (isset($vals['displayName'])) {
                $this->displayName = $vals['displayName'];
            }
            if (isset($vals['statusMessage'])) {
                $this->statusMessage = $vals['statusMessage'];
            }
            if (isset($vals['contactCount'])) {
                $this->contactCount = $vals['contactCount'];
            }
        }
    }

    public function getName()
    {
        return 'BuddyProfile';
    }


    public function read($input)
    {
        $xfer = 0;
        $fname = null;
        $ftype = 0;
        $fid = 0;
        $xfer += $input->readStructBegin($fname);
        while (true) {
            $xfer += $input->readFieldBegin($fname, $ftype, $fid);
            if ($ftype == TType::STOP) {
                break;
            }
            switch ($fid) {
                case 1:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->buddyId);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 2:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->mid);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 3:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->searchId);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 4:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->displayName);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 5:
                    if ($ftype == TType::STRING) {
                        $xfer += $input->readString($this->statusMessage);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                case 11:
                    if ($ftype == TType::I64) {
                        $xfer += $input->readI64($this->contactCount);
                    } else {
                        $xfer += $input->skip($ftype);
                    }
                    break;
                default:
                    $xfer += $input->skip($ftype);
                    break;
            }
            $xfer += $input->readFieldEnd();
        }
        $xfer += $input->readStructEnd();
        return $xfer;
    }

    public function write($output)
    {
        $xfer = 0;
        $xfer += $output->writeStructBegin('BuddyProfile');
        if ($this->buddyId !== null) {
            $xfer += $output->writeFieldBegin('buddyId', TType::STRING, 1);
            $xfer += $output->writeString($this->buddyId);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->mid !== null) {
            $xfer += $output->writeFieldBegin('mid', TType::STRING, 2);
            $xfer += $output->writeString($this->mid);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->searchId !== null) {
            $xfer += $output->writeFieldBegin('searchId', TType::STRING, 3);
            $xfer += $output->writeString($this->searchId);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->displayName !== null) {
            $xfer += $output->writeFieldBegin('displayName', TType::STRING, 4);
            $xfer += $output->writeString($this->displayName);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->statusMessage !== null) {
            $xfer += $output->writeFieldBegin('statusMessage', TType::STRING, 5);
            $xfer += $output->writeString($this->statusMessage);
            $xfer += $output->writeFieldEnd();
        }
        if ($this->contactCount !== null) {
            $xfer += $output->writeFieldBegin('contactCount', TType::I64, 11);
            $xfer += $output->writeI64($this->contactCount);
            $xfer += $output->writeFieldEnd();
        }
        $xfer += $output->writeFieldStop();
        $xfer += $output->writeStructEnd();
        return $xfer;
    }
}
