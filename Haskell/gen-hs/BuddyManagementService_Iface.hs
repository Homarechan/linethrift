{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-missing-fields #-}
{-# OPTIONS_GHC -fno-warn-missing-signatures #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-----------------------------------------------------------------
-- Autogenerated by Thrift Compiler (0.14.0)                      --
--                                                             --
-- DO NOT EDIT UNLESS YOU ARE SURE YOU KNOW WHAT YOU ARE DOING --
-----------------------------------------------------------------

module BuddyManagementService_Iface where
import Prelude (($), (.), (>>=), (==), (++))
import qualified Prelude as P
import qualified Control.Exception as X
import qualified Control.Monad as M ( liftM, ap, when )
import Data.Functor ( (<$>) )
import qualified Data.ByteString.Lazy as LBS
import qualified Data.Hashable as H
import qualified Data.Int as I
import qualified Data.Maybe as M (catMaybes)
import qualified Data.Text.Lazy.Encoding as E ( decodeUtf8, encodeUtf8 )
import qualified Data.Text.Lazy as LT
import qualified GHC.Generics as G (Generic)
import qualified Data.Typeable as TY ( Typeable )
import qualified Data.HashMap.Strict as Map
import qualified Data.HashSet as Set
import qualified Data.Vector as Vector
import qualified Test.QuickCheck.Arbitrary as QC ( Arbitrary(..) )
import qualified Test.QuickCheck as QC ( elements )

import qualified Thrift as T
import qualified Thrift.Types as T
import qualified Thrift.Arbitraries as T


import Line_Types

class BuddyManagementService_Iface a where
  addBuddyMember :: a -> LT.Text -> LT.Text -> P.IO ()
  addBuddyMembers :: a -> LT.Text -> (Vector.Vector LT.Text) -> P.IO ()
  blockBuddyMember :: a -> LT.Text -> LT.Text -> P.IO ()
  commitSendMessagesToAll :: a -> (Vector.Vector LT.Text) -> P.IO (Vector.Vector SendBuddyMessageResult)
  commitSendMessagesToMids :: a -> (Vector.Vector LT.Text) -> (Vector.Vector LT.Text) -> P.IO (Vector.Vector SendBuddyMessageResult)
  containsBuddyMember :: a -> LT.Text -> LT.Text -> P.IO P.Bool
  downloadMessageContent :: a -> LT.Text -> LT.Text -> P.IO LBS.ByteString
  downloadMessageContentPreview :: a -> LT.Text -> LT.Text -> P.IO LBS.ByteString
  downloadProfileImage :: a -> LT.Text -> P.IO LBS.ByteString
  downloadProfileImagePreview :: a -> LT.Text -> P.IO LBS.ByteString
  getActiveMemberCountByBuddyMid :: a -> LT.Text -> P.IO I.Int64
  getActiveMemberMidsByBuddyMid :: a -> LT.Text -> P.IO (Vector.Vector LT.Text)
  getAllBuddyMembers :: a -> P.IO (Vector.Vector LT.Text)
  getBlockedBuddyMembers :: a -> P.IO (Vector.Vector LT.Text)
  getBlockerCountByBuddyMid :: a -> LT.Text -> P.IO I.Int64
  getBuddyDetailByMid :: a -> LT.Text -> P.IO BuddyDetail
  getBuddyProfile :: a -> P.IO BuddyProfile
  getContactTicket :: a -> P.IO Ticket
  getMemberCountByBuddyMid :: a -> LT.Text -> P.IO I.Int64
  getSendBuddyMessageResult :: a -> LT.Text -> P.IO SendBuddyMessageResult
  getSetBuddyOnAirResult :: a -> LT.Text -> P.IO SetBuddyOnAirResult
  getUpdateBuddyProfileResult :: a -> LT.Text -> P.IO UpdateBuddyProfileResult
  isBuddyOnAirByMid :: a -> LT.Text -> P.IO P.Bool
  linkAndSendBuddyContentMessageToAllAsync :: a -> LT.Text -> Message -> LT.Text -> P.IO LT.Text
  linkAndSendBuddyContentMessageToMids :: a -> LT.Text -> Message -> LT.Text -> (Vector.Vector LT.Text) -> P.IO SendBuddyMessageResult
  notifyBuddyBlocked :: a -> LT.Text -> LT.Text -> P.IO ()
  notifyBuddyUnblocked :: a -> LT.Text -> LT.Text -> P.IO ()
  registerBuddy :: a -> LT.Text -> LT.Text -> LT.Text -> LT.Text -> LBS.ByteString -> (Map.HashMap LT.Text LT.Text) -> P.IO LT.Text
  registerBuddyAdmin :: a -> LT.Text -> LT.Text -> LT.Text -> LT.Text -> LBS.ByteString -> P.IO LT.Text
  reissueContactTicket :: a -> I.Int64 -> I.Int32 -> P.IO LT.Text
  removeBuddyMember :: a -> LT.Text -> LT.Text -> P.IO ()
  removeBuddyMembers :: a -> LT.Text -> (Vector.Vector LT.Text) -> P.IO ()
  sendBuddyContentMessageToAll :: a -> LT.Text -> Message -> LBS.ByteString -> P.IO SendBuddyMessageResult
  sendBuddyContentMessageToAllAsync :: a -> LT.Text -> Message -> LBS.ByteString -> P.IO LT.Text
  sendBuddyContentMessageToMids :: a -> LT.Text -> Message -> LBS.ByteString -> (Vector.Vector LT.Text) -> P.IO SendBuddyMessageResult
  sendBuddyContentMessageToMidsAsync :: a -> LT.Text -> Message -> LBS.ByteString -> (Vector.Vector LT.Text) -> P.IO LT.Text
  sendBuddyMessageToAll :: a -> LT.Text -> Message -> P.IO SendBuddyMessageResult
  sendBuddyMessageToAllAsync :: a -> LT.Text -> Message -> P.IO LT.Text
  sendBuddyMessageToMids :: a -> LT.Text -> Message -> (Vector.Vector LT.Text) -> P.IO SendBuddyMessageResult
  sendBuddyMessageToMidsAsync :: a -> LT.Text -> Message -> (Vector.Vector LT.Text) -> P.IO LT.Text
  sendIndividualEventToAllAsync :: a -> LT.Text -> LT.Text -> NotificationStatus -> P.IO ()
  setBuddyOnAir :: a -> LT.Text -> P.Bool -> P.IO SetBuddyOnAirResult
  setBuddyOnAirAsync :: a -> LT.Text -> P.Bool -> P.IO LT.Text
  storeMessage :: a -> LT.Text -> BuddyMessageRequest -> P.IO SendBuddyMessageResult
  unblockBuddyMember :: a -> LT.Text -> LT.Text -> P.IO ()
  unregisterBuddy :: a -> LT.Text -> P.IO ()
  unregisterBuddyAdmin :: a -> LT.Text -> P.IO ()
  updateBuddyAdminProfileAttribute :: a -> LT.Text -> (Map.HashMap LT.Text LT.Text) -> P.IO ()
  updateBuddyAdminProfileImage :: a -> LT.Text -> LBS.ByteString -> P.IO ()
  updateBuddyProfileAttributes :: a -> LT.Text -> (Map.HashMap LT.Text LT.Text) -> P.IO UpdateBuddyProfileResult
  updateBuddyProfileAttributesAsync :: a -> LT.Text -> (Map.HashMap LT.Text LT.Text) -> P.IO LT.Text
  updateBuddyProfileImage :: a -> LT.Text -> LBS.ByteString -> P.IO UpdateBuddyProfileResult
  updateBuddyProfileImageAsync :: a -> LT.Text -> LBS.ByteString -> P.IO LT.Text
  updateBuddySearchId :: a -> LT.Text -> LT.Text -> P.IO ()
  updateBuddySettings :: a -> (Map.HashMap LT.Text LT.Text) -> P.IO ()
  uploadBuddyContent :: a -> ContentType -> LBS.ByteString -> P.IO LT.Text
