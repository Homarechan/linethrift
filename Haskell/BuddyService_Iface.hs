{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-missing-fields #-}
{-# OPTIONS_GHC -fno-warn-missing-signatures #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-----------------------------------------------------------------
-- Autogenerated by Thrift Compiler (0.13.0)                      --
--                                                             --
-- DO NOT EDIT UNLESS YOU ARE SURE YOU KNOW WHAT YOU ARE DOING --
-----------------------------------------------------------------

module BuddyService_Iface where
import Prelude (($), (.), (>>=), (==), (++))
import qualified Prelude as P
import qualified Control.Exception as X
import qualified Control.Monad as M ( liftM, ap, when )
import Data.Functor ( (<$>) )
import qualified Data.ByteString.Lazy as LBS
import qualified Data.Hashable as H
import qualified Data.Int as I
import qualified Data.Maybe as M (catMaybes)
import qualified Data.Text.Lazy.Encoding as E ( decodeUtf8, encodeUtf8 )
import qualified Data.Text.Lazy as LT
import qualified GHC.Generics as G (Generic)
import qualified Data.Typeable as TY ( Typeable )
import qualified Data.HashMap.Strict as Map
import qualified Data.HashSet as Set
import qualified Data.Vector as Vector
import qualified Test.QuickCheck.Arbitrary as QC ( Arbitrary(..) )
import qualified Test.QuickCheck as QC ( elements )

import qualified Thrift as T
import qualified Thrift.Types as T
import qualified Thrift.Arbitraries as T


import Line_Types

class BuddyService_Iface a where
  findBuddyContactsByQuery :: a -> LT.Text -> LT.Text -> LT.Text -> I.Int32 -> I.Int32 -> BuddySearchRequestSource -> P.IO (Vector.Vector BuddySearchResult)
  getBuddyContacts :: a -> LT.Text -> LT.Text -> LT.Text -> I.Int32 -> I.Int32 -> P.IO (Vector.Vector Contact)
  getBuddyDetail :: a -> LT.Text -> P.IO BuddyDetail
  getBuddyOnAir :: a -> LT.Text -> P.IO BuddyOnAir
  getCountriesHavingBuddy :: a -> P.IO (Vector.Vector LT.Text)
  getNewlyReleasedBuddyIds :: a -> LT.Text -> P.IO (Map.HashMap LT.Text I.Int64)
  getPopularBuddyBanner :: a -> LT.Text -> LT.Text -> ApplicationType -> LT.Text -> P.IO BuddyBanner
  getPopularBuddyLists :: a -> LT.Text -> LT.Text -> P.IO (Vector.Vector BuddyList)
  getPromotedBuddyContacts :: a -> LT.Text -> LT.Text -> P.IO (Vector.Vector Contact)
