{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-missing-fields #-}
{-# OPTIONS_GHC -fno-warn-missing-signatures #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-----------------------------------------------------------------
-- Autogenerated by Thrift Compiler (0.11.0)                      --
--                                                             --
-- DO NOT EDIT UNLESS YOU ARE SURE YOU KNOW WHAT YOU ARE DOING --
-----------------------------------------------------------------

module CallService_Iface where
import Prelude (($), (.), (>>=), (==), (++))
import qualified Prelude as P
import qualified Control.Exception as X
import qualified Control.Monad as M ( liftM, ap, when )
import Data.Functor ( (<$>) )
import qualified Data.ByteString.Lazy as LBS
import qualified Data.Hashable as H
import qualified Data.Int as I
import qualified Data.Maybe as M (catMaybes)
import qualified Data.Text.Lazy.Encoding as E ( decodeUtf8, encodeUtf8 )
import qualified Data.Text.Lazy as LT
import qualified GHC.Generics as G (Generic)
import qualified Data.Typeable as TY ( Typeable )
import qualified Data.HashMap.Strict as Map
import qualified Data.HashSet as Set
import qualified Data.Vector as Vector
import qualified Test.QuickCheck.Arbitrary as QC ( Arbitrary(..) )
import qualified Test.QuickCheck as QC ( elements )

import qualified Thrift as T
import qualified Thrift.Types as T
import qualified Thrift.Arbitraries as T


import Line_Types

class CallService_Iface a where
  getUserStatus :: a -> LT.Text -> P.IO UserStatus
  updateProfileAttributeForChannel :: a -> ProfileAttribute -> LT.Text -> P.IO ()
  updateExtendedProfileAttribute :: a -> ExtendedProfileAttribute -> ExtendedProfile -> P.IO ()
  getAllSimpleChannelContacts :: a -> P.Bool -> P.IO (Vector.Vector SimpleChannelContact)
  getUserIdentities :: a -> P.IO (Map.HashMap RegistrationType LT.Text)
  markPaidCallAd :: a -> LT.Text -> LT.Text -> P.Bool -> P.IO PaidCallDialing
  isGroupMember :: a -> LT.Text -> P.IO P.Bool
  getPhoneInfoFromPhoneNumber :: a -> LT.Text -> LT.Text -> P.IO PhoneInfoForChannel
  redeemPaidCallVoucher :: a -> LT.Text -> LT.Text -> P.IO PaidCallRedeemResult
  getPreferredDisplayName :: a -> (Vector.Vector LT.Text) -> P.IO (Map.HashMap LT.Text LT.Text)
  getContactsForChannel :: a -> (Vector.Vector LT.Text) -> P.IO (Vector.Vector Contact)
  getCallCreditProducts :: a -> PaymentType -> PaymentPgType -> LT.Text -> LT.Text -> P.IO (Vector.Vector CoinProductItem)
  getCompactContacts :: a -> I.Int64 -> P.IO (Vector.Vector CompactContact)
  notifyNotiCenterEvent :: a -> NotiCenterEventData -> P.IO ()
  isInContact :: a -> LT.Text -> P.IO P.Bool
  lookupGroupMembers :: a -> LT.Text -> (Vector.Vector LT.Text) -> P.IO (Vector.Vector SimpleChannelContact)
  getRoomInformation :: a -> LT.Text -> P.IO Room
  getGroupCall :: a -> LT.Text -> P.IO GroupCall
  isAllowSecondaryDeviceLogin :: a -> P.IO P.Bool
  getPrimaryClientForChannel :: a -> P.IO SimpleChannelClient
  createRoomWithBuddy :: a -> I.Int32 -> LT.Text -> (Vector.Vector LT.Text) -> P.IO Room
  getDisplayName :: a -> LT.Text -> P.IO LT.Text
  getPaidCallMetadata :: a -> LT.Text -> P.IO PaidCallMetadataResult
  getMid :: a -> P.IO LT.Text
  getUserCountryForBilling :: a -> LT.Text -> LT.Text -> P.IO LT.Text
  getFavoriteGroupIdsForChannel :: a -> P.IO (Vector.Vector LT.Text)
  getPaidCallHistory :: a -> I.Int64 -> I.Int32 -> LT.Text -> P.IO PaidCallHistoryResult
  sendPinCodeOperation :: a -> LT.Text -> P.IO ()
  inviteIntoGroupCall :: a -> LT.Text -> (Vector.Vector LT.Text) -> GroupCallMediaType -> P.IO ()
  getFriendMids :: a -> P.IO (Vector.Vector LT.Text)
  getMetaProfile :: a -> P.IO MetaProfile
  sendMessageForChannel :: a -> Message -> P.IO Message
  activeBuddySubscriberCount :: a -> P.IO I.Int64
  getCallCreditPurchaseHistory :: a -> CoinHistoryCondition -> P.IO CoinHistoryResult
  isRoomMember :: a -> LT.Text -> P.IO P.Bool
  sendSystemOAMessage :: a -> Message -> P.IO Message
  acquirePaidCallRoute :: a -> PaidCallType -> LT.Text -> LT.Text -> LT.Text -> P.Bool -> LT.Text -> LT.Text -> P.IO PaidCallResponse
  getGroupsForChannel :: a -> (Vector.Vector LT.Text) -> P.IO (Vector.Vector Group)
  getUserCreateTime :: a -> P.IO I.Int64
  registerChannelCP :: a -> LT.Text -> LT.Text -> P.IO LT.Text
  reserveCallCreditPurchase :: a -> CoinPurchaseReservation -> P.IO PaymentReservationResult
  acquirePaidCallCurrencyExchangeRate :: a -> LT.Text -> P.IO (Vector.Vector PaidCallCurrencyExchangeRate)
  getRoomMemberMidsForAppPlatform :: a -> LT.Text -> P.IO (Vector.Vector LT.Text)
  getPaidCallBalanceList :: a -> LT.Text -> P.IO (Vector.Vector PaidCallBalance)
  getPersonalInfos :: a -> (Set.HashSet PersonalInfo) -> P.IO (Map.HashMap PersonalInfo LT.Text)
  getPrimaryClientsForChannel :: a -> (Vector.Vector LT.Text) -> P.IO (Vector.Vector SimpleChannelClient)
  addBuddyToContact :: a -> LT.Text -> P.IO ContactTransition
  getGroupMemberMidsForAppPlatform :: a -> LT.Text -> P.IO (Vector.Vector LT.Text)
  getUserLanguage :: a -> P.IO LT.Text
  lookupPaidCall :: a -> LT.Text -> LT.Text -> LT.Text -> P.IO PaidCallResponse
  getExtendedProfile :: a -> P.IO ExtendedProfile
  getReverseCompactContacts :: a -> (Vector.Vector LT.Text) -> P.IO (Map.HashMap LT.Text CompactContact)
  getPaidCallAdStatus :: a -> P.IO PaidCallAdResult
  findContactByUseridWithoutAbuseBlockForChannel :: a -> LT.Text -> P.IO Contact
  getGroupMemberMids :: a -> LT.Text -> P.IO (Vector.Vector LT.Text)
  sendMessageWithoutRelationship :: a -> Message -> P.IO Message
  displayBuddySubscriberCountInBulk :: a -> (Vector.Vector LT.Text) -> P.IO (Map.HashMap LT.Text I.Int64)
  lookupRoomMembers :: a -> LT.Text -> (Vector.Vector LT.Text) -> P.IO (Vector.Vector SimpleChannelContact)
  getFavoriteMidsForChannel :: a -> P.IO (Vector.Vector LT.Text)
  getAllContactIdsForChannel :: a -> P.IO (Vector.Vector LT.Text)
  displayBuddySubscriberCount :: a -> P.IO I.Int64
  getProfileForChannel :: a -> P.IO Profile
  getUserTickets :: a -> (Vector.Vector LT.Text) -> P.IO (Vector.Vector UserTicketResponse)
  getOAFriendMids :: a -> P.IO (Vector.Vector LT.Text)
  searchPaidCallUserRate :: a -> LT.Text -> LT.Text -> P.IO (Vector.Vector PaidCallUserRate)
  getJoinedGroupIdsForChannel :: a -> P.IO (Vector.Vector LT.Text)
  acquireGroupCallRoute :: a -> LT.Text -> GroupCallMediaType -> P.IO GroupCallRoute
  getUserMidsWhoAddedMe :: a -> P.IO (Vector.Vector LT.Text)
  getIdentityCredential :: a -> P.IO IdentityCredential
  addOperationForChannel :: a -> OpType -> LT.Text -> LT.Text -> LT.Text -> P.IO ()
  getSimpleChannelContacts :: a -> (Vector.Vector LT.Text) -> P.Bool -> P.IO (Vector.Vector SimpleChannelContact)
  getUserLastSentMessageTimeStamp :: a -> LT.Text -> P.IO I.Int64
