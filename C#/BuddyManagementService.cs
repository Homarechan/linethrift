/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

public partial class BuddyManagementService {
  public interface ISync {
    void addBuddyMember(string requestId, string userMid);
    void addBuddyMembers(string requestId, List<string> userMids);
    void blockBuddyMember(string requestId, string mid);
    List<SendBuddyMessageResult> commitSendMessagesToAll(List<string> requestIdList);
    List<SendBuddyMessageResult> commitSendMessagesToMids(List<string> requestIdList, List<string> mids);
    bool containsBuddyMember(string requestId, string userMid);
    byte[] downloadMessageContent(string requestId, string messageId);
    byte[] downloadMessageContentPreview(string requestId, string messageId);
    byte[] downloadProfileImage(string requestId);
    byte[] downloadProfileImagePreview(string requestId);
    long getActiveMemberCountByBuddyMid(string buddyMid);
    List<string> getActiveMemberMidsByBuddyMid(string buddyMid);
    List<string> getAllBuddyMembers();
    List<string> getBlockedBuddyMembers();
    long getBlockerCountByBuddyMid(string buddyMid);
    BuddyDetail getBuddyDetailByMid(string buddyMid);
    BuddyProfile getBuddyProfile();
    Ticket getContactTicket();
    long getMemberCountByBuddyMid(string buddyMid);
    SendBuddyMessageResult getSendBuddyMessageResult(string sendBuddyMessageRequestId);
    SetBuddyOnAirResult getSetBuddyOnAirResult(string setBuddyOnAirRequestId);
    UpdateBuddyProfileResult getUpdateBuddyProfileResult(string updateBuddyProfileRequestId);
    bool isBuddyOnAirByMid(string buddyMid);
    string linkAndSendBuddyContentMessageToAllAsync(string requestId, Message msg, string sourceContentId);
    SendBuddyMessageResult linkAndSendBuddyContentMessageToMids(string requestId, Message msg, string sourceContentId, List<string> mids);
    void notifyBuddyBlocked(string buddyMid, string blockerMid);
    void notifyBuddyUnblocked(string buddyMid, string blockerMid);
    string registerBuddy(string buddyId, string searchId, string displayName, string statusMeessage, byte[] picture, Dictionary<string, string> settings);
    string registerBuddyAdmin(string buddyId, string searchId, string displayName, string statusMessage, byte[] picture);
    string reissueContactTicket(long expirationTime, int maxUseCount);
    void removeBuddyMember(string requestId, string userMid);
    void removeBuddyMembers(string requestId, List<string> userMids);
    SendBuddyMessageResult sendBuddyContentMessageToAll(string requestId, Message msg, byte[] content);
    string sendBuddyContentMessageToAllAsync(string requestId, Message msg, byte[] content);
    SendBuddyMessageResult sendBuddyContentMessageToMids(string requestId, Message msg, byte[] content, List<string> mids);
    string sendBuddyContentMessageToMidsAsync(string requestId, Message msg, byte[] content, List<string> mids);
    SendBuddyMessageResult sendBuddyMessageToAll(string requestId, Message msg);
    string sendBuddyMessageToAllAsync(string requestId, Message msg);
    SendBuddyMessageResult sendBuddyMessageToMids(string requestId, Message msg, List<string> mids);
    string sendBuddyMessageToMidsAsync(string requestId, Message msg, List<string> mids);
    void sendIndividualEventToAllAsync(string requestId, string buddyMid, NotificationStatus notificationStatus);
    SetBuddyOnAirResult setBuddyOnAir(string requestId, bool onAir);
    string setBuddyOnAirAsync(string requestId, bool onAir);
    SendBuddyMessageResult storeMessage(string requestId, BuddyMessageRequest messageRequest);
    void unblockBuddyMember(string requestId, string mid);
    void unregisterBuddy(string requestId);
    void unregisterBuddyAdmin(string requestId);
    void updateBuddyAdminProfileAttribute(string requestId, Dictionary<string, string> attributes);
    void updateBuddyAdminProfileImage(string requestId, byte[] picture);
    UpdateBuddyProfileResult updateBuddyProfileAttributes(string requestId, Dictionary<string, string> attributes);
    string updateBuddyProfileAttributesAsync(string requestId, Dictionary<string, string> attributes);
    UpdateBuddyProfileResult updateBuddyProfileImage(string requestId, byte[] image);
    string updateBuddyProfileImageAsync(string requestId, byte[] image);
    void updateBuddySearchId(string requestId, string searchId);
    void updateBuddySettings(Dictionary<string, string> settings);
    string uploadBuddyContent(ContentType contentType, byte[] content);
  }

  public interface Iface : ISync {
    #if SILVERLIGHT
    IAsyncResult Begin_addBuddyMember(AsyncCallback callback, object state, string requestId, string userMid);
    void End_addBuddyMember(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_addBuddyMembers(AsyncCallback callback, object state, string requestId, List<string> userMids);
    void End_addBuddyMembers(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_blockBuddyMember(AsyncCallback callback, object state, string requestId, string mid);
    void End_blockBuddyMember(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_commitSendMessagesToAll(AsyncCallback callback, object state, List<string> requestIdList);
    List<SendBuddyMessageResult> End_commitSendMessagesToAll(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_commitSendMessagesToMids(AsyncCallback callback, object state, List<string> requestIdList, List<string> mids);
    List<SendBuddyMessageResult> End_commitSendMessagesToMids(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_containsBuddyMember(AsyncCallback callback, object state, string requestId, string userMid);
    bool End_containsBuddyMember(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_downloadMessageContent(AsyncCallback callback, object state, string requestId, string messageId);
    byte[] End_downloadMessageContent(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_downloadMessageContentPreview(AsyncCallback callback, object state, string requestId, string messageId);
    byte[] End_downloadMessageContentPreview(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_downloadProfileImage(AsyncCallback callback, object state, string requestId);
    byte[] End_downloadProfileImage(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_downloadProfileImagePreview(AsyncCallback callback, object state, string requestId);
    byte[] End_downloadProfileImagePreview(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getActiveMemberCountByBuddyMid(AsyncCallback callback, object state, string buddyMid);
    long End_getActiveMemberCountByBuddyMid(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getActiveMemberMidsByBuddyMid(AsyncCallback callback, object state, string buddyMid);
    List<string> End_getActiveMemberMidsByBuddyMid(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getAllBuddyMembers(AsyncCallback callback, object state);
    List<string> End_getAllBuddyMembers(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getBlockedBuddyMembers(AsyncCallback callback, object state);
    List<string> End_getBlockedBuddyMembers(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getBlockerCountByBuddyMid(AsyncCallback callback, object state, string buddyMid);
    long End_getBlockerCountByBuddyMid(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getBuddyDetailByMid(AsyncCallback callback, object state, string buddyMid);
    BuddyDetail End_getBuddyDetailByMid(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getBuddyProfile(AsyncCallback callback, object state);
    BuddyProfile End_getBuddyProfile(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getContactTicket(AsyncCallback callback, object state);
    Ticket End_getContactTicket(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getMemberCountByBuddyMid(AsyncCallback callback, object state, string buddyMid);
    long End_getMemberCountByBuddyMid(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getSendBuddyMessageResult(AsyncCallback callback, object state, string sendBuddyMessageRequestId);
    SendBuddyMessageResult End_getSendBuddyMessageResult(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getSetBuddyOnAirResult(AsyncCallback callback, object state, string setBuddyOnAirRequestId);
    SetBuddyOnAirResult End_getSetBuddyOnAirResult(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_getUpdateBuddyProfileResult(AsyncCallback callback, object state, string updateBuddyProfileRequestId);
    UpdateBuddyProfileResult End_getUpdateBuddyProfileResult(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_isBuddyOnAirByMid(AsyncCallback callback, object state, string buddyMid);
    bool End_isBuddyOnAirByMid(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_linkAndSendBuddyContentMessageToAllAsync(AsyncCallback callback, object state, string requestId, Message msg, string sourceContentId);
    string End_linkAndSendBuddyContentMessageToAllAsync(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_linkAndSendBuddyContentMessageToMids(AsyncCallback callback, object state, string requestId, Message msg, string sourceContentId, List<string> mids);
    SendBuddyMessageResult End_linkAndSendBuddyContentMessageToMids(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_notifyBuddyBlocked(AsyncCallback callback, object state, string buddyMid, string blockerMid);
    void End_notifyBuddyBlocked(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_notifyBuddyUnblocked(AsyncCallback callback, object state, string buddyMid, string blockerMid);
    void End_notifyBuddyUnblocked(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_registerBuddy(AsyncCallback callback, object state, string buddyId, string searchId, string displayName, string statusMeessage, byte[] picture, Dictionary<string, string> settings);
    string End_registerBuddy(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_registerBuddyAdmin(AsyncCallback callback, object state, string buddyId, string searchId, string displayName, string statusMessage, byte[] picture);
    string End_registerBuddyAdmin(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_reissueContactTicket(AsyncCallback callback, object state, long expirationTime, int maxUseCount);
    string End_reissueContactTicket(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_removeBuddyMember(AsyncCallback callback, object state, string requestId, string userMid);
    void End_removeBuddyMember(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_removeBuddyMembers(AsyncCallback callback, object state, string requestId, List<string> userMids);
    void End_removeBuddyMembers(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_sendBuddyContentMessageToAll(AsyncCallback callback, object state, string requestId, Message msg, byte[] content);
    SendBuddyMessageResult End_sendBuddyContentMessageToAll(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_sendBuddyContentMessageToAllAsync(AsyncCallback callback, object state, string requestId, Message msg, byte[] content);
    string End_sendBuddyContentMessageToAllAsync(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_sendBuddyContentMessageToMids(AsyncCallback callback, object state, string requestId, Message msg, byte[] content, List<string> mids);
    SendBuddyMessageResult End_sendBuddyContentMessageToMids(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_sendBuddyContentMessageToMidsAsync(AsyncCallback callback, object state, string requestId, Message msg, byte[] content, List<string> mids);
    string End_sendBuddyContentMessageToMidsAsync(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_sendBuddyMessageToAll(AsyncCallback callback, object state, string requestId, Message msg);
    SendBuddyMessageResult End_sendBuddyMessageToAll(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_sendBuddyMessageToAllAsync(AsyncCallback callback, object state, string requestId, Message msg);
    string End_sendBuddyMessageToAllAsync(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_sendBuddyMessageToMids(AsyncCallback callback, object state, string requestId, Message msg, List<string> mids);
    SendBuddyMessageResult End_sendBuddyMessageToMids(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_sendBuddyMessageToMidsAsync(AsyncCallback callback, object state, string requestId, Message msg, List<string> mids);
    string End_sendBuddyMessageToMidsAsync(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_sendIndividualEventToAllAsync(AsyncCallback callback, object state, string requestId, string buddyMid, NotificationStatus notificationStatus);
    void End_sendIndividualEventToAllAsync(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_setBuddyOnAir(AsyncCallback callback, object state, string requestId, bool onAir);
    SetBuddyOnAirResult End_setBuddyOnAir(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_setBuddyOnAirAsync(AsyncCallback callback, object state, string requestId, bool onAir);
    string End_setBuddyOnAirAsync(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_storeMessage(AsyncCallback callback, object state, string requestId, BuddyMessageRequest messageRequest);
    SendBuddyMessageResult End_storeMessage(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_unblockBuddyMember(AsyncCallback callback, object state, string requestId, string mid);
    void End_unblockBuddyMember(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_unregisterBuddy(AsyncCallback callback, object state, string requestId);
    void End_unregisterBuddy(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_unregisterBuddyAdmin(AsyncCallback callback, object state, string requestId);
    void End_unregisterBuddyAdmin(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_updateBuddyAdminProfileAttribute(AsyncCallback callback, object state, string requestId, Dictionary<string, string> attributes);
    void End_updateBuddyAdminProfileAttribute(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_updateBuddyAdminProfileImage(AsyncCallback callback, object state, string requestId, byte[] picture);
    void End_updateBuddyAdminProfileImage(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_updateBuddyProfileAttributes(AsyncCallback callback, object state, string requestId, Dictionary<string, string> attributes);
    UpdateBuddyProfileResult End_updateBuddyProfileAttributes(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_updateBuddyProfileAttributesAsync(AsyncCallback callback, object state, string requestId, Dictionary<string, string> attributes);
    string End_updateBuddyProfileAttributesAsync(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_updateBuddyProfileImage(AsyncCallback callback, object state, string requestId, byte[] image);
    UpdateBuddyProfileResult End_updateBuddyProfileImage(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_updateBuddyProfileImageAsync(AsyncCallback callback, object state, string requestId, byte[] image);
    string End_updateBuddyProfileImageAsync(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_updateBuddySearchId(AsyncCallback callback, object state, string requestId, string searchId);
    void End_updateBuddySearchId(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_updateBuddySettings(AsyncCallback callback, object state, Dictionary<string, string> settings);
    void End_updateBuddySettings(IAsyncResult asyncResult);
    #endif
    #if SILVERLIGHT
    IAsyncResult Begin_uploadBuddyContent(AsyncCallback callback, object state, ContentType contentType, byte[] content);
    string End_uploadBuddyContent(IAsyncResult asyncResult);
    #endif
  }

  public class Client : IDisposable, Iface {
    public Client(TProtocol prot) : this(prot, prot)
    {
    }

    public Client(TProtocol iprot, TProtocol oprot)
    {
      iprot_ = iprot;
      oprot_ = oprot;
    }

    protected TProtocol iprot_;
    protected TProtocol oprot_;
    protected int seqid_;

    public TProtocol InputProtocol
    {
      get { return iprot_; }
    }
    public TProtocol OutputProtocol
    {
      get { return oprot_; }
    }


    #region " IDisposable Support "
    private bool _IsDisposed;

    // IDisposable
    public void Dispose()
    {
      Dispose(true);
    }
    

    protected virtual void Dispose(bool disposing)
    {
      if (!_IsDisposed)
      {
        if (disposing)
        {
          if (iprot_ != null)
          {
            ((IDisposable)iprot_).Dispose();
          }
          if (oprot_ != null)
          {
            ((IDisposable)oprot_).Dispose();
          }
        }
      }
      _IsDisposed = true;
    }
    #endregion


    
    #if SILVERLIGHT
    public IAsyncResult Begin_addBuddyMember(AsyncCallback callback, object state, string requestId, string userMid)
    {
      return send_addBuddyMember(callback, state, requestId, userMid);
    }

    public void End_addBuddyMember(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_addBuddyMember();
    }

    #endif

    public void addBuddyMember(string requestId, string userMid)
    {
      #if !SILVERLIGHT
      send_addBuddyMember(requestId, userMid);
      recv_addBuddyMember();

      #else
      var asyncResult = Begin_addBuddyMember(null, null, requestId, userMid);
      End_addBuddyMember(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_addBuddyMember(AsyncCallback callback, object state, string requestId, string userMid)
    #else
    public void send_addBuddyMember(string requestId, string userMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("addBuddyMember", TMessageType.Call, seqid_));
      addBuddyMember_args args = new addBuddyMember_args();
      args.RequestId = requestId;
      args.UserMid = userMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_addBuddyMember()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      addBuddyMember_result result = new addBuddyMember_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_addBuddyMembers(AsyncCallback callback, object state, string requestId, List<string> userMids)
    {
      return send_addBuddyMembers(callback, state, requestId, userMids);
    }

    public void End_addBuddyMembers(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_addBuddyMembers();
    }

    #endif

    public void addBuddyMembers(string requestId, List<string> userMids)
    {
      #if !SILVERLIGHT
      send_addBuddyMembers(requestId, userMids);
      recv_addBuddyMembers();

      #else
      var asyncResult = Begin_addBuddyMembers(null, null, requestId, userMids);
      End_addBuddyMembers(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_addBuddyMembers(AsyncCallback callback, object state, string requestId, List<string> userMids)
    #else
    public void send_addBuddyMembers(string requestId, List<string> userMids)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("addBuddyMembers", TMessageType.Call, seqid_));
      addBuddyMembers_args args = new addBuddyMembers_args();
      args.RequestId = requestId;
      args.UserMids = userMids;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_addBuddyMembers()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      addBuddyMembers_result result = new addBuddyMembers_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_blockBuddyMember(AsyncCallback callback, object state, string requestId, string mid)
    {
      return send_blockBuddyMember(callback, state, requestId, mid);
    }

    public void End_blockBuddyMember(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_blockBuddyMember();
    }

    #endif

    public void blockBuddyMember(string requestId, string mid)
    {
      #if !SILVERLIGHT
      send_blockBuddyMember(requestId, mid);
      recv_blockBuddyMember();

      #else
      var asyncResult = Begin_blockBuddyMember(null, null, requestId, mid);
      End_blockBuddyMember(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_blockBuddyMember(AsyncCallback callback, object state, string requestId, string mid)
    #else
    public void send_blockBuddyMember(string requestId, string mid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("blockBuddyMember", TMessageType.Call, seqid_));
      blockBuddyMember_args args = new blockBuddyMember_args();
      args.RequestId = requestId;
      args.Mid = mid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_blockBuddyMember()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      blockBuddyMember_result result = new blockBuddyMember_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_commitSendMessagesToAll(AsyncCallback callback, object state, List<string> requestIdList)
    {
      return send_commitSendMessagesToAll(callback, state, requestIdList);
    }

    public List<SendBuddyMessageResult> End_commitSendMessagesToAll(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_commitSendMessagesToAll();
    }

    #endif

    public List<SendBuddyMessageResult> commitSendMessagesToAll(List<string> requestIdList)
    {
      #if !SILVERLIGHT
      send_commitSendMessagesToAll(requestIdList);
      return recv_commitSendMessagesToAll();

      #else
      var asyncResult = Begin_commitSendMessagesToAll(null, null, requestIdList);
      return End_commitSendMessagesToAll(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_commitSendMessagesToAll(AsyncCallback callback, object state, List<string> requestIdList)
    #else
    public void send_commitSendMessagesToAll(List<string> requestIdList)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("commitSendMessagesToAll", TMessageType.Call, seqid_));
      commitSendMessagesToAll_args args = new commitSendMessagesToAll_args();
      args.RequestIdList = requestIdList;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public List<SendBuddyMessageResult> recv_commitSendMessagesToAll()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      commitSendMessagesToAll_result result = new commitSendMessagesToAll_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "commitSendMessagesToAll failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_commitSendMessagesToMids(AsyncCallback callback, object state, List<string> requestIdList, List<string> mids)
    {
      return send_commitSendMessagesToMids(callback, state, requestIdList, mids);
    }

    public List<SendBuddyMessageResult> End_commitSendMessagesToMids(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_commitSendMessagesToMids();
    }

    #endif

    public List<SendBuddyMessageResult> commitSendMessagesToMids(List<string> requestIdList, List<string> mids)
    {
      #if !SILVERLIGHT
      send_commitSendMessagesToMids(requestIdList, mids);
      return recv_commitSendMessagesToMids();

      #else
      var asyncResult = Begin_commitSendMessagesToMids(null, null, requestIdList, mids);
      return End_commitSendMessagesToMids(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_commitSendMessagesToMids(AsyncCallback callback, object state, List<string> requestIdList, List<string> mids)
    #else
    public void send_commitSendMessagesToMids(List<string> requestIdList, List<string> mids)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("commitSendMessagesToMids", TMessageType.Call, seqid_));
      commitSendMessagesToMids_args args = new commitSendMessagesToMids_args();
      args.RequestIdList = requestIdList;
      args.Mids = mids;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public List<SendBuddyMessageResult> recv_commitSendMessagesToMids()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      commitSendMessagesToMids_result result = new commitSendMessagesToMids_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "commitSendMessagesToMids failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_containsBuddyMember(AsyncCallback callback, object state, string requestId, string userMid)
    {
      return send_containsBuddyMember(callback, state, requestId, userMid);
    }

    public bool End_containsBuddyMember(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_containsBuddyMember();
    }

    #endif

    public bool containsBuddyMember(string requestId, string userMid)
    {
      #if !SILVERLIGHT
      send_containsBuddyMember(requestId, userMid);
      return recv_containsBuddyMember();

      #else
      var asyncResult = Begin_containsBuddyMember(null, null, requestId, userMid);
      return End_containsBuddyMember(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_containsBuddyMember(AsyncCallback callback, object state, string requestId, string userMid)
    #else
    public void send_containsBuddyMember(string requestId, string userMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("containsBuddyMember", TMessageType.Call, seqid_));
      containsBuddyMember_args args = new containsBuddyMember_args();
      args.RequestId = requestId;
      args.UserMid = userMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public bool recv_containsBuddyMember()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      containsBuddyMember_result result = new containsBuddyMember_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "containsBuddyMember failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_downloadMessageContent(AsyncCallback callback, object state, string requestId, string messageId)
    {
      return send_downloadMessageContent(callback, state, requestId, messageId);
    }

    public byte[] End_downloadMessageContent(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_downloadMessageContent();
    }

    #endif

    public byte[] downloadMessageContent(string requestId, string messageId)
    {
      #if !SILVERLIGHT
      send_downloadMessageContent(requestId, messageId);
      return recv_downloadMessageContent();

      #else
      var asyncResult = Begin_downloadMessageContent(null, null, requestId, messageId);
      return End_downloadMessageContent(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_downloadMessageContent(AsyncCallback callback, object state, string requestId, string messageId)
    #else
    public void send_downloadMessageContent(string requestId, string messageId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("downloadMessageContent", TMessageType.Call, seqid_));
      downloadMessageContent_args args = new downloadMessageContent_args();
      args.RequestId = requestId;
      args.MessageId = messageId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public byte[] recv_downloadMessageContent()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      downloadMessageContent_result result = new downloadMessageContent_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "downloadMessageContent failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_downloadMessageContentPreview(AsyncCallback callback, object state, string requestId, string messageId)
    {
      return send_downloadMessageContentPreview(callback, state, requestId, messageId);
    }

    public byte[] End_downloadMessageContentPreview(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_downloadMessageContentPreview();
    }

    #endif

    public byte[] downloadMessageContentPreview(string requestId, string messageId)
    {
      #if !SILVERLIGHT
      send_downloadMessageContentPreview(requestId, messageId);
      return recv_downloadMessageContentPreview();

      #else
      var asyncResult = Begin_downloadMessageContentPreview(null, null, requestId, messageId);
      return End_downloadMessageContentPreview(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_downloadMessageContentPreview(AsyncCallback callback, object state, string requestId, string messageId)
    #else
    public void send_downloadMessageContentPreview(string requestId, string messageId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("downloadMessageContentPreview", TMessageType.Call, seqid_));
      downloadMessageContentPreview_args args = new downloadMessageContentPreview_args();
      args.RequestId = requestId;
      args.MessageId = messageId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public byte[] recv_downloadMessageContentPreview()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      downloadMessageContentPreview_result result = new downloadMessageContentPreview_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "downloadMessageContentPreview failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_downloadProfileImage(AsyncCallback callback, object state, string requestId)
    {
      return send_downloadProfileImage(callback, state, requestId);
    }

    public byte[] End_downloadProfileImage(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_downloadProfileImage();
    }

    #endif

    public byte[] downloadProfileImage(string requestId)
    {
      #if !SILVERLIGHT
      send_downloadProfileImage(requestId);
      return recv_downloadProfileImage();

      #else
      var asyncResult = Begin_downloadProfileImage(null, null, requestId);
      return End_downloadProfileImage(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_downloadProfileImage(AsyncCallback callback, object state, string requestId)
    #else
    public void send_downloadProfileImage(string requestId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("downloadProfileImage", TMessageType.Call, seqid_));
      downloadProfileImage_args args = new downloadProfileImage_args();
      args.RequestId = requestId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public byte[] recv_downloadProfileImage()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      downloadProfileImage_result result = new downloadProfileImage_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "downloadProfileImage failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_downloadProfileImagePreview(AsyncCallback callback, object state, string requestId)
    {
      return send_downloadProfileImagePreview(callback, state, requestId);
    }

    public byte[] End_downloadProfileImagePreview(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_downloadProfileImagePreview();
    }

    #endif

    public byte[] downloadProfileImagePreview(string requestId)
    {
      #if !SILVERLIGHT
      send_downloadProfileImagePreview(requestId);
      return recv_downloadProfileImagePreview();

      #else
      var asyncResult = Begin_downloadProfileImagePreview(null, null, requestId);
      return End_downloadProfileImagePreview(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_downloadProfileImagePreview(AsyncCallback callback, object state, string requestId)
    #else
    public void send_downloadProfileImagePreview(string requestId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("downloadProfileImagePreview", TMessageType.Call, seqid_));
      downloadProfileImagePreview_args args = new downloadProfileImagePreview_args();
      args.RequestId = requestId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public byte[] recv_downloadProfileImagePreview()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      downloadProfileImagePreview_result result = new downloadProfileImagePreview_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "downloadProfileImagePreview failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getActiveMemberCountByBuddyMid(AsyncCallback callback, object state, string buddyMid)
    {
      return send_getActiveMemberCountByBuddyMid(callback, state, buddyMid);
    }

    public long End_getActiveMemberCountByBuddyMid(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getActiveMemberCountByBuddyMid();
    }

    #endif

    public long getActiveMemberCountByBuddyMid(string buddyMid)
    {
      #if !SILVERLIGHT
      send_getActiveMemberCountByBuddyMid(buddyMid);
      return recv_getActiveMemberCountByBuddyMid();

      #else
      var asyncResult = Begin_getActiveMemberCountByBuddyMid(null, null, buddyMid);
      return End_getActiveMemberCountByBuddyMid(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getActiveMemberCountByBuddyMid(AsyncCallback callback, object state, string buddyMid)
    #else
    public void send_getActiveMemberCountByBuddyMid(string buddyMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getActiveMemberCountByBuddyMid", TMessageType.Call, seqid_));
      getActiveMemberCountByBuddyMid_args args = new getActiveMemberCountByBuddyMid_args();
      args.BuddyMid = buddyMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public long recv_getActiveMemberCountByBuddyMid()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getActiveMemberCountByBuddyMid_result result = new getActiveMemberCountByBuddyMid_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getActiveMemberCountByBuddyMid failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getActiveMemberMidsByBuddyMid(AsyncCallback callback, object state, string buddyMid)
    {
      return send_getActiveMemberMidsByBuddyMid(callback, state, buddyMid);
    }

    public List<string> End_getActiveMemberMidsByBuddyMid(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getActiveMemberMidsByBuddyMid();
    }

    #endif

    public List<string> getActiveMemberMidsByBuddyMid(string buddyMid)
    {
      #if !SILVERLIGHT
      send_getActiveMemberMidsByBuddyMid(buddyMid);
      return recv_getActiveMemberMidsByBuddyMid();

      #else
      var asyncResult = Begin_getActiveMemberMidsByBuddyMid(null, null, buddyMid);
      return End_getActiveMemberMidsByBuddyMid(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getActiveMemberMidsByBuddyMid(AsyncCallback callback, object state, string buddyMid)
    #else
    public void send_getActiveMemberMidsByBuddyMid(string buddyMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getActiveMemberMidsByBuddyMid", TMessageType.Call, seqid_));
      getActiveMemberMidsByBuddyMid_args args = new getActiveMemberMidsByBuddyMid_args();
      args.BuddyMid = buddyMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public List<string> recv_getActiveMemberMidsByBuddyMid()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getActiveMemberMidsByBuddyMid_result result = new getActiveMemberMidsByBuddyMid_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getActiveMemberMidsByBuddyMid failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getAllBuddyMembers(AsyncCallback callback, object state)
    {
      return send_getAllBuddyMembers(callback, state);
    }

    public List<string> End_getAllBuddyMembers(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getAllBuddyMembers();
    }

    #endif

    public List<string> getAllBuddyMembers()
    {
      #if !SILVERLIGHT
      send_getAllBuddyMembers();
      return recv_getAllBuddyMembers();

      #else
      var asyncResult = Begin_getAllBuddyMembers(null, null);
      return End_getAllBuddyMembers(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getAllBuddyMembers(AsyncCallback callback, object state)
    #else
    public void send_getAllBuddyMembers()
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getAllBuddyMembers", TMessageType.Call, seqid_));
      getAllBuddyMembers_args args = new getAllBuddyMembers_args();
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public List<string> recv_getAllBuddyMembers()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getAllBuddyMembers_result result = new getAllBuddyMembers_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getAllBuddyMembers failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getBlockedBuddyMembers(AsyncCallback callback, object state)
    {
      return send_getBlockedBuddyMembers(callback, state);
    }

    public List<string> End_getBlockedBuddyMembers(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getBlockedBuddyMembers();
    }

    #endif

    public List<string> getBlockedBuddyMembers()
    {
      #if !SILVERLIGHT
      send_getBlockedBuddyMembers();
      return recv_getBlockedBuddyMembers();

      #else
      var asyncResult = Begin_getBlockedBuddyMembers(null, null);
      return End_getBlockedBuddyMembers(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getBlockedBuddyMembers(AsyncCallback callback, object state)
    #else
    public void send_getBlockedBuddyMembers()
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getBlockedBuddyMembers", TMessageType.Call, seqid_));
      getBlockedBuddyMembers_args args = new getBlockedBuddyMembers_args();
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public List<string> recv_getBlockedBuddyMembers()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getBlockedBuddyMembers_result result = new getBlockedBuddyMembers_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getBlockedBuddyMembers failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getBlockerCountByBuddyMid(AsyncCallback callback, object state, string buddyMid)
    {
      return send_getBlockerCountByBuddyMid(callback, state, buddyMid);
    }

    public long End_getBlockerCountByBuddyMid(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getBlockerCountByBuddyMid();
    }

    #endif

    public long getBlockerCountByBuddyMid(string buddyMid)
    {
      #if !SILVERLIGHT
      send_getBlockerCountByBuddyMid(buddyMid);
      return recv_getBlockerCountByBuddyMid();

      #else
      var asyncResult = Begin_getBlockerCountByBuddyMid(null, null, buddyMid);
      return End_getBlockerCountByBuddyMid(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getBlockerCountByBuddyMid(AsyncCallback callback, object state, string buddyMid)
    #else
    public void send_getBlockerCountByBuddyMid(string buddyMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getBlockerCountByBuddyMid", TMessageType.Call, seqid_));
      getBlockerCountByBuddyMid_args args = new getBlockerCountByBuddyMid_args();
      args.BuddyMid = buddyMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public long recv_getBlockerCountByBuddyMid()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getBlockerCountByBuddyMid_result result = new getBlockerCountByBuddyMid_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getBlockerCountByBuddyMid failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getBuddyDetailByMid(AsyncCallback callback, object state, string buddyMid)
    {
      return send_getBuddyDetailByMid(callback, state, buddyMid);
    }

    public BuddyDetail End_getBuddyDetailByMid(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getBuddyDetailByMid();
    }

    #endif

    public BuddyDetail getBuddyDetailByMid(string buddyMid)
    {
      #if !SILVERLIGHT
      send_getBuddyDetailByMid(buddyMid);
      return recv_getBuddyDetailByMid();

      #else
      var asyncResult = Begin_getBuddyDetailByMid(null, null, buddyMid);
      return End_getBuddyDetailByMid(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getBuddyDetailByMid(AsyncCallback callback, object state, string buddyMid)
    #else
    public void send_getBuddyDetailByMid(string buddyMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getBuddyDetailByMid", TMessageType.Call, seqid_));
      getBuddyDetailByMid_args args = new getBuddyDetailByMid_args();
      args.BuddyMid = buddyMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public BuddyDetail recv_getBuddyDetailByMid()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getBuddyDetailByMid_result result = new getBuddyDetailByMid_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getBuddyDetailByMid failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getBuddyProfile(AsyncCallback callback, object state)
    {
      return send_getBuddyProfile(callback, state);
    }

    public BuddyProfile End_getBuddyProfile(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getBuddyProfile();
    }

    #endif

    public BuddyProfile getBuddyProfile()
    {
      #if !SILVERLIGHT
      send_getBuddyProfile();
      return recv_getBuddyProfile();

      #else
      var asyncResult = Begin_getBuddyProfile(null, null);
      return End_getBuddyProfile(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getBuddyProfile(AsyncCallback callback, object state)
    #else
    public void send_getBuddyProfile()
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getBuddyProfile", TMessageType.Call, seqid_));
      getBuddyProfile_args args = new getBuddyProfile_args();
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public BuddyProfile recv_getBuddyProfile()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getBuddyProfile_result result = new getBuddyProfile_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getBuddyProfile failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getContactTicket(AsyncCallback callback, object state)
    {
      return send_getContactTicket(callback, state);
    }

    public Ticket End_getContactTicket(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getContactTicket();
    }

    #endif

    public Ticket getContactTicket()
    {
      #if !SILVERLIGHT
      send_getContactTicket();
      return recv_getContactTicket();

      #else
      var asyncResult = Begin_getContactTicket(null, null);
      return End_getContactTicket(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getContactTicket(AsyncCallback callback, object state)
    #else
    public void send_getContactTicket()
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getContactTicket", TMessageType.Call, seqid_));
      getContactTicket_args args = new getContactTicket_args();
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public Ticket recv_getContactTicket()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getContactTicket_result result = new getContactTicket_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getContactTicket failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getMemberCountByBuddyMid(AsyncCallback callback, object state, string buddyMid)
    {
      return send_getMemberCountByBuddyMid(callback, state, buddyMid);
    }

    public long End_getMemberCountByBuddyMid(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getMemberCountByBuddyMid();
    }

    #endif

    public long getMemberCountByBuddyMid(string buddyMid)
    {
      #if !SILVERLIGHT
      send_getMemberCountByBuddyMid(buddyMid);
      return recv_getMemberCountByBuddyMid();

      #else
      var asyncResult = Begin_getMemberCountByBuddyMid(null, null, buddyMid);
      return End_getMemberCountByBuddyMid(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getMemberCountByBuddyMid(AsyncCallback callback, object state, string buddyMid)
    #else
    public void send_getMemberCountByBuddyMid(string buddyMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getMemberCountByBuddyMid", TMessageType.Call, seqid_));
      getMemberCountByBuddyMid_args args = new getMemberCountByBuddyMid_args();
      args.BuddyMid = buddyMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public long recv_getMemberCountByBuddyMid()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getMemberCountByBuddyMid_result result = new getMemberCountByBuddyMid_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getMemberCountByBuddyMid failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getSendBuddyMessageResult(AsyncCallback callback, object state, string sendBuddyMessageRequestId)
    {
      return send_getSendBuddyMessageResult(callback, state, sendBuddyMessageRequestId);
    }

    public SendBuddyMessageResult End_getSendBuddyMessageResult(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getSendBuddyMessageResult();
    }

    #endif

    public SendBuddyMessageResult getSendBuddyMessageResult(string sendBuddyMessageRequestId)
    {
      #if !SILVERLIGHT
      send_getSendBuddyMessageResult(sendBuddyMessageRequestId);
      return recv_getSendBuddyMessageResult();

      #else
      var asyncResult = Begin_getSendBuddyMessageResult(null, null, sendBuddyMessageRequestId);
      return End_getSendBuddyMessageResult(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getSendBuddyMessageResult(AsyncCallback callback, object state, string sendBuddyMessageRequestId)
    #else
    public void send_getSendBuddyMessageResult(string sendBuddyMessageRequestId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getSendBuddyMessageResult", TMessageType.Call, seqid_));
      getSendBuddyMessageResult_args args = new getSendBuddyMessageResult_args();
      args.SendBuddyMessageRequestId = sendBuddyMessageRequestId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public SendBuddyMessageResult recv_getSendBuddyMessageResult()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getSendBuddyMessageResult_result result = new getSendBuddyMessageResult_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getSendBuddyMessageResult failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getSetBuddyOnAirResult(AsyncCallback callback, object state, string setBuddyOnAirRequestId)
    {
      return send_getSetBuddyOnAirResult(callback, state, setBuddyOnAirRequestId);
    }

    public SetBuddyOnAirResult End_getSetBuddyOnAirResult(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getSetBuddyOnAirResult();
    }

    #endif

    public SetBuddyOnAirResult getSetBuddyOnAirResult(string setBuddyOnAirRequestId)
    {
      #if !SILVERLIGHT
      send_getSetBuddyOnAirResult(setBuddyOnAirRequestId);
      return recv_getSetBuddyOnAirResult();

      #else
      var asyncResult = Begin_getSetBuddyOnAirResult(null, null, setBuddyOnAirRequestId);
      return End_getSetBuddyOnAirResult(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getSetBuddyOnAirResult(AsyncCallback callback, object state, string setBuddyOnAirRequestId)
    #else
    public void send_getSetBuddyOnAirResult(string setBuddyOnAirRequestId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getSetBuddyOnAirResult", TMessageType.Call, seqid_));
      getSetBuddyOnAirResult_args args = new getSetBuddyOnAirResult_args();
      args.SetBuddyOnAirRequestId = setBuddyOnAirRequestId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public SetBuddyOnAirResult recv_getSetBuddyOnAirResult()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getSetBuddyOnAirResult_result result = new getSetBuddyOnAirResult_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getSetBuddyOnAirResult failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_getUpdateBuddyProfileResult(AsyncCallback callback, object state, string updateBuddyProfileRequestId)
    {
      return send_getUpdateBuddyProfileResult(callback, state, updateBuddyProfileRequestId);
    }

    public UpdateBuddyProfileResult End_getUpdateBuddyProfileResult(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_getUpdateBuddyProfileResult();
    }

    #endif

    public UpdateBuddyProfileResult getUpdateBuddyProfileResult(string updateBuddyProfileRequestId)
    {
      #if !SILVERLIGHT
      send_getUpdateBuddyProfileResult(updateBuddyProfileRequestId);
      return recv_getUpdateBuddyProfileResult();

      #else
      var asyncResult = Begin_getUpdateBuddyProfileResult(null, null, updateBuddyProfileRequestId);
      return End_getUpdateBuddyProfileResult(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_getUpdateBuddyProfileResult(AsyncCallback callback, object state, string updateBuddyProfileRequestId)
    #else
    public void send_getUpdateBuddyProfileResult(string updateBuddyProfileRequestId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("getUpdateBuddyProfileResult", TMessageType.Call, seqid_));
      getUpdateBuddyProfileResult_args args = new getUpdateBuddyProfileResult_args();
      args.UpdateBuddyProfileRequestId = updateBuddyProfileRequestId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public UpdateBuddyProfileResult recv_getUpdateBuddyProfileResult()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      getUpdateBuddyProfileResult_result result = new getUpdateBuddyProfileResult_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "getUpdateBuddyProfileResult failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_isBuddyOnAirByMid(AsyncCallback callback, object state, string buddyMid)
    {
      return send_isBuddyOnAirByMid(callback, state, buddyMid);
    }

    public bool End_isBuddyOnAirByMid(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_isBuddyOnAirByMid();
    }

    #endif

    public bool isBuddyOnAirByMid(string buddyMid)
    {
      #if !SILVERLIGHT
      send_isBuddyOnAirByMid(buddyMid);
      return recv_isBuddyOnAirByMid();

      #else
      var asyncResult = Begin_isBuddyOnAirByMid(null, null, buddyMid);
      return End_isBuddyOnAirByMid(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_isBuddyOnAirByMid(AsyncCallback callback, object state, string buddyMid)
    #else
    public void send_isBuddyOnAirByMid(string buddyMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("isBuddyOnAirByMid", TMessageType.Call, seqid_));
      isBuddyOnAirByMid_args args = new isBuddyOnAirByMid_args();
      args.BuddyMid = buddyMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public bool recv_isBuddyOnAirByMid()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      isBuddyOnAirByMid_result result = new isBuddyOnAirByMid_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "isBuddyOnAirByMid failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_linkAndSendBuddyContentMessageToAllAsync(AsyncCallback callback, object state, string requestId, Message msg, string sourceContentId)
    {
      return send_linkAndSendBuddyContentMessageToAllAsync(callback, state, requestId, msg, sourceContentId);
    }

    public string End_linkAndSendBuddyContentMessageToAllAsync(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_linkAndSendBuddyContentMessageToAllAsync();
    }

    #endif

    public string linkAndSendBuddyContentMessageToAllAsync(string requestId, Message msg, string sourceContentId)
    {
      #if !SILVERLIGHT
      send_linkAndSendBuddyContentMessageToAllAsync(requestId, msg, sourceContentId);
      return recv_linkAndSendBuddyContentMessageToAllAsync();

      #else
      var asyncResult = Begin_linkAndSendBuddyContentMessageToAllAsync(null, null, requestId, msg, sourceContentId);
      return End_linkAndSendBuddyContentMessageToAllAsync(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_linkAndSendBuddyContentMessageToAllAsync(AsyncCallback callback, object state, string requestId, Message msg, string sourceContentId)
    #else
    public void send_linkAndSendBuddyContentMessageToAllAsync(string requestId, Message msg, string sourceContentId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("linkAndSendBuddyContentMessageToAllAsync", TMessageType.Call, seqid_));
      linkAndSendBuddyContentMessageToAllAsync_args args = new linkAndSendBuddyContentMessageToAllAsync_args();
      args.RequestId = requestId;
      args.Msg = msg;
      args.SourceContentId = sourceContentId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_linkAndSendBuddyContentMessageToAllAsync()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      linkAndSendBuddyContentMessageToAllAsync_result result = new linkAndSendBuddyContentMessageToAllAsync_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "linkAndSendBuddyContentMessageToAllAsync failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_linkAndSendBuddyContentMessageToMids(AsyncCallback callback, object state, string requestId, Message msg, string sourceContentId, List<string> mids)
    {
      return send_linkAndSendBuddyContentMessageToMids(callback, state, requestId, msg, sourceContentId, mids);
    }

    public SendBuddyMessageResult End_linkAndSendBuddyContentMessageToMids(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_linkAndSendBuddyContentMessageToMids();
    }

    #endif

    public SendBuddyMessageResult linkAndSendBuddyContentMessageToMids(string requestId, Message msg, string sourceContentId, List<string> mids)
    {
      #if !SILVERLIGHT
      send_linkAndSendBuddyContentMessageToMids(requestId, msg, sourceContentId, mids);
      return recv_linkAndSendBuddyContentMessageToMids();

      #else
      var asyncResult = Begin_linkAndSendBuddyContentMessageToMids(null, null, requestId, msg, sourceContentId, mids);
      return End_linkAndSendBuddyContentMessageToMids(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_linkAndSendBuddyContentMessageToMids(AsyncCallback callback, object state, string requestId, Message msg, string sourceContentId, List<string> mids)
    #else
    public void send_linkAndSendBuddyContentMessageToMids(string requestId, Message msg, string sourceContentId, List<string> mids)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("linkAndSendBuddyContentMessageToMids", TMessageType.Call, seqid_));
      linkAndSendBuddyContentMessageToMids_args args = new linkAndSendBuddyContentMessageToMids_args();
      args.RequestId = requestId;
      args.Msg = msg;
      args.SourceContentId = sourceContentId;
      args.Mids = mids;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public SendBuddyMessageResult recv_linkAndSendBuddyContentMessageToMids()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      linkAndSendBuddyContentMessageToMids_result result = new linkAndSendBuddyContentMessageToMids_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "linkAndSendBuddyContentMessageToMids failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_notifyBuddyBlocked(AsyncCallback callback, object state, string buddyMid, string blockerMid)
    {
      return send_notifyBuddyBlocked(callback, state, buddyMid, blockerMid);
    }

    public void End_notifyBuddyBlocked(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_notifyBuddyBlocked();
    }

    #endif

    public void notifyBuddyBlocked(string buddyMid, string blockerMid)
    {
      #if !SILVERLIGHT
      send_notifyBuddyBlocked(buddyMid, blockerMid);
      recv_notifyBuddyBlocked();

      #else
      var asyncResult = Begin_notifyBuddyBlocked(null, null, buddyMid, blockerMid);
      End_notifyBuddyBlocked(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_notifyBuddyBlocked(AsyncCallback callback, object state, string buddyMid, string blockerMid)
    #else
    public void send_notifyBuddyBlocked(string buddyMid, string blockerMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("notifyBuddyBlocked", TMessageType.Call, seqid_));
      notifyBuddyBlocked_args args = new notifyBuddyBlocked_args();
      args.BuddyMid = buddyMid;
      args.BlockerMid = blockerMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_notifyBuddyBlocked()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      notifyBuddyBlocked_result result = new notifyBuddyBlocked_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_notifyBuddyUnblocked(AsyncCallback callback, object state, string buddyMid, string blockerMid)
    {
      return send_notifyBuddyUnblocked(callback, state, buddyMid, blockerMid);
    }

    public void End_notifyBuddyUnblocked(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_notifyBuddyUnblocked();
    }

    #endif

    public void notifyBuddyUnblocked(string buddyMid, string blockerMid)
    {
      #if !SILVERLIGHT
      send_notifyBuddyUnblocked(buddyMid, blockerMid);
      recv_notifyBuddyUnblocked();

      #else
      var asyncResult = Begin_notifyBuddyUnblocked(null, null, buddyMid, blockerMid);
      End_notifyBuddyUnblocked(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_notifyBuddyUnblocked(AsyncCallback callback, object state, string buddyMid, string blockerMid)
    #else
    public void send_notifyBuddyUnblocked(string buddyMid, string blockerMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("notifyBuddyUnblocked", TMessageType.Call, seqid_));
      notifyBuddyUnblocked_args args = new notifyBuddyUnblocked_args();
      args.BuddyMid = buddyMid;
      args.BlockerMid = blockerMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_notifyBuddyUnblocked()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      notifyBuddyUnblocked_result result = new notifyBuddyUnblocked_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_registerBuddy(AsyncCallback callback, object state, string buddyId, string searchId, string displayName, string statusMeessage, byte[] picture, Dictionary<string, string> settings)
    {
      return send_registerBuddy(callback, state, buddyId, searchId, displayName, statusMeessage, picture, settings);
    }

    public string End_registerBuddy(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_registerBuddy();
    }

    #endif

    public string registerBuddy(string buddyId, string searchId, string displayName, string statusMeessage, byte[] picture, Dictionary<string, string> settings)
    {
      #if !SILVERLIGHT
      send_registerBuddy(buddyId, searchId, displayName, statusMeessage, picture, settings);
      return recv_registerBuddy();

      #else
      var asyncResult = Begin_registerBuddy(null, null, buddyId, searchId, displayName, statusMeessage, picture, settings);
      return End_registerBuddy(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_registerBuddy(AsyncCallback callback, object state, string buddyId, string searchId, string displayName, string statusMeessage, byte[] picture, Dictionary<string, string> settings)
    #else
    public void send_registerBuddy(string buddyId, string searchId, string displayName, string statusMeessage, byte[] picture, Dictionary<string, string> settings)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("registerBuddy", TMessageType.Call, seqid_));
      registerBuddy_args args = new registerBuddy_args();
      args.BuddyId = buddyId;
      args.SearchId = searchId;
      args.DisplayName = displayName;
      args.StatusMeessage = statusMeessage;
      args.Picture = picture;
      args.Settings = settings;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_registerBuddy()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      registerBuddy_result result = new registerBuddy_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "registerBuddy failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_registerBuddyAdmin(AsyncCallback callback, object state, string buddyId, string searchId, string displayName, string statusMessage, byte[] picture)
    {
      return send_registerBuddyAdmin(callback, state, buddyId, searchId, displayName, statusMessage, picture);
    }

    public string End_registerBuddyAdmin(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_registerBuddyAdmin();
    }

    #endif

    public string registerBuddyAdmin(string buddyId, string searchId, string displayName, string statusMessage, byte[] picture)
    {
      #if !SILVERLIGHT
      send_registerBuddyAdmin(buddyId, searchId, displayName, statusMessage, picture);
      return recv_registerBuddyAdmin();

      #else
      var asyncResult = Begin_registerBuddyAdmin(null, null, buddyId, searchId, displayName, statusMessage, picture);
      return End_registerBuddyAdmin(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_registerBuddyAdmin(AsyncCallback callback, object state, string buddyId, string searchId, string displayName, string statusMessage, byte[] picture)
    #else
    public void send_registerBuddyAdmin(string buddyId, string searchId, string displayName, string statusMessage, byte[] picture)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("registerBuddyAdmin", TMessageType.Call, seqid_));
      registerBuddyAdmin_args args = new registerBuddyAdmin_args();
      args.BuddyId = buddyId;
      args.SearchId = searchId;
      args.DisplayName = displayName;
      args.StatusMessage = statusMessage;
      args.Picture = picture;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_registerBuddyAdmin()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      registerBuddyAdmin_result result = new registerBuddyAdmin_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "registerBuddyAdmin failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_reissueContactTicket(AsyncCallback callback, object state, long expirationTime, int maxUseCount)
    {
      return send_reissueContactTicket(callback, state, expirationTime, maxUseCount);
    }

    public string End_reissueContactTicket(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_reissueContactTicket();
    }

    #endif

    public string reissueContactTicket(long expirationTime, int maxUseCount)
    {
      #if !SILVERLIGHT
      send_reissueContactTicket(expirationTime, maxUseCount);
      return recv_reissueContactTicket();

      #else
      var asyncResult = Begin_reissueContactTicket(null, null, expirationTime, maxUseCount);
      return End_reissueContactTicket(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_reissueContactTicket(AsyncCallback callback, object state, long expirationTime, int maxUseCount)
    #else
    public void send_reissueContactTicket(long expirationTime, int maxUseCount)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("reissueContactTicket", TMessageType.Call, seqid_));
      reissueContactTicket_args args = new reissueContactTicket_args();
      args.ExpirationTime = expirationTime;
      args.MaxUseCount = maxUseCount;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_reissueContactTicket()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      reissueContactTicket_result result = new reissueContactTicket_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "reissueContactTicket failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_removeBuddyMember(AsyncCallback callback, object state, string requestId, string userMid)
    {
      return send_removeBuddyMember(callback, state, requestId, userMid);
    }

    public void End_removeBuddyMember(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_removeBuddyMember();
    }

    #endif

    public void removeBuddyMember(string requestId, string userMid)
    {
      #if !SILVERLIGHT
      send_removeBuddyMember(requestId, userMid);
      recv_removeBuddyMember();

      #else
      var asyncResult = Begin_removeBuddyMember(null, null, requestId, userMid);
      End_removeBuddyMember(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_removeBuddyMember(AsyncCallback callback, object state, string requestId, string userMid)
    #else
    public void send_removeBuddyMember(string requestId, string userMid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("removeBuddyMember", TMessageType.Call, seqid_));
      removeBuddyMember_args args = new removeBuddyMember_args();
      args.RequestId = requestId;
      args.UserMid = userMid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_removeBuddyMember()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      removeBuddyMember_result result = new removeBuddyMember_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_removeBuddyMembers(AsyncCallback callback, object state, string requestId, List<string> userMids)
    {
      return send_removeBuddyMembers(callback, state, requestId, userMids);
    }

    public void End_removeBuddyMembers(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_removeBuddyMembers();
    }

    #endif

    public void removeBuddyMembers(string requestId, List<string> userMids)
    {
      #if !SILVERLIGHT
      send_removeBuddyMembers(requestId, userMids);
      recv_removeBuddyMembers();

      #else
      var asyncResult = Begin_removeBuddyMembers(null, null, requestId, userMids);
      End_removeBuddyMembers(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_removeBuddyMembers(AsyncCallback callback, object state, string requestId, List<string> userMids)
    #else
    public void send_removeBuddyMembers(string requestId, List<string> userMids)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("removeBuddyMembers", TMessageType.Call, seqid_));
      removeBuddyMembers_args args = new removeBuddyMembers_args();
      args.RequestId = requestId;
      args.UserMids = userMids;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_removeBuddyMembers()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      removeBuddyMembers_result result = new removeBuddyMembers_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_sendBuddyContentMessageToAll(AsyncCallback callback, object state, string requestId, Message msg, byte[] content)
    {
      return send_sendBuddyContentMessageToAll(callback, state, requestId, msg, content);
    }

    public SendBuddyMessageResult End_sendBuddyContentMessageToAll(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_sendBuddyContentMessageToAll();
    }

    #endif

    public SendBuddyMessageResult sendBuddyContentMessageToAll(string requestId, Message msg, byte[] content)
    {
      #if !SILVERLIGHT
      send_sendBuddyContentMessageToAll(requestId, msg, content);
      return recv_sendBuddyContentMessageToAll();

      #else
      var asyncResult = Begin_sendBuddyContentMessageToAll(null, null, requestId, msg, content);
      return End_sendBuddyContentMessageToAll(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_sendBuddyContentMessageToAll(AsyncCallback callback, object state, string requestId, Message msg, byte[] content)
    #else
    public void send_sendBuddyContentMessageToAll(string requestId, Message msg, byte[] content)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("sendBuddyContentMessageToAll", TMessageType.Call, seqid_));
      sendBuddyContentMessageToAll_args args = new sendBuddyContentMessageToAll_args();
      args.RequestId = requestId;
      args.Msg = msg;
      args.Content = content;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public SendBuddyMessageResult recv_sendBuddyContentMessageToAll()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      sendBuddyContentMessageToAll_result result = new sendBuddyContentMessageToAll_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "sendBuddyContentMessageToAll failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_sendBuddyContentMessageToAllAsync(AsyncCallback callback, object state, string requestId, Message msg, byte[] content)
    {
      return send_sendBuddyContentMessageToAllAsync(callback, state, requestId, msg, content);
    }

    public string End_sendBuddyContentMessageToAllAsync(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_sendBuddyContentMessageToAllAsync();
    }

    #endif

    public string sendBuddyContentMessageToAllAsync(string requestId, Message msg, byte[] content)
    {
      #if !SILVERLIGHT
      send_sendBuddyContentMessageToAllAsync(requestId, msg, content);
      return recv_sendBuddyContentMessageToAllAsync();

      #else
      var asyncResult = Begin_sendBuddyContentMessageToAllAsync(null, null, requestId, msg, content);
      return End_sendBuddyContentMessageToAllAsync(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_sendBuddyContentMessageToAllAsync(AsyncCallback callback, object state, string requestId, Message msg, byte[] content)
    #else
    public void send_sendBuddyContentMessageToAllAsync(string requestId, Message msg, byte[] content)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("sendBuddyContentMessageToAllAsync", TMessageType.Call, seqid_));
      sendBuddyContentMessageToAllAsync_args args = new sendBuddyContentMessageToAllAsync_args();
      args.RequestId = requestId;
      args.Msg = msg;
      args.Content = content;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_sendBuddyContentMessageToAllAsync()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      sendBuddyContentMessageToAllAsync_result result = new sendBuddyContentMessageToAllAsync_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "sendBuddyContentMessageToAllAsync failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_sendBuddyContentMessageToMids(AsyncCallback callback, object state, string requestId, Message msg, byte[] content, List<string> mids)
    {
      return send_sendBuddyContentMessageToMids(callback, state, requestId, msg, content, mids);
    }

    public SendBuddyMessageResult End_sendBuddyContentMessageToMids(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_sendBuddyContentMessageToMids();
    }

    #endif

    public SendBuddyMessageResult sendBuddyContentMessageToMids(string requestId, Message msg, byte[] content, List<string> mids)
    {
      #if !SILVERLIGHT
      send_sendBuddyContentMessageToMids(requestId, msg, content, mids);
      return recv_sendBuddyContentMessageToMids();

      #else
      var asyncResult = Begin_sendBuddyContentMessageToMids(null, null, requestId, msg, content, mids);
      return End_sendBuddyContentMessageToMids(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_sendBuddyContentMessageToMids(AsyncCallback callback, object state, string requestId, Message msg, byte[] content, List<string> mids)
    #else
    public void send_sendBuddyContentMessageToMids(string requestId, Message msg, byte[] content, List<string> mids)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("sendBuddyContentMessageToMids", TMessageType.Call, seqid_));
      sendBuddyContentMessageToMids_args args = new sendBuddyContentMessageToMids_args();
      args.RequestId = requestId;
      args.Msg = msg;
      args.Content = content;
      args.Mids = mids;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public SendBuddyMessageResult recv_sendBuddyContentMessageToMids()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      sendBuddyContentMessageToMids_result result = new sendBuddyContentMessageToMids_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "sendBuddyContentMessageToMids failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_sendBuddyContentMessageToMidsAsync(AsyncCallback callback, object state, string requestId, Message msg, byte[] content, List<string> mids)
    {
      return send_sendBuddyContentMessageToMidsAsync(callback, state, requestId, msg, content, mids);
    }

    public string End_sendBuddyContentMessageToMidsAsync(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_sendBuddyContentMessageToMidsAsync();
    }

    #endif

    public string sendBuddyContentMessageToMidsAsync(string requestId, Message msg, byte[] content, List<string> mids)
    {
      #if !SILVERLIGHT
      send_sendBuddyContentMessageToMidsAsync(requestId, msg, content, mids);
      return recv_sendBuddyContentMessageToMidsAsync();

      #else
      var asyncResult = Begin_sendBuddyContentMessageToMidsAsync(null, null, requestId, msg, content, mids);
      return End_sendBuddyContentMessageToMidsAsync(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_sendBuddyContentMessageToMidsAsync(AsyncCallback callback, object state, string requestId, Message msg, byte[] content, List<string> mids)
    #else
    public void send_sendBuddyContentMessageToMidsAsync(string requestId, Message msg, byte[] content, List<string> mids)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("sendBuddyContentMessageToMidsAsync", TMessageType.Call, seqid_));
      sendBuddyContentMessageToMidsAsync_args args = new sendBuddyContentMessageToMidsAsync_args();
      args.RequestId = requestId;
      args.Msg = msg;
      args.Content = content;
      args.Mids = mids;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_sendBuddyContentMessageToMidsAsync()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      sendBuddyContentMessageToMidsAsync_result result = new sendBuddyContentMessageToMidsAsync_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "sendBuddyContentMessageToMidsAsync failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_sendBuddyMessageToAll(AsyncCallback callback, object state, string requestId, Message msg)
    {
      return send_sendBuddyMessageToAll(callback, state, requestId, msg);
    }

    public SendBuddyMessageResult End_sendBuddyMessageToAll(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_sendBuddyMessageToAll();
    }

    #endif

    public SendBuddyMessageResult sendBuddyMessageToAll(string requestId, Message msg)
    {
      #if !SILVERLIGHT
      send_sendBuddyMessageToAll(requestId, msg);
      return recv_sendBuddyMessageToAll();

      #else
      var asyncResult = Begin_sendBuddyMessageToAll(null, null, requestId, msg);
      return End_sendBuddyMessageToAll(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_sendBuddyMessageToAll(AsyncCallback callback, object state, string requestId, Message msg)
    #else
    public void send_sendBuddyMessageToAll(string requestId, Message msg)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("sendBuddyMessageToAll", TMessageType.Call, seqid_));
      sendBuddyMessageToAll_args args = new sendBuddyMessageToAll_args();
      args.RequestId = requestId;
      args.Msg = msg;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public SendBuddyMessageResult recv_sendBuddyMessageToAll()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      sendBuddyMessageToAll_result result = new sendBuddyMessageToAll_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "sendBuddyMessageToAll failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_sendBuddyMessageToAllAsync(AsyncCallback callback, object state, string requestId, Message msg)
    {
      return send_sendBuddyMessageToAllAsync(callback, state, requestId, msg);
    }

    public string End_sendBuddyMessageToAllAsync(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_sendBuddyMessageToAllAsync();
    }

    #endif

    public string sendBuddyMessageToAllAsync(string requestId, Message msg)
    {
      #if !SILVERLIGHT
      send_sendBuddyMessageToAllAsync(requestId, msg);
      return recv_sendBuddyMessageToAllAsync();

      #else
      var asyncResult = Begin_sendBuddyMessageToAllAsync(null, null, requestId, msg);
      return End_sendBuddyMessageToAllAsync(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_sendBuddyMessageToAllAsync(AsyncCallback callback, object state, string requestId, Message msg)
    #else
    public void send_sendBuddyMessageToAllAsync(string requestId, Message msg)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("sendBuddyMessageToAllAsync", TMessageType.Call, seqid_));
      sendBuddyMessageToAllAsync_args args = new sendBuddyMessageToAllAsync_args();
      args.RequestId = requestId;
      args.Msg = msg;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_sendBuddyMessageToAllAsync()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      sendBuddyMessageToAllAsync_result result = new sendBuddyMessageToAllAsync_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "sendBuddyMessageToAllAsync failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_sendBuddyMessageToMids(AsyncCallback callback, object state, string requestId, Message msg, List<string> mids)
    {
      return send_sendBuddyMessageToMids(callback, state, requestId, msg, mids);
    }

    public SendBuddyMessageResult End_sendBuddyMessageToMids(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_sendBuddyMessageToMids();
    }

    #endif

    public SendBuddyMessageResult sendBuddyMessageToMids(string requestId, Message msg, List<string> mids)
    {
      #if !SILVERLIGHT
      send_sendBuddyMessageToMids(requestId, msg, mids);
      return recv_sendBuddyMessageToMids();

      #else
      var asyncResult = Begin_sendBuddyMessageToMids(null, null, requestId, msg, mids);
      return End_sendBuddyMessageToMids(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_sendBuddyMessageToMids(AsyncCallback callback, object state, string requestId, Message msg, List<string> mids)
    #else
    public void send_sendBuddyMessageToMids(string requestId, Message msg, List<string> mids)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("sendBuddyMessageToMids", TMessageType.Call, seqid_));
      sendBuddyMessageToMids_args args = new sendBuddyMessageToMids_args();
      args.RequestId = requestId;
      args.Msg = msg;
      args.Mids = mids;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public SendBuddyMessageResult recv_sendBuddyMessageToMids()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      sendBuddyMessageToMids_result result = new sendBuddyMessageToMids_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "sendBuddyMessageToMids failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_sendBuddyMessageToMidsAsync(AsyncCallback callback, object state, string requestId, Message msg, List<string> mids)
    {
      return send_sendBuddyMessageToMidsAsync(callback, state, requestId, msg, mids);
    }

    public string End_sendBuddyMessageToMidsAsync(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_sendBuddyMessageToMidsAsync();
    }

    #endif

    public string sendBuddyMessageToMidsAsync(string requestId, Message msg, List<string> mids)
    {
      #if !SILVERLIGHT
      send_sendBuddyMessageToMidsAsync(requestId, msg, mids);
      return recv_sendBuddyMessageToMidsAsync();

      #else
      var asyncResult = Begin_sendBuddyMessageToMidsAsync(null, null, requestId, msg, mids);
      return End_sendBuddyMessageToMidsAsync(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_sendBuddyMessageToMidsAsync(AsyncCallback callback, object state, string requestId, Message msg, List<string> mids)
    #else
    public void send_sendBuddyMessageToMidsAsync(string requestId, Message msg, List<string> mids)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("sendBuddyMessageToMidsAsync", TMessageType.Call, seqid_));
      sendBuddyMessageToMidsAsync_args args = new sendBuddyMessageToMidsAsync_args();
      args.RequestId = requestId;
      args.Msg = msg;
      args.Mids = mids;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_sendBuddyMessageToMidsAsync()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      sendBuddyMessageToMidsAsync_result result = new sendBuddyMessageToMidsAsync_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "sendBuddyMessageToMidsAsync failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_sendIndividualEventToAllAsync(AsyncCallback callback, object state, string requestId, string buddyMid, NotificationStatus notificationStatus)
    {
      return send_sendIndividualEventToAllAsync(callback, state, requestId, buddyMid, notificationStatus);
    }

    public void End_sendIndividualEventToAllAsync(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_sendIndividualEventToAllAsync();
    }

    #endif

    public void sendIndividualEventToAllAsync(string requestId, string buddyMid, NotificationStatus notificationStatus)
    {
      #if !SILVERLIGHT
      send_sendIndividualEventToAllAsync(requestId, buddyMid, notificationStatus);
      recv_sendIndividualEventToAllAsync();

      #else
      var asyncResult = Begin_sendIndividualEventToAllAsync(null, null, requestId, buddyMid, notificationStatus);
      End_sendIndividualEventToAllAsync(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_sendIndividualEventToAllAsync(AsyncCallback callback, object state, string requestId, string buddyMid, NotificationStatus notificationStatus)
    #else
    public void send_sendIndividualEventToAllAsync(string requestId, string buddyMid, NotificationStatus notificationStatus)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("sendIndividualEventToAllAsync", TMessageType.Call, seqid_));
      sendIndividualEventToAllAsync_args args = new sendIndividualEventToAllAsync_args();
      args.RequestId = requestId;
      args.BuddyMid = buddyMid;
      args.NotificationStatus = notificationStatus;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_sendIndividualEventToAllAsync()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      sendIndividualEventToAllAsync_result result = new sendIndividualEventToAllAsync_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_setBuddyOnAir(AsyncCallback callback, object state, string requestId, bool onAir)
    {
      return send_setBuddyOnAir(callback, state, requestId, onAir);
    }

    public SetBuddyOnAirResult End_setBuddyOnAir(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_setBuddyOnAir();
    }

    #endif

    public SetBuddyOnAirResult setBuddyOnAir(string requestId, bool onAir)
    {
      #if !SILVERLIGHT
      send_setBuddyOnAir(requestId, onAir);
      return recv_setBuddyOnAir();

      #else
      var asyncResult = Begin_setBuddyOnAir(null, null, requestId, onAir);
      return End_setBuddyOnAir(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_setBuddyOnAir(AsyncCallback callback, object state, string requestId, bool onAir)
    #else
    public void send_setBuddyOnAir(string requestId, bool onAir)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("setBuddyOnAir", TMessageType.Call, seqid_));
      setBuddyOnAir_args args = new setBuddyOnAir_args();
      args.RequestId = requestId;
      args.OnAir = onAir;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public SetBuddyOnAirResult recv_setBuddyOnAir()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      setBuddyOnAir_result result = new setBuddyOnAir_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "setBuddyOnAir failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_setBuddyOnAirAsync(AsyncCallback callback, object state, string requestId, bool onAir)
    {
      return send_setBuddyOnAirAsync(callback, state, requestId, onAir);
    }

    public string End_setBuddyOnAirAsync(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_setBuddyOnAirAsync();
    }

    #endif

    public string setBuddyOnAirAsync(string requestId, bool onAir)
    {
      #if !SILVERLIGHT
      send_setBuddyOnAirAsync(requestId, onAir);
      return recv_setBuddyOnAirAsync();

      #else
      var asyncResult = Begin_setBuddyOnAirAsync(null, null, requestId, onAir);
      return End_setBuddyOnAirAsync(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_setBuddyOnAirAsync(AsyncCallback callback, object state, string requestId, bool onAir)
    #else
    public void send_setBuddyOnAirAsync(string requestId, bool onAir)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("setBuddyOnAirAsync", TMessageType.Call, seqid_));
      setBuddyOnAirAsync_args args = new setBuddyOnAirAsync_args();
      args.RequestId = requestId;
      args.OnAir = onAir;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_setBuddyOnAirAsync()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      setBuddyOnAirAsync_result result = new setBuddyOnAirAsync_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "setBuddyOnAirAsync failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_storeMessage(AsyncCallback callback, object state, string requestId, BuddyMessageRequest messageRequest)
    {
      return send_storeMessage(callback, state, requestId, messageRequest);
    }

    public SendBuddyMessageResult End_storeMessage(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_storeMessage();
    }

    #endif

    public SendBuddyMessageResult storeMessage(string requestId, BuddyMessageRequest messageRequest)
    {
      #if !SILVERLIGHT
      send_storeMessage(requestId, messageRequest);
      return recv_storeMessage();

      #else
      var asyncResult = Begin_storeMessage(null, null, requestId, messageRequest);
      return End_storeMessage(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_storeMessage(AsyncCallback callback, object state, string requestId, BuddyMessageRequest messageRequest)
    #else
    public void send_storeMessage(string requestId, BuddyMessageRequest messageRequest)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("storeMessage", TMessageType.Call, seqid_));
      storeMessage_args args = new storeMessage_args();
      args.RequestId = requestId;
      args.MessageRequest = messageRequest;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public SendBuddyMessageResult recv_storeMessage()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      storeMessage_result result = new storeMessage_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "storeMessage failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_unblockBuddyMember(AsyncCallback callback, object state, string requestId, string mid)
    {
      return send_unblockBuddyMember(callback, state, requestId, mid);
    }

    public void End_unblockBuddyMember(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_unblockBuddyMember();
    }

    #endif

    public void unblockBuddyMember(string requestId, string mid)
    {
      #if !SILVERLIGHT
      send_unblockBuddyMember(requestId, mid);
      recv_unblockBuddyMember();

      #else
      var asyncResult = Begin_unblockBuddyMember(null, null, requestId, mid);
      End_unblockBuddyMember(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_unblockBuddyMember(AsyncCallback callback, object state, string requestId, string mid)
    #else
    public void send_unblockBuddyMember(string requestId, string mid)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("unblockBuddyMember", TMessageType.Call, seqid_));
      unblockBuddyMember_args args = new unblockBuddyMember_args();
      args.RequestId = requestId;
      args.Mid = mid;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_unblockBuddyMember()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      unblockBuddyMember_result result = new unblockBuddyMember_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_unregisterBuddy(AsyncCallback callback, object state, string requestId)
    {
      return send_unregisterBuddy(callback, state, requestId);
    }

    public void End_unregisterBuddy(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_unregisterBuddy();
    }

    #endif

    public void unregisterBuddy(string requestId)
    {
      #if !SILVERLIGHT
      send_unregisterBuddy(requestId);
      recv_unregisterBuddy();

      #else
      var asyncResult = Begin_unregisterBuddy(null, null, requestId);
      End_unregisterBuddy(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_unregisterBuddy(AsyncCallback callback, object state, string requestId)
    #else
    public void send_unregisterBuddy(string requestId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("unregisterBuddy", TMessageType.Call, seqid_));
      unregisterBuddy_args args = new unregisterBuddy_args();
      args.RequestId = requestId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_unregisterBuddy()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      unregisterBuddy_result result = new unregisterBuddy_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_unregisterBuddyAdmin(AsyncCallback callback, object state, string requestId)
    {
      return send_unregisterBuddyAdmin(callback, state, requestId);
    }

    public void End_unregisterBuddyAdmin(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_unregisterBuddyAdmin();
    }

    #endif

    public void unregisterBuddyAdmin(string requestId)
    {
      #if !SILVERLIGHT
      send_unregisterBuddyAdmin(requestId);
      recv_unregisterBuddyAdmin();

      #else
      var asyncResult = Begin_unregisterBuddyAdmin(null, null, requestId);
      End_unregisterBuddyAdmin(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_unregisterBuddyAdmin(AsyncCallback callback, object state, string requestId)
    #else
    public void send_unregisterBuddyAdmin(string requestId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("unregisterBuddyAdmin", TMessageType.Call, seqid_));
      unregisterBuddyAdmin_args args = new unregisterBuddyAdmin_args();
      args.RequestId = requestId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_unregisterBuddyAdmin()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      unregisterBuddyAdmin_result result = new unregisterBuddyAdmin_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_updateBuddyAdminProfileAttribute(AsyncCallback callback, object state, string requestId, Dictionary<string, string> attributes)
    {
      return send_updateBuddyAdminProfileAttribute(callback, state, requestId, attributes);
    }

    public void End_updateBuddyAdminProfileAttribute(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_updateBuddyAdminProfileAttribute();
    }

    #endif

    public void updateBuddyAdminProfileAttribute(string requestId, Dictionary<string, string> attributes)
    {
      #if !SILVERLIGHT
      send_updateBuddyAdminProfileAttribute(requestId, attributes);
      recv_updateBuddyAdminProfileAttribute();

      #else
      var asyncResult = Begin_updateBuddyAdminProfileAttribute(null, null, requestId, attributes);
      End_updateBuddyAdminProfileAttribute(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_updateBuddyAdminProfileAttribute(AsyncCallback callback, object state, string requestId, Dictionary<string, string> attributes)
    #else
    public void send_updateBuddyAdminProfileAttribute(string requestId, Dictionary<string, string> attributes)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("updateBuddyAdminProfileAttribute", TMessageType.Call, seqid_));
      updateBuddyAdminProfileAttribute_args args = new updateBuddyAdminProfileAttribute_args();
      args.RequestId = requestId;
      args.Attributes = attributes;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_updateBuddyAdminProfileAttribute()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      updateBuddyAdminProfileAttribute_result result = new updateBuddyAdminProfileAttribute_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_updateBuddyAdminProfileImage(AsyncCallback callback, object state, string requestId, byte[] picture)
    {
      return send_updateBuddyAdminProfileImage(callback, state, requestId, picture);
    }

    public void End_updateBuddyAdminProfileImage(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_updateBuddyAdminProfileImage();
    }

    #endif

    public void updateBuddyAdminProfileImage(string requestId, byte[] picture)
    {
      #if !SILVERLIGHT
      send_updateBuddyAdminProfileImage(requestId, picture);
      recv_updateBuddyAdminProfileImage();

      #else
      var asyncResult = Begin_updateBuddyAdminProfileImage(null, null, requestId, picture);
      End_updateBuddyAdminProfileImage(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_updateBuddyAdminProfileImage(AsyncCallback callback, object state, string requestId, byte[] picture)
    #else
    public void send_updateBuddyAdminProfileImage(string requestId, byte[] picture)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("updateBuddyAdminProfileImage", TMessageType.Call, seqid_));
      updateBuddyAdminProfileImage_args args = new updateBuddyAdminProfileImage_args();
      args.RequestId = requestId;
      args.Picture = picture;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_updateBuddyAdminProfileImage()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      updateBuddyAdminProfileImage_result result = new updateBuddyAdminProfileImage_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_updateBuddyProfileAttributes(AsyncCallback callback, object state, string requestId, Dictionary<string, string> attributes)
    {
      return send_updateBuddyProfileAttributes(callback, state, requestId, attributes);
    }

    public UpdateBuddyProfileResult End_updateBuddyProfileAttributes(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_updateBuddyProfileAttributes();
    }

    #endif

    public UpdateBuddyProfileResult updateBuddyProfileAttributes(string requestId, Dictionary<string, string> attributes)
    {
      #if !SILVERLIGHT
      send_updateBuddyProfileAttributes(requestId, attributes);
      return recv_updateBuddyProfileAttributes();

      #else
      var asyncResult = Begin_updateBuddyProfileAttributes(null, null, requestId, attributes);
      return End_updateBuddyProfileAttributes(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_updateBuddyProfileAttributes(AsyncCallback callback, object state, string requestId, Dictionary<string, string> attributes)
    #else
    public void send_updateBuddyProfileAttributes(string requestId, Dictionary<string, string> attributes)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("updateBuddyProfileAttributes", TMessageType.Call, seqid_));
      updateBuddyProfileAttributes_args args = new updateBuddyProfileAttributes_args();
      args.RequestId = requestId;
      args.Attributes = attributes;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public UpdateBuddyProfileResult recv_updateBuddyProfileAttributes()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      updateBuddyProfileAttributes_result result = new updateBuddyProfileAttributes_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "updateBuddyProfileAttributes failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_updateBuddyProfileAttributesAsync(AsyncCallback callback, object state, string requestId, Dictionary<string, string> attributes)
    {
      return send_updateBuddyProfileAttributesAsync(callback, state, requestId, attributes);
    }

    public string End_updateBuddyProfileAttributesAsync(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_updateBuddyProfileAttributesAsync();
    }

    #endif

    public string updateBuddyProfileAttributesAsync(string requestId, Dictionary<string, string> attributes)
    {
      #if !SILVERLIGHT
      send_updateBuddyProfileAttributesAsync(requestId, attributes);
      return recv_updateBuddyProfileAttributesAsync();

      #else
      var asyncResult = Begin_updateBuddyProfileAttributesAsync(null, null, requestId, attributes);
      return End_updateBuddyProfileAttributesAsync(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_updateBuddyProfileAttributesAsync(AsyncCallback callback, object state, string requestId, Dictionary<string, string> attributes)
    #else
    public void send_updateBuddyProfileAttributesAsync(string requestId, Dictionary<string, string> attributes)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("updateBuddyProfileAttributesAsync", TMessageType.Call, seqid_));
      updateBuddyProfileAttributesAsync_args args = new updateBuddyProfileAttributesAsync_args();
      args.RequestId = requestId;
      args.Attributes = attributes;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_updateBuddyProfileAttributesAsync()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      updateBuddyProfileAttributesAsync_result result = new updateBuddyProfileAttributesAsync_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "updateBuddyProfileAttributesAsync failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_updateBuddyProfileImage(AsyncCallback callback, object state, string requestId, byte[] image)
    {
      return send_updateBuddyProfileImage(callback, state, requestId, image);
    }

    public UpdateBuddyProfileResult End_updateBuddyProfileImage(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_updateBuddyProfileImage();
    }

    #endif

    public UpdateBuddyProfileResult updateBuddyProfileImage(string requestId, byte[] image)
    {
      #if !SILVERLIGHT
      send_updateBuddyProfileImage(requestId, image);
      return recv_updateBuddyProfileImage();

      #else
      var asyncResult = Begin_updateBuddyProfileImage(null, null, requestId, image);
      return End_updateBuddyProfileImage(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_updateBuddyProfileImage(AsyncCallback callback, object state, string requestId, byte[] image)
    #else
    public void send_updateBuddyProfileImage(string requestId, byte[] image)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("updateBuddyProfileImage", TMessageType.Call, seqid_));
      updateBuddyProfileImage_args args = new updateBuddyProfileImage_args();
      args.RequestId = requestId;
      args.Image = image;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public UpdateBuddyProfileResult recv_updateBuddyProfileImage()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      updateBuddyProfileImage_result result = new updateBuddyProfileImage_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "updateBuddyProfileImage failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_updateBuddyProfileImageAsync(AsyncCallback callback, object state, string requestId, byte[] image)
    {
      return send_updateBuddyProfileImageAsync(callback, state, requestId, image);
    }

    public string End_updateBuddyProfileImageAsync(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_updateBuddyProfileImageAsync();
    }

    #endif

    public string updateBuddyProfileImageAsync(string requestId, byte[] image)
    {
      #if !SILVERLIGHT
      send_updateBuddyProfileImageAsync(requestId, image);
      return recv_updateBuddyProfileImageAsync();

      #else
      var asyncResult = Begin_updateBuddyProfileImageAsync(null, null, requestId, image);
      return End_updateBuddyProfileImageAsync(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_updateBuddyProfileImageAsync(AsyncCallback callback, object state, string requestId, byte[] image)
    #else
    public void send_updateBuddyProfileImageAsync(string requestId, byte[] image)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("updateBuddyProfileImageAsync", TMessageType.Call, seqid_));
      updateBuddyProfileImageAsync_args args = new updateBuddyProfileImageAsync_args();
      args.RequestId = requestId;
      args.Image = image;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_updateBuddyProfileImageAsync()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      updateBuddyProfileImageAsync_result result = new updateBuddyProfileImageAsync_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "updateBuddyProfileImageAsync failed: unknown result");
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_updateBuddySearchId(AsyncCallback callback, object state, string requestId, string searchId)
    {
      return send_updateBuddySearchId(callback, state, requestId, searchId);
    }

    public void End_updateBuddySearchId(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_updateBuddySearchId();
    }

    #endif

    public void updateBuddySearchId(string requestId, string searchId)
    {
      #if !SILVERLIGHT
      send_updateBuddySearchId(requestId, searchId);
      recv_updateBuddySearchId();

      #else
      var asyncResult = Begin_updateBuddySearchId(null, null, requestId, searchId);
      End_updateBuddySearchId(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_updateBuddySearchId(AsyncCallback callback, object state, string requestId, string searchId)
    #else
    public void send_updateBuddySearchId(string requestId, string searchId)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("updateBuddySearchId", TMessageType.Call, seqid_));
      updateBuddySearchId_args args = new updateBuddySearchId_args();
      args.RequestId = requestId;
      args.SearchId = searchId;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_updateBuddySearchId()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      updateBuddySearchId_result result = new updateBuddySearchId_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_updateBuddySettings(AsyncCallback callback, object state, Dictionary<string, string> settings)
    {
      return send_updateBuddySettings(callback, state, settings);
    }

    public void End_updateBuddySettings(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      recv_updateBuddySettings();
    }

    #endif

    public void updateBuddySettings(Dictionary<string, string> settings)
    {
      #if !SILVERLIGHT
      send_updateBuddySettings(settings);
      recv_updateBuddySettings();

      #else
      var asyncResult = Begin_updateBuddySettings(null, null, settings);
      End_updateBuddySettings(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_updateBuddySettings(AsyncCallback callback, object state, Dictionary<string, string> settings)
    #else
    public void send_updateBuddySettings(Dictionary<string, string> settings)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("updateBuddySettings", TMessageType.Call, seqid_));
      updateBuddySettings_args args = new updateBuddySettings_args();
      args.Settings = settings;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public void recv_updateBuddySettings()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      updateBuddySettings_result result = new updateBuddySettings_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.e) {
        throw result.E;
      }
      return;
    }

    
    #if SILVERLIGHT
    public IAsyncResult Begin_uploadBuddyContent(AsyncCallback callback, object state, ContentType contentType, byte[] content)
    {
      return send_uploadBuddyContent(callback, state, contentType, content);
    }

    public string End_uploadBuddyContent(IAsyncResult asyncResult)
    {
      oprot_.Transport.EndFlush(asyncResult);
      return recv_uploadBuddyContent();
    }

    #endif

    public string uploadBuddyContent(ContentType contentType, byte[] content)
    {
      #if !SILVERLIGHT
      send_uploadBuddyContent(contentType, content);
      return recv_uploadBuddyContent();

      #else
      var asyncResult = Begin_uploadBuddyContent(null, null, contentType, content);
      return End_uploadBuddyContent(asyncResult);

      #endif
    }
    #if SILVERLIGHT
    public IAsyncResult send_uploadBuddyContent(AsyncCallback callback, object state, ContentType contentType, byte[] content)
    #else
    public void send_uploadBuddyContent(ContentType contentType, byte[] content)
    #endif
    {
      oprot_.WriteMessageBegin(new TMessage("uploadBuddyContent", TMessageType.Call, seqid_));
      uploadBuddyContent_args args = new uploadBuddyContent_args();
      args.ContentType = contentType;
      args.Content = content;
      args.Write(oprot_);
      oprot_.WriteMessageEnd();
      #if SILVERLIGHT
      return oprot_.Transport.BeginFlush(callback, state);
      #else
      oprot_.Transport.Flush();
      #endif
    }

    public string recv_uploadBuddyContent()
    {
      TMessage msg = iprot_.ReadMessageBegin();
      if (msg.Type == TMessageType.Exception) {
        TApplicationException x = TApplicationException.Read(iprot_);
        iprot_.ReadMessageEnd();
        throw x;
      }
      uploadBuddyContent_result result = new uploadBuddyContent_result();
      result.Read(iprot_);
      iprot_.ReadMessageEnd();
      if (result.__isset.success) {
        return result.Success;
      }
      if (result.__isset.e) {
        throw result.E;
      }
      throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "uploadBuddyContent failed: unknown result");
    }

  }
  public class Processor : TProcessor {
    public Processor(ISync iface)
    {
      iface_ = iface;
      processMap_["addBuddyMember"] = addBuddyMember_Process;
      processMap_["addBuddyMembers"] = addBuddyMembers_Process;
      processMap_["blockBuddyMember"] = blockBuddyMember_Process;
      processMap_["commitSendMessagesToAll"] = commitSendMessagesToAll_Process;
      processMap_["commitSendMessagesToMids"] = commitSendMessagesToMids_Process;
      processMap_["containsBuddyMember"] = containsBuddyMember_Process;
      processMap_["downloadMessageContent"] = downloadMessageContent_Process;
      processMap_["downloadMessageContentPreview"] = downloadMessageContentPreview_Process;
      processMap_["downloadProfileImage"] = downloadProfileImage_Process;
      processMap_["downloadProfileImagePreview"] = downloadProfileImagePreview_Process;
      processMap_["getActiveMemberCountByBuddyMid"] = getActiveMemberCountByBuddyMid_Process;
      processMap_["getActiveMemberMidsByBuddyMid"] = getActiveMemberMidsByBuddyMid_Process;
      processMap_["getAllBuddyMembers"] = getAllBuddyMembers_Process;
      processMap_["getBlockedBuddyMembers"] = getBlockedBuddyMembers_Process;
      processMap_["getBlockerCountByBuddyMid"] = getBlockerCountByBuddyMid_Process;
      processMap_["getBuddyDetailByMid"] = getBuddyDetailByMid_Process;
      processMap_["getBuddyProfile"] = getBuddyProfile_Process;
      processMap_["getContactTicket"] = getContactTicket_Process;
      processMap_["getMemberCountByBuddyMid"] = getMemberCountByBuddyMid_Process;
      processMap_["getSendBuddyMessageResult"] = getSendBuddyMessageResult_Process;
      processMap_["getSetBuddyOnAirResult"] = getSetBuddyOnAirResult_Process;
      processMap_["getUpdateBuddyProfileResult"] = getUpdateBuddyProfileResult_Process;
      processMap_["isBuddyOnAirByMid"] = isBuddyOnAirByMid_Process;
      processMap_["linkAndSendBuddyContentMessageToAllAsync"] = linkAndSendBuddyContentMessageToAllAsync_Process;
      processMap_["linkAndSendBuddyContentMessageToMids"] = linkAndSendBuddyContentMessageToMids_Process;
      processMap_["notifyBuddyBlocked"] = notifyBuddyBlocked_Process;
      processMap_["notifyBuddyUnblocked"] = notifyBuddyUnblocked_Process;
      processMap_["registerBuddy"] = registerBuddy_Process;
      processMap_["registerBuddyAdmin"] = registerBuddyAdmin_Process;
      processMap_["reissueContactTicket"] = reissueContactTicket_Process;
      processMap_["removeBuddyMember"] = removeBuddyMember_Process;
      processMap_["removeBuddyMembers"] = removeBuddyMembers_Process;
      processMap_["sendBuddyContentMessageToAll"] = sendBuddyContentMessageToAll_Process;
      processMap_["sendBuddyContentMessageToAllAsync"] = sendBuddyContentMessageToAllAsync_Process;
      processMap_["sendBuddyContentMessageToMids"] = sendBuddyContentMessageToMids_Process;
      processMap_["sendBuddyContentMessageToMidsAsync"] = sendBuddyContentMessageToMidsAsync_Process;
      processMap_["sendBuddyMessageToAll"] = sendBuddyMessageToAll_Process;
      processMap_["sendBuddyMessageToAllAsync"] = sendBuddyMessageToAllAsync_Process;
      processMap_["sendBuddyMessageToMids"] = sendBuddyMessageToMids_Process;
      processMap_["sendBuddyMessageToMidsAsync"] = sendBuddyMessageToMidsAsync_Process;
      processMap_["sendIndividualEventToAllAsync"] = sendIndividualEventToAllAsync_Process;
      processMap_["setBuddyOnAir"] = setBuddyOnAir_Process;
      processMap_["setBuddyOnAirAsync"] = setBuddyOnAirAsync_Process;
      processMap_["storeMessage"] = storeMessage_Process;
      processMap_["unblockBuddyMember"] = unblockBuddyMember_Process;
      processMap_["unregisterBuddy"] = unregisterBuddy_Process;
      processMap_["unregisterBuddyAdmin"] = unregisterBuddyAdmin_Process;
      processMap_["updateBuddyAdminProfileAttribute"] = updateBuddyAdminProfileAttribute_Process;
      processMap_["updateBuddyAdminProfileImage"] = updateBuddyAdminProfileImage_Process;
      processMap_["updateBuddyProfileAttributes"] = updateBuddyProfileAttributes_Process;
      processMap_["updateBuddyProfileAttributesAsync"] = updateBuddyProfileAttributesAsync_Process;
      processMap_["updateBuddyProfileImage"] = updateBuddyProfileImage_Process;
      processMap_["updateBuddyProfileImageAsync"] = updateBuddyProfileImageAsync_Process;
      processMap_["updateBuddySearchId"] = updateBuddySearchId_Process;
      processMap_["updateBuddySettings"] = updateBuddySettings_Process;
      processMap_["uploadBuddyContent"] = uploadBuddyContent_Process;
    }

    protected delegate void ProcessFunction(int seqid, TProtocol iprot, TProtocol oprot);
    private ISync iface_;
    protected Dictionary<string, ProcessFunction> processMap_ = new Dictionary<string, ProcessFunction>();

    public bool Process(TProtocol iprot, TProtocol oprot)
    {
      try
      {
        TMessage msg = iprot.ReadMessageBegin();
        ProcessFunction fn;
        processMap_.TryGetValue(msg.Name, out fn);
        if (fn == null) {
          TProtocolUtil.Skip(iprot, TType.Struct);
          iprot.ReadMessageEnd();
          TApplicationException x = new TApplicationException (TApplicationException.ExceptionType.UnknownMethod, "Invalid method name: '" + msg.Name + "'");
          oprot.WriteMessageBegin(new TMessage(msg.Name, TMessageType.Exception, msg.SeqID));
          x.Write(oprot);
          oprot.WriteMessageEnd();
          oprot.Transport.Flush();
          return true;
        }
        fn(msg.SeqID, iprot, oprot);
      }
      catch (IOException)
      {
        return false;
      }
      return true;
    }

    public void addBuddyMember_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      addBuddyMember_args args = new addBuddyMember_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      addBuddyMember_result result = new addBuddyMember_result();
      try
      {
        try
        {
          iface_.addBuddyMember(args.RequestId, args.UserMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("addBuddyMember", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("addBuddyMember", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void addBuddyMembers_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      addBuddyMembers_args args = new addBuddyMembers_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      addBuddyMembers_result result = new addBuddyMembers_result();
      try
      {
        try
        {
          iface_.addBuddyMembers(args.RequestId, args.UserMids);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("addBuddyMembers", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("addBuddyMembers", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void blockBuddyMember_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      blockBuddyMember_args args = new blockBuddyMember_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      blockBuddyMember_result result = new blockBuddyMember_result();
      try
      {
        try
        {
          iface_.blockBuddyMember(args.RequestId, args.Mid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("blockBuddyMember", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("blockBuddyMember", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void commitSendMessagesToAll_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      commitSendMessagesToAll_args args = new commitSendMessagesToAll_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      commitSendMessagesToAll_result result = new commitSendMessagesToAll_result();
      try
      {
        try
        {
          result.Success = iface_.commitSendMessagesToAll(args.RequestIdList);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("commitSendMessagesToAll", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("commitSendMessagesToAll", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void commitSendMessagesToMids_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      commitSendMessagesToMids_args args = new commitSendMessagesToMids_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      commitSendMessagesToMids_result result = new commitSendMessagesToMids_result();
      try
      {
        try
        {
          result.Success = iface_.commitSendMessagesToMids(args.RequestIdList, args.Mids);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("commitSendMessagesToMids", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("commitSendMessagesToMids", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void containsBuddyMember_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      containsBuddyMember_args args = new containsBuddyMember_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      containsBuddyMember_result result = new containsBuddyMember_result();
      try
      {
        try
        {
          result.Success = iface_.containsBuddyMember(args.RequestId, args.UserMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("containsBuddyMember", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("containsBuddyMember", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void downloadMessageContent_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      downloadMessageContent_args args = new downloadMessageContent_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      downloadMessageContent_result result = new downloadMessageContent_result();
      try
      {
        try
        {
          result.Success = iface_.downloadMessageContent(args.RequestId, args.MessageId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("downloadMessageContent", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("downloadMessageContent", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void downloadMessageContentPreview_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      downloadMessageContentPreview_args args = new downloadMessageContentPreview_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      downloadMessageContentPreview_result result = new downloadMessageContentPreview_result();
      try
      {
        try
        {
          result.Success = iface_.downloadMessageContentPreview(args.RequestId, args.MessageId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("downloadMessageContentPreview", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("downloadMessageContentPreview", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void downloadProfileImage_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      downloadProfileImage_args args = new downloadProfileImage_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      downloadProfileImage_result result = new downloadProfileImage_result();
      try
      {
        try
        {
          result.Success = iface_.downloadProfileImage(args.RequestId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("downloadProfileImage", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("downloadProfileImage", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void downloadProfileImagePreview_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      downloadProfileImagePreview_args args = new downloadProfileImagePreview_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      downloadProfileImagePreview_result result = new downloadProfileImagePreview_result();
      try
      {
        try
        {
          result.Success = iface_.downloadProfileImagePreview(args.RequestId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("downloadProfileImagePreview", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("downloadProfileImagePreview", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getActiveMemberCountByBuddyMid_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getActiveMemberCountByBuddyMid_args args = new getActiveMemberCountByBuddyMid_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getActiveMemberCountByBuddyMid_result result = new getActiveMemberCountByBuddyMid_result();
      try
      {
        try
        {
          result.Success = iface_.getActiveMemberCountByBuddyMid(args.BuddyMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getActiveMemberCountByBuddyMid", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getActiveMemberCountByBuddyMid", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getActiveMemberMidsByBuddyMid_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getActiveMemberMidsByBuddyMid_args args = new getActiveMemberMidsByBuddyMid_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getActiveMemberMidsByBuddyMid_result result = new getActiveMemberMidsByBuddyMid_result();
      try
      {
        try
        {
          result.Success = iface_.getActiveMemberMidsByBuddyMid(args.BuddyMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getActiveMemberMidsByBuddyMid", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getActiveMemberMidsByBuddyMid", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getAllBuddyMembers_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getAllBuddyMembers_args args = new getAllBuddyMembers_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getAllBuddyMembers_result result = new getAllBuddyMembers_result();
      try
      {
        try
        {
          result.Success = iface_.getAllBuddyMembers();
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getAllBuddyMembers", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getAllBuddyMembers", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getBlockedBuddyMembers_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getBlockedBuddyMembers_args args = new getBlockedBuddyMembers_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getBlockedBuddyMembers_result result = new getBlockedBuddyMembers_result();
      try
      {
        try
        {
          result.Success = iface_.getBlockedBuddyMembers();
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getBlockedBuddyMembers", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getBlockedBuddyMembers", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getBlockerCountByBuddyMid_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getBlockerCountByBuddyMid_args args = new getBlockerCountByBuddyMid_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getBlockerCountByBuddyMid_result result = new getBlockerCountByBuddyMid_result();
      try
      {
        try
        {
          result.Success = iface_.getBlockerCountByBuddyMid(args.BuddyMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getBlockerCountByBuddyMid", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getBlockerCountByBuddyMid", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getBuddyDetailByMid_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getBuddyDetailByMid_args args = new getBuddyDetailByMid_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getBuddyDetailByMid_result result = new getBuddyDetailByMid_result();
      try
      {
        try
        {
          result.Success = iface_.getBuddyDetailByMid(args.BuddyMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getBuddyDetailByMid", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getBuddyDetailByMid", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getBuddyProfile_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getBuddyProfile_args args = new getBuddyProfile_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getBuddyProfile_result result = new getBuddyProfile_result();
      try
      {
        try
        {
          result.Success = iface_.getBuddyProfile();
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getBuddyProfile", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getBuddyProfile", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getContactTicket_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getContactTicket_args args = new getContactTicket_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getContactTicket_result result = new getContactTicket_result();
      try
      {
        try
        {
          result.Success = iface_.getContactTicket();
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getContactTicket", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getContactTicket", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getMemberCountByBuddyMid_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getMemberCountByBuddyMid_args args = new getMemberCountByBuddyMid_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getMemberCountByBuddyMid_result result = new getMemberCountByBuddyMid_result();
      try
      {
        try
        {
          result.Success = iface_.getMemberCountByBuddyMid(args.BuddyMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getMemberCountByBuddyMid", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getMemberCountByBuddyMid", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getSendBuddyMessageResult_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getSendBuddyMessageResult_args args = new getSendBuddyMessageResult_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getSendBuddyMessageResult_result result = new getSendBuddyMessageResult_result();
      try
      {
        try
        {
          result.Success = iface_.getSendBuddyMessageResult(args.SendBuddyMessageRequestId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getSendBuddyMessageResult", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getSendBuddyMessageResult", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getSetBuddyOnAirResult_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getSetBuddyOnAirResult_args args = new getSetBuddyOnAirResult_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getSetBuddyOnAirResult_result result = new getSetBuddyOnAirResult_result();
      try
      {
        try
        {
          result.Success = iface_.getSetBuddyOnAirResult(args.SetBuddyOnAirRequestId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getSetBuddyOnAirResult", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getSetBuddyOnAirResult", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void getUpdateBuddyProfileResult_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      getUpdateBuddyProfileResult_args args = new getUpdateBuddyProfileResult_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      getUpdateBuddyProfileResult_result result = new getUpdateBuddyProfileResult_result();
      try
      {
        try
        {
          result.Success = iface_.getUpdateBuddyProfileResult(args.UpdateBuddyProfileRequestId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("getUpdateBuddyProfileResult", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("getUpdateBuddyProfileResult", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void isBuddyOnAirByMid_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      isBuddyOnAirByMid_args args = new isBuddyOnAirByMid_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      isBuddyOnAirByMid_result result = new isBuddyOnAirByMid_result();
      try
      {
        try
        {
          result.Success = iface_.isBuddyOnAirByMid(args.BuddyMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("isBuddyOnAirByMid", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("isBuddyOnAirByMid", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void linkAndSendBuddyContentMessageToAllAsync_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      linkAndSendBuddyContentMessageToAllAsync_args args = new linkAndSendBuddyContentMessageToAllAsync_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      linkAndSendBuddyContentMessageToAllAsync_result result = new linkAndSendBuddyContentMessageToAllAsync_result();
      try
      {
        try
        {
          result.Success = iface_.linkAndSendBuddyContentMessageToAllAsync(args.RequestId, args.Msg, args.SourceContentId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("linkAndSendBuddyContentMessageToAllAsync", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("linkAndSendBuddyContentMessageToAllAsync", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void linkAndSendBuddyContentMessageToMids_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      linkAndSendBuddyContentMessageToMids_args args = new linkAndSendBuddyContentMessageToMids_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      linkAndSendBuddyContentMessageToMids_result result = new linkAndSendBuddyContentMessageToMids_result();
      try
      {
        try
        {
          result.Success = iface_.linkAndSendBuddyContentMessageToMids(args.RequestId, args.Msg, args.SourceContentId, args.Mids);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("linkAndSendBuddyContentMessageToMids", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("linkAndSendBuddyContentMessageToMids", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void notifyBuddyBlocked_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      notifyBuddyBlocked_args args = new notifyBuddyBlocked_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      notifyBuddyBlocked_result result = new notifyBuddyBlocked_result();
      try
      {
        try
        {
          iface_.notifyBuddyBlocked(args.BuddyMid, args.BlockerMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("notifyBuddyBlocked", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("notifyBuddyBlocked", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void notifyBuddyUnblocked_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      notifyBuddyUnblocked_args args = new notifyBuddyUnblocked_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      notifyBuddyUnblocked_result result = new notifyBuddyUnblocked_result();
      try
      {
        try
        {
          iface_.notifyBuddyUnblocked(args.BuddyMid, args.BlockerMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("notifyBuddyUnblocked", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("notifyBuddyUnblocked", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void registerBuddy_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      registerBuddy_args args = new registerBuddy_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      registerBuddy_result result = new registerBuddy_result();
      try
      {
        try
        {
          result.Success = iface_.registerBuddy(args.BuddyId, args.SearchId, args.DisplayName, args.StatusMeessage, args.Picture, args.Settings);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("registerBuddy", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("registerBuddy", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void registerBuddyAdmin_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      registerBuddyAdmin_args args = new registerBuddyAdmin_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      registerBuddyAdmin_result result = new registerBuddyAdmin_result();
      try
      {
        try
        {
          result.Success = iface_.registerBuddyAdmin(args.BuddyId, args.SearchId, args.DisplayName, args.StatusMessage, args.Picture);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("registerBuddyAdmin", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("registerBuddyAdmin", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void reissueContactTicket_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      reissueContactTicket_args args = new reissueContactTicket_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      reissueContactTicket_result result = new reissueContactTicket_result();
      try
      {
        try
        {
          result.Success = iface_.reissueContactTicket(args.ExpirationTime, args.MaxUseCount);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("reissueContactTicket", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("reissueContactTicket", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void removeBuddyMember_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      removeBuddyMember_args args = new removeBuddyMember_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      removeBuddyMember_result result = new removeBuddyMember_result();
      try
      {
        try
        {
          iface_.removeBuddyMember(args.RequestId, args.UserMid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("removeBuddyMember", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("removeBuddyMember", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void removeBuddyMembers_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      removeBuddyMembers_args args = new removeBuddyMembers_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      removeBuddyMembers_result result = new removeBuddyMembers_result();
      try
      {
        try
        {
          iface_.removeBuddyMembers(args.RequestId, args.UserMids);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("removeBuddyMembers", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("removeBuddyMembers", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void sendBuddyContentMessageToAll_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      sendBuddyContentMessageToAll_args args = new sendBuddyContentMessageToAll_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      sendBuddyContentMessageToAll_result result = new sendBuddyContentMessageToAll_result();
      try
      {
        try
        {
          result.Success = iface_.sendBuddyContentMessageToAll(args.RequestId, args.Msg, args.Content);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("sendBuddyContentMessageToAll", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("sendBuddyContentMessageToAll", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void sendBuddyContentMessageToAllAsync_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      sendBuddyContentMessageToAllAsync_args args = new sendBuddyContentMessageToAllAsync_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      sendBuddyContentMessageToAllAsync_result result = new sendBuddyContentMessageToAllAsync_result();
      try
      {
        try
        {
          result.Success = iface_.sendBuddyContentMessageToAllAsync(args.RequestId, args.Msg, args.Content);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("sendBuddyContentMessageToAllAsync", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("sendBuddyContentMessageToAllAsync", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void sendBuddyContentMessageToMids_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      sendBuddyContentMessageToMids_args args = new sendBuddyContentMessageToMids_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      sendBuddyContentMessageToMids_result result = new sendBuddyContentMessageToMids_result();
      try
      {
        try
        {
          result.Success = iface_.sendBuddyContentMessageToMids(args.RequestId, args.Msg, args.Content, args.Mids);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("sendBuddyContentMessageToMids", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("sendBuddyContentMessageToMids", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void sendBuddyContentMessageToMidsAsync_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      sendBuddyContentMessageToMidsAsync_args args = new sendBuddyContentMessageToMidsAsync_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      sendBuddyContentMessageToMidsAsync_result result = new sendBuddyContentMessageToMidsAsync_result();
      try
      {
        try
        {
          result.Success = iface_.sendBuddyContentMessageToMidsAsync(args.RequestId, args.Msg, args.Content, args.Mids);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("sendBuddyContentMessageToMidsAsync", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("sendBuddyContentMessageToMidsAsync", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void sendBuddyMessageToAll_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      sendBuddyMessageToAll_args args = new sendBuddyMessageToAll_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      sendBuddyMessageToAll_result result = new sendBuddyMessageToAll_result();
      try
      {
        try
        {
          result.Success = iface_.sendBuddyMessageToAll(args.RequestId, args.Msg);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("sendBuddyMessageToAll", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("sendBuddyMessageToAll", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void sendBuddyMessageToAllAsync_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      sendBuddyMessageToAllAsync_args args = new sendBuddyMessageToAllAsync_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      sendBuddyMessageToAllAsync_result result = new sendBuddyMessageToAllAsync_result();
      try
      {
        try
        {
          result.Success = iface_.sendBuddyMessageToAllAsync(args.RequestId, args.Msg);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("sendBuddyMessageToAllAsync", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("sendBuddyMessageToAllAsync", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void sendBuddyMessageToMids_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      sendBuddyMessageToMids_args args = new sendBuddyMessageToMids_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      sendBuddyMessageToMids_result result = new sendBuddyMessageToMids_result();
      try
      {
        try
        {
          result.Success = iface_.sendBuddyMessageToMids(args.RequestId, args.Msg, args.Mids);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("sendBuddyMessageToMids", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("sendBuddyMessageToMids", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void sendBuddyMessageToMidsAsync_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      sendBuddyMessageToMidsAsync_args args = new sendBuddyMessageToMidsAsync_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      sendBuddyMessageToMidsAsync_result result = new sendBuddyMessageToMidsAsync_result();
      try
      {
        try
        {
          result.Success = iface_.sendBuddyMessageToMidsAsync(args.RequestId, args.Msg, args.Mids);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("sendBuddyMessageToMidsAsync", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("sendBuddyMessageToMidsAsync", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void sendIndividualEventToAllAsync_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      sendIndividualEventToAllAsync_args args = new sendIndividualEventToAllAsync_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      sendIndividualEventToAllAsync_result result = new sendIndividualEventToAllAsync_result();
      try
      {
        try
        {
          iface_.sendIndividualEventToAllAsync(args.RequestId, args.BuddyMid, args.NotificationStatus);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("sendIndividualEventToAllAsync", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("sendIndividualEventToAllAsync", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void setBuddyOnAir_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      setBuddyOnAir_args args = new setBuddyOnAir_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      setBuddyOnAir_result result = new setBuddyOnAir_result();
      try
      {
        try
        {
          result.Success = iface_.setBuddyOnAir(args.RequestId, args.OnAir);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("setBuddyOnAir", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("setBuddyOnAir", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void setBuddyOnAirAsync_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      setBuddyOnAirAsync_args args = new setBuddyOnAirAsync_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      setBuddyOnAirAsync_result result = new setBuddyOnAirAsync_result();
      try
      {
        try
        {
          result.Success = iface_.setBuddyOnAirAsync(args.RequestId, args.OnAir);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("setBuddyOnAirAsync", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("setBuddyOnAirAsync", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void storeMessage_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      storeMessage_args args = new storeMessage_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      storeMessage_result result = new storeMessage_result();
      try
      {
        try
        {
          result.Success = iface_.storeMessage(args.RequestId, args.MessageRequest);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("storeMessage", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("storeMessage", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void unblockBuddyMember_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      unblockBuddyMember_args args = new unblockBuddyMember_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      unblockBuddyMember_result result = new unblockBuddyMember_result();
      try
      {
        try
        {
          iface_.unblockBuddyMember(args.RequestId, args.Mid);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("unblockBuddyMember", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("unblockBuddyMember", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void unregisterBuddy_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      unregisterBuddy_args args = new unregisterBuddy_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      unregisterBuddy_result result = new unregisterBuddy_result();
      try
      {
        try
        {
          iface_.unregisterBuddy(args.RequestId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("unregisterBuddy", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("unregisterBuddy", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void unregisterBuddyAdmin_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      unregisterBuddyAdmin_args args = new unregisterBuddyAdmin_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      unregisterBuddyAdmin_result result = new unregisterBuddyAdmin_result();
      try
      {
        try
        {
          iface_.unregisterBuddyAdmin(args.RequestId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("unregisterBuddyAdmin", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("unregisterBuddyAdmin", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void updateBuddyAdminProfileAttribute_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      updateBuddyAdminProfileAttribute_args args = new updateBuddyAdminProfileAttribute_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      updateBuddyAdminProfileAttribute_result result = new updateBuddyAdminProfileAttribute_result();
      try
      {
        try
        {
          iface_.updateBuddyAdminProfileAttribute(args.RequestId, args.Attributes);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("updateBuddyAdminProfileAttribute", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("updateBuddyAdminProfileAttribute", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void updateBuddyAdminProfileImage_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      updateBuddyAdminProfileImage_args args = new updateBuddyAdminProfileImage_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      updateBuddyAdminProfileImage_result result = new updateBuddyAdminProfileImage_result();
      try
      {
        try
        {
          iface_.updateBuddyAdminProfileImage(args.RequestId, args.Picture);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("updateBuddyAdminProfileImage", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("updateBuddyAdminProfileImage", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void updateBuddyProfileAttributes_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      updateBuddyProfileAttributes_args args = new updateBuddyProfileAttributes_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      updateBuddyProfileAttributes_result result = new updateBuddyProfileAttributes_result();
      try
      {
        try
        {
          result.Success = iface_.updateBuddyProfileAttributes(args.RequestId, args.Attributes);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("updateBuddyProfileAttributes", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("updateBuddyProfileAttributes", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void updateBuddyProfileAttributesAsync_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      updateBuddyProfileAttributesAsync_args args = new updateBuddyProfileAttributesAsync_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      updateBuddyProfileAttributesAsync_result result = new updateBuddyProfileAttributesAsync_result();
      try
      {
        try
        {
          result.Success = iface_.updateBuddyProfileAttributesAsync(args.RequestId, args.Attributes);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("updateBuddyProfileAttributesAsync", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("updateBuddyProfileAttributesAsync", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void updateBuddyProfileImage_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      updateBuddyProfileImage_args args = new updateBuddyProfileImage_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      updateBuddyProfileImage_result result = new updateBuddyProfileImage_result();
      try
      {
        try
        {
          result.Success = iface_.updateBuddyProfileImage(args.RequestId, args.Image);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("updateBuddyProfileImage", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("updateBuddyProfileImage", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void updateBuddyProfileImageAsync_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      updateBuddyProfileImageAsync_args args = new updateBuddyProfileImageAsync_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      updateBuddyProfileImageAsync_result result = new updateBuddyProfileImageAsync_result();
      try
      {
        try
        {
          result.Success = iface_.updateBuddyProfileImageAsync(args.RequestId, args.Image);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("updateBuddyProfileImageAsync", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("updateBuddyProfileImageAsync", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void updateBuddySearchId_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      updateBuddySearchId_args args = new updateBuddySearchId_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      updateBuddySearchId_result result = new updateBuddySearchId_result();
      try
      {
        try
        {
          iface_.updateBuddySearchId(args.RequestId, args.SearchId);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("updateBuddySearchId", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("updateBuddySearchId", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void updateBuddySettings_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      updateBuddySettings_args args = new updateBuddySettings_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      updateBuddySettings_result result = new updateBuddySettings_result();
      try
      {
        try
        {
          iface_.updateBuddySettings(args.Settings);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("updateBuddySettings", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("updateBuddySettings", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

    public void uploadBuddyContent_Process(int seqid, TProtocol iprot, TProtocol oprot)
    {
      uploadBuddyContent_args args = new uploadBuddyContent_args();
      args.Read(iprot);
      iprot.ReadMessageEnd();
      uploadBuddyContent_result result = new uploadBuddyContent_result();
      try
      {
        try
        {
          result.Success = iface_.uploadBuddyContent(args.ContentType, args.Content);
        }
        catch (TalkException e)
        {
          result.E = e;
        }
        oprot.WriteMessageBegin(new TMessage("uploadBuddyContent", TMessageType.Reply, seqid)); 
        result.Write(oprot);
      }
      catch (TTransportException)
      {
        throw;
      }
      catch (Exception ex)
      {
        Console.Error.WriteLine("Error occurred in processor:");
        Console.Error.WriteLine(ex.ToString());
        TApplicationException x = new TApplicationException      (TApplicationException.ExceptionType.InternalError," Internal error.");
        oprot.WriteMessageBegin(new TMessage("uploadBuddyContent", TMessageType.Exception, seqid));
        x.Write(oprot);
      }
      oprot.WriteMessageEnd();
      oprot.Transport.Flush();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class addBuddyMember_args : TBase
  {
    private string _requestId;
    private string _userMid;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public string UserMid
    {
      get
      {
        return _userMid;
      }
      set
      {
        __isset.userMid = true;
        this._userMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool userMid;
    }

    public addBuddyMember_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                UserMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("addBuddyMember_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (UserMid != null && __isset.userMid) {
          field.Name = "userMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(UserMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("addBuddyMember_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (UserMid != null && __isset.userMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UserMid: ");
        __sb.Append(UserMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class addBuddyMember_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public addBuddyMember_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("addBuddyMember_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("addBuddyMember_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class addBuddyMembers_args : TBase
  {
    private string _requestId;
    private List<string> _userMids;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public List<string> UserMids
    {
      get
      {
        return _userMids;
      }
      set
      {
        __isset.userMids = true;
        this._userMids = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool userMids;
    }

    public addBuddyMembers_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.List) {
                {
                  UserMids = new List<string>();
                  TList _list638 = iprot.ReadListBegin();
                  for( int _i639 = 0; _i639 < _list638.Count; ++_i639)
                  {
                    string _elem640;
                    _elem640 = iprot.ReadString();
                    UserMids.Add(_elem640);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("addBuddyMembers_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (UserMids != null && __isset.userMids) {
          field.Name = "userMids";
          field.Type = TType.List;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, UserMids.Count));
            foreach (string _iter641 in UserMids)
            {
              oprot.WriteString(_iter641);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("addBuddyMembers_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (UserMids != null && __isset.userMids) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UserMids: ");
        __sb.Append(UserMids);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class addBuddyMembers_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public addBuddyMembers_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("addBuddyMembers_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("addBuddyMembers_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class blockBuddyMember_args : TBase
  {
    private string _requestId;
    private string _mid;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public string Mid
    {
      get
      {
        return _mid;
      }
      set
      {
        __isset.mid = true;
        this._mid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool mid;
    }

    public blockBuddyMember_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                Mid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("blockBuddyMember_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Mid != null && __isset.mid) {
          field.Name = "mid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Mid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("blockBuddyMember_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Mid != null && __isset.mid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mid: ");
        __sb.Append(Mid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class blockBuddyMember_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public blockBuddyMember_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("blockBuddyMember_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("blockBuddyMember_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class commitSendMessagesToAll_args : TBase
  {
    private List<string> _requestIdList;

    public List<string> RequestIdList
    {
      get
      {
        return _requestIdList;
      }
      set
      {
        __isset.requestIdList = true;
        this._requestIdList = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestIdList;
    }

    public commitSendMessagesToAll_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.List) {
                {
                  RequestIdList = new List<string>();
                  TList _list642 = iprot.ReadListBegin();
                  for( int _i643 = 0; _i643 < _list642.Count; ++_i643)
                  {
                    string _elem644;
                    _elem644 = iprot.ReadString();
                    RequestIdList.Add(_elem644);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("commitSendMessagesToAll_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestIdList != null && __isset.requestIdList) {
          field.Name = "requestIdList";
          field.Type = TType.List;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, RequestIdList.Count));
            foreach (string _iter645 in RequestIdList)
            {
              oprot.WriteString(_iter645);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("commitSendMessagesToAll_args(");
      bool __first = true;
      if (RequestIdList != null && __isset.requestIdList) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestIdList: ");
        __sb.Append(RequestIdList);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class commitSendMessagesToAll_result : TBase
  {
    private List<SendBuddyMessageResult> _success;
    private TalkException _e;

    public List<SendBuddyMessageResult> Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public commitSendMessagesToAll_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.List) {
                {
                  Success = new List<SendBuddyMessageResult>();
                  TList _list646 = iprot.ReadListBegin();
                  for( int _i647 = 0; _i647 < _list646.Count; ++_i647)
                  {
                    SendBuddyMessageResult _elem648;
                    _elem648 = new SendBuddyMessageResult();
                    _elem648.Read(iprot);
                    Success.Add(_elem648);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("commitSendMessagesToAll_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.List;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            {
              oprot.WriteListBegin(new TList(TType.Struct, Success.Count));
              foreach (SendBuddyMessageResult _iter649 in Success)
              {
                _iter649.Write(oprot);
              }
              oprot.WriteListEnd();
            }
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("commitSendMessagesToAll_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class commitSendMessagesToMids_args : TBase
  {
    private List<string> _requestIdList;
    private List<string> _mids;

    public List<string> RequestIdList
    {
      get
      {
        return _requestIdList;
      }
      set
      {
        __isset.requestIdList = true;
        this._requestIdList = value;
      }
    }

    public List<string> Mids
    {
      get
      {
        return _mids;
      }
      set
      {
        __isset.mids = true;
        this._mids = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestIdList;
      public bool mids;
    }

    public commitSendMessagesToMids_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.List) {
                {
                  RequestIdList = new List<string>();
                  TList _list650 = iprot.ReadListBegin();
                  for( int _i651 = 0; _i651 < _list650.Count; ++_i651)
                  {
                    string _elem652;
                    _elem652 = iprot.ReadString();
                    RequestIdList.Add(_elem652);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.List) {
                {
                  Mids = new List<string>();
                  TList _list653 = iprot.ReadListBegin();
                  for( int _i654 = 0; _i654 < _list653.Count; ++_i654)
                  {
                    string _elem655;
                    _elem655 = iprot.ReadString();
                    Mids.Add(_elem655);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("commitSendMessagesToMids_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestIdList != null && __isset.requestIdList) {
          field.Name = "requestIdList";
          field.Type = TType.List;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, RequestIdList.Count));
            foreach (string _iter656 in RequestIdList)
            {
              oprot.WriteString(_iter656);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        if (Mids != null && __isset.mids) {
          field.Name = "mids";
          field.Type = TType.List;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, Mids.Count));
            foreach (string _iter657 in Mids)
            {
              oprot.WriteString(_iter657);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("commitSendMessagesToMids_args(");
      bool __first = true;
      if (RequestIdList != null && __isset.requestIdList) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestIdList: ");
        __sb.Append(RequestIdList);
      }
      if (Mids != null && __isset.mids) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mids: ");
        __sb.Append(Mids);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class commitSendMessagesToMids_result : TBase
  {
    private List<SendBuddyMessageResult> _success;
    private TalkException _e;

    public List<SendBuddyMessageResult> Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public commitSendMessagesToMids_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.List) {
                {
                  Success = new List<SendBuddyMessageResult>();
                  TList _list658 = iprot.ReadListBegin();
                  for( int _i659 = 0; _i659 < _list658.Count; ++_i659)
                  {
                    SendBuddyMessageResult _elem660;
                    _elem660 = new SendBuddyMessageResult();
                    _elem660.Read(iprot);
                    Success.Add(_elem660);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("commitSendMessagesToMids_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.List;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            {
              oprot.WriteListBegin(new TList(TType.Struct, Success.Count));
              foreach (SendBuddyMessageResult _iter661 in Success)
              {
                _iter661.Write(oprot);
              }
              oprot.WriteListEnd();
            }
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("commitSendMessagesToMids_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class containsBuddyMember_args : TBase
  {
    private string _requestId;
    private string _userMid;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public string UserMid
    {
      get
      {
        return _userMid;
      }
      set
      {
        __isset.userMid = true;
        this._userMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool userMid;
    }

    public containsBuddyMember_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                UserMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("containsBuddyMember_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (UserMid != null && __isset.userMid) {
          field.Name = "userMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(UserMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("containsBuddyMember_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (UserMid != null && __isset.userMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UserMid: ");
        __sb.Append(UserMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class containsBuddyMember_result : TBase
  {
    private bool _success;
    private TalkException _e;

    public bool Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public containsBuddyMember_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Bool) {
                Success = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("containsBuddyMember_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          field.Name = "Success";
          field.Type = TType.Bool;
          field.ID = 0;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(Success);
          oprot.WriteFieldEnd();
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("containsBuddyMember_result(");
      bool __first = true;
      if (__isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class downloadMessageContent_args : TBase
  {
    private string _requestId;
    private string _messageId;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public string MessageId
    {
      get
      {
        return _messageId;
      }
      set
      {
        __isset.messageId = true;
        this._messageId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool messageId;
    }

    public downloadMessageContent_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                MessageId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("downloadMessageContent_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (MessageId != null && __isset.messageId) {
          field.Name = "messageId";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(MessageId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("downloadMessageContent_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (MessageId != null && __isset.messageId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("MessageId: ");
        __sb.Append(MessageId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class downloadMessageContent_result : TBase
  {
    private byte[] _success;
    private TalkException _e;

    public byte[] Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public downloadMessageContent_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("downloadMessageContent_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteBinary(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("downloadMessageContent_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class downloadMessageContentPreview_args : TBase
  {
    private string _requestId;
    private string _messageId;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public string MessageId
    {
      get
      {
        return _messageId;
      }
      set
      {
        __isset.messageId = true;
        this._messageId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool messageId;
    }

    public downloadMessageContentPreview_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                MessageId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("downloadMessageContentPreview_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (MessageId != null && __isset.messageId) {
          field.Name = "messageId";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(MessageId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("downloadMessageContentPreview_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (MessageId != null && __isset.messageId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("MessageId: ");
        __sb.Append(MessageId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class downloadMessageContentPreview_result : TBase
  {
    private byte[] _success;
    private TalkException _e;

    public byte[] Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public downloadMessageContentPreview_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("downloadMessageContentPreview_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteBinary(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("downloadMessageContentPreview_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class downloadProfileImage_args : TBase
  {
    private string _requestId;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
    }

    public downloadProfileImage_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("downloadProfileImage_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("downloadProfileImage_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class downloadProfileImage_result : TBase
  {
    private byte[] _success;
    private TalkException _e;

    public byte[] Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public downloadProfileImage_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("downloadProfileImage_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteBinary(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("downloadProfileImage_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class downloadProfileImagePreview_args : TBase
  {
    private string _requestId;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
    }

    public downloadProfileImagePreview_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("downloadProfileImagePreview_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("downloadProfileImagePreview_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class downloadProfileImagePreview_result : TBase
  {
    private byte[] _success;
    private TalkException _e;

    public byte[] Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public downloadProfileImagePreview_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("downloadProfileImagePreview_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteBinary(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("downloadProfileImagePreview_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getActiveMemberCountByBuddyMid_args : TBase
  {
    private string _buddyMid;

    public string BuddyMid
    {
      get
      {
        return _buddyMid;
      }
      set
      {
        __isset.buddyMid = true;
        this._buddyMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool buddyMid;
    }

    public getActiveMemberCountByBuddyMid_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 2:
              if (field.Type == TType.String) {
                BuddyMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getActiveMemberCountByBuddyMid_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (BuddyMid != null && __isset.buddyMid) {
          field.Name = "buddyMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getActiveMemberCountByBuddyMid_args(");
      bool __first = true;
      if (BuddyMid != null && __isset.buddyMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyMid: ");
        __sb.Append(BuddyMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getActiveMemberCountByBuddyMid_result : TBase
  {
    private long _success;
    private TalkException _e;

    public long Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getActiveMemberCountByBuddyMid_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.I64) {
                Success = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getActiveMemberCountByBuddyMid_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          field.Name = "Success";
          field.Type = TType.I64;
          field.ID = 0;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Success);
          oprot.WriteFieldEnd();
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getActiveMemberCountByBuddyMid_result(");
      bool __first = true;
      if (__isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getActiveMemberMidsByBuddyMid_args : TBase
  {
    private string _buddyMid;

    public string BuddyMid
    {
      get
      {
        return _buddyMid;
      }
      set
      {
        __isset.buddyMid = true;
        this._buddyMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool buddyMid;
    }

    public getActiveMemberMidsByBuddyMid_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 2:
              if (field.Type == TType.String) {
                BuddyMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getActiveMemberMidsByBuddyMid_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (BuddyMid != null && __isset.buddyMid) {
          field.Name = "buddyMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getActiveMemberMidsByBuddyMid_args(");
      bool __first = true;
      if (BuddyMid != null && __isset.buddyMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyMid: ");
        __sb.Append(BuddyMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getActiveMemberMidsByBuddyMid_result : TBase
  {
    private List<string> _success;
    private TalkException _e;

    public List<string> Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getActiveMemberMidsByBuddyMid_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.List) {
                {
                  Success = new List<string>();
                  TList _list662 = iprot.ReadListBegin();
                  for( int _i663 = 0; _i663 < _list662.Count; ++_i663)
                  {
                    string _elem664;
                    _elem664 = iprot.ReadString();
                    Success.Add(_elem664);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getActiveMemberMidsByBuddyMid_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.List;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            {
              oprot.WriteListBegin(new TList(TType.String, Success.Count));
              foreach (string _iter665 in Success)
              {
                oprot.WriteString(_iter665);
              }
              oprot.WriteListEnd();
            }
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getActiveMemberMidsByBuddyMid_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getAllBuddyMembers_args : TBase
  {

    public getAllBuddyMembers_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getAllBuddyMembers_args");
        oprot.WriteStructBegin(struc);
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getAllBuddyMembers_args(");
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getAllBuddyMembers_result : TBase
  {
    private List<string> _success;
    private TalkException _e;

    public List<string> Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getAllBuddyMembers_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.List) {
                {
                  Success = new List<string>();
                  TList _list666 = iprot.ReadListBegin();
                  for( int _i667 = 0; _i667 < _list666.Count; ++_i667)
                  {
                    string _elem668;
                    _elem668 = iprot.ReadString();
                    Success.Add(_elem668);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getAllBuddyMembers_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.List;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            {
              oprot.WriteListBegin(new TList(TType.String, Success.Count));
              foreach (string _iter669 in Success)
              {
                oprot.WriteString(_iter669);
              }
              oprot.WriteListEnd();
            }
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getAllBuddyMembers_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getBlockedBuddyMembers_args : TBase
  {

    public getBlockedBuddyMembers_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getBlockedBuddyMembers_args");
        oprot.WriteStructBegin(struc);
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getBlockedBuddyMembers_args(");
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getBlockedBuddyMembers_result : TBase
  {
    private List<string> _success;
    private TalkException _e;

    public List<string> Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getBlockedBuddyMembers_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.List) {
                {
                  Success = new List<string>();
                  TList _list670 = iprot.ReadListBegin();
                  for( int _i671 = 0; _i671 < _list670.Count; ++_i671)
                  {
                    string _elem672;
                    _elem672 = iprot.ReadString();
                    Success.Add(_elem672);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getBlockedBuddyMembers_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.List;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            {
              oprot.WriteListBegin(new TList(TType.String, Success.Count));
              foreach (string _iter673 in Success)
              {
                oprot.WriteString(_iter673);
              }
              oprot.WriteListEnd();
            }
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getBlockedBuddyMembers_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getBlockerCountByBuddyMid_args : TBase
  {
    private string _buddyMid;

    public string BuddyMid
    {
      get
      {
        return _buddyMid;
      }
      set
      {
        __isset.buddyMid = true;
        this._buddyMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool buddyMid;
    }

    public getBlockerCountByBuddyMid_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 2:
              if (field.Type == TType.String) {
                BuddyMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getBlockerCountByBuddyMid_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (BuddyMid != null && __isset.buddyMid) {
          field.Name = "buddyMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getBlockerCountByBuddyMid_args(");
      bool __first = true;
      if (BuddyMid != null && __isset.buddyMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyMid: ");
        __sb.Append(BuddyMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getBlockerCountByBuddyMid_result : TBase
  {
    private long _success;
    private TalkException _e;

    public long Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getBlockerCountByBuddyMid_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.I64) {
                Success = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getBlockerCountByBuddyMid_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          field.Name = "Success";
          field.Type = TType.I64;
          field.ID = 0;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Success);
          oprot.WriteFieldEnd();
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getBlockerCountByBuddyMid_result(");
      bool __first = true;
      if (__isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getBuddyDetailByMid_args : TBase
  {
    private string _buddyMid;

    public string BuddyMid
    {
      get
      {
        return _buddyMid;
      }
      set
      {
        __isset.buddyMid = true;
        this._buddyMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool buddyMid;
    }

    public getBuddyDetailByMid_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 2:
              if (field.Type == TType.String) {
                BuddyMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getBuddyDetailByMid_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (BuddyMid != null && __isset.buddyMid) {
          field.Name = "buddyMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getBuddyDetailByMid_args(");
      bool __first = true;
      if (BuddyMid != null && __isset.buddyMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyMid: ");
        __sb.Append(BuddyMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getBuddyDetailByMid_result : TBase
  {
    private BuddyDetail _success;
    private TalkException _e;

    public BuddyDetail Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getBuddyDetailByMid_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new BuddyDetail();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getBuddyDetailByMid_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getBuddyDetailByMid_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getBuddyProfile_args : TBase
  {

    public getBuddyProfile_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getBuddyProfile_args");
        oprot.WriteStructBegin(struc);
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getBuddyProfile_args(");
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getBuddyProfile_result : TBase
  {
    private BuddyProfile _success;
    private TalkException _e;

    public BuddyProfile Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getBuddyProfile_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new BuddyProfile();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getBuddyProfile_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getBuddyProfile_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getContactTicket_args : TBase
  {

    public getContactTicket_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getContactTicket_args");
        oprot.WriteStructBegin(struc);
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getContactTicket_args(");
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getContactTicket_result : TBase
  {
    private Ticket _success;
    private TalkException _e;

    public Ticket Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getContactTicket_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new Ticket();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getContactTicket_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getContactTicket_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getMemberCountByBuddyMid_args : TBase
  {
    private string _buddyMid;

    public string BuddyMid
    {
      get
      {
        return _buddyMid;
      }
      set
      {
        __isset.buddyMid = true;
        this._buddyMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool buddyMid;
    }

    public getMemberCountByBuddyMid_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 2:
              if (field.Type == TType.String) {
                BuddyMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getMemberCountByBuddyMid_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (BuddyMid != null && __isset.buddyMid) {
          field.Name = "buddyMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getMemberCountByBuddyMid_args(");
      bool __first = true;
      if (BuddyMid != null && __isset.buddyMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyMid: ");
        __sb.Append(BuddyMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getMemberCountByBuddyMid_result : TBase
  {
    private long _success;
    private TalkException _e;

    public long Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getMemberCountByBuddyMid_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.I64) {
                Success = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getMemberCountByBuddyMid_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          field.Name = "Success";
          field.Type = TType.I64;
          field.ID = 0;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Success);
          oprot.WriteFieldEnd();
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getMemberCountByBuddyMid_result(");
      bool __first = true;
      if (__isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getSendBuddyMessageResult_args : TBase
  {
    private string _sendBuddyMessageRequestId;

    public string SendBuddyMessageRequestId
    {
      get
      {
        return _sendBuddyMessageRequestId;
      }
      set
      {
        __isset.sendBuddyMessageRequestId = true;
        this._sendBuddyMessageRequestId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool sendBuddyMessageRequestId;
    }

    public getSendBuddyMessageResult_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                SendBuddyMessageRequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getSendBuddyMessageResult_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (SendBuddyMessageRequestId != null && __isset.sendBuddyMessageRequestId) {
          field.Name = "sendBuddyMessageRequestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(SendBuddyMessageRequestId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getSendBuddyMessageResult_args(");
      bool __first = true;
      if (SendBuddyMessageRequestId != null && __isset.sendBuddyMessageRequestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SendBuddyMessageRequestId: ");
        __sb.Append(SendBuddyMessageRequestId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getSendBuddyMessageResult_result : TBase
  {
    private SendBuddyMessageResult _success;
    private TalkException _e;

    public SendBuddyMessageResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getSendBuddyMessageResult_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new SendBuddyMessageResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getSendBuddyMessageResult_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getSendBuddyMessageResult_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getSetBuddyOnAirResult_args : TBase
  {
    private string _setBuddyOnAirRequestId;

    public string SetBuddyOnAirRequestId
    {
      get
      {
        return _setBuddyOnAirRequestId;
      }
      set
      {
        __isset.setBuddyOnAirRequestId = true;
        this._setBuddyOnAirRequestId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool setBuddyOnAirRequestId;
    }

    public getSetBuddyOnAirResult_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                SetBuddyOnAirRequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getSetBuddyOnAirResult_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (SetBuddyOnAirRequestId != null && __isset.setBuddyOnAirRequestId) {
          field.Name = "setBuddyOnAirRequestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(SetBuddyOnAirRequestId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getSetBuddyOnAirResult_args(");
      bool __first = true;
      if (SetBuddyOnAirRequestId != null && __isset.setBuddyOnAirRequestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SetBuddyOnAirRequestId: ");
        __sb.Append(SetBuddyOnAirRequestId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getSetBuddyOnAirResult_result : TBase
  {
    private SetBuddyOnAirResult _success;
    private TalkException _e;

    public SetBuddyOnAirResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getSetBuddyOnAirResult_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new SetBuddyOnAirResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getSetBuddyOnAirResult_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getSetBuddyOnAirResult_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getUpdateBuddyProfileResult_args : TBase
  {
    private string _updateBuddyProfileRequestId;

    public string UpdateBuddyProfileRequestId
    {
      get
      {
        return _updateBuddyProfileRequestId;
      }
      set
      {
        __isset.updateBuddyProfileRequestId = true;
        this._updateBuddyProfileRequestId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool updateBuddyProfileRequestId;
    }

    public getUpdateBuddyProfileResult_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                UpdateBuddyProfileRequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getUpdateBuddyProfileResult_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (UpdateBuddyProfileRequestId != null && __isset.updateBuddyProfileRequestId) {
          field.Name = "updateBuddyProfileRequestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(UpdateBuddyProfileRequestId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getUpdateBuddyProfileResult_args(");
      bool __first = true;
      if (UpdateBuddyProfileRequestId != null && __isset.updateBuddyProfileRequestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UpdateBuddyProfileRequestId: ");
        __sb.Append(UpdateBuddyProfileRequestId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class getUpdateBuddyProfileResult_result : TBase
  {
    private UpdateBuddyProfileResult _success;
    private TalkException _e;

    public UpdateBuddyProfileResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public getUpdateBuddyProfileResult_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new UpdateBuddyProfileResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("getUpdateBuddyProfileResult_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("getUpdateBuddyProfileResult_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class isBuddyOnAirByMid_args : TBase
  {
    private string _buddyMid;

    public string BuddyMid
    {
      get
      {
        return _buddyMid;
      }
      set
      {
        __isset.buddyMid = true;
        this._buddyMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool buddyMid;
    }

    public isBuddyOnAirByMid_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 2:
              if (field.Type == TType.String) {
                BuddyMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("isBuddyOnAirByMid_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (BuddyMid != null && __isset.buddyMid) {
          field.Name = "buddyMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("isBuddyOnAirByMid_args(");
      bool __first = true;
      if (BuddyMid != null && __isset.buddyMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyMid: ");
        __sb.Append(BuddyMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class isBuddyOnAirByMid_result : TBase
  {
    private bool _success;
    private TalkException _e;

    public bool Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public isBuddyOnAirByMid_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Bool) {
                Success = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("isBuddyOnAirByMid_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          field.Name = "Success";
          field.Type = TType.Bool;
          field.ID = 0;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(Success);
          oprot.WriteFieldEnd();
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("isBuddyOnAirByMid_result(");
      bool __first = true;
      if (__isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class linkAndSendBuddyContentMessageToAllAsync_args : TBase
  {
    private string _requestId;
    private Message _msg;
    private string _sourceContentId;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Message Msg
    {
      get
      {
        return _msg;
      }
      set
      {
        __isset.msg = true;
        this._msg = value;
      }
    }

    public string SourceContentId
    {
      get
      {
        return _sourceContentId;
      }
      set
      {
        __isset.sourceContentId = true;
        this._sourceContentId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool msg;
      public bool sourceContentId;
    }

    public linkAndSendBuddyContentMessageToAllAsync_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                Msg = new Message();
                Msg.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                SourceContentId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("linkAndSendBuddyContentMessageToAllAsync_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Msg != null && __isset.msg) {
          field.Name = "msg";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          Msg.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (SourceContentId != null && __isset.sourceContentId) {
          field.Name = "sourceContentId";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(SourceContentId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("linkAndSendBuddyContentMessageToAllAsync_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Msg != null && __isset.msg) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Msg: ");
        __sb.Append(Msg== null ? "<null>" : Msg.ToString());
      }
      if (SourceContentId != null && __isset.sourceContentId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SourceContentId: ");
        __sb.Append(SourceContentId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class linkAndSendBuddyContentMessageToAllAsync_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public linkAndSendBuddyContentMessageToAllAsync_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("linkAndSendBuddyContentMessageToAllAsync_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("linkAndSendBuddyContentMessageToAllAsync_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class linkAndSendBuddyContentMessageToMids_args : TBase
  {
    private string _requestId;
    private Message _msg;
    private string _sourceContentId;
    private List<string> _mids;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Message Msg
    {
      get
      {
        return _msg;
      }
      set
      {
        __isset.msg = true;
        this._msg = value;
      }
    }

    public string SourceContentId
    {
      get
      {
        return _sourceContentId;
      }
      set
      {
        __isset.sourceContentId = true;
        this._sourceContentId = value;
      }
    }

    public List<string> Mids
    {
      get
      {
        return _mids;
      }
      set
      {
        __isset.mids = true;
        this._mids = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool msg;
      public bool sourceContentId;
      public bool mids;
    }

    public linkAndSendBuddyContentMessageToMids_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                Msg = new Message();
                Msg.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                SourceContentId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.List) {
                {
                  Mids = new List<string>();
                  TList _list674 = iprot.ReadListBegin();
                  for( int _i675 = 0; _i675 < _list674.Count; ++_i675)
                  {
                    string _elem676;
                    _elem676 = iprot.ReadString();
                    Mids.Add(_elem676);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("linkAndSendBuddyContentMessageToMids_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Msg != null && __isset.msg) {
          field.Name = "msg";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          Msg.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (SourceContentId != null && __isset.sourceContentId) {
          field.Name = "sourceContentId";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(SourceContentId);
          oprot.WriteFieldEnd();
        }
        if (Mids != null && __isset.mids) {
          field.Name = "mids";
          field.Type = TType.List;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, Mids.Count));
            foreach (string _iter677 in Mids)
            {
              oprot.WriteString(_iter677);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("linkAndSendBuddyContentMessageToMids_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Msg != null && __isset.msg) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Msg: ");
        __sb.Append(Msg== null ? "<null>" : Msg.ToString());
      }
      if (SourceContentId != null && __isset.sourceContentId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SourceContentId: ");
        __sb.Append(SourceContentId);
      }
      if (Mids != null && __isset.mids) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mids: ");
        __sb.Append(Mids);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class linkAndSendBuddyContentMessageToMids_result : TBase
  {
    private SendBuddyMessageResult _success;
    private TalkException _e;

    public SendBuddyMessageResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public linkAndSendBuddyContentMessageToMids_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new SendBuddyMessageResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("linkAndSendBuddyContentMessageToMids_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("linkAndSendBuddyContentMessageToMids_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class notifyBuddyBlocked_args : TBase
  {
    private string _buddyMid;
    private string _blockerMid;

    public string BuddyMid
    {
      get
      {
        return _buddyMid;
      }
      set
      {
        __isset.buddyMid = true;
        this._buddyMid = value;
      }
    }

    public string BlockerMid
    {
      get
      {
        return _blockerMid;
      }
      set
      {
        __isset.blockerMid = true;
        this._blockerMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool buddyMid;
      public bool blockerMid;
    }

    public notifyBuddyBlocked_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                BuddyMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                BlockerMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("notifyBuddyBlocked_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (BuddyMid != null && __isset.buddyMid) {
          field.Name = "buddyMid";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyMid);
          oprot.WriteFieldEnd();
        }
        if (BlockerMid != null && __isset.blockerMid) {
          field.Name = "blockerMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BlockerMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("notifyBuddyBlocked_args(");
      bool __first = true;
      if (BuddyMid != null && __isset.buddyMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyMid: ");
        __sb.Append(BuddyMid);
      }
      if (BlockerMid != null && __isset.blockerMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BlockerMid: ");
        __sb.Append(BlockerMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class notifyBuddyBlocked_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public notifyBuddyBlocked_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("notifyBuddyBlocked_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("notifyBuddyBlocked_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class notifyBuddyUnblocked_args : TBase
  {
    private string _buddyMid;
    private string _blockerMid;

    public string BuddyMid
    {
      get
      {
        return _buddyMid;
      }
      set
      {
        __isset.buddyMid = true;
        this._buddyMid = value;
      }
    }

    public string BlockerMid
    {
      get
      {
        return _blockerMid;
      }
      set
      {
        __isset.blockerMid = true;
        this._blockerMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool buddyMid;
      public bool blockerMid;
    }

    public notifyBuddyUnblocked_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                BuddyMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                BlockerMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("notifyBuddyUnblocked_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (BuddyMid != null && __isset.buddyMid) {
          field.Name = "buddyMid";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyMid);
          oprot.WriteFieldEnd();
        }
        if (BlockerMid != null && __isset.blockerMid) {
          field.Name = "blockerMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BlockerMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("notifyBuddyUnblocked_args(");
      bool __first = true;
      if (BuddyMid != null && __isset.buddyMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyMid: ");
        __sb.Append(BuddyMid);
      }
      if (BlockerMid != null && __isset.blockerMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BlockerMid: ");
        __sb.Append(BlockerMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class notifyBuddyUnblocked_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public notifyBuddyUnblocked_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("notifyBuddyUnblocked_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("notifyBuddyUnblocked_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class registerBuddy_args : TBase
  {
    private string _buddyId;
    private string _searchId;
    private string _displayName;
    private string _statusMeessage;
    private byte[] _picture;
    private Dictionary<string, string> _settings;

    public string BuddyId
    {
      get
      {
        return _buddyId;
      }
      set
      {
        __isset.buddyId = true;
        this._buddyId = value;
      }
    }

    public string SearchId
    {
      get
      {
        return _searchId;
      }
      set
      {
        __isset.searchId = true;
        this._searchId = value;
      }
    }

    public string DisplayName
    {
      get
      {
        return _displayName;
      }
      set
      {
        __isset.displayName = true;
        this._displayName = value;
      }
    }

    public string StatusMeessage
    {
      get
      {
        return _statusMeessage;
      }
      set
      {
        __isset.statusMeessage = true;
        this._statusMeessage = value;
      }
    }

    public byte[] Picture
    {
      get
      {
        return _picture;
      }
      set
      {
        __isset.picture = true;
        this._picture = value;
      }
    }

    public Dictionary<string, string> Settings
    {
      get
      {
        return _settings;
      }
      set
      {
        __isset.settings = true;
        this._settings = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool buddyId;
      public bool searchId;
      public bool displayName;
      public bool statusMeessage;
      public bool picture;
      public bool settings;
    }

    public registerBuddy_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 2:
              if (field.Type == TType.String) {
                BuddyId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                SearchId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.String) {
                DisplayName = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                StatusMeessage = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.String) {
                Picture = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.Map) {
                {
                  Settings = new Dictionary<string, string>();
                  TMap _map678 = iprot.ReadMapBegin();
                  for( int _i679 = 0; _i679 < _map678.Count; ++_i679)
                  {
                    string _key680;
                    string _val681;
                    _key680 = iprot.ReadString();
                    _val681 = iprot.ReadString();
                    Settings[_key680] = _val681;
                  }
                  iprot.ReadMapEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("registerBuddy_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (BuddyId != null && __isset.buddyId) {
          field.Name = "buddyId";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyId);
          oprot.WriteFieldEnd();
        }
        if (SearchId != null && __isset.searchId) {
          field.Name = "searchId";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(SearchId);
          oprot.WriteFieldEnd();
        }
        if (DisplayName != null && __isset.displayName) {
          field.Name = "displayName";
          field.Type = TType.String;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(DisplayName);
          oprot.WriteFieldEnd();
        }
        if (StatusMeessage != null && __isset.statusMeessage) {
          field.Name = "statusMeessage";
          field.Type = TType.String;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(StatusMeessage);
          oprot.WriteFieldEnd();
        }
        if (Picture != null && __isset.picture) {
          field.Name = "picture";
          field.Type = TType.String;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Picture);
          oprot.WriteFieldEnd();
        }
        if (Settings != null && __isset.settings) {
          field.Name = "settings";
          field.Type = TType.Map;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteMapBegin(new TMap(TType.String, TType.String, Settings.Count));
            foreach (string _iter682 in Settings.Keys)
            {
              oprot.WriteString(_iter682);
              oprot.WriteString(Settings[_iter682]);
            }
            oprot.WriteMapEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("registerBuddy_args(");
      bool __first = true;
      if (BuddyId != null && __isset.buddyId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyId: ");
        __sb.Append(BuddyId);
      }
      if (SearchId != null && __isset.searchId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SearchId: ");
        __sb.Append(SearchId);
      }
      if (DisplayName != null && __isset.displayName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DisplayName: ");
        __sb.Append(DisplayName);
      }
      if (StatusMeessage != null && __isset.statusMeessage) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusMeessage: ");
        __sb.Append(StatusMeessage);
      }
      if (Picture != null && __isset.picture) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Picture: ");
        __sb.Append(Picture);
      }
      if (Settings != null && __isset.settings) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Settings: ");
        __sb.Append(Settings);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class registerBuddy_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public registerBuddy_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("registerBuddy_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("registerBuddy_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class registerBuddyAdmin_args : TBase
  {
    private string _buddyId;
    private string _searchId;
    private string _displayName;
    private string _statusMessage;
    private byte[] _picture;

    public string BuddyId
    {
      get
      {
        return _buddyId;
      }
      set
      {
        __isset.buddyId = true;
        this._buddyId = value;
      }
    }

    public string SearchId
    {
      get
      {
        return _searchId;
      }
      set
      {
        __isset.searchId = true;
        this._searchId = value;
      }
    }

    public string DisplayName
    {
      get
      {
        return _displayName;
      }
      set
      {
        __isset.displayName = true;
        this._displayName = value;
      }
    }

    public string StatusMessage
    {
      get
      {
        return _statusMessage;
      }
      set
      {
        __isset.statusMessage = true;
        this._statusMessage = value;
      }
    }

    public byte[] Picture
    {
      get
      {
        return _picture;
      }
      set
      {
        __isset.picture = true;
        this._picture = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool buddyId;
      public bool searchId;
      public bool displayName;
      public bool statusMessage;
      public bool picture;
    }

    public registerBuddyAdmin_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 2:
              if (field.Type == TType.String) {
                BuddyId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                SearchId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.String) {
                DisplayName = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                StatusMessage = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.String) {
                Picture = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("registerBuddyAdmin_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (BuddyId != null && __isset.buddyId) {
          field.Name = "buddyId";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyId);
          oprot.WriteFieldEnd();
        }
        if (SearchId != null && __isset.searchId) {
          field.Name = "searchId";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(SearchId);
          oprot.WriteFieldEnd();
        }
        if (DisplayName != null && __isset.displayName) {
          field.Name = "displayName";
          field.Type = TType.String;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(DisplayName);
          oprot.WriteFieldEnd();
        }
        if (StatusMessage != null && __isset.statusMessage) {
          field.Name = "statusMessage";
          field.Type = TType.String;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(StatusMessage);
          oprot.WriteFieldEnd();
        }
        if (Picture != null && __isset.picture) {
          field.Name = "picture";
          field.Type = TType.String;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Picture);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("registerBuddyAdmin_args(");
      bool __first = true;
      if (BuddyId != null && __isset.buddyId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyId: ");
        __sb.Append(BuddyId);
      }
      if (SearchId != null && __isset.searchId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SearchId: ");
        __sb.Append(SearchId);
      }
      if (DisplayName != null && __isset.displayName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DisplayName: ");
        __sb.Append(DisplayName);
      }
      if (StatusMessage != null && __isset.statusMessage) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusMessage: ");
        __sb.Append(StatusMessage);
      }
      if (Picture != null && __isset.picture) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Picture: ");
        __sb.Append(Picture);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class registerBuddyAdmin_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public registerBuddyAdmin_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("registerBuddyAdmin_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("registerBuddyAdmin_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class reissueContactTicket_args : TBase
  {
    private long _expirationTime;
    private int _maxUseCount;

    public long ExpirationTime
    {
      get
      {
        return _expirationTime;
      }
      set
      {
        __isset.expirationTime = true;
        this._expirationTime = value;
      }
    }

    public int MaxUseCount
    {
      get
      {
        return _maxUseCount;
      }
      set
      {
        __isset.maxUseCount = true;
        this._maxUseCount = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool expirationTime;
      public bool maxUseCount;
    }

    public reissueContactTicket_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 3:
              if (field.Type == TType.I64) {
                ExpirationTime = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.I32) {
                MaxUseCount = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("reissueContactTicket_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (__isset.expirationTime) {
          field.Name = "expirationTime";
          field.Type = TType.I64;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(ExpirationTime);
          oprot.WriteFieldEnd();
        }
        if (__isset.maxUseCount) {
          field.Name = "maxUseCount";
          field.Type = TType.I32;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(MaxUseCount);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("reissueContactTicket_args(");
      bool __first = true;
      if (__isset.expirationTime) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ExpirationTime: ");
        __sb.Append(ExpirationTime);
      }
      if (__isset.maxUseCount) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("MaxUseCount: ");
        __sb.Append(MaxUseCount);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class reissueContactTicket_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public reissueContactTicket_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("reissueContactTicket_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("reissueContactTicket_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class removeBuddyMember_args : TBase
  {
    private string _requestId;
    private string _userMid;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public string UserMid
    {
      get
      {
        return _userMid;
      }
      set
      {
        __isset.userMid = true;
        this._userMid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool userMid;
    }

    public removeBuddyMember_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                UserMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("removeBuddyMember_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (UserMid != null && __isset.userMid) {
          field.Name = "userMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(UserMid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("removeBuddyMember_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (UserMid != null && __isset.userMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UserMid: ");
        __sb.Append(UserMid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class removeBuddyMember_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public removeBuddyMember_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("removeBuddyMember_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("removeBuddyMember_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class removeBuddyMembers_args : TBase
  {
    private string _requestId;
    private List<string> _userMids;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public List<string> UserMids
    {
      get
      {
        return _userMids;
      }
      set
      {
        __isset.userMids = true;
        this._userMids = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool userMids;
    }

    public removeBuddyMembers_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.List) {
                {
                  UserMids = new List<string>();
                  TList _list683 = iprot.ReadListBegin();
                  for( int _i684 = 0; _i684 < _list683.Count; ++_i684)
                  {
                    string _elem685;
                    _elem685 = iprot.ReadString();
                    UserMids.Add(_elem685);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("removeBuddyMembers_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (UserMids != null && __isset.userMids) {
          field.Name = "userMids";
          field.Type = TType.List;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, UserMids.Count));
            foreach (string _iter686 in UserMids)
            {
              oprot.WriteString(_iter686);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("removeBuddyMembers_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (UserMids != null && __isset.userMids) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UserMids: ");
        __sb.Append(UserMids);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class removeBuddyMembers_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public removeBuddyMembers_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("removeBuddyMembers_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("removeBuddyMembers_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyContentMessageToAll_args : TBase
  {
    private string _requestId;
    private Message _msg;
    private byte[] _content;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Message Msg
    {
      get
      {
        return _msg;
      }
      set
      {
        __isset.msg = true;
        this._msg = value;
      }
    }

    public byte[] Content
    {
      get
      {
        return _content;
      }
      set
      {
        __isset.content = true;
        this._content = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool msg;
      public bool content;
    }

    public sendBuddyContentMessageToAll_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                Msg = new Message();
                Msg.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                Content = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyContentMessageToAll_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Msg != null && __isset.msg) {
          field.Name = "msg";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          Msg.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (Content != null && __isset.content) {
          field.Name = "content";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Content);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyContentMessageToAll_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Msg != null && __isset.msg) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Msg: ");
        __sb.Append(Msg== null ? "<null>" : Msg.ToString());
      }
      if (Content != null && __isset.content) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Content: ");
        __sb.Append(Content);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyContentMessageToAll_result : TBase
  {
    private SendBuddyMessageResult _success;
    private TalkException _e;

    public SendBuddyMessageResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public sendBuddyContentMessageToAll_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new SendBuddyMessageResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyContentMessageToAll_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyContentMessageToAll_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyContentMessageToAllAsync_args : TBase
  {
    private string _requestId;
    private Message _msg;
    private byte[] _content;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Message Msg
    {
      get
      {
        return _msg;
      }
      set
      {
        __isset.msg = true;
        this._msg = value;
      }
    }

    public byte[] Content
    {
      get
      {
        return _content;
      }
      set
      {
        __isset.content = true;
        this._content = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool msg;
      public bool content;
    }

    public sendBuddyContentMessageToAllAsync_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                Msg = new Message();
                Msg.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                Content = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyContentMessageToAllAsync_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Msg != null && __isset.msg) {
          field.Name = "msg";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          Msg.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (Content != null && __isset.content) {
          field.Name = "content";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Content);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyContentMessageToAllAsync_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Msg != null && __isset.msg) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Msg: ");
        __sb.Append(Msg== null ? "<null>" : Msg.ToString());
      }
      if (Content != null && __isset.content) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Content: ");
        __sb.Append(Content);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyContentMessageToAllAsync_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public sendBuddyContentMessageToAllAsync_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyContentMessageToAllAsync_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyContentMessageToAllAsync_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyContentMessageToMids_args : TBase
  {
    private string _requestId;
    private Message _msg;
    private byte[] _content;
    private List<string> _mids;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Message Msg
    {
      get
      {
        return _msg;
      }
      set
      {
        __isset.msg = true;
        this._msg = value;
      }
    }

    public byte[] Content
    {
      get
      {
        return _content;
      }
      set
      {
        __isset.content = true;
        this._content = value;
      }
    }

    public List<string> Mids
    {
      get
      {
        return _mids;
      }
      set
      {
        __isset.mids = true;
        this._mids = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool msg;
      public bool content;
      public bool mids;
    }

    public sendBuddyContentMessageToMids_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                Msg = new Message();
                Msg.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                Content = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.List) {
                {
                  Mids = new List<string>();
                  TList _list687 = iprot.ReadListBegin();
                  for( int _i688 = 0; _i688 < _list687.Count; ++_i688)
                  {
                    string _elem689;
                    _elem689 = iprot.ReadString();
                    Mids.Add(_elem689);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyContentMessageToMids_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Msg != null && __isset.msg) {
          field.Name = "msg";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          Msg.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (Content != null && __isset.content) {
          field.Name = "content";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Content);
          oprot.WriteFieldEnd();
        }
        if (Mids != null && __isset.mids) {
          field.Name = "mids";
          field.Type = TType.List;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, Mids.Count));
            foreach (string _iter690 in Mids)
            {
              oprot.WriteString(_iter690);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyContentMessageToMids_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Msg != null && __isset.msg) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Msg: ");
        __sb.Append(Msg== null ? "<null>" : Msg.ToString());
      }
      if (Content != null && __isset.content) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Content: ");
        __sb.Append(Content);
      }
      if (Mids != null && __isset.mids) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mids: ");
        __sb.Append(Mids);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyContentMessageToMids_result : TBase
  {
    private SendBuddyMessageResult _success;
    private TalkException _e;

    public SendBuddyMessageResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public sendBuddyContentMessageToMids_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new SendBuddyMessageResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyContentMessageToMids_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyContentMessageToMids_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyContentMessageToMidsAsync_args : TBase
  {
    private string _requestId;
    private Message _msg;
    private byte[] _content;
    private List<string> _mids;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Message Msg
    {
      get
      {
        return _msg;
      }
      set
      {
        __isset.msg = true;
        this._msg = value;
      }
    }

    public byte[] Content
    {
      get
      {
        return _content;
      }
      set
      {
        __isset.content = true;
        this._content = value;
      }
    }

    public List<string> Mids
    {
      get
      {
        return _mids;
      }
      set
      {
        __isset.mids = true;
        this._mids = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool msg;
      public bool content;
      public bool mids;
    }

    public sendBuddyContentMessageToMidsAsync_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                Msg = new Message();
                Msg.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                Content = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.List) {
                {
                  Mids = new List<string>();
                  TList _list691 = iprot.ReadListBegin();
                  for( int _i692 = 0; _i692 < _list691.Count; ++_i692)
                  {
                    string _elem693;
                    _elem693 = iprot.ReadString();
                    Mids.Add(_elem693);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyContentMessageToMidsAsync_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Msg != null && __isset.msg) {
          field.Name = "msg";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          Msg.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (Content != null && __isset.content) {
          field.Name = "content";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Content);
          oprot.WriteFieldEnd();
        }
        if (Mids != null && __isset.mids) {
          field.Name = "mids";
          field.Type = TType.List;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, Mids.Count));
            foreach (string _iter694 in Mids)
            {
              oprot.WriteString(_iter694);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyContentMessageToMidsAsync_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Msg != null && __isset.msg) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Msg: ");
        __sb.Append(Msg== null ? "<null>" : Msg.ToString());
      }
      if (Content != null && __isset.content) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Content: ");
        __sb.Append(Content);
      }
      if (Mids != null && __isset.mids) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mids: ");
        __sb.Append(Mids);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyContentMessageToMidsAsync_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public sendBuddyContentMessageToMidsAsync_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyContentMessageToMidsAsync_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyContentMessageToMidsAsync_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyMessageToAll_args : TBase
  {
    private string _requestId;
    private Message _msg;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Message Msg
    {
      get
      {
        return _msg;
      }
      set
      {
        __isset.msg = true;
        this._msg = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool msg;
    }

    public sendBuddyMessageToAll_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                Msg = new Message();
                Msg.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyMessageToAll_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Msg != null && __isset.msg) {
          field.Name = "msg";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          Msg.Write(oprot);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyMessageToAll_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Msg != null && __isset.msg) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Msg: ");
        __sb.Append(Msg== null ? "<null>" : Msg.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyMessageToAll_result : TBase
  {
    private SendBuddyMessageResult _success;
    private TalkException _e;

    public SendBuddyMessageResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public sendBuddyMessageToAll_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new SendBuddyMessageResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyMessageToAll_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyMessageToAll_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyMessageToAllAsync_args : TBase
  {
    private string _requestId;
    private Message _msg;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Message Msg
    {
      get
      {
        return _msg;
      }
      set
      {
        __isset.msg = true;
        this._msg = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool msg;
    }

    public sendBuddyMessageToAllAsync_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                Msg = new Message();
                Msg.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyMessageToAllAsync_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Msg != null && __isset.msg) {
          field.Name = "msg";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          Msg.Write(oprot);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyMessageToAllAsync_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Msg != null && __isset.msg) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Msg: ");
        __sb.Append(Msg== null ? "<null>" : Msg.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyMessageToAllAsync_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public sendBuddyMessageToAllAsync_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyMessageToAllAsync_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyMessageToAllAsync_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyMessageToMids_args : TBase
  {
    private string _requestId;
    private Message _msg;
    private List<string> _mids;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Message Msg
    {
      get
      {
        return _msg;
      }
      set
      {
        __isset.msg = true;
        this._msg = value;
      }
    }

    public List<string> Mids
    {
      get
      {
        return _mids;
      }
      set
      {
        __isset.mids = true;
        this._mids = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool msg;
      public bool mids;
    }

    public sendBuddyMessageToMids_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                Msg = new Message();
                Msg.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.List) {
                {
                  Mids = new List<string>();
                  TList _list695 = iprot.ReadListBegin();
                  for( int _i696 = 0; _i696 < _list695.Count; ++_i696)
                  {
                    string _elem697;
                    _elem697 = iprot.ReadString();
                    Mids.Add(_elem697);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyMessageToMids_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Msg != null && __isset.msg) {
          field.Name = "msg";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          Msg.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (Mids != null && __isset.mids) {
          field.Name = "mids";
          field.Type = TType.List;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, Mids.Count));
            foreach (string _iter698 in Mids)
            {
              oprot.WriteString(_iter698);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyMessageToMids_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Msg != null && __isset.msg) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Msg: ");
        __sb.Append(Msg== null ? "<null>" : Msg.ToString());
      }
      if (Mids != null && __isset.mids) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mids: ");
        __sb.Append(Mids);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyMessageToMids_result : TBase
  {
    private SendBuddyMessageResult _success;
    private TalkException _e;

    public SendBuddyMessageResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public sendBuddyMessageToMids_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new SendBuddyMessageResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyMessageToMids_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyMessageToMids_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyMessageToMidsAsync_args : TBase
  {
    private string _requestId;
    private Message _msg;
    private List<string> _mids;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Message Msg
    {
      get
      {
        return _msg;
      }
      set
      {
        __isset.msg = true;
        this._msg = value;
      }
    }

    public List<string> Mids
    {
      get
      {
        return _mids;
      }
      set
      {
        __isset.mids = true;
        this._mids = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool msg;
      public bool mids;
    }

    public sendBuddyMessageToMidsAsync_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                Msg = new Message();
                Msg.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.List) {
                {
                  Mids = new List<string>();
                  TList _list699 = iprot.ReadListBegin();
                  for( int _i700 = 0; _i700 < _list699.Count; ++_i700)
                  {
                    string _elem701;
                    _elem701 = iprot.ReadString();
                    Mids.Add(_elem701);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyMessageToMidsAsync_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Msg != null && __isset.msg) {
          field.Name = "msg";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          Msg.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (Mids != null && __isset.mids) {
          field.Name = "mids";
          field.Type = TType.List;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.String, Mids.Count));
            foreach (string _iter702 in Mids)
            {
              oprot.WriteString(_iter702);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyMessageToMidsAsync_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Msg != null && __isset.msg) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Msg: ");
        __sb.Append(Msg== null ? "<null>" : Msg.ToString());
      }
      if (Mids != null && __isset.mids) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mids: ");
        __sb.Append(Mids);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendBuddyMessageToMidsAsync_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public sendBuddyMessageToMidsAsync_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendBuddyMessageToMidsAsync_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendBuddyMessageToMidsAsync_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendIndividualEventToAllAsync_args : TBase
  {
    private string _requestId;
    private string _buddyMid;
    private NotificationStatus _notificationStatus;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public string BuddyMid
    {
      get
      {
        return _buddyMid;
      }
      set
      {
        __isset.buddyMid = true;
        this._buddyMid = value;
      }
    }

    /// <summary>
    /// 
    /// <seealso cref="NotificationStatus"/>
    /// </summary>
    public NotificationStatus NotificationStatus
    {
      get
      {
        return _notificationStatus;
      }
      set
      {
        __isset.notificationStatus = true;
        this._notificationStatus = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool buddyMid;
      public bool notificationStatus;
    }

    public sendIndividualEventToAllAsync_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                BuddyMid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.I32) {
                NotificationStatus = (NotificationStatus)iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendIndividualEventToAllAsync_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (BuddyMid != null && __isset.buddyMid) {
          field.Name = "buddyMid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(BuddyMid);
          oprot.WriteFieldEnd();
        }
        if (__isset.notificationStatus) {
          field.Name = "notificationStatus";
          field.Type = TType.I32;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32((int)NotificationStatus);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendIndividualEventToAllAsync_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (BuddyMid != null && __isset.buddyMid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("BuddyMid: ");
        __sb.Append(BuddyMid);
      }
      if (__isset.notificationStatus) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NotificationStatus: ");
        __sb.Append(NotificationStatus);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class sendIndividualEventToAllAsync_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public sendIndividualEventToAllAsync_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("sendIndividualEventToAllAsync_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("sendIndividualEventToAllAsync_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class setBuddyOnAir_args : TBase
  {
    private string _requestId;
    private bool _onAir;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public bool OnAir
    {
      get
      {
        return _onAir;
      }
      set
      {
        __isset.onAir = true;
        this._onAir = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool onAir;
    }

    public setBuddyOnAir_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Bool) {
                OnAir = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("setBuddyOnAir_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (__isset.onAir) {
          field.Name = "onAir";
          field.Type = TType.Bool;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(OnAir);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("setBuddyOnAir_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (__isset.onAir) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("OnAir: ");
        __sb.Append(OnAir);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class setBuddyOnAir_result : TBase
  {
    private SetBuddyOnAirResult _success;
    private TalkException _e;

    public SetBuddyOnAirResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public setBuddyOnAir_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new SetBuddyOnAirResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("setBuddyOnAir_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("setBuddyOnAir_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class setBuddyOnAirAsync_args : TBase
  {
    private string _requestId;
    private bool _onAir;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public bool OnAir
    {
      get
      {
        return _onAir;
      }
      set
      {
        __isset.onAir = true;
        this._onAir = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool onAir;
    }

    public setBuddyOnAirAsync_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Bool) {
                OnAir = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("setBuddyOnAirAsync_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (__isset.onAir) {
          field.Name = "onAir";
          field.Type = TType.Bool;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(OnAir);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("setBuddyOnAirAsync_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (__isset.onAir) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("OnAir: ");
        __sb.Append(OnAir);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class setBuddyOnAirAsync_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public setBuddyOnAirAsync_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("setBuddyOnAirAsync_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("setBuddyOnAirAsync_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class storeMessage_args : TBase
  {
    private string _requestId;
    private BuddyMessageRequest _messageRequest;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public BuddyMessageRequest MessageRequest
    {
      get
      {
        return _messageRequest;
      }
      set
      {
        __isset.messageRequest = true;
        this._messageRequest = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool messageRequest;
    }

    public storeMessage_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                MessageRequest = new BuddyMessageRequest();
                MessageRequest.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("storeMessage_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (MessageRequest != null && __isset.messageRequest) {
          field.Name = "messageRequest";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          MessageRequest.Write(oprot);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("storeMessage_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (MessageRequest != null && __isset.messageRequest) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("MessageRequest: ");
        __sb.Append(MessageRequest== null ? "<null>" : MessageRequest.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class storeMessage_result : TBase
  {
    private SendBuddyMessageResult _success;
    private TalkException _e;

    public SendBuddyMessageResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public storeMessage_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new SendBuddyMessageResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("storeMessage_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("storeMessage_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class unblockBuddyMember_args : TBase
  {
    private string _requestId;
    private string _mid;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public string Mid
    {
      get
      {
        return _mid;
      }
      set
      {
        __isset.mid = true;
        this._mid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool mid;
    }

    public unblockBuddyMember_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                Mid = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("unblockBuddyMember_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Mid != null && __isset.mid) {
          field.Name = "mid";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Mid);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("unblockBuddyMember_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Mid != null && __isset.mid) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Mid: ");
        __sb.Append(Mid);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class unblockBuddyMember_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public unblockBuddyMember_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("unblockBuddyMember_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("unblockBuddyMember_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class unregisterBuddy_args : TBase
  {
    private string _requestId;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
    }

    public unregisterBuddy_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("unregisterBuddy_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("unregisterBuddy_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class unregisterBuddy_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public unregisterBuddy_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("unregisterBuddy_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("unregisterBuddy_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class unregisterBuddyAdmin_args : TBase
  {
    private string _requestId;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
    }

    public unregisterBuddyAdmin_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("unregisterBuddyAdmin_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("unregisterBuddyAdmin_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class unregisterBuddyAdmin_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public unregisterBuddyAdmin_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("unregisterBuddyAdmin_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("unregisterBuddyAdmin_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyAdminProfileAttribute_args : TBase
  {
    private string _requestId;
    private Dictionary<string, string> _attributes;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Dictionary<string, string> Attributes
    {
      get
      {
        return _attributes;
      }
      set
      {
        __isset.attributes = true;
        this._attributes = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool attributes;
    }

    public updateBuddyAdminProfileAttribute_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Map) {
                {
                  Attributes = new Dictionary<string, string>();
                  TMap _map703 = iprot.ReadMapBegin();
                  for( int _i704 = 0; _i704 < _map703.Count; ++_i704)
                  {
                    string _key705;
                    string _val706;
                    _key705 = iprot.ReadString();
                    _val706 = iprot.ReadString();
                    Attributes[_key705] = _val706;
                  }
                  iprot.ReadMapEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyAdminProfileAttribute_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Attributes != null && __isset.attributes) {
          field.Name = "attributes";
          field.Type = TType.Map;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteMapBegin(new TMap(TType.String, TType.String, Attributes.Count));
            foreach (string _iter707 in Attributes.Keys)
            {
              oprot.WriteString(_iter707);
              oprot.WriteString(Attributes[_iter707]);
            }
            oprot.WriteMapEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyAdminProfileAttribute_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Attributes != null && __isset.attributes) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Attributes: ");
        __sb.Append(Attributes);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyAdminProfileAttribute_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public updateBuddyAdminProfileAttribute_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyAdminProfileAttribute_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyAdminProfileAttribute_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyAdminProfileImage_args : TBase
  {
    private string _requestId;
    private byte[] _picture;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public byte[] Picture
    {
      get
      {
        return _picture;
      }
      set
      {
        __isset.picture = true;
        this._picture = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool picture;
    }

    public updateBuddyAdminProfileImage_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                Picture = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyAdminProfileImage_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Picture != null && __isset.picture) {
          field.Name = "picture";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Picture);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyAdminProfileImage_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Picture != null && __isset.picture) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Picture: ");
        __sb.Append(Picture);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyAdminProfileImage_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public updateBuddyAdminProfileImage_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyAdminProfileImage_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyAdminProfileImage_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyProfileAttributes_args : TBase
  {
    private string _requestId;
    private Dictionary<string, string> _attributes;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Dictionary<string, string> Attributes
    {
      get
      {
        return _attributes;
      }
      set
      {
        __isset.attributes = true;
        this._attributes = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool attributes;
    }

    public updateBuddyProfileAttributes_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Map) {
                {
                  Attributes = new Dictionary<string, string>();
                  TMap _map708 = iprot.ReadMapBegin();
                  for( int _i709 = 0; _i709 < _map708.Count; ++_i709)
                  {
                    string _key710;
                    string _val711;
                    _key710 = iprot.ReadString();
                    _val711 = iprot.ReadString();
                    Attributes[_key710] = _val711;
                  }
                  iprot.ReadMapEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyProfileAttributes_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Attributes != null && __isset.attributes) {
          field.Name = "attributes";
          field.Type = TType.Map;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteMapBegin(new TMap(TType.String, TType.String, Attributes.Count));
            foreach (string _iter712 in Attributes.Keys)
            {
              oprot.WriteString(_iter712);
              oprot.WriteString(Attributes[_iter712]);
            }
            oprot.WriteMapEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyProfileAttributes_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Attributes != null && __isset.attributes) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Attributes: ");
        __sb.Append(Attributes);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyProfileAttributes_result : TBase
  {
    private UpdateBuddyProfileResult _success;
    private TalkException _e;

    public UpdateBuddyProfileResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public updateBuddyProfileAttributes_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new UpdateBuddyProfileResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyProfileAttributes_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyProfileAttributes_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyProfileAttributesAsync_args : TBase
  {
    private string _requestId;
    private Dictionary<string, string> _attributes;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public Dictionary<string, string> Attributes
    {
      get
      {
        return _attributes;
      }
      set
      {
        __isset.attributes = true;
        this._attributes = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool attributes;
    }

    public updateBuddyProfileAttributesAsync_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Map) {
                {
                  Attributes = new Dictionary<string, string>();
                  TMap _map713 = iprot.ReadMapBegin();
                  for( int _i714 = 0; _i714 < _map713.Count; ++_i714)
                  {
                    string _key715;
                    string _val716;
                    _key715 = iprot.ReadString();
                    _val716 = iprot.ReadString();
                    Attributes[_key715] = _val716;
                  }
                  iprot.ReadMapEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyProfileAttributesAsync_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Attributes != null && __isset.attributes) {
          field.Name = "attributes";
          field.Type = TType.Map;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteMapBegin(new TMap(TType.String, TType.String, Attributes.Count));
            foreach (string _iter717 in Attributes.Keys)
            {
              oprot.WriteString(_iter717);
              oprot.WriteString(Attributes[_iter717]);
            }
            oprot.WriteMapEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyProfileAttributesAsync_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Attributes != null && __isset.attributes) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Attributes: ");
        __sb.Append(Attributes);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyProfileAttributesAsync_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public updateBuddyProfileAttributesAsync_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyProfileAttributesAsync_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyProfileAttributesAsync_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyProfileImage_args : TBase
  {
    private string _requestId;
    private byte[] _image;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public byte[] Image
    {
      get
      {
        return _image;
      }
      set
      {
        __isset.image = true;
        this._image = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool image;
    }

    public updateBuddyProfileImage_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                Image = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyProfileImage_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Image != null && __isset.image) {
          field.Name = "image";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Image);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyProfileImage_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Image != null && __isset.image) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Image: ");
        __sb.Append(Image);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyProfileImage_result : TBase
  {
    private UpdateBuddyProfileResult _success;
    private TalkException _e;

    public UpdateBuddyProfileResult Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public updateBuddyProfileImage_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new UpdateBuddyProfileResult();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyProfileImage_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyProfileImage_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success== null ? "<null>" : Success.ToString());
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyProfileImageAsync_args : TBase
  {
    private string _requestId;
    private byte[] _image;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public byte[] Image
    {
      get
      {
        return _image;
      }
      set
      {
        __isset.image = true;
        this._image = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool image;
    }

    public updateBuddyProfileImageAsync_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                Image = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyProfileImageAsync_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (Image != null && __isset.image) {
          field.Name = "image";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Image);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyProfileImageAsync_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (Image != null && __isset.image) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Image: ");
        __sb.Append(Image);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddyProfileImageAsync_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public updateBuddyProfileImageAsync_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddyProfileImageAsync_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddyProfileImageAsync_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddySearchId_args : TBase
  {
    private string _requestId;
    private string _searchId;

    public string RequestId
    {
      get
      {
        return _requestId;
      }
      set
      {
        __isset.requestId = true;
        this._requestId = value;
      }
    }

    public string SearchId
    {
      get
      {
        return _searchId;
      }
      set
      {
        __isset.searchId = true;
        this._searchId = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool requestId;
      public bool searchId;
    }

    public updateBuddySearchId_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                RequestId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                SearchId = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddySearchId_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (RequestId != null && __isset.requestId) {
          field.Name = "requestId";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(RequestId);
          oprot.WriteFieldEnd();
        }
        if (SearchId != null && __isset.searchId) {
          field.Name = "searchId";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(SearchId);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddySearchId_args(");
      bool __first = true;
      if (RequestId != null && __isset.requestId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RequestId: ");
        __sb.Append(RequestId);
      }
      if (SearchId != null && __isset.searchId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SearchId: ");
        __sb.Append(SearchId);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddySearchId_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public updateBuddySearchId_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddySearchId_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddySearchId_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddySettings_args : TBase
  {
    private Dictionary<string, string> _settings;

    public Dictionary<string, string> Settings
    {
      get
      {
        return _settings;
      }
      set
      {
        __isset.settings = true;
        this._settings = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool settings;
    }

    public updateBuddySettings_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 2:
              if (field.Type == TType.Map) {
                {
                  Settings = new Dictionary<string, string>();
                  TMap _map718 = iprot.ReadMapBegin();
                  for( int _i719 = 0; _i719 < _map718.Count; ++_i719)
                  {
                    string _key720;
                    string _val721;
                    _key720 = iprot.ReadString();
                    _val721 = iprot.ReadString();
                    Settings[_key720] = _val721;
                  }
                  iprot.ReadMapEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddySettings_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (Settings != null && __isset.settings) {
          field.Name = "settings";
          field.Type = TType.Map;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteMapBegin(new TMap(TType.String, TType.String, Settings.Count));
            foreach (string _iter722 in Settings.Keys)
            {
              oprot.WriteString(_iter722);
              oprot.WriteString(Settings[_iter722]);
            }
            oprot.WriteMapEnd();
          }
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddySettings_args(");
      bool __first = true;
      if (Settings != null && __isset.settings) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Settings: ");
        __sb.Append(Settings);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class updateBuddySettings_result : TBase
  {
    private TalkException _e;

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool e;
    }

    public updateBuddySettings_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("updateBuddySettings_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("updateBuddySettings_result(");
      bool __first = true;
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class uploadBuddyContent_args : TBase
  {
    private ContentType _contentType;
    private byte[] _content;

    /// <summary>
    /// 
    /// <seealso cref="ContentType"/>
    /// </summary>
    public ContentType ContentType
    {
      get
      {
        return _contentType;
      }
      set
      {
        __isset.contentType = true;
        this._contentType = value;
      }
    }

    public byte[] Content
    {
      get
      {
        return _content;
      }
      set
      {
        __isset.content = true;
        this._content = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool contentType;
      public bool content;
    }

    public uploadBuddyContent_args() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 2:
              if (field.Type == TType.I32) {
                ContentType = (ContentType)iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                Content = iprot.ReadBinary();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("uploadBuddyContent_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (__isset.contentType) {
          field.Name = "contentType";
          field.Type = TType.I32;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32((int)ContentType);
          oprot.WriteFieldEnd();
        }
        if (Content != null && __isset.content) {
          field.Name = "content";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteBinary(Content);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("uploadBuddyContent_args(");
      bool __first = true;
      if (__isset.contentType) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ContentType: ");
        __sb.Append(ContentType);
      }
      if (Content != null && __isset.content) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Content: ");
        __sb.Append(Content);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }


  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class uploadBuddyContent_result : TBase
  {
    private string _success;
    private TalkException _e;

    public string Success
    {
      get
      {
        return _success;
      }
      set
      {
        __isset.success = true;
        this._success = value;
      }
    }

    public TalkException E
    {
      get
      {
        return _e;
      }
      set
      {
        __isset.e = true;
        this._e = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool success;
      public bool e;
    }

    public uploadBuddyContent_result() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.String) {
                Success = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 1:
              if (field.Type == TType.Struct) {
                E = new TalkException();
                E.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("uploadBuddyContent_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.String;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Success);
            oprot.WriteFieldEnd();
          }
        } else if (this.__isset.e) {
          if (E != null) {
            field.Name = "E";
            field.Type = TType.Struct;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            E.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("uploadBuddyContent_result(");
      bool __first = true;
      if (Success != null && __isset.success) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Success: ");
        __sb.Append(Success);
      }
      if (E != null && __isset.e) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("E: ");
        __sb.Append(E== null ? "<null>" : E.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
