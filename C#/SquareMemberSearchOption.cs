/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class SquareMemberSearchOption : TBase
{
  private SquareMembershipState _membershipState;
  private THashSet<SquareMemberRole> _memberRoles;
  private string _displayName;
  private BooleanState _ableToReceiveMessage;
  private BooleanState _ableToReceiveFriendRequest;
  private string _chatMidToExcludeMembers;
  private bool _includingMe;

  /// <summary>
  /// 
  /// <seealso cref="SquareMembershipState"/>
  /// </summary>
  public SquareMembershipState MembershipState
  {
    get
    {
      return _membershipState;
    }
    set
    {
      __isset.membershipState = true;
      this._membershipState = value;
    }
  }

  public THashSet<SquareMemberRole> MemberRoles
  {
    get
    {
      return _memberRoles;
    }
    set
    {
      __isset.memberRoles = true;
      this._memberRoles = value;
    }
  }

  public string DisplayName
  {
    get
    {
      return _displayName;
    }
    set
    {
      __isset.displayName = true;
      this._displayName = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="BooleanState"/>
  /// </summary>
  public BooleanState AbleToReceiveMessage
  {
    get
    {
      return _ableToReceiveMessage;
    }
    set
    {
      __isset.ableToReceiveMessage = true;
      this._ableToReceiveMessage = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="BooleanState"/>
  /// </summary>
  public BooleanState AbleToReceiveFriendRequest
  {
    get
    {
      return _ableToReceiveFriendRequest;
    }
    set
    {
      __isset.ableToReceiveFriendRequest = true;
      this._ableToReceiveFriendRequest = value;
    }
  }

  public string ChatMidToExcludeMembers
  {
    get
    {
      return _chatMidToExcludeMembers;
    }
    set
    {
      __isset.chatMidToExcludeMembers = true;
      this._chatMidToExcludeMembers = value;
    }
  }

  public bool IncludingMe
  {
    get
    {
      return _includingMe;
    }
    set
    {
      __isset.includingMe = true;
      this._includingMe = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool membershipState;
    public bool memberRoles;
    public bool displayName;
    public bool ableToReceiveMessage;
    public bool ableToReceiveFriendRequest;
    public bool chatMidToExcludeMembers;
    public bool includingMe;
  }

  public SquareMemberSearchOption() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              MembershipState = (SquareMembershipState)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Set) {
              {
                MemberRoles = new THashSet<SquareMemberRole>();
                TSet _set417 = iprot.ReadSetBegin();
                for( int _i418 = 0; _i418 < _set417.Count; ++_i418)
                {
                  SquareMemberRole _elem419;
                  _elem419 = (SquareMemberRole)iprot.ReadI32();
                  MemberRoles.Add(_elem419);
                }
                iprot.ReadSetEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              DisplayName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              AbleToReceiveMessage = (BooleanState)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              AbleToReceiveFriendRequest = (BooleanState)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              ChatMidToExcludeMembers = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Bool) {
              IncludingMe = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("SquareMemberSearchOption");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.membershipState) {
        field.Name = "membershipState";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)MembershipState);
        oprot.WriteFieldEnd();
      }
      if (MemberRoles != null && __isset.memberRoles) {
        field.Name = "memberRoles";
        field.Type = TType.Set;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteSetBegin(new TSet(TType.I32, MemberRoles.Count));
          foreach (SquareMemberRole _iter420 in MemberRoles)
          {
            oprot.WriteI32((int)_iter420);
          }
          oprot.WriteSetEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (DisplayName != null && __isset.displayName) {
        field.Name = "displayName";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DisplayName);
        oprot.WriteFieldEnd();
      }
      if (__isset.ableToReceiveMessage) {
        field.Name = "ableToReceiveMessage";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)AbleToReceiveMessage);
        oprot.WriteFieldEnd();
      }
      if (__isset.ableToReceiveFriendRequest) {
        field.Name = "ableToReceiveFriendRequest";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)AbleToReceiveFriendRequest);
        oprot.WriteFieldEnd();
      }
      if (ChatMidToExcludeMembers != null && __isset.chatMidToExcludeMembers) {
        field.Name = "chatMidToExcludeMembers";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ChatMidToExcludeMembers);
        oprot.WriteFieldEnd();
      }
      if (__isset.includingMe) {
        field.Name = "includingMe";
        field.Type = TType.Bool;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(IncludingMe);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("SquareMemberSearchOption(");
    bool __first = true;
    if (__isset.membershipState) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("MembershipState: ");
      __sb.Append(MembershipState);
    }
    if (MemberRoles != null && __isset.memberRoles) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("MemberRoles: ");
      __sb.Append(MemberRoles);
    }
    if (DisplayName != null && __isset.displayName) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("DisplayName: ");
      __sb.Append(DisplayName);
    }
    if (__isset.ableToReceiveMessage) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("AbleToReceiveMessage: ");
      __sb.Append(AbleToReceiveMessage);
    }
    if (__isset.ableToReceiveFriendRequest) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("AbleToReceiveFriendRequest: ");
      __sb.Append(AbleToReceiveFriendRequest);
    }
    if (ChatMidToExcludeMembers != null && __isset.chatMidToExcludeMembers) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ChatMidToExcludeMembers: ");
      __sb.Append(ChatMidToExcludeMembers);
    }
    if (__isset.includingMe) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("IncludingMe: ");
      __sb.Append(IncludingMe);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

