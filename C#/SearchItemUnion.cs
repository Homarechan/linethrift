/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class SearchItemUnion : TBase
{
  private CategoryItem _categoryItem;
  private SpotItem _spotItem;
  private ProductSearchSummary _productItem;
  private ServiceItem _serviceItem;
  private YellowpageItem _yellowpageItem;
  private BuddySearchResult _oaItem;
  private GeoAddressItem _geoAddressItem;
  private ShortcutItem _shortcutItem;
  private SquareInfo _squareItem;
  private SQCat _squareCategoryItem;

  public CategoryItem CategoryItem
  {
    get
    {
      return _categoryItem;
    }
    set
    {
      __isset.categoryItem = true;
      this._categoryItem = value;
    }
  }

  public SpotItem SpotItem
  {
    get
    {
      return _spotItem;
    }
    set
    {
      __isset.spotItem = true;
      this._spotItem = value;
    }
  }

  public ProductSearchSummary ProductItem
  {
    get
    {
      return _productItem;
    }
    set
    {
      __isset.productItem = true;
      this._productItem = value;
    }
  }

  public ServiceItem ServiceItem
  {
    get
    {
      return _serviceItem;
    }
    set
    {
      __isset.serviceItem = true;
      this._serviceItem = value;
    }
  }

  public YellowpageItem YellowpageItem
  {
    get
    {
      return _yellowpageItem;
    }
    set
    {
      __isset.yellowpageItem = true;
      this._yellowpageItem = value;
    }
  }

  public BuddySearchResult OaItem
  {
    get
    {
      return _oaItem;
    }
    set
    {
      __isset.oaItem = true;
      this._oaItem = value;
    }
  }

  public GeoAddressItem GeoAddressItem
  {
    get
    {
      return _geoAddressItem;
    }
    set
    {
      __isset.geoAddressItem = true;
      this._geoAddressItem = value;
    }
  }

  public ShortcutItem ShortcutItem
  {
    get
    {
      return _shortcutItem;
    }
    set
    {
      __isset.shortcutItem = true;
      this._shortcutItem = value;
    }
  }

  public SquareInfo SquareItem
  {
    get
    {
      return _squareItem;
    }
    set
    {
      __isset.squareItem = true;
      this._squareItem = value;
    }
  }

  public SQCat SquareCategoryItem
  {
    get
    {
      return _squareCategoryItem;
    }
    set
    {
      __isset.squareCategoryItem = true;
      this._squareCategoryItem = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool categoryItem;
    public bool spotItem;
    public bool productItem;
    public bool serviceItem;
    public bool yellowpageItem;
    public bool oaItem;
    public bool geoAddressItem;
    public bool shortcutItem;
    public bool squareItem;
    public bool squareCategoryItem;
  }

  public SearchItemUnion() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct) {
              CategoryItem = new CategoryItem();
              CategoryItem.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Struct) {
              SpotItem = new SpotItem();
              SpotItem.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              ProductItem = new ProductSearchSummary();
              ProductItem.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Struct) {
              ServiceItem = new ServiceItem();
              ServiceItem.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Struct) {
              YellowpageItem = new YellowpageItem();
              YellowpageItem.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Struct) {
              OaItem = new BuddySearchResult();
              OaItem.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Struct) {
              GeoAddressItem = new GeoAddressItem();
              GeoAddressItem.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.Struct) {
              ShortcutItem = new ShortcutItem();
              ShortcutItem.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.Struct) {
              SquareItem = new SquareInfo();
              SquareItem.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.Struct) {
              SquareCategoryItem = new SQCat();
              SquareCategoryItem.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("SearchItemUnion");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (CategoryItem != null && __isset.categoryItem) {
        field.Name = "categoryItem";
        field.Type = TType.Struct;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        CategoryItem.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (SpotItem != null && __isset.spotItem) {
        field.Name = "spotItem";
        field.Type = TType.Struct;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        SpotItem.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (ProductItem != null && __isset.productItem) {
        field.Name = "productItem";
        field.Type = TType.Struct;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        ProductItem.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (ServiceItem != null && __isset.serviceItem) {
        field.Name = "serviceItem";
        field.Type = TType.Struct;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        ServiceItem.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (YellowpageItem != null && __isset.yellowpageItem) {
        field.Name = "yellowpageItem";
        field.Type = TType.Struct;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        YellowpageItem.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (OaItem != null && __isset.oaItem) {
        field.Name = "oaItem";
        field.Type = TType.Struct;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        OaItem.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (GeoAddressItem != null && __isset.geoAddressItem) {
        field.Name = "geoAddressItem";
        field.Type = TType.Struct;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        GeoAddressItem.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (ShortcutItem != null && __isset.shortcutItem) {
        field.Name = "shortcutItem";
        field.Type = TType.Struct;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        ShortcutItem.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (SquareItem != null && __isset.squareItem) {
        field.Name = "squareItem";
        field.Type = TType.Struct;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        SquareItem.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (SquareCategoryItem != null && __isset.squareCategoryItem) {
        field.Name = "squareCategoryItem";
        field.Type = TType.Struct;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        SquareCategoryItem.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("SearchItemUnion(");
    bool __first = true;
    if (CategoryItem != null && __isset.categoryItem) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("CategoryItem: ");
      __sb.Append(CategoryItem== null ? "<null>" : CategoryItem.ToString());
    }
    if (SpotItem != null && __isset.spotItem) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("SpotItem: ");
      __sb.Append(SpotItem);
    }
    if (ProductItem != null && __isset.productItem) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ProductItem: ");
      __sb.Append(ProductItem== null ? "<null>" : ProductItem.ToString());
    }
    if (ServiceItem != null && __isset.serviceItem) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ServiceItem: ");
      __sb.Append(ServiceItem== null ? "<null>" : ServiceItem.ToString());
    }
    if (YellowpageItem != null && __isset.yellowpageItem) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("YellowpageItem: ");
      __sb.Append(YellowpageItem== null ? "<null>" : YellowpageItem.ToString());
    }
    if (OaItem != null && __isset.oaItem) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("OaItem: ");
      __sb.Append(OaItem== null ? "<null>" : OaItem.ToString());
    }
    if (GeoAddressItem != null && __isset.geoAddressItem) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("GeoAddressItem: ");
      __sb.Append(GeoAddressItem== null ? "<null>" : GeoAddressItem.ToString());
    }
    if (ShortcutItem != null && __isset.shortcutItem) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ShortcutItem: ");
      __sb.Append(ShortcutItem== null ? "<null>" : ShortcutItem.ToString());
    }
    if (SquareItem != null && __isset.squareItem) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("SquareItem: ");
      __sb.Append(SquareItem);
    }
    if (SquareCategoryItem != null && __isset.squareCategoryItem) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("SquareCategoryItem: ");
      __sb.Append(SquareCategoryItem== null ? "<null>" : SquareCategoryItem.ToString());
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

