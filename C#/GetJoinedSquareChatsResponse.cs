/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class GetJoinedSquareChatsResponse : TBase
{
  private List<SquareChat> _chats;
  private Dictionary<string, SquareChatMember> _chatMembers;
  private Dictionary<string, SquareChatStatus> _statuses;
  private string _continuationToken;

  public List<SquareChat> Chats
  {
    get
    {
      return _chats;
    }
    set
    {
      __isset.chats = true;
      this._chats = value;
    }
  }

  public Dictionary<string, SquareChatMember> ChatMembers
  {
    get
    {
      return _chatMembers;
    }
    set
    {
      __isset.chatMembers = true;
      this._chatMembers = value;
    }
  }

  public Dictionary<string, SquareChatStatus> Statuses
  {
    get
    {
      return _statuses;
    }
    set
    {
      __isset.statuses = true;
      this._statuses = value;
    }
  }

  public string ContinuationToken
  {
    get
    {
      return _continuationToken;
    }
    set
    {
      __isset.continuationToken = true;
      this._continuationToken = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool chats;
    public bool chatMembers;
    public bool statuses;
    public bool continuationToken;
  }

  public GetJoinedSquareChatsResponse() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                Chats = new List<SquareChat>();
                TList _list591 = iprot.ReadListBegin();
                for( int _i592 = 0; _i592 < _list591.Count; ++_i592)
                {
                  SquareChat _elem593;
                  _elem593 = new SquareChat();
                  _elem593.Read(iprot);
                  Chats.Add(_elem593);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Map) {
              {
                ChatMembers = new Dictionary<string, SquareChatMember>();
                TMap _map594 = iprot.ReadMapBegin();
                for( int _i595 = 0; _i595 < _map594.Count; ++_i595)
                {
                  string _key596;
                  SquareChatMember _val597;
                  _key596 = iprot.ReadString();
                  _val597 = new SquareChatMember();
                  _val597.Read(iprot);
                  ChatMembers[_key596] = _val597;
                }
                iprot.ReadMapEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Map) {
              {
                Statuses = new Dictionary<string, SquareChatStatus>();
                TMap _map598 = iprot.ReadMapBegin();
                for( int _i599 = 0; _i599 < _map598.Count; ++_i599)
                {
                  string _key600;
                  SquareChatStatus _val601;
                  _key600 = iprot.ReadString();
                  _val601 = new SquareChatStatus();
                  _val601.Read(iprot);
                  Statuses[_key600] = _val601;
                }
                iprot.ReadMapEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              ContinuationToken = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("GetJoinedSquareChatsResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Chats != null && __isset.chats) {
        field.Name = "chats";
        field.Type = TType.List;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, Chats.Count));
          foreach (SquareChat _iter602 in Chats)
          {
            _iter602.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (ChatMembers != null && __isset.chatMembers) {
        field.Name = "chatMembers";
        field.Type = TType.Map;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteMapBegin(new TMap(TType.String, TType.Struct, ChatMembers.Count));
          foreach (string _iter603 in ChatMembers.Keys)
          {
            oprot.WriteString(_iter603);
            ChatMembers[_iter603].Write(oprot);
          }
          oprot.WriteMapEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (Statuses != null && __isset.statuses) {
        field.Name = "statuses";
        field.Type = TType.Map;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteMapBegin(new TMap(TType.String, TType.Struct, Statuses.Count));
          foreach (string _iter604 in Statuses.Keys)
          {
            oprot.WriteString(_iter604);
            Statuses[_iter604].Write(oprot);
          }
          oprot.WriteMapEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (ContinuationToken != null && __isset.continuationToken) {
        field.Name = "continuationToken";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ContinuationToken);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("GetJoinedSquareChatsResponse(");
    bool __first = true;
    if (Chats != null && __isset.chats) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Chats: ");
      __sb.Append(Chats);
    }
    if (ChatMembers != null && __isset.chatMembers) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ChatMembers: ");
      __sb.Append(ChatMembers);
    }
    if (Statuses != null && __isset.statuses) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Statuses: ");
      __sb.Append(Statuses);
    }
    if (ContinuationToken != null && __isset.continuationToken) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ContinuationToken: ");
      __sb.Append(ContinuationToken);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

