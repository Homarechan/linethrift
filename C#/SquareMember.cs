/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class SquareMember : TBase
{
  private string _squareMemberMid;
  private string _squareMid;
  private string _displayName;
  private string _profileImageObsHash;
  private bool _ableToReceiveMessage;
  private SquareMembershipState _membershipState;
  private SquareMemberRole _role;
  private long _revision;
  private SquarePreference _preference;
  private string _joinMessage;

  public string SquareMemberMid
  {
    get
    {
      return _squareMemberMid;
    }
    set
    {
      __isset.squareMemberMid = true;
      this._squareMemberMid = value;
    }
  }

  public string SquareMid
  {
    get
    {
      return _squareMid;
    }
    set
    {
      __isset.squareMid = true;
      this._squareMid = value;
    }
  }

  public string DisplayName
  {
    get
    {
      return _displayName;
    }
    set
    {
      __isset.displayName = true;
      this._displayName = value;
    }
  }

  public string ProfileImageObsHash
  {
    get
    {
      return _profileImageObsHash;
    }
    set
    {
      __isset.profileImageObsHash = true;
      this._profileImageObsHash = value;
    }
  }

  public bool AbleToReceiveMessage
  {
    get
    {
      return _ableToReceiveMessage;
    }
    set
    {
      __isset.ableToReceiveMessage = true;
      this._ableToReceiveMessage = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="SquareMembershipState"/>
  /// </summary>
  public SquareMembershipState MembershipState
  {
    get
    {
      return _membershipState;
    }
    set
    {
      __isset.membershipState = true;
      this._membershipState = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="SquareMemberRole"/>
  /// </summary>
  public SquareMemberRole Role
  {
    get
    {
      return _role;
    }
    set
    {
      __isset.role = true;
      this._role = value;
    }
  }

  public long Revision
  {
    get
    {
      return _revision;
    }
    set
    {
      __isset.revision = true;
      this._revision = value;
    }
  }

  public SquarePreference Preference
  {
    get
    {
      return _preference;
    }
    set
    {
      __isset.preference = true;
      this._preference = value;
    }
  }

  public string JoinMessage
  {
    get
    {
      return _joinMessage;
    }
    set
    {
      __isset.joinMessage = true;
      this._joinMessage = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool squareMemberMid;
    public bool squareMid;
    public bool displayName;
    public bool profileImageObsHash;
    public bool ableToReceiveMessage;
    public bool membershipState;
    public bool role;
    public bool revision;
    public bool preference;
    public bool joinMessage;
  }

  public SquareMember() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              SquareMemberMid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              SquareMid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              DisplayName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              ProfileImageObsHash = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Bool) {
              AbleToReceiveMessage = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              MembershipState = (SquareMembershipState)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              Role = (SquareMemberRole)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I64) {
              Revision = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.Struct) {
              Preference = new SquarePreference();
              Preference.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              JoinMessage = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("SquareMember");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (SquareMemberMid != null && __isset.squareMemberMid) {
        field.Name = "squareMemberMid";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SquareMemberMid);
        oprot.WriteFieldEnd();
      }
      if (SquareMid != null && __isset.squareMid) {
        field.Name = "squareMid";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(SquareMid);
        oprot.WriteFieldEnd();
      }
      if (DisplayName != null && __isset.displayName) {
        field.Name = "displayName";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DisplayName);
        oprot.WriteFieldEnd();
      }
      if (ProfileImageObsHash != null && __isset.profileImageObsHash) {
        field.Name = "profileImageObsHash";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ProfileImageObsHash);
        oprot.WriteFieldEnd();
      }
      if (__isset.ableToReceiveMessage) {
        field.Name = "ableToReceiveMessage";
        field.Type = TType.Bool;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(AbleToReceiveMessage);
        oprot.WriteFieldEnd();
      }
      if (__isset.membershipState) {
        field.Name = "membershipState";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)MembershipState);
        oprot.WriteFieldEnd();
      }
      if (__isset.role) {
        field.Name = "role";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Role);
        oprot.WriteFieldEnd();
      }
      if (__isset.revision) {
        field.Name = "revision";
        field.Type = TType.I64;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Revision);
        oprot.WriteFieldEnd();
      }
      if (Preference != null && __isset.preference) {
        field.Name = "preference";
        field.Type = TType.Struct;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        Preference.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (JoinMessage != null && __isset.joinMessage) {
        field.Name = "joinMessage";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(JoinMessage);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("SquareMember(");
    bool __first = true;
    if (SquareMemberMid != null && __isset.squareMemberMid) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("SquareMemberMid: ");
      __sb.Append(SquareMemberMid);
    }
    if (SquareMid != null && __isset.squareMid) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("SquareMid: ");
      __sb.Append(SquareMid);
    }
    if (DisplayName != null && __isset.displayName) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("DisplayName: ");
      __sb.Append(DisplayName);
    }
    if (ProfileImageObsHash != null && __isset.profileImageObsHash) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ProfileImageObsHash: ");
      __sb.Append(ProfileImageObsHash);
    }
    if (__isset.ableToReceiveMessage) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("AbleToReceiveMessage: ");
      __sb.Append(AbleToReceiveMessage);
    }
    if (__isset.membershipState) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("MembershipState: ");
      __sb.Append(MembershipState);
    }
    if (__isset.role) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Role: ");
      __sb.Append(Role);
    }
    if (__isset.revision) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Revision: ");
      __sb.Append(Revision);
    }
    if (Preference != null && __isset.preference) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Preference: ");
      __sb.Append(Preference== null ? "<null>" : Preference.ToString());
    }
    if (JoinMessage != null && __isset.joinMessage) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("JoinMessage: ");
      __sb.Append(JoinMessage);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

