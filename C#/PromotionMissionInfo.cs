/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class PromotionMissionInfo : TBase
{
  private PMType _promotionMissionType;
  private bool _missionCompleted;
  private string _downloadUrl;
  private string _customUrlSchema;

  /// <summary>
  /// 
  /// <seealso cref="PMType"/>
  /// </summary>
  public PMType PromotionMissionType
  {
    get
    {
      return _promotionMissionType;
    }
    set
    {
      __isset.promotionMissionType = true;
      this._promotionMissionType = value;
    }
  }

  public bool MissionCompleted
  {
    get
    {
      return _missionCompleted;
    }
    set
    {
      __isset.missionCompleted = true;
      this._missionCompleted = value;
    }
  }

  public string DownloadUrl
  {
    get
    {
      return _downloadUrl;
    }
    set
    {
      __isset.downloadUrl = true;
      this._downloadUrl = value;
    }
  }

  public string CustomUrlSchema
  {
    get
    {
      return _customUrlSchema;
    }
    set
    {
      __isset.customUrlSchema = true;
      this._customUrlSchema = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool promotionMissionType;
    public bool missionCompleted;
    public bool downloadUrl;
    public bool customUrlSchema;
  }

  public PromotionMissionInfo() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              PromotionMissionType = (PMType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Bool) {
              MissionCompleted = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              DownloadUrl = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              CustomUrlSchema = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("PromotionMissionInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.promotionMissionType) {
        field.Name = "promotionMissionType";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)PromotionMissionType);
        oprot.WriteFieldEnd();
      }
      if (__isset.missionCompleted) {
        field.Name = "missionCompleted";
        field.Type = TType.Bool;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(MissionCompleted);
        oprot.WriteFieldEnd();
      }
      if (DownloadUrl != null && __isset.downloadUrl) {
        field.Name = "downloadUrl";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DownloadUrl);
        oprot.WriteFieldEnd();
      }
      if (CustomUrlSchema != null && __isset.customUrlSchema) {
        field.Name = "customUrlSchema";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CustomUrlSchema);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("PromotionMissionInfo(");
    bool __first = true;
    if (__isset.promotionMissionType) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("PromotionMissionType: ");
      __sb.Append(PromotionMissionType);
    }
    if (__isset.missionCompleted) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("MissionCompleted: ");
      __sb.Append(MissionCompleted);
    }
    if (DownloadUrl != null && __isset.downloadUrl) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("DownloadUrl: ");
      __sb.Append(DownloadUrl);
    }
    if (CustomUrlSchema != null && __isset.customUrlSchema) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("CustomUrlSchema: ");
      __sb.Append(CustomUrlSchema);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

