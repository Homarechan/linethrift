/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class PaidCallHistory : TBase
{
  private long _seq;
  private PaidCallType _type;
  private string _dialedNumber;
  private string _calledNumber;
  private string _toMid;
  private string _toName;
  private long _setupTime;
  private long _startTime;
  private long _endTime;
  private long _duration;
  private int _terminate;
  private PaidCallProductType _productType;
  private int _charge;
  private string _unit;
  private string _result;

  public long Seq
  {
    get
    {
      return _seq;
    }
    set
    {
      __isset.seq = true;
      this._seq = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="PaidCallType"/>
  /// </summary>
  public PaidCallType Type
  {
    get
    {
      return _type;
    }
    set
    {
      __isset.type = true;
      this._type = value;
    }
  }

  public string DialedNumber
  {
    get
    {
      return _dialedNumber;
    }
    set
    {
      __isset.dialedNumber = true;
      this._dialedNumber = value;
    }
  }

  public string CalledNumber
  {
    get
    {
      return _calledNumber;
    }
    set
    {
      __isset.calledNumber = true;
      this._calledNumber = value;
    }
  }

  public string ToMid
  {
    get
    {
      return _toMid;
    }
    set
    {
      __isset.toMid = true;
      this._toMid = value;
    }
  }

  public string ToName
  {
    get
    {
      return _toName;
    }
    set
    {
      __isset.toName = true;
      this._toName = value;
    }
  }

  public long SetupTime
  {
    get
    {
      return _setupTime;
    }
    set
    {
      __isset.setupTime = true;
      this._setupTime = value;
    }
  }

  public long StartTime
  {
    get
    {
      return _startTime;
    }
    set
    {
      __isset.startTime = true;
      this._startTime = value;
    }
  }

  public long EndTime
  {
    get
    {
      return _endTime;
    }
    set
    {
      __isset.endTime = true;
      this._endTime = value;
    }
  }

  public long Duration
  {
    get
    {
      return _duration;
    }
    set
    {
      __isset.duration = true;
      this._duration = value;
    }
  }

  public int Terminate
  {
    get
    {
      return _terminate;
    }
    set
    {
      __isset.terminate = true;
      this._terminate = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="PaidCallProductType"/>
  /// </summary>
  public PaidCallProductType ProductType
  {
    get
    {
      return _productType;
    }
    set
    {
      __isset.productType = true;
      this._productType = value;
    }
  }

  public int Charge
  {
    get
    {
      return _charge;
    }
    set
    {
      __isset.charge = true;
      this._charge = value;
    }
  }

  public string Unit
  {
    get
    {
      return _unit;
    }
    set
    {
      __isset.unit = true;
      this._unit = value;
    }
  }

  public string Result
  {
    get
    {
      return _result;
    }
    set
    {
      __isset.result = true;
      this._result = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool seq;
    public bool type;
    public bool dialedNumber;
    public bool calledNumber;
    public bool toMid;
    public bool toName;
    public bool setupTime;
    public bool startTime;
    public bool endTime;
    public bool duration;
    public bool terminate;
    public bool productType;
    public bool charge;
    public bool unit;
    public bool result;
  }

  public PaidCallHistory() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I64) {
              Seq = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              Type = (PaidCallType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              DialedNumber = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              CalledNumber = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              ToMid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              ToName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I64) {
              SetupTime = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I64) {
              StartTime = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I64) {
              EndTime = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I64) {
              Duration = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              Terminate = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I32) {
              ProductType = (PaidCallProductType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.I32) {
              Charge = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.String) {
              Unit = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.String) {
              Result = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("PaidCallHistory");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.seq) {
        field.Name = "seq";
        field.Type = TType.I64;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Seq);
        oprot.WriteFieldEnd();
      }
      if (__isset.type) {
        field.Name = "type";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Type);
        oprot.WriteFieldEnd();
      }
      if (DialedNumber != null && __isset.dialedNumber) {
        field.Name = "dialedNumber";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DialedNumber);
        oprot.WriteFieldEnd();
      }
      if (CalledNumber != null && __isset.calledNumber) {
        field.Name = "calledNumber";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CalledNumber);
        oprot.WriteFieldEnd();
      }
      if (ToMid != null && __isset.toMid) {
        field.Name = "toMid";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ToMid);
        oprot.WriteFieldEnd();
      }
      if (ToName != null && __isset.toName) {
        field.Name = "toName";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ToName);
        oprot.WriteFieldEnd();
      }
      if (__isset.setupTime) {
        field.Name = "setupTime";
        field.Type = TType.I64;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(SetupTime);
        oprot.WriteFieldEnd();
      }
      if (__isset.startTime) {
        field.Name = "startTime";
        field.Type = TType.I64;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(StartTime);
        oprot.WriteFieldEnd();
      }
      if (__isset.endTime) {
        field.Name = "endTime";
        field.Type = TType.I64;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(EndTime);
        oprot.WriteFieldEnd();
      }
      if (__isset.duration) {
        field.Name = "duration";
        field.Type = TType.I64;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Duration);
        oprot.WriteFieldEnd();
      }
      if (__isset.terminate) {
        field.Name = "terminate";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Terminate);
        oprot.WriteFieldEnd();
      }
      if (__isset.productType) {
        field.Name = "productType";
        field.Type = TType.I32;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)ProductType);
        oprot.WriteFieldEnd();
      }
      if (__isset.charge) {
        field.Name = "charge";
        field.Type = TType.I32;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Charge);
        oprot.WriteFieldEnd();
      }
      if (Unit != null && __isset.unit) {
        field.Name = "unit";
        field.Type = TType.String;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Unit);
        oprot.WriteFieldEnd();
      }
      if (Result != null && __isset.result) {
        field.Name = "result";
        field.Type = TType.String;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Result);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("PaidCallHistory(");
    bool __first = true;
    if (__isset.seq) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Seq: ");
      __sb.Append(Seq);
    }
    if (__isset.type) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Type: ");
      __sb.Append(Type);
    }
    if (DialedNumber != null && __isset.dialedNumber) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("DialedNumber: ");
      __sb.Append(DialedNumber);
    }
    if (CalledNumber != null && __isset.calledNumber) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("CalledNumber: ");
      __sb.Append(CalledNumber);
    }
    if (ToMid != null && __isset.toMid) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ToMid: ");
      __sb.Append(ToMid);
    }
    if (ToName != null && __isset.toName) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ToName: ");
      __sb.Append(ToName);
    }
    if (__isset.setupTime) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("SetupTime: ");
      __sb.Append(SetupTime);
    }
    if (__isset.startTime) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("StartTime: ");
      __sb.Append(StartTime);
    }
    if (__isset.endTime) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("EndTime: ");
      __sb.Append(EndTime);
    }
    if (__isset.duration) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Duration: ");
      __sb.Append(Duration);
    }
    if (__isset.terminate) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Terminate: ");
      __sb.Append(Terminate);
    }
    if (__isset.productType) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ProductType: ");
      __sb.Append(ProductType);
    }
    if (__isset.charge) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Charge: ");
      __sb.Append(Charge);
    }
    if (Unit != null && __isset.unit) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Unit: ");
      __sb.Append(Unit);
    }
    if (Result != null && __isset.result) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Result: ");
      __sb.Append(Result);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

