/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class GetJoinableSquareChatsResponse : TBase
{
  private List<SquareChat> _squareChats;
  private string _continuationToken;
  private int _totalSquareChatCount;
  private Dictionary<string, SquareChatStatus> _squareChatStatuses;

  public List<SquareChat> SquareChats
  {
    get
    {
      return _squareChats;
    }
    set
    {
      __isset.squareChats = true;
      this._squareChats = value;
    }
  }

  public string ContinuationToken
  {
    get
    {
      return _continuationToken;
    }
    set
    {
      __isset.continuationToken = true;
      this._continuationToken = value;
    }
  }

  public int TotalSquareChatCount
  {
    get
    {
      return _totalSquareChatCount;
    }
    set
    {
      __isset.totalSquareChatCount = true;
      this._totalSquareChatCount = value;
    }
  }

  public Dictionary<string, SquareChatStatus> SquareChatStatuses
  {
    get
    {
      return _squareChatStatuses;
    }
    set
    {
      __isset.squareChatStatuses = true;
      this._squareChatStatuses = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool squareChats;
    public bool continuationToken;
    public bool totalSquareChatCount;
    public bool squareChatStatuses;
  }

  public GetJoinableSquareChatsResponse() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                SquareChats = new List<SquareChat>();
                TList _list408 = iprot.ReadListBegin();
                for( int _i409 = 0; _i409 < _list408.Count; ++_i409)
                {
                  SquareChat _elem410;
                  _elem410 = new SquareChat();
                  _elem410.Read(iprot);
                  SquareChats.Add(_elem410);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              ContinuationToken = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              TotalSquareChatCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Map) {
              {
                SquareChatStatuses = new Dictionary<string, SquareChatStatus>();
                TMap _map411 = iprot.ReadMapBegin();
                for( int _i412 = 0; _i412 < _map411.Count; ++_i412)
                {
                  string _key413;
                  SquareChatStatus _val414;
                  _key413 = iprot.ReadString();
                  _val414 = new SquareChatStatus();
                  _val414.Read(iprot);
                  SquareChatStatuses[_key413] = _val414;
                }
                iprot.ReadMapEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("GetJoinableSquareChatsResponse");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (SquareChats != null && __isset.squareChats) {
        field.Name = "squareChats";
        field.Type = TType.List;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, SquareChats.Count));
          foreach (SquareChat _iter415 in SquareChats)
          {
            _iter415.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (ContinuationToken != null && __isset.continuationToken) {
        field.Name = "continuationToken";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ContinuationToken);
        oprot.WriteFieldEnd();
      }
      if (__isset.totalSquareChatCount) {
        field.Name = "totalSquareChatCount";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TotalSquareChatCount);
        oprot.WriteFieldEnd();
      }
      if (SquareChatStatuses != null && __isset.squareChatStatuses) {
        field.Name = "squareChatStatuses";
        field.Type = TType.Map;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteMapBegin(new TMap(TType.String, TType.Struct, SquareChatStatuses.Count));
          foreach (string _iter416 in SquareChatStatuses.Keys)
          {
            oprot.WriteString(_iter416);
            SquareChatStatuses[_iter416].Write(oprot);
          }
          oprot.WriteMapEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("GetJoinableSquareChatsResponse(");
    bool __first = true;
    if (SquareChats != null && __isset.squareChats) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("SquareChats: ");
      __sb.Append(SquareChats);
    }
    if (ContinuationToken != null && __isset.continuationToken) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ContinuationToken: ");
      __sb.Append(ContinuationToken);
    }
    if (__isset.totalSquareChatCount) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("TotalSquareChatCount: ");
      __sb.Append(TotalSquareChatCount);
    }
    if (SquareChatStatuses != null && __isset.squareChatStatuses) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("SquareChatStatuses: ");
      __sb.Append(SquareChatStatuses);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

