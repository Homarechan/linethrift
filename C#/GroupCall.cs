/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class GroupCall : TBase
{
  private bool _online;
  private string _chatMid;
  private string _hostMids;
  private List<string> _memberMids;
  private long _started;
  private GroupCallMediaType _mediaType;

  public bool Online
  {
    get
    {
      return _online;
    }
    set
    {
      __isset.online = true;
      this._online = value;
    }
  }

  public string ChatMid
  {
    get
    {
      return _chatMid;
    }
    set
    {
      __isset.chatMid = true;
      this._chatMid = value;
    }
  }

  public string HostMids
  {
    get
    {
      return _hostMids;
    }
    set
    {
      __isset.hostMids = true;
      this._hostMids = value;
    }
  }

  public List<string> MemberMids
  {
    get
    {
      return _memberMids;
    }
    set
    {
      __isset.memberMids = true;
      this._memberMids = value;
    }
  }

  public long Started
  {
    get
    {
      return _started;
    }
    set
    {
      __isset.started = true;
      this._started = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="GroupCallMediaType"/>
  /// </summary>
  public GroupCallMediaType MediaType
  {
    get
    {
      return _mediaType;
    }
    set
    {
      __isset.mediaType = true;
      this._mediaType = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool online;
    public bool chatMid;
    public bool hostMids;
    public bool memberMids;
    public bool started;
    public bool mediaType;
  }

  public GroupCall() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Bool) {
              Online = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              ChatMid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              HostMids = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.List) {
              {
                MemberMids = new List<string>();
                TList _list541 = iprot.ReadListBegin();
                for( int _i542 = 0; _i542 < _list541.Count; ++_i542)
                {
                  string _elem543;
                  _elem543 = iprot.ReadString();
                  MemberMids.Add(_elem543);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I64) {
              Started = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              MediaType = (GroupCallMediaType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("GroupCall");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.online) {
        field.Name = "online";
        field.Type = TType.Bool;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Online);
        oprot.WriteFieldEnd();
      }
      if (ChatMid != null && __isset.chatMid) {
        field.Name = "chatMid";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ChatMid);
        oprot.WriteFieldEnd();
      }
      if (HostMids != null && __isset.hostMids) {
        field.Name = "hostMids";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(HostMids);
        oprot.WriteFieldEnd();
      }
      if (MemberMids != null && __isset.memberMids) {
        field.Name = "memberMids";
        field.Type = TType.List;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.String, MemberMids.Count));
          foreach (string _iter544 in MemberMids)
          {
            oprot.WriteString(_iter544);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.started) {
        field.Name = "started";
        field.Type = TType.I64;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Started);
        oprot.WriteFieldEnd();
      }
      if (__isset.mediaType) {
        field.Name = "mediaType";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)MediaType);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("GroupCall(");
    bool __first = true;
    if (__isset.online) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Online: ");
      __sb.Append(Online);
    }
    if (ChatMid != null && __isset.chatMid) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ChatMid: ");
      __sb.Append(ChatMid);
    }
    if (HostMids != null && __isset.hostMids) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("HostMids: ");
      __sb.Append(HostMids);
    }
    if (MemberMids != null && __isset.memberMids) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("MemberMids: ");
      __sb.Append(MemberMids);
    }
    if (__isset.started) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Started: ");
      __sb.Append(Started);
    }
    if (__isset.mediaType) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("MediaType: ");
      __sb.Append(MediaType);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

