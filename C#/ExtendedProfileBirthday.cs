/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class ExtendedProfileBirthday : TBase
{
  private string _year;
  private PrivacyLevelType _yearPrivacyLevelType;
  private bool _yearEnabled;
  private string _day;
  private PrivacyLevelType _dayPrivacyLevelType;
  private bool _dayEnabled;

  public string Year
  {
    get
    {
      return _year;
    }
    set
    {
      __isset.year = true;
      this._year = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="PrivacyLevelType"/>
  /// </summary>
  public PrivacyLevelType YearPrivacyLevelType
  {
    get
    {
      return _yearPrivacyLevelType;
    }
    set
    {
      __isset.yearPrivacyLevelType = true;
      this._yearPrivacyLevelType = value;
    }
  }

  public bool YearEnabled
  {
    get
    {
      return _yearEnabled;
    }
    set
    {
      __isset.yearEnabled = true;
      this._yearEnabled = value;
    }
  }

  public string Day
  {
    get
    {
      return _day;
    }
    set
    {
      __isset.day = true;
      this._day = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="PrivacyLevelType"/>
  /// </summary>
  public PrivacyLevelType DayPrivacyLevelType
  {
    get
    {
      return _dayPrivacyLevelType;
    }
    set
    {
      __isset.dayPrivacyLevelType = true;
      this._dayPrivacyLevelType = value;
    }
  }

  public bool DayEnabled
  {
    get
    {
      return _dayEnabled;
    }
    set
    {
      __isset.dayEnabled = true;
      this._dayEnabled = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool year;
    public bool yearPrivacyLevelType;
    public bool yearEnabled;
    public bool day;
    public bool dayPrivacyLevelType;
    public bool dayEnabled;
  }

  public ExtendedProfileBirthday() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              Year = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              YearPrivacyLevelType = (PrivacyLevelType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Bool) {
              YearEnabled = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              Day = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              DayPrivacyLevelType = (PrivacyLevelType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Bool) {
              DayEnabled = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("ExtendedProfileBirthday");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Year != null && __isset.year) {
        field.Name = "year";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Year);
        oprot.WriteFieldEnd();
      }
      if (__isset.yearPrivacyLevelType) {
        field.Name = "yearPrivacyLevelType";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)YearPrivacyLevelType);
        oprot.WriteFieldEnd();
      }
      if (__isset.yearEnabled) {
        field.Name = "yearEnabled";
        field.Type = TType.Bool;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(YearEnabled);
        oprot.WriteFieldEnd();
      }
      if (Day != null && __isset.day) {
        field.Name = "day";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Day);
        oprot.WriteFieldEnd();
      }
      if (__isset.dayPrivacyLevelType) {
        field.Name = "dayPrivacyLevelType";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)DayPrivacyLevelType);
        oprot.WriteFieldEnd();
      }
      if (__isset.dayEnabled) {
        field.Name = "dayEnabled";
        field.Type = TType.Bool;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(DayEnabled);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("ExtendedProfileBirthday(");
    bool __first = true;
    if (Year != null && __isset.year) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Year: ");
      __sb.Append(Year);
    }
    if (__isset.yearPrivacyLevelType) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("YearPrivacyLevelType: ");
      __sb.Append(YearPrivacyLevelType);
    }
    if (__isset.yearEnabled) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("YearEnabled: ");
      __sb.Append(YearEnabled);
    }
    if (Day != null && __isset.day) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Day: ");
      __sb.Append(Day);
    }
    if (__isset.dayPrivacyLevelType) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("DayPrivacyLevelType: ");
      __sb.Append(DayPrivacyLevelType);
    }
    if (__isset.dayEnabled) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("DayEnabled: ");
      __sb.Append(DayEnabled);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

