/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class PaidCallDialing : TBase
{
  private PaidCallType _type;
  private string _dialedNumber;
  private string _serviceDomain;
  private PaidCallProductType _productType;
  private string _productName;
  private bool _multipleProduct;
  private PaidCallerIdStatus _callerIdStatus;
  private int _balance;
  private string _unit;
  private int _rate;
  private string _displayCode;
  private string _calledNumber;
  private string _calleeNationalNumber;
  private string _calleeCallingCode;
  private string _rateDivision;
  private int _adMaxMin;
  private int _adRemains;
  private string _adSessionId;

  /// <summary>
  /// 
  /// <seealso cref="PaidCallType"/>
  /// </summary>
  public PaidCallType Type
  {
    get
    {
      return _type;
    }
    set
    {
      __isset.type = true;
      this._type = value;
    }
  }

  public string DialedNumber
  {
    get
    {
      return _dialedNumber;
    }
    set
    {
      __isset.dialedNumber = true;
      this._dialedNumber = value;
    }
  }

  public string ServiceDomain
  {
    get
    {
      return _serviceDomain;
    }
    set
    {
      __isset.serviceDomain = true;
      this._serviceDomain = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="PaidCallProductType"/>
  /// </summary>
  public PaidCallProductType ProductType
  {
    get
    {
      return _productType;
    }
    set
    {
      __isset.productType = true;
      this._productType = value;
    }
  }

  public string ProductName
  {
    get
    {
      return _productName;
    }
    set
    {
      __isset.productName = true;
      this._productName = value;
    }
  }

  public bool MultipleProduct
  {
    get
    {
      return _multipleProduct;
    }
    set
    {
      __isset.multipleProduct = true;
      this._multipleProduct = value;
    }
  }

  /// <summary>
  /// 
  /// <seealso cref="PaidCallerIdStatus"/>
  /// </summary>
  public PaidCallerIdStatus CallerIdStatus
  {
    get
    {
      return _callerIdStatus;
    }
    set
    {
      __isset.callerIdStatus = true;
      this._callerIdStatus = value;
    }
  }

  public int Balance
  {
    get
    {
      return _balance;
    }
    set
    {
      __isset.balance = true;
      this._balance = value;
    }
  }

  public string Unit
  {
    get
    {
      return _unit;
    }
    set
    {
      __isset.unit = true;
      this._unit = value;
    }
  }

  public int Rate
  {
    get
    {
      return _rate;
    }
    set
    {
      __isset.rate = true;
      this._rate = value;
    }
  }

  public string DisplayCode
  {
    get
    {
      return _displayCode;
    }
    set
    {
      __isset.displayCode = true;
      this._displayCode = value;
    }
  }

  public string CalledNumber
  {
    get
    {
      return _calledNumber;
    }
    set
    {
      __isset.calledNumber = true;
      this._calledNumber = value;
    }
  }

  public string CalleeNationalNumber
  {
    get
    {
      return _calleeNationalNumber;
    }
    set
    {
      __isset.calleeNationalNumber = true;
      this._calleeNationalNumber = value;
    }
  }

  public string CalleeCallingCode
  {
    get
    {
      return _calleeCallingCode;
    }
    set
    {
      __isset.calleeCallingCode = true;
      this._calleeCallingCode = value;
    }
  }

  public string RateDivision
  {
    get
    {
      return _rateDivision;
    }
    set
    {
      __isset.rateDivision = true;
      this._rateDivision = value;
    }
  }

  public int AdMaxMin
  {
    get
    {
      return _adMaxMin;
    }
    set
    {
      __isset.adMaxMin = true;
      this._adMaxMin = value;
    }
  }

  public int AdRemains
  {
    get
    {
      return _adRemains;
    }
    set
    {
      __isset.adRemains = true;
      this._adRemains = value;
    }
  }

  public string AdSessionId
  {
    get
    {
      return _adSessionId;
    }
    set
    {
      __isset.adSessionId = true;
      this._adSessionId = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool type;
    public bool dialedNumber;
    public bool serviceDomain;
    public bool productType;
    public bool productName;
    public bool multipleProduct;
    public bool callerIdStatus;
    public bool balance;
    public bool unit;
    public bool rate;
    public bool displayCode;
    public bool calledNumber;
    public bool calleeNationalNumber;
    public bool calleeCallingCode;
    public bool rateDivision;
    public bool adMaxMin;
    public bool adRemains;
    public bool adSessionId;
  }

  public PaidCallDialing() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              Type = (PaidCallType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              DialedNumber = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              ServiceDomain = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              ProductType = (PaidCallProductType)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              ProductName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Bool) {
              MultipleProduct = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              CallerIdStatus = (PaidCallerIdStatus)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              Balance = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              Unit = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I32) {
              Rate = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.String) {
              DisplayCode = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.String) {
              CalledNumber = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.String) {
              CalleeNationalNumber = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.String) {
              CalleeCallingCode = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 17:
            if (field.Type == TType.String) {
              RateDivision = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.I32) {
              AdMaxMin = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 21:
            if (field.Type == TType.I32) {
              AdRemains = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 22:
            if (field.Type == TType.String) {
              AdSessionId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("PaidCallDialing");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.type) {
        field.Name = "type";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Type);
        oprot.WriteFieldEnd();
      }
      if (DialedNumber != null && __isset.dialedNumber) {
        field.Name = "dialedNumber";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DialedNumber);
        oprot.WriteFieldEnd();
      }
      if (ServiceDomain != null && __isset.serviceDomain) {
        field.Name = "serviceDomain";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ServiceDomain);
        oprot.WriteFieldEnd();
      }
      if (__isset.productType) {
        field.Name = "productType";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)ProductType);
        oprot.WriteFieldEnd();
      }
      if (ProductName != null && __isset.productName) {
        field.Name = "productName";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ProductName);
        oprot.WriteFieldEnd();
      }
      if (__isset.multipleProduct) {
        field.Name = "multipleProduct";
        field.Type = TType.Bool;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(MultipleProduct);
        oprot.WriteFieldEnd();
      }
      if (__isset.callerIdStatus) {
        field.Name = "callerIdStatus";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)CallerIdStatus);
        oprot.WriteFieldEnd();
      }
      if (__isset.balance) {
        field.Name = "balance";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Balance);
        oprot.WriteFieldEnd();
      }
      if (Unit != null && __isset.unit) {
        field.Name = "unit";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Unit);
        oprot.WriteFieldEnd();
      }
      if (__isset.rate) {
        field.Name = "rate";
        field.Type = TType.I32;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Rate);
        oprot.WriteFieldEnd();
      }
      if (DisplayCode != null && __isset.displayCode) {
        field.Name = "displayCode";
        field.Type = TType.String;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(DisplayCode);
        oprot.WriteFieldEnd();
      }
      if (CalledNumber != null && __isset.calledNumber) {
        field.Name = "calledNumber";
        field.Type = TType.String;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CalledNumber);
        oprot.WriteFieldEnd();
      }
      if (CalleeNationalNumber != null && __isset.calleeNationalNumber) {
        field.Name = "calleeNationalNumber";
        field.Type = TType.String;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CalleeNationalNumber);
        oprot.WriteFieldEnd();
      }
      if (CalleeCallingCode != null && __isset.calleeCallingCode) {
        field.Name = "calleeCallingCode";
        field.Type = TType.String;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CalleeCallingCode);
        oprot.WriteFieldEnd();
      }
      if (RateDivision != null && __isset.rateDivision) {
        field.Name = "rateDivision";
        field.Type = TType.String;
        field.ID = 17;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(RateDivision);
        oprot.WriteFieldEnd();
      }
      if (__isset.adMaxMin) {
        field.Name = "adMaxMin";
        field.Type = TType.I32;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(AdMaxMin);
        oprot.WriteFieldEnd();
      }
      if (__isset.adRemains) {
        field.Name = "adRemains";
        field.Type = TType.I32;
        field.ID = 21;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(AdRemains);
        oprot.WriteFieldEnd();
      }
      if (AdSessionId != null && __isset.adSessionId) {
        field.Name = "adSessionId";
        field.Type = TType.String;
        field.ID = 22;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(AdSessionId);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("PaidCallDialing(");
    bool __first = true;
    if (__isset.type) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Type: ");
      __sb.Append(Type);
    }
    if (DialedNumber != null && __isset.dialedNumber) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("DialedNumber: ");
      __sb.Append(DialedNumber);
    }
    if (ServiceDomain != null && __isset.serviceDomain) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ServiceDomain: ");
      __sb.Append(ServiceDomain);
    }
    if (__isset.productType) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ProductType: ");
      __sb.Append(ProductType);
    }
    if (ProductName != null && __isset.productName) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ProductName: ");
      __sb.Append(ProductName);
    }
    if (__isset.multipleProduct) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("MultipleProduct: ");
      __sb.Append(MultipleProduct);
    }
    if (__isset.callerIdStatus) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("CallerIdStatus: ");
      __sb.Append(CallerIdStatus);
    }
    if (__isset.balance) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Balance: ");
      __sb.Append(Balance);
    }
    if (Unit != null && __isset.unit) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Unit: ");
      __sb.Append(Unit);
    }
    if (__isset.rate) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Rate: ");
      __sb.Append(Rate);
    }
    if (DisplayCode != null && __isset.displayCode) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("DisplayCode: ");
      __sb.Append(DisplayCode);
    }
    if (CalledNumber != null && __isset.calledNumber) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("CalledNumber: ");
      __sb.Append(CalledNumber);
    }
    if (CalleeNationalNumber != null && __isset.calleeNationalNumber) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("CalleeNationalNumber: ");
      __sb.Append(CalleeNationalNumber);
    }
    if (CalleeCallingCode != null && __isset.calleeCallingCode) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("CalleeCallingCode: ");
      __sb.Append(CalleeCallingCode);
    }
    if (RateDivision != null && __isset.rateDivision) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("RateDivision: ");
      __sb.Append(RateDivision);
    }
    if (__isset.adMaxMin) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("AdMaxMin: ");
      __sb.Append(AdMaxMin);
    }
    if (__isset.adRemains) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("AdRemains: ");
      __sb.Append(AdRemains);
    }
    if (AdSessionId != null && __isset.adSessionId) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("AdSessionId: ");
      __sb.Append(AdSessionId);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

