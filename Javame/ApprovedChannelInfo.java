/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class ApprovedChannelInfo implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("ApprovedChannelInfo");

  private static final TField CHANNEL_INFO_FIELD_DESC = new TField("channelInfo", TType.STRUCT, (short)1);
  private static final TField APPROVED_AT_FIELD_DESC = new TField("approvedAt", TType.I64, (short)2);

  private ChannelInfo channelInfo;
  private long approvedAt;

  // isset id assignments
  private static final int __APPROVEDAT_ISSET_ID = 0;
  private boolean[] __isset_vector = new boolean[1];

  public ApprovedChannelInfo() {
  }

  public ApprovedChannelInfo(
    ChannelInfo channelInfo,
    long approvedAt)
  {
    this();
    this.channelInfo = channelInfo;
    this.approvedAt = approvedAt;
    setApprovedAtIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ApprovedChannelInfo(ApprovedChannelInfo other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    if (other.isSetChannelInfo()) {
      this.channelInfo = new ChannelInfo(other.channelInfo);
    }
    this.approvedAt = other.approvedAt;
  }

  public ApprovedChannelInfo deepCopy() {
    return new ApprovedChannelInfo(this);
  }

  public void clear() {
    this.channelInfo = null;
    setApprovedAtIsSet(false);
    this.approvedAt = 0;
  }

  public ChannelInfo getChannelInfo() {
    return this.channelInfo;
  }

  public void setChannelInfo(ChannelInfo channelInfo) {
    this.channelInfo = channelInfo;
  }

  public void unsetChannelInfo() {
    this.channelInfo = null;
  }

  /** Returns true if field channelInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelInfo() {
    return this.channelInfo != null;
  }

  public void setChannelInfoIsSet(boolean value) {
    if (!value) {
      this.channelInfo = null;
    }
  }

  public long getApprovedAt() {
    return this.approvedAt;
  }

  public void setApprovedAt(long approvedAt) {
    this.approvedAt = approvedAt;
    setApprovedAtIsSet(true);
  }

  public void unsetApprovedAt() {
    __isset_vector[__APPROVEDAT_ISSET_ID] = false;
  }

  /** Returns true if field approvedAt is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovedAt() {
    return __isset_vector[__APPROVEDAT_ISSET_ID];
  }

  public void setApprovedAtIsSet(boolean value) {
    __isset_vector[__APPROVEDAT_ISSET_ID] = value;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ApprovedChannelInfo)
      return this.equals((ApprovedChannelInfo)that);
    return false;
  }

  public boolean equals(ApprovedChannelInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_channelInfo = true && this.isSetChannelInfo();
    boolean that_present_channelInfo = true && that.isSetChannelInfo();
    if (this_present_channelInfo || that_present_channelInfo) {
      if (!(this_present_channelInfo && that_present_channelInfo))
        return false;
      if (!this.channelInfo.equals(that.channelInfo))
        return false;
    }

    boolean this_present_approvedAt = true;
    boolean that_present_approvedAt = true;
    if (this_present_approvedAt || that_present_approvedAt) {
      if (!(this_present_approvedAt && that_present_approvedAt))
        return false;
      if (this.approvedAt != that.approvedAt)
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    ApprovedChannelInfo other = (ApprovedChannelInfo)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetChannelInfo(), other.isSetChannelInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelInfo()) {
      lastComparison = this.channelInfo.compareTo(other.channelInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetApprovedAt(), other.isSetApprovedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovedAt()) {
      lastComparison = TBaseHelper.compareTo(this.approvedAt, other.approvedAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // CHANNEL_INFO
          if (field.type == TType.STRUCT) {
            this.channelInfo = new ChannelInfo();
            this.channelInfo.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // APPROVED_AT
          if (field.type == TType.I64) {
            this.approvedAt = iprot.readI64();
            setApprovedAtIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.channelInfo != null) {
      oprot.writeFieldBegin(CHANNEL_INFO_FIELD_DESC);
      this.channelInfo.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(APPROVED_AT_FIELD_DESC);
    oprot.writeI64(this.approvedAt);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("ApprovedChannelInfo(");
    boolean first = true;

    sb.append("channelInfo:");
    if (this.channelInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.channelInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvedAt:");
    sb.append(this.approvedAt);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

