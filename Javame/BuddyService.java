/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class BuddyService {

  public interface Iface {

    public Vector findBuddyContactsByQuery(String language, String country, String query, int fromIndex, int count, BuddySearchRequestSource requestSource) throws TalkException, TException;

    public Vector getBuddyContacts(String language, String country, String classification, int fromIndex, int count) throws TalkException, TException;

    public BuddyDetail getBuddyDetail(String buddyMid) throws TalkException, TException;

    public BuddyOnAir getBuddyOnAir(String buddyMid) throws TalkException, TException;

    public Vector getCountriesHavingBuddy() throws TalkException, TException;

    public Hashtable getNewlyReleasedBuddyIds(String country) throws TalkException, TException;

    public BuddyBanner getPopularBuddyBanner(String language, String country, ApplicationType applicationType, String resourceSpecification) throws TalkException, TException;

    public Vector getPopularBuddyLists(String language, String country) throws TalkException, TException;

    public Vector getPromotedBuddyContacts(String language, String country) throws TalkException, TException;

  }

  public static class Client implements TServiceClient, Iface {
    public Client(TProtocol prot)
    {
      this(prot, prot);
    }

    public Client(TProtocol iprot, TProtocol oprot)
    {
      iprot_ = iprot;
      oprot_ = oprot;
    }

    protected TProtocol iprot_;
    protected TProtocol oprot_;

    protected int seqid_;

    public TProtocol getInputProtocol()
    {
      return this.iprot_;
    }

    public TProtocol getOutputProtocol()
    {
      return this.oprot_;
    }

    public Vector findBuddyContactsByQuery(String language, String country, String query, int fromIndex, int count, BuddySearchRequestSource requestSource) throws TalkException, TException
    {
      send_findBuddyContactsByQuery(language, country, query, fromIndex, count, requestSource);
      return recv_findBuddyContactsByQuery();
    }

    public void send_findBuddyContactsByQuery(String language, String country, String query, int fromIndex, int count, BuddySearchRequestSource requestSource) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("findBuddyContactsByQuery", TMessageType.CALL, ++seqid_));
      findBuddyContactsByQuery_args args = new findBuddyContactsByQuery_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.setQuery(query);
      args.setFromIndex(fromIndex);
      args.setCount(count);
      args.setRequestSource(requestSource);
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public Vector recv_findBuddyContactsByQuery() throws TalkException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      if (msg.seqid != seqid_) {
        throw new TApplicationException(TApplicationException.BAD_SEQUENCE_ID, "findBuddyContactsByQuery failed: out of sequence response");
      }
      findBuddyContactsByQuery_result result = new findBuddyContactsByQuery_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "findBuddyContactsByQuery failed: unknown result");
    }

    public Vector getBuddyContacts(String language, String country, String classification, int fromIndex, int count) throws TalkException, TException
    {
      send_getBuddyContacts(language, country, classification, fromIndex, count);
      return recv_getBuddyContacts();
    }

    public void send_getBuddyContacts(String language, String country, String classification, int fromIndex, int count) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getBuddyContacts", TMessageType.CALL, ++seqid_));
      getBuddyContacts_args args = new getBuddyContacts_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.setClassification(classification);
      args.setFromIndex(fromIndex);
      args.setCount(count);
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public Vector recv_getBuddyContacts() throws TalkException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      if (msg.seqid != seqid_) {
        throw new TApplicationException(TApplicationException.BAD_SEQUENCE_ID, "getBuddyContacts failed: out of sequence response");
      }
      getBuddyContacts_result result = new getBuddyContacts_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getBuddyContacts failed: unknown result");
    }

    public BuddyDetail getBuddyDetail(String buddyMid) throws TalkException, TException
    {
      send_getBuddyDetail(buddyMid);
      return recv_getBuddyDetail();
    }

    public void send_getBuddyDetail(String buddyMid) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getBuddyDetail", TMessageType.CALL, ++seqid_));
      getBuddyDetail_args args = new getBuddyDetail_args();
      args.setBuddyMid(buddyMid);
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public BuddyDetail recv_getBuddyDetail() throws TalkException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      if (msg.seqid != seqid_) {
        throw new TApplicationException(TApplicationException.BAD_SEQUENCE_ID, "getBuddyDetail failed: out of sequence response");
      }
      getBuddyDetail_result result = new getBuddyDetail_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getBuddyDetail failed: unknown result");
    }

    public BuddyOnAir getBuddyOnAir(String buddyMid) throws TalkException, TException
    {
      send_getBuddyOnAir(buddyMid);
      return recv_getBuddyOnAir();
    }

    public void send_getBuddyOnAir(String buddyMid) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getBuddyOnAir", TMessageType.CALL, ++seqid_));
      getBuddyOnAir_args args = new getBuddyOnAir_args();
      args.setBuddyMid(buddyMid);
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public BuddyOnAir recv_getBuddyOnAir() throws TalkException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      if (msg.seqid != seqid_) {
        throw new TApplicationException(TApplicationException.BAD_SEQUENCE_ID, "getBuddyOnAir failed: out of sequence response");
      }
      getBuddyOnAir_result result = new getBuddyOnAir_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getBuddyOnAir failed: unknown result");
    }

    public Vector getCountriesHavingBuddy() throws TalkException, TException
    {
      send_getCountriesHavingBuddy();
      return recv_getCountriesHavingBuddy();
    }

    public void send_getCountriesHavingBuddy() throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getCountriesHavingBuddy", TMessageType.CALL, ++seqid_));
      getCountriesHavingBuddy_args args = new getCountriesHavingBuddy_args();
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public Vector recv_getCountriesHavingBuddy() throws TalkException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      if (msg.seqid != seqid_) {
        throw new TApplicationException(TApplicationException.BAD_SEQUENCE_ID, "getCountriesHavingBuddy failed: out of sequence response");
      }
      getCountriesHavingBuddy_result result = new getCountriesHavingBuddy_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getCountriesHavingBuddy failed: unknown result");
    }

    public Hashtable getNewlyReleasedBuddyIds(String country) throws TalkException, TException
    {
      send_getNewlyReleasedBuddyIds(country);
      return recv_getNewlyReleasedBuddyIds();
    }

    public void send_getNewlyReleasedBuddyIds(String country) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getNewlyReleasedBuddyIds", TMessageType.CALL, ++seqid_));
      getNewlyReleasedBuddyIds_args args = new getNewlyReleasedBuddyIds_args();
      args.setCountry(country);
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public Hashtable recv_getNewlyReleasedBuddyIds() throws TalkException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      if (msg.seqid != seqid_) {
        throw new TApplicationException(TApplicationException.BAD_SEQUENCE_ID, "getNewlyReleasedBuddyIds failed: out of sequence response");
      }
      getNewlyReleasedBuddyIds_result result = new getNewlyReleasedBuddyIds_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getNewlyReleasedBuddyIds failed: unknown result");
    }

    public BuddyBanner getPopularBuddyBanner(String language, String country, ApplicationType applicationType, String resourceSpecification) throws TalkException, TException
    {
      send_getPopularBuddyBanner(language, country, applicationType, resourceSpecification);
      return recv_getPopularBuddyBanner();
    }

    public void send_getPopularBuddyBanner(String language, String country, ApplicationType applicationType, String resourceSpecification) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getPopularBuddyBanner", TMessageType.CALL, ++seqid_));
      getPopularBuddyBanner_args args = new getPopularBuddyBanner_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.setApplicationType(applicationType);
      args.setResourceSpecification(resourceSpecification);
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public BuddyBanner recv_getPopularBuddyBanner() throws TalkException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      if (msg.seqid != seqid_) {
        throw new TApplicationException(TApplicationException.BAD_SEQUENCE_ID, "getPopularBuddyBanner failed: out of sequence response");
      }
      getPopularBuddyBanner_result result = new getPopularBuddyBanner_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getPopularBuddyBanner failed: unknown result");
    }

    public Vector getPopularBuddyLists(String language, String country) throws TalkException, TException
    {
      send_getPopularBuddyLists(language, country);
      return recv_getPopularBuddyLists();
    }

    public void send_getPopularBuddyLists(String language, String country) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getPopularBuddyLists", TMessageType.CALL, ++seqid_));
      getPopularBuddyLists_args args = new getPopularBuddyLists_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public Vector recv_getPopularBuddyLists() throws TalkException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      if (msg.seqid != seqid_) {
        throw new TApplicationException(TApplicationException.BAD_SEQUENCE_ID, "getPopularBuddyLists failed: out of sequence response");
      }
      getPopularBuddyLists_result result = new getPopularBuddyLists_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getPopularBuddyLists failed: unknown result");
    }

    public Vector getPromotedBuddyContacts(String language, String country) throws TalkException, TException
    {
      send_getPromotedBuddyContacts(language, country);
      return recv_getPromotedBuddyContacts();
    }

    public void send_getPromotedBuddyContacts(String language, String country) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getPromotedBuddyContacts", TMessageType.CALL, ++seqid_));
      getPromotedBuddyContacts_args args = new getPromotedBuddyContacts_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public Vector recv_getPromotedBuddyContacts() throws TalkException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      if (msg.seqid != seqid_) {
        throw new TApplicationException(TApplicationException.BAD_SEQUENCE_ID, "getPromotedBuddyContacts failed: out of sequence response");
      }
      getPromotedBuddyContacts_result result = new getPromotedBuddyContacts_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getPromotedBuddyContacts failed: unknown result");
    }

  }
  public static class Processor implements TProcessor {
    public Processor(Iface iface)
    {
      iface_ = iface;
      processMap_.put("findBuddyContactsByQuery", new findBuddyContactsByQuery());
      processMap_.put("getBuddyContacts", new getBuddyContacts());
      processMap_.put("getBuddyDetail", new getBuddyDetail());
      processMap_.put("getBuddyOnAir", new getBuddyOnAir());
      processMap_.put("getCountriesHavingBuddy", new getCountriesHavingBuddy());
      processMap_.put("getNewlyReleasedBuddyIds", new getNewlyReleasedBuddyIds());
      processMap_.put("getPopularBuddyBanner", new getPopularBuddyBanner());
      processMap_.put("getPopularBuddyLists", new getPopularBuddyLists());
      processMap_.put("getPromotedBuddyContacts", new getPromotedBuddyContacts());
    }

    protected static interface ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException;
    }

    private Iface iface_;
    protected final Hashtable processMap_ = new Hashtable();

    public boolean process(TProtocol iprot, TProtocol oprot) throws TException
    {
      TMessage msg = iprot.readMessageBegin();
      ProcessFunction fn = (ProcessFunction)processMap_.get(msg.name);
      if (fn == null) {
        TProtocolUtil.skip(iprot, TType.STRUCT);
        iprot.readMessageEnd();
        TApplicationException x = new TApplicationException(TApplicationException.UNKNOWN_METHOD, "Invalid method name: '"+msg.name+"'");
        oprot.writeMessageBegin(new TMessage(msg.name, TMessageType.EXCEPTION, msg.seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return true;
      }
      fn.process(msg.seqid, iprot, oprot);
      return true;
    }

    private class findBuddyContactsByQuery implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        findBuddyContactsByQuery_args args = new findBuddyContactsByQuery_args();
        try {
          args.read(iprot);
        } catch (TProtocolException e) {
          iprot.readMessageEnd();
          TApplicationException x = new TApplicationException(TApplicationException.PROTOCOL_ERROR, e.getMessage());
          oprot.writeMessageBegin(new TMessage("findBuddyContactsByQuery", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        iprot.readMessageEnd();
        findBuddyContactsByQuery_result result = new findBuddyContactsByQuery_result();
        try {
          result.success = iface_.findBuddyContactsByQuery(args.language, args.country, args.query, args.fromIndex, args.count, args.requestSource);
        } catch (TalkException e) {
          result.e = e;
        } catch (Throwable th) {
          TApplicationException x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing findBuddyContactsByQuery");
          oprot.writeMessageBegin(new TMessage("findBuddyContactsByQuery", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        oprot.writeMessageBegin(new TMessage("findBuddyContactsByQuery", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getBuddyContacts implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getBuddyContacts_args args = new getBuddyContacts_args();
        try {
          args.read(iprot);
        } catch (TProtocolException e) {
          iprot.readMessageEnd();
          TApplicationException x = new TApplicationException(TApplicationException.PROTOCOL_ERROR, e.getMessage());
          oprot.writeMessageBegin(new TMessage("getBuddyContacts", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        iprot.readMessageEnd();
        getBuddyContacts_result result = new getBuddyContacts_result();
        try {
          result.success = iface_.getBuddyContacts(args.language, args.country, args.classification, args.fromIndex, args.count);
        } catch (TalkException e) {
          result.e = e;
        } catch (Throwable th) {
          TApplicationException x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getBuddyContacts");
          oprot.writeMessageBegin(new TMessage("getBuddyContacts", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        oprot.writeMessageBegin(new TMessage("getBuddyContacts", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getBuddyDetail implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getBuddyDetail_args args = new getBuddyDetail_args();
        try {
          args.read(iprot);
        } catch (TProtocolException e) {
          iprot.readMessageEnd();
          TApplicationException x = new TApplicationException(TApplicationException.PROTOCOL_ERROR, e.getMessage());
          oprot.writeMessageBegin(new TMessage("getBuddyDetail", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        iprot.readMessageEnd();
        getBuddyDetail_result result = new getBuddyDetail_result();
        try {
          result.success = iface_.getBuddyDetail(args.buddyMid);
        } catch (TalkException e) {
          result.e = e;
        } catch (Throwable th) {
          TApplicationException x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getBuddyDetail");
          oprot.writeMessageBegin(new TMessage("getBuddyDetail", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        oprot.writeMessageBegin(new TMessage("getBuddyDetail", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getBuddyOnAir implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getBuddyOnAir_args args = new getBuddyOnAir_args();
        try {
          args.read(iprot);
        } catch (TProtocolException e) {
          iprot.readMessageEnd();
          TApplicationException x = new TApplicationException(TApplicationException.PROTOCOL_ERROR, e.getMessage());
          oprot.writeMessageBegin(new TMessage("getBuddyOnAir", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        iprot.readMessageEnd();
        getBuddyOnAir_result result = new getBuddyOnAir_result();
        try {
          result.success = iface_.getBuddyOnAir(args.buddyMid);
        } catch (TalkException e) {
          result.e = e;
        } catch (Throwable th) {
          TApplicationException x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getBuddyOnAir");
          oprot.writeMessageBegin(new TMessage("getBuddyOnAir", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        oprot.writeMessageBegin(new TMessage("getBuddyOnAir", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getCountriesHavingBuddy implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getCountriesHavingBuddy_args args = new getCountriesHavingBuddy_args();
        try {
          args.read(iprot);
        } catch (TProtocolException e) {
          iprot.readMessageEnd();
          TApplicationException x = new TApplicationException(TApplicationException.PROTOCOL_ERROR, e.getMessage());
          oprot.writeMessageBegin(new TMessage("getCountriesHavingBuddy", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        iprot.readMessageEnd();
        getCountriesHavingBuddy_result result = new getCountriesHavingBuddy_result();
        try {
          result.success = iface_.getCountriesHavingBuddy();
        } catch (TalkException e) {
          result.e = e;
        } catch (Throwable th) {
          TApplicationException x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getCountriesHavingBuddy");
          oprot.writeMessageBegin(new TMessage("getCountriesHavingBuddy", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        oprot.writeMessageBegin(new TMessage("getCountriesHavingBuddy", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getNewlyReleasedBuddyIds implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getNewlyReleasedBuddyIds_args args = new getNewlyReleasedBuddyIds_args();
        try {
          args.read(iprot);
        } catch (TProtocolException e) {
          iprot.readMessageEnd();
          TApplicationException x = new TApplicationException(TApplicationException.PROTOCOL_ERROR, e.getMessage());
          oprot.writeMessageBegin(new TMessage("getNewlyReleasedBuddyIds", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        iprot.readMessageEnd();
        getNewlyReleasedBuddyIds_result result = new getNewlyReleasedBuddyIds_result();
        try {
          result.success = iface_.getNewlyReleasedBuddyIds(args.country);
        } catch (TalkException e) {
          result.e = e;
        } catch (Throwable th) {
          TApplicationException x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getNewlyReleasedBuddyIds");
          oprot.writeMessageBegin(new TMessage("getNewlyReleasedBuddyIds", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        oprot.writeMessageBegin(new TMessage("getNewlyReleasedBuddyIds", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getPopularBuddyBanner implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getPopularBuddyBanner_args args = new getPopularBuddyBanner_args();
        try {
          args.read(iprot);
        } catch (TProtocolException e) {
          iprot.readMessageEnd();
          TApplicationException x = new TApplicationException(TApplicationException.PROTOCOL_ERROR, e.getMessage());
          oprot.writeMessageBegin(new TMessage("getPopularBuddyBanner", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        iprot.readMessageEnd();
        getPopularBuddyBanner_result result = new getPopularBuddyBanner_result();
        try {
          result.success = iface_.getPopularBuddyBanner(args.language, args.country, args.applicationType, args.resourceSpecification);
        } catch (TalkException e) {
          result.e = e;
        } catch (Throwable th) {
          TApplicationException x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getPopularBuddyBanner");
          oprot.writeMessageBegin(new TMessage("getPopularBuddyBanner", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        oprot.writeMessageBegin(new TMessage("getPopularBuddyBanner", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getPopularBuddyLists implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getPopularBuddyLists_args args = new getPopularBuddyLists_args();
        try {
          args.read(iprot);
        } catch (TProtocolException e) {
          iprot.readMessageEnd();
          TApplicationException x = new TApplicationException(TApplicationException.PROTOCOL_ERROR, e.getMessage());
          oprot.writeMessageBegin(new TMessage("getPopularBuddyLists", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        iprot.readMessageEnd();
        getPopularBuddyLists_result result = new getPopularBuddyLists_result();
        try {
          result.success = iface_.getPopularBuddyLists(args.language, args.country);
        } catch (TalkException e) {
          result.e = e;
        } catch (Throwable th) {
          TApplicationException x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getPopularBuddyLists");
          oprot.writeMessageBegin(new TMessage("getPopularBuddyLists", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        oprot.writeMessageBegin(new TMessage("getPopularBuddyLists", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getPromotedBuddyContacts implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getPromotedBuddyContacts_args args = new getPromotedBuddyContacts_args();
        try {
          args.read(iprot);
        } catch (TProtocolException e) {
          iprot.readMessageEnd();
          TApplicationException x = new TApplicationException(TApplicationException.PROTOCOL_ERROR, e.getMessage());
          oprot.writeMessageBegin(new TMessage("getPromotedBuddyContacts", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        iprot.readMessageEnd();
        getPromotedBuddyContacts_result result = new getPromotedBuddyContacts_result();
        try {
          result.success = iface_.getPromotedBuddyContacts(args.language, args.country);
        } catch (TalkException e) {
          result.e = e;
        } catch (Throwable th) {
          TApplicationException x = new TApplicationException(TApplicationException.INTERNAL_ERROR, "Internal error processing getPromotedBuddyContacts");
          oprot.writeMessageBegin(new TMessage("getPromotedBuddyContacts", TMessageType.EXCEPTION, seqid));
          x.write(oprot);
          oprot.writeMessageEnd();
          oprot.getTransport().flush();
          return;
        }
        oprot.writeMessageBegin(new TMessage("getPromotedBuddyContacts", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

  }

  public static class findBuddyContactsByQuery_args implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("findBuddyContactsByQuery_args");

    private static final TField LANGUAGE_FIELD_DESC = new TField("language", TType.STRING, (short)2);
    private static final TField COUNTRY_FIELD_DESC = new TField("country", TType.STRING, (short)3);
    private static final TField QUERY_FIELD_DESC = new TField("query", TType.STRING, (short)4);
    private static final TField FROM_INDEX_FIELD_DESC = new TField("fromIndex", TType.I32, (short)5);
    private static final TField COUNT_FIELD_DESC = new TField("count", TType.I32, (short)6);
    private static final TField REQUEST_SOURCE_FIELD_DESC = new TField("requestSource", TType.I32, (short)7);

    private String language;
    private String country;
    private String query;
    private int fromIndex;
    private int count;
    private BuddySearchRequestSource requestSource;

    // isset id assignments
    private static final int __FROMINDEX_ISSET_ID = 0;
    private static final int __COUNT_ISSET_ID = 1;
    private boolean[] __isset_vector = new boolean[2];

    public findBuddyContactsByQuery_args() {
    }

    public findBuddyContactsByQuery_args(
      String language,
      String country,
      String query,
      int fromIndex,
      int count,
      BuddySearchRequestSource requestSource)
    {
      this();
      this.language = language;
      this.country = country;
      this.query = query;
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
      this.count = count;
      setCountIsSet(true);
      this.requestSource = requestSource;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findBuddyContactsByQuery_args(findBuddyContactsByQuery_args other) {
      System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
      if (other.isSetQuery()) {
        this.query = other.query;
      }
      this.fromIndex = other.fromIndex;
      this.count = other.count;
      if (other.isSetRequestSource()) {
        this.requestSource = other.requestSource;
      }
    }

    public findBuddyContactsByQuery_args deepCopy() {
      return new findBuddyContactsByQuery_args(this);
    }

    public void clear() {
      this.language = null;
      this.country = null;
      this.query = null;
      setFromIndexIsSet(false);
      this.fromIndex = 0;
      setCountIsSet(false);
      this.count = 0;
      this.requestSource = null;
    }

    public String getLanguage() {
      return this.language;
    }

    public void setLanguage(String language) {
      this.language = language;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public String getQuery() {
      return this.query;
    }

    public void setQuery(String query) {
      this.query = query;
    }

    public void unsetQuery() {
      this.query = null;
    }

    /** Returns true if field query is set (has been assigned a value) and false otherwise */
    public boolean isSetQuery() {
      return this.query != null;
    }

    public void setQueryIsSet(boolean value) {
      if (!value) {
        this.query = null;
      }
    }

    public int getFromIndex() {
      return this.fromIndex;
    }

    public void setFromIndex(int fromIndex) {
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
    }

    public void unsetFromIndex() {
      __isset_vector[__FROMINDEX_ISSET_ID] = false;
    }

    /** Returns true if field fromIndex is set (has been assigned a value) and false otherwise */
    public boolean isSetFromIndex() {
      return __isset_vector[__FROMINDEX_ISSET_ID];
    }

    public void setFromIndexIsSet(boolean value) {
      __isset_vector[__FROMINDEX_ISSET_ID] = value;
    }

    public int getCount() {
      return this.count;
    }

    public void setCount(int count) {
      this.count = count;
      setCountIsSet(true);
    }

    public void unsetCount() {
      __isset_vector[__COUNT_ISSET_ID] = false;
    }

    /** Returns true if field count is set (has been assigned a value) and false otherwise */
    public boolean isSetCount() {
      return __isset_vector[__COUNT_ISSET_ID];
    }

    public void setCountIsSet(boolean value) {
      __isset_vector[__COUNT_ISSET_ID] = value;
    }

    /**
     * 
     * @see BuddySearchRequestSource
     */
    public BuddySearchRequestSource getRequestSource() {
      return this.requestSource;
    }

    /**
     * 
     * @see BuddySearchRequestSource
     */
    public void setRequestSource(BuddySearchRequestSource requestSource) {
      this.requestSource = requestSource;
    }

    public void unsetRequestSource() {
      this.requestSource = null;
    }

    /** Returns true if field requestSource is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestSource() {
      return this.requestSource != null;
    }

    public void setRequestSourceIsSet(boolean value) {
      if (!value) {
        this.requestSource = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findBuddyContactsByQuery_args)
        return this.equals((findBuddyContactsByQuery_args)that);
      return false;
    }

    public boolean equals(findBuddyContactsByQuery_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      boolean this_present_query = true && this.isSetQuery();
      boolean that_present_query = true && that.isSetQuery();
      if (this_present_query || that_present_query) {
        if (!(this_present_query && that_present_query))
          return false;
        if (!this.query.equals(that.query))
          return false;
      }

      boolean this_present_fromIndex = true;
      boolean that_present_fromIndex = true;
      if (this_present_fromIndex || that_present_fromIndex) {
        if (!(this_present_fromIndex && that_present_fromIndex))
          return false;
        if (this.fromIndex != that.fromIndex)
          return false;
      }

      boolean this_present_count = true;
      boolean that_present_count = true;
      if (this_present_count || that_present_count) {
        if (!(this_present_count && that_present_count))
          return false;
        if (this.count != that.count)
          return false;
      }

      boolean this_present_requestSource = true && this.isSetRequestSource();
      boolean that_present_requestSource = true && that.isSetRequestSource();
      if (this_present_requestSource || that_present_requestSource) {
        if (!(this_present_requestSource && that_present_requestSource))
          return false;
        if (!this.requestSource.equals(that.requestSource))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      findBuddyContactsByQuery_args other = (findBuddyContactsByQuery_args)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetLanguage(), other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetCountry(), other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetQuery(), other.isSetQuery());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQuery()) {
        lastComparison = TBaseHelper.compareTo(this.query, other.query);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetFromIndex(), other.isSetFromIndex());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFromIndex()) {
        lastComparison = TBaseHelper.compareTo(this.fromIndex, other.fromIndex);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetCount(), other.isSetCount());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCount()) {
        lastComparison = TBaseHelper.compareTo(this.count, other.count);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetRequestSource(), other.isSetRequestSource());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestSource()) {
        lastComparison = TBaseHelper.compareTo(this.requestSource, other.requestSource);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 2: // LANGUAGE
            if (field.type == TType.STRING) {
              this.language = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3: // COUNTRY
            if (field.type == TType.STRING) {
              this.country = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 4: // QUERY
            if (field.type == TType.STRING) {
              this.query = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 5: // FROM_INDEX
            if (field.type == TType.I32) {
              this.fromIndex = iprot.readI32();
              setFromIndexIsSet(true);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 6: // COUNT
            if (field.type == TType.I32) {
              this.count = iprot.readI32();
              setCountIsSet(true);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 7: // REQUEST_SOURCE
            if (field.type == TType.I32) {
              this.requestSource = BuddySearchRequestSource.findByValue(iprot.readI32());
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (this.language != null) {
        oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
        oprot.writeString(this.language);
        oprot.writeFieldEnd();
      }
      if (this.country != null) {
        oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
        oprot.writeString(this.country);
        oprot.writeFieldEnd();
      }
      if (this.query != null) {
        oprot.writeFieldBegin(QUERY_FIELD_DESC);
        oprot.writeString(this.query);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FROM_INDEX_FIELD_DESC);
      oprot.writeI32(this.fromIndex);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COUNT_FIELD_DESC);
      oprot.writeI32(this.count);
      oprot.writeFieldEnd();
      if (this.requestSource != null) {
        oprot.writeFieldBegin(REQUEST_SOURCE_FIELD_DESC);
        oprot.writeI32(this.requestSource.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("findBuddyContactsByQuery_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("query:");
      if (this.query == null) {
        sb.append("null");
      } else {
        sb.append(this.query);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("fromIndex:");
      sb.append(this.fromIndex);
      first = false;
      if (!first) sb.append(", ");
      sb.append("count:");
      sb.append(this.count);
      first = false;
      if (!first) sb.append(", ");
      sb.append("requestSource:");
      if (this.requestSource == null) {
        sb.append("null");
      } else {
        sb.append(this.requestSource);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class findBuddyContactsByQuery_result implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("findBuddyContactsByQuery_result");

    private static final TField SUCCESS_FIELD_DESC = new TField("success", TType.LIST, (short)0);
    private static final TField E_FIELD_DESC = new TField("e", TType.STRUCT, (short)1);

    private Vector success;
    private TalkException e;

    // isset id assignments

    public findBuddyContactsByQuery_result() {
    }

    public findBuddyContactsByQuery_result(
      Vector success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findBuddyContactsByQuery_result(findBuddyContactsByQuery_result other) {
      if (other.isSetSuccess()) {
        Vector __this__success = new Vector();
        for (Enumeration other_enum = other.success.elements(); other_enum.hasMoreElements(); ) {
          BuddySearchResult other_element = (BuddySearchResult)other_enum.nextElement();
          __this__success.addElement(new BuddySearchResult(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public findBuddyContactsByQuery_result deepCopy() {
      return new findBuddyContactsByQuery_result(this);
    }

    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public Enumeration getSuccessEnumeration() {
      return (this.success == null) ? null : this.success.elements();
    }

    public void addToSuccess(BuddySearchResult elem) {
      if (this.success == null) {
        this.success = new Vector();
      }
      this.success.addElement(elem);
    }

    public Vector getSuccess() {
      return this.success;
    }

    public void setSuccess(Vector success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findBuddyContactsByQuery_result)
        return this.equals((findBuddyContactsByQuery_result)that);
      return false;
    }

    public boolean equals(findBuddyContactsByQuery_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      findBuddyContactsByQuery_result other = (findBuddyContactsByQuery_result)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetE(), other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = this.e.compareTo(other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 0: // SUCCESS
            if (field.type == TType.LIST) {
              {
                TList _list635 = iprot.readListBegin();
                this.success = new Vector(_list635.size);
                for (int _i636 = 0; _i636 < _list635.size; ++_i636)
                {
                  BuddySearchResult _elem637;
                  _elem637 = new BuddySearchResult();
                  _elem637.read(iprot);
                  this.success.addElement(_elem637);
                }
                iprot.readListEnd();
              }
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1: // E
            if (field.type == TType.STRUCT) {
              this.e = new TalkException();
              this.e.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);

      if (this.isSetSuccess()) {
        oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.success.size()));
          for (Enumeration _iter638_enum = this.success.elements(); _iter638_enum.hasMoreElements(); )           {
            BuddySearchResult _iter638 = (BuddySearchResult)_iter638_enum.nextElement();
            _iter638.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      } else if (this.isSetE()) {
        oprot.writeFieldBegin(E_FIELD_DESC);
        this.e.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("findBuddyContactsByQuery_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getBuddyContacts_args implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getBuddyContacts_args");

    private static final TField LANGUAGE_FIELD_DESC = new TField("language", TType.STRING, (short)2);
    private static final TField COUNTRY_FIELD_DESC = new TField("country", TType.STRING, (short)3);
    private static final TField CLASSIFICATION_FIELD_DESC = new TField("classification", TType.STRING, (short)4);
    private static final TField FROM_INDEX_FIELD_DESC = new TField("fromIndex", TType.I32, (short)5);
    private static final TField COUNT_FIELD_DESC = new TField("count", TType.I32, (short)6);

    private String language;
    private String country;
    private String classification;
    private int fromIndex;
    private int count;

    // isset id assignments
    private static final int __FROMINDEX_ISSET_ID = 0;
    private static final int __COUNT_ISSET_ID = 1;
    private boolean[] __isset_vector = new boolean[2];

    public getBuddyContacts_args() {
    }

    public getBuddyContacts_args(
      String language,
      String country,
      String classification,
      int fromIndex,
      int count)
    {
      this();
      this.language = language;
      this.country = country;
      this.classification = classification;
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
      this.count = count;
      setCountIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyContacts_args(getBuddyContacts_args other) {
      System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
      if (other.isSetClassification()) {
        this.classification = other.classification;
      }
      this.fromIndex = other.fromIndex;
      this.count = other.count;
    }

    public getBuddyContacts_args deepCopy() {
      return new getBuddyContacts_args(this);
    }

    public void clear() {
      this.language = null;
      this.country = null;
      this.classification = null;
      setFromIndexIsSet(false);
      this.fromIndex = 0;
      setCountIsSet(false);
      this.count = 0;
    }

    public String getLanguage() {
      return this.language;
    }

    public void setLanguage(String language) {
      this.language = language;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public String getClassification() {
      return this.classification;
    }

    public void setClassification(String classification) {
      this.classification = classification;
    }

    public void unsetClassification() {
      this.classification = null;
    }

    /** Returns true if field classification is set (has been assigned a value) and false otherwise */
    public boolean isSetClassification() {
      return this.classification != null;
    }

    public void setClassificationIsSet(boolean value) {
      if (!value) {
        this.classification = null;
      }
    }

    public int getFromIndex() {
      return this.fromIndex;
    }

    public void setFromIndex(int fromIndex) {
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
    }

    public void unsetFromIndex() {
      __isset_vector[__FROMINDEX_ISSET_ID] = false;
    }

    /** Returns true if field fromIndex is set (has been assigned a value) and false otherwise */
    public boolean isSetFromIndex() {
      return __isset_vector[__FROMINDEX_ISSET_ID];
    }

    public void setFromIndexIsSet(boolean value) {
      __isset_vector[__FROMINDEX_ISSET_ID] = value;
    }

    public int getCount() {
      return this.count;
    }

    public void setCount(int count) {
      this.count = count;
      setCountIsSet(true);
    }

    public void unsetCount() {
      __isset_vector[__COUNT_ISSET_ID] = false;
    }

    /** Returns true if field count is set (has been assigned a value) and false otherwise */
    public boolean isSetCount() {
      return __isset_vector[__COUNT_ISSET_ID];
    }

    public void setCountIsSet(boolean value) {
      __isset_vector[__COUNT_ISSET_ID] = value;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyContacts_args)
        return this.equals((getBuddyContacts_args)that);
      return false;
    }

    public boolean equals(getBuddyContacts_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      boolean this_present_classification = true && this.isSetClassification();
      boolean that_present_classification = true && that.isSetClassification();
      if (this_present_classification || that_present_classification) {
        if (!(this_present_classification && that_present_classification))
          return false;
        if (!this.classification.equals(that.classification))
          return false;
      }

      boolean this_present_fromIndex = true;
      boolean that_present_fromIndex = true;
      if (this_present_fromIndex || that_present_fromIndex) {
        if (!(this_present_fromIndex && that_present_fromIndex))
          return false;
        if (this.fromIndex != that.fromIndex)
          return false;
      }

      boolean this_present_count = true;
      boolean that_present_count = true;
      if (this_present_count || that_present_count) {
        if (!(this_present_count && that_present_count))
          return false;
        if (this.count != that.count)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getBuddyContacts_args other = (getBuddyContacts_args)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetLanguage(), other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetCountry(), other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetClassification(), other.isSetClassification());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClassification()) {
        lastComparison = TBaseHelper.compareTo(this.classification, other.classification);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetFromIndex(), other.isSetFromIndex());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFromIndex()) {
        lastComparison = TBaseHelper.compareTo(this.fromIndex, other.fromIndex);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetCount(), other.isSetCount());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCount()) {
        lastComparison = TBaseHelper.compareTo(this.count, other.count);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 2: // LANGUAGE
            if (field.type == TType.STRING) {
              this.language = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3: // COUNTRY
            if (field.type == TType.STRING) {
              this.country = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 4: // CLASSIFICATION
            if (field.type == TType.STRING) {
              this.classification = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 5: // FROM_INDEX
            if (field.type == TType.I32) {
              this.fromIndex = iprot.readI32();
              setFromIndexIsSet(true);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 6: // COUNT
            if (field.type == TType.I32) {
              this.count = iprot.readI32();
              setCountIsSet(true);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (this.language != null) {
        oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
        oprot.writeString(this.language);
        oprot.writeFieldEnd();
      }
      if (this.country != null) {
        oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
        oprot.writeString(this.country);
        oprot.writeFieldEnd();
      }
      if (this.classification != null) {
        oprot.writeFieldBegin(CLASSIFICATION_FIELD_DESC);
        oprot.writeString(this.classification);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FROM_INDEX_FIELD_DESC);
      oprot.writeI32(this.fromIndex);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COUNT_FIELD_DESC);
      oprot.writeI32(this.count);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getBuddyContacts_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("classification:");
      if (this.classification == null) {
        sb.append("null");
      } else {
        sb.append(this.classification);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("fromIndex:");
      sb.append(this.fromIndex);
      first = false;
      if (!first) sb.append(", ");
      sb.append("count:");
      sb.append(this.count);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getBuddyContacts_result implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getBuddyContacts_result");

    private static final TField SUCCESS_FIELD_DESC = new TField("success", TType.LIST, (short)0);
    private static final TField E_FIELD_DESC = new TField("e", TType.STRUCT, (short)1);

    private Vector success;
    private TalkException e;

    // isset id assignments

    public getBuddyContacts_result() {
    }

    public getBuddyContacts_result(
      Vector success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyContacts_result(getBuddyContacts_result other) {
      if (other.isSetSuccess()) {
        Vector __this__success = new Vector();
        for (Enumeration other_enum = other.success.elements(); other_enum.hasMoreElements(); ) {
          Contact other_element = (Contact)other_enum.nextElement();
          __this__success.addElement(new Contact(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getBuddyContacts_result deepCopy() {
      return new getBuddyContacts_result(this);
    }

    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public Enumeration getSuccessEnumeration() {
      return (this.success == null) ? null : this.success.elements();
    }

    public void addToSuccess(Contact elem) {
      if (this.success == null) {
        this.success = new Vector();
      }
      this.success.addElement(elem);
    }

    public Vector getSuccess() {
      return this.success;
    }

    public void setSuccess(Vector success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyContacts_result)
        return this.equals((getBuddyContacts_result)that);
      return false;
    }

    public boolean equals(getBuddyContacts_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getBuddyContacts_result other = (getBuddyContacts_result)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetE(), other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = this.e.compareTo(other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 0: // SUCCESS
            if (field.type == TType.LIST) {
              {
                TList _list639 = iprot.readListBegin();
                this.success = new Vector(_list639.size);
                for (int _i640 = 0; _i640 < _list639.size; ++_i640)
                {
                  Contact _elem641;
                  _elem641 = new Contact();
                  _elem641.read(iprot);
                  this.success.addElement(_elem641);
                }
                iprot.readListEnd();
              }
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1: // E
            if (field.type == TType.STRUCT) {
              this.e = new TalkException();
              this.e.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);

      if (this.isSetSuccess()) {
        oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.success.size()));
          for (Enumeration _iter642_enum = this.success.elements(); _iter642_enum.hasMoreElements(); )           {
            Contact _iter642 = (Contact)_iter642_enum.nextElement();
            _iter642.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      } else if (this.isSetE()) {
        oprot.writeFieldBegin(E_FIELD_DESC);
        this.e.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getBuddyContacts_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getBuddyDetail_args implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getBuddyDetail_args");

    private static final TField BUDDY_MID_FIELD_DESC = new TField("buddyMid", TType.STRING, (short)4);

    private String buddyMid;

    // isset id assignments

    public getBuddyDetail_args() {
    }

    public getBuddyDetail_args(
      String buddyMid)
    {
      this();
      this.buddyMid = buddyMid;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyDetail_args(getBuddyDetail_args other) {
      if (other.isSetBuddyMid()) {
        this.buddyMid = other.buddyMid;
      }
    }

    public getBuddyDetail_args deepCopy() {
      return new getBuddyDetail_args(this);
    }

    public void clear() {
      this.buddyMid = null;
    }

    public String getBuddyMid() {
      return this.buddyMid;
    }

    public void setBuddyMid(String buddyMid) {
      this.buddyMid = buddyMid;
    }

    public void unsetBuddyMid() {
      this.buddyMid = null;
    }

    /** Returns true if field buddyMid is set (has been assigned a value) and false otherwise */
    public boolean isSetBuddyMid() {
      return this.buddyMid != null;
    }

    public void setBuddyMidIsSet(boolean value) {
      if (!value) {
        this.buddyMid = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyDetail_args)
        return this.equals((getBuddyDetail_args)that);
      return false;
    }

    public boolean equals(getBuddyDetail_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_buddyMid = true && this.isSetBuddyMid();
      boolean that_present_buddyMid = true && that.isSetBuddyMid();
      if (this_present_buddyMid || that_present_buddyMid) {
        if (!(this_present_buddyMid && that_present_buddyMid))
          return false;
        if (!this.buddyMid.equals(that.buddyMid))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getBuddyDetail_args other = (getBuddyDetail_args)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetBuddyMid(), other.isSetBuddyMid());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBuddyMid()) {
        lastComparison = TBaseHelper.compareTo(this.buddyMid, other.buddyMid);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 4: // BUDDY_MID
            if (field.type == TType.STRING) {
              this.buddyMid = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (this.buddyMid != null) {
        oprot.writeFieldBegin(BUDDY_MID_FIELD_DESC);
        oprot.writeString(this.buddyMid);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getBuddyDetail_args(");
      boolean first = true;

      sb.append("buddyMid:");
      if (this.buddyMid == null) {
        sb.append("null");
      } else {
        sb.append(this.buddyMid);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getBuddyDetail_result implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getBuddyDetail_result");

    private static final TField SUCCESS_FIELD_DESC = new TField("success", TType.STRUCT, (short)0);
    private static final TField E_FIELD_DESC = new TField("e", TType.STRUCT, (short)1);

    private BuddyDetail success;
    private TalkException e;

    // isset id assignments

    public getBuddyDetail_result() {
    }

    public getBuddyDetail_result(
      BuddyDetail success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyDetail_result(getBuddyDetail_result other) {
      if (other.isSetSuccess()) {
        this.success = new BuddyDetail(other.success);
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getBuddyDetail_result deepCopy() {
      return new getBuddyDetail_result(this);
    }

    public void clear() {
      this.success = null;
      this.e = null;
    }

    public BuddyDetail getSuccess() {
      return this.success;
    }

    public void setSuccess(BuddyDetail success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyDetail_result)
        return this.equals((getBuddyDetail_result)that);
      return false;
    }

    public boolean equals(getBuddyDetail_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getBuddyDetail_result other = (getBuddyDetail_result)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = this.success.compareTo(other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetE(), other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = this.e.compareTo(other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 0: // SUCCESS
            if (field.type == TType.STRUCT) {
              this.success = new BuddyDetail();
              this.success.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1: // E
            if (field.type == TType.STRUCT) {
              this.e = new TalkException();
              this.e.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);

      if (this.isSetSuccess()) {
        oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
        this.success.write(oprot);
        oprot.writeFieldEnd();
      } else if (this.isSetE()) {
        oprot.writeFieldBegin(E_FIELD_DESC);
        this.e.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getBuddyDetail_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getBuddyOnAir_args implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getBuddyOnAir_args");

    private static final TField BUDDY_MID_FIELD_DESC = new TField("buddyMid", TType.STRING, (short)4);

    private String buddyMid;

    // isset id assignments

    public getBuddyOnAir_args() {
    }

    public getBuddyOnAir_args(
      String buddyMid)
    {
      this();
      this.buddyMid = buddyMid;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyOnAir_args(getBuddyOnAir_args other) {
      if (other.isSetBuddyMid()) {
        this.buddyMid = other.buddyMid;
      }
    }

    public getBuddyOnAir_args deepCopy() {
      return new getBuddyOnAir_args(this);
    }

    public void clear() {
      this.buddyMid = null;
    }

    public String getBuddyMid() {
      return this.buddyMid;
    }

    public void setBuddyMid(String buddyMid) {
      this.buddyMid = buddyMid;
    }

    public void unsetBuddyMid() {
      this.buddyMid = null;
    }

    /** Returns true if field buddyMid is set (has been assigned a value) and false otherwise */
    public boolean isSetBuddyMid() {
      return this.buddyMid != null;
    }

    public void setBuddyMidIsSet(boolean value) {
      if (!value) {
        this.buddyMid = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyOnAir_args)
        return this.equals((getBuddyOnAir_args)that);
      return false;
    }

    public boolean equals(getBuddyOnAir_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_buddyMid = true && this.isSetBuddyMid();
      boolean that_present_buddyMid = true && that.isSetBuddyMid();
      if (this_present_buddyMid || that_present_buddyMid) {
        if (!(this_present_buddyMid && that_present_buddyMid))
          return false;
        if (!this.buddyMid.equals(that.buddyMid))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getBuddyOnAir_args other = (getBuddyOnAir_args)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetBuddyMid(), other.isSetBuddyMid());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBuddyMid()) {
        lastComparison = TBaseHelper.compareTo(this.buddyMid, other.buddyMid);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 4: // BUDDY_MID
            if (field.type == TType.STRING) {
              this.buddyMid = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (this.buddyMid != null) {
        oprot.writeFieldBegin(BUDDY_MID_FIELD_DESC);
        oprot.writeString(this.buddyMid);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getBuddyOnAir_args(");
      boolean first = true;

      sb.append("buddyMid:");
      if (this.buddyMid == null) {
        sb.append("null");
      } else {
        sb.append(this.buddyMid);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getBuddyOnAir_result implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getBuddyOnAir_result");

    private static final TField SUCCESS_FIELD_DESC = new TField("success", TType.STRUCT, (short)0);
    private static final TField E_FIELD_DESC = new TField("e", TType.STRUCT, (short)1);

    private BuddyOnAir success;
    private TalkException e;

    // isset id assignments

    public getBuddyOnAir_result() {
    }

    public getBuddyOnAir_result(
      BuddyOnAir success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyOnAir_result(getBuddyOnAir_result other) {
      if (other.isSetSuccess()) {
        this.success = new BuddyOnAir(other.success);
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getBuddyOnAir_result deepCopy() {
      return new getBuddyOnAir_result(this);
    }

    public void clear() {
      this.success = null;
      this.e = null;
    }

    public BuddyOnAir getSuccess() {
      return this.success;
    }

    public void setSuccess(BuddyOnAir success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyOnAir_result)
        return this.equals((getBuddyOnAir_result)that);
      return false;
    }

    public boolean equals(getBuddyOnAir_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getBuddyOnAir_result other = (getBuddyOnAir_result)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = this.success.compareTo(other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetE(), other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = this.e.compareTo(other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 0: // SUCCESS
            if (field.type == TType.STRUCT) {
              this.success = new BuddyOnAir();
              this.success.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1: // E
            if (field.type == TType.STRUCT) {
              this.e = new TalkException();
              this.e.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);

      if (this.isSetSuccess()) {
        oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
        this.success.write(oprot);
        oprot.writeFieldEnd();
      } else if (this.isSetE()) {
        oprot.writeFieldBegin(E_FIELD_DESC);
        this.e.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getBuddyOnAir_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getCountriesHavingBuddy_args implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getCountriesHavingBuddy_args");


    public getCountriesHavingBuddy_args() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getCountriesHavingBuddy_args(getCountriesHavingBuddy_args other) {
    }

    public getCountriesHavingBuddy_args deepCopy() {
      return new getCountriesHavingBuddy_args(this);
    }

    public void clear() {
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getCountriesHavingBuddy_args)
        return this.equals((getCountriesHavingBuddy_args)that);
      return false;
    }

    public boolean equals(getCountriesHavingBuddy_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getCountriesHavingBuddy_args other = (getCountriesHavingBuddy_args)otherObject;      int lastComparison = 0;

      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getCountriesHavingBuddy_args(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getCountriesHavingBuddy_result implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getCountriesHavingBuddy_result");

    private static final TField SUCCESS_FIELD_DESC = new TField("success", TType.LIST, (short)0);
    private static final TField E_FIELD_DESC = new TField("e", TType.STRUCT, (short)1);

    private Vector success;
    private TalkException e;

    // isset id assignments

    public getCountriesHavingBuddy_result() {
    }

    public getCountriesHavingBuddy_result(
      Vector success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getCountriesHavingBuddy_result(getCountriesHavingBuddy_result other) {
      if (other.isSetSuccess()) {
        Vector __this__success = new Vector();
        for (Enumeration other_enum = other.success.elements(); other_enum.hasMoreElements(); ) {
          String other_element = (String)other_enum.nextElement();
          __this__success.addElement(other_element);
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getCountriesHavingBuddy_result deepCopy() {
      return new getCountriesHavingBuddy_result(this);
    }

    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public Enumeration getSuccessEnumeration() {
      return (this.success == null) ? null : this.success.elements();
    }

    public void addToSuccess(String elem) {
      if (this.success == null) {
        this.success = new Vector();
      }
      this.success.addElement(elem);
    }

    public Vector getSuccess() {
      return this.success;
    }

    public void setSuccess(Vector success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getCountriesHavingBuddy_result)
        return this.equals((getCountriesHavingBuddy_result)that);
      return false;
    }

    public boolean equals(getCountriesHavingBuddy_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getCountriesHavingBuddy_result other = (getCountriesHavingBuddy_result)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetE(), other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = this.e.compareTo(other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 0: // SUCCESS
            if (field.type == TType.LIST) {
              {
                TList _list643 = iprot.readListBegin();
                this.success = new Vector(_list643.size);
                for (int _i644 = 0; _i644 < _list643.size; ++_i644)
                {
                  String _elem645;
                  _elem645 = iprot.readString();
                  this.success.addElement(_elem645);
                }
                iprot.readListEnd();
              }
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1: // E
            if (field.type == TType.STRUCT) {
              this.e = new TalkException();
              this.e.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);

      if (this.isSetSuccess()) {
        oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.success.size()));
          for (Enumeration _iter646_enum = this.success.elements(); _iter646_enum.hasMoreElements(); )           {
            String _iter646 = (String)_iter646_enum.nextElement();
            oprot.writeString(_iter646);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      } else if (this.isSetE()) {
        oprot.writeFieldBegin(E_FIELD_DESC);
        this.e.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getCountriesHavingBuddy_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getNewlyReleasedBuddyIds_args implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getNewlyReleasedBuddyIds_args");

    private static final TField COUNTRY_FIELD_DESC = new TField("country", TType.STRING, (short)3);

    private String country;

    // isset id assignments

    public getNewlyReleasedBuddyIds_args() {
    }

    public getNewlyReleasedBuddyIds_args(
      String country)
    {
      this();
      this.country = country;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getNewlyReleasedBuddyIds_args(getNewlyReleasedBuddyIds_args other) {
      if (other.isSetCountry()) {
        this.country = other.country;
      }
    }

    public getNewlyReleasedBuddyIds_args deepCopy() {
      return new getNewlyReleasedBuddyIds_args(this);
    }

    public void clear() {
      this.country = null;
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getNewlyReleasedBuddyIds_args)
        return this.equals((getNewlyReleasedBuddyIds_args)that);
      return false;
    }

    public boolean equals(getNewlyReleasedBuddyIds_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getNewlyReleasedBuddyIds_args other = (getNewlyReleasedBuddyIds_args)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetCountry(), other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 3: // COUNTRY
            if (field.type == TType.STRING) {
              this.country = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (this.country != null) {
        oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
        oprot.writeString(this.country);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getNewlyReleasedBuddyIds_args(");
      boolean first = true;

      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getNewlyReleasedBuddyIds_result implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getNewlyReleasedBuddyIds_result");

    private static final TField SUCCESS_FIELD_DESC = new TField("success", TType.MAP, (short)0);
    private static final TField E_FIELD_DESC = new TField("e", TType.STRUCT, (short)1);

    private Hashtable success;
    private TalkException e;

    // isset id assignments

    public getNewlyReleasedBuddyIds_result() {
    }

    public getNewlyReleasedBuddyIds_result(
      Hashtable success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getNewlyReleasedBuddyIds_result(getNewlyReleasedBuddyIds_result other) {
      if (other.isSetSuccess()) {
        Hashtable __this__success = new Hashtable();
        for (Enumeration other_enum = other.success.keys(); other_enum.hasMoreElements(); ) {

          String other_element_key = (String)other_enum.nextElement();
          Long other_element_value = (Long)other.success.get(other_element_key);

          String __this__success_copy_key = other_element_key;

          Long __this__success_copy_value = other_element_value;

          __this__success.put(__this__success_copy_key, __this__success_copy_value);
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getNewlyReleasedBuddyIds_result deepCopy() {
      return new getNewlyReleasedBuddyIds_result(this);
    }

    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public void putToSuccess(String key, Long val) {
      if (this.success == null) {
        this.success = new Hashtable();
      }
      this.success.put(key, val);
    }

    public Hashtable getSuccess() {
      return this.success;
    }

    public void setSuccess(Hashtable success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getNewlyReleasedBuddyIds_result)
        return this.equals((getNewlyReleasedBuddyIds_result)that);
      return false;
    }

    public boolean equals(getNewlyReleasedBuddyIds_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getNewlyReleasedBuddyIds_result other = (getNewlyReleasedBuddyIds_result)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetE(), other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = this.e.compareTo(other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 0: // SUCCESS
            if (field.type == TType.MAP) {
              {
                TMap _map647 = iprot.readMapBegin();
                this.success = new Hashtable(2*_map647.size);
                for (int _i648 = 0; _i648 < _map647.size; ++_i648)
                {
                  String _key649;
                  long _val650;
                  _key649 = iprot.readString();
                  _val650 = iprot.readI64();
                  this.success.put(_key649, new Long(_val650));
                }
                iprot.readMapEnd();
              }
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1: // E
            if (field.type == TType.STRUCT) {
              this.e = new TalkException();
              this.e.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);

      if (this.isSetSuccess()) {
        oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
        {
          oprot.writeMapBegin(new TMap(TType.STRING, TType.I64, this.success.size()));
          for (Enumeration _iter651_enum = this.success.keys(); _iter651_enum.hasMoreElements(); )           {
            String _iter651 = (String)_iter651_enum.nextElement();
            oprot.writeString(_iter651);
            oprot.writeI64(((Long)this.success.get(_iter651)));
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      } else if (this.isSetE()) {
        oprot.writeFieldBegin(E_FIELD_DESC);
        this.e.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getNewlyReleasedBuddyIds_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getPopularBuddyBanner_args implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getPopularBuddyBanner_args");

    private static final TField LANGUAGE_FIELD_DESC = new TField("language", TType.STRING, (short)2);
    private static final TField COUNTRY_FIELD_DESC = new TField("country", TType.STRING, (short)3);
    private static final TField APPLICATION_TYPE_FIELD_DESC = new TField("applicationType", TType.I32, (short)4);
    private static final TField RESOURCE_SPECIFICATION_FIELD_DESC = new TField("resourceSpecification", TType.STRING, (short)5);

    private String language;
    private String country;
    private ApplicationType applicationType;
    private String resourceSpecification;

    // isset id assignments

    public getPopularBuddyBanner_args() {
    }

    public getPopularBuddyBanner_args(
      String language,
      String country,
      ApplicationType applicationType,
      String resourceSpecification)
    {
      this();
      this.language = language;
      this.country = country;
      this.applicationType = applicationType;
      this.resourceSpecification = resourceSpecification;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyBanner_args(getPopularBuddyBanner_args other) {
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
      if (other.isSetApplicationType()) {
        this.applicationType = other.applicationType;
      }
      if (other.isSetResourceSpecification()) {
        this.resourceSpecification = other.resourceSpecification;
      }
    }

    public getPopularBuddyBanner_args deepCopy() {
      return new getPopularBuddyBanner_args(this);
    }

    public void clear() {
      this.language = null;
      this.country = null;
      this.applicationType = null;
      this.resourceSpecification = null;
    }

    public String getLanguage() {
      return this.language;
    }

    public void setLanguage(String language) {
      this.language = language;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    /**
     * 
     * @see ApplicationType
     */
    public ApplicationType getApplicationType() {
      return this.applicationType;
    }

    /**
     * 
     * @see ApplicationType
     */
    public void setApplicationType(ApplicationType applicationType) {
      this.applicationType = applicationType;
    }

    public void unsetApplicationType() {
      this.applicationType = null;
    }

    /** Returns true if field applicationType is set (has been assigned a value) and false otherwise */
    public boolean isSetApplicationType() {
      return this.applicationType != null;
    }

    public void setApplicationTypeIsSet(boolean value) {
      if (!value) {
        this.applicationType = null;
      }
    }

    public String getResourceSpecification() {
      return this.resourceSpecification;
    }

    public void setResourceSpecification(String resourceSpecification) {
      this.resourceSpecification = resourceSpecification;
    }

    public void unsetResourceSpecification() {
      this.resourceSpecification = null;
    }

    /** Returns true if field resourceSpecification is set (has been assigned a value) and false otherwise */
    public boolean isSetResourceSpecification() {
      return this.resourceSpecification != null;
    }

    public void setResourceSpecificationIsSet(boolean value) {
      if (!value) {
        this.resourceSpecification = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyBanner_args)
        return this.equals((getPopularBuddyBanner_args)that);
      return false;
    }

    public boolean equals(getPopularBuddyBanner_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      boolean this_present_applicationType = true && this.isSetApplicationType();
      boolean that_present_applicationType = true && that.isSetApplicationType();
      if (this_present_applicationType || that_present_applicationType) {
        if (!(this_present_applicationType && that_present_applicationType))
          return false;
        if (!this.applicationType.equals(that.applicationType))
          return false;
      }

      boolean this_present_resourceSpecification = true && this.isSetResourceSpecification();
      boolean that_present_resourceSpecification = true && that.isSetResourceSpecification();
      if (this_present_resourceSpecification || that_present_resourceSpecification) {
        if (!(this_present_resourceSpecification && that_present_resourceSpecification))
          return false;
        if (!this.resourceSpecification.equals(that.resourceSpecification))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getPopularBuddyBanner_args other = (getPopularBuddyBanner_args)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetLanguage(), other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetCountry(), other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetApplicationType(), other.isSetApplicationType());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetApplicationType()) {
        lastComparison = TBaseHelper.compareTo(this.applicationType, other.applicationType);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetResourceSpecification(), other.isSetResourceSpecification());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetResourceSpecification()) {
        lastComparison = TBaseHelper.compareTo(this.resourceSpecification, other.resourceSpecification);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 2: // LANGUAGE
            if (field.type == TType.STRING) {
              this.language = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3: // COUNTRY
            if (field.type == TType.STRING) {
              this.country = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 4: // APPLICATION_TYPE
            if (field.type == TType.I32) {
              this.applicationType = ApplicationType.findByValue(iprot.readI32());
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 5: // RESOURCE_SPECIFICATION
            if (field.type == TType.STRING) {
              this.resourceSpecification = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (this.language != null) {
        oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
        oprot.writeString(this.language);
        oprot.writeFieldEnd();
      }
      if (this.country != null) {
        oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
        oprot.writeString(this.country);
        oprot.writeFieldEnd();
      }
      if (this.applicationType != null) {
        oprot.writeFieldBegin(APPLICATION_TYPE_FIELD_DESC);
        oprot.writeI32(this.applicationType.getValue());
        oprot.writeFieldEnd();
      }
      if (this.resourceSpecification != null) {
        oprot.writeFieldBegin(RESOURCE_SPECIFICATION_FIELD_DESC);
        oprot.writeString(this.resourceSpecification);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getPopularBuddyBanner_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("applicationType:");
      if (this.applicationType == null) {
        sb.append("null");
      } else {
        sb.append(this.applicationType);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("resourceSpecification:");
      if (this.resourceSpecification == null) {
        sb.append("null");
      } else {
        sb.append(this.resourceSpecification);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getPopularBuddyBanner_result implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getPopularBuddyBanner_result");

    private static final TField SUCCESS_FIELD_DESC = new TField("success", TType.STRUCT, (short)0);
    private static final TField E_FIELD_DESC = new TField("e", TType.STRUCT, (short)1);

    private BuddyBanner success;
    private TalkException e;

    // isset id assignments

    public getPopularBuddyBanner_result() {
    }

    public getPopularBuddyBanner_result(
      BuddyBanner success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyBanner_result(getPopularBuddyBanner_result other) {
      if (other.isSetSuccess()) {
        this.success = new BuddyBanner(other.success);
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getPopularBuddyBanner_result deepCopy() {
      return new getPopularBuddyBanner_result(this);
    }

    public void clear() {
      this.success = null;
      this.e = null;
    }

    public BuddyBanner getSuccess() {
      return this.success;
    }

    public void setSuccess(BuddyBanner success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyBanner_result)
        return this.equals((getPopularBuddyBanner_result)that);
      return false;
    }

    public boolean equals(getPopularBuddyBanner_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getPopularBuddyBanner_result other = (getPopularBuddyBanner_result)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = this.success.compareTo(other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetE(), other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = this.e.compareTo(other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 0: // SUCCESS
            if (field.type == TType.STRUCT) {
              this.success = new BuddyBanner();
              this.success.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1: // E
            if (field.type == TType.STRUCT) {
              this.e = new TalkException();
              this.e.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);

      if (this.isSetSuccess()) {
        oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
        this.success.write(oprot);
        oprot.writeFieldEnd();
      } else if (this.isSetE()) {
        oprot.writeFieldBegin(E_FIELD_DESC);
        this.e.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getPopularBuddyBanner_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getPopularBuddyLists_args implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getPopularBuddyLists_args");

    private static final TField LANGUAGE_FIELD_DESC = new TField("language", TType.STRING, (short)2);
    private static final TField COUNTRY_FIELD_DESC = new TField("country", TType.STRING, (short)3);

    private String language;
    private String country;

    // isset id assignments

    public getPopularBuddyLists_args() {
    }

    public getPopularBuddyLists_args(
      String language,
      String country)
    {
      this();
      this.language = language;
      this.country = country;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyLists_args(getPopularBuddyLists_args other) {
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
    }

    public getPopularBuddyLists_args deepCopy() {
      return new getPopularBuddyLists_args(this);
    }

    public void clear() {
      this.language = null;
      this.country = null;
    }

    public String getLanguage() {
      return this.language;
    }

    public void setLanguage(String language) {
      this.language = language;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyLists_args)
        return this.equals((getPopularBuddyLists_args)that);
      return false;
    }

    public boolean equals(getPopularBuddyLists_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getPopularBuddyLists_args other = (getPopularBuddyLists_args)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetLanguage(), other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetCountry(), other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 2: // LANGUAGE
            if (field.type == TType.STRING) {
              this.language = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3: // COUNTRY
            if (field.type == TType.STRING) {
              this.country = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (this.language != null) {
        oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
        oprot.writeString(this.language);
        oprot.writeFieldEnd();
      }
      if (this.country != null) {
        oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
        oprot.writeString(this.country);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getPopularBuddyLists_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getPopularBuddyLists_result implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getPopularBuddyLists_result");

    private static final TField SUCCESS_FIELD_DESC = new TField("success", TType.LIST, (short)0);
    private static final TField E_FIELD_DESC = new TField("e", TType.STRUCT, (short)1);

    private Vector success;
    private TalkException e;

    // isset id assignments

    public getPopularBuddyLists_result() {
    }

    public getPopularBuddyLists_result(
      Vector success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyLists_result(getPopularBuddyLists_result other) {
      if (other.isSetSuccess()) {
        Vector __this__success = new Vector();
        for (Enumeration other_enum = other.success.elements(); other_enum.hasMoreElements(); ) {
          BuddyList other_element = (BuddyList)other_enum.nextElement();
          __this__success.addElement(new BuddyList(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getPopularBuddyLists_result deepCopy() {
      return new getPopularBuddyLists_result(this);
    }

    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public Enumeration getSuccessEnumeration() {
      return (this.success == null) ? null : this.success.elements();
    }

    public void addToSuccess(BuddyList elem) {
      if (this.success == null) {
        this.success = new Vector();
      }
      this.success.addElement(elem);
    }

    public Vector getSuccess() {
      return this.success;
    }

    public void setSuccess(Vector success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyLists_result)
        return this.equals((getPopularBuddyLists_result)that);
      return false;
    }

    public boolean equals(getPopularBuddyLists_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getPopularBuddyLists_result other = (getPopularBuddyLists_result)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetE(), other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = this.e.compareTo(other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 0: // SUCCESS
            if (field.type == TType.LIST) {
              {
                TList _list652 = iprot.readListBegin();
                this.success = new Vector(_list652.size);
                for (int _i653 = 0; _i653 < _list652.size; ++_i653)
                {
                  BuddyList _elem654;
                  _elem654 = new BuddyList();
                  _elem654.read(iprot);
                  this.success.addElement(_elem654);
                }
                iprot.readListEnd();
              }
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1: // E
            if (field.type == TType.STRUCT) {
              this.e = new TalkException();
              this.e.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);

      if (this.isSetSuccess()) {
        oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.success.size()));
          for (Enumeration _iter655_enum = this.success.elements(); _iter655_enum.hasMoreElements(); )           {
            BuddyList _iter655 = (BuddyList)_iter655_enum.nextElement();
            _iter655.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      } else if (this.isSetE()) {
        oprot.writeFieldBegin(E_FIELD_DESC);
        this.e.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getPopularBuddyLists_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getPromotedBuddyContacts_args implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getPromotedBuddyContacts_args");

    private static final TField LANGUAGE_FIELD_DESC = new TField("language", TType.STRING, (short)2);
    private static final TField COUNTRY_FIELD_DESC = new TField("country", TType.STRING, (short)3);

    private String language;
    private String country;

    // isset id assignments

    public getPromotedBuddyContacts_args() {
    }

    public getPromotedBuddyContacts_args(
      String language,
      String country)
    {
      this();
      this.language = language;
      this.country = country;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPromotedBuddyContacts_args(getPromotedBuddyContacts_args other) {
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
    }

    public getPromotedBuddyContacts_args deepCopy() {
      return new getPromotedBuddyContacts_args(this);
    }

    public void clear() {
      this.language = null;
      this.country = null;
    }

    public String getLanguage() {
      return this.language;
    }

    public void setLanguage(String language) {
      this.language = language;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public String getCountry() {
      return this.country;
    }

    public void setCountry(String country) {
      this.country = country;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPromotedBuddyContacts_args)
        return this.equals((getPromotedBuddyContacts_args)that);
      return false;
    }

    public boolean equals(getPromotedBuddyContacts_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getPromotedBuddyContacts_args other = (getPromotedBuddyContacts_args)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetLanguage(), other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetCountry(), other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 2: // LANGUAGE
            if (field.type == TType.STRING) {
              this.language = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3: // COUNTRY
            if (field.type == TType.STRING) {
              this.country = iprot.readString();
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (this.language != null) {
        oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
        oprot.writeString(this.language);
        oprot.writeFieldEnd();
      }
      if (this.country != null) {
        oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
        oprot.writeString(this.country);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getPromotedBuddyContacts_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

  public static class getPromotedBuddyContacts_result implements TBase   {
    private static final TStruct STRUCT_DESC = new TStruct("getPromotedBuddyContacts_result");

    private static final TField SUCCESS_FIELD_DESC = new TField("success", TType.LIST, (short)0);
    private static final TField E_FIELD_DESC = new TField("e", TType.STRUCT, (short)1);

    private Vector success;
    private TalkException e;

    // isset id assignments

    public getPromotedBuddyContacts_result() {
    }

    public getPromotedBuddyContacts_result(
      Vector success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPromotedBuddyContacts_result(getPromotedBuddyContacts_result other) {
      if (other.isSetSuccess()) {
        Vector __this__success = new Vector();
        for (Enumeration other_enum = other.success.elements(); other_enum.hasMoreElements(); ) {
          Contact other_element = (Contact)other_enum.nextElement();
          __this__success.addElement(new Contact(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getPromotedBuddyContacts_result deepCopy() {
      return new getPromotedBuddyContacts_result(this);
    }

    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public Enumeration getSuccessEnumeration() {
      return (this.success == null) ? null : this.success.elements();
    }

    public void addToSuccess(Contact elem) {
      if (this.success == null) {
        this.success = new Vector();
      }
      this.success.addElement(elem);
    }

    public Vector getSuccess() {
      return this.success;
    }

    public void setSuccess(Vector success) {
      this.success = success;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public void setE(TalkException e) {
      this.e = e;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getPromotedBuddyContacts_result)
        return this.equals((getPromotedBuddyContacts_result)that);
      return false;
    }

    public boolean equals(getPromotedBuddyContacts_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public int compareTo(Object otherObject) {
      if (!getClass().equals(otherObject.getClass())) {
        return getClass().getName().compareTo(otherObject.getClass().getName());
      }

      getPromotedBuddyContacts_result other = (getPromotedBuddyContacts_result)otherObject;      int lastComparison = 0;

      lastComparison = TBaseHelper.compareTo(isSetSuccess(), other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = TBaseHelper.compareTo(isSetE(), other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = this.e.compareTo(other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id) {
          case 0: // SUCCESS
            if (field.type == TType.LIST) {
              {
                TList _list656 = iprot.readListBegin();
                this.success = new Vector(_list656.size);
                for (int _i657 = 0; _i657 < _list656.size; ++_i657)
                {
                  Contact _elem658;
                  _elem658 = new Contact();
                  _elem658.read(iprot);
                  this.success.addElement(_elem658);
                }
                iprot.readListEnd();
              }
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1: // E
            if (field.type == TType.STRUCT) {
              this.e = new TalkException();
              this.e.read(iprot);
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      validate();
    }

    public void write(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);

      if (this.isSetSuccess()) {
        oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.success.size()));
          for (Enumeration _iter659_enum = this.success.elements(); _iter659_enum.hasMoreElements(); )           {
            Contact _iter659 = (Contact)_iter659_enum.nextElement();
            _iter659.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      } else if (this.isSetE()) {
        oprot.writeFieldBegin(E_FIELD_DESC);
        this.e.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuffer sb = new StringBuffer("getPromotedBuddyContacts_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws TException {
      // check for required fields
    }

  }

}
