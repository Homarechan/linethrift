/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class BuddyBanner implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("BuddyBanner");

  private static final TField BUDDY_BANNER_LINK_TYPE_FIELD_DESC = new TField("buddyBannerLinkType", TType.I32, (short)1);
  private static final TField BUDDY_BANNER_LINK_FIELD_DESC = new TField("buddyBannerLink", TType.STRING, (short)2);
  private static final TField BUDDY_BANNER_IMAGE_URL_FIELD_DESC = new TField("buddyBannerImageUrl", TType.STRING, (short)3);

  private BuddyBannerLinkType buddyBannerLinkType;
  private String buddyBannerLink;
  private String buddyBannerImageUrl;

  // isset id assignments

  public BuddyBanner() {
  }

  public BuddyBanner(
    BuddyBannerLinkType buddyBannerLinkType,
    String buddyBannerLink,
    String buddyBannerImageUrl)
  {
    this();
    this.buddyBannerLinkType = buddyBannerLinkType;
    this.buddyBannerLink = buddyBannerLink;
    this.buddyBannerImageUrl = buddyBannerImageUrl;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BuddyBanner(BuddyBanner other) {
    if (other.isSetBuddyBannerLinkType()) {
      this.buddyBannerLinkType = other.buddyBannerLinkType;
    }
    if (other.isSetBuddyBannerLink()) {
      this.buddyBannerLink = other.buddyBannerLink;
    }
    if (other.isSetBuddyBannerImageUrl()) {
      this.buddyBannerImageUrl = other.buddyBannerImageUrl;
    }
  }

  public BuddyBanner deepCopy() {
    return new BuddyBanner(this);
  }

  public void clear() {
    this.buddyBannerLinkType = null;
    this.buddyBannerLink = null;
    this.buddyBannerImageUrl = null;
  }

  /**
   * 
   * @see BuddyBannerLinkType
   */
  public BuddyBannerLinkType getBuddyBannerLinkType() {
    return this.buddyBannerLinkType;
  }

  /**
   * 
   * @see BuddyBannerLinkType
   */
  public void setBuddyBannerLinkType(BuddyBannerLinkType buddyBannerLinkType) {
    this.buddyBannerLinkType = buddyBannerLinkType;
  }

  public void unsetBuddyBannerLinkType() {
    this.buddyBannerLinkType = null;
  }

  /** Returns true if field buddyBannerLinkType is set (has been assigned a value) and false otherwise */
  public boolean isSetBuddyBannerLinkType() {
    return this.buddyBannerLinkType != null;
  }

  public void setBuddyBannerLinkTypeIsSet(boolean value) {
    if (!value) {
      this.buddyBannerLinkType = null;
    }
  }

  public String getBuddyBannerLink() {
    return this.buddyBannerLink;
  }

  public void setBuddyBannerLink(String buddyBannerLink) {
    this.buddyBannerLink = buddyBannerLink;
  }

  public void unsetBuddyBannerLink() {
    this.buddyBannerLink = null;
  }

  /** Returns true if field buddyBannerLink is set (has been assigned a value) and false otherwise */
  public boolean isSetBuddyBannerLink() {
    return this.buddyBannerLink != null;
  }

  public void setBuddyBannerLinkIsSet(boolean value) {
    if (!value) {
      this.buddyBannerLink = null;
    }
  }

  public String getBuddyBannerImageUrl() {
    return this.buddyBannerImageUrl;
  }

  public void setBuddyBannerImageUrl(String buddyBannerImageUrl) {
    this.buddyBannerImageUrl = buddyBannerImageUrl;
  }

  public void unsetBuddyBannerImageUrl() {
    this.buddyBannerImageUrl = null;
  }

  /** Returns true if field buddyBannerImageUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetBuddyBannerImageUrl() {
    return this.buddyBannerImageUrl != null;
  }

  public void setBuddyBannerImageUrlIsSet(boolean value) {
    if (!value) {
      this.buddyBannerImageUrl = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BuddyBanner)
      return this.equals((BuddyBanner)that);
    return false;
  }

  public boolean equals(BuddyBanner that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_buddyBannerLinkType = true && this.isSetBuddyBannerLinkType();
    boolean that_present_buddyBannerLinkType = true && that.isSetBuddyBannerLinkType();
    if (this_present_buddyBannerLinkType || that_present_buddyBannerLinkType) {
      if (!(this_present_buddyBannerLinkType && that_present_buddyBannerLinkType))
        return false;
      if (!this.buddyBannerLinkType.equals(that.buddyBannerLinkType))
        return false;
    }

    boolean this_present_buddyBannerLink = true && this.isSetBuddyBannerLink();
    boolean that_present_buddyBannerLink = true && that.isSetBuddyBannerLink();
    if (this_present_buddyBannerLink || that_present_buddyBannerLink) {
      if (!(this_present_buddyBannerLink && that_present_buddyBannerLink))
        return false;
      if (!this.buddyBannerLink.equals(that.buddyBannerLink))
        return false;
    }

    boolean this_present_buddyBannerImageUrl = true && this.isSetBuddyBannerImageUrl();
    boolean that_present_buddyBannerImageUrl = true && that.isSetBuddyBannerImageUrl();
    if (this_present_buddyBannerImageUrl || that_present_buddyBannerImageUrl) {
      if (!(this_present_buddyBannerImageUrl && that_present_buddyBannerImageUrl))
        return false;
      if (!this.buddyBannerImageUrl.equals(that.buddyBannerImageUrl))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    BuddyBanner other = (BuddyBanner)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetBuddyBannerLinkType(), other.isSetBuddyBannerLinkType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuddyBannerLinkType()) {
      lastComparison = TBaseHelper.compareTo(this.buddyBannerLinkType, other.buddyBannerLinkType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetBuddyBannerLink(), other.isSetBuddyBannerLink());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuddyBannerLink()) {
      lastComparison = TBaseHelper.compareTo(this.buddyBannerLink, other.buddyBannerLink);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetBuddyBannerImageUrl(), other.isSetBuddyBannerImageUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuddyBannerImageUrl()) {
      lastComparison = TBaseHelper.compareTo(this.buddyBannerImageUrl, other.buddyBannerImageUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // BUDDY_BANNER_LINK_TYPE
          if (field.type == TType.I32) {
            this.buddyBannerLinkType = BuddyBannerLinkType.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // BUDDY_BANNER_LINK
          if (field.type == TType.STRING) {
            this.buddyBannerLink = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // BUDDY_BANNER_IMAGE_URL
          if (field.type == TType.STRING) {
            this.buddyBannerImageUrl = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.buddyBannerLinkType != null) {
      oprot.writeFieldBegin(BUDDY_BANNER_LINK_TYPE_FIELD_DESC);
      oprot.writeI32(this.buddyBannerLinkType.getValue());
      oprot.writeFieldEnd();
    }
    if (this.buddyBannerLink != null) {
      oprot.writeFieldBegin(BUDDY_BANNER_LINK_FIELD_DESC);
      oprot.writeString(this.buddyBannerLink);
      oprot.writeFieldEnd();
    }
    if (this.buddyBannerImageUrl != null) {
      oprot.writeFieldBegin(BUDDY_BANNER_IMAGE_URL_FIELD_DESC);
      oprot.writeString(this.buddyBannerImageUrl);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("BuddyBanner(");
    boolean first = true;

    sb.append("buddyBannerLinkType:");
    if (this.buddyBannerLinkType == null) {
      sb.append("null");
    } else {
      sb.append(this.buddyBannerLinkType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buddyBannerLink:");
    if (this.buddyBannerLink == null) {
      sb.append("null");
    } else {
      sb.append(this.buddyBannerLink);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buddyBannerImageUrl:");
    if (this.buddyBannerImageUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.buddyBannerImageUrl);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

