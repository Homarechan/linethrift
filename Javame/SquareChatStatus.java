/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class SquareChatStatus implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("SquareChatStatus");

  private static final TField LAST_MESSAGE_FIELD_DESC = new TField("lastMessage", TType.STRUCT, (short)3);
  private static final TField SENDER_DISPLAY_NAME_FIELD_DESC = new TField("senderDisplayName", TType.STRING, (short)4);
  private static final TField OTHER_STATUS_FIELD_DESC = new TField("otherStatus", TType.STRUCT, (short)5);

  private SquareMessage lastMessage;
  private String senderDisplayName;
  private SquareChatStatusWithoutMessage otherStatus;

  // isset id assignments

  public SquareChatStatus() {
  }

  public SquareChatStatus(
    SquareMessage lastMessage,
    String senderDisplayName,
    SquareChatStatusWithoutMessage otherStatus)
  {
    this();
    this.lastMessage = lastMessage;
    this.senderDisplayName = senderDisplayName;
    this.otherStatus = otherStatus;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SquareChatStatus(SquareChatStatus other) {
    if (other.isSetLastMessage()) {
      this.lastMessage = new SquareMessage(other.lastMessage);
    }
    if (other.isSetSenderDisplayName()) {
      this.senderDisplayName = other.senderDisplayName;
    }
    if (other.isSetOtherStatus()) {
      this.otherStatus = new SquareChatStatusWithoutMessage(other.otherStatus);
    }
  }

  public SquareChatStatus deepCopy() {
    return new SquareChatStatus(this);
  }

  public void clear() {
    this.lastMessage = null;
    this.senderDisplayName = null;
    this.otherStatus = null;
  }

  public SquareMessage getLastMessage() {
    return this.lastMessage;
  }

  public void setLastMessage(SquareMessage lastMessage) {
    this.lastMessage = lastMessage;
  }

  public void unsetLastMessage() {
    this.lastMessage = null;
  }

  /** Returns true if field lastMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetLastMessage() {
    return this.lastMessage != null;
  }

  public void setLastMessageIsSet(boolean value) {
    if (!value) {
      this.lastMessage = null;
    }
  }

  public String getSenderDisplayName() {
    return this.senderDisplayName;
  }

  public void setSenderDisplayName(String senderDisplayName) {
    this.senderDisplayName = senderDisplayName;
  }

  public void unsetSenderDisplayName() {
    this.senderDisplayName = null;
  }

  /** Returns true if field senderDisplayName is set (has been assigned a value) and false otherwise */
  public boolean isSetSenderDisplayName() {
    return this.senderDisplayName != null;
  }

  public void setSenderDisplayNameIsSet(boolean value) {
    if (!value) {
      this.senderDisplayName = null;
    }
  }

  public SquareChatStatusWithoutMessage getOtherStatus() {
    return this.otherStatus;
  }

  public void setOtherStatus(SquareChatStatusWithoutMessage otherStatus) {
    this.otherStatus = otherStatus;
  }

  public void unsetOtherStatus() {
    this.otherStatus = null;
  }

  /** Returns true if field otherStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetOtherStatus() {
    return this.otherStatus != null;
  }

  public void setOtherStatusIsSet(boolean value) {
    if (!value) {
      this.otherStatus = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SquareChatStatus)
      return this.equals((SquareChatStatus)that);
    return false;
  }

  public boolean equals(SquareChatStatus that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_lastMessage = true && this.isSetLastMessage();
    boolean that_present_lastMessage = true && that.isSetLastMessage();
    if (this_present_lastMessage || that_present_lastMessage) {
      if (!(this_present_lastMessage && that_present_lastMessage))
        return false;
      if (!this.lastMessage.equals(that.lastMessage))
        return false;
    }

    boolean this_present_senderDisplayName = true && this.isSetSenderDisplayName();
    boolean that_present_senderDisplayName = true && that.isSetSenderDisplayName();
    if (this_present_senderDisplayName || that_present_senderDisplayName) {
      if (!(this_present_senderDisplayName && that_present_senderDisplayName))
        return false;
      if (!this.senderDisplayName.equals(that.senderDisplayName))
        return false;
    }

    boolean this_present_otherStatus = true && this.isSetOtherStatus();
    boolean that_present_otherStatus = true && that.isSetOtherStatus();
    if (this_present_otherStatus || that_present_otherStatus) {
      if (!(this_present_otherStatus && that_present_otherStatus))
        return false;
      if (!this.otherStatus.equals(that.otherStatus))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    SquareChatStatus other = (SquareChatStatus)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetLastMessage(), other.isSetLastMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastMessage()) {
      lastComparison = this.lastMessage.compareTo(other.lastMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetSenderDisplayName(), other.isSetSenderDisplayName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSenderDisplayName()) {
      lastComparison = TBaseHelper.compareTo(this.senderDisplayName, other.senderDisplayName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetOtherStatus(), other.isSetOtherStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOtherStatus()) {
      lastComparison = this.otherStatus.compareTo(other.otherStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 3: // LAST_MESSAGE
          if (field.type == TType.STRUCT) {
            this.lastMessage = new SquareMessage();
            this.lastMessage.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // SENDER_DISPLAY_NAME
          if (field.type == TType.STRING) {
            this.senderDisplayName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // OTHER_STATUS
          if (field.type == TType.STRUCT) {
            this.otherStatus = new SquareChatStatusWithoutMessage();
            this.otherStatus.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.lastMessage != null) {
      oprot.writeFieldBegin(LAST_MESSAGE_FIELD_DESC);
      this.lastMessage.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.senderDisplayName != null) {
      oprot.writeFieldBegin(SENDER_DISPLAY_NAME_FIELD_DESC);
      oprot.writeString(this.senderDisplayName);
      oprot.writeFieldEnd();
    }
    if (this.otherStatus != null) {
      oprot.writeFieldBegin(OTHER_STATUS_FIELD_DESC);
      this.otherStatus.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("SquareChatStatus(");
    boolean first = true;

    sb.append("lastMessage:");
    if (this.lastMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.lastMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("senderDisplayName:");
    if (this.senderDisplayName == null) {
      sb.append("null");
    } else {
      sb.append(this.senderDisplayName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("otherStatus:");
    if (this.otherStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.otherStatus);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

