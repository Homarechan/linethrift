/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class BuddyMessageRequest implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("BuddyMessageRequest");

  private static final TField CONTENT_TYPE_FIELD_DESC = new TField("contentType", TType.I32, (short)1);
  private static final TField TEXT_FIELD_DESC = new TField("text", TType.STRING, (short)2);
  private static final TField LOCATION_FIELD_DESC = new TField("location", TType.STRUCT, (short)3);
  private static final TField CONTENT_FIELD_DESC = new TField("content", TType.STRING, (short)4);
  private static final TField CONTENT_METADATA_FIELD_DESC = new TField("contentMetadata", TType.MAP, (short)5);

  private ContentType contentType;
  private String text;
  private Location location;
  private byte[] content;
  private Hashtable contentMetadata;

  // isset id assignments

  public BuddyMessageRequest() {
  }

  public BuddyMessageRequest(
    ContentType contentType,
    String text,
    Location location,
    byte[] content,
    Hashtable contentMetadata)
  {
    this();
    this.contentType = contentType;
    this.text = text;
    this.location = location;
    this.content = content;
    this.contentMetadata = contentMetadata;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BuddyMessageRequest(BuddyMessageRequest other) {
    if (other.isSetContentType()) {
      this.contentType = other.contentType;
    }
    if (other.isSetText()) {
      this.text = other.text;
    }
    if (other.isSetLocation()) {
      this.location = new Location(other.location);
    }
    if (other.isSetContent()) {
      this.content = new byte[other.content.length];
      System.arraycopy(other.content, 0, content, 0, other.content.length);
    }
    if (other.isSetContentMetadata()) {
      Hashtable __this__contentMetadata = new Hashtable();
      for (Enumeration other_enum = other.contentMetadata.keys(); other_enum.hasMoreElements(); ) {

        String other_element_key = (String)other_enum.nextElement();
        String other_element_value = (String)other.contentMetadata.get(other_element_key);

        String __this__contentMetadata_copy_key = other_element_key;

        String __this__contentMetadata_copy_value = other_element_value;

        __this__contentMetadata.put(__this__contentMetadata_copy_key, __this__contentMetadata_copy_value);
      }
      this.contentMetadata = __this__contentMetadata;
    }
  }

  public BuddyMessageRequest deepCopy() {
    return new BuddyMessageRequest(this);
  }

  public void clear() {
    this.contentType = null;
    this.text = null;
    this.location = null;
    this.content = null;
    this.contentMetadata = null;
  }

  /**
   * 
   * @see ContentType
   */
  public ContentType getContentType() {
    return this.contentType;
  }

  /**
   * 
   * @see ContentType
   */
  public void setContentType(ContentType contentType) {
    this.contentType = contentType;
  }

  public void unsetContentType() {
    this.contentType = null;
  }

  /** Returns true if field contentType is set (has been assigned a value) and false otherwise */
  public boolean isSetContentType() {
    return this.contentType != null;
  }

  public void setContentTypeIsSet(boolean value) {
    if (!value) {
      this.contentType = null;
    }
  }

  public String getText() {
    return this.text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public void unsetText() {
    this.text = null;
  }

  /** Returns true if field text is set (has been assigned a value) and false otherwise */
  public boolean isSetText() {
    return this.text != null;
  }

  public void setTextIsSet(boolean value) {
    if (!value) {
      this.text = null;
    }
  }

  public Location getLocation() {
    return this.location;
  }

  public void setLocation(Location location) {
    this.location = location;
  }

  public void unsetLocation() {
    this.location = null;
  }

  /** Returns true if field location is set (has been assigned a value) and false otherwise */
  public boolean isSetLocation() {
    return this.location != null;
  }

  public void setLocationIsSet(boolean value) {
    if (!value) {
      this.location = null;
    }
  }

  public byte[] getContent() {
    return this.content;
  }

  public void setContent(byte[] content) {
    this.content = content;
  }

  public void unsetContent() {
    this.content = null;
  }

  /** Returns true if field content is set (has been assigned a value) and false otherwise */
  public boolean isSetContent() {
    return this.content != null;
  }

  public void setContentIsSet(boolean value) {
    if (!value) {
      this.content = null;
    }
  }

  public int getContentMetadataSize() {
    return (this.contentMetadata == null) ? 0 : this.contentMetadata.size();
  }

  public void putToContentMetadata(String key, String val) {
    if (this.contentMetadata == null) {
      this.contentMetadata = new Hashtable();
    }
    this.contentMetadata.put(key, val);
  }

  public Hashtable getContentMetadata() {
    return this.contentMetadata;
  }

  public void setContentMetadata(Hashtable contentMetadata) {
    this.contentMetadata = contentMetadata;
  }

  public void unsetContentMetadata() {
    this.contentMetadata = null;
  }

  /** Returns true if field contentMetadata is set (has been assigned a value) and false otherwise */
  public boolean isSetContentMetadata() {
    return this.contentMetadata != null;
  }

  public void setContentMetadataIsSet(boolean value) {
    if (!value) {
      this.contentMetadata = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BuddyMessageRequest)
      return this.equals((BuddyMessageRequest)that);
    return false;
  }

  public boolean equals(BuddyMessageRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_contentType = true && this.isSetContentType();
    boolean that_present_contentType = true && that.isSetContentType();
    if (this_present_contentType || that_present_contentType) {
      if (!(this_present_contentType && that_present_contentType))
        return false;
      if (!this.contentType.equals(that.contentType))
        return false;
    }

    boolean this_present_text = true && this.isSetText();
    boolean that_present_text = true && that.isSetText();
    if (this_present_text || that_present_text) {
      if (!(this_present_text && that_present_text))
        return false;
      if (!this.text.equals(that.text))
        return false;
    }

    boolean this_present_location = true && this.isSetLocation();
    boolean that_present_location = true && that.isSetLocation();
    if (this_present_location || that_present_location) {
      if (!(this_present_location && that_present_location))
        return false;
      if (!this.location.equals(that.location))
        return false;
    }

    boolean this_present_content = true && this.isSetContent();
    boolean that_present_content = true && that.isSetContent();
    if (this_present_content || that_present_content) {
      if (!(this_present_content && that_present_content))
        return false;
      if (TBaseHelper.compareTo(this.content, that.content) != 0)
        return false;
    }

    boolean this_present_contentMetadata = true && this.isSetContentMetadata();
    boolean that_present_contentMetadata = true && that.isSetContentMetadata();
    if (this_present_contentMetadata || that_present_contentMetadata) {
      if (!(this_present_contentMetadata && that_present_contentMetadata))
        return false;
      if (!this.contentMetadata.equals(that.contentMetadata))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    BuddyMessageRequest other = (BuddyMessageRequest)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetContentType(), other.isSetContentType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContentType()) {
      lastComparison = TBaseHelper.compareTo(this.contentType, other.contentType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetText(), other.isSetText());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetText()) {
      lastComparison = TBaseHelper.compareTo(this.text, other.text);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetLocation(), other.isSetLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocation()) {
      lastComparison = this.location.compareTo(other.location);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetContent(), other.isSetContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContent()) {
      lastComparison = TBaseHelper.compareTo(this.content, other.content);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetContentMetadata(), other.isSetContentMetadata());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContentMetadata()) {
      lastComparison = TBaseHelper.compareTo(this.contentMetadata, other.contentMetadata);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // CONTENT_TYPE
          if (field.type == TType.I32) {
            this.contentType = ContentType.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // TEXT
          if (field.type == TType.STRING) {
            this.text = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // LOCATION
          if (field.type == TType.STRUCT) {
            this.location = new Location();
            this.location.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // CONTENT
          if (field.type == TType.STRING) {
            this.content = iprot.readBinary();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // CONTENT_METADATA
          if (field.type == TType.MAP) {
            {
              TMap _map64 = iprot.readMapBegin();
              this.contentMetadata = new Hashtable(2*_map64.size);
              for (int _i65 = 0; _i65 < _map64.size; ++_i65)
              {
                String _key66;
                String _val67;
                _key66 = iprot.readString();
                _val67 = iprot.readString();
                this.contentMetadata.put(_key66, _val67);
              }
              iprot.readMapEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.contentType != null) {
      oprot.writeFieldBegin(CONTENT_TYPE_FIELD_DESC);
      oprot.writeI32(this.contentType.getValue());
      oprot.writeFieldEnd();
    }
    if (this.text != null) {
      oprot.writeFieldBegin(TEXT_FIELD_DESC);
      oprot.writeString(this.text);
      oprot.writeFieldEnd();
    }
    if (this.location != null) {
      oprot.writeFieldBegin(LOCATION_FIELD_DESC);
      this.location.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.content != null) {
      oprot.writeFieldBegin(CONTENT_FIELD_DESC);
      oprot.writeBinary(this.content);
      oprot.writeFieldEnd();
    }
    if (this.contentMetadata != null) {
      oprot.writeFieldBegin(CONTENT_METADATA_FIELD_DESC);
      {
        oprot.writeMapBegin(new TMap(TType.STRING, TType.STRING, this.contentMetadata.size()));
        for (Enumeration _iter68_enum = this.contentMetadata.keys(); _iter68_enum.hasMoreElements(); )         {
          String _iter68 = (String)_iter68_enum.nextElement();
          oprot.writeString(_iter68);
          oprot.writeString(((String)this.contentMetadata.get(_iter68)));
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("BuddyMessageRequest(");
    boolean first = true;

    sb.append("contentType:");
    if (this.contentType == null) {
      sb.append("null");
    } else {
      sb.append(this.contentType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("text:");
    if (this.text == null) {
      sb.append("null");
    } else {
      sb.append(this.text);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("location:");
    if (this.location == null) {
      sb.append("null");
    } else {
      sb.append(this.location);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("content:");
    if (this.content == null) {
      sb.append("null");
    } else {
      TBaseHelper.toString(this.content, sb);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contentMetadata:");
    if (this.contentMetadata == null) {
      sb.append("null");
    } else {
      sb.append(this.contentMetadata);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

