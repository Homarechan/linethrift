/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class Settings implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("Settings");

  private static final TField NOTIFICATION_ENABLE_FIELD_DESC = new TField("notificationEnable", TType.BOOL, (short)10);
  private static final TField NOTIFICATION_MUTE_EXPIRATION_FIELD_DESC = new TField("notificationMuteExpiration", TType.I64, (short)11);
  private static final TField NOTIFICATION_NEW_MESSAGE_FIELD_DESC = new TField("notificationNewMessage", TType.BOOL, (short)12);
  private static final TField NOTIFICATION_GROUP_INVITATION_FIELD_DESC = new TField("notificationGroupInvitation", TType.BOOL, (short)13);
  private static final TField NOTIFICATION_SHOW_MESSAGE_FIELD_DESC = new TField("notificationShowMessage", TType.BOOL, (short)14);
  private static final TField NOTIFICATION_INCOMING_CALL_FIELD_DESC = new TField("notificationIncomingCall", TType.BOOL, (short)15);
  private static final TField NOTIFICATION_SOUND_MESSAGE_FIELD_DESC = new TField("notificationSoundMessage", TType.STRING, (short)16);
  private static final TField NOTIFICATION_SOUND_GROUP_FIELD_DESC = new TField("notificationSoundGroup", TType.STRING, (short)17);
  private static final TField NOTIFICATION_DISABLED_WITH_SUB_FIELD_DESC = new TField("notificationDisabledWithSub", TType.BOOL, (short)18);
  private static final TField PRIVACY_SYNC_CONTACTS_FIELD_DESC = new TField("privacySyncContacts", TType.BOOL, (short)20);
  private static final TField PRIVACY_SEARCH_BY_PHONE_NUMBER_FIELD_DESC = new TField("privacySearchByPhoneNumber", TType.BOOL, (short)21);
  private static final TField PRIVACY_SEARCH_BY_USERID_FIELD_DESC = new TField("privacySearchByUserid", TType.BOOL, (short)22);
  private static final TField PRIVACY_SEARCH_BY_EMAIL_FIELD_DESC = new TField("privacySearchByEmail", TType.BOOL, (short)23);
  private static final TField PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN_FIELD_DESC = new TField("privacyAllowSecondaryDeviceLogin", TType.BOOL, (short)24);
  private static final TField PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME_FIELD_DESC = new TField("privacyProfileImagePostToMyhome", TType.BOOL, (short)25);
  private static final TField PRIVACY_RECEIVE_MESSAGES_FROM_NOT_FRIEND_FIELD_DESC = new TField("privacyReceiveMessagesFromNotFriend", TType.BOOL, (short)26);
  private static final TField CONTACT_MY_TICKET_FIELD_DESC = new TField("contactMyTicket", TType.STRING, (short)30);
  private static final TField IDENTITY_PROVIDER_FIELD_DESC = new TField("identityProvider", TType.I32, (short)40);
  private static final TField IDENTITY_IDENTIFIER_FIELD_DESC = new TField("identityIdentifier", TType.STRING, (short)41);
  private static final TField SNS_ACCOUNTS_FIELD_DESC = new TField("snsAccounts", TType.MAP, (short)42);
  private static final TField PHONE_REGISTRATION_FIELD_DESC = new TField("phoneRegistration", TType.BOOL, (short)43);
  private static final TField EMAIL_CONFIRMATION_STATUS_FIELD_DESC = new TField("emailConfirmationStatus", TType.I32, (short)44);
  private static final TField PREFERENCE_LOCALE_FIELD_DESC = new TField("preferenceLocale", TType.STRING, (short)50);
  private static final TField CUSTOM_MODES_FIELD_DESC = new TField("customModes", TType.MAP, (short)60);
  private static final TField E2EE_ENABLE_FIELD_DESC = new TField("e2eeEnable", TType.BOOL, (short)61);
  private static final TField HITOKOTO_BACKUP_REQUESTED_FIELD_DESC = new TField("hitokotoBackupRequested", TType.BOOL, (short)62);
  private static final TField PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME_FIELD_DESC = new TField("privacyProfileMusicPostToMyhome", TType.BOOL, (short)63);
  private static final TField PRIVACY_ALLOW_NEARBY_FIELD_DESC = new TField("privacyAllowNearby", TType.BOOL, (short)65);
  private static final TField AGREEMENT_NEARBY_TIME_FIELD_DESC = new TField("agreementNearbyTime", TType.I64, (short)66);
  private static final TField AGREEMENT_SQUARE_TIME_FIELD_DESC = new TField("agreementSquareTime", TType.I64, (short)67);
  private static final TField NOTIFICATION_MENTION_FIELD_DESC = new TField("notificationMention", TType.BOOL, (short)68);
  private static final TField BOT_USE_AGREEMENT_ACCEPTED_AT_FIELD_DESC = new TField("botUseAgreementAcceptedAt", TType.I64, (short)69);

  private boolean notificationEnable;
  private long notificationMuteExpiration;
  private boolean notificationNewMessage;
  private boolean notificationGroupInvitation;
  private boolean notificationShowMessage;
  private boolean notificationIncomingCall;
  private String notificationSoundMessage;
  private String notificationSoundGroup;
  private boolean notificationDisabledWithSub;
  private boolean privacySyncContacts;
  private boolean privacySearchByPhoneNumber;
  private boolean privacySearchByUserid;
  private boolean privacySearchByEmail;
  private boolean privacyAllowSecondaryDeviceLogin;
  private boolean privacyProfileImagePostToMyhome;
  private boolean privacyReceiveMessagesFromNotFriend;
  private String contactMyTicket;
  private IdentityProvider identityProvider;
  private String identityIdentifier;
  private Hashtable snsAccounts;
  private boolean phoneRegistration;
  private EmailConfirmationStatus emailConfirmationStatus;
  private String preferenceLocale;
  private Hashtable customModes;
  private boolean e2eeEnable;
  private boolean hitokotoBackupRequested;
  private boolean privacyProfileMusicPostToMyhome;
  private boolean privacyAllowNearby;
  private long agreementNearbyTime;
  private long agreementSquareTime;
  private boolean notificationMention;
  private long botUseAgreementAcceptedAt;

  // isset id assignments
  private static final int __NOTIFICATIONENABLE_ISSET_ID = 0;
  private static final int __NOTIFICATIONMUTEEXPIRATION_ISSET_ID = 1;
  private static final int __NOTIFICATIONNEWMESSAGE_ISSET_ID = 2;
  private static final int __NOTIFICATIONGROUPINVITATION_ISSET_ID = 3;
  private static final int __NOTIFICATIONSHOWMESSAGE_ISSET_ID = 4;
  private static final int __NOTIFICATIONINCOMINGCALL_ISSET_ID = 5;
  private static final int __NOTIFICATIONDISABLEDWITHSUB_ISSET_ID = 6;
  private static final int __PRIVACYSYNCCONTACTS_ISSET_ID = 7;
  private static final int __PRIVACYSEARCHBYPHONENUMBER_ISSET_ID = 8;
  private static final int __PRIVACYSEARCHBYUSERID_ISSET_ID = 9;
  private static final int __PRIVACYSEARCHBYEMAIL_ISSET_ID = 10;
  private static final int __PRIVACYALLOWSECONDARYDEVICELOGIN_ISSET_ID = 11;
  private static final int __PRIVACYPROFILEIMAGEPOSTTOMYHOME_ISSET_ID = 12;
  private static final int __PRIVACYRECEIVEMESSAGESFROMNOTFRIEND_ISSET_ID = 13;
  private static final int __PHONEREGISTRATION_ISSET_ID = 14;
  private static final int __E2EEENABLE_ISSET_ID = 15;
  private static final int __HITOKOTOBACKUPREQUESTED_ISSET_ID = 16;
  private static final int __PRIVACYPROFILEMUSICPOSTTOMYHOME_ISSET_ID = 17;
  private static final int __PRIVACYALLOWNEARBY_ISSET_ID = 18;
  private static final int __AGREEMENTNEARBYTIME_ISSET_ID = 19;
  private static final int __AGREEMENTSQUARETIME_ISSET_ID = 20;
  private static final int __NOTIFICATIONMENTION_ISSET_ID = 21;
  private static final int __BOTUSEAGREEMENTACCEPTEDAT_ISSET_ID = 22;
  private boolean[] __isset_vector = new boolean[23];

  public Settings() {
  }

  public Settings(
    boolean notificationEnable,
    long notificationMuteExpiration,
    boolean notificationNewMessage,
    boolean notificationGroupInvitation,
    boolean notificationShowMessage,
    boolean notificationIncomingCall,
    String notificationSoundMessage,
    String notificationSoundGroup,
    boolean notificationDisabledWithSub,
    boolean privacySyncContacts,
    boolean privacySearchByPhoneNumber,
    boolean privacySearchByUserid,
    boolean privacySearchByEmail,
    boolean privacyAllowSecondaryDeviceLogin,
    boolean privacyProfileImagePostToMyhome,
    boolean privacyReceiveMessagesFromNotFriend,
    String contactMyTicket,
    IdentityProvider identityProvider,
    String identityIdentifier,
    Hashtable snsAccounts,
    boolean phoneRegistration,
    EmailConfirmationStatus emailConfirmationStatus,
    String preferenceLocale,
    Hashtable customModes,
    boolean e2eeEnable,
    boolean hitokotoBackupRequested,
    boolean privacyProfileMusicPostToMyhome,
    boolean privacyAllowNearby,
    long agreementNearbyTime,
    long agreementSquareTime,
    boolean notificationMention,
    long botUseAgreementAcceptedAt)
  {
    this();
    this.notificationEnable = notificationEnable;
    setNotificationEnableIsSet(true);
    this.notificationMuteExpiration = notificationMuteExpiration;
    setNotificationMuteExpirationIsSet(true);
    this.notificationNewMessage = notificationNewMessage;
    setNotificationNewMessageIsSet(true);
    this.notificationGroupInvitation = notificationGroupInvitation;
    setNotificationGroupInvitationIsSet(true);
    this.notificationShowMessage = notificationShowMessage;
    setNotificationShowMessageIsSet(true);
    this.notificationIncomingCall = notificationIncomingCall;
    setNotificationIncomingCallIsSet(true);
    this.notificationSoundMessage = notificationSoundMessage;
    this.notificationSoundGroup = notificationSoundGroup;
    this.notificationDisabledWithSub = notificationDisabledWithSub;
    setNotificationDisabledWithSubIsSet(true);
    this.privacySyncContacts = privacySyncContacts;
    setPrivacySyncContactsIsSet(true);
    this.privacySearchByPhoneNumber = privacySearchByPhoneNumber;
    setPrivacySearchByPhoneNumberIsSet(true);
    this.privacySearchByUserid = privacySearchByUserid;
    setPrivacySearchByUseridIsSet(true);
    this.privacySearchByEmail = privacySearchByEmail;
    setPrivacySearchByEmailIsSet(true);
    this.privacyAllowSecondaryDeviceLogin = privacyAllowSecondaryDeviceLogin;
    setPrivacyAllowSecondaryDeviceLoginIsSet(true);
    this.privacyProfileImagePostToMyhome = privacyProfileImagePostToMyhome;
    setPrivacyProfileImagePostToMyhomeIsSet(true);
    this.privacyReceiveMessagesFromNotFriend = privacyReceiveMessagesFromNotFriend;
    setPrivacyReceiveMessagesFromNotFriendIsSet(true);
    this.contactMyTicket = contactMyTicket;
    this.identityProvider = identityProvider;
    this.identityIdentifier = identityIdentifier;
    this.snsAccounts = snsAccounts;
    this.phoneRegistration = phoneRegistration;
    setPhoneRegistrationIsSet(true);
    this.emailConfirmationStatus = emailConfirmationStatus;
    this.preferenceLocale = preferenceLocale;
    this.customModes = customModes;
    this.e2eeEnable = e2eeEnable;
    setE2eeEnableIsSet(true);
    this.hitokotoBackupRequested = hitokotoBackupRequested;
    setHitokotoBackupRequestedIsSet(true);
    this.privacyProfileMusicPostToMyhome = privacyProfileMusicPostToMyhome;
    setPrivacyProfileMusicPostToMyhomeIsSet(true);
    this.privacyAllowNearby = privacyAllowNearby;
    setPrivacyAllowNearbyIsSet(true);
    this.agreementNearbyTime = agreementNearbyTime;
    setAgreementNearbyTimeIsSet(true);
    this.agreementSquareTime = agreementSquareTime;
    setAgreementSquareTimeIsSet(true);
    this.notificationMention = notificationMention;
    setNotificationMentionIsSet(true);
    this.botUseAgreementAcceptedAt = botUseAgreementAcceptedAt;
    setBotUseAgreementAcceptedAtIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Settings(Settings other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    this.notificationEnable = other.notificationEnable;
    this.notificationMuteExpiration = other.notificationMuteExpiration;
    this.notificationNewMessage = other.notificationNewMessage;
    this.notificationGroupInvitation = other.notificationGroupInvitation;
    this.notificationShowMessage = other.notificationShowMessage;
    this.notificationIncomingCall = other.notificationIncomingCall;
    if (other.isSetNotificationSoundMessage()) {
      this.notificationSoundMessage = other.notificationSoundMessage;
    }
    if (other.isSetNotificationSoundGroup()) {
      this.notificationSoundGroup = other.notificationSoundGroup;
    }
    this.notificationDisabledWithSub = other.notificationDisabledWithSub;
    this.privacySyncContacts = other.privacySyncContacts;
    this.privacySearchByPhoneNumber = other.privacySearchByPhoneNumber;
    this.privacySearchByUserid = other.privacySearchByUserid;
    this.privacySearchByEmail = other.privacySearchByEmail;
    this.privacyAllowSecondaryDeviceLogin = other.privacyAllowSecondaryDeviceLogin;
    this.privacyProfileImagePostToMyhome = other.privacyProfileImagePostToMyhome;
    this.privacyReceiveMessagesFromNotFriend = other.privacyReceiveMessagesFromNotFriend;
    if (other.isSetContactMyTicket()) {
      this.contactMyTicket = other.contactMyTicket;
    }
    if (other.isSetIdentityProvider()) {
      this.identityProvider = other.identityProvider;
    }
    if (other.isSetIdentityIdentifier()) {
      this.identityIdentifier = other.identityIdentifier;
    }
    if (other.isSetSnsAccounts()) {
      Hashtable __this__snsAccounts = new Hashtable();
      for (Enumeration other_enum = other.snsAccounts.keys(); other_enum.hasMoreElements(); ) {

        SnsIdType other_element_key = (SnsIdType)other_enum.nextElement();
        String other_element_value = (String)other.snsAccounts.get(other_element_key);

        SnsIdType __this__snsAccounts_copy_key = other_element_key;

        String __this__snsAccounts_copy_value = other_element_value;

        __this__snsAccounts.put(__this__snsAccounts_copy_key, __this__snsAccounts_copy_value);
      }
      this.snsAccounts = __this__snsAccounts;
    }
    this.phoneRegistration = other.phoneRegistration;
    if (other.isSetEmailConfirmationStatus()) {
      this.emailConfirmationStatus = other.emailConfirmationStatus;
    }
    if (other.isSetPreferenceLocale()) {
      this.preferenceLocale = other.preferenceLocale;
    }
    if (other.isSetCustomModes()) {
      Hashtable __this__customModes = new Hashtable();
      for (Enumeration other_enum = other.customModes.keys(); other_enum.hasMoreElements(); ) {

        CustomMode other_element_key = (CustomMode)other_enum.nextElement();
        String other_element_value = (String)other.customModes.get(other_element_key);

        CustomMode __this__customModes_copy_key = other_element_key;

        String __this__customModes_copy_value = other_element_value;

        __this__customModes.put(__this__customModes_copy_key, __this__customModes_copy_value);
      }
      this.customModes = __this__customModes;
    }
    this.e2eeEnable = other.e2eeEnable;
    this.hitokotoBackupRequested = other.hitokotoBackupRequested;
    this.privacyProfileMusicPostToMyhome = other.privacyProfileMusicPostToMyhome;
    this.privacyAllowNearby = other.privacyAllowNearby;
    this.agreementNearbyTime = other.agreementNearbyTime;
    this.agreementSquareTime = other.agreementSquareTime;
    this.notificationMention = other.notificationMention;
    this.botUseAgreementAcceptedAt = other.botUseAgreementAcceptedAt;
  }

  public Settings deepCopy() {
    return new Settings(this);
  }

  public void clear() {
    setNotificationEnableIsSet(false);
    this.notificationEnable = false;
    setNotificationMuteExpirationIsSet(false);
    this.notificationMuteExpiration = 0;
    setNotificationNewMessageIsSet(false);
    this.notificationNewMessage = false;
    setNotificationGroupInvitationIsSet(false);
    this.notificationGroupInvitation = false;
    setNotificationShowMessageIsSet(false);
    this.notificationShowMessage = false;
    setNotificationIncomingCallIsSet(false);
    this.notificationIncomingCall = false;
    this.notificationSoundMessage = null;
    this.notificationSoundGroup = null;
    setNotificationDisabledWithSubIsSet(false);
    this.notificationDisabledWithSub = false;
    setPrivacySyncContactsIsSet(false);
    this.privacySyncContacts = false;
    setPrivacySearchByPhoneNumberIsSet(false);
    this.privacySearchByPhoneNumber = false;
    setPrivacySearchByUseridIsSet(false);
    this.privacySearchByUserid = false;
    setPrivacySearchByEmailIsSet(false);
    this.privacySearchByEmail = false;
    setPrivacyAllowSecondaryDeviceLoginIsSet(false);
    this.privacyAllowSecondaryDeviceLogin = false;
    setPrivacyProfileImagePostToMyhomeIsSet(false);
    this.privacyProfileImagePostToMyhome = false;
    setPrivacyReceiveMessagesFromNotFriendIsSet(false);
    this.privacyReceiveMessagesFromNotFriend = false;
    this.contactMyTicket = null;
    this.identityProvider = null;
    this.identityIdentifier = null;
    this.snsAccounts = null;
    setPhoneRegistrationIsSet(false);
    this.phoneRegistration = false;
    this.emailConfirmationStatus = null;
    this.preferenceLocale = null;
    this.customModes = null;
    setE2eeEnableIsSet(false);
    this.e2eeEnable = false;
    setHitokotoBackupRequestedIsSet(false);
    this.hitokotoBackupRequested = false;
    setPrivacyProfileMusicPostToMyhomeIsSet(false);
    this.privacyProfileMusicPostToMyhome = false;
    setPrivacyAllowNearbyIsSet(false);
    this.privacyAllowNearby = false;
    setAgreementNearbyTimeIsSet(false);
    this.agreementNearbyTime = 0;
    setAgreementSquareTimeIsSet(false);
    this.agreementSquareTime = 0;
    setNotificationMentionIsSet(false);
    this.notificationMention = false;
    setBotUseAgreementAcceptedAtIsSet(false);
    this.botUseAgreementAcceptedAt = 0;
  }

  public boolean isNotificationEnable() {
    return this.notificationEnable;
  }

  public void setNotificationEnable(boolean notificationEnable) {
    this.notificationEnable = notificationEnable;
    setNotificationEnableIsSet(true);
  }

  public void unsetNotificationEnable() {
    __isset_vector[__NOTIFICATIONENABLE_ISSET_ID] = false;
  }

  /** Returns true if field notificationEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationEnable() {
    return __isset_vector[__NOTIFICATIONENABLE_ISSET_ID];
  }

  public void setNotificationEnableIsSet(boolean value) {
    __isset_vector[__NOTIFICATIONENABLE_ISSET_ID] = value;
  }

  public long getNotificationMuteExpiration() {
    return this.notificationMuteExpiration;
  }

  public void setNotificationMuteExpiration(long notificationMuteExpiration) {
    this.notificationMuteExpiration = notificationMuteExpiration;
    setNotificationMuteExpirationIsSet(true);
  }

  public void unsetNotificationMuteExpiration() {
    __isset_vector[__NOTIFICATIONMUTEEXPIRATION_ISSET_ID] = false;
  }

  /** Returns true if field notificationMuteExpiration is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationMuteExpiration() {
    return __isset_vector[__NOTIFICATIONMUTEEXPIRATION_ISSET_ID];
  }

  public void setNotificationMuteExpirationIsSet(boolean value) {
    __isset_vector[__NOTIFICATIONMUTEEXPIRATION_ISSET_ID] = value;
  }

  public boolean isNotificationNewMessage() {
    return this.notificationNewMessage;
  }

  public void setNotificationNewMessage(boolean notificationNewMessage) {
    this.notificationNewMessage = notificationNewMessage;
    setNotificationNewMessageIsSet(true);
  }

  public void unsetNotificationNewMessage() {
    __isset_vector[__NOTIFICATIONNEWMESSAGE_ISSET_ID] = false;
  }

  /** Returns true if field notificationNewMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationNewMessage() {
    return __isset_vector[__NOTIFICATIONNEWMESSAGE_ISSET_ID];
  }

  public void setNotificationNewMessageIsSet(boolean value) {
    __isset_vector[__NOTIFICATIONNEWMESSAGE_ISSET_ID] = value;
  }

  public boolean isNotificationGroupInvitation() {
    return this.notificationGroupInvitation;
  }

  public void setNotificationGroupInvitation(boolean notificationGroupInvitation) {
    this.notificationGroupInvitation = notificationGroupInvitation;
    setNotificationGroupInvitationIsSet(true);
  }

  public void unsetNotificationGroupInvitation() {
    __isset_vector[__NOTIFICATIONGROUPINVITATION_ISSET_ID] = false;
  }

  /** Returns true if field notificationGroupInvitation is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationGroupInvitation() {
    return __isset_vector[__NOTIFICATIONGROUPINVITATION_ISSET_ID];
  }

  public void setNotificationGroupInvitationIsSet(boolean value) {
    __isset_vector[__NOTIFICATIONGROUPINVITATION_ISSET_ID] = value;
  }

  public boolean isNotificationShowMessage() {
    return this.notificationShowMessage;
  }

  public void setNotificationShowMessage(boolean notificationShowMessage) {
    this.notificationShowMessage = notificationShowMessage;
    setNotificationShowMessageIsSet(true);
  }

  public void unsetNotificationShowMessage() {
    __isset_vector[__NOTIFICATIONSHOWMESSAGE_ISSET_ID] = false;
  }

  /** Returns true if field notificationShowMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationShowMessage() {
    return __isset_vector[__NOTIFICATIONSHOWMESSAGE_ISSET_ID];
  }

  public void setNotificationShowMessageIsSet(boolean value) {
    __isset_vector[__NOTIFICATIONSHOWMESSAGE_ISSET_ID] = value;
  }

  public boolean isNotificationIncomingCall() {
    return this.notificationIncomingCall;
  }

  public void setNotificationIncomingCall(boolean notificationIncomingCall) {
    this.notificationIncomingCall = notificationIncomingCall;
    setNotificationIncomingCallIsSet(true);
  }

  public void unsetNotificationIncomingCall() {
    __isset_vector[__NOTIFICATIONINCOMINGCALL_ISSET_ID] = false;
  }

  /** Returns true if field notificationIncomingCall is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationIncomingCall() {
    return __isset_vector[__NOTIFICATIONINCOMINGCALL_ISSET_ID];
  }

  public void setNotificationIncomingCallIsSet(boolean value) {
    __isset_vector[__NOTIFICATIONINCOMINGCALL_ISSET_ID] = value;
  }

  public String getNotificationSoundMessage() {
    return this.notificationSoundMessage;
  }

  public void setNotificationSoundMessage(String notificationSoundMessage) {
    this.notificationSoundMessage = notificationSoundMessage;
  }

  public void unsetNotificationSoundMessage() {
    this.notificationSoundMessage = null;
  }

  /** Returns true if field notificationSoundMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationSoundMessage() {
    return this.notificationSoundMessage != null;
  }

  public void setNotificationSoundMessageIsSet(boolean value) {
    if (!value) {
      this.notificationSoundMessage = null;
    }
  }

  public String getNotificationSoundGroup() {
    return this.notificationSoundGroup;
  }

  public void setNotificationSoundGroup(String notificationSoundGroup) {
    this.notificationSoundGroup = notificationSoundGroup;
  }

  public void unsetNotificationSoundGroup() {
    this.notificationSoundGroup = null;
  }

  /** Returns true if field notificationSoundGroup is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationSoundGroup() {
    return this.notificationSoundGroup != null;
  }

  public void setNotificationSoundGroupIsSet(boolean value) {
    if (!value) {
      this.notificationSoundGroup = null;
    }
  }

  public boolean isNotificationDisabledWithSub() {
    return this.notificationDisabledWithSub;
  }

  public void setNotificationDisabledWithSub(boolean notificationDisabledWithSub) {
    this.notificationDisabledWithSub = notificationDisabledWithSub;
    setNotificationDisabledWithSubIsSet(true);
  }

  public void unsetNotificationDisabledWithSub() {
    __isset_vector[__NOTIFICATIONDISABLEDWITHSUB_ISSET_ID] = false;
  }

  /** Returns true if field notificationDisabledWithSub is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationDisabledWithSub() {
    return __isset_vector[__NOTIFICATIONDISABLEDWITHSUB_ISSET_ID];
  }

  public void setNotificationDisabledWithSubIsSet(boolean value) {
    __isset_vector[__NOTIFICATIONDISABLEDWITHSUB_ISSET_ID] = value;
  }

  public boolean isPrivacySyncContacts() {
    return this.privacySyncContacts;
  }

  public void setPrivacySyncContacts(boolean privacySyncContacts) {
    this.privacySyncContacts = privacySyncContacts;
    setPrivacySyncContactsIsSet(true);
  }

  public void unsetPrivacySyncContacts() {
    __isset_vector[__PRIVACYSYNCCONTACTS_ISSET_ID] = false;
  }

  /** Returns true if field privacySyncContacts is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivacySyncContacts() {
    return __isset_vector[__PRIVACYSYNCCONTACTS_ISSET_ID];
  }

  public void setPrivacySyncContactsIsSet(boolean value) {
    __isset_vector[__PRIVACYSYNCCONTACTS_ISSET_ID] = value;
  }

  public boolean isPrivacySearchByPhoneNumber() {
    return this.privacySearchByPhoneNumber;
  }

  public void setPrivacySearchByPhoneNumber(boolean privacySearchByPhoneNumber) {
    this.privacySearchByPhoneNumber = privacySearchByPhoneNumber;
    setPrivacySearchByPhoneNumberIsSet(true);
  }

  public void unsetPrivacySearchByPhoneNumber() {
    __isset_vector[__PRIVACYSEARCHBYPHONENUMBER_ISSET_ID] = false;
  }

  /** Returns true if field privacySearchByPhoneNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivacySearchByPhoneNumber() {
    return __isset_vector[__PRIVACYSEARCHBYPHONENUMBER_ISSET_ID];
  }

  public void setPrivacySearchByPhoneNumberIsSet(boolean value) {
    __isset_vector[__PRIVACYSEARCHBYPHONENUMBER_ISSET_ID] = value;
  }

  public boolean isPrivacySearchByUserid() {
    return this.privacySearchByUserid;
  }

  public void setPrivacySearchByUserid(boolean privacySearchByUserid) {
    this.privacySearchByUserid = privacySearchByUserid;
    setPrivacySearchByUseridIsSet(true);
  }

  public void unsetPrivacySearchByUserid() {
    __isset_vector[__PRIVACYSEARCHBYUSERID_ISSET_ID] = false;
  }

  /** Returns true if field privacySearchByUserid is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivacySearchByUserid() {
    return __isset_vector[__PRIVACYSEARCHBYUSERID_ISSET_ID];
  }

  public void setPrivacySearchByUseridIsSet(boolean value) {
    __isset_vector[__PRIVACYSEARCHBYUSERID_ISSET_ID] = value;
  }

  public boolean isPrivacySearchByEmail() {
    return this.privacySearchByEmail;
  }

  public void setPrivacySearchByEmail(boolean privacySearchByEmail) {
    this.privacySearchByEmail = privacySearchByEmail;
    setPrivacySearchByEmailIsSet(true);
  }

  public void unsetPrivacySearchByEmail() {
    __isset_vector[__PRIVACYSEARCHBYEMAIL_ISSET_ID] = false;
  }

  /** Returns true if field privacySearchByEmail is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivacySearchByEmail() {
    return __isset_vector[__PRIVACYSEARCHBYEMAIL_ISSET_ID];
  }

  public void setPrivacySearchByEmailIsSet(boolean value) {
    __isset_vector[__PRIVACYSEARCHBYEMAIL_ISSET_ID] = value;
  }

  public boolean isPrivacyAllowSecondaryDeviceLogin() {
    return this.privacyAllowSecondaryDeviceLogin;
  }

  public void setPrivacyAllowSecondaryDeviceLogin(boolean privacyAllowSecondaryDeviceLogin) {
    this.privacyAllowSecondaryDeviceLogin = privacyAllowSecondaryDeviceLogin;
    setPrivacyAllowSecondaryDeviceLoginIsSet(true);
  }

  public void unsetPrivacyAllowSecondaryDeviceLogin() {
    __isset_vector[__PRIVACYALLOWSECONDARYDEVICELOGIN_ISSET_ID] = false;
  }

  /** Returns true if field privacyAllowSecondaryDeviceLogin is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivacyAllowSecondaryDeviceLogin() {
    return __isset_vector[__PRIVACYALLOWSECONDARYDEVICELOGIN_ISSET_ID];
  }

  public void setPrivacyAllowSecondaryDeviceLoginIsSet(boolean value) {
    __isset_vector[__PRIVACYALLOWSECONDARYDEVICELOGIN_ISSET_ID] = value;
  }

  public boolean isPrivacyProfileImagePostToMyhome() {
    return this.privacyProfileImagePostToMyhome;
  }

  public void setPrivacyProfileImagePostToMyhome(boolean privacyProfileImagePostToMyhome) {
    this.privacyProfileImagePostToMyhome = privacyProfileImagePostToMyhome;
    setPrivacyProfileImagePostToMyhomeIsSet(true);
  }

  public void unsetPrivacyProfileImagePostToMyhome() {
    __isset_vector[__PRIVACYPROFILEIMAGEPOSTTOMYHOME_ISSET_ID] = false;
  }

  /** Returns true if field privacyProfileImagePostToMyhome is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivacyProfileImagePostToMyhome() {
    return __isset_vector[__PRIVACYPROFILEIMAGEPOSTTOMYHOME_ISSET_ID];
  }

  public void setPrivacyProfileImagePostToMyhomeIsSet(boolean value) {
    __isset_vector[__PRIVACYPROFILEIMAGEPOSTTOMYHOME_ISSET_ID] = value;
  }

  public boolean isPrivacyReceiveMessagesFromNotFriend() {
    return this.privacyReceiveMessagesFromNotFriend;
  }

  public void setPrivacyReceiveMessagesFromNotFriend(boolean privacyReceiveMessagesFromNotFriend) {
    this.privacyReceiveMessagesFromNotFriend = privacyReceiveMessagesFromNotFriend;
    setPrivacyReceiveMessagesFromNotFriendIsSet(true);
  }

  public void unsetPrivacyReceiveMessagesFromNotFriend() {
    __isset_vector[__PRIVACYRECEIVEMESSAGESFROMNOTFRIEND_ISSET_ID] = false;
  }

  /** Returns true if field privacyReceiveMessagesFromNotFriend is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivacyReceiveMessagesFromNotFriend() {
    return __isset_vector[__PRIVACYRECEIVEMESSAGESFROMNOTFRIEND_ISSET_ID];
  }

  public void setPrivacyReceiveMessagesFromNotFriendIsSet(boolean value) {
    __isset_vector[__PRIVACYRECEIVEMESSAGESFROMNOTFRIEND_ISSET_ID] = value;
  }

  public String getContactMyTicket() {
    return this.contactMyTicket;
  }

  public void setContactMyTicket(String contactMyTicket) {
    this.contactMyTicket = contactMyTicket;
  }

  public void unsetContactMyTicket() {
    this.contactMyTicket = null;
  }

  /** Returns true if field contactMyTicket is set (has been assigned a value) and false otherwise */
  public boolean isSetContactMyTicket() {
    return this.contactMyTicket != null;
  }

  public void setContactMyTicketIsSet(boolean value) {
    if (!value) {
      this.contactMyTicket = null;
    }
  }

  /**
   * 
   * @see IdentityProvider
   */
  public IdentityProvider getIdentityProvider() {
    return this.identityProvider;
  }

  /**
   * 
   * @see IdentityProvider
   */
  public void setIdentityProvider(IdentityProvider identityProvider) {
    this.identityProvider = identityProvider;
  }

  public void unsetIdentityProvider() {
    this.identityProvider = null;
  }

  /** Returns true if field identityProvider is set (has been assigned a value) and false otherwise */
  public boolean isSetIdentityProvider() {
    return this.identityProvider != null;
  }

  public void setIdentityProviderIsSet(boolean value) {
    if (!value) {
      this.identityProvider = null;
    }
  }

  public String getIdentityIdentifier() {
    return this.identityIdentifier;
  }

  public void setIdentityIdentifier(String identityIdentifier) {
    this.identityIdentifier = identityIdentifier;
  }

  public void unsetIdentityIdentifier() {
    this.identityIdentifier = null;
  }

  /** Returns true if field identityIdentifier is set (has been assigned a value) and false otherwise */
  public boolean isSetIdentityIdentifier() {
    return this.identityIdentifier != null;
  }

  public void setIdentityIdentifierIsSet(boolean value) {
    if (!value) {
      this.identityIdentifier = null;
    }
  }

  public int getSnsAccountsSize() {
    return (this.snsAccounts == null) ? 0 : this.snsAccounts.size();
  }

  public void putToSnsAccounts(SnsIdType key, String val) {
    if (this.snsAccounts == null) {
      this.snsAccounts = new Hashtable();
    }
    this.snsAccounts.put(key, val);
  }

  public Hashtable getSnsAccounts() {
    return this.snsAccounts;
  }

  public void setSnsAccounts(Hashtable snsAccounts) {
    this.snsAccounts = snsAccounts;
  }

  public void unsetSnsAccounts() {
    this.snsAccounts = null;
  }

  /** Returns true if field snsAccounts is set (has been assigned a value) and false otherwise */
  public boolean isSetSnsAccounts() {
    return this.snsAccounts != null;
  }

  public void setSnsAccountsIsSet(boolean value) {
    if (!value) {
      this.snsAccounts = null;
    }
  }

  public boolean isPhoneRegistration() {
    return this.phoneRegistration;
  }

  public void setPhoneRegistration(boolean phoneRegistration) {
    this.phoneRegistration = phoneRegistration;
    setPhoneRegistrationIsSet(true);
  }

  public void unsetPhoneRegistration() {
    __isset_vector[__PHONEREGISTRATION_ISSET_ID] = false;
  }

  /** Returns true if field phoneRegistration is set (has been assigned a value) and false otherwise */
  public boolean isSetPhoneRegistration() {
    return __isset_vector[__PHONEREGISTRATION_ISSET_ID];
  }

  public void setPhoneRegistrationIsSet(boolean value) {
    __isset_vector[__PHONEREGISTRATION_ISSET_ID] = value;
  }

  /**
   * 
   * @see EmailConfirmationStatus
   */
  public EmailConfirmationStatus getEmailConfirmationStatus() {
    return this.emailConfirmationStatus;
  }

  /**
   * 
   * @see EmailConfirmationStatus
   */
  public void setEmailConfirmationStatus(EmailConfirmationStatus emailConfirmationStatus) {
    this.emailConfirmationStatus = emailConfirmationStatus;
  }

  public void unsetEmailConfirmationStatus() {
    this.emailConfirmationStatus = null;
  }

  /** Returns true if field emailConfirmationStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailConfirmationStatus() {
    return this.emailConfirmationStatus != null;
  }

  public void setEmailConfirmationStatusIsSet(boolean value) {
    if (!value) {
      this.emailConfirmationStatus = null;
    }
  }

  public String getPreferenceLocale() {
    return this.preferenceLocale;
  }

  public void setPreferenceLocale(String preferenceLocale) {
    this.preferenceLocale = preferenceLocale;
  }

  public void unsetPreferenceLocale() {
    this.preferenceLocale = null;
  }

  /** Returns true if field preferenceLocale is set (has been assigned a value) and false otherwise */
  public boolean isSetPreferenceLocale() {
    return this.preferenceLocale != null;
  }

  public void setPreferenceLocaleIsSet(boolean value) {
    if (!value) {
      this.preferenceLocale = null;
    }
  }

  public int getCustomModesSize() {
    return (this.customModes == null) ? 0 : this.customModes.size();
  }

  public void putToCustomModes(CustomMode key, String val) {
    if (this.customModes == null) {
      this.customModes = new Hashtable();
    }
    this.customModes.put(key, val);
  }

  public Hashtable getCustomModes() {
    return this.customModes;
  }

  public void setCustomModes(Hashtable customModes) {
    this.customModes = customModes;
  }

  public void unsetCustomModes() {
    this.customModes = null;
  }

  /** Returns true if field customModes is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomModes() {
    return this.customModes != null;
  }

  public void setCustomModesIsSet(boolean value) {
    if (!value) {
      this.customModes = null;
    }
  }

  public boolean isE2eeEnable() {
    return this.e2eeEnable;
  }

  public void setE2eeEnable(boolean e2eeEnable) {
    this.e2eeEnable = e2eeEnable;
    setE2eeEnableIsSet(true);
  }

  public void unsetE2eeEnable() {
    __isset_vector[__E2EEENABLE_ISSET_ID] = false;
  }

  /** Returns true if field e2eeEnable is set (has been assigned a value) and false otherwise */
  public boolean isSetE2eeEnable() {
    return __isset_vector[__E2EEENABLE_ISSET_ID];
  }

  public void setE2eeEnableIsSet(boolean value) {
    __isset_vector[__E2EEENABLE_ISSET_ID] = value;
  }

  public boolean isHitokotoBackupRequested() {
    return this.hitokotoBackupRequested;
  }

  public void setHitokotoBackupRequested(boolean hitokotoBackupRequested) {
    this.hitokotoBackupRequested = hitokotoBackupRequested;
    setHitokotoBackupRequestedIsSet(true);
  }

  public void unsetHitokotoBackupRequested() {
    __isset_vector[__HITOKOTOBACKUPREQUESTED_ISSET_ID] = false;
  }

  /** Returns true if field hitokotoBackupRequested is set (has been assigned a value) and false otherwise */
  public boolean isSetHitokotoBackupRequested() {
    return __isset_vector[__HITOKOTOBACKUPREQUESTED_ISSET_ID];
  }

  public void setHitokotoBackupRequestedIsSet(boolean value) {
    __isset_vector[__HITOKOTOBACKUPREQUESTED_ISSET_ID] = value;
  }

  public boolean isPrivacyProfileMusicPostToMyhome() {
    return this.privacyProfileMusicPostToMyhome;
  }

  public void setPrivacyProfileMusicPostToMyhome(boolean privacyProfileMusicPostToMyhome) {
    this.privacyProfileMusicPostToMyhome = privacyProfileMusicPostToMyhome;
    setPrivacyProfileMusicPostToMyhomeIsSet(true);
  }

  public void unsetPrivacyProfileMusicPostToMyhome() {
    __isset_vector[__PRIVACYPROFILEMUSICPOSTTOMYHOME_ISSET_ID] = false;
  }

  /** Returns true if field privacyProfileMusicPostToMyhome is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivacyProfileMusicPostToMyhome() {
    return __isset_vector[__PRIVACYPROFILEMUSICPOSTTOMYHOME_ISSET_ID];
  }

  public void setPrivacyProfileMusicPostToMyhomeIsSet(boolean value) {
    __isset_vector[__PRIVACYPROFILEMUSICPOSTTOMYHOME_ISSET_ID] = value;
  }

  public boolean isPrivacyAllowNearby() {
    return this.privacyAllowNearby;
  }

  public void setPrivacyAllowNearby(boolean privacyAllowNearby) {
    this.privacyAllowNearby = privacyAllowNearby;
    setPrivacyAllowNearbyIsSet(true);
  }

  public void unsetPrivacyAllowNearby() {
    __isset_vector[__PRIVACYALLOWNEARBY_ISSET_ID] = false;
  }

  /** Returns true if field privacyAllowNearby is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivacyAllowNearby() {
    return __isset_vector[__PRIVACYALLOWNEARBY_ISSET_ID];
  }

  public void setPrivacyAllowNearbyIsSet(boolean value) {
    __isset_vector[__PRIVACYALLOWNEARBY_ISSET_ID] = value;
  }

  public long getAgreementNearbyTime() {
    return this.agreementNearbyTime;
  }

  public void setAgreementNearbyTime(long agreementNearbyTime) {
    this.agreementNearbyTime = agreementNearbyTime;
    setAgreementNearbyTimeIsSet(true);
  }

  public void unsetAgreementNearbyTime() {
    __isset_vector[__AGREEMENTNEARBYTIME_ISSET_ID] = false;
  }

  /** Returns true if field agreementNearbyTime is set (has been assigned a value) and false otherwise */
  public boolean isSetAgreementNearbyTime() {
    return __isset_vector[__AGREEMENTNEARBYTIME_ISSET_ID];
  }

  public void setAgreementNearbyTimeIsSet(boolean value) {
    __isset_vector[__AGREEMENTNEARBYTIME_ISSET_ID] = value;
  }

  public long getAgreementSquareTime() {
    return this.agreementSquareTime;
  }

  public void setAgreementSquareTime(long agreementSquareTime) {
    this.agreementSquareTime = agreementSquareTime;
    setAgreementSquareTimeIsSet(true);
  }

  public void unsetAgreementSquareTime() {
    __isset_vector[__AGREEMENTSQUARETIME_ISSET_ID] = false;
  }

  /** Returns true if field agreementSquareTime is set (has been assigned a value) and false otherwise */
  public boolean isSetAgreementSquareTime() {
    return __isset_vector[__AGREEMENTSQUARETIME_ISSET_ID];
  }

  public void setAgreementSquareTimeIsSet(boolean value) {
    __isset_vector[__AGREEMENTSQUARETIME_ISSET_ID] = value;
  }

  public boolean isNotificationMention() {
    return this.notificationMention;
  }

  public void setNotificationMention(boolean notificationMention) {
    this.notificationMention = notificationMention;
    setNotificationMentionIsSet(true);
  }

  public void unsetNotificationMention() {
    __isset_vector[__NOTIFICATIONMENTION_ISSET_ID] = false;
  }

  /** Returns true if field notificationMention is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationMention() {
    return __isset_vector[__NOTIFICATIONMENTION_ISSET_ID];
  }

  public void setNotificationMentionIsSet(boolean value) {
    __isset_vector[__NOTIFICATIONMENTION_ISSET_ID] = value;
  }

  public long getBotUseAgreementAcceptedAt() {
    return this.botUseAgreementAcceptedAt;
  }

  public void setBotUseAgreementAcceptedAt(long botUseAgreementAcceptedAt) {
    this.botUseAgreementAcceptedAt = botUseAgreementAcceptedAt;
    setBotUseAgreementAcceptedAtIsSet(true);
  }

  public void unsetBotUseAgreementAcceptedAt() {
    __isset_vector[__BOTUSEAGREEMENTACCEPTEDAT_ISSET_ID] = false;
  }

  /** Returns true if field botUseAgreementAcceptedAt is set (has been assigned a value) and false otherwise */
  public boolean isSetBotUseAgreementAcceptedAt() {
    return __isset_vector[__BOTUSEAGREEMENTACCEPTEDAT_ISSET_ID];
  }

  public void setBotUseAgreementAcceptedAtIsSet(boolean value) {
    __isset_vector[__BOTUSEAGREEMENTACCEPTEDAT_ISSET_ID] = value;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Settings)
      return this.equals((Settings)that);
    return false;
  }

  public boolean equals(Settings that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_notificationEnable = true;
    boolean that_present_notificationEnable = true;
    if (this_present_notificationEnable || that_present_notificationEnable) {
      if (!(this_present_notificationEnable && that_present_notificationEnable))
        return false;
      if (this.notificationEnable != that.notificationEnable)
        return false;
    }

    boolean this_present_notificationMuteExpiration = true;
    boolean that_present_notificationMuteExpiration = true;
    if (this_present_notificationMuteExpiration || that_present_notificationMuteExpiration) {
      if (!(this_present_notificationMuteExpiration && that_present_notificationMuteExpiration))
        return false;
      if (this.notificationMuteExpiration != that.notificationMuteExpiration)
        return false;
    }

    boolean this_present_notificationNewMessage = true;
    boolean that_present_notificationNewMessage = true;
    if (this_present_notificationNewMessage || that_present_notificationNewMessage) {
      if (!(this_present_notificationNewMessage && that_present_notificationNewMessage))
        return false;
      if (this.notificationNewMessage != that.notificationNewMessage)
        return false;
    }

    boolean this_present_notificationGroupInvitation = true;
    boolean that_present_notificationGroupInvitation = true;
    if (this_present_notificationGroupInvitation || that_present_notificationGroupInvitation) {
      if (!(this_present_notificationGroupInvitation && that_present_notificationGroupInvitation))
        return false;
      if (this.notificationGroupInvitation != that.notificationGroupInvitation)
        return false;
    }

    boolean this_present_notificationShowMessage = true;
    boolean that_present_notificationShowMessage = true;
    if (this_present_notificationShowMessage || that_present_notificationShowMessage) {
      if (!(this_present_notificationShowMessage && that_present_notificationShowMessage))
        return false;
      if (this.notificationShowMessage != that.notificationShowMessage)
        return false;
    }

    boolean this_present_notificationIncomingCall = true;
    boolean that_present_notificationIncomingCall = true;
    if (this_present_notificationIncomingCall || that_present_notificationIncomingCall) {
      if (!(this_present_notificationIncomingCall && that_present_notificationIncomingCall))
        return false;
      if (this.notificationIncomingCall != that.notificationIncomingCall)
        return false;
    }

    boolean this_present_notificationSoundMessage = true && this.isSetNotificationSoundMessage();
    boolean that_present_notificationSoundMessage = true && that.isSetNotificationSoundMessage();
    if (this_present_notificationSoundMessage || that_present_notificationSoundMessage) {
      if (!(this_present_notificationSoundMessage && that_present_notificationSoundMessage))
        return false;
      if (!this.notificationSoundMessage.equals(that.notificationSoundMessage))
        return false;
    }

    boolean this_present_notificationSoundGroup = true && this.isSetNotificationSoundGroup();
    boolean that_present_notificationSoundGroup = true && that.isSetNotificationSoundGroup();
    if (this_present_notificationSoundGroup || that_present_notificationSoundGroup) {
      if (!(this_present_notificationSoundGroup && that_present_notificationSoundGroup))
        return false;
      if (!this.notificationSoundGroup.equals(that.notificationSoundGroup))
        return false;
    }

    boolean this_present_notificationDisabledWithSub = true;
    boolean that_present_notificationDisabledWithSub = true;
    if (this_present_notificationDisabledWithSub || that_present_notificationDisabledWithSub) {
      if (!(this_present_notificationDisabledWithSub && that_present_notificationDisabledWithSub))
        return false;
      if (this.notificationDisabledWithSub != that.notificationDisabledWithSub)
        return false;
    }

    boolean this_present_privacySyncContacts = true;
    boolean that_present_privacySyncContacts = true;
    if (this_present_privacySyncContacts || that_present_privacySyncContacts) {
      if (!(this_present_privacySyncContacts && that_present_privacySyncContacts))
        return false;
      if (this.privacySyncContacts != that.privacySyncContacts)
        return false;
    }

    boolean this_present_privacySearchByPhoneNumber = true;
    boolean that_present_privacySearchByPhoneNumber = true;
    if (this_present_privacySearchByPhoneNumber || that_present_privacySearchByPhoneNumber) {
      if (!(this_present_privacySearchByPhoneNumber && that_present_privacySearchByPhoneNumber))
        return false;
      if (this.privacySearchByPhoneNumber != that.privacySearchByPhoneNumber)
        return false;
    }

    boolean this_present_privacySearchByUserid = true;
    boolean that_present_privacySearchByUserid = true;
    if (this_present_privacySearchByUserid || that_present_privacySearchByUserid) {
      if (!(this_present_privacySearchByUserid && that_present_privacySearchByUserid))
        return false;
      if (this.privacySearchByUserid != that.privacySearchByUserid)
        return false;
    }

    boolean this_present_privacySearchByEmail = true;
    boolean that_present_privacySearchByEmail = true;
    if (this_present_privacySearchByEmail || that_present_privacySearchByEmail) {
      if (!(this_present_privacySearchByEmail && that_present_privacySearchByEmail))
        return false;
      if (this.privacySearchByEmail != that.privacySearchByEmail)
        return false;
    }

    boolean this_present_privacyAllowSecondaryDeviceLogin = true;
    boolean that_present_privacyAllowSecondaryDeviceLogin = true;
    if (this_present_privacyAllowSecondaryDeviceLogin || that_present_privacyAllowSecondaryDeviceLogin) {
      if (!(this_present_privacyAllowSecondaryDeviceLogin && that_present_privacyAllowSecondaryDeviceLogin))
        return false;
      if (this.privacyAllowSecondaryDeviceLogin != that.privacyAllowSecondaryDeviceLogin)
        return false;
    }

    boolean this_present_privacyProfileImagePostToMyhome = true;
    boolean that_present_privacyProfileImagePostToMyhome = true;
    if (this_present_privacyProfileImagePostToMyhome || that_present_privacyProfileImagePostToMyhome) {
      if (!(this_present_privacyProfileImagePostToMyhome && that_present_privacyProfileImagePostToMyhome))
        return false;
      if (this.privacyProfileImagePostToMyhome != that.privacyProfileImagePostToMyhome)
        return false;
    }

    boolean this_present_privacyReceiveMessagesFromNotFriend = true;
    boolean that_present_privacyReceiveMessagesFromNotFriend = true;
    if (this_present_privacyReceiveMessagesFromNotFriend || that_present_privacyReceiveMessagesFromNotFriend) {
      if (!(this_present_privacyReceiveMessagesFromNotFriend && that_present_privacyReceiveMessagesFromNotFriend))
        return false;
      if (this.privacyReceiveMessagesFromNotFriend != that.privacyReceiveMessagesFromNotFriend)
        return false;
    }

    boolean this_present_contactMyTicket = true && this.isSetContactMyTicket();
    boolean that_present_contactMyTicket = true && that.isSetContactMyTicket();
    if (this_present_contactMyTicket || that_present_contactMyTicket) {
      if (!(this_present_contactMyTicket && that_present_contactMyTicket))
        return false;
      if (!this.contactMyTicket.equals(that.contactMyTicket))
        return false;
    }

    boolean this_present_identityProvider = true && this.isSetIdentityProvider();
    boolean that_present_identityProvider = true && that.isSetIdentityProvider();
    if (this_present_identityProvider || that_present_identityProvider) {
      if (!(this_present_identityProvider && that_present_identityProvider))
        return false;
      if (!this.identityProvider.equals(that.identityProvider))
        return false;
    }

    boolean this_present_identityIdentifier = true && this.isSetIdentityIdentifier();
    boolean that_present_identityIdentifier = true && that.isSetIdentityIdentifier();
    if (this_present_identityIdentifier || that_present_identityIdentifier) {
      if (!(this_present_identityIdentifier && that_present_identityIdentifier))
        return false;
      if (!this.identityIdentifier.equals(that.identityIdentifier))
        return false;
    }

    boolean this_present_snsAccounts = true && this.isSetSnsAccounts();
    boolean that_present_snsAccounts = true && that.isSetSnsAccounts();
    if (this_present_snsAccounts || that_present_snsAccounts) {
      if (!(this_present_snsAccounts && that_present_snsAccounts))
        return false;
      if (!this.snsAccounts.equals(that.snsAccounts))
        return false;
    }

    boolean this_present_phoneRegistration = true;
    boolean that_present_phoneRegistration = true;
    if (this_present_phoneRegistration || that_present_phoneRegistration) {
      if (!(this_present_phoneRegistration && that_present_phoneRegistration))
        return false;
      if (this.phoneRegistration != that.phoneRegistration)
        return false;
    }

    boolean this_present_emailConfirmationStatus = true && this.isSetEmailConfirmationStatus();
    boolean that_present_emailConfirmationStatus = true && that.isSetEmailConfirmationStatus();
    if (this_present_emailConfirmationStatus || that_present_emailConfirmationStatus) {
      if (!(this_present_emailConfirmationStatus && that_present_emailConfirmationStatus))
        return false;
      if (!this.emailConfirmationStatus.equals(that.emailConfirmationStatus))
        return false;
    }

    boolean this_present_preferenceLocale = true && this.isSetPreferenceLocale();
    boolean that_present_preferenceLocale = true && that.isSetPreferenceLocale();
    if (this_present_preferenceLocale || that_present_preferenceLocale) {
      if (!(this_present_preferenceLocale && that_present_preferenceLocale))
        return false;
      if (!this.preferenceLocale.equals(that.preferenceLocale))
        return false;
    }

    boolean this_present_customModes = true && this.isSetCustomModes();
    boolean that_present_customModes = true && that.isSetCustomModes();
    if (this_present_customModes || that_present_customModes) {
      if (!(this_present_customModes && that_present_customModes))
        return false;
      if (!this.customModes.equals(that.customModes))
        return false;
    }

    boolean this_present_e2eeEnable = true;
    boolean that_present_e2eeEnable = true;
    if (this_present_e2eeEnable || that_present_e2eeEnable) {
      if (!(this_present_e2eeEnable && that_present_e2eeEnable))
        return false;
      if (this.e2eeEnable != that.e2eeEnable)
        return false;
    }

    boolean this_present_hitokotoBackupRequested = true;
    boolean that_present_hitokotoBackupRequested = true;
    if (this_present_hitokotoBackupRequested || that_present_hitokotoBackupRequested) {
      if (!(this_present_hitokotoBackupRequested && that_present_hitokotoBackupRequested))
        return false;
      if (this.hitokotoBackupRequested != that.hitokotoBackupRequested)
        return false;
    }

    boolean this_present_privacyProfileMusicPostToMyhome = true;
    boolean that_present_privacyProfileMusicPostToMyhome = true;
    if (this_present_privacyProfileMusicPostToMyhome || that_present_privacyProfileMusicPostToMyhome) {
      if (!(this_present_privacyProfileMusicPostToMyhome && that_present_privacyProfileMusicPostToMyhome))
        return false;
      if (this.privacyProfileMusicPostToMyhome != that.privacyProfileMusicPostToMyhome)
        return false;
    }

    boolean this_present_privacyAllowNearby = true;
    boolean that_present_privacyAllowNearby = true;
    if (this_present_privacyAllowNearby || that_present_privacyAllowNearby) {
      if (!(this_present_privacyAllowNearby && that_present_privacyAllowNearby))
        return false;
      if (this.privacyAllowNearby != that.privacyAllowNearby)
        return false;
    }

    boolean this_present_agreementNearbyTime = true;
    boolean that_present_agreementNearbyTime = true;
    if (this_present_agreementNearbyTime || that_present_agreementNearbyTime) {
      if (!(this_present_agreementNearbyTime && that_present_agreementNearbyTime))
        return false;
      if (this.agreementNearbyTime != that.agreementNearbyTime)
        return false;
    }

    boolean this_present_agreementSquareTime = true;
    boolean that_present_agreementSquareTime = true;
    if (this_present_agreementSquareTime || that_present_agreementSquareTime) {
      if (!(this_present_agreementSquareTime && that_present_agreementSquareTime))
        return false;
      if (this.agreementSquareTime != that.agreementSquareTime)
        return false;
    }

    boolean this_present_notificationMention = true;
    boolean that_present_notificationMention = true;
    if (this_present_notificationMention || that_present_notificationMention) {
      if (!(this_present_notificationMention && that_present_notificationMention))
        return false;
      if (this.notificationMention != that.notificationMention)
        return false;
    }

    boolean this_present_botUseAgreementAcceptedAt = true;
    boolean that_present_botUseAgreementAcceptedAt = true;
    if (this_present_botUseAgreementAcceptedAt || that_present_botUseAgreementAcceptedAt) {
      if (!(this_present_botUseAgreementAcceptedAt && that_present_botUseAgreementAcceptedAt))
        return false;
      if (this.botUseAgreementAcceptedAt != that.botUseAgreementAcceptedAt)
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    Settings other = (Settings)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetNotificationEnable(), other.isSetNotificationEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationEnable()) {
      lastComparison = TBaseHelper.compareTo(this.notificationEnable, other.notificationEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNotificationMuteExpiration(), other.isSetNotificationMuteExpiration());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationMuteExpiration()) {
      lastComparison = TBaseHelper.compareTo(this.notificationMuteExpiration, other.notificationMuteExpiration);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNotificationNewMessage(), other.isSetNotificationNewMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationNewMessage()) {
      lastComparison = TBaseHelper.compareTo(this.notificationNewMessage, other.notificationNewMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNotificationGroupInvitation(), other.isSetNotificationGroupInvitation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationGroupInvitation()) {
      lastComparison = TBaseHelper.compareTo(this.notificationGroupInvitation, other.notificationGroupInvitation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNotificationShowMessage(), other.isSetNotificationShowMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationShowMessage()) {
      lastComparison = TBaseHelper.compareTo(this.notificationShowMessage, other.notificationShowMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNotificationIncomingCall(), other.isSetNotificationIncomingCall());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationIncomingCall()) {
      lastComparison = TBaseHelper.compareTo(this.notificationIncomingCall, other.notificationIncomingCall);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNotificationSoundMessage(), other.isSetNotificationSoundMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationSoundMessage()) {
      lastComparison = TBaseHelper.compareTo(this.notificationSoundMessage, other.notificationSoundMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNotificationSoundGroup(), other.isSetNotificationSoundGroup());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationSoundGroup()) {
      lastComparison = TBaseHelper.compareTo(this.notificationSoundGroup, other.notificationSoundGroup);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNotificationDisabledWithSub(), other.isSetNotificationDisabledWithSub());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationDisabledWithSub()) {
      lastComparison = TBaseHelper.compareTo(this.notificationDisabledWithSub, other.notificationDisabledWithSub);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrivacySyncContacts(), other.isSetPrivacySyncContacts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivacySyncContacts()) {
      lastComparison = TBaseHelper.compareTo(this.privacySyncContacts, other.privacySyncContacts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrivacySearchByPhoneNumber(), other.isSetPrivacySearchByPhoneNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivacySearchByPhoneNumber()) {
      lastComparison = TBaseHelper.compareTo(this.privacySearchByPhoneNumber, other.privacySearchByPhoneNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrivacySearchByUserid(), other.isSetPrivacySearchByUserid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivacySearchByUserid()) {
      lastComparison = TBaseHelper.compareTo(this.privacySearchByUserid, other.privacySearchByUserid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrivacySearchByEmail(), other.isSetPrivacySearchByEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivacySearchByEmail()) {
      lastComparison = TBaseHelper.compareTo(this.privacySearchByEmail, other.privacySearchByEmail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrivacyAllowSecondaryDeviceLogin(), other.isSetPrivacyAllowSecondaryDeviceLogin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivacyAllowSecondaryDeviceLogin()) {
      lastComparison = TBaseHelper.compareTo(this.privacyAllowSecondaryDeviceLogin, other.privacyAllowSecondaryDeviceLogin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrivacyProfileImagePostToMyhome(), other.isSetPrivacyProfileImagePostToMyhome());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivacyProfileImagePostToMyhome()) {
      lastComparison = TBaseHelper.compareTo(this.privacyProfileImagePostToMyhome, other.privacyProfileImagePostToMyhome);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrivacyReceiveMessagesFromNotFriend(), other.isSetPrivacyReceiveMessagesFromNotFriend());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivacyReceiveMessagesFromNotFriend()) {
      lastComparison = TBaseHelper.compareTo(this.privacyReceiveMessagesFromNotFriend, other.privacyReceiveMessagesFromNotFriend);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetContactMyTicket(), other.isSetContactMyTicket());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactMyTicket()) {
      lastComparison = TBaseHelper.compareTo(this.contactMyTicket, other.contactMyTicket);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetIdentityProvider(), other.isSetIdentityProvider());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdentityProvider()) {
      lastComparison = TBaseHelper.compareTo(this.identityProvider, other.identityProvider);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetIdentityIdentifier(), other.isSetIdentityIdentifier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdentityIdentifier()) {
      lastComparison = TBaseHelper.compareTo(this.identityIdentifier, other.identityIdentifier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetSnsAccounts(), other.isSetSnsAccounts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSnsAccounts()) {
      lastComparison = TBaseHelper.compareTo(this.snsAccounts, other.snsAccounts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPhoneRegistration(), other.isSetPhoneRegistration());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhoneRegistration()) {
      lastComparison = TBaseHelper.compareTo(this.phoneRegistration, other.phoneRegistration);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetEmailConfirmationStatus(), other.isSetEmailConfirmationStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailConfirmationStatus()) {
      lastComparison = TBaseHelper.compareTo(this.emailConfirmationStatus, other.emailConfirmationStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPreferenceLocale(), other.isSetPreferenceLocale());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreferenceLocale()) {
      lastComparison = TBaseHelper.compareTo(this.preferenceLocale, other.preferenceLocale);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCustomModes(), other.isSetCustomModes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomModes()) {
      lastComparison = TBaseHelper.compareTo(this.customModes, other.customModes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetE2eeEnable(), other.isSetE2eeEnable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetE2eeEnable()) {
      lastComparison = TBaseHelper.compareTo(this.e2eeEnable, other.e2eeEnable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetHitokotoBackupRequested(), other.isSetHitokotoBackupRequested());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHitokotoBackupRequested()) {
      lastComparison = TBaseHelper.compareTo(this.hitokotoBackupRequested, other.hitokotoBackupRequested);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrivacyProfileMusicPostToMyhome(), other.isSetPrivacyProfileMusicPostToMyhome());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivacyProfileMusicPostToMyhome()) {
      lastComparison = TBaseHelper.compareTo(this.privacyProfileMusicPostToMyhome, other.privacyProfileMusicPostToMyhome);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrivacyAllowNearby(), other.isSetPrivacyAllowNearby());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivacyAllowNearby()) {
      lastComparison = TBaseHelper.compareTo(this.privacyAllowNearby, other.privacyAllowNearby);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAgreementNearbyTime(), other.isSetAgreementNearbyTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgreementNearbyTime()) {
      lastComparison = TBaseHelper.compareTo(this.agreementNearbyTime, other.agreementNearbyTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAgreementSquareTime(), other.isSetAgreementSquareTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAgreementSquareTime()) {
      lastComparison = TBaseHelper.compareTo(this.agreementSquareTime, other.agreementSquareTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNotificationMention(), other.isSetNotificationMention());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationMention()) {
      lastComparison = TBaseHelper.compareTo(this.notificationMention, other.notificationMention);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetBotUseAgreementAcceptedAt(), other.isSetBotUseAgreementAcceptedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBotUseAgreementAcceptedAt()) {
      lastComparison = TBaseHelper.compareTo(this.botUseAgreementAcceptedAt, other.botUseAgreementAcceptedAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 10: // NOTIFICATION_ENABLE
          if (field.type == TType.BOOL) {
            this.notificationEnable = iprot.readBool();
            setNotificationEnableIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // NOTIFICATION_MUTE_EXPIRATION
          if (field.type == TType.I64) {
            this.notificationMuteExpiration = iprot.readI64();
            setNotificationMuteExpirationIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // NOTIFICATION_NEW_MESSAGE
          if (field.type == TType.BOOL) {
            this.notificationNewMessage = iprot.readBool();
            setNotificationNewMessageIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // NOTIFICATION_GROUP_INVITATION
          if (field.type == TType.BOOL) {
            this.notificationGroupInvitation = iprot.readBool();
            setNotificationGroupInvitationIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // NOTIFICATION_SHOW_MESSAGE
          if (field.type == TType.BOOL) {
            this.notificationShowMessage = iprot.readBool();
            setNotificationShowMessageIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // NOTIFICATION_INCOMING_CALL
          if (field.type == TType.BOOL) {
            this.notificationIncomingCall = iprot.readBool();
            setNotificationIncomingCallIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // NOTIFICATION_SOUND_MESSAGE
          if (field.type == TType.STRING) {
            this.notificationSoundMessage = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // NOTIFICATION_SOUND_GROUP
          if (field.type == TType.STRING) {
            this.notificationSoundGroup = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // NOTIFICATION_DISABLED_WITH_SUB
          if (field.type == TType.BOOL) {
            this.notificationDisabledWithSub = iprot.readBool();
            setNotificationDisabledWithSubIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // PRIVACY_SYNC_CONTACTS
          if (field.type == TType.BOOL) {
            this.privacySyncContacts = iprot.readBool();
            setPrivacySyncContactsIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // PRIVACY_SEARCH_BY_PHONE_NUMBER
          if (field.type == TType.BOOL) {
            this.privacySearchByPhoneNumber = iprot.readBool();
            setPrivacySearchByPhoneNumberIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 22: // PRIVACY_SEARCH_BY_USERID
          if (field.type == TType.BOOL) {
            this.privacySearchByUserid = iprot.readBool();
            setPrivacySearchByUseridIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 23: // PRIVACY_SEARCH_BY_EMAIL
          if (field.type == TType.BOOL) {
            this.privacySearchByEmail = iprot.readBool();
            setPrivacySearchByEmailIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 24: // PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN
          if (field.type == TType.BOOL) {
            this.privacyAllowSecondaryDeviceLogin = iprot.readBool();
            setPrivacyAllowSecondaryDeviceLoginIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 25: // PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME
          if (field.type == TType.BOOL) {
            this.privacyProfileImagePostToMyhome = iprot.readBool();
            setPrivacyProfileImagePostToMyhomeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 26: // PRIVACY_RECEIVE_MESSAGES_FROM_NOT_FRIEND
          if (field.type == TType.BOOL) {
            this.privacyReceiveMessagesFromNotFriend = iprot.readBool();
            setPrivacyReceiveMessagesFromNotFriendIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 30: // CONTACT_MY_TICKET
          if (field.type == TType.STRING) {
            this.contactMyTicket = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 40: // IDENTITY_PROVIDER
          if (field.type == TType.I32) {
            this.identityProvider = IdentityProvider.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 41: // IDENTITY_IDENTIFIER
          if (field.type == TType.STRING) {
            this.identityIdentifier = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 42: // SNS_ACCOUNTS
          if (field.type == TType.MAP) {
            {
              TMap _map241 = iprot.readMapBegin();
              this.snsAccounts = new Hashtable(2*_map241.size);
              for (int _i242 = 0; _i242 < _map241.size; ++_i242)
              {
                SnsIdType _key243;
                String _val244;
                _key243 = SnsIdType.findByValue(iprot.readI32());
                _val244 = iprot.readString();
                this.snsAccounts.put(_key243, _val244);
              }
              iprot.readMapEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 43: // PHONE_REGISTRATION
          if (field.type == TType.BOOL) {
            this.phoneRegistration = iprot.readBool();
            setPhoneRegistrationIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 44: // EMAIL_CONFIRMATION_STATUS
          if (field.type == TType.I32) {
            this.emailConfirmationStatus = EmailConfirmationStatus.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 50: // PREFERENCE_LOCALE
          if (field.type == TType.STRING) {
            this.preferenceLocale = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 60: // CUSTOM_MODES
          if (field.type == TType.MAP) {
            {
              TMap _map245 = iprot.readMapBegin();
              this.customModes = new Hashtable(2*_map245.size);
              for (int _i246 = 0; _i246 < _map245.size; ++_i246)
              {
                CustomMode _key247;
                String _val248;
                _key247 = CustomMode.findByValue(iprot.readI32());
                _val248 = iprot.readString();
                this.customModes.put(_key247, _val248);
              }
              iprot.readMapEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 61: // E2EE_ENABLE
          if (field.type == TType.BOOL) {
            this.e2eeEnable = iprot.readBool();
            setE2eeEnableIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 62: // HITOKOTO_BACKUP_REQUESTED
          if (field.type == TType.BOOL) {
            this.hitokotoBackupRequested = iprot.readBool();
            setHitokotoBackupRequestedIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 63: // PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME
          if (field.type == TType.BOOL) {
            this.privacyProfileMusicPostToMyhome = iprot.readBool();
            setPrivacyProfileMusicPostToMyhomeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 65: // PRIVACY_ALLOW_NEARBY
          if (field.type == TType.BOOL) {
            this.privacyAllowNearby = iprot.readBool();
            setPrivacyAllowNearbyIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 66: // AGREEMENT_NEARBY_TIME
          if (field.type == TType.I64) {
            this.agreementNearbyTime = iprot.readI64();
            setAgreementNearbyTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 67: // AGREEMENT_SQUARE_TIME
          if (field.type == TType.I64) {
            this.agreementSquareTime = iprot.readI64();
            setAgreementSquareTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 68: // NOTIFICATION_MENTION
          if (field.type == TType.BOOL) {
            this.notificationMention = iprot.readBool();
            setNotificationMentionIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 69: // BOT_USE_AGREEMENT_ACCEPTED_AT
          if (field.type == TType.I64) {
            this.botUseAgreementAcceptedAt = iprot.readI64();
            setBotUseAgreementAcceptedAtIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(NOTIFICATION_ENABLE_FIELD_DESC);
    oprot.writeBool(this.notificationEnable);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(NOTIFICATION_MUTE_EXPIRATION_FIELD_DESC);
    oprot.writeI64(this.notificationMuteExpiration);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(NOTIFICATION_NEW_MESSAGE_FIELD_DESC);
    oprot.writeBool(this.notificationNewMessage);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(NOTIFICATION_GROUP_INVITATION_FIELD_DESC);
    oprot.writeBool(this.notificationGroupInvitation);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(NOTIFICATION_SHOW_MESSAGE_FIELD_DESC);
    oprot.writeBool(this.notificationShowMessage);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(NOTIFICATION_INCOMING_CALL_FIELD_DESC);
    oprot.writeBool(this.notificationIncomingCall);
    oprot.writeFieldEnd();
    if (this.notificationSoundMessage != null) {
      oprot.writeFieldBegin(NOTIFICATION_SOUND_MESSAGE_FIELD_DESC);
      oprot.writeString(this.notificationSoundMessage);
      oprot.writeFieldEnd();
    }
    if (this.notificationSoundGroup != null) {
      oprot.writeFieldBegin(NOTIFICATION_SOUND_GROUP_FIELD_DESC);
      oprot.writeString(this.notificationSoundGroup);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(NOTIFICATION_DISABLED_WITH_SUB_FIELD_DESC);
    oprot.writeBool(this.notificationDisabledWithSub);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PRIVACY_SYNC_CONTACTS_FIELD_DESC);
    oprot.writeBool(this.privacySyncContacts);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PRIVACY_SEARCH_BY_PHONE_NUMBER_FIELD_DESC);
    oprot.writeBool(this.privacySearchByPhoneNumber);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PRIVACY_SEARCH_BY_USERID_FIELD_DESC);
    oprot.writeBool(this.privacySearchByUserid);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PRIVACY_SEARCH_BY_EMAIL_FIELD_DESC);
    oprot.writeBool(this.privacySearchByEmail);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN_FIELD_DESC);
    oprot.writeBool(this.privacyAllowSecondaryDeviceLogin);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME_FIELD_DESC);
    oprot.writeBool(this.privacyProfileImagePostToMyhome);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PRIVACY_RECEIVE_MESSAGES_FROM_NOT_FRIEND_FIELD_DESC);
    oprot.writeBool(this.privacyReceiveMessagesFromNotFriend);
    oprot.writeFieldEnd();
    if (this.contactMyTicket != null) {
      oprot.writeFieldBegin(CONTACT_MY_TICKET_FIELD_DESC);
      oprot.writeString(this.contactMyTicket);
      oprot.writeFieldEnd();
    }
    if (this.identityProvider != null) {
      oprot.writeFieldBegin(IDENTITY_PROVIDER_FIELD_DESC);
      oprot.writeI32(this.identityProvider.getValue());
      oprot.writeFieldEnd();
    }
    if (this.identityIdentifier != null) {
      oprot.writeFieldBegin(IDENTITY_IDENTIFIER_FIELD_DESC);
      oprot.writeString(this.identityIdentifier);
      oprot.writeFieldEnd();
    }
    if (this.snsAccounts != null) {
      oprot.writeFieldBegin(SNS_ACCOUNTS_FIELD_DESC);
      {
        oprot.writeMapBegin(new TMap(TType.I32, TType.STRING, this.snsAccounts.size()));
        for (Enumeration _iter249_enum = this.snsAccounts.keys(); _iter249_enum.hasMoreElements(); )         {
          SnsIdType _iter249 = (SnsIdType)_iter249_enum.nextElement();
          oprot.writeI32(_iter249.getValue());
          oprot.writeString(((String)this.snsAccounts.get(_iter249)));
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(PHONE_REGISTRATION_FIELD_DESC);
    oprot.writeBool(this.phoneRegistration);
    oprot.writeFieldEnd();
    if (this.emailConfirmationStatus != null) {
      oprot.writeFieldBegin(EMAIL_CONFIRMATION_STATUS_FIELD_DESC);
      oprot.writeI32(this.emailConfirmationStatus.getValue());
      oprot.writeFieldEnd();
    }
    if (this.preferenceLocale != null) {
      oprot.writeFieldBegin(PREFERENCE_LOCALE_FIELD_DESC);
      oprot.writeString(this.preferenceLocale);
      oprot.writeFieldEnd();
    }
    if (this.customModes != null) {
      oprot.writeFieldBegin(CUSTOM_MODES_FIELD_DESC);
      {
        oprot.writeMapBegin(new TMap(TType.I32, TType.STRING, this.customModes.size()));
        for (Enumeration _iter250_enum = this.customModes.keys(); _iter250_enum.hasMoreElements(); )         {
          CustomMode _iter250 = (CustomMode)_iter250_enum.nextElement();
          oprot.writeI32(_iter250.getValue());
          oprot.writeString(((String)this.customModes.get(_iter250)));
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(E2EE_ENABLE_FIELD_DESC);
    oprot.writeBool(this.e2eeEnable);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(HITOKOTO_BACKUP_REQUESTED_FIELD_DESC);
    oprot.writeBool(this.hitokotoBackupRequested);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME_FIELD_DESC);
    oprot.writeBool(this.privacyProfileMusicPostToMyhome);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PRIVACY_ALLOW_NEARBY_FIELD_DESC);
    oprot.writeBool(this.privacyAllowNearby);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(AGREEMENT_NEARBY_TIME_FIELD_DESC);
    oprot.writeI64(this.agreementNearbyTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(AGREEMENT_SQUARE_TIME_FIELD_DESC);
    oprot.writeI64(this.agreementSquareTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(NOTIFICATION_MENTION_FIELD_DESC);
    oprot.writeBool(this.notificationMention);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(BOT_USE_AGREEMENT_ACCEPTED_AT_FIELD_DESC);
    oprot.writeI64(this.botUseAgreementAcceptedAt);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("Settings(");
    boolean first = true;

    sb.append("notificationEnable:");
    sb.append(this.notificationEnable);
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationMuteExpiration:");
    sb.append(this.notificationMuteExpiration);
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationNewMessage:");
    sb.append(this.notificationNewMessage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationGroupInvitation:");
    sb.append(this.notificationGroupInvitation);
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationShowMessage:");
    sb.append(this.notificationShowMessage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationIncomingCall:");
    sb.append(this.notificationIncomingCall);
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationSoundMessage:");
    if (this.notificationSoundMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationSoundMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationSoundGroup:");
    if (this.notificationSoundGroup == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationSoundGroup);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationDisabledWithSub:");
    sb.append(this.notificationDisabledWithSub);
    first = false;
    if (!first) sb.append(", ");
    sb.append("privacySyncContacts:");
    sb.append(this.privacySyncContacts);
    first = false;
    if (!first) sb.append(", ");
    sb.append("privacySearchByPhoneNumber:");
    sb.append(this.privacySearchByPhoneNumber);
    first = false;
    if (!first) sb.append(", ");
    sb.append("privacySearchByUserid:");
    sb.append(this.privacySearchByUserid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("privacySearchByEmail:");
    sb.append(this.privacySearchByEmail);
    first = false;
    if (!first) sb.append(", ");
    sb.append("privacyAllowSecondaryDeviceLogin:");
    sb.append(this.privacyAllowSecondaryDeviceLogin);
    first = false;
    if (!first) sb.append(", ");
    sb.append("privacyProfileImagePostToMyhome:");
    sb.append(this.privacyProfileImagePostToMyhome);
    first = false;
    if (!first) sb.append(", ");
    sb.append("privacyReceiveMessagesFromNotFriend:");
    sb.append(this.privacyReceiveMessagesFromNotFriend);
    first = false;
    if (!first) sb.append(", ");
    sb.append("contactMyTicket:");
    if (this.contactMyTicket == null) {
      sb.append("null");
    } else {
      sb.append(this.contactMyTicket);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("identityProvider:");
    if (this.identityProvider == null) {
      sb.append("null");
    } else {
      sb.append(this.identityProvider);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("identityIdentifier:");
    if (this.identityIdentifier == null) {
      sb.append("null");
    } else {
      sb.append(this.identityIdentifier);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("snsAccounts:");
    if (this.snsAccounts == null) {
      sb.append("null");
    } else {
      sb.append(this.snsAccounts);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phoneRegistration:");
    sb.append(this.phoneRegistration);
    first = false;
    if (!first) sb.append(", ");
    sb.append("emailConfirmationStatus:");
    if (this.emailConfirmationStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.emailConfirmationStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("preferenceLocale:");
    if (this.preferenceLocale == null) {
      sb.append("null");
    } else {
      sb.append(this.preferenceLocale);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("customModes:");
    if (this.customModes == null) {
      sb.append("null");
    } else {
      sb.append(this.customModes);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("e2eeEnable:");
    sb.append(this.e2eeEnable);
    first = false;
    if (!first) sb.append(", ");
    sb.append("hitokotoBackupRequested:");
    sb.append(this.hitokotoBackupRequested);
    first = false;
    if (!first) sb.append(", ");
    sb.append("privacyProfileMusicPostToMyhome:");
    sb.append(this.privacyProfileMusicPostToMyhome);
    first = false;
    if (!first) sb.append(", ");
    sb.append("privacyAllowNearby:");
    sb.append(this.privacyAllowNearby);
    first = false;
    if (!first) sb.append(", ");
    sb.append("agreementNearbyTime:");
    sb.append(this.agreementNearbyTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("agreementSquareTime:");
    sb.append(this.agreementSquareTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationMention:");
    sb.append(this.notificationMention);
    first = false;
    if (!first) sb.append(", ");
    sb.append("botUseAgreementAcceptedAt:");
    sb.append(this.botUseAgreementAcceptedAt);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

