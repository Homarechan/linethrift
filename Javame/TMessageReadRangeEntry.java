/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class TMessageReadRangeEntry implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("TMessageReadRangeEntry");

  private static final TField START_MESSAGE_ID_FIELD_DESC = new TField("startMessageId", TType.I64, (short)1);
  private static final TField END_MESSAGE_ID_FIELD_DESC = new TField("endMessageId", TType.I64, (short)2);
  private static final TField START_TIME_FIELD_DESC = new TField("startTime", TType.I64, (short)3);
  private static final TField END_TIME_FIELD_DESC = new TField("endTime", TType.I64, (short)4);

  private long startMessageId;
  private long endMessageId;
  private long startTime;
  private long endTime;

  // isset id assignments
  private static final int __STARTMESSAGEID_ISSET_ID = 0;
  private static final int __ENDMESSAGEID_ISSET_ID = 1;
  private static final int __STARTTIME_ISSET_ID = 2;
  private static final int __ENDTIME_ISSET_ID = 3;
  private boolean[] __isset_vector = new boolean[4];

  public TMessageReadRangeEntry() {
  }

  public TMessageReadRangeEntry(
    long startMessageId,
    long endMessageId,
    long startTime,
    long endTime)
  {
    this();
    this.startMessageId = startMessageId;
    setStartMessageIdIsSet(true);
    this.endMessageId = endMessageId;
    setEndMessageIdIsSet(true);
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TMessageReadRangeEntry(TMessageReadRangeEntry other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    this.startMessageId = other.startMessageId;
    this.endMessageId = other.endMessageId;
    this.startTime = other.startTime;
    this.endTime = other.endTime;
  }

  public TMessageReadRangeEntry deepCopy() {
    return new TMessageReadRangeEntry(this);
  }

  public void clear() {
    setStartMessageIdIsSet(false);
    this.startMessageId = 0;
    setEndMessageIdIsSet(false);
    this.endMessageId = 0;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
  }

  public long getStartMessageId() {
    return this.startMessageId;
  }

  public void setStartMessageId(long startMessageId) {
    this.startMessageId = startMessageId;
    setStartMessageIdIsSet(true);
  }

  public void unsetStartMessageId() {
    __isset_vector[__STARTMESSAGEID_ISSET_ID] = false;
  }

  /** Returns true if field startMessageId is set (has been assigned a value) and false otherwise */
  public boolean isSetStartMessageId() {
    return __isset_vector[__STARTMESSAGEID_ISSET_ID];
  }

  public void setStartMessageIdIsSet(boolean value) {
    __isset_vector[__STARTMESSAGEID_ISSET_ID] = value;
  }

  public long getEndMessageId() {
    return this.endMessageId;
  }

  public void setEndMessageId(long endMessageId) {
    this.endMessageId = endMessageId;
    setEndMessageIdIsSet(true);
  }

  public void unsetEndMessageId() {
    __isset_vector[__ENDMESSAGEID_ISSET_ID] = false;
  }

  /** Returns true if field endMessageId is set (has been assigned a value) and false otherwise */
  public boolean isSetEndMessageId() {
    return __isset_vector[__ENDMESSAGEID_ISSET_ID];
  }

  public void setEndMessageIdIsSet(boolean value) {
    __isset_vector[__ENDMESSAGEID_ISSET_ID] = value;
  }

  public long getStartTime() {
    return this.startTime;
  }

  public void setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
  }

  public void unsetStartTime() {
    __isset_vector[__STARTTIME_ISSET_ID] = false;
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return __isset_vector[__STARTTIME_ISSET_ID];
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_vector[__STARTTIME_ISSET_ID] = value;
  }

  public long getEndTime() {
    return this.endTime;
  }

  public void setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
  }

  public void unsetEndTime() {
    __isset_vector[__ENDTIME_ISSET_ID] = false;
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return __isset_vector[__ENDTIME_ISSET_ID];
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_vector[__ENDTIME_ISSET_ID] = value;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TMessageReadRangeEntry)
      return this.equals((TMessageReadRangeEntry)that);
    return false;
  }

  public boolean equals(TMessageReadRangeEntry that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_startMessageId = true;
    boolean that_present_startMessageId = true;
    if (this_present_startMessageId || that_present_startMessageId) {
      if (!(this_present_startMessageId && that_present_startMessageId))
        return false;
      if (this.startMessageId != that.startMessageId)
        return false;
    }

    boolean this_present_endMessageId = true;
    boolean that_present_endMessageId = true;
    if (this_present_endMessageId || that_present_endMessageId) {
      if (!(this_present_endMessageId && that_present_endMessageId))
        return false;
      if (this.endMessageId != that.endMessageId)
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    TMessageReadRangeEntry other = (TMessageReadRangeEntry)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetStartMessageId(), other.isSetStartMessageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartMessageId()) {
      lastComparison = TBaseHelper.compareTo(this.startMessageId, other.startMessageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetEndMessageId(), other.isSetEndMessageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndMessageId()) {
      lastComparison = TBaseHelper.compareTo(this.endMessageId, other.endMessageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetStartTime(), other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetEndTime(), other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // START_MESSAGE_ID
          if (field.type == TType.I64) {
            this.startMessageId = iprot.readI64();
            setStartMessageIdIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // END_MESSAGE_ID
          if (field.type == TType.I64) {
            this.endMessageId = iprot.readI64();
            setEndMessageIdIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // START_TIME
          if (field.type == TType.I64) {
            this.startTime = iprot.readI64();
            setStartTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // END_TIME
          if (field.type == TType.I64) {
            this.endTime = iprot.readI64();
            setEndTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(START_MESSAGE_ID_FIELD_DESC);
    oprot.writeI64(this.startMessageId);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(END_MESSAGE_ID_FIELD_DESC);
    oprot.writeI64(this.endMessageId);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(START_TIME_FIELD_DESC);
    oprot.writeI64(this.startTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(END_TIME_FIELD_DESC);
    oprot.writeI64(this.endTime);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("TMessageReadRangeEntry(");
    boolean first = true;

    sb.append("startMessageId:");
    sb.append(this.startMessageId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endMessageId:");
    sb.append(this.endMessageId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

