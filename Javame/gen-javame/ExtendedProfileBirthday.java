/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class ExtendedProfileBirthday implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("ExtendedProfileBirthday");

  private static final TField YEAR_FIELD_DESC = new TField("year", TType.STRING, (short)1);
  private static final TField YEAR_PRIVACY_LEVEL_TYPE_FIELD_DESC = new TField("yearPrivacyLevelType", TType.I32, (short)2);
  private static final TField YEAR_ENABLED_FIELD_DESC = new TField("yearEnabled", TType.BOOL, (short)3);
  private static final TField DAY_FIELD_DESC = new TField("day", TType.STRING, (short)5);
  private static final TField DAY_PRIVACY_LEVEL_TYPE_FIELD_DESC = new TField("dayPrivacyLevelType", TType.I32, (short)6);
  private static final TField DAY_ENABLED_FIELD_DESC = new TField("dayEnabled", TType.BOOL, (short)7);

  private String year;
  private PrivacyLevelType yearPrivacyLevelType;
  private boolean yearEnabled;
  private String day;
  private PrivacyLevelType dayPrivacyLevelType;
  private boolean dayEnabled;

  // isset id assignments
  private static final int __YEARENABLED_ISSET_ID = 0;
  private static final int __DAYENABLED_ISSET_ID = 1;
  private boolean[] __isset_vector = new boolean[2];

  public ExtendedProfileBirthday() {
  }

  public ExtendedProfileBirthday(
    String year,
    PrivacyLevelType yearPrivacyLevelType,
    boolean yearEnabled,
    String day,
    PrivacyLevelType dayPrivacyLevelType,
    boolean dayEnabled)
  {
    this();
    this.year = year;
    this.yearPrivacyLevelType = yearPrivacyLevelType;
    this.yearEnabled = yearEnabled;
    setYearEnabledIsSet(true);
    this.day = day;
    this.dayPrivacyLevelType = dayPrivacyLevelType;
    this.dayEnabled = dayEnabled;
    setDayEnabledIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ExtendedProfileBirthday(ExtendedProfileBirthday other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    if (other.isSetYear()) {
      this.year = other.year;
    }
    if (other.isSetYearPrivacyLevelType()) {
      this.yearPrivacyLevelType = other.yearPrivacyLevelType;
    }
    this.yearEnabled = other.yearEnabled;
    if (other.isSetDay()) {
      this.day = other.day;
    }
    if (other.isSetDayPrivacyLevelType()) {
      this.dayPrivacyLevelType = other.dayPrivacyLevelType;
    }
    this.dayEnabled = other.dayEnabled;
  }

  public ExtendedProfileBirthday deepCopy() {
    return new ExtendedProfileBirthday(this);
  }

  public void clear() {
    this.year = null;
    this.yearPrivacyLevelType = null;
    setYearEnabledIsSet(false);
    this.yearEnabled = false;
    this.day = null;
    this.dayPrivacyLevelType = null;
    setDayEnabledIsSet(false);
    this.dayEnabled = false;
  }

  public String getYear() {
    return this.year;
  }

  public void setYear(String year) {
    this.year = year;
  }

  public void unsetYear() {
    this.year = null;
  }

  /** Returns true if field year is set (has been assigned a value) and false otherwise */
  public boolean isSetYear() {
    return this.year != null;
  }

  public void setYearIsSet(boolean value) {
    if (!value) {
      this.year = null;
    }
  }

  /**
   * 
   * @see PrivacyLevelType
   */
  public PrivacyLevelType getYearPrivacyLevelType() {
    return this.yearPrivacyLevelType;
  }

  /**
   * 
   * @see PrivacyLevelType
   */
  public void setYearPrivacyLevelType(PrivacyLevelType yearPrivacyLevelType) {
    this.yearPrivacyLevelType = yearPrivacyLevelType;
  }

  public void unsetYearPrivacyLevelType() {
    this.yearPrivacyLevelType = null;
  }

  /** Returns true if field yearPrivacyLevelType is set (has been assigned a value) and false otherwise */
  public boolean isSetYearPrivacyLevelType() {
    return this.yearPrivacyLevelType != null;
  }

  public void setYearPrivacyLevelTypeIsSet(boolean value) {
    if (!value) {
      this.yearPrivacyLevelType = null;
    }
  }

  public boolean isYearEnabled() {
    return this.yearEnabled;
  }

  public void setYearEnabled(boolean yearEnabled) {
    this.yearEnabled = yearEnabled;
    setYearEnabledIsSet(true);
  }

  public void unsetYearEnabled() {
    __isset_vector[__YEARENABLED_ISSET_ID] = false;
  }

  /** Returns true if field yearEnabled is set (has been assigned a value) and false otherwise */
  public boolean isSetYearEnabled() {
    return __isset_vector[__YEARENABLED_ISSET_ID];
  }

  public void setYearEnabledIsSet(boolean value) {
    __isset_vector[__YEARENABLED_ISSET_ID] = value;
  }

  public String getDay() {
    return this.day;
  }

  public void setDay(String day) {
    this.day = day;
  }

  public void unsetDay() {
    this.day = null;
  }

  /** Returns true if field day is set (has been assigned a value) and false otherwise */
  public boolean isSetDay() {
    return this.day != null;
  }

  public void setDayIsSet(boolean value) {
    if (!value) {
      this.day = null;
    }
  }

  /**
   * 
   * @see PrivacyLevelType
   */
  public PrivacyLevelType getDayPrivacyLevelType() {
    return this.dayPrivacyLevelType;
  }

  /**
   * 
   * @see PrivacyLevelType
   */
  public void setDayPrivacyLevelType(PrivacyLevelType dayPrivacyLevelType) {
    this.dayPrivacyLevelType = dayPrivacyLevelType;
  }

  public void unsetDayPrivacyLevelType() {
    this.dayPrivacyLevelType = null;
  }

  /** Returns true if field dayPrivacyLevelType is set (has been assigned a value) and false otherwise */
  public boolean isSetDayPrivacyLevelType() {
    return this.dayPrivacyLevelType != null;
  }

  public void setDayPrivacyLevelTypeIsSet(boolean value) {
    if (!value) {
      this.dayPrivacyLevelType = null;
    }
  }

  public boolean isDayEnabled() {
    return this.dayEnabled;
  }

  public void setDayEnabled(boolean dayEnabled) {
    this.dayEnabled = dayEnabled;
    setDayEnabledIsSet(true);
  }

  public void unsetDayEnabled() {
    __isset_vector[__DAYENABLED_ISSET_ID] = false;
  }

  /** Returns true if field dayEnabled is set (has been assigned a value) and false otherwise */
  public boolean isSetDayEnabled() {
    return __isset_vector[__DAYENABLED_ISSET_ID];
  }

  public void setDayEnabledIsSet(boolean value) {
    __isset_vector[__DAYENABLED_ISSET_ID] = value;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ExtendedProfileBirthday)
      return this.equals((ExtendedProfileBirthday)that);
    return false;
  }

  public boolean equals(ExtendedProfileBirthday that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_year = true && this.isSetYear();
    boolean that_present_year = true && that.isSetYear();
    if (this_present_year || that_present_year) {
      if (!(this_present_year && that_present_year))
        return false;
      if (!this.year.equals(that.year))
        return false;
    }

    boolean this_present_yearPrivacyLevelType = true && this.isSetYearPrivacyLevelType();
    boolean that_present_yearPrivacyLevelType = true && that.isSetYearPrivacyLevelType();
    if (this_present_yearPrivacyLevelType || that_present_yearPrivacyLevelType) {
      if (!(this_present_yearPrivacyLevelType && that_present_yearPrivacyLevelType))
        return false;
      if (!this.yearPrivacyLevelType.equals(that.yearPrivacyLevelType))
        return false;
    }

    boolean this_present_yearEnabled = true;
    boolean that_present_yearEnabled = true;
    if (this_present_yearEnabled || that_present_yearEnabled) {
      if (!(this_present_yearEnabled && that_present_yearEnabled))
        return false;
      if (this.yearEnabled != that.yearEnabled)
        return false;
    }

    boolean this_present_day = true && this.isSetDay();
    boolean that_present_day = true && that.isSetDay();
    if (this_present_day || that_present_day) {
      if (!(this_present_day && that_present_day))
        return false;
      if (!this.day.equals(that.day))
        return false;
    }

    boolean this_present_dayPrivacyLevelType = true && this.isSetDayPrivacyLevelType();
    boolean that_present_dayPrivacyLevelType = true && that.isSetDayPrivacyLevelType();
    if (this_present_dayPrivacyLevelType || that_present_dayPrivacyLevelType) {
      if (!(this_present_dayPrivacyLevelType && that_present_dayPrivacyLevelType))
        return false;
      if (!this.dayPrivacyLevelType.equals(that.dayPrivacyLevelType))
        return false;
    }

    boolean this_present_dayEnabled = true;
    boolean that_present_dayEnabled = true;
    if (this_present_dayEnabled || that_present_dayEnabled) {
      if (!(this_present_dayEnabled && that_present_dayEnabled))
        return false;
      if (this.dayEnabled != that.dayEnabled)
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    ExtendedProfileBirthday other = (ExtendedProfileBirthday)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetYear(), other.isSetYear());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYear()) {
      lastComparison = TBaseHelper.compareTo(this.year, other.year);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetYearPrivacyLevelType(), other.isSetYearPrivacyLevelType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYearPrivacyLevelType()) {
      lastComparison = TBaseHelper.compareTo(this.yearPrivacyLevelType, other.yearPrivacyLevelType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetYearEnabled(), other.isSetYearEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYearEnabled()) {
      lastComparison = TBaseHelper.compareTo(this.yearEnabled, other.yearEnabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDay(), other.isSetDay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDay()) {
      lastComparison = TBaseHelper.compareTo(this.day, other.day);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDayPrivacyLevelType(), other.isSetDayPrivacyLevelType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDayPrivacyLevelType()) {
      lastComparison = TBaseHelper.compareTo(this.dayPrivacyLevelType, other.dayPrivacyLevelType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDayEnabled(), other.isSetDayEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDayEnabled()) {
      lastComparison = TBaseHelper.compareTo(this.dayEnabled, other.dayEnabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // YEAR
          if (field.type == TType.STRING) {
            this.year = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // YEAR_PRIVACY_LEVEL_TYPE
          if (field.type == TType.I32) {
            this.yearPrivacyLevelType = PrivacyLevelType.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // YEAR_ENABLED
          if (field.type == TType.BOOL) {
            this.yearEnabled = iprot.readBool();
            setYearEnabledIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // DAY
          if (field.type == TType.STRING) {
            this.day = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // DAY_PRIVACY_LEVEL_TYPE
          if (field.type == TType.I32) {
            this.dayPrivacyLevelType = PrivacyLevelType.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // DAY_ENABLED
          if (field.type == TType.BOOL) {
            this.dayEnabled = iprot.readBool();
            setDayEnabledIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.year != null) {
      oprot.writeFieldBegin(YEAR_FIELD_DESC);
      oprot.writeString(this.year);
      oprot.writeFieldEnd();
    }
    if (this.yearPrivacyLevelType != null) {
      oprot.writeFieldBegin(YEAR_PRIVACY_LEVEL_TYPE_FIELD_DESC);
      oprot.writeI32(this.yearPrivacyLevelType.getValue());
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(YEAR_ENABLED_FIELD_DESC);
    oprot.writeBool(this.yearEnabled);
    oprot.writeFieldEnd();
    if (this.day != null) {
      oprot.writeFieldBegin(DAY_FIELD_DESC);
      oprot.writeString(this.day);
      oprot.writeFieldEnd();
    }
    if (this.dayPrivacyLevelType != null) {
      oprot.writeFieldBegin(DAY_PRIVACY_LEVEL_TYPE_FIELD_DESC);
      oprot.writeI32(this.dayPrivacyLevelType.getValue());
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(DAY_ENABLED_FIELD_DESC);
    oprot.writeBool(this.dayEnabled);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("ExtendedProfileBirthday(");
    boolean first = true;

    sb.append("year:");
    if (this.year == null) {
      sb.append("null");
    } else {
      sb.append(this.year);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("yearPrivacyLevelType:");
    if (this.yearPrivacyLevelType == null) {
      sb.append("null");
    } else {
      sb.append(this.yearPrivacyLevelType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("yearEnabled:");
    sb.append(this.yearEnabled);
    first = false;
    if (!first) sb.append(", ");
    sb.append("day:");
    if (this.day == null) {
      sb.append("null");
    } else {
      sb.append(this.day);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dayPrivacyLevelType:");
    if (this.dayPrivacyLevelType == null) {
      sb.append("null");
    } else {
      sb.append(this.dayPrivacyLevelType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dayEnabled:");
    sb.append(this.dayEnabled);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

