/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class Contact implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("Contact");

  private static final TField MID_FIELD_DESC = new TField("mid", TType.STRING, (short)1);
  private static final TField CREATED_TIME_FIELD_DESC = new TField("createdTime", TType.I64, (short)2);
  private static final TField TYPE_FIELD_DESC = new TField("type", TType.I32, (short)10);
  private static final TField STATUS_FIELD_DESC = new TField("status", TType.I32, (short)11);
  private static final TField RELATION_FIELD_DESC = new TField("relation", TType.I32, (short)21);
  private static final TField DISPLAY_NAME_FIELD_DESC = new TField("displayName", TType.STRING, (short)22);
  private static final TField PHONETIC_NAME_FIELD_DESC = new TField("phoneticName", TType.STRING, (short)23);
  private static final TField PICTURE_STATUS_FIELD_DESC = new TField("pictureStatus", TType.STRING, (short)24);
  private static final TField THUMBNAIL_URL_FIELD_DESC = new TField("thumbnailUrl", TType.STRING, (short)25);
  private static final TField STATUS_MESSAGE_FIELD_DESC = new TField("statusMessage", TType.STRING, (short)26);
  private static final TField DISPLAY_NAME_OVERRIDDEN_FIELD_DESC = new TField("displayNameOverridden", TType.STRING, (short)27);
  private static final TField FAVORITE_TIME_FIELD_DESC = new TField("favoriteTime", TType.I64, (short)28);
  private static final TField CAPABLE_VOICE_CALL_FIELD_DESC = new TField("capableVoiceCall", TType.BOOL, (short)31);
  private static final TField CAPABLE_VIDEO_CALL_FIELD_DESC = new TField("capableVideoCall", TType.BOOL, (short)32);
  private static final TField CAPABLE_MYHOME_FIELD_DESC = new TField("capableMyhome", TType.BOOL, (short)33);
  private static final TField CAPABLE_BUDDY_FIELD_DESC = new TField("capableBuddy", TType.BOOL, (short)34);
  private static final TField ATTRIBUTES_FIELD_DESC = new TField("attributes", TType.I32, (short)35);
  private static final TField SETTINGS_FIELD_DESC = new TField("settings", TType.I64, (short)36);
  private static final TField PICTURE_PATH_FIELD_DESC = new TField("picturePath", TType.STRING, (short)37);
  private static final TField RECOMMEND_PARAMS_FIELD_DESC = new TField("recommendParams", TType.STRING, (short)38);
  private static final TField FRIEND_REQUEST_STATUS_FIELD_DESC = new TField("friendRequestStatus", TType.I32, (short)39);
  private static final TField MUSIC_PROFILE_FIELD_DESC = new TField("musicProfile", TType.STRING, (short)40);
  private static final TField VIDEO_PROFILE_FIELD_DESC = new TField("videoProfile", TType.STRING, (short)42);

  private String mid;
  private long createdTime;
  private ContactType type;
  private ContactStatus status;
  private ContactRelation relation;
  private String displayName;
  private String phoneticName;
  private String pictureStatus;
  private String thumbnailUrl;
  private String statusMessage;
  private String displayNameOverridden;
  private long favoriteTime;
  private boolean capableVoiceCall;
  private boolean capableVideoCall;
  private boolean capableMyhome;
  private boolean capableBuddy;
  private int attributes;
  private long settings;
  private String picturePath;
  private String recommendParams;
  private FriendRequestStatus friendRequestStatus;
  private String musicProfile;
  private String videoProfile;

  // isset id assignments
  private static final int __CREATEDTIME_ISSET_ID = 0;
  private static final int __FAVORITETIME_ISSET_ID = 1;
  private static final int __CAPABLEVOICECALL_ISSET_ID = 2;
  private static final int __CAPABLEVIDEOCALL_ISSET_ID = 3;
  private static final int __CAPABLEMYHOME_ISSET_ID = 4;
  private static final int __CAPABLEBUDDY_ISSET_ID = 5;
  private static final int __ATTRIBUTES_ISSET_ID = 6;
  private static final int __SETTINGS_ISSET_ID = 7;
  private boolean[] __isset_vector = new boolean[8];

  public Contact() {
  }

  public Contact(
    String mid,
    long createdTime,
    ContactType type,
    ContactStatus status,
    ContactRelation relation,
    String displayName,
    String phoneticName,
    String pictureStatus,
    String thumbnailUrl,
    String statusMessage,
    String displayNameOverridden,
    long favoriteTime,
    boolean capableVoiceCall,
    boolean capableVideoCall,
    boolean capableMyhome,
    boolean capableBuddy,
    int attributes,
    long settings,
    String picturePath,
    String recommendParams,
    FriendRequestStatus friendRequestStatus,
    String musicProfile,
    String videoProfile)
  {
    this();
    this.mid = mid;
    this.createdTime = createdTime;
    setCreatedTimeIsSet(true);
    this.type = type;
    this.status = status;
    this.relation = relation;
    this.displayName = displayName;
    this.phoneticName = phoneticName;
    this.pictureStatus = pictureStatus;
    this.thumbnailUrl = thumbnailUrl;
    this.statusMessage = statusMessage;
    this.displayNameOverridden = displayNameOverridden;
    this.favoriteTime = favoriteTime;
    setFavoriteTimeIsSet(true);
    this.capableVoiceCall = capableVoiceCall;
    setCapableVoiceCallIsSet(true);
    this.capableVideoCall = capableVideoCall;
    setCapableVideoCallIsSet(true);
    this.capableMyhome = capableMyhome;
    setCapableMyhomeIsSet(true);
    this.capableBuddy = capableBuddy;
    setCapableBuddyIsSet(true);
    this.attributes = attributes;
    setAttributesIsSet(true);
    this.settings = settings;
    setSettingsIsSet(true);
    this.picturePath = picturePath;
    this.recommendParams = recommendParams;
    this.friendRequestStatus = friendRequestStatus;
    this.musicProfile = musicProfile;
    this.videoProfile = videoProfile;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Contact(Contact other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    if (other.isSetMid()) {
      this.mid = other.mid;
    }
    this.createdTime = other.createdTime;
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetRelation()) {
      this.relation = other.relation;
    }
    if (other.isSetDisplayName()) {
      this.displayName = other.displayName;
    }
    if (other.isSetPhoneticName()) {
      this.phoneticName = other.phoneticName;
    }
    if (other.isSetPictureStatus()) {
      this.pictureStatus = other.pictureStatus;
    }
    if (other.isSetThumbnailUrl()) {
      this.thumbnailUrl = other.thumbnailUrl;
    }
    if (other.isSetStatusMessage()) {
      this.statusMessage = other.statusMessage;
    }
    if (other.isSetDisplayNameOverridden()) {
      this.displayNameOverridden = other.displayNameOverridden;
    }
    this.favoriteTime = other.favoriteTime;
    this.capableVoiceCall = other.capableVoiceCall;
    this.capableVideoCall = other.capableVideoCall;
    this.capableMyhome = other.capableMyhome;
    this.capableBuddy = other.capableBuddy;
    this.attributes = other.attributes;
    this.settings = other.settings;
    if (other.isSetPicturePath()) {
      this.picturePath = other.picturePath;
    }
    if (other.isSetRecommendParams()) {
      this.recommendParams = other.recommendParams;
    }
    if (other.isSetFriendRequestStatus()) {
      this.friendRequestStatus = other.friendRequestStatus;
    }
    if (other.isSetMusicProfile()) {
      this.musicProfile = other.musicProfile;
    }
    if (other.isSetVideoProfile()) {
      this.videoProfile = other.videoProfile;
    }
  }

  public Contact deepCopy() {
    return new Contact(this);
  }

  public void clear() {
    this.mid = null;
    setCreatedTimeIsSet(false);
    this.createdTime = 0;
    this.type = null;
    this.status = null;
    this.relation = null;
    this.displayName = null;
    this.phoneticName = null;
    this.pictureStatus = null;
    this.thumbnailUrl = null;
    this.statusMessage = null;
    this.displayNameOverridden = null;
    setFavoriteTimeIsSet(false);
    this.favoriteTime = 0;
    setCapableVoiceCallIsSet(false);
    this.capableVoiceCall = false;
    setCapableVideoCallIsSet(false);
    this.capableVideoCall = false;
    setCapableMyhomeIsSet(false);
    this.capableMyhome = false;
    setCapableBuddyIsSet(false);
    this.capableBuddy = false;
    setAttributesIsSet(false);
    this.attributes = 0;
    setSettingsIsSet(false);
    this.settings = 0;
    this.picturePath = null;
    this.recommendParams = null;
    this.friendRequestStatus = null;
    this.musicProfile = null;
    this.videoProfile = null;
  }

  public String getMid() {
    return this.mid;
  }

  public void setMid(String mid) {
    this.mid = mid;
  }

  public void unsetMid() {
    this.mid = null;
  }

  /** Returns true if field mid is set (has been assigned a value) and false otherwise */
  public boolean isSetMid() {
    return this.mid != null;
  }

  public void setMidIsSet(boolean value) {
    if (!value) {
      this.mid = null;
    }
  }

  public long getCreatedTime() {
    return this.createdTime;
  }

  public void setCreatedTime(long createdTime) {
    this.createdTime = createdTime;
    setCreatedTimeIsSet(true);
  }

  public void unsetCreatedTime() {
    __isset_vector[__CREATEDTIME_ISSET_ID] = false;
  }

  /** Returns true if field createdTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedTime() {
    return __isset_vector[__CREATEDTIME_ISSET_ID];
  }

  public void setCreatedTimeIsSet(boolean value) {
    __isset_vector[__CREATEDTIME_ISSET_ID] = value;
  }

  /**
   * 
   * @see ContactType
   */
  public ContactType getType() {
    return this.type;
  }

  /**
   * 
   * @see ContactType
   */
  public void setType(ContactType type) {
    this.type = type;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 
   * @see ContactStatus
   */
  public ContactStatus getStatus() {
    return this.status;
  }

  /**
   * 
   * @see ContactStatus
   */
  public void setStatus(ContactStatus status) {
    this.status = status;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  /**
   * 
   * @see ContactRelation
   */
  public ContactRelation getRelation() {
    return this.relation;
  }

  /**
   * 
   * @see ContactRelation
   */
  public void setRelation(ContactRelation relation) {
    this.relation = relation;
  }

  public void unsetRelation() {
    this.relation = null;
  }

  /** Returns true if field relation is set (has been assigned a value) and false otherwise */
  public boolean isSetRelation() {
    return this.relation != null;
  }

  public void setRelationIsSet(boolean value) {
    if (!value) {
      this.relation = null;
    }
  }

  public String getDisplayName() {
    return this.displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public void unsetDisplayName() {
    this.displayName = null;
  }

  /** Returns true if field displayName is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayName() {
    return this.displayName != null;
  }

  public void setDisplayNameIsSet(boolean value) {
    if (!value) {
      this.displayName = null;
    }
  }

  public String getPhoneticName() {
    return this.phoneticName;
  }

  public void setPhoneticName(String phoneticName) {
    this.phoneticName = phoneticName;
  }

  public void unsetPhoneticName() {
    this.phoneticName = null;
  }

  /** Returns true if field phoneticName is set (has been assigned a value) and false otherwise */
  public boolean isSetPhoneticName() {
    return this.phoneticName != null;
  }

  public void setPhoneticNameIsSet(boolean value) {
    if (!value) {
      this.phoneticName = null;
    }
  }

  public String getPictureStatus() {
    return this.pictureStatus;
  }

  public void setPictureStatus(String pictureStatus) {
    this.pictureStatus = pictureStatus;
  }

  public void unsetPictureStatus() {
    this.pictureStatus = null;
  }

  /** Returns true if field pictureStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetPictureStatus() {
    return this.pictureStatus != null;
  }

  public void setPictureStatusIsSet(boolean value) {
    if (!value) {
      this.pictureStatus = null;
    }
  }

  public String getThumbnailUrl() {
    return this.thumbnailUrl;
  }

  public void setThumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
  }

  public void unsetThumbnailUrl() {
    this.thumbnailUrl = null;
  }

  /** Returns true if field thumbnailUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetThumbnailUrl() {
    return this.thumbnailUrl != null;
  }

  public void setThumbnailUrlIsSet(boolean value) {
    if (!value) {
      this.thumbnailUrl = null;
    }
  }

  public String getStatusMessage() {
    return this.statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }

  public void unsetStatusMessage() {
    this.statusMessage = null;
  }

  /** Returns true if field statusMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusMessage() {
    return this.statusMessage != null;
  }

  public void setStatusMessageIsSet(boolean value) {
    if (!value) {
      this.statusMessage = null;
    }
  }

  public String getDisplayNameOverridden() {
    return this.displayNameOverridden;
  }

  public void setDisplayNameOverridden(String displayNameOverridden) {
    this.displayNameOverridden = displayNameOverridden;
  }

  public void unsetDisplayNameOverridden() {
    this.displayNameOverridden = null;
  }

  /** Returns true if field displayNameOverridden is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayNameOverridden() {
    return this.displayNameOverridden != null;
  }

  public void setDisplayNameOverriddenIsSet(boolean value) {
    if (!value) {
      this.displayNameOverridden = null;
    }
  }

  public long getFavoriteTime() {
    return this.favoriteTime;
  }

  public void setFavoriteTime(long favoriteTime) {
    this.favoriteTime = favoriteTime;
    setFavoriteTimeIsSet(true);
  }

  public void unsetFavoriteTime() {
    __isset_vector[__FAVORITETIME_ISSET_ID] = false;
  }

  /** Returns true if field favoriteTime is set (has been assigned a value) and false otherwise */
  public boolean isSetFavoriteTime() {
    return __isset_vector[__FAVORITETIME_ISSET_ID];
  }

  public void setFavoriteTimeIsSet(boolean value) {
    __isset_vector[__FAVORITETIME_ISSET_ID] = value;
  }

  public boolean isCapableVoiceCall() {
    return this.capableVoiceCall;
  }

  public void setCapableVoiceCall(boolean capableVoiceCall) {
    this.capableVoiceCall = capableVoiceCall;
    setCapableVoiceCallIsSet(true);
  }

  public void unsetCapableVoiceCall() {
    __isset_vector[__CAPABLEVOICECALL_ISSET_ID] = false;
  }

  /** Returns true if field capableVoiceCall is set (has been assigned a value) and false otherwise */
  public boolean isSetCapableVoiceCall() {
    return __isset_vector[__CAPABLEVOICECALL_ISSET_ID];
  }

  public void setCapableVoiceCallIsSet(boolean value) {
    __isset_vector[__CAPABLEVOICECALL_ISSET_ID] = value;
  }

  public boolean isCapableVideoCall() {
    return this.capableVideoCall;
  }

  public void setCapableVideoCall(boolean capableVideoCall) {
    this.capableVideoCall = capableVideoCall;
    setCapableVideoCallIsSet(true);
  }

  public void unsetCapableVideoCall() {
    __isset_vector[__CAPABLEVIDEOCALL_ISSET_ID] = false;
  }

  /** Returns true if field capableVideoCall is set (has been assigned a value) and false otherwise */
  public boolean isSetCapableVideoCall() {
    return __isset_vector[__CAPABLEVIDEOCALL_ISSET_ID];
  }

  public void setCapableVideoCallIsSet(boolean value) {
    __isset_vector[__CAPABLEVIDEOCALL_ISSET_ID] = value;
  }

  public boolean isCapableMyhome() {
    return this.capableMyhome;
  }

  public void setCapableMyhome(boolean capableMyhome) {
    this.capableMyhome = capableMyhome;
    setCapableMyhomeIsSet(true);
  }

  public void unsetCapableMyhome() {
    __isset_vector[__CAPABLEMYHOME_ISSET_ID] = false;
  }

  /** Returns true if field capableMyhome is set (has been assigned a value) and false otherwise */
  public boolean isSetCapableMyhome() {
    return __isset_vector[__CAPABLEMYHOME_ISSET_ID];
  }

  public void setCapableMyhomeIsSet(boolean value) {
    __isset_vector[__CAPABLEMYHOME_ISSET_ID] = value;
  }

  public boolean isCapableBuddy() {
    return this.capableBuddy;
  }

  public void setCapableBuddy(boolean capableBuddy) {
    this.capableBuddy = capableBuddy;
    setCapableBuddyIsSet(true);
  }

  public void unsetCapableBuddy() {
    __isset_vector[__CAPABLEBUDDY_ISSET_ID] = false;
  }

  /** Returns true if field capableBuddy is set (has been assigned a value) and false otherwise */
  public boolean isSetCapableBuddy() {
    return __isset_vector[__CAPABLEBUDDY_ISSET_ID];
  }

  public void setCapableBuddyIsSet(boolean value) {
    __isset_vector[__CAPABLEBUDDY_ISSET_ID] = value;
  }

  public int getAttributes() {
    return this.attributes;
  }

  public void setAttributes(int attributes) {
    this.attributes = attributes;
    setAttributesIsSet(true);
  }

  public void unsetAttributes() {
    __isset_vector[__ATTRIBUTES_ISSET_ID] = false;
  }

  /** Returns true if field attributes is set (has been assigned a value) and false otherwise */
  public boolean isSetAttributes() {
    return __isset_vector[__ATTRIBUTES_ISSET_ID];
  }

  public void setAttributesIsSet(boolean value) {
    __isset_vector[__ATTRIBUTES_ISSET_ID] = value;
  }

  public long getSettings() {
    return this.settings;
  }

  public void setSettings(long settings) {
    this.settings = settings;
    setSettingsIsSet(true);
  }

  public void unsetSettings() {
    __isset_vector[__SETTINGS_ISSET_ID] = false;
  }

  /** Returns true if field settings is set (has been assigned a value) and false otherwise */
  public boolean isSetSettings() {
    return __isset_vector[__SETTINGS_ISSET_ID];
  }

  public void setSettingsIsSet(boolean value) {
    __isset_vector[__SETTINGS_ISSET_ID] = value;
  }

  public String getPicturePath() {
    return this.picturePath;
  }

  public void setPicturePath(String picturePath) {
    this.picturePath = picturePath;
  }

  public void unsetPicturePath() {
    this.picturePath = null;
  }

  /** Returns true if field picturePath is set (has been assigned a value) and false otherwise */
  public boolean isSetPicturePath() {
    return this.picturePath != null;
  }

  public void setPicturePathIsSet(boolean value) {
    if (!value) {
      this.picturePath = null;
    }
  }

  public String getRecommendParams() {
    return this.recommendParams;
  }

  public void setRecommendParams(String recommendParams) {
    this.recommendParams = recommendParams;
  }

  public void unsetRecommendParams() {
    this.recommendParams = null;
  }

  /** Returns true if field recommendParams is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommendParams() {
    return this.recommendParams != null;
  }

  public void setRecommendParamsIsSet(boolean value) {
    if (!value) {
      this.recommendParams = null;
    }
  }

  /**
   * 
   * @see FriendRequestStatus
   */
  public FriendRequestStatus getFriendRequestStatus() {
    return this.friendRequestStatus;
  }

  /**
   * 
   * @see FriendRequestStatus
   */
  public void setFriendRequestStatus(FriendRequestStatus friendRequestStatus) {
    this.friendRequestStatus = friendRequestStatus;
  }

  public void unsetFriendRequestStatus() {
    this.friendRequestStatus = null;
  }

  /** Returns true if field friendRequestStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetFriendRequestStatus() {
    return this.friendRequestStatus != null;
  }

  public void setFriendRequestStatusIsSet(boolean value) {
    if (!value) {
      this.friendRequestStatus = null;
    }
  }

  public String getMusicProfile() {
    return this.musicProfile;
  }

  public void setMusicProfile(String musicProfile) {
    this.musicProfile = musicProfile;
  }

  public void unsetMusicProfile() {
    this.musicProfile = null;
  }

  /** Returns true if field musicProfile is set (has been assigned a value) and false otherwise */
  public boolean isSetMusicProfile() {
    return this.musicProfile != null;
  }

  public void setMusicProfileIsSet(boolean value) {
    if (!value) {
      this.musicProfile = null;
    }
  }

  public String getVideoProfile() {
    return this.videoProfile;
  }

  public void setVideoProfile(String videoProfile) {
    this.videoProfile = videoProfile;
  }

  public void unsetVideoProfile() {
    this.videoProfile = null;
  }

  /** Returns true if field videoProfile is set (has been assigned a value) and false otherwise */
  public boolean isSetVideoProfile() {
    return this.videoProfile != null;
  }

  public void setVideoProfileIsSet(boolean value) {
    if (!value) {
      this.videoProfile = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Contact)
      return this.equals((Contact)that);
    return false;
  }

  public boolean equals(Contact that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_mid = true && this.isSetMid();
    boolean that_present_mid = true && that.isSetMid();
    if (this_present_mid || that_present_mid) {
      if (!(this_present_mid && that_present_mid))
        return false;
      if (!this.mid.equals(that.mid))
        return false;
    }

    boolean this_present_createdTime = true;
    boolean that_present_createdTime = true;
    if (this_present_createdTime || that_present_createdTime) {
      if (!(this_present_createdTime && that_present_createdTime))
        return false;
      if (this.createdTime != that.createdTime)
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_relation = true && this.isSetRelation();
    boolean that_present_relation = true && that.isSetRelation();
    if (this_present_relation || that_present_relation) {
      if (!(this_present_relation && that_present_relation))
        return false;
      if (!this.relation.equals(that.relation))
        return false;
    }

    boolean this_present_displayName = true && this.isSetDisplayName();
    boolean that_present_displayName = true && that.isSetDisplayName();
    if (this_present_displayName || that_present_displayName) {
      if (!(this_present_displayName && that_present_displayName))
        return false;
      if (!this.displayName.equals(that.displayName))
        return false;
    }

    boolean this_present_phoneticName = true && this.isSetPhoneticName();
    boolean that_present_phoneticName = true && that.isSetPhoneticName();
    if (this_present_phoneticName || that_present_phoneticName) {
      if (!(this_present_phoneticName && that_present_phoneticName))
        return false;
      if (!this.phoneticName.equals(that.phoneticName))
        return false;
    }

    boolean this_present_pictureStatus = true && this.isSetPictureStatus();
    boolean that_present_pictureStatus = true && that.isSetPictureStatus();
    if (this_present_pictureStatus || that_present_pictureStatus) {
      if (!(this_present_pictureStatus && that_present_pictureStatus))
        return false;
      if (!this.pictureStatus.equals(that.pictureStatus))
        return false;
    }

    boolean this_present_thumbnailUrl = true && this.isSetThumbnailUrl();
    boolean that_present_thumbnailUrl = true && that.isSetThumbnailUrl();
    if (this_present_thumbnailUrl || that_present_thumbnailUrl) {
      if (!(this_present_thumbnailUrl && that_present_thumbnailUrl))
        return false;
      if (!this.thumbnailUrl.equals(that.thumbnailUrl))
        return false;
    }

    boolean this_present_statusMessage = true && this.isSetStatusMessage();
    boolean that_present_statusMessage = true && that.isSetStatusMessage();
    if (this_present_statusMessage || that_present_statusMessage) {
      if (!(this_present_statusMessage && that_present_statusMessage))
        return false;
      if (!this.statusMessage.equals(that.statusMessage))
        return false;
    }

    boolean this_present_displayNameOverridden = true && this.isSetDisplayNameOverridden();
    boolean that_present_displayNameOverridden = true && that.isSetDisplayNameOverridden();
    if (this_present_displayNameOverridden || that_present_displayNameOverridden) {
      if (!(this_present_displayNameOverridden && that_present_displayNameOverridden))
        return false;
      if (!this.displayNameOverridden.equals(that.displayNameOverridden))
        return false;
    }

    boolean this_present_favoriteTime = true;
    boolean that_present_favoriteTime = true;
    if (this_present_favoriteTime || that_present_favoriteTime) {
      if (!(this_present_favoriteTime && that_present_favoriteTime))
        return false;
      if (this.favoriteTime != that.favoriteTime)
        return false;
    }

    boolean this_present_capableVoiceCall = true;
    boolean that_present_capableVoiceCall = true;
    if (this_present_capableVoiceCall || that_present_capableVoiceCall) {
      if (!(this_present_capableVoiceCall && that_present_capableVoiceCall))
        return false;
      if (this.capableVoiceCall != that.capableVoiceCall)
        return false;
    }

    boolean this_present_capableVideoCall = true;
    boolean that_present_capableVideoCall = true;
    if (this_present_capableVideoCall || that_present_capableVideoCall) {
      if (!(this_present_capableVideoCall && that_present_capableVideoCall))
        return false;
      if (this.capableVideoCall != that.capableVideoCall)
        return false;
    }

    boolean this_present_capableMyhome = true;
    boolean that_present_capableMyhome = true;
    if (this_present_capableMyhome || that_present_capableMyhome) {
      if (!(this_present_capableMyhome && that_present_capableMyhome))
        return false;
      if (this.capableMyhome != that.capableMyhome)
        return false;
    }

    boolean this_present_capableBuddy = true;
    boolean that_present_capableBuddy = true;
    if (this_present_capableBuddy || that_present_capableBuddy) {
      if (!(this_present_capableBuddy && that_present_capableBuddy))
        return false;
      if (this.capableBuddy != that.capableBuddy)
        return false;
    }

    boolean this_present_attributes = true;
    boolean that_present_attributes = true;
    if (this_present_attributes || that_present_attributes) {
      if (!(this_present_attributes && that_present_attributes))
        return false;
      if (this.attributes != that.attributes)
        return false;
    }

    boolean this_present_settings = true;
    boolean that_present_settings = true;
    if (this_present_settings || that_present_settings) {
      if (!(this_present_settings && that_present_settings))
        return false;
      if (this.settings != that.settings)
        return false;
    }

    boolean this_present_picturePath = true && this.isSetPicturePath();
    boolean that_present_picturePath = true && that.isSetPicturePath();
    if (this_present_picturePath || that_present_picturePath) {
      if (!(this_present_picturePath && that_present_picturePath))
        return false;
      if (!this.picturePath.equals(that.picturePath))
        return false;
    }

    boolean this_present_recommendParams = true && this.isSetRecommendParams();
    boolean that_present_recommendParams = true && that.isSetRecommendParams();
    if (this_present_recommendParams || that_present_recommendParams) {
      if (!(this_present_recommendParams && that_present_recommendParams))
        return false;
      if (!this.recommendParams.equals(that.recommendParams))
        return false;
    }

    boolean this_present_friendRequestStatus = true && this.isSetFriendRequestStatus();
    boolean that_present_friendRequestStatus = true && that.isSetFriendRequestStatus();
    if (this_present_friendRequestStatus || that_present_friendRequestStatus) {
      if (!(this_present_friendRequestStatus && that_present_friendRequestStatus))
        return false;
      if (!this.friendRequestStatus.equals(that.friendRequestStatus))
        return false;
    }

    boolean this_present_musicProfile = true && this.isSetMusicProfile();
    boolean that_present_musicProfile = true && that.isSetMusicProfile();
    if (this_present_musicProfile || that_present_musicProfile) {
      if (!(this_present_musicProfile && that_present_musicProfile))
        return false;
      if (!this.musicProfile.equals(that.musicProfile))
        return false;
    }

    boolean this_present_videoProfile = true && this.isSetVideoProfile();
    boolean that_present_videoProfile = true && that.isSetVideoProfile();
    if (this_present_videoProfile || that_present_videoProfile) {
      if (!(this_present_videoProfile && that_present_videoProfile))
        return false;
      if (!this.videoProfile.equals(that.videoProfile))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    Contact other = (Contact)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetMid(), other.isSetMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMid()) {
      lastComparison = TBaseHelper.compareTo(this.mid, other.mid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCreatedTime(), other.isSetCreatedTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedTime()) {
      lastComparison = TBaseHelper.compareTo(this.createdTime, other.createdTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetType(), other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetStatus(), other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetRelation(), other.isSetRelation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRelation()) {
      lastComparison = TBaseHelper.compareTo(this.relation, other.relation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDisplayName(), other.isSetDisplayName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayName()) {
      lastComparison = TBaseHelper.compareTo(this.displayName, other.displayName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPhoneticName(), other.isSetPhoneticName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhoneticName()) {
      lastComparison = TBaseHelper.compareTo(this.phoneticName, other.phoneticName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPictureStatus(), other.isSetPictureStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPictureStatus()) {
      lastComparison = TBaseHelper.compareTo(this.pictureStatus, other.pictureStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetThumbnailUrl(), other.isSetThumbnailUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThumbnailUrl()) {
      lastComparison = TBaseHelper.compareTo(this.thumbnailUrl, other.thumbnailUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetStatusMessage(), other.isSetStatusMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusMessage()) {
      lastComparison = TBaseHelper.compareTo(this.statusMessage, other.statusMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDisplayNameOverridden(), other.isSetDisplayNameOverridden());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayNameOverridden()) {
      lastComparison = TBaseHelper.compareTo(this.displayNameOverridden, other.displayNameOverridden);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetFavoriteTime(), other.isSetFavoriteTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFavoriteTime()) {
      lastComparison = TBaseHelper.compareTo(this.favoriteTime, other.favoriteTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCapableVoiceCall(), other.isSetCapableVoiceCall());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCapableVoiceCall()) {
      lastComparison = TBaseHelper.compareTo(this.capableVoiceCall, other.capableVoiceCall);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCapableVideoCall(), other.isSetCapableVideoCall());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCapableVideoCall()) {
      lastComparison = TBaseHelper.compareTo(this.capableVideoCall, other.capableVideoCall);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCapableMyhome(), other.isSetCapableMyhome());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCapableMyhome()) {
      lastComparison = TBaseHelper.compareTo(this.capableMyhome, other.capableMyhome);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCapableBuddy(), other.isSetCapableBuddy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCapableBuddy()) {
      lastComparison = TBaseHelper.compareTo(this.capableBuddy, other.capableBuddy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAttributes(), other.isSetAttributes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAttributes()) {
      lastComparison = TBaseHelper.compareTo(this.attributes, other.attributes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetSettings(), other.isSetSettings());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettings()) {
      lastComparison = TBaseHelper.compareTo(this.settings, other.settings);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPicturePath(), other.isSetPicturePath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPicturePath()) {
      lastComparison = TBaseHelper.compareTo(this.picturePath, other.picturePath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetRecommendParams(), other.isSetRecommendParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommendParams()) {
      lastComparison = TBaseHelper.compareTo(this.recommendParams, other.recommendParams);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetFriendRequestStatus(), other.isSetFriendRequestStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFriendRequestStatus()) {
      lastComparison = TBaseHelper.compareTo(this.friendRequestStatus, other.friendRequestStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMusicProfile(), other.isSetMusicProfile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMusicProfile()) {
      lastComparison = TBaseHelper.compareTo(this.musicProfile, other.musicProfile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetVideoProfile(), other.isSetVideoProfile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVideoProfile()) {
      lastComparison = TBaseHelper.compareTo(this.videoProfile, other.videoProfile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // MID
          if (field.type == TType.STRING) {
            this.mid = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // CREATED_TIME
          if (field.type == TType.I64) {
            this.createdTime = iprot.readI64();
            setCreatedTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // TYPE
          if (field.type == TType.I32) {
            this.type = ContactType.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // STATUS
          if (field.type == TType.I32) {
            this.status = ContactStatus.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // RELATION
          if (field.type == TType.I32) {
            this.relation = ContactRelation.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 22: // DISPLAY_NAME
          if (field.type == TType.STRING) {
            this.displayName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 23: // PHONETIC_NAME
          if (field.type == TType.STRING) {
            this.phoneticName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 24: // PICTURE_STATUS
          if (field.type == TType.STRING) {
            this.pictureStatus = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 25: // THUMBNAIL_URL
          if (field.type == TType.STRING) {
            this.thumbnailUrl = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 26: // STATUS_MESSAGE
          if (field.type == TType.STRING) {
            this.statusMessage = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 27: // DISPLAY_NAME_OVERRIDDEN
          if (field.type == TType.STRING) {
            this.displayNameOverridden = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 28: // FAVORITE_TIME
          if (field.type == TType.I64) {
            this.favoriteTime = iprot.readI64();
            setFavoriteTimeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 31: // CAPABLE_VOICE_CALL
          if (field.type == TType.BOOL) {
            this.capableVoiceCall = iprot.readBool();
            setCapableVoiceCallIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 32: // CAPABLE_VIDEO_CALL
          if (field.type == TType.BOOL) {
            this.capableVideoCall = iprot.readBool();
            setCapableVideoCallIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 33: // CAPABLE_MYHOME
          if (field.type == TType.BOOL) {
            this.capableMyhome = iprot.readBool();
            setCapableMyhomeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 34: // CAPABLE_BUDDY
          if (field.type == TType.BOOL) {
            this.capableBuddy = iprot.readBool();
            setCapableBuddyIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 35: // ATTRIBUTES
          if (field.type == TType.I32) {
            this.attributes = iprot.readI32();
            setAttributesIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 36: // SETTINGS
          if (field.type == TType.I64) {
            this.settings = iprot.readI64();
            setSettingsIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 37: // PICTURE_PATH
          if (field.type == TType.STRING) {
            this.picturePath = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 38: // RECOMMEND_PARAMS
          if (field.type == TType.STRING) {
            this.recommendParams = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 39: // FRIEND_REQUEST_STATUS
          if (field.type == TType.I32) {
            this.friendRequestStatus = FriendRequestStatus.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 40: // MUSIC_PROFILE
          if (field.type == TType.STRING) {
            this.musicProfile = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 42: // VIDEO_PROFILE
          if (field.type == TType.STRING) {
            this.videoProfile = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.mid != null) {
      oprot.writeFieldBegin(MID_FIELD_DESC);
      oprot.writeString(this.mid);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(CREATED_TIME_FIELD_DESC);
    oprot.writeI64(this.createdTime);
    oprot.writeFieldEnd();
    if (this.type != null) {
      oprot.writeFieldBegin(TYPE_FIELD_DESC);
      oprot.writeI32(this.type.getValue());
      oprot.writeFieldEnd();
    }
    if (this.status != null) {
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(this.status.getValue());
      oprot.writeFieldEnd();
    }
    if (this.relation != null) {
      oprot.writeFieldBegin(RELATION_FIELD_DESC);
      oprot.writeI32(this.relation.getValue());
      oprot.writeFieldEnd();
    }
    if (this.displayName != null) {
      oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
      oprot.writeString(this.displayName);
      oprot.writeFieldEnd();
    }
    if (this.phoneticName != null) {
      oprot.writeFieldBegin(PHONETIC_NAME_FIELD_DESC);
      oprot.writeString(this.phoneticName);
      oprot.writeFieldEnd();
    }
    if (this.pictureStatus != null) {
      oprot.writeFieldBegin(PICTURE_STATUS_FIELD_DESC);
      oprot.writeString(this.pictureStatus);
      oprot.writeFieldEnd();
    }
    if (this.thumbnailUrl != null) {
      oprot.writeFieldBegin(THUMBNAIL_URL_FIELD_DESC);
      oprot.writeString(this.thumbnailUrl);
      oprot.writeFieldEnd();
    }
    if (this.statusMessage != null) {
      oprot.writeFieldBegin(STATUS_MESSAGE_FIELD_DESC);
      oprot.writeString(this.statusMessage);
      oprot.writeFieldEnd();
    }
    if (this.displayNameOverridden != null) {
      oprot.writeFieldBegin(DISPLAY_NAME_OVERRIDDEN_FIELD_DESC);
      oprot.writeString(this.displayNameOverridden);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(FAVORITE_TIME_FIELD_DESC);
    oprot.writeI64(this.favoriteTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CAPABLE_VOICE_CALL_FIELD_DESC);
    oprot.writeBool(this.capableVoiceCall);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CAPABLE_VIDEO_CALL_FIELD_DESC);
    oprot.writeBool(this.capableVideoCall);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CAPABLE_MYHOME_FIELD_DESC);
    oprot.writeBool(this.capableMyhome);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(CAPABLE_BUDDY_FIELD_DESC);
    oprot.writeBool(this.capableBuddy);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(ATTRIBUTES_FIELD_DESC);
    oprot.writeI32(this.attributes);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(SETTINGS_FIELD_DESC);
    oprot.writeI64(this.settings);
    oprot.writeFieldEnd();
    if (this.picturePath != null) {
      oprot.writeFieldBegin(PICTURE_PATH_FIELD_DESC);
      oprot.writeString(this.picturePath);
      oprot.writeFieldEnd();
    }
    if (this.recommendParams != null) {
      oprot.writeFieldBegin(RECOMMEND_PARAMS_FIELD_DESC);
      oprot.writeString(this.recommendParams);
      oprot.writeFieldEnd();
    }
    if (this.friendRequestStatus != null) {
      oprot.writeFieldBegin(FRIEND_REQUEST_STATUS_FIELD_DESC);
      oprot.writeI32(this.friendRequestStatus.getValue());
      oprot.writeFieldEnd();
    }
    if (this.musicProfile != null) {
      oprot.writeFieldBegin(MUSIC_PROFILE_FIELD_DESC);
      oprot.writeString(this.musicProfile);
      oprot.writeFieldEnd();
    }
    if (this.videoProfile != null) {
      oprot.writeFieldBegin(VIDEO_PROFILE_FIELD_DESC);
      oprot.writeString(this.videoProfile);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("Contact(");
    boolean first = true;

    sb.append("mid:");
    if (this.mid == null) {
      sb.append("null");
    } else {
      sb.append(this.mid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdTime:");
    sb.append(this.createdTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("relation:");
    if (this.relation == null) {
      sb.append("null");
    } else {
      sb.append(this.relation);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayName:");
    if (this.displayName == null) {
      sb.append("null");
    } else {
      sb.append(this.displayName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phoneticName:");
    if (this.phoneticName == null) {
      sb.append("null");
    } else {
      sb.append(this.phoneticName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pictureStatus:");
    if (this.pictureStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.pictureStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thumbnailUrl:");
    if (this.thumbnailUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.thumbnailUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("statusMessage:");
    if (this.statusMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.statusMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayNameOverridden:");
    if (this.displayNameOverridden == null) {
      sb.append("null");
    } else {
      sb.append(this.displayNameOverridden);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("favoriteTime:");
    sb.append(this.favoriteTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("capableVoiceCall:");
    sb.append(this.capableVoiceCall);
    first = false;
    if (!first) sb.append(", ");
    sb.append("capableVideoCall:");
    sb.append(this.capableVideoCall);
    first = false;
    if (!first) sb.append(", ");
    sb.append("capableMyhome:");
    sb.append(this.capableMyhome);
    first = false;
    if (!first) sb.append(", ");
    sb.append("capableBuddy:");
    sb.append(this.capableBuddy);
    first = false;
    if (!first) sb.append(", ");
    sb.append("attributes:");
    sb.append(this.attributes);
    first = false;
    if (!first) sb.append(", ");
    sb.append("settings:");
    sb.append(this.settings);
    first = false;
    if (!first) sb.append(", ");
    sb.append("picturePath:");
    if (this.picturePath == null) {
      sb.append("null");
    } else {
      sb.append(this.picturePath);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommendParams:");
    if (this.recommendParams == null) {
      sb.append("null");
    } else {
      sb.append(this.recommendParams);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("friendRequestStatus:");
    if (this.friendRequestStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.friendRequestStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("musicProfile:");
    if (this.musicProfile == null) {
      sb.append("null");
    } else {
      sb.append(this.musicProfile);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("videoProfile:");
    if (this.videoProfile == null) {
      sb.append("null");
    } else {
      sb.append(this.videoProfile);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

