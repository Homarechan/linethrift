/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class UpdateSquareChatMemberResponse implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("UpdateSquareChatMemberResponse");

  private static final TField UPDATED_CHAT_MEMBER_FIELD_DESC = new TField("updatedChatMember", TType.STRUCT, (short)1);

  private SquareChatMember updatedChatMember;

  // isset id assignments

  public UpdateSquareChatMemberResponse() {
  }

  public UpdateSquareChatMemberResponse(
    SquareChatMember updatedChatMember)
  {
    this();
    this.updatedChatMember = updatedChatMember;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UpdateSquareChatMemberResponse(UpdateSquareChatMemberResponse other) {
    if (other.isSetUpdatedChatMember()) {
      this.updatedChatMember = new SquareChatMember(other.updatedChatMember);
    }
  }

  public UpdateSquareChatMemberResponse deepCopy() {
    return new UpdateSquareChatMemberResponse(this);
  }

  public void clear() {
    this.updatedChatMember = null;
  }

  public SquareChatMember getUpdatedChatMember() {
    return this.updatedChatMember;
  }

  public void setUpdatedChatMember(SquareChatMember updatedChatMember) {
    this.updatedChatMember = updatedChatMember;
  }

  public void unsetUpdatedChatMember() {
    this.updatedChatMember = null;
  }

  /** Returns true if field updatedChatMember is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatedChatMember() {
    return this.updatedChatMember != null;
  }

  public void setUpdatedChatMemberIsSet(boolean value) {
    if (!value) {
      this.updatedChatMember = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof UpdateSquareChatMemberResponse)
      return this.equals((UpdateSquareChatMemberResponse)that);
    return false;
  }

  public boolean equals(UpdateSquareChatMemberResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_updatedChatMember = true && this.isSetUpdatedChatMember();
    boolean that_present_updatedChatMember = true && that.isSetUpdatedChatMember();
    if (this_present_updatedChatMember || that_present_updatedChatMember) {
      if (!(this_present_updatedChatMember && that_present_updatedChatMember))
        return false;
      if (!this.updatedChatMember.equals(that.updatedChatMember))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    UpdateSquareChatMemberResponse other = (UpdateSquareChatMemberResponse)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetUpdatedChatMember(), other.isSetUpdatedChatMember());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatedChatMember()) {
      lastComparison = this.updatedChatMember.compareTo(other.updatedChatMember);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // UPDATED_CHAT_MEMBER
          if (field.type == TType.STRUCT) {
            this.updatedChatMember = new SquareChatMember();
            this.updatedChatMember.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.updatedChatMember != null) {
      oprot.writeFieldBegin(UPDATED_CHAT_MEMBER_FIELD_DESC);
      this.updatedChatMember.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("UpdateSquareChatMemberResponse(");
    boolean first = true;

    sb.append("updatedChatMember:");
    if (this.updatedChatMember == null) {
      sb.append("null");
    } else {
      sb.append(this.updatedChatMember);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

