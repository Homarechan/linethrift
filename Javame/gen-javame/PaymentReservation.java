/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class PaymentReservation implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("PaymentReservation");

  private static final TField RECEIVER_MID_FIELD_DESC = new TField("receiverMid", TType.STRING, (short)1);
  private static final TField PRODUCT_ID_FIELD_DESC = new TField("productId", TType.STRING, (short)2);
  private static final TField LANGUAGE_FIELD_DESC = new TField("language", TType.STRING, (short)3);
  private static final TField LOCATION_FIELD_DESC = new TField("location", TType.STRING, (short)4);
  private static final TField CURRENCY_FIELD_DESC = new TField("currency", TType.STRING, (short)5);
  private static final TField PRICE_FIELD_DESC = new TField("price", TType.STRING, (short)6);
  private static final TField APP_STORE_CODE_FIELD_DESC = new TField("appStoreCode", TType.I32, (short)7);
  private static final TField MESSAGE_TEXT_FIELD_DESC = new TField("messageText", TType.STRING, (short)8);
  private static final TField MESSAGE_TEMPLATE_FIELD_DESC = new TField("messageTemplate", TType.I32, (short)9);
  private static final TField PACKAGE_ID_FIELD_DESC = new TField("packageId", TType.I64, (short)10);

  private String receiverMid;
  private String productId;
  private String language;
  private String location;
  private String currency;
  private String price;
  private PaymentType appStoreCode;
  private String messageText;
  private int messageTemplate;
  private long packageId;

  // isset id assignments
  private static final int __MESSAGETEMPLATE_ISSET_ID = 0;
  private static final int __PACKAGEID_ISSET_ID = 1;
  private boolean[] __isset_vector = new boolean[2];

  public PaymentReservation() {
  }

  public PaymentReservation(
    String receiverMid,
    String productId,
    String language,
    String location,
    String currency,
    String price,
    PaymentType appStoreCode,
    String messageText,
    int messageTemplate,
    long packageId)
  {
    this();
    this.receiverMid = receiverMid;
    this.productId = productId;
    this.language = language;
    this.location = location;
    this.currency = currency;
    this.price = price;
    this.appStoreCode = appStoreCode;
    this.messageText = messageText;
    this.messageTemplate = messageTemplate;
    setMessageTemplateIsSet(true);
    this.packageId = packageId;
    setPackageIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PaymentReservation(PaymentReservation other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    if (other.isSetReceiverMid()) {
      this.receiverMid = other.receiverMid;
    }
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    if (other.isSetLanguage()) {
      this.language = other.language;
    }
    if (other.isSetLocation()) {
      this.location = other.location;
    }
    if (other.isSetCurrency()) {
      this.currency = other.currency;
    }
    if (other.isSetPrice()) {
      this.price = other.price;
    }
    if (other.isSetAppStoreCode()) {
      this.appStoreCode = other.appStoreCode;
    }
    if (other.isSetMessageText()) {
      this.messageText = other.messageText;
    }
    this.messageTemplate = other.messageTemplate;
    this.packageId = other.packageId;
  }

  public PaymentReservation deepCopy() {
    return new PaymentReservation(this);
  }

  public void clear() {
    this.receiverMid = null;
    this.productId = null;
    this.language = null;
    this.location = null;
    this.currency = null;
    this.price = null;
    this.appStoreCode = null;
    this.messageText = null;
    setMessageTemplateIsSet(false);
    this.messageTemplate = 0;
    setPackageIdIsSet(false);
    this.packageId = 0;
  }

  public String getReceiverMid() {
    return this.receiverMid;
  }

  public void setReceiverMid(String receiverMid) {
    this.receiverMid = receiverMid;
  }

  public void unsetReceiverMid() {
    this.receiverMid = null;
  }

  /** Returns true if field receiverMid is set (has been assigned a value) and false otherwise */
  public boolean isSetReceiverMid() {
    return this.receiverMid != null;
  }

  public void setReceiverMidIsSet(boolean value) {
    if (!value) {
      this.receiverMid = null;
    }
  }

  public String getProductId() {
    return this.productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  public String getLanguage() {
    return this.language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public void unsetLanguage() {
    this.language = null;
  }

  /** Returns true if field language is set (has been assigned a value) and false otherwise */
  public boolean isSetLanguage() {
    return this.language != null;
  }

  public void setLanguageIsSet(boolean value) {
    if (!value) {
      this.language = null;
    }
  }

  public String getLocation() {
    return this.location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public void unsetLocation() {
    this.location = null;
  }

  /** Returns true if field location is set (has been assigned a value) and false otherwise */
  public boolean isSetLocation() {
    return this.location != null;
  }

  public void setLocationIsSet(boolean value) {
    if (!value) {
      this.location = null;
    }
  }

  public String getCurrency() {
    return this.currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public void unsetCurrency() {
    this.currency = null;
  }

  /** Returns true if field currency is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrency() {
    return this.currency != null;
  }

  public void setCurrencyIsSet(boolean value) {
    if (!value) {
      this.currency = null;
    }
  }

  public String getPrice() {
    return this.price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public void unsetPrice() {
    this.price = null;
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return this.price != null;
  }

  public void setPriceIsSet(boolean value) {
    if (!value) {
      this.price = null;
    }
  }

  /**
   * 
   * @see PaymentType
   */
  public PaymentType getAppStoreCode() {
    return this.appStoreCode;
  }

  /**
   * 
   * @see PaymentType
   */
  public void setAppStoreCode(PaymentType appStoreCode) {
    this.appStoreCode = appStoreCode;
  }

  public void unsetAppStoreCode() {
    this.appStoreCode = null;
  }

  /** Returns true if field appStoreCode is set (has been assigned a value) and false otherwise */
  public boolean isSetAppStoreCode() {
    return this.appStoreCode != null;
  }

  public void setAppStoreCodeIsSet(boolean value) {
    if (!value) {
      this.appStoreCode = null;
    }
  }

  public String getMessageText() {
    return this.messageText;
  }

  public void setMessageText(String messageText) {
    this.messageText = messageText;
  }

  public void unsetMessageText() {
    this.messageText = null;
  }

  /** Returns true if field messageText is set (has been assigned a value) and false otherwise */
  public boolean isSetMessageText() {
    return this.messageText != null;
  }

  public void setMessageTextIsSet(boolean value) {
    if (!value) {
      this.messageText = null;
    }
  }

  public int getMessageTemplate() {
    return this.messageTemplate;
  }

  public void setMessageTemplate(int messageTemplate) {
    this.messageTemplate = messageTemplate;
    setMessageTemplateIsSet(true);
  }

  public void unsetMessageTemplate() {
    __isset_vector[__MESSAGETEMPLATE_ISSET_ID] = false;
  }

  /** Returns true if field messageTemplate is set (has been assigned a value) and false otherwise */
  public boolean isSetMessageTemplate() {
    return __isset_vector[__MESSAGETEMPLATE_ISSET_ID];
  }

  public void setMessageTemplateIsSet(boolean value) {
    __isset_vector[__MESSAGETEMPLATE_ISSET_ID] = value;
  }

  public long getPackageId() {
    return this.packageId;
  }

  public void setPackageId(long packageId) {
    this.packageId = packageId;
    setPackageIdIsSet(true);
  }

  public void unsetPackageId() {
    __isset_vector[__PACKAGEID_ISSET_ID] = false;
  }

  /** Returns true if field packageId is set (has been assigned a value) and false otherwise */
  public boolean isSetPackageId() {
    return __isset_vector[__PACKAGEID_ISSET_ID];
  }

  public void setPackageIdIsSet(boolean value) {
    __isset_vector[__PACKAGEID_ISSET_ID] = value;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PaymentReservation)
      return this.equals((PaymentReservation)that);
    return false;
  }

  public boolean equals(PaymentReservation that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_receiverMid = true && this.isSetReceiverMid();
    boolean that_present_receiverMid = true && that.isSetReceiverMid();
    if (this_present_receiverMid || that_present_receiverMid) {
      if (!(this_present_receiverMid && that_present_receiverMid))
        return false;
      if (!this.receiverMid.equals(that.receiverMid))
        return false;
    }

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_language = true && this.isSetLanguage();
    boolean that_present_language = true && that.isSetLanguage();
    if (this_present_language || that_present_language) {
      if (!(this_present_language && that_present_language))
        return false;
      if (!this.language.equals(that.language))
        return false;
    }

    boolean this_present_location = true && this.isSetLocation();
    boolean that_present_location = true && that.isSetLocation();
    if (this_present_location || that_present_location) {
      if (!(this_present_location && that_present_location))
        return false;
      if (!this.location.equals(that.location))
        return false;
    }

    boolean this_present_currency = true && this.isSetCurrency();
    boolean that_present_currency = true && that.isSetCurrency();
    if (this_present_currency || that_present_currency) {
      if (!(this_present_currency && that_present_currency))
        return false;
      if (!this.currency.equals(that.currency))
        return false;
    }

    boolean this_present_price = true && this.isSetPrice();
    boolean that_present_price = true && that.isSetPrice();
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (!this.price.equals(that.price))
        return false;
    }

    boolean this_present_appStoreCode = true && this.isSetAppStoreCode();
    boolean that_present_appStoreCode = true && that.isSetAppStoreCode();
    if (this_present_appStoreCode || that_present_appStoreCode) {
      if (!(this_present_appStoreCode && that_present_appStoreCode))
        return false;
      if (!this.appStoreCode.equals(that.appStoreCode))
        return false;
    }

    boolean this_present_messageText = true && this.isSetMessageText();
    boolean that_present_messageText = true && that.isSetMessageText();
    if (this_present_messageText || that_present_messageText) {
      if (!(this_present_messageText && that_present_messageText))
        return false;
      if (!this.messageText.equals(that.messageText))
        return false;
    }

    boolean this_present_messageTemplate = true;
    boolean that_present_messageTemplate = true;
    if (this_present_messageTemplate || that_present_messageTemplate) {
      if (!(this_present_messageTemplate && that_present_messageTemplate))
        return false;
      if (this.messageTemplate != that.messageTemplate)
        return false;
    }

    boolean this_present_packageId = true;
    boolean that_present_packageId = true;
    if (this_present_packageId || that_present_packageId) {
      if (!(this_present_packageId && that_present_packageId))
        return false;
      if (this.packageId != that.packageId)
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    PaymentReservation other = (PaymentReservation)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetReceiverMid(), other.isSetReceiverMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReceiverMid()) {
      lastComparison = TBaseHelper.compareTo(this.receiverMid, other.receiverMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetProductId(), other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetLanguage(), other.isSetLanguage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLanguage()) {
      lastComparison = TBaseHelper.compareTo(this.language, other.language);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetLocation(), other.isSetLocation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocation()) {
      lastComparison = TBaseHelper.compareTo(this.location, other.location);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCurrency(), other.isSetCurrency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrency()) {
      lastComparison = TBaseHelper.compareTo(this.currency, other.currency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrice(), other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAppStoreCode(), other.isSetAppStoreCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppStoreCode()) {
      lastComparison = TBaseHelper.compareTo(this.appStoreCode, other.appStoreCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMessageText(), other.isSetMessageText());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessageText()) {
      lastComparison = TBaseHelper.compareTo(this.messageText, other.messageText);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMessageTemplate(), other.isSetMessageTemplate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessageTemplate()) {
      lastComparison = TBaseHelper.compareTo(this.messageTemplate, other.messageTemplate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPackageId(), other.isSetPackageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageId()) {
      lastComparison = TBaseHelper.compareTo(this.packageId, other.packageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // RECEIVER_MID
          if (field.type == TType.STRING) {
            this.receiverMid = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // PRODUCT_ID
          if (field.type == TType.STRING) {
            this.productId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // LANGUAGE
          if (field.type == TType.STRING) {
            this.language = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // LOCATION
          if (field.type == TType.STRING) {
            this.location = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // CURRENCY
          if (field.type == TType.STRING) {
            this.currency = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // PRICE
          if (field.type == TType.STRING) {
            this.price = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // APP_STORE_CODE
          if (field.type == TType.I32) {
            this.appStoreCode = PaymentType.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // MESSAGE_TEXT
          if (field.type == TType.STRING) {
            this.messageText = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // MESSAGE_TEMPLATE
          if (field.type == TType.I32) {
            this.messageTemplate = iprot.readI32();
            setMessageTemplateIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // PACKAGE_ID
          if (field.type == TType.I64) {
            this.packageId = iprot.readI64();
            setPackageIdIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.receiverMid != null) {
      oprot.writeFieldBegin(RECEIVER_MID_FIELD_DESC);
      oprot.writeString(this.receiverMid);
      oprot.writeFieldEnd();
    }
    if (this.productId != null) {
      oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
      oprot.writeString(this.productId);
      oprot.writeFieldEnd();
    }
    if (this.language != null) {
      oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
      oprot.writeString(this.language);
      oprot.writeFieldEnd();
    }
    if (this.location != null) {
      oprot.writeFieldBegin(LOCATION_FIELD_DESC);
      oprot.writeString(this.location);
      oprot.writeFieldEnd();
    }
    if (this.currency != null) {
      oprot.writeFieldBegin(CURRENCY_FIELD_DESC);
      oprot.writeString(this.currency);
      oprot.writeFieldEnd();
    }
    if (this.price != null) {
      oprot.writeFieldBegin(PRICE_FIELD_DESC);
      oprot.writeString(this.price);
      oprot.writeFieldEnd();
    }
    if (this.appStoreCode != null) {
      oprot.writeFieldBegin(APP_STORE_CODE_FIELD_DESC);
      oprot.writeI32(this.appStoreCode.getValue());
      oprot.writeFieldEnd();
    }
    if (this.messageText != null) {
      oprot.writeFieldBegin(MESSAGE_TEXT_FIELD_DESC);
      oprot.writeString(this.messageText);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(MESSAGE_TEMPLATE_FIELD_DESC);
    oprot.writeI32(this.messageTemplate);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PACKAGE_ID_FIELD_DESC);
    oprot.writeI64(this.packageId);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("PaymentReservation(");
    boolean first = true;

    sb.append("receiverMid:");
    if (this.receiverMid == null) {
      sb.append("null");
    } else {
      sb.append(this.receiverMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("language:");
    if (this.language == null) {
      sb.append("null");
    } else {
      sb.append(this.language);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("location:");
    if (this.location == null) {
      sb.append("null");
    } else {
      sb.append(this.location);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currency:");
    if (this.currency == null) {
      sb.append("null");
    } else {
      sb.append(this.currency);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    if (this.price == null) {
      sb.append("null");
    } else {
      sb.append(this.price);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appStoreCode:");
    if (this.appStoreCode == null) {
      sb.append("null");
    } else {
      sb.append(this.appStoreCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("messageText:");
    if (this.messageText == null) {
      sb.append("null");
    } else {
      sb.append(this.messageText);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("messageTemplate:");
    sb.append(this.messageTemplate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("packageId:");
    sb.append(this.packageId);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

