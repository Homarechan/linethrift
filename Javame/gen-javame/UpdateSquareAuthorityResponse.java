/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class UpdateSquareAuthorityResponse implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("UpdateSquareAuthorityResponse");

  private static final TField UPDATD_ATTRIBUTES_FIELD_DESC = new TField("updatdAttributes", TType.SET, (short)1);
  private static final TField AUTHORITY_FIELD_DESC = new TField("authority", TType.STRUCT, (short)2);

  private Hashtable updatdAttributes;
  private SquareAuthority authority;

  // isset id assignments

  public UpdateSquareAuthorityResponse() {
  }

  public UpdateSquareAuthorityResponse(
    Hashtable updatdAttributes,
    SquareAuthority authority)
  {
    this();
    this.updatdAttributes = updatdAttributes;
    this.authority = authority;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UpdateSquareAuthorityResponse(UpdateSquareAuthorityResponse other) {
    if (other.isSetUpdatdAttributes()) {
      Hashtable __this__updatdAttributes = new Hashtable();
      for (Enumeration other_enum = other.updatdAttributes.elements(); other_enum.hasMoreElements(); ) {
        SquareAuthorityAttribute other_element = (SquareAuthorityAttribute)other_enum.nextElement();
        __this__updatdAttributes.addElement(other_element);
      }
      this.updatdAttributes = __this__updatdAttributes;
    }
    if (other.isSetAuthority()) {
      this.authority = new SquareAuthority(other.authority);
    }
  }

  public UpdateSquareAuthorityResponse deepCopy() {
    return new UpdateSquareAuthorityResponse(this);
  }

  public void clear() {
    this.updatdAttributes = null;
    this.authority = null;
  }

  public int getUpdatdAttributesSize() {
    return (this.updatdAttributes == null) ? 0 : this.updatdAttributes.size();
  }

  public Enumeration getUpdatdAttributesEnumeration() {
    return (this.updatdAttributes == null) ? null : this.updatdAttributes.elements();
  }

  public void addToUpdatdAttributes(SquareAuthorityAttribute elem) {
    if (this.updatdAttributes == null) {
      this.updatdAttributes = new Hashtable();
    }
    this.updatdAttributes.put(elem, elem);
  }

  public Hashtable getUpdatdAttributes() {
    return this.updatdAttributes;
  }

  public void setUpdatdAttributes(Hashtable updatdAttributes) {
    this.updatdAttributes = updatdAttributes;
  }

  public void unsetUpdatdAttributes() {
    this.updatdAttributes = null;
  }

  /** Returns true if field updatdAttributes is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatdAttributes() {
    return this.updatdAttributes != null;
  }

  public void setUpdatdAttributesIsSet(boolean value) {
    if (!value) {
      this.updatdAttributes = null;
    }
  }

  public SquareAuthority getAuthority() {
    return this.authority;
  }

  public void setAuthority(SquareAuthority authority) {
    this.authority = authority;
  }

  public void unsetAuthority() {
    this.authority = null;
  }

  /** Returns true if field authority is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthority() {
    return this.authority != null;
  }

  public void setAuthorityIsSet(boolean value) {
    if (!value) {
      this.authority = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof UpdateSquareAuthorityResponse)
      return this.equals((UpdateSquareAuthorityResponse)that);
    return false;
  }

  public boolean equals(UpdateSquareAuthorityResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_updatdAttributes = true && this.isSetUpdatdAttributes();
    boolean that_present_updatdAttributes = true && that.isSetUpdatdAttributes();
    if (this_present_updatdAttributes || that_present_updatdAttributes) {
      if (!(this_present_updatdAttributes && that_present_updatdAttributes))
        return false;
      if (!this.updatdAttributes.equals(that.updatdAttributes))
        return false;
    }

    boolean this_present_authority = true && this.isSetAuthority();
    boolean that_present_authority = true && that.isSetAuthority();
    if (this_present_authority || that_present_authority) {
      if (!(this_present_authority && that_present_authority))
        return false;
      if (!this.authority.equals(that.authority))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    UpdateSquareAuthorityResponse other = (UpdateSquareAuthorityResponse)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetUpdatdAttributes(), other.isSetUpdatdAttributes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatdAttributes()) {
      lastComparison = TBaseHelper.compareTo(this.updatdAttributes, other.updatdAttributes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAuthority(), other.isSetAuthority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthority()) {
      lastComparison = this.authority.compareTo(other.authority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // UPDATD_ATTRIBUTES
          if (field.type == TType.SET) {
            {
              TSet _set487 = iprot.readSetBegin();
              this.updatdAttributes = new Hashtable(2*_set487.size);
              for (int _i488 = 0; _i488 < _set487.size; ++_i488)
              {
                SquareAuthorityAttribute _elem489;
                _elem489 = SquareAuthorityAttribute.findByValue(iprot.readI32());
                this.updatdAttributes.put(_elem489, _elem489);
              }
              iprot.readSetEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // AUTHORITY
          if (field.type == TType.STRUCT) {
            this.authority = new SquareAuthority();
            this.authority.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.updatdAttributes != null) {
      oprot.writeFieldBegin(UPDATD_ATTRIBUTES_FIELD_DESC);
      {
        oprot.writeSetBegin(new TSet(TType.I32, this.updatdAttributes.size()));
        for (Enumeration _iter490_enum = this.updatdAttributes.keys(); _iter490_enum.hasMoreElements(); )         {
          SquareAuthorityAttribute _iter490 = (SquareAuthorityAttribute)_iter490_enum.nextElement();
          oprot.writeI32(_iter490.getValue());
        }
        oprot.writeSetEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.authority != null) {
      oprot.writeFieldBegin(AUTHORITY_FIELD_DESC);
      this.authority.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("UpdateSquareAuthorityResponse(");
    boolean first = true;

    sb.append("updatdAttributes:");
    if (this.updatdAttributes == null) {
      sb.append("null");
    } else {
      sb.append(this.updatdAttributes);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("authority:");
    if (this.authority == null) {
      sb.append("null");
    } else {
      sb.append(this.authority);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

