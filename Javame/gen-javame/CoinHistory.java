/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class CoinHistory implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("CoinHistory");

  private static final TField PAY_DATE_FIELD_DESC = new TField("payDate", TType.I64, (short)1);
  private static final TField COIN_BALANCE_FIELD_DESC = new TField("coinBalance", TType.I32, (short)2);
  private static final TField COIN_FIELD_DESC = new TField("coin", TType.I32, (short)3);
  private static final TField PRICE_FIELD_DESC = new TField("price", TType.STRING, (short)4);
  private static final TField TITLE_FIELD_DESC = new TField("title", TType.STRING, (short)5);
  private static final TField REFUND_FIELD_DESC = new TField("refund", TType.BOOL, (short)6);
  private static final TField PAY_SEQ_FIELD_DESC = new TField("paySeq", TType.STRING, (short)7);
  private static final TField CURRENCY_FIELD_DESC = new TField("currency", TType.STRING, (short)8);
  private static final TField CURRENCY_SIGN_FIELD_DESC = new TField("currencySign", TType.STRING, (short)9);
  private static final TField DISPLAY_PRICE_FIELD_DESC = new TField("displayPrice", TType.STRING, (short)10);
  private static final TField PAYLOAD_FIELD_DESC = new TField("payload", TType.STRUCT, (short)11);
  private static final TField CHANNEL_ID_FIELD_DESC = new TField("channelId", TType.STRING, (short)12);

  private long payDate;
  private int coinBalance;
  private int coin;
  private String price;
  private String title;
  private boolean refund;
  private String paySeq;
  private String currency;
  private String currencySign;
  private String displayPrice;
  private CoinPayLoad payload;
  private String channelId;

  // isset id assignments
  private static final int __PAYDATE_ISSET_ID = 0;
  private static final int __COINBALANCE_ISSET_ID = 1;
  private static final int __COIN_ISSET_ID = 2;
  private static final int __REFUND_ISSET_ID = 3;
  private boolean[] __isset_vector = new boolean[4];

  public CoinHistory() {
  }

  public CoinHistory(
    long payDate,
    int coinBalance,
    int coin,
    String price,
    String title,
    boolean refund,
    String paySeq,
    String currency,
    String currencySign,
    String displayPrice,
    CoinPayLoad payload,
    String channelId)
  {
    this();
    this.payDate = payDate;
    setPayDateIsSet(true);
    this.coinBalance = coinBalance;
    setCoinBalanceIsSet(true);
    this.coin = coin;
    setCoinIsSet(true);
    this.price = price;
    this.title = title;
    this.refund = refund;
    setRefundIsSet(true);
    this.paySeq = paySeq;
    this.currency = currency;
    this.currencySign = currencySign;
    this.displayPrice = displayPrice;
    this.payload = payload;
    this.channelId = channelId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CoinHistory(CoinHistory other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    this.payDate = other.payDate;
    this.coinBalance = other.coinBalance;
    this.coin = other.coin;
    if (other.isSetPrice()) {
      this.price = other.price;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    this.refund = other.refund;
    if (other.isSetPaySeq()) {
      this.paySeq = other.paySeq;
    }
    if (other.isSetCurrency()) {
      this.currency = other.currency;
    }
    if (other.isSetCurrencySign()) {
      this.currencySign = other.currencySign;
    }
    if (other.isSetDisplayPrice()) {
      this.displayPrice = other.displayPrice;
    }
    if (other.isSetPayload()) {
      this.payload = new CoinPayLoad(other.payload);
    }
    if (other.isSetChannelId()) {
      this.channelId = other.channelId;
    }
  }

  public CoinHistory deepCopy() {
    return new CoinHistory(this);
  }

  public void clear() {
    setPayDateIsSet(false);
    this.payDate = 0;
    setCoinBalanceIsSet(false);
    this.coinBalance = 0;
    setCoinIsSet(false);
    this.coin = 0;
    this.price = null;
    this.title = null;
    setRefundIsSet(false);
    this.refund = false;
    this.paySeq = null;
    this.currency = null;
    this.currencySign = null;
    this.displayPrice = null;
    this.payload = null;
    this.channelId = null;
  }

  public long getPayDate() {
    return this.payDate;
  }

  public void setPayDate(long payDate) {
    this.payDate = payDate;
    setPayDateIsSet(true);
  }

  public void unsetPayDate() {
    __isset_vector[__PAYDATE_ISSET_ID] = false;
  }

  /** Returns true if field payDate is set (has been assigned a value) and false otherwise */
  public boolean isSetPayDate() {
    return __isset_vector[__PAYDATE_ISSET_ID];
  }

  public void setPayDateIsSet(boolean value) {
    __isset_vector[__PAYDATE_ISSET_ID] = value;
  }

  public int getCoinBalance() {
    return this.coinBalance;
  }

  public void setCoinBalance(int coinBalance) {
    this.coinBalance = coinBalance;
    setCoinBalanceIsSet(true);
  }

  public void unsetCoinBalance() {
    __isset_vector[__COINBALANCE_ISSET_ID] = false;
  }

  /** Returns true if field coinBalance is set (has been assigned a value) and false otherwise */
  public boolean isSetCoinBalance() {
    return __isset_vector[__COINBALANCE_ISSET_ID];
  }

  public void setCoinBalanceIsSet(boolean value) {
    __isset_vector[__COINBALANCE_ISSET_ID] = value;
  }

  public int getCoin() {
    return this.coin;
  }

  public void setCoin(int coin) {
    this.coin = coin;
    setCoinIsSet(true);
  }

  public void unsetCoin() {
    __isset_vector[__COIN_ISSET_ID] = false;
  }

  /** Returns true if field coin is set (has been assigned a value) and false otherwise */
  public boolean isSetCoin() {
    return __isset_vector[__COIN_ISSET_ID];
  }

  public void setCoinIsSet(boolean value) {
    __isset_vector[__COIN_ISSET_ID] = value;
  }

  public String getPrice() {
    return this.price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public void unsetPrice() {
    this.price = null;
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return this.price != null;
  }

  public void setPriceIsSet(boolean value) {
    if (!value) {
      this.price = null;
    }
  }

  public String getTitle() {
    return this.title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public boolean isRefund() {
    return this.refund;
  }

  public void setRefund(boolean refund) {
    this.refund = refund;
    setRefundIsSet(true);
  }

  public void unsetRefund() {
    __isset_vector[__REFUND_ISSET_ID] = false;
  }

  /** Returns true if field refund is set (has been assigned a value) and false otherwise */
  public boolean isSetRefund() {
    return __isset_vector[__REFUND_ISSET_ID];
  }

  public void setRefundIsSet(boolean value) {
    __isset_vector[__REFUND_ISSET_ID] = value;
  }

  public String getPaySeq() {
    return this.paySeq;
  }

  public void setPaySeq(String paySeq) {
    this.paySeq = paySeq;
  }

  public void unsetPaySeq() {
    this.paySeq = null;
  }

  /** Returns true if field paySeq is set (has been assigned a value) and false otherwise */
  public boolean isSetPaySeq() {
    return this.paySeq != null;
  }

  public void setPaySeqIsSet(boolean value) {
    if (!value) {
      this.paySeq = null;
    }
  }

  public String getCurrency() {
    return this.currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public void unsetCurrency() {
    this.currency = null;
  }

  /** Returns true if field currency is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrency() {
    return this.currency != null;
  }

  public void setCurrencyIsSet(boolean value) {
    if (!value) {
      this.currency = null;
    }
  }

  public String getCurrencySign() {
    return this.currencySign;
  }

  public void setCurrencySign(String currencySign) {
    this.currencySign = currencySign;
  }

  public void unsetCurrencySign() {
    this.currencySign = null;
  }

  /** Returns true if field currencySign is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrencySign() {
    return this.currencySign != null;
  }

  public void setCurrencySignIsSet(boolean value) {
    if (!value) {
      this.currencySign = null;
    }
  }

  public String getDisplayPrice() {
    return this.displayPrice;
  }

  public void setDisplayPrice(String displayPrice) {
    this.displayPrice = displayPrice;
  }

  public void unsetDisplayPrice() {
    this.displayPrice = null;
  }

  /** Returns true if field displayPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayPrice() {
    return this.displayPrice != null;
  }

  public void setDisplayPriceIsSet(boolean value) {
    if (!value) {
      this.displayPrice = null;
    }
  }

  public CoinPayLoad getPayload() {
    return this.payload;
  }

  public void setPayload(CoinPayLoad payload) {
    this.payload = payload;
  }

  public void unsetPayload() {
    this.payload = null;
  }

  /** Returns true if field payload is set (has been assigned a value) and false otherwise */
  public boolean isSetPayload() {
    return this.payload != null;
  }

  public void setPayloadIsSet(boolean value) {
    if (!value) {
      this.payload = null;
    }
  }

  public String getChannelId() {
    return this.channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }

  public void unsetChannelId() {
    this.channelId = null;
  }

  /** Returns true if field channelId is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelId() {
    return this.channelId != null;
  }

  public void setChannelIdIsSet(boolean value) {
    if (!value) {
      this.channelId = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CoinHistory)
      return this.equals((CoinHistory)that);
    return false;
  }

  public boolean equals(CoinHistory that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_payDate = true;
    boolean that_present_payDate = true;
    if (this_present_payDate || that_present_payDate) {
      if (!(this_present_payDate && that_present_payDate))
        return false;
      if (this.payDate != that.payDate)
        return false;
    }

    boolean this_present_coinBalance = true;
    boolean that_present_coinBalance = true;
    if (this_present_coinBalance || that_present_coinBalance) {
      if (!(this_present_coinBalance && that_present_coinBalance))
        return false;
      if (this.coinBalance != that.coinBalance)
        return false;
    }

    boolean this_present_coin = true;
    boolean that_present_coin = true;
    if (this_present_coin || that_present_coin) {
      if (!(this_present_coin && that_present_coin))
        return false;
      if (this.coin != that.coin)
        return false;
    }

    boolean this_present_price = true && this.isSetPrice();
    boolean that_present_price = true && that.isSetPrice();
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (!this.price.equals(that.price))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_refund = true;
    boolean that_present_refund = true;
    if (this_present_refund || that_present_refund) {
      if (!(this_present_refund && that_present_refund))
        return false;
      if (this.refund != that.refund)
        return false;
    }

    boolean this_present_paySeq = true && this.isSetPaySeq();
    boolean that_present_paySeq = true && that.isSetPaySeq();
    if (this_present_paySeq || that_present_paySeq) {
      if (!(this_present_paySeq && that_present_paySeq))
        return false;
      if (!this.paySeq.equals(that.paySeq))
        return false;
    }

    boolean this_present_currency = true && this.isSetCurrency();
    boolean that_present_currency = true && that.isSetCurrency();
    if (this_present_currency || that_present_currency) {
      if (!(this_present_currency && that_present_currency))
        return false;
      if (!this.currency.equals(that.currency))
        return false;
    }

    boolean this_present_currencySign = true && this.isSetCurrencySign();
    boolean that_present_currencySign = true && that.isSetCurrencySign();
    if (this_present_currencySign || that_present_currencySign) {
      if (!(this_present_currencySign && that_present_currencySign))
        return false;
      if (!this.currencySign.equals(that.currencySign))
        return false;
    }

    boolean this_present_displayPrice = true && this.isSetDisplayPrice();
    boolean that_present_displayPrice = true && that.isSetDisplayPrice();
    if (this_present_displayPrice || that_present_displayPrice) {
      if (!(this_present_displayPrice && that_present_displayPrice))
        return false;
      if (!this.displayPrice.equals(that.displayPrice))
        return false;
    }

    boolean this_present_payload = true && this.isSetPayload();
    boolean that_present_payload = true && that.isSetPayload();
    if (this_present_payload || that_present_payload) {
      if (!(this_present_payload && that_present_payload))
        return false;
      if (!this.payload.equals(that.payload))
        return false;
    }

    boolean this_present_channelId = true && this.isSetChannelId();
    boolean that_present_channelId = true && that.isSetChannelId();
    if (this_present_channelId || that_present_channelId) {
      if (!(this_present_channelId && that_present_channelId))
        return false;
      if (!this.channelId.equals(that.channelId))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    CoinHistory other = (CoinHistory)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetPayDate(), other.isSetPayDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayDate()) {
      lastComparison = TBaseHelper.compareTo(this.payDate, other.payDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCoinBalance(), other.isSetCoinBalance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCoinBalance()) {
      lastComparison = TBaseHelper.compareTo(this.coinBalance, other.coinBalance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCoin(), other.isSetCoin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCoin()) {
      lastComparison = TBaseHelper.compareTo(this.coin, other.coin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrice(), other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetTitle(), other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetRefund(), other.isSetRefund());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRefund()) {
      lastComparison = TBaseHelper.compareTo(this.refund, other.refund);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPaySeq(), other.isSetPaySeq());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaySeq()) {
      lastComparison = TBaseHelper.compareTo(this.paySeq, other.paySeq);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCurrency(), other.isSetCurrency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrency()) {
      lastComparison = TBaseHelper.compareTo(this.currency, other.currency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCurrencySign(), other.isSetCurrencySign());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrencySign()) {
      lastComparison = TBaseHelper.compareTo(this.currencySign, other.currencySign);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDisplayPrice(), other.isSetDisplayPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayPrice()) {
      lastComparison = TBaseHelper.compareTo(this.displayPrice, other.displayPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPayload(), other.isSetPayload());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayload()) {
      lastComparison = this.payload.compareTo(other.payload);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetChannelId(), other.isSetChannelId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelId()) {
      lastComparison = TBaseHelper.compareTo(this.channelId, other.channelId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // PAY_DATE
          if (field.type == TType.I64) {
            this.payDate = iprot.readI64();
            setPayDateIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // COIN_BALANCE
          if (field.type == TType.I32) {
            this.coinBalance = iprot.readI32();
            setCoinBalanceIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // COIN
          if (field.type == TType.I32) {
            this.coin = iprot.readI32();
            setCoinIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // PRICE
          if (field.type == TType.STRING) {
            this.price = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // TITLE
          if (field.type == TType.STRING) {
            this.title = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // REFUND
          if (field.type == TType.BOOL) {
            this.refund = iprot.readBool();
            setRefundIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // PAY_SEQ
          if (field.type == TType.STRING) {
            this.paySeq = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // CURRENCY
          if (field.type == TType.STRING) {
            this.currency = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // CURRENCY_SIGN
          if (field.type == TType.STRING) {
            this.currencySign = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // DISPLAY_PRICE
          if (field.type == TType.STRING) {
            this.displayPrice = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // PAYLOAD
          if (field.type == TType.STRUCT) {
            this.payload = new CoinPayLoad();
            this.payload.read(iprot);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // CHANNEL_ID
          if (field.type == TType.STRING) {
            this.channelId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(PAY_DATE_FIELD_DESC);
    oprot.writeI64(this.payDate);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(COIN_BALANCE_FIELD_DESC);
    oprot.writeI32(this.coinBalance);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(COIN_FIELD_DESC);
    oprot.writeI32(this.coin);
    oprot.writeFieldEnd();
    if (this.price != null) {
      oprot.writeFieldBegin(PRICE_FIELD_DESC);
      oprot.writeString(this.price);
      oprot.writeFieldEnd();
    }
    if (this.title != null) {
      oprot.writeFieldBegin(TITLE_FIELD_DESC);
      oprot.writeString(this.title);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(REFUND_FIELD_DESC);
    oprot.writeBool(this.refund);
    oprot.writeFieldEnd();
    if (this.paySeq != null) {
      oprot.writeFieldBegin(PAY_SEQ_FIELD_DESC);
      oprot.writeString(this.paySeq);
      oprot.writeFieldEnd();
    }
    if (this.currency != null) {
      oprot.writeFieldBegin(CURRENCY_FIELD_DESC);
      oprot.writeString(this.currency);
      oprot.writeFieldEnd();
    }
    if (this.currencySign != null) {
      oprot.writeFieldBegin(CURRENCY_SIGN_FIELD_DESC);
      oprot.writeString(this.currencySign);
      oprot.writeFieldEnd();
    }
    if (this.displayPrice != null) {
      oprot.writeFieldBegin(DISPLAY_PRICE_FIELD_DESC);
      oprot.writeString(this.displayPrice);
      oprot.writeFieldEnd();
    }
    if (this.payload != null) {
      oprot.writeFieldBegin(PAYLOAD_FIELD_DESC);
      this.payload.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.channelId != null) {
      oprot.writeFieldBegin(CHANNEL_ID_FIELD_DESC);
      oprot.writeString(this.channelId);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("CoinHistory(");
    boolean first = true;

    sb.append("payDate:");
    sb.append(this.payDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("coinBalance:");
    sb.append(this.coinBalance);
    first = false;
    if (!first) sb.append(", ");
    sb.append("coin:");
    sb.append(this.coin);
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    if (this.price == null) {
      sb.append("null");
    } else {
      sb.append(this.price);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("refund:");
    sb.append(this.refund);
    first = false;
    if (!first) sb.append(", ");
    sb.append("paySeq:");
    if (this.paySeq == null) {
      sb.append("null");
    } else {
      sb.append(this.paySeq);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currency:");
    if (this.currency == null) {
      sb.append("null");
    } else {
      sb.append(this.currency);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currencySign:");
    if (this.currencySign == null) {
      sb.append("null");
    } else {
      sb.append(this.currencySign);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayPrice:");
    if (this.displayPrice == null) {
      sb.append("null");
    } else {
      sb.append(this.displayPrice);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("payload:");
    if (this.payload == null) {
      sb.append("null");
    } else {
      sb.append(this.payload);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelId:");
    if (this.channelId == null) {
      sb.append("null");
    } else {
      sb.append(this.channelId);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

