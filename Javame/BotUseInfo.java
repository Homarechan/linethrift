/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class BotUseInfo implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("BotUseInfo");

  private static final TField BOT_USE_AGREEMENT_ACCEPTED_FIELD_DESC = new TField("botUseAgreementAccepted", TType.BOOL, (short)1);
  private static final TField BOT_IN_FRIENDS_FIELD_DESC = new TField("botInFriends", TType.BOOL, (short)2);
  private static final TField PRIMARY_APPLICATION_FIELD_DESC = new TField("primaryApplication", TType.STRING, (short)3);
  private static final TField LOCALE_FIELD_DESC = new TField("locale", TType.STRING, (short)4);

  private boolean botUseAgreementAccepted;
  private boolean botInFriends;
  private String primaryApplication;
  private String locale;

  // isset id assignments
  private static final int __BOTUSEAGREEMENTACCEPTED_ISSET_ID = 0;
  private static final int __BOTINFRIENDS_ISSET_ID = 1;
  private boolean[] __isset_vector = new boolean[2];

  public BotUseInfo() {
  }

  public BotUseInfo(
    boolean botUseAgreementAccepted,
    boolean botInFriends,
    String primaryApplication,
    String locale)
  {
    this();
    this.botUseAgreementAccepted = botUseAgreementAccepted;
    setBotUseAgreementAcceptedIsSet(true);
    this.botInFriends = botInFriends;
    setBotInFriendsIsSet(true);
    this.primaryApplication = primaryApplication;
    this.locale = locale;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BotUseInfo(BotUseInfo other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    this.botUseAgreementAccepted = other.botUseAgreementAccepted;
    this.botInFriends = other.botInFriends;
    if (other.isSetPrimaryApplication()) {
      this.primaryApplication = other.primaryApplication;
    }
    if (other.isSetLocale()) {
      this.locale = other.locale;
    }
  }

  public BotUseInfo deepCopy() {
    return new BotUseInfo(this);
  }

  public void clear() {
    setBotUseAgreementAcceptedIsSet(false);
    this.botUseAgreementAccepted = false;
    setBotInFriendsIsSet(false);
    this.botInFriends = false;
    this.primaryApplication = null;
    this.locale = null;
  }

  public boolean isBotUseAgreementAccepted() {
    return this.botUseAgreementAccepted;
  }

  public void setBotUseAgreementAccepted(boolean botUseAgreementAccepted) {
    this.botUseAgreementAccepted = botUseAgreementAccepted;
    setBotUseAgreementAcceptedIsSet(true);
  }

  public void unsetBotUseAgreementAccepted() {
    __isset_vector[__BOTUSEAGREEMENTACCEPTED_ISSET_ID] = false;
  }

  /** Returns true if field botUseAgreementAccepted is set (has been assigned a value) and false otherwise */
  public boolean isSetBotUseAgreementAccepted() {
    return __isset_vector[__BOTUSEAGREEMENTACCEPTED_ISSET_ID];
  }

  public void setBotUseAgreementAcceptedIsSet(boolean value) {
    __isset_vector[__BOTUSEAGREEMENTACCEPTED_ISSET_ID] = value;
  }

  public boolean isBotInFriends() {
    return this.botInFriends;
  }

  public void setBotInFriends(boolean botInFriends) {
    this.botInFriends = botInFriends;
    setBotInFriendsIsSet(true);
  }

  public void unsetBotInFriends() {
    __isset_vector[__BOTINFRIENDS_ISSET_ID] = false;
  }

  /** Returns true if field botInFriends is set (has been assigned a value) and false otherwise */
  public boolean isSetBotInFriends() {
    return __isset_vector[__BOTINFRIENDS_ISSET_ID];
  }

  public void setBotInFriendsIsSet(boolean value) {
    __isset_vector[__BOTINFRIENDS_ISSET_ID] = value;
  }

  public String getPrimaryApplication() {
    return this.primaryApplication;
  }

  public void setPrimaryApplication(String primaryApplication) {
    this.primaryApplication = primaryApplication;
  }

  public void unsetPrimaryApplication() {
    this.primaryApplication = null;
  }

  /** Returns true if field primaryApplication is set (has been assigned a value) and false otherwise */
  public boolean isSetPrimaryApplication() {
    return this.primaryApplication != null;
  }

  public void setPrimaryApplicationIsSet(boolean value) {
    if (!value) {
      this.primaryApplication = null;
    }
  }

  public String getLocale() {
    return this.locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public void unsetLocale() {
    this.locale = null;
  }

  /** Returns true if field locale is set (has been assigned a value) and false otherwise */
  public boolean isSetLocale() {
    return this.locale != null;
  }

  public void setLocaleIsSet(boolean value) {
    if (!value) {
      this.locale = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BotUseInfo)
      return this.equals((BotUseInfo)that);
    return false;
  }

  public boolean equals(BotUseInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_botUseAgreementAccepted = true;
    boolean that_present_botUseAgreementAccepted = true;
    if (this_present_botUseAgreementAccepted || that_present_botUseAgreementAccepted) {
      if (!(this_present_botUseAgreementAccepted && that_present_botUseAgreementAccepted))
        return false;
      if (this.botUseAgreementAccepted != that.botUseAgreementAccepted)
        return false;
    }

    boolean this_present_botInFriends = true;
    boolean that_present_botInFriends = true;
    if (this_present_botInFriends || that_present_botInFriends) {
      if (!(this_present_botInFriends && that_present_botInFriends))
        return false;
      if (this.botInFriends != that.botInFriends)
        return false;
    }

    boolean this_present_primaryApplication = true && this.isSetPrimaryApplication();
    boolean that_present_primaryApplication = true && that.isSetPrimaryApplication();
    if (this_present_primaryApplication || that_present_primaryApplication) {
      if (!(this_present_primaryApplication && that_present_primaryApplication))
        return false;
      if (!this.primaryApplication.equals(that.primaryApplication))
        return false;
    }

    boolean this_present_locale = true && this.isSetLocale();
    boolean that_present_locale = true && that.isSetLocale();
    if (this_present_locale || that_present_locale) {
      if (!(this_present_locale && that_present_locale))
        return false;
      if (!this.locale.equals(that.locale))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    BotUseInfo other = (BotUseInfo)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetBotUseAgreementAccepted(), other.isSetBotUseAgreementAccepted());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBotUseAgreementAccepted()) {
      lastComparison = TBaseHelper.compareTo(this.botUseAgreementAccepted, other.botUseAgreementAccepted);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetBotInFriends(), other.isSetBotInFriends());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBotInFriends()) {
      lastComparison = TBaseHelper.compareTo(this.botInFriends, other.botInFriends);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrimaryApplication(), other.isSetPrimaryApplication());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrimaryApplication()) {
      lastComparison = TBaseHelper.compareTo(this.primaryApplication, other.primaryApplication);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetLocale(), other.isSetLocale());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocale()) {
      lastComparison = TBaseHelper.compareTo(this.locale, other.locale);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // BOT_USE_AGREEMENT_ACCEPTED
          if (field.type == TType.BOOL) {
            this.botUseAgreementAccepted = iprot.readBool();
            setBotUseAgreementAcceptedIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // BOT_IN_FRIENDS
          if (field.type == TType.BOOL) {
            this.botInFriends = iprot.readBool();
            setBotInFriendsIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // PRIMARY_APPLICATION
          if (field.type == TType.STRING) {
            this.primaryApplication = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // LOCALE
          if (field.type == TType.STRING) {
            this.locale = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(BOT_USE_AGREEMENT_ACCEPTED_FIELD_DESC);
    oprot.writeBool(this.botUseAgreementAccepted);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(BOT_IN_FRIENDS_FIELD_DESC);
    oprot.writeBool(this.botInFriends);
    oprot.writeFieldEnd();
    if (this.primaryApplication != null) {
      oprot.writeFieldBegin(PRIMARY_APPLICATION_FIELD_DESC);
      oprot.writeString(this.primaryApplication);
      oprot.writeFieldEnd();
    }
    if (this.locale != null) {
      oprot.writeFieldBegin(LOCALE_FIELD_DESC);
      oprot.writeString(this.locale);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("BotUseInfo(");
    boolean first = true;

    sb.append("botUseAgreementAccepted:");
    sb.append(this.botUseAgreementAccepted);
    first = false;
    if (!first) sb.append(", ");
    sb.append("botInFriends:");
    sb.append(this.botInFriends);
    first = false;
    if (!first) sb.append(", ");
    sb.append("primaryApplication:");
    if (this.primaryApplication == null) {
      sb.append("null");
    } else {
      sb.append(this.primaryApplication);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("locale:");
    if (this.locale == null) {
      sb.append("null");
    } else {
      sb.append(this.locale);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

