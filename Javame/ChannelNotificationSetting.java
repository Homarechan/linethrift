/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class ChannelNotificationSetting implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("ChannelNotificationSetting");

  private static final TField CHANNEL_ID_FIELD_DESC = new TField("channelId", TType.STRING, (short)1);
  private static final TField NAME_FIELD_DESC = new TField("name", TType.STRING, (short)2);
  private static final TField NOTIFICATION_RECEIVABLE_FIELD_DESC = new TField("notificationReceivable", TType.BOOL, (short)3);
  private static final TField MESSAGE_RECEIVABLE_FIELD_DESC = new TField("messageReceivable", TType.BOOL, (short)4);
  private static final TField SHOW_DEFAULT_FIELD_DESC = new TField("showDefault", TType.BOOL, (short)5);

  private String channelId;
  private String name;
  private boolean notificationReceivable;
  private boolean messageReceivable;
  private boolean showDefault;

  // isset id assignments
  private static final int __NOTIFICATIONRECEIVABLE_ISSET_ID = 0;
  private static final int __MESSAGERECEIVABLE_ISSET_ID = 1;
  private static final int __SHOWDEFAULT_ISSET_ID = 2;
  private boolean[] __isset_vector = new boolean[3];

  public ChannelNotificationSetting() {
  }

  public ChannelNotificationSetting(
    String channelId,
    String name,
    boolean notificationReceivable,
    boolean messageReceivable,
    boolean showDefault)
  {
    this();
    this.channelId = channelId;
    this.name = name;
    this.notificationReceivable = notificationReceivable;
    setNotificationReceivableIsSet(true);
    this.messageReceivable = messageReceivable;
    setMessageReceivableIsSet(true);
    this.showDefault = showDefault;
    setShowDefaultIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ChannelNotificationSetting(ChannelNotificationSetting other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    if (other.isSetChannelId()) {
      this.channelId = other.channelId;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.notificationReceivable = other.notificationReceivable;
    this.messageReceivable = other.messageReceivable;
    this.showDefault = other.showDefault;
  }

  public ChannelNotificationSetting deepCopy() {
    return new ChannelNotificationSetting(this);
  }

  public void clear() {
    this.channelId = null;
    this.name = null;
    setNotificationReceivableIsSet(false);
    this.notificationReceivable = false;
    setMessageReceivableIsSet(false);
    this.messageReceivable = false;
    setShowDefaultIsSet(false);
    this.showDefault = false;
  }

  public String getChannelId() {
    return this.channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }

  public void unsetChannelId() {
    this.channelId = null;
  }

  /** Returns true if field channelId is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelId() {
    return this.channelId != null;
  }

  public void setChannelIdIsSet(boolean value) {
    if (!value) {
      this.channelId = null;
    }
  }

  public String getName() {
    return this.name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public boolean isNotificationReceivable() {
    return this.notificationReceivable;
  }

  public void setNotificationReceivable(boolean notificationReceivable) {
    this.notificationReceivable = notificationReceivable;
    setNotificationReceivableIsSet(true);
  }

  public void unsetNotificationReceivable() {
    __isset_vector[__NOTIFICATIONRECEIVABLE_ISSET_ID] = false;
  }

  /** Returns true if field notificationReceivable is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationReceivable() {
    return __isset_vector[__NOTIFICATIONRECEIVABLE_ISSET_ID];
  }

  public void setNotificationReceivableIsSet(boolean value) {
    __isset_vector[__NOTIFICATIONRECEIVABLE_ISSET_ID] = value;
  }

  public boolean isMessageReceivable() {
    return this.messageReceivable;
  }

  public void setMessageReceivable(boolean messageReceivable) {
    this.messageReceivable = messageReceivable;
    setMessageReceivableIsSet(true);
  }

  public void unsetMessageReceivable() {
    __isset_vector[__MESSAGERECEIVABLE_ISSET_ID] = false;
  }

  /** Returns true if field messageReceivable is set (has been assigned a value) and false otherwise */
  public boolean isSetMessageReceivable() {
    return __isset_vector[__MESSAGERECEIVABLE_ISSET_ID];
  }

  public void setMessageReceivableIsSet(boolean value) {
    __isset_vector[__MESSAGERECEIVABLE_ISSET_ID] = value;
  }

  public boolean isShowDefault() {
    return this.showDefault;
  }

  public void setShowDefault(boolean showDefault) {
    this.showDefault = showDefault;
    setShowDefaultIsSet(true);
  }

  public void unsetShowDefault() {
    __isset_vector[__SHOWDEFAULT_ISSET_ID] = false;
  }

  /** Returns true if field showDefault is set (has been assigned a value) and false otherwise */
  public boolean isSetShowDefault() {
    return __isset_vector[__SHOWDEFAULT_ISSET_ID];
  }

  public void setShowDefaultIsSet(boolean value) {
    __isset_vector[__SHOWDEFAULT_ISSET_ID] = value;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ChannelNotificationSetting)
      return this.equals((ChannelNotificationSetting)that);
    return false;
  }

  public boolean equals(ChannelNotificationSetting that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_channelId = true && this.isSetChannelId();
    boolean that_present_channelId = true && that.isSetChannelId();
    if (this_present_channelId || that_present_channelId) {
      if (!(this_present_channelId && that_present_channelId))
        return false;
      if (!this.channelId.equals(that.channelId))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_notificationReceivable = true;
    boolean that_present_notificationReceivable = true;
    if (this_present_notificationReceivable || that_present_notificationReceivable) {
      if (!(this_present_notificationReceivable && that_present_notificationReceivable))
        return false;
      if (this.notificationReceivable != that.notificationReceivable)
        return false;
    }

    boolean this_present_messageReceivable = true;
    boolean that_present_messageReceivable = true;
    if (this_present_messageReceivable || that_present_messageReceivable) {
      if (!(this_present_messageReceivable && that_present_messageReceivable))
        return false;
      if (this.messageReceivable != that.messageReceivable)
        return false;
    }

    boolean this_present_showDefault = true;
    boolean that_present_showDefault = true;
    if (this_present_showDefault || that_present_showDefault) {
      if (!(this_present_showDefault && that_present_showDefault))
        return false;
      if (this.showDefault != that.showDefault)
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    ChannelNotificationSetting other = (ChannelNotificationSetting)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetChannelId(), other.isSetChannelId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelId()) {
      lastComparison = TBaseHelper.compareTo(this.channelId, other.channelId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetName(), other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNotificationReceivable(), other.isSetNotificationReceivable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationReceivable()) {
      lastComparison = TBaseHelper.compareTo(this.notificationReceivable, other.notificationReceivable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMessageReceivable(), other.isSetMessageReceivable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessageReceivable()) {
      lastComparison = TBaseHelper.compareTo(this.messageReceivable, other.messageReceivable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetShowDefault(), other.isSetShowDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShowDefault()) {
      lastComparison = TBaseHelper.compareTo(this.showDefault, other.showDefault);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // CHANNEL_ID
          if (field.type == TType.STRING) {
            this.channelId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // NAME
          if (field.type == TType.STRING) {
            this.name = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // NOTIFICATION_RECEIVABLE
          if (field.type == TType.BOOL) {
            this.notificationReceivable = iprot.readBool();
            setNotificationReceivableIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // MESSAGE_RECEIVABLE
          if (field.type == TType.BOOL) {
            this.messageReceivable = iprot.readBool();
            setMessageReceivableIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // SHOW_DEFAULT
          if (field.type == TType.BOOL) {
            this.showDefault = iprot.readBool();
            setShowDefaultIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.channelId != null) {
      oprot.writeFieldBegin(CHANNEL_ID_FIELD_DESC);
      oprot.writeString(this.channelId);
      oprot.writeFieldEnd();
    }
    if (this.name != null) {
      oprot.writeFieldBegin(NAME_FIELD_DESC);
      oprot.writeString(this.name);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(NOTIFICATION_RECEIVABLE_FIELD_DESC);
    oprot.writeBool(this.notificationReceivable);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(MESSAGE_RECEIVABLE_FIELD_DESC);
    oprot.writeBool(this.messageReceivable);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(SHOW_DEFAULT_FIELD_DESC);
    oprot.writeBool(this.showDefault);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("ChannelNotificationSetting(");
    boolean first = true;

    sb.append("channelId:");
    if (this.channelId == null) {
      sb.append("null");
    } else {
      sb.append(this.channelId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationReceivable:");
    sb.append(this.notificationReceivable);
    first = false;
    if (!first) sb.append(", ");
    sb.append("messageReceivable:");
    sb.append(this.messageReceivable);
    first = false;
    if (!first) sb.append(", ");
    sb.append("showDefault:");
    sb.append(this.showDefault);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

