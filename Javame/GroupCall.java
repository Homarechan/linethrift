/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class GroupCall implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("GroupCall");

  private static final TField ONLINE_FIELD_DESC = new TField("online", TType.BOOL, (short)1);
  private static final TField CHAT_MID_FIELD_DESC = new TField("chatMid", TType.STRING, (short)2);
  private static final TField HOST_MIDS_FIELD_DESC = new TField("hostMids", TType.STRING, (short)3);
  private static final TField MEMBER_MIDS_FIELD_DESC = new TField("memberMids", TType.LIST, (short)4);
  private static final TField STARTED_FIELD_DESC = new TField("started", TType.I64, (short)5);
  private static final TField MEDIA_TYPE_FIELD_DESC = new TField("mediaType", TType.I32, (short)6);

  private boolean online;
  private String chatMid;
  private String hostMids;
  private Vector memberMids;
  private long started;
  private GroupCallMediaType mediaType;

  // isset id assignments
  private static final int __ONLINE_ISSET_ID = 0;
  private static final int __STARTED_ISSET_ID = 1;
  private boolean[] __isset_vector = new boolean[2];

  public GroupCall() {
  }

  public GroupCall(
    boolean online,
    String chatMid,
    String hostMids,
    Vector memberMids,
    long started,
    GroupCallMediaType mediaType)
  {
    this();
    this.online = online;
    setOnlineIsSet(true);
    this.chatMid = chatMid;
    this.hostMids = hostMids;
    this.memberMids = memberMids;
    this.started = started;
    setStartedIsSet(true);
    this.mediaType = mediaType;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GroupCall(GroupCall other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    this.online = other.online;
    if (other.isSetChatMid()) {
      this.chatMid = other.chatMid;
    }
    if (other.isSetHostMids()) {
      this.hostMids = other.hostMids;
    }
    if (other.isSetMemberMids()) {
      Vector __this__memberMids = new Vector();
      for (Enumeration other_enum = other.memberMids.elements(); other_enum.hasMoreElements(); ) {
        String other_element = (String)other_enum.nextElement();
        __this__memberMids.addElement(other_element);
      }
      this.memberMids = __this__memberMids;
    }
    this.started = other.started;
    if (other.isSetMediaType()) {
      this.mediaType = other.mediaType;
    }
  }

  public GroupCall deepCopy() {
    return new GroupCall(this);
  }

  public void clear() {
    setOnlineIsSet(false);
    this.online = false;
    this.chatMid = null;
    this.hostMids = null;
    this.memberMids = null;
    setStartedIsSet(false);
    this.started = 0;
    this.mediaType = null;
  }

  public boolean isOnline() {
    return this.online;
  }

  public void setOnline(boolean online) {
    this.online = online;
    setOnlineIsSet(true);
  }

  public void unsetOnline() {
    __isset_vector[__ONLINE_ISSET_ID] = false;
  }

  /** Returns true if field online is set (has been assigned a value) and false otherwise */
  public boolean isSetOnline() {
    return __isset_vector[__ONLINE_ISSET_ID];
  }

  public void setOnlineIsSet(boolean value) {
    __isset_vector[__ONLINE_ISSET_ID] = value;
  }

  public String getChatMid() {
    return this.chatMid;
  }

  public void setChatMid(String chatMid) {
    this.chatMid = chatMid;
  }

  public void unsetChatMid() {
    this.chatMid = null;
  }

  /** Returns true if field chatMid is set (has been assigned a value) and false otherwise */
  public boolean isSetChatMid() {
    return this.chatMid != null;
  }

  public void setChatMidIsSet(boolean value) {
    if (!value) {
      this.chatMid = null;
    }
  }

  public String getHostMids() {
    return this.hostMids;
  }

  public void setHostMids(String hostMids) {
    this.hostMids = hostMids;
  }

  public void unsetHostMids() {
    this.hostMids = null;
  }

  /** Returns true if field hostMids is set (has been assigned a value) and false otherwise */
  public boolean isSetHostMids() {
    return this.hostMids != null;
  }

  public void setHostMidsIsSet(boolean value) {
    if (!value) {
      this.hostMids = null;
    }
  }

  public int getMemberMidsSize() {
    return (this.memberMids == null) ? 0 : this.memberMids.size();
  }

  public Enumeration getMemberMidsEnumeration() {
    return (this.memberMids == null) ? null : this.memberMids.elements();
  }

  public void addToMemberMids(String elem) {
    if (this.memberMids == null) {
      this.memberMids = new Vector();
    }
    this.memberMids.addElement(elem);
  }

  public Vector getMemberMids() {
    return this.memberMids;
  }

  public void setMemberMids(Vector memberMids) {
    this.memberMids = memberMids;
  }

  public void unsetMemberMids() {
    this.memberMids = null;
  }

  /** Returns true if field memberMids is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberMids() {
    return this.memberMids != null;
  }

  public void setMemberMidsIsSet(boolean value) {
    if (!value) {
      this.memberMids = null;
    }
  }

  public long getStarted() {
    return this.started;
  }

  public void setStarted(long started) {
    this.started = started;
    setStartedIsSet(true);
  }

  public void unsetStarted() {
    __isset_vector[__STARTED_ISSET_ID] = false;
  }

  /** Returns true if field started is set (has been assigned a value) and false otherwise */
  public boolean isSetStarted() {
    return __isset_vector[__STARTED_ISSET_ID];
  }

  public void setStartedIsSet(boolean value) {
    __isset_vector[__STARTED_ISSET_ID] = value;
  }

  /**
   * 
   * @see GroupCallMediaType
   */
  public GroupCallMediaType getMediaType() {
    return this.mediaType;
  }

  /**
   * 
   * @see GroupCallMediaType
   */
  public void setMediaType(GroupCallMediaType mediaType) {
    this.mediaType = mediaType;
  }

  public void unsetMediaType() {
    this.mediaType = null;
  }

  /** Returns true if field mediaType is set (has been assigned a value) and false otherwise */
  public boolean isSetMediaType() {
    return this.mediaType != null;
  }

  public void setMediaTypeIsSet(boolean value) {
    if (!value) {
      this.mediaType = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof GroupCall)
      return this.equals((GroupCall)that);
    return false;
  }

  public boolean equals(GroupCall that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_online = true;
    boolean that_present_online = true;
    if (this_present_online || that_present_online) {
      if (!(this_present_online && that_present_online))
        return false;
      if (this.online != that.online)
        return false;
    }

    boolean this_present_chatMid = true && this.isSetChatMid();
    boolean that_present_chatMid = true && that.isSetChatMid();
    if (this_present_chatMid || that_present_chatMid) {
      if (!(this_present_chatMid && that_present_chatMid))
        return false;
      if (!this.chatMid.equals(that.chatMid))
        return false;
    }

    boolean this_present_hostMids = true && this.isSetHostMids();
    boolean that_present_hostMids = true && that.isSetHostMids();
    if (this_present_hostMids || that_present_hostMids) {
      if (!(this_present_hostMids && that_present_hostMids))
        return false;
      if (!this.hostMids.equals(that.hostMids))
        return false;
    }

    boolean this_present_memberMids = true && this.isSetMemberMids();
    boolean that_present_memberMids = true && that.isSetMemberMids();
    if (this_present_memberMids || that_present_memberMids) {
      if (!(this_present_memberMids && that_present_memberMids))
        return false;
      if (!this.memberMids.equals(that.memberMids))
        return false;
    }

    boolean this_present_started = true;
    boolean that_present_started = true;
    if (this_present_started || that_present_started) {
      if (!(this_present_started && that_present_started))
        return false;
      if (this.started != that.started)
        return false;
    }

    boolean this_present_mediaType = true && this.isSetMediaType();
    boolean that_present_mediaType = true && that.isSetMediaType();
    if (this_present_mediaType || that_present_mediaType) {
      if (!(this_present_mediaType && that_present_mediaType))
        return false;
      if (!this.mediaType.equals(that.mediaType))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    GroupCall other = (GroupCall)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetOnline(), other.isSetOnline());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOnline()) {
      lastComparison = TBaseHelper.compareTo(this.online, other.online);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetChatMid(), other.isSetChatMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChatMid()) {
      lastComparison = TBaseHelper.compareTo(this.chatMid, other.chatMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetHostMids(), other.isSetHostMids());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHostMids()) {
      lastComparison = TBaseHelper.compareTo(this.hostMids, other.hostMids);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMemberMids(), other.isSetMemberMids());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberMids()) {
      lastComparison = TBaseHelper.compareTo(this.memberMids, other.memberMids);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetStarted(), other.isSetStarted());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarted()) {
      lastComparison = TBaseHelper.compareTo(this.started, other.started);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMediaType(), other.isSetMediaType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMediaType()) {
      lastComparison = TBaseHelper.compareTo(this.mediaType, other.mediaType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // ONLINE
          if (field.type == TType.BOOL) {
            this.online = iprot.readBool();
            setOnlineIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // CHAT_MID
          if (field.type == TType.STRING) {
            this.chatMid = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // HOST_MIDS
          if (field.type == TType.STRING) {
            this.hostMids = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // MEMBER_MIDS
          if (field.type == TType.LIST) {
            {
              TList _list541 = iprot.readListBegin();
              this.memberMids = new Vector(_list541.size);
              for (int _i542 = 0; _i542 < _list541.size; ++_i542)
              {
                String _elem543;
                _elem543 = iprot.readString();
                this.memberMids.addElement(_elem543);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // STARTED
          if (field.type == TType.I64) {
            this.started = iprot.readI64();
            setStartedIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // MEDIA_TYPE
          if (field.type == TType.I32) {
            this.mediaType = GroupCallMediaType.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    oprot.writeFieldBegin(ONLINE_FIELD_DESC);
    oprot.writeBool(this.online);
    oprot.writeFieldEnd();
    if (this.chatMid != null) {
      oprot.writeFieldBegin(CHAT_MID_FIELD_DESC);
      oprot.writeString(this.chatMid);
      oprot.writeFieldEnd();
    }
    if (this.hostMids != null) {
      oprot.writeFieldBegin(HOST_MIDS_FIELD_DESC);
      oprot.writeString(this.hostMids);
      oprot.writeFieldEnd();
    }
    if (this.memberMids != null) {
      oprot.writeFieldBegin(MEMBER_MIDS_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.memberMids.size()));
        for (Enumeration _iter544_enum = this.memberMids.elements(); _iter544_enum.hasMoreElements(); )         {
          String _iter544 = (String)_iter544_enum.nextElement();
          oprot.writeString(_iter544);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(STARTED_FIELD_DESC);
    oprot.writeI64(this.started);
    oprot.writeFieldEnd();
    if (this.mediaType != null) {
      oprot.writeFieldBegin(MEDIA_TYPE_FIELD_DESC);
      oprot.writeI32(this.mediaType.getValue());
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("GroupCall(");
    boolean first = true;

    sb.append("online:");
    sb.append(this.online);
    first = false;
    if (!first) sb.append(", ");
    sb.append("chatMid:");
    if (this.chatMid == null) {
      sb.append("null");
    } else {
      sb.append(this.chatMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("hostMids:");
    if (this.hostMids == null) {
      sb.append("null");
    } else {
      sb.append(this.hostMids);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberMids:");
    if (this.memberMids == null) {
      sb.append("null");
    } else {
      sb.append(this.memberMids);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("started:");
    sb.append(this.started);
    first = false;
    if (!first) sb.append(", ");
    sb.append("mediaType:");
    if (this.mediaType == null) {
      sb.append("null");
    } else {
      sb.append(this.mediaType);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

