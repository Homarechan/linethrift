/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class Product implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("Product");

  private static final TField PRODUCT_ID_FIELD_DESC = new TField("productId", TType.STRING, (short)1);
  private static final TField PACKAGE_ID_FIELD_DESC = new TField("packageId", TType.I64, (short)2);
  private static final TField VERSION_FIELD_DESC = new TField("version", TType.I32, (short)3);
  private static final TField AUTHOR_NAME_FIELD_DESC = new TField("authorName", TType.STRING, (short)4);
  private static final TField ON_SALE_FIELD_DESC = new TField("onSale", TType.BOOL, (short)5);
  private static final TField VALID_DAYS_FIELD_DESC = new TField("validDays", TType.I32, (short)6);
  private static final TField SALE_TYPE_FIELD_DESC = new TField("saleType", TType.I32, (short)7);
  private static final TField COPYRIGHT_FIELD_DESC = new TField("copyright", TType.STRING, (short)8);
  private static final TField TITLE_FIELD_DESC = new TField("title", TType.STRING, (short)9);
  private static final TField DESCRIPTION_TEXT_FIELD_DESC = new TField("descriptionText", TType.STRING, (short)10);
  private static final TField SHOP_ORDER_ID_FIELD_DESC = new TField("shopOrderId", TType.I64, (short)11);
  private static final TField FROM_MID_FIELD_DESC = new TField("fromMid", TType.STRING, (short)12);
  private static final TField TO_MID_FIELD_DESC = new TField("toMid", TType.STRING, (short)13);
  private static final TField VALID_UNTIL_FIELD_DESC = new TField("validUntil", TType.I64, (short)14);
  private static final TField PRICE_TIER_FIELD_DESC = new TField("priceTier", TType.I32, (short)15);
  private static final TField PRICE_FIELD_DESC = new TField("price", TType.STRING, (short)16);
  private static final TField CURRENCY_FIELD_DESC = new TField("currency", TType.STRING, (short)17);
  private static final TField CURRENCY_SYMBOL_FIELD_DESC = new TField("currencySymbol", TType.STRING, (short)18);
  private static final TField PAYMENT_TYPE_FIELD_DESC = new TField("paymentType", TType.I32, (short)19);
  private static final TField CREATE_DATE_FIELD_DESC = new TField("createDate", TType.I64, (short)20);
  private static final TField OWN_FLAG_FIELD_DESC = new TField("ownFlag", TType.BOOL, (short)21);
  private static final TField EVENT_TYPE_FIELD_DESC = new TField("eventType", TType.I32, (short)22);
  private static final TField URL_SCHEMA_FIELD_DESC = new TField("urlSchema", TType.STRING, (short)23);
  private static final TField DOWNLOAD_URL_FIELD_DESC = new TField("downloadUrl", TType.STRING, (short)24);
  private static final TField BUDDY_MID_FIELD_DESC = new TField("buddyMid", TType.STRING, (short)25);
  private static final TField PUBLISH_SINCE_FIELD_DESC = new TField("publishSince", TType.I64, (short)26);
  private static final TField NEW_FLAG_FIELD_DESC = new TField("newFlag", TType.BOOL, (short)27);
  private static final TField MISSION_FLAG_FIELD_DESC = new TField("missionFlag", TType.BOOL, (short)28);
  private static final TField CATEGORIES_FIELD_DESC = new TField("categories", TType.LIST, (short)29);
  private static final TField MISSION_BUTTON_TEXT_FIELD_DESC = new TField("missionButtonText", TType.STRING, (short)30);
  private static final TField MISSION_SHORT_DESCRIPTION_FIELD_DESC = new TField("missionShortDescription", TType.STRING, (short)31);
  private static final TField AUTHOR_ID_FIELD_DESC = new TField("authorId", TType.STRING, (short)32);
  private static final TField GRANTED_BY_DEFAULT_FIELD_DESC = new TField("grantedByDefault", TType.BOOL, (short)41);
  private static final TField DISPLAY_ORDER_FIELD_DESC = new TField("displayOrder", TType.I32, (short)42);
  private static final TField AVAILABLE_FOR_PRESENT_FIELD_DESC = new TField("availableForPresent", TType.BOOL, (short)43);
  private static final TField AVAILABLE_FOR_MYSELF_FIELD_DESC = new TField("availableForMyself", TType.BOOL, (short)44);
  private static final TField HAS_ANIMATION_FIELD_DESC = new TField("hasAnimation", TType.BOOL, (short)51);
  private static final TField HAS_SOUND_FIELD_DESC = new TField("hasSound", TType.BOOL, (short)52);
  private static final TField RECOMMENDATIONS_ENABLED_FIELD_DESC = new TField("recommendationsEnabled", TType.BOOL, (short)53);
  private static final TField STICKER_RESOURCE_TYPE_FIELD_DESC = new TField("stickerResourceType", TType.I32, (short)54);

  private String productId;
  private long packageId;
  private int version;
  private String authorName;
  private boolean onSale;
  private int validDays;
  private int saleType;
  private String copyright;
  private String title;
  private String descriptionText;
  private long shopOrderId;
  private String fromMid;
  private String toMid;
  private long validUntil;
  private int priceTier;
  private String price;
  private String currency;
  private String currencySymbol;
  private PaymentType paymentType;
  private long createDate;
  private boolean ownFlag;
  private ProductEventType eventType;
  private String urlSchema;
  private String downloadUrl;
  private String buddyMid;
  private long publishSince;
  private boolean newFlag;
  private boolean missionFlag;
  private Vector categories;
  private String missionButtonText;
  private String missionShortDescription;
  private String authorId;
  private boolean grantedByDefault;
  private int displayOrder;
  private boolean availableForPresent;
  private boolean availableForMyself;
  private boolean hasAnimation;
  private boolean hasSound;
  private boolean recommendationsEnabled;
  private StickerResourceType stickerResourceType;

  // isset id assignments
  private static final int __PACKAGEID_ISSET_ID = 0;
  private static final int __VERSION_ISSET_ID = 1;
  private static final int __ONSALE_ISSET_ID = 2;
  private static final int __VALIDDAYS_ISSET_ID = 3;
  private static final int __SALETYPE_ISSET_ID = 4;
  private static final int __SHOPORDERID_ISSET_ID = 5;
  private static final int __VALIDUNTIL_ISSET_ID = 6;
  private static final int __PRICETIER_ISSET_ID = 7;
  private static final int __CREATEDATE_ISSET_ID = 8;
  private static final int __OWNFLAG_ISSET_ID = 9;
  private static final int __PUBLISHSINCE_ISSET_ID = 10;
  private static final int __NEWFLAG_ISSET_ID = 11;
  private static final int __MISSIONFLAG_ISSET_ID = 12;
  private static final int __GRANTEDBYDEFAULT_ISSET_ID = 13;
  private static final int __DISPLAYORDER_ISSET_ID = 14;
  private static final int __AVAILABLEFORPRESENT_ISSET_ID = 15;
  private static final int __AVAILABLEFORMYSELF_ISSET_ID = 16;
  private static final int __HASANIMATION_ISSET_ID = 17;
  private static final int __HASSOUND_ISSET_ID = 18;
  private static final int __RECOMMENDATIONSENABLED_ISSET_ID = 19;
  private boolean[] __isset_vector = new boolean[20];

  public Product() {
  }

  public Product(
    String productId,
    long packageId,
    int version,
    String authorName,
    boolean onSale,
    int validDays,
    int saleType,
    String copyright,
    String title,
    String descriptionText,
    long shopOrderId,
    String fromMid,
    String toMid,
    long validUntil,
    int priceTier,
    String price,
    String currency,
    String currencySymbol,
    PaymentType paymentType,
    long createDate,
    boolean ownFlag,
    ProductEventType eventType,
    String urlSchema,
    String downloadUrl,
    String buddyMid,
    long publishSince,
    boolean newFlag,
    boolean missionFlag,
    Vector categories,
    String missionButtonText,
    String missionShortDescription,
    String authorId,
    boolean grantedByDefault,
    int displayOrder,
    boolean availableForPresent,
    boolean availableForMyself,
    boolean hasAnimation,
    boolean hasSound,
    boolean recommendationsEnabled,
    StickerResourceType stickerResourceType)
  {
    this();
    this.productId = productId;
    this.packageId = packageId;
    setPackageIdIsSet(true);
    this.version = version;
    setVersionIsSet(true);
    this.authorName = authorName;
    this.onSale = onSale;
    setOnSaleIsSet(true);
    this.validDays = validDays;
    setValidDaysIsSet(true);
    this.saleType = saleType;
    setSaleTypeIsSet(true);
    this.copyright = copyright;
    this.title = title;
    this.descriptionText = descriptionText;
    this.shopOrderId = shopOrderId;
    setShopOrderIdIsSet(true);
    this.fromMid = fromMid;
    this.toMid = toMid;
    this.validUntil = validUntil;
    setValidUntilIsSet(true);
    this.priceTier = priceTier;
    setPriceTierIsSet(true);
    this.price = price;
    this.currency = currency;
    this.currencySymbol = currencySymbol;
    this.paymentType = paymentType;
    this.createDate = createDate;
    setCreateDateIsSet(true);
    this.ownFlag = ownFlag;
    setOwnFlagIsSet(true);
    this.eventType = eventType;
    this.urlSchema = urlSchema;
    this.downloadUrl = downloadUrl;
    this.buddyMid = buddyMid;
    this.publishSince = publishSince;
    setPublishSinceIsSet(true);
    this.newFlag = newFlag;
    setNewFlagIsSet(true);
    this.missionFlag = missionFlag;
    setMissionFlagIsSet(true);
    this.categories = categories;
    this.missionButtonText = missionButtonText;
    this.missionShortDescription = missionShortDescription;
    this.authorId = authorId;
    this.grantedByDefault = grantedByDefault;
    setGrantedByDefaultIsSet(true);
    this.displayOrder = displayOrder;
    setDisplayOrderIsSet(true);
    this.availableForPresent = availableForPresent;
    setAvailableForPresentIsSet(true);
    this.availableForMyself = availableForMyself;
    setAvailableForMyselfIsSet(true);
    this.hasAnimation = hasAnimation;
    setHasAnimationIsSet(true);
    this.hasSound = hasSound;
    setHasSoundIsSet(true);
    this.recommendationsEnabled = recommendationsEnabled;
    setRecommendationsEnabledIsSet(true);
    this.stickerResourceType = stickerResourceType;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Product(Product other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    this.packageId = other.packageId;
    this.version = other.version;
    if (other.isSetAuthorName()) {
      this.authorName = other.authorName;
    }
    this.onSale = other.onSale;
    this.validDays = other.validDays;
    this.saleType = other.saleType;
    if (other.isSetCopyright()) {
      this.copyright = other.copyright;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetDescriptionText()) {
      this.descriptionText = other.descriptionText;
    }
    this.shopOrderId = other.shopOrderId;
    if (other.isSetFromMid()) {
      this.fromMid = other.fromMid;
    }
    if (other.isSetToMid()) {
      this.toMid = other.toMid;
    }
    this.validUntil = other.validUntil;
    this.priceTier = other.priceTier;
    if (other.isSetPrice()) {
      this.price = other.price;
    }
    if (other.isSetCurrency()) {
      this.currency = other.currency;
    }
    if (other.isSetCurrencySymbol()) {
      this.currencySymbol = other.currencySymbol;
    }
    if (other.isSetPaymentType()) {
      this.paymentType = other.paymentType;
    }
    this.createDate = other.createDate;
    this.ownFlag = other.ownFlag;
    if (other.isSetEventType()) {
      this.eventType = other.eventType;
    }
    if (other.isSetUrlSchema()) {
      this.urlSchema = other.urlSchema;
    }
    if (other.isSetDownloadUrl()) {
      this.downloadUrl = other.downloadUrl;
    }
    if (other.isSetBuddyMid()) {
      this.buddyMid = other.buddyMid;
    }
    this.publishSince = other.publishSince;
    this.newFlag = other.newFlag;
    this.missionFlag = other.missionFlag;
    if (other.isSetCategories()) {
      Vector __this__categories = new Vector();
      for (Enumeration other_enum = other.categories.elements(); other_enum.hasMoreElements(); ) {
        ProductCategory other_element = (ProductCategory)other_enum.nextElement();
        __this__categories.addElement(new ProductCategory(other_element));
      }
      this.categories = __this__categories;
    }
    if (other.isSetMissionButtonText()) {
      this.missionButtonText = other.missionButtonText;
    }
    if (other.isSetMissionShortDescription()) {
      this.missionShortDescription = other.missionShortDescription;
    }
    if (other.isSetAuthorId()) {
      this.authorId = other.authorId;
    }
    this.grantedByDefault = other.grantedByDefault;
    this.displayOrder = other.displayOrder;
    this.availableForPresent = other.availableForPresent;
    this.availableForMyself = other.availableForMyself;
    this.hasAnimation = other.hasAnimation;
    this.hasSound = other.hasSound;
    this.recommendationsEnabled = other.recommendationsEnabled;
    if (other.isSetStickerResourceType()) {
      this.stickerResourceType = other.stickerResourceType;
    }
  }

  public Product deepCopy() {
    return new Product(this);
  }

  public void clear() {
    this.productId = null;
    setPackageIdIsSet(false);
    this.packageId = 0;
    setVersionIsSet(false);
    this.version = 0;
    this.authorName = null;
    setOnSaleIsSet(false);
    this.onSale = false;
    setValidDaysIsSet(false);
    this.validDays = 0;
    setSaleTypeIsSet(false);
    this.saleType = 0;
    this.copyright = null;
    this.title = null;
    this.descriptionText = null;
    setShopOrderIdIsSet(false);
    this.shopOrderId = 0;
    this.fromMid = null;
    this.toMid = null;
    setValidUntilIsSet(false);
    this.validUntil = 0;
    setPriceTierIsSet(false);
    this.priceTier = 0;
    this.price = null;
    this.currency = null;
    this.currencySymbol = null;
    this.paymentType = null;
    setCreateDateIsSet(false);
    this.createDate = 0;
    setOwnFlagIsSet(false);
    this.ownFlag = false;
    this.eventType = null;
    this.urlSchema = null;
    this.downloadUrl = null;
    this.buddyMid = null;
    setPublishSinceIsSet(false);
    this.publishSince = 0;
    setNewFlagIsSet(false);
    this.newFlag = false;
    setMissionFlagIsSet(false);
    this.missionFlag = false;
    this.categories = null;
    this.missionButtonText = null;
    this.missionShortDescription = null;
    this.authorId = null;
    setGrantedByDefaultIsSet(false);
    this.grantedByDefault = false;
    setDisplayOrderIsSet(false);
    this.displayOrder = 0;
    setAvailableForPresentIsSet(false);
    this.availableForPresent = false;
    setAvailableForMyselfIsSet(false);
    this.availableForMyself = false;
    setHasAnimationIsSet(false);
    this.hasAnimation = false;
    setHasSoundIsSet(false);
    this.hasSound = false;
    setRecommendationsEnabledIsSet(false);
    this.recommendationsEnabled = false;
    this.stickerResourceType = null;
  }

  public String getProductId() {
    return this.productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  public long getPackageId() {
    return this.packageId;
  }

  public void setPackageId(long packageId) {
    this.packageId = packageId;
    setPackageIdIsSet(true);
  }

  public void unsetPackageId() {
    __isset_vector[__PACKAGEID_ISSET_ID] = false;
  }

  /** Returns true if field packageId is set (has been assigned a value) and false otherwise */
  public boolean isSetPackageId() {
    return __isset_vector[__PACKAGEID_ISSET_ID];
  }

  public void setPackageIdIsSet(boolean value) {
    __isset_vector[__PACKAGEID_ISSET_ID] = value;
  }

  public int getVersion() {
    return this.version;
  }

  public void setVersion(int version) {
    this.version = version;
    setVersionIsSet(true);
  }

  public void unsetVersion() {
    __isset_vector[__VERSION_ISSET_ID] = false;
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return __isset_vector[__VERSION_ISSET_ID];
  }

  public void setVersionIsSet(boolean value) {
    __isset_vector[__VERSION_ISSET_ID] = value;
  }

  public String getAuthorName() {
    return this.authorName;
  }

  public void setAuthorName(String authorName) {
    this.authorName = authorName;
  }

  public void unsetAuthorName() {
    this.authorName = null;
  }

  /** Returns true if field authorName is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthorName() {
    return this.authorName != null;
  }

  public void setAuthorNameIsSet(boolean value) {
    if (!value) {
      this.authorName = null;
    }
  }

  public boolean isOnSale() {
    return this.onSale;
  }

  public void setOnSale(boolean onSale) {
    this.onSale = onSale;
    setOnSaleIsSet(true);
  }

  public void unsetOnSale() {
    __isset_vector[__ONSALE_ISSET_ID] = false;
  }

  /** Returns true if field onSale is set (has been assigned a value) and false otherwise */
  public boolean isSetOnSale() {
    return __isset_vector[__ONSALE_ISSET_ID];
  }

  public void setOnSaleIsSet(boolean value) {
    __isset_vector[__ONSALE_ISSET_ID] = value;
  }

  public int getValidDays() {
    return this.validDays;
  }

  public void setValidDays(int validDays) {
    this.validDays = validDays;
    setValidDaysIsSet(true);
  }

  public void unsetValidDays() {
    __isset_vector[__VALIDDAYS_ISSET_ID] = false;
  }

  /** Returns true if field validDays is set (has been assigned a value) and false otherwise */
  public boolean isSetValidDays() {
    return __isset_vector[__VALIDDAYS_ISSET_ID];
  }

  public void setValidDaysIsSet(boolean value) {
    __isset_vector[__VALIDDAYS_ISSET_ID] = value;
  }

  public int getSaleType() {
    return this.saleType;
  }

  public void setSaleType(int saleType) {
    this.saleType = saleType;
    setSaleTypeIsSet(true);
  }

  public void unsetSaleType() {
    __isset_vector[__SALETYPE_ISSET_ID] = false;
  }

  /** Returns true if field saleType is set (has been assigned a value) and false otherwise */
  public boolean isSetSaleType() {
    return __isset_vector[__SALETYPE_ISSET_ID];
  }

  public void setSaleTypeIsSet(boolean value) {
    __isset_vector[__SALETYPE_ISSET_ID] = value;
  }

  public String getCopyright() {
    return this.copyright;
  }

  public void setCopyright(String copyright) {
    this.copyright = copyright;
  }

  public void unsetCopyright() {
    this.copyright = null;
  }

  /** Returns true if field copyright is set (has been assigned a value) and false otherwise */
  public boolean isSetCopyright() {
    return this.copyright != null;
  }

  public void setCopyrightIsSet(boolean value) {
    if (!value) {
      this.copyright = null;
    }
  }

  public String getTitle() {
    return this.title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public String getDescriptionText() {
    return this.descriptionText;
  }

  public void setDescriptionText(String descriptionText) {
    this.descriptionText = descriptionText;
  }

  public void unsetDescriptionText() {
    this.descriptionText = null;
  }

  /** Returns true if field descriptionText is set (has been assigned a value) and false otherwise */
  public boolean isSetDescriptionText() {
    return this.descriptionText != null;
  }

  public void setDescriptionTextIsSet(boolean value) {
    if (!value) {
      this.descriptionText = null;
    }
  }

  public long getShopOrderId() {
    return this.shopOrderId;
  }

  public void setShopOrderId(long shopOrderId) {
    this.shopOrderId = shopOrderId;
    setShopOrderIdIsSet(true);
  }

  public void unsetShopOrderId() {
    __isset_vector[__SHOPORDERID_ISSET_ID] = false;
  }

  /** Returns true if field shopOrderId is set (has been assigned a value) and false otherwise */
  public boolean isSetShopOrderId() {
    return __isset_vector[__SHOPORDERID_ISSET_ID];
  }

  public void setShopOrderIdIsSet(boolean value) {
    __isset_vector[__SHOPORDERID_ISSET_ID] = value;
  }

  public String getFromMid() {
    return this.fromMid;
  }

  public void setFromMid(String fromMid) {
    this.fromMid = fromMid;
  }

  public void unsetFromMid() {
    this.fromMid = null;
  }

  /** Returns true if field fromMid is set (has been assigned a value) and false otherwise */
  public boolean isSetFromMid() {
    return this.fromMid != null;
  }

  public void setFromMidIsSet(boolean value) {
    if (!value) {
      this.fromMid = null;
    }
  }

  public String getToMid() {
    return this.toMid;
  }

  public void setToMid(String toMid) {
    this.toMid = toMid;
  }

  public void unsetToMid() {
    this.toMid = null;
  }

  /** Returns true if field toMid is set (has been assigned a value) and false otherwise */
  public boolean isSetToMid() {
    return this.toMid != null;
  }

  public void setToMidIsSet(boolean value) {
    if (!value) {
      this.toMid = null;
    }
  }

  public long getValidUntil() {
    return this.validUntil;
  }

  public void setValidUntil(long validUntil) {
    this.validUntil = validUntil;
    setValidUntilIsSet(true);
  }

  public void unsetValidUntil() {
    __isset_vector[__VALIDUNTIL_ISSET_ID] = false;
  }

  /** Returns true if field validUntil is set (has been assigned a value) and false otherwise */
  public boolean isSetValidUntil() {
    return __isset_vector[__VALIDUNTIL_ISSET_ID];
  }

  public void setValidUntilIsSet(boolean value) {
    __isset_vector[__VALIDUNTIL_ISSET_ID] = value;
  }

  public int getPriceTier() {
    return this.priceTier;
  }

  public void setPriceTier(int priceTier) {
    this.priceTier = priceTier;
    setPriceTierIsSet(true);
  }

  public void unsetPriceTier() {
    __isset_vector[__PRICETIER_ISSET_ID] = false;
  }

  /** Returns true if field priceTier is set (has been assigned a value) and false otherwise */
  public boolean isSetPriceTier() {
    return __isset_vector[__PRICETIER_ISSET_ID];
  }

  public void setPriceTierIsSet(boolean value) {
    __isset_vector[__PRICETIER_ISSET_ID] = value;
  }

  public String getPrice() {
    return this.price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public void unsetPrice() {
    this.price = null;
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return this.price != null;
  }

  public void setPriceIsSet(boolean value) {
    if (!value) {
      this.price = null;
    }
  }

  public String getCurrency() {
    return this.currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public void unsetCurrency() {
    this.currency = null;
  }

  /** Returns true if field currency is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrency() {
    return this.currency != null;
  }

  public void setCurrencyIsSet(boolean value) {
    if (!value) {
      this.currency = null;
    }
  }

  public String getCurrencySymbol() {
    return this.currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public void unsetCurrencySymbol() {
    this.currencySymbol = null;
  }

  /** Returns true if field currencySymbol is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrencySymbol() {
    return this.currencySymbol != null;
  }

  public void setCurrencySymbolIsSet(boolean value) {
    if (!value) {
      this.currencySymbol = null;
    }
  }

  /**
   * 
   * @see PaymentType
   */
  public PaymentType getPaymentType() {
    return this.paymentType;
  }

  /**
   * 
   * @see PaymentType
   */
  public void setPaymentType(PaymentType paymentType) {
    this.paymentType = paymentType;
  }

  public void unsetPaymentType() {
    this.paymentType = null;
  }

  /** Returns true if field paymentType is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentType() {
    return this.paymentType != null;
  }

  public void setPaymentTypeIsSet(boolean value) {
    if (!value) {
      this.paymentType = null;
    }
  }

  public long getCreateDate() {
    return this.createDate;
  }

  public void setCreateDate(long createDate) {
    this.createDate = createDate;
    setCreateDateIsSet(true);
  }

  public void unsetCreateDate() {
    __isset_vector[__CREATEDATE_ISSET_ID] = false;
  }

  /** Returns true if field createDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateDate() {
    return __isset_vector[__CREATEDATE_ISSET_ID];
  }

  public void setCreateDateIsSet(boolean value) {
    __isset_vector[__CREATEDATE_ISSET_ID] = value;
  }

  public boolean isOwnFlag() {
    return this.ownFlag;
  }

  public void setOwnFlag(boolean ownFlag) {
    this.ownFlag = ownFlag;
    setOwnFlagIsSet(true);
  }

  public void unsetOwnFlag() {
    __isset_vector[__OWNFLAG_ISSET_ID] = false;
  }

  /** Returns true if field ownFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetOwnFlag() {
    return __isset_vector[__OWNFLAG_ISSET_ID];
  }

  public void setOwnFlagIsSet(boolean value) {
    __isset_vector[__OWNFLAG_ISSET_ID] = value;
  }

  /**
   * 
   * @see ProductEventType
   */
  public ProductEventType getEventType() {
    return this.eventType;
  }

  /**
   * 
   * @see ProductEventType
   */
  public void setEventType(ProductEventType eventType) {
    this.eventType = eventType;
  }

  public void unsetEventType() {
    this.eventType = null;
  }

  /** Returns true if field eventType is set (has been assigned a value) and false otherwise */
  public boolean isSetEventType() {
    return this.eventType != null;
  }

  public void setEventTypeIsSet(boolean value) {
    if (!value) {
      this.eventType = null;
    }
  }

  public String getUrlSchema() {
    return this.urlSchema;
  }

  public void setUrlSchema(String urlSchema) {
    this.urlSchema = urlSchema;
  }

  public void unsetUrlSchema() {
    this.urlSchema = null;
  }

  /** Returns true if field urlSchema is set (has been assigned a value) and false otherwise */
  public boolean isSetUrlSchema() {
    return this.urlSchema != null;
  }

  public void setUrlSchemaIsSet(boolean value) {
    if (!value) {
      this.urlSchema = null;
    }
  }

  public String getDownloadUrl() {
    return this.downloadUrl;
  }

  public void setDownloadUrl(String downloadUrl) {
    this.downloadUrl = downloadUrl;
  }

  public void unsetDownloadUrl() {
    this.downloadUrl = null;
  }

  /** Returns true if field downloadUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetDownloadUrl() {
    return this.downloadUrl != null;
  }

  public void setDownloadUrlIsSet(boolean value) {
    if (!value) {
      this.downloadUrl = null;
    }
  }

  public String getBuddyMid() {
    return this.buddyMid;
  }

  public void setBuddyMid(String buddyMid) {
    this.buddyMid = buddyMid;
  }

  public void unsetBuddyMid() {
    this.buddyMid = null;
  }

  /** Returns true if field buddyMid is set (has been assigned a value) and false otherwise */
  public boolean isSetBuddyMid() {
    return this.buddyMid != null;
  }

  public void setBuddyMidIsSet(boolean value) {
    if (!value) {
      this.buddyMid = null;
    }
  }

  public long getPublishSince() {
    return this.publishSince;
  }

  public void setPublishSince(long publishSince) {
    this.publishSince = publishSince;
    setPublishSinceIsSet(true);
  }

  public void unsetPublishSince() {
    __isset_vector[__PUBLISHSINCE_ISSET_ID] = false;
  }

  /** Returns true if field publishSince is set (has been assigned a value) and false otherwise */
  public boolean isSetPublishSince() {
    return __isset_vector[__PUBLISHSINCE_ISSET_ID];
  }

  public void setPublishSinceIsSet(boolean value) {
    __isset_vector[__PUBLISHSINCE_ISSET_ID] = value;
  }

  public boolean isNewFlag() {
    return this.newFlag;
  }

  public void setNewFlag(boolean newFlag) {
    this.newFlag = newFlag;
    setNewFlagIsSet(true);
  }

  public void unsetNewFlag() {
    __isset_vector[__NEWFLAG_ISSET_ID] = false;
  }

  /** Returns true if field newFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetNewFlag() {
    return __isset_vector[__NEWFLAG_ISSET_ID];
  }

  public void setNewFlagIsSet(boolean value) {
    __isset_vector[__NEWFLAG_ISSET_ID] = value;
  }

  public boolean isMissionFlag() {
    return this.missionFlag;
  }

  public void setMissionFlag(boolean missionFlag) {
    this.missionFlag = missionFlag;
    setMissionFlagIsSet(true);
  }

  public void unsetMissionFlag() {
    __isset_vector[__MISSIONFLAG_ISSET_ID] = false;
  }

  /** Returns true if field missionFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetMissionFlag() {
    return __isset_vector[__MISSIONFLAG_ISSET_ID];
  }

  public void setMissionFlagIsSet(boolean value) {
    __isset_vector[__MISSIONFLAG_ISSET_ID] = value;
  }

  public int getCategoriesSize() {
    return (this.categories == null) ? 0 : this.categories.size();
  }

  public Enumeration getCategoriesEnumeration() {
    return (this.categories == null) ? null : this.categories.elements();
  }

  public void addToCategories(ProductCategory elem) {
    if (this.categories == null) {
      this.categories = new Vector();
    }
    this.categories.addElement(elem);
  }

  public Vector getCategories() {
    return this.categories;
  }

  public void setCategories(Vector categories) {
    this.categories = categories;
  }

  public void unsetCategories() {
    this.categories = null;
  }

  /** Returns true if field categories is set (has been assigned a value) and false otherwise */
  public boolean isSetCategories() {
    return this.categories != null;
  }

  public void setCategoriesIsSet(boolean value) {
    if (!value) {
      this.categories = null;
    }
  }

  public String getMissionButtonText() {
    return this.missionButtonText;
  }

  public void setMissionButtonText(String missionButtonText) {
    this.missionButtonText = missionButtonText;
  }

  public void unsetMissionButtonText() {
    this.missionButtonText = null;
  }

  /** Returns true if field missionButtonText is set (has been assigned a value) and false otherwise */
  public boolean isSetMissionButtonText() {
    return this.missionButtonText != null;
  }

  public void setMissionButtonTextIsSet(boolean value) {
    if (!value) {
      this.missionButtonText = null;
    }
  }

  public String getMissionShortDescription() {
    return this.missionShortDescription;
  }

  public void setMissionShortDescription(String missionShortDescription) {
    this.missionShortDescription = missionShortDescription;
  }

  public void unsetMissionShortDescription() {
    this.missionShortDescription = null;
  }

  /** Returns true if field missionShortDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetMissionShortDescription() {
    return this.missionShortDescription != null;
  }

  public void setMissionShortDescriptionIsSet(boolean value) {
    if (!value) {
      this.missionShortDescription = null;
    }
  }

  public String getAuthorId() {
    return this.authorId;
  }

  public void setAuthorId(String authorId) {
    this.authorId = authorId;
  }

  public void unsetAuthorId() {
    this.authorId = null;
  }

  /** Returns true if field authorId is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthorId() {
    return this.authorId != null;
  }

  public void setAuthorIdIsSet(boolean value) {
    if (!value) {
      this.authorId = null;
    }
  }

  public boolean isGrantedByDefault() {
    return this.grantedByDefault;
  }

  public void setGrantedByDefault(boolean grantedByDefault) {
    this.grantedByDefault = grantedByDefault;
    setGrantedByDefaultIsSet(true);
  }

  public void unsetGrantedByDefault() {
    __isset_vector[__GRANTEDBYDEFAULT_ISSET_ID] = false;
  }

  /** Returns true if field grantedByDefault is set (has been assigned a value) and false otherwise */
  public boolean isSetGrantedByDefault() {
    return __isset_vector[__GRANTEDBYDEFAULT_ISSET_ID];
  }

  public void setGrantedByDefaultIsSet(boolean value) {
    __isset_vector[__GRANTEDBYDEFAULT_ISSET_ID] = value;
  }

  public int getDisplayOrder() {
    return this.displayOrder;
  }

  public void setDisplayOrder(int displayOrder) {
    this.displayOrder = displayOrder;
    setDisplayOrderIsSet(true);
  }

  public void unsetDisplayOrder() {
    __isset_vector[__DISPLAYORDER_ISSET_ID] = false;
  }

  /** Returns true if field displayOrder is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayOrder() {
    return __isset_vector[__DISPLAYORDER_ISSET_ID];
  }

  public void setDisplayOrderIsSet(boolean value) {
    __isset_vector[__DISPLAYORDER_ISSET_ID] = value;
  }

  public boolean isAvailableForPresent() {
    return this.availableForPresent;
  }

  public void setAvailableForPresent(boolean availableForPresent) {
    this.availableForPresent = availableForPresent;
    setAvailableForPresentIsSet(true);
  }

  public void unsetAvailableForPresent() {
    __isset_vector[__AVAILABLEFORPRESENT_ISSET_ID] = false;
  }

  /** Returns true if field availableForPresent is set (has been assigned a value) and false otherwise */
  public boolean isSetAvailableForPresent() {
    return __isset_vector[__AVAILABLEFORPRESENT_ISSET_ID];
  }

  public void setAvailableForPresentIsSet(boolean value) {
    __isset_vector[__AVAILABLEFORPRESENT_ISSET_ID] = value;
  }

  public boolean isAvailableForMyself() {
    return this.availableForMyself;
  }

  public void setAvailableForMyself(boolean availableForMyself) {
    this.availableForMyself = availableForMyself;
    setAvailableForMyselfIsSet(true);
  }

  public void unsetAvailableForMyself() {
    __isset_vector[__AVAILABLEFORMYSELF_ISSET_ID] = false;
  }

  /** Returns true if field availableForMyself is set (has been assigned a value) and false otherwise */
  public boolean isSetAvailableForMyself() {
    return __isset_vector[__AVAILABLEFORMYSELF_ISSET_ID];
  }

  public void setAvailableForMyselfIsSet(boolean value) {
    __isset_vector[__AVAILABLEFORMYSELF_ISSET_ID] = value;
  }

  public boolean isHasAnimation() {
    return this.hasAnimation;
  }

  public void setHasAnimation(boolean hasAnimation) {
    this.hasAnimation = hasAnimation;
    setHasAnimationIsSet(true);
  }

  public void unsetHasAnimation() {
    __isset_vector[__HASANIMATION_ISSET_ID] = false;
  }

  /** Returns true if field hasAnimation is set (has been assigned a value) and false otherwise */
  public boolean isSetHasAnimation() {
    return __isset_vector[__HASANIMATION_ISSET_ID];
  }

  public void setHasAnimationIsSet(boolean value) {
    __isset_vector[__HASANIMATION_ISSET_ID] = value;
  }

  public boolean isHasSound() {
    return this.hasSound;
  }

  public void setHasSound(boolean hasSound) {
    this.hasSound = hasSound;
    setHasSoundIsSet(true);
  }

  public void unsetHasSound() {
    __isset_vector[__HASSOUND_ISSET_ID] = false;
  }

  /** Returns true if field hasSound is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSound() {
    return __isset_vector[__HASSOUND_ISSET_ID];
  }

  public void setHasSoundIsSet(boolean value) {
    __isset_vector[__HASSOUND_ISSET_ID] = value;
  }

  public boolean isRecommendationsEnabled() {
    return this.recommendationsEnabled;
  }

  public void setRecommendationsEnabled(boolean recommendationsEnabled) {
    this.recommendationsEnabled = recommendationsEnabled;
    setRecommendationsEnabledIsSet(true);
  }

  public void unsetRecommendationsEnabled() {
    __isset_vector[__RECOMMENDATIONSENABLED_ISSET_ID] = false;
  }

  /** Returns true if field recommendationsEnabled is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommendationsEnabled() {
    return __isset_vector[__RECOMMENDATIONSENABLED_ISSET_ID];
  }

  public void setRecommendationsEnabledIsSet(boolean value) {
    __isset_vector[__RECOMMENDATIONSENABLED_ISSET_ID] = value;
  }

  /**
   * 
   * @see StickerResourceType
   */
  public StickerResourceType getStickerResourceType() {
    return this.stickerResourceType;
  }

  /**
   * 
   * @see StickerResourceType
   */
  public void setStickerResourceType(StickerResourceType stickerResourceType) {
    this.stickerResourceType = stickerResourceType;
  }

  public void unsetStickerResourceType() {
    this.stickerResourceType = null;
  }

  /** Returns true if field stickerResourceType is set (has been assigned a value) and false otherwise */
  public boolean isSetStickerResourceType() {
    return this.stickerResourceType != null;
  }

  public void setStickerResourceTypeIsSet(boolean value) {
    if (!value) {
      this.stickerResourceType = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Product)
      return this.equals((Product)that);
    return false;
  }

  public boolean equals(Product that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_packageId = true;
    boolean that_present_packageId = true;
    if (this_present_packageId || that_present_packageId) {
      if (!(this_present_packageId && that_present_packageId))
        return false;
      if (this.packageId != that.packageId)
        return false;
    }

    boolean this_present_version = true;
    boolean that_present_version = true;
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (this.version != that.version)
        return false;
    }

    boolean this_present_authorName = true && this.isSetAuthorName();
    boolean that_present_authorName = true && that.isSetAuthorName();
    if (this_present_authorName || that_present_authorName) {
      if (!(this_present_authorName && that_present_authorName))
        return false;
      if (!this.authorName.equals(that.authorName))
        return false;
    }

    boolean this_present_onSale = true;
    boolean that_present_onSale = true;
    if (this_present_onSale || that_present_onSale) {
      if (!(this_present_onSale && that_present_onSale))
        return false;
      if (this.onSale != that.onSale)
        return false;
    }

    boolean this_present_validDays = true;
    boolean that_present_validDays = true;
    if (this_present_validDays || that_present_validDays) {
      if (!(this_present_validDays && that_present_validDays))
        return false;
      if (this.validDays != that.validDays)
        return false;
    }

    boolean this_present_saleType = true;
    boolean that_present_saleType = true;
    if (this_present_saleType || that_present_saleType) {
      if (!(this_present_saleType && that_present_saleType))
        return false;
      if (this.saleType != that.saleType)
        return false;
    }

    boolean this_present_copyright = true && this.isSetCopyright();
    boolean that_present_copyright = true && that.isSetCopyright();
    if (this_present_copyright || that_present_copyright) {
      if (!(this_present_copyright && that_present_copyright))
        return false;
      if (!this.copyright.equals(that.copyright))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_descriptionText = true && this.isSetDescriptionText();
    boolean that_present_descriptionText = true && that.isSetDescriptionText();
    if (this_present_descriptionText || that_present_descriptionText) {
      if (!(this_present_descriptionText && that_present_descriptionText))
        return false;
      if (!this.descriptionText.equals(that.descriptionText))
        return false;
    }

    boolean this_present_shopOrderId = true;
    boolean that_present_shopOrderId = true;
    if (this_present_shopOrderId || that_present_shopOrderId) {
      if (!(this_present_shopOrderId && that_present_shopOrderId))
        return false;
      if (this.shopOrderId != that.shopOrderId)
        return false;
    }

    boolean this_present_fromMid = true && this.isSetFromMid();
    boolean that_present_fromMid = true && that.isSetFromMid();
    if (this_present_fromMid || that_present_fromMid) {
      if (!(this_present_fromMid && that_present_fromMid))
        return false;
      if (!this.fromMid.equals(that.fromMid))
        return false;
    }

    boolean this_present_toMid = true && this.isSetToMid();
    boolean that_present_toMid = true && that.isSetToMid();
    if (this_present_toMid || that_present_toMid) {
      if (!(this_present_toMid && that_present_toMid))
        return false;
      if (!this.toMid.equals(that.toMid))
        return false;
    }

    boolean this_present_validUntil = true;
    boolean that_present_validUntil = true;
    if (this_present_validUntil || that_present_validUntil) {
      if (!(this_present_validUntil && that_present_validUntil))
        return false;
      if (this.validUntil != that.validUntil)
        return false;
    }

    boolean this_present_priceTier = true;
    boolean that_present_priceTier = true;
    if (this_present_priceTier || that_present_priceTier) {
      if (!(this_present_priceTier && that_present_priceTier))
        return false;
      if (this.priceTier != that.priceTier)
        return false;
    }

    boolean this_present_price = true && this.isSetPrice();
    boolean that_present_price = true && that.isSetPrice();
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (!this.price.equals(that.price))
        return false;
    }

    boolean this_present_currency = true && this.isSetCurrency();
    boolean that_present_currency = true && that.isSetCurrency();
    if (this_present_currency || that_present_currency) {
      if (!(this_present_currency && that_present_currency))
        return false;
      if (!this.currency.equals(that.currency))
        return false;
    }

    boolean this_present_currencySymbol = true && this.isSetCurrencySymbol();
    boolean that_present_currencySymbol = true && that.isSetCurrencySymbol();
    if (this_present_currencySymbol || that_present_currencySymbol) {
      if (!(this_present_currencySymbol && that_present_currencySymbol))
        return false;
      if (!this.currencySymbol.equals(that.currencySymbol))
        return false;
    }

    boolean this_present_paymentType = true && this.isSetPaymentType();
    boolean that_present_paymentType = true && that.isSetPaymentType();
    if (this_present_paymentType || that_present_paymentType) {
      if (!(this_present_paymentType && that_present_paymentType))
        return false;
      if (!this.paymentType.equals(that.paymentType))
        return false;
    }

    boolean this_present_createDate = true;
    boolean that_present_createDate = true;
    if (this_present_createDate || that_present_createDate) {
      if (!(this_present_createDate && that_present_createDate))
        return false;
      if (this.createDate != that.createDate)
        return false;
    }

    boolean this_present_ownFlag = true;
    boolean that_present_ownFlag = true;
    if (this_present_ownFlag || that_present_ownFlag) {
      if (!(this_present_ownFlag && that_present_ownFlag))
        return false;
      if (this.ownFlag != that.ownFlag)
        return false;
    }

    boolean this_present_eventType = true && this.isSetEventType();
    boolean that_present_eventType = true && that.isSetEventType();
    if (this_present_eventType || that_present_eventType) {
      if (!(this_present_eventType && that_present_eventType))
        return false;
      if (!this.eventType.equals(that.eventType))
        return false;
    }

    boolean this_present_urlSchema = true && this.isSetUrlSchema();
    boolean that_present_urlSchema = true && that.isSetUrlSchema();
    if (this_present_urlSchema || that_present_urlSchema) {
      if (!(this_present_urlSchema && that_present_urlSchema))
        return false;
      if (!this.urlSchema.equals(that.urlSchema))
        return false;
    }

    boolean this_present_downloadUrl = true && this.isSetDownloadUrl();
    boolean that_present_downloadUrl = true && that.isSetDownloadUrl();
    if (this_present_downloadUrl || that_present_downloadUrl) {
      if (!(this_present_downloadUrl && that_present_downloadUrl))
        return false;
      if (!this.downloadUrl.equals(that.downloadUrl))
        return false;
    }

    boolean this_present_buddyMid = true && this.isSetBuddyMid();
    boolean that_present_buddyMid = true && that.isSetBuddyMid();
    if (this_present_buddyMid || that_present_buddyMid) {
      if (!(this_present_buddyMid && that_present_buddyMid))
        return false;
      if (!this.buddyMid.equals(that.buddyMid))
        return false;
    }

    boolean this_present_publishSince = true;
    boolean that_present_publishSince = true;
    if (this_present_publishSince || that_present_publishSince) {
      if (!(this_present_publishSince && that_present_publishSince))
        return false;
      if (this.publishSince != that.publishSince)
        return false;
    }

    boolean this_present_newFlag = true;
    boolean that_present_newFlag = true;
    if (this_present_newFlag || that_present_newFlag) {
      if (!(this_present_newFlag && that_present_newFlag))
        return false;
      if (this.newFlag != that.newFlag)
        return false;
    }

    boolean this_present_missionFlag = true;
    boolean that_present_missionFlag = true;
    if (this_present_missionFlag || that_present_missionFlag) {
      if (!(this_present_missionFlag && that_present_missionFlag))
        return false;
      if (this.missionFlag != that.missionFlag)
        return false;
    }

    boolean this_present_categories = true && this.isSetCategories();
    boolean that_present_categories = true && that.isSetCategories();
    if (this_present_categories || that_present_categories) {
      if (!(this_present_categories && that_present_categories))
        return false;
      if (!this.categories.equals(that.categories))
        return false;
    }

    boolean this_present_missionButtonText = true && this.isSetMissionButtonText();
    boolean that_present_missionButtonText = true && that.isSetMissionButtonText();
    if (this_present_missionButtonText || that_present_missionButtonText) {
      if (!(this_present_missionButtonText && that_present_missionButtonText))
        return false;
      if (!this.missionButtonText.equals(that.missionButtonText))
        return false;
    }

    boolean this_present_missionShortDescription = true && this.isSetMissionShortDescription();
    boolean that_present_missionShortDescription = true && that.isSetMissionShortDescription();
    if (this_present_missionShortDescription || that_present_missionShortDescription) {
      if (!(this_present_missionShortDescription && that_present_missionShortDescription))
        return false;
      if (!this.missionShortDescription.equals(that.missionShortDescription))
        return false;
    }

    boolean this_present_authorId = true && this.isSetAuthorId();
    boolean that_present_authorId = true && that.isSetAuthorId();
    if (this_present_authorId || that_present_authorId) {
      if (!(this_present_authorId && that_present_authorId))
        return false;
      if (!this.authorId.equals(that.authorId))
        return false;
    }

    boolean this_present_grantedByDefault = true;
    boolean that_present_grantedByDefault = true;
    if (this_present_grantedByDefault || that_present_grantedByDefault) {
      if (!(this_present_grantedByDefault && that_present_grantedByDefault))
        return false;
      if (this.grantedByDefault != that.grantedByDefault)
        return false;
    }

    boolean this_present_displayOrder = true;
    boolean that_present_displayOrder = true;
    if (this_present_displayOrder || that_present_displayOrder) {
      if (!(this_present_displayOrder && that_present_displayOrder))
        return false;
      if (this.displayOrder != that.displayOrder)
        return false;
    }

    boolean this_present_availableForPresent = true;
    boolean that_present_availableForPresent = true;
    if (this_present_availableForPresent || that_present_availableForPresent) {
      if (!(this_present_availableForPresent && that_present_availableForPresent))
        return false;
      if (this.availableForPresent != that.availableForPresent)
        return false;
    }

    boolean this_present_availableForMyself = true;
    boolean that_present_availableForMyself = true;
    if (this_present_availableForMyself || that_present_availableForMyself) {
      if (!(this_present_availableForMyself && that_present_availableForMyself))
        return false;
      if (this.availableForMyself != that.availableForMyself)
        return false;
    }

    boolean this_present_hasAnimation = true;
    boolean that_present_hasAnimation = true;
    if (this_present_hasAnimation || that_present_hasAnimation) {
      if (!(this_present_hasAnimation && that_present_hasAnimation))
        return false;
      if (this.hasAnimation != that.hasAnimation)
        return false;
    }

    boolean this_present_hasSound = true;
    boolean that_present_hasSound = true;
    if (this_present_hasSound || that_present_hasSound) {
      if (!(this_present_hasSound && that_present_hasSound))
        return false;
      if (this.hasSound != that.hasSound)
        return false;
    }

    boolean this_present_recommendationsEnabled = true;
    boolean that_present_recommendationsEnabled = true;
    if (this_present_recommendationsEnabled || that_present_recommendationsEnabled) {
      if (!(this_present_recommendationsEnabled && that_present_recommendationsEnabled))
        return false;
      if (this.recommendationsEnabled != that.recommendationsEnabled)
        return false;
    }

    boolean this_present_stickerResourceType = true && this.isSetStickerResourceType();
    boolean that_present_stickerResourceType = true && that.isSetStickerResourceType();
    if (this_present_stickerResourceType || that_present_stickerResourceType) {
      if (!(this_present_stickerResourceType && that_present_stickerResourceType))
        return false;
      if (!this.stickerResourceType.equals(that.stickerResourceType))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    Product other = (Product)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetProductId(), other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPackageId(), other.isSetPackageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageId()) {
      lastComparison = TBaseHelper.compareTo(this.packageId, other.packageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetVersion(), other.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = TBaseHelper.compareTo(this.version, other.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAuthorName(), other.isSetAuthorName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthorName()) {
      lastComparison = TBaseHelper.compareTo(this.authorName, other.authorName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetOnSale(), other.isSetOnSale());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOnSale()) {
      lastComparison = TBaseHelper.compareTo(this.onSale, other.onSale);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetValidDays(), other.isSetValidDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidDays()) {
      lastComparison = TBaseHelper.compareTo(this.validDays, other.validDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetSaleType(), other.isSetSaleType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSaleType()) {
      lastComparison = TBaseHelper.compareTo(this.saleType, other.saleType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCopyright(), other.isSetCopyright());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCopyright()) {
      lastComparison = TBaseHelper.compareTo(this.copyright, other.copyright);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetTitle(), other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDescriptionText(), other.isSetDescriptionText());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescriptionText()) {
      lastComparison = TBaseHelper.compareTo(this.descriptionText, other.descriptionText);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetShopOrderId(), other.isSetShopOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShopOrderId()) {
      lastComparison = TBaseHelper.compareTo(this.shopOrderId, other.shopOrderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetFromMid(), other.isSetFromMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFromMid()) {
      lastComparison = TBaseHelper.compareTo(this.fromMid, other.fromMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetToMid(), other.isSetToMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToMid()) {
      lastComparison = TBaseHelper.compareTo(this.toMid, other.toMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetValidUntil(), other.isSetValidUntil());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidUntil()) {
      lastComparison = TBaseHelper.compareTo(this.validUntil, other.validUntil);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPriceTier(), other.isSetPriceTier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPriceTier()) {
      lastComparison = TBaseHelper.compareTo(this.priceTier, other.priceTier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPrice(), other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCurrency(), other.isSetCurrency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrency()) {
      lastComparison = TBaseHelper.compareTo(this.currency, other.currency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCurrencySymbol(), other.isSetCurrencySymbol());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrencySymbol()) {
      lastComparison = TBaseHelper.compareTo(this.currencySymbol, other.currencySymbol);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPaymentType(), other.isSetPaymentType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentType()) {
      lastComparison = TBaseHelper.compareTo(this.paymentType, other.paymentType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCreateDate(), other.isSetCreateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateDate()) {
      lastComparison = TBaseHelper.compareTo(this.createDate, other.createDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetOwnFlag(), other.isSetOwnFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOwnFlag()) {
      lastComparison = TBaseHelper.compareTo(this.ownFlag, other.ownFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetEventType(), other.isSetEventType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEventType()) {
      lastComparison = TBaseHelper.compareTo(this.eventType, other.eventType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetUrlSchema(), other.isSetUrlSchema());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUrlSchema()) {
      lastComparison = TBaseHelper.compareTo(this.urlSchema, other.urlSchema);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDownloadUrl(), other.isSetDownloadUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDownloadUrl()) {
      lastComparison = TBaseHelper.compareTo(this.downloadUrl, other.downloadUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetBuddyMid(), other.isSetBuddyMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuddyMid()) {
      lastComparison = TBaseHelper.compareTo(this.buddyMid, other.buddyMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPublishSince(), other.isSetPublishSince());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublishSince()) {
      lastComparison = TBaseHelper.compareTo(this.publishSince, other.publishSince);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetNewFlag(), other.isSetNewFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewFlag()) {
      lastComparison = TBaseHelper.compareTo(this.newFlag, other.newFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMissionFlag(), other.isSetMissionFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMissionFlag()) {
      lastComparison = TBaseHelper.compareTo(this.missionFlag, other.missionFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetCategories(), other.isSetCategories());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategories()) {
      lastComparison = TBaseHelper.compareTo(this.categories, other.categories);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMissionButtonText(), other.isSetMissionButtonText());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMissionButtonText()) {
      lastComparison = TBaseHelper.compareTo(this.missionButtonText, other.missionButtonText);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMissionShortDescription(), other.isSetMissionShortDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMissionShortDescription()) {
      lastComparison = TBaseHelper.compareTo(this.missionShortDescription, other.missionShortDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAuthorId(), other.isSetAuthorId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthorId()) {
      lastComparison = TBaseHelper.compareTo(this.authorId, other.authorId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetGrantedByDefault(), other.isSetGrantedByDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGrantedByDefault()) {
      lastComparison = TBaseHelper.compareTo(this.grantedByDefault, other.grantedByDefault);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDisplayOrder(), other.isSetDisplayOrder());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayOrder()) {
      lastComparison = TBaseHelper.compareTo(this.displayOrder, other.displayOrder);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAvailableForPresent(), other.isSetAvailableForPresent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAvailableForPresent()) {
      lastComparison = TBaseHelper.compareTo(this.availableForPresent, other.availableForPresent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAvailableForMyself(), other.isSetAvailableForMyself());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAvailableForMyself()) {
      lastComparison = TBaseHelper.compareTo(this.availableForMyself, other.availableForMyself);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetHasAnimation(), other.isSetHasAnimation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasAnimation()) {
      lastComparison = TBaseHelper.compareTo(this.hasAnimation, other.hasAnimation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetHasSound(), other.isSetHasSound());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSound()) {
      lastComparison = TBaseHelper.compareTo(this.hasSound, other.hasSound);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetRecommendationsEnabled(), other.isSetRecommendationsEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommendationsEnabled()) {
      lastComparison = TBaseHelper.compareTo(this.recommendationsEnabled, other.recommendationsEnabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetStickerResourceType(), other.isSetStickerResourceType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStickerResourceType()) {
      lastComparison = TBaseHelper.compareTo(this.stickerResourceType, other.stickerResourceType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // PRODUCT_ID
          if (field.type == TType.STRING) {
            this.productId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // PACKAGE_ID
          if (field.type == TType.I64) {
            this.packageId = iprot.readI64();
            setPackageIdIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // VERSION
          if (field.type == TType.I32) {
            this.version = iprot.readI32();
            setVersionIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // AUTHOR_NAME
          if (field.type == TType.STRING) {
            this.authorName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // ON_SALE
          if (field.type == TType.BOOL) {
            this.onSale = iprot.readBool();
            setOnSaleIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // VALID_DAYS
          if (field.type == TType.I32) {
            this.validDays = iprot.readI32();
            setValidDaysIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // SALE_TYPE
          if (field.type == TType.I32) {
            this.saleType = iprot.readI32();
            setSaleTypeIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // COPYRIGHT
          if (field.type == TType.STRING) {
            this.copyright = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // TITLE
          if (field.type == TType.STRING) {
            this.title = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // DESCRIPTION_TEXT
          if (field.type == TType.STRING) {
            this.descriptionText = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // SHOP_ORDER_ID
          if (field.type == TType.I64) {
            this.shopOrderId = iprot.readI64();
            setShopOrderIdIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // FROM_MID
          if (field.type == TType.STRING) {
            this.fromMid = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // TO_MID
          if (field.type == TType.STRING) {
            this.toMid = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // VALID_UNTIL
          if (field.type == TType.I64) {
            this.validUntil = iprot.readI64();
            setValidUntilIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // PRICE_TIER
          if (field.type == TType.I32) {
            this.priceTier = iprot.readI32();
            setPriceTierIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 16: // PRICE
          if (field.type == TType.STRING) {
            this.price = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 17: // CURRENCY
          if (field.type == TType.STRING) {
            this.currency = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 18: // CURRENCY_SYMBOL
          if (field.type == TType.STRING) {
            this.currencySymbol = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 19: // PAYMENT_TYPE
          if (field.type == TType.I32) {
            this.paymentType = PaymentType.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // CREATE_DATE
          if (field.type == TType.I64) {
            this.createDate = iprot.readI64();
            setCreateDateIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // OWN_FLAG
          if (field.type == TType.BOOL) {
            this.ownFlag = iprot.readBool();
            setOwnFlagIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 22: // EVENT_TYPE
          if (field.type == TType.I32) {
            this.eventType = ProductEventType.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 23: // URL_SCHEMA
          if (field.type == TType.STRING) {
            this.urlSchema = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 24: // DOWNLOAD_URL
          if (field.type == TType.STRING) {
            this.downloadUrl = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 25: // BUDDY_MID
          if (field.type == TType.STRING) {
            this.buddyMid = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 26: // PUBLISH_SINCE
          if (field.type == TType.I64) {
            this.publishSince = iprot.readI64();
            setPublishSinceIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 27: // NEW_FLAG
          if (field.type == TType.BOOL) {
            this.newFlag = iprot.readBool();
            setNewFlagIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 28: // MISSION_FLAG
          if (field.type == TType.BOOL) {
            this.missionFlag = iprot.readBool();
            setMissionFlagIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 29: // CATEGORIES
          if (field.type == TType.LIST) {
            {
              TList _list193 = iprot.readListBegin();
              this.categories = new Vector(_list193.size);
              for (int _i194 = 0; _i194 < _list193.size; ++_i194)
              {
                ProductCategory _elem195;
                _elem195 = new ProductCategory();
                _elem195.read(iprot);
                this.categories.addElement(_elem195);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 30: // MISSION_BUTTON_TEXT
          if (field.type == TType.STRING) {
            this.missionButtonText = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 31: // MISSION_SHORT_DESCRIPTION
          if (field.type == TType.STRING) {
            this.missionShortDescription = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 32: // AUTHOR_ID
          if (field.type == TType.STRING) {
            this.authorId = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 41: // GRANTED_BY_DEFAULT
          if (field.type == TType.BOOL) {
            this.grantedByDefault = iprot.readBool();
            setGrantedByDefaultIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 42: // DISPLAY_ORDER
          if (field.type == TType.I32) {
            this.displayOrder = iprot.readI32();
            setDisplayOrderIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 43: // AVAILABLE_FOR_PRESENT
          if (field.type == TType.BOOL) {
            this.availableForPresent = iprot.readBool();
            setAvailableForPresentIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 44: // AVAILABLE_FOR_MYSELF
          if (field.type == TType.BOOL) {
            this.availableForMyself = iprot.readBool();
            setAvailableForMyselfIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 51: // HAS_ANIMATION
          if (field.type == TType.BOOL) {
            this.hasAnimation = iprot.readBool();
            setHasAnimationIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 52: // HAS_SOUND
          if (field.type == TType.BOOL) {
            this.hasSound = iprot.readBool();
            setHasSoundIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 53: // RECOMMENDATIONS_ENABLED
          if (field.type == TType.BOOL) {
            this.recommendationsEnabled = iprot.readBool();
            setRecommendationsEnabledIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 54: // STICKER_RESOURCE_TYPE
          if (field.type == TType.I32) {
            this.stickerResourceType = StickerResourceType.findByValue(iprot.readI32());
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.productId != null) {
      oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
      oprot.writeString(this.productId);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(PACKAGE_ID_FIELD_DESC);
    oprot.writeI64(this.packageId);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(VERSION_FIELD_DESC);
    oprot.writeI32(this.version);
    oprot.writeFieldEnd();
    if (this.authorName != null) {
      oprot.writeFieldBegin(AUTHOR_NAME_FIELD_DESC);
      oprot.writeString(this.authorName);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(ON_SALE_FIELD_DESC);
    oprot.writeBool(this.onSale);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(VALID_DAYS_FIELD_DESC);
    oprot.writeI32(this.validDays);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(SALE_TYPE_FIELD_DESC);
    oprot.writeI32(this.saleType);
    oprot.writeFieldEnd();
    if (this.copyright != null) {
      oprot.writeFieldBegin(COPYRIGHT_FIELD_DESC);
      oprot.writeString(this.copyright);
      oprot.writeFieldEnd();
    }
    if (this.title != null) {
      oprot.writeFieldBegin(TITLE_FIELD_DESC);
      oprot.writeString(this.title);
      oprot.writeFieldEnd();
    }
    if (this.descriptionText != null) {
      oprot.writeFieldBegin(DESCRIPTION_TEXT_FIELD_DESC);
      oprot.writeString(this.descriptionText);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(SHOP_ORDER_ID_FIELD_DESC);
    oprot.writeI64(this.shopOrderId);
    oprot.writeFieldEnd();
    if (this.fromMid != null) {
      oprot.writeFieldBegin(FROM_MID_FIELD_DESC);
      oprot.writeString(this.fromMid);
      oprot.writeFieldEnd();
    }
    if (this.toMid != null) {
      oprot.writeFieldBegin(TO_MID_FIELD_DESC);
      oprot.writeString(this.toMid);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(VALID_UNTIL_FIELD_DESC);
    oprot.writeI64(this.validUntil);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(PRICE_TIER_FIELD_DESC);
    oprot.writeI32(this.priceTier);
    oprot.writeFieldEnd();
    if (this.price != null) {
      oprot.writeFieldBegin(PRICE_FIELD_DESC);
      oprot.writeString(this.price);
      oprot.writeFieldEnd();
    }
    if (this.currency != null) {
      oprot.writeFieldBegin(CURRENCY_FIELD_DESC);
      oprot.writeString(this.currency);
      oprot.writeFieldEnd();
    }
    if (this.currencySymbol != null) {
      oprot.writeFieldBegin(CURRENCY_SYMBOL_FIELD_DESC);
      oprot.writeString(this.currencySymbol);
      oprot.writeFieldEnd();
    }
    if (this.paymentType != null) {
      oprot.writeFieldBegin(PAYMENT_TYPE_FIELD_DESC);
      oprot.writeI32(this.paymentType.getValue());
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(CREATE_DATE_FIELD_DESC);
    oprot.writeI64(this.createDate);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(OWN_FLAG_FIELD_DESC);
    oprot.writeBool(this.ownFlag);
    oprot.writeFieldEnd();
    if (this.eventType != null) {
      oprot.writeFieldBegin(EVENT_TYPE_FIELD_DESC);
      oprot.writeI32(this.eventType.getValue());
      oprot.writeFieldEnd();
    }
    if (this.urlSchema != null) {
      oprot.writeFieldBegin(URL_SCHEMA_FIELD_DESC);
      oprot.writeString(this.urlSchema);
      oprot.writeFieldEnd();
    }
    if (this.downloadUrl != null) {
      oprot.writeFieldBegin(DOWNLOAD_URL_FIELD_DESC);
      oprot.writeString(this.downloadUrl);
      oprot.writeFieldEnd();
    }
    if (this.buddyMid != null) {
      oprot.writeFieldBegin(BUDDY_MID_FIELD_DESC);
      oprot.writeString(this.buddyMid);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(PUBLISH_SINCE_FIELD_DESC);
    oprot.writeI64(this.publishSince);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(NEW_FLAG_FIELD_DESC);
    oprot.writeBool(this.newFlag);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(MISSION_FLAG_FIELD_DESC);
    oprot.writeBool(this.missionFlag);
    oprot.writeFieldEnd();
    if (this.categories != null) {
      oprot.writeFieldBegin(CATEGORIES_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRUCT, this.categories.size()));
        for (Enumeration _iter196_enum = this.categories.elements(); _iter196_enum.hasMoreElements(); )         {
          ProductCategory _iter196 = (ProductCategory)_iter196_enum.nextElement();
          _iter196.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.missionButtonText != null) {
      oprot.writeFieldBegin(MISSION_BUTTON_TEXT_FIELD_DESC);
      oprot.writeString(this.missionButtonText);
      oprot.writeFieldEnd();
    }
    if (this.missionShortDescription != null) {
      oprot.writeFieldBegin(MISSION_SHORT_DESCRIPTION_FIELD_DESC);
      oprot.writeString(this.missionShortDescription);
      oprot.writeFieldEnd();
    }
    if (this.authorId != null) {
      oprot.writeFieldBegin(AUTHOR_ID_FIELD_DESC);
      oprot.writeString(this.authorId);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(GRANTED_BY_DEFAULT_FIELD_DESC);
    oprot.writeBool(this.grantedByDefault);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(DISPLAY_ORDER_FIELD_DESC);
    oprot.writeI32(this.displayOrder);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(AVAILABLE_FOR_PRESENT_FIELD_DESC);
    oprot.writeBool(this.availableForPresent);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(AVAILABLE_FOR_MYSELF_FIELD_DESC);
    oprot.writeBool(this.availableForMyself);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(HAS_ANIMATION_FIELD_DESC);
    oprot.writeBool(this.hasAnimation);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(HAS_SOUND_FIELD_DESC);
    oprot.writeBool(this.hasSound);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(RECOMMENDATIONS_ENABLED_FIELD_DESC);
    oprot.writeBool(this.recommendationsEnabled);
    oprot.writeFieldEnd();
    if (this.stickerResourceType != null) {
      oprot.writeFieldBegin(STICKER_RESOURCE_TYPE_FIELD_DESC);
      oprot.writeI32(this.stickerResourceType.getValue());
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("Product(");
    boolean first = true;

    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("packageId:");
    sb.append(this.packageId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    sb.append(this.version);
    first = false;
    if (!first) sb.append(", ");
    sb.append("authorName:");
    if (this.authorName == null) {
      sb.append("null");
    } else {
      sb.append(this.authorName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("onSale:");
    sb.append(this.onSale);
    first = false;
    if (!first) sb.append(", ");
    sb.append("validDays:");
    sb.append(this.validDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("saleType:");
    sb.append(this.saleType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("copyright:");
    if (this.copyright == null) {
      sb.append("null");
    } else {
      sb.append(this.copyright);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("descriptionText:");
    if (this.descriptionText == null) {
      sb.append("null");
    } else {
      sb.append(this.descriptionText);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shopOrderId:");
    sb.append(this.shopOrderId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fromMid:");
    if (this.fromMid == null) {
      sb.append("null");
    } else {
      sb.append(this.fromMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("toMid:");
    if (this.toMid == null) {
      sb.append("null");
    } else {
      sb.append(this.toMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("validUntil:");
    sb.append(this.validUntil);
    first = false;
    if (!first) sb.append(", ");
    sb.append("priceTier:");
    sb.append(this.priceTier);
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    if (this.price == null) {
      sb.append("null");
    } else {
      sb.append(this.price);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currency:");
    if (this.currency == null) {
      sb.append("null");
    } else {
      sb.append(this.currency);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currencySymbol:");
    if (this.currencySymbol == null) {
      sb.append("null");
    } else {
      sb.append(this.currencySymbol);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentType:");
    if (this.paymentType == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createDate:");
    sb.append(this.createDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ownFlag:");
    sb.append(this.ownFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("eventType:");
    if (this.eventType == null) {
      sb.append("null");
    } else {
      sb.append(this.eventType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("urlSchema:");
    if (this.urlSchema == null) {
      sb.append("null");
    } else {
      sb.append(this.urlSchema);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("downloadUrl:");
    if (this.downloadUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.downloadUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buddyMid:");
    if (this.buddyMid == null) {
      sb.append("null");
    } else {
      sb.append(this.buddyMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("publishSince:");
    sb.append(this.publishSince);
    first = false;
    if (!first) sb.append(", ");
    sb.append("newFlag:");
    sb.append(this.newFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("missionFlag:");
    sb.append(this.missionFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("categories:");
    if (this.categories == null) {
      sb.append("null");
    } else {
      sb.append(this.categories);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("missionButtonText:");
    if (this.missionButtonText == null) {
      sb.append("null");
    } else {
      sb.append(this.missionButtonText);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("missionShortDescription:");
    if (this.missionShortDescription == null) {
      sb.append("null");
    } else {
      sb.append(this.missionShortDescription);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("authorId:");
    if (this.authorId == null) {
      sb.append("null");
    } else {
      sb.append(this.authorId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("grantedByDefault:");
    sb.append(this.grantedByDefault);
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayOrder:");
    sb.append(this.displayOrder);
    first = false;
    if (!first) sb.append(", ");
    sb.append("availableForPresent:");
    sb.append(this.availableForPresent);
    first = false;
    if (!first) sb.append(", ");
    sb.append("availableForMyself:");
    sb.append(this.availableForMyself);
    first = false;
    if (!first) sb.append(", ");
    sb.append("hasAnimation:");
    sb.append(this.hasAnimation);
    first = false;
    if (!first) sb.append(", ");
    sb.append("hasSound:");
    sb.append(this.hasSound);
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommendationsEnabled:");
    sb.append(this.recommendationsEnabled);
    first = false;
    if (!first) sb.append(", ");
    sb.append("stickerResourceType:");
    if (this.stickerResourceType == null) {
      sb.append("null");
    } else {
      sb.append(this.stickerResourceType);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

