/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import java.util.Hashtable;
import java.util.Vector;
import java.util.Enumeration;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;

public class Profile implements TBase {
  private static final TStruct STRUCT_DESC = new TStruct("Profile");

  private static final TField MID_FIELD_DESC = new TField("mid", TType.STRING, (short)1);
  private static final TField USERID_FIELD_DESC = new TField("userid", TType.STRING, (short)3);
  private static final TField PHONE_FIELD_DESC = new TField("phone", TType.STRING, (short)10);
  private static final TField EMAIL_FIELD_DESC = new TField("email", TType.STRING, (short)11);
  private static final TField REGION_CODE_FIELD_DESC = new TField("regionCode", TType.STRING, (short)12);
  private static final TField DISPLAY_NAME_FIELD_DESC = new TField("displayName", TType.STRING, (short)20);
  private static final TField PHONETIC_NAME_FIELD_DESC = new TField("phoneticName", TType.STRING, (short)21);
  private static final TField PICTURE_STATUS_FIELD_DESC = new TField("pictureStatus", TType.STRING, (short)22);
  private static final TField THUMBNAIL_URL_FIELD_DESC = new TField("thumbnailUrl", TType.STRING, (short)23);
  private static final TField STATUS_MESSAGE_FIELD_DESC = new TField("statusMessage", TType.STRING, (short)24);
  private static final TField ALLOW_SEARCH_BY_USERID_FIELD_DESC = new TField("allowSearchByUserid", TType.BOOL, (short)31);
  private static final TField ALLOW_SEARCH_BY_EMAIL_FIELD_DESC = new TField("allowSearchByEmail", TType.BOOL, (short)32);
  private static final TField PICTURE_PATH_FIELD_DESC = new TField("picturePath", TType.STRING, (short)33);
  private static final TField MUSIC_PROFILE_FIELD_DESC = new TField("musicProfile", TType.STRING, (short)34);
  private static final TField VIDEO_PROFILE_FIELD_DESC = new TField("videoProfile", TType.STRING, (short)35);

  private String mid;
  private String userid;
  private String phone;
  private String email;
  private String regionCode;
  private String displayName;
  private String phoneticName;
  private String pictureStatus;
  private String thumbnailUrl;
  private String statusMessage;
  private boolean allowSearchByUserid;
  private boolean allowSearchByEmail;
  private String picturePath;
  private String musicProfile;
  private String videoProfile;

  // isset id assignments
  private static final int __ALLOWSEARCHBYUSERID_ISSET_ID = 0;
  private static final int __ALLOWSEARCHBYEMAIL_ISSET_ID = 1;
  private boolean[] __isset_vector = new boolean[2];

  public Profile() {
  }

  public Profile(
    String mid,
    String userid,
    String phone,
    String email,
    String regionCode,
    String displayName,
    String phoneticName,
    String pictureStatus,
    String thumbnailUrl,
    String statusMessage,
    boolean allowSearchByUserid,
    boolean allowSearchByEmail,
    String picturePath,
    String musicProfile,
    String videoProfile)
  {
    this();
    this.mid = mid;
    this.userid = userid;
    this.phone = phone;
    this.email = email;
    this.regionCode = regionCode;
    this.displayName = displayName;
    this.phoneticName = phoneticName;
    this.pictureStatus = pictureStatus;
    this.thumbnailUrl = thumbnailUrl;
    this.statusMessage = statusMessage;
    this.allowSearchByUserid = allowSearchByUserid;
    setAllowSearchByUseridIsSet(true);
    this.allowSearchByEmail = allowSearchByEmail;
    setAllowSearchByEmailIsSet(true);
    this.picturePath = picturePath;
    this.musicProfile = musicProfile;
    this.videoProfile = videoProfile;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Profile(Profile other) {
    System.arraycopy(other.__isset_vector, 0, __isset_vector, 0, other.__isset_vector.length);
    if (other.isSetMid()) {
      this.mid = other.mid;
    }
    if (other.isSetUserid()) {
      this.userid = other.userid;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetRegionCode()) {
      this.regionCode = other.regionCode;
    }
    if (other.isSetDisplayName()) {
      this.displayName = other.displayName;
    }
    if (other.isSetPhoneticName()) {
      this.phoneticName = other.phoneticName;
    }
    if (other.isSetPictureStatus()) {
      this.pictureStatus = other.pictureStatus;
    }
    if (other.isSetThumbnailUrl()) {
      this.thumbnailUrl = other.thumbnailUrl;
    }
    if (other.isSetStatusMessage()) {
      this.statusMessage = other.statusMessage;
    }
    this.allowSearchByUserid = other.allowSearchByUserid;
    this.allowSearchByEmail = other.allowSearchByEmail;
    if (other.isSetPicturePath()) {
      this.picturePath = other.picturePath;
    }
    if (other.isSetMusicProfile()) {
      this.musicProfile = other.musicProfile;
    }
    if (other.isSetVideoProfile()) {
      this.videoProfile = other.videoProfile;
    }
  }

  public Profile deepCopy() {
    return new Profile(this);
  }

  public void clear() {
    this.mid = null;
    this.userid = null;
    this.phone = null;
    this.email = null;
    this.regionCode = null;
    this.displayName = null;
    this.phoneticName = null;
    this.pictureStatus = null;
    this.thumbnailUrl = null;
    this.statusMessage = null;
    setAllowSearchByUseridIsSet(false);
    this.allowSearchByUserid = false;
    setAllowSearchByEmailIsSet(false);
    this.allowSearchByEmail = false;
    this.picturePath = null;
    this.musicProfile = null;
    this.videoProfile = null;
  }

  public String getMid() {
    return this.mid;
  }

  public void setMid(String mid) {
    this.mid = mid;
  }

  public void unsetMid() {
    this.mid = null;
  }

  /** Returns true if field mid is set (has been assigned a value) and false otherwise */
  public boolean isSetMid() {
    return this.mid != null;
  }

  public void setMidIsSet(boolean value) {
    if (!value) {
      this.mid = null;
    }
  }

  public String getUserid() {
    return this.userid;
  }

  public void setUserid(String userid) {
    this.userid = userid;
  }

  public void unsetUserid() {
    this.userid = null;
  }

  /** Returns true if field userid is set (has been assigned a value) and false otherwise */
  public boolean isSetUserid() {
    return this.userid != null;
  }

  public void setUseridIsSet(boolean value) {
    if (!value) {
      this.userid = null;
    }
  }

  public String getPhone() {
    return this.phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public String getRegionCode() {
    return this.regionCode;
  }

  public void setRegionCode(String regionCode) {
    this.regionCode = regionCode;
  }

  public void unsetRegionCode() {
    this.regionCode = null;
  }

  /** Returns true if field regionCode is set (has been assigned a value) and false otherwise */
  public boolean isSetRegionCode() {
    return this.regionCode != null;
  }

  public void setRegionCodeIsSet(boolean value) {
    if (!value) {
      this.regionCode = null;
    }
  }

  public String getDisplayName() {
    return this.displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public void unsetDisplayName() {
    this.displayName = null;
  }

  /** Returns true if field displayName is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayName() {
    return this.displayName != null;
  }

  public void setDisplayNameIsSet(boolean value) {
    if (!value) {
      this.displayName = null;
    }
  }

  public String getPhoneticName() {
    return this.phoneticName;
  }

  public void setPhoneticName(String phoneticName) {
    this.phoneticName = phoneticName;
  }

  public void unsetPhoneticName() {
    this.phoneticName = null;
  }

  /** Returns true if field phoneticName is set (has been assigned a value) and false otherwise */
  public boolean isSetPhoneticName() {
    return this.phoneticName != null;
  }

  public void setPhoneticNameIsSet(boolean value) {
    if (!value) {
      this.phoneticName = null;
    }
  }

  public String getPictureStatus() {
    return this.pictureStatus;
  }

  public void setPictureStatus(String pictureStatus) {
    this.pictureStatus = pictureStatus;
  }

  public void unsetPictureStatus() {
    this.pictureStatus = null;
  }

  /** Returns true if field pictureStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetPictureStatus() {
    return this.pictureStatus != null;
  }

  public void setPictureStatusIsSet(boolean value) {
    if (!value) {
      this.pictureStatus = null;
    }
  }

  public String getThumbnailUrl() {
    return this.thumbnailUrl;
  }

  public void setThumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
  }

  public void unsetThumbnailUrl() {
    this.thumbnailUrl = null;
  }

  /** Returns true if field thumbnailUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetThumbnailUrl() {
    return this.thumbnailUrl != null;
  }

  public void setThumbnailUrlIsSet(boolean value) {
    if (!value) {
      this.thumbnailUrl = null;
    }
  }

  public String getStatusMessage() {
    return this.statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }

  public void unsetStatusMessage() {
    this.statusMessage = null;
  }

  /** Returns true if field statusMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusMessage() {
    return this.statusMessage != null;
  }

  public void setStatusMessageIsSet(boolean value) {
    if (!value) {
      this.statusMessage = null;
    }
  }

  public boolean isAllowSearchByUserid() {
    return this.allowSearchByUserid;
  }

  public void setAllowSearchByUserid(boolean allowSearchByUserid) {
    this.allowSearchByUserid = allowSearchByUserid;
    setAllowSearchByUseridIsSet(true);
  }

  public void unsetAllowSearchByUserid() {
    __isset_vector[__ALLOWSEARCHBYUSERID_ISSET_ID] = false;
  }

  /** Returns true if field allowSearchByUserid is set (has been assigned a value) and false otherwise */
  public boolean isSetAllowSearchByUserid() {
    return __isset_vector[__ALLOWSEARCHBYUSERID_ISSET_ID];
  }

  public void setAllowSearchByUseridIsSet(boolean value) {
    __isset_vector[__ALLOWSEARCHBYUSERID_ISSET_ID] = value;
  }

  public boolean isAllowSearchByEmail() {
    return this.allowSearchByEmail;
  }

  public void setAllowSearchByEmail(boolean allowSearchByEmail) {
    this.allowSearchByEmail = allowSearchByEmail;
    setAllowSearchByEmailIsSet(true);
  }

  public void unsetAllowSearchByEmail() {
    __isset_vector[__ALLOWSEARCHBYEMAIL_ISSET_ID] = false;
  }

  /** Returns true if field allowSearchByEmail is set (has been assigned a value) and false otherwise */
  public boolean isSetAllowSearchByEmail() {
    return __isset_vector[__ALLOWSEARCHBYEMAIL_ISSET_ID];
  }

  public void setAllowSearchByEmailIsSet(boolean value) {
    __isset_vector[__ALLOWSEARCHBYEMAIL_ISSET_ID] = value;
  }

  public String getPicturePath() {
    return this.picturePath;
  }

  public void setPicturePath(String picturePath) {
    this.picturePath = picturePath;
  }

  public void unsetPicturePath() {
    this.picturePath = null;
  }

  /** Returns true if field picturePath is set (has been assigned a value) and false otherwise */
  public boolean isSetPicturePath() {
    return this.picturePath != null;
  }

  public void setPicturePathIsSet(boolean value) {
    if (!value) {
      this.picturePath = null;
    }
  }

  public String getMusicProfile() {
    return this.musicProfile;
  }

  public void setMusicProfile(String musicProfile) {
    this.musicProfile = musicProfile;
  }

  public void unsetMusicProfile() {
    this.musicProfile = null;
  }

  /** Returns true if field musicProfile is set (has been assigned a value) and false otherwise */
  public boolean isSetMusicProfile() {
    return this.musicProfile != null;
  }

  public void setMusicProfileIsSet(boolean value) {
    if (!value) {
      this.musicProfile = null;
    }
  }

  public String getVideoProfile() {
    return this.videoProfile;
  }

  public void setVideoProfile(String videoProfile) {
    this.videoProfile = videoProfile;
  }

  public void unsetVideoProfile() {
    this.videoProfile = null;
  }

  /** Returns true if field videoProfile is set (has been assigned a value) and false otherwise */
  public boolean isSetVideoProfile() {
    return this.videoProfile != null;
  }

  public void setVideoProfileIsSet(boolean value) {
    if (!value) {
      this.videoProfile = null;
    }
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Profile)
      return this.equals((Profile)that);
    return false;
  }

  public boolean equals(Profile that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_mid = true && this.isSetMid();
    boolean that_present_mid = true && that.isSetMid();
    if (this_present_mid || that_present_mid) {
      if (!(this_present_mid && that_present_mid))
        return false;
      if (!this.mid.equals(that.mid))
        return false;
    }

    boolean this_present_userid = true && this.isSetUserid();
    boolean that_present_userid = true && that.isSetUserid();
    if (this_present_userid || that_present_userid) {
      if (!(this_present_userid && that_present_userid))
        return false;
      if (!this.userid.equals(that.userid))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_regionCode = true && this.isSetRegionCode();
    boolean that_present_regionCode = true && that.isSetRegionCode();
    if (this_present_regionCode || that_present_regionCode) {
      if (!(this_present_regionCode && that_present_regionCode))
        return false;
      if (!this.regionCode.equals(that.regionCode))
        return false;
    }

    boolean this_present_displayName = true && this.isSetDisplayName();
    boolean that_present_displayName = true && that.isSetDisplayName();
    if (this_present_displayName || that_present_displayName) {
      if (!(this_present_displayName && that_present_displayName))
        return false;
      if (!this.displayName.equals(that.displayName))
        return false;
    }

    boolean this_present_phoneticName = true && this.isSetPhoneticName();
    boolean that_present_phoneticName = true && that.isSetPhoneticName();
    if (this_present_phoneticName || that_present_phoneticName) {
      if (!(this_present_phoneticName && that_present_phoneticName))
        return false;
      if (!this.phoneticName.equals(that.phoneticName))
        return false;
    }

    boolean this_present_pictureStatus = true && this.isSetPictureStatus();
    boolean that_present_pictureStatus = true && that.isSetPictureStatus();
    if (this_present_pictureStatus || that_present_pictureStatus) {
      if (!(this_present_pictureStatus && that_present_pictureStatus))
        return false;
      if (!this.pictureStatus.equals(that.pictureStatus))
        return false;
    }

    boolean this_present_thumbnailUrl = true && this.isSetThumbnailUrl();
    boolean that_present_thumbnailUrl = true && that.isSetThumbnailUrl();
    if (this_present_thumbnailUrl || that_present_thumbnailUrl) {
      if (!(this_present_thumbnailUrl && that_present_thumbnailUrl))
        return false;
      if (!this.thumbnailUrl.equals(that.thumbnailUrl))
        return false;
    }

    boolean this_present_statusMessage = true && this.isSetStatusMessage();
    boolean that_present_statusMessage = true && that.isSetStatusMessage();
    if (this_present_statusMessage || that_present_statusMessage) {
      if (!(this_present_statusMessage && that_present_statusMessage))
        return false;
      if (!this.statusMessage.equals(that.statusMessage))
        return false;
    }

    boolean this_present_allowSearchByUserid = true;
    boolean that_present_allowSearchByUserid = true;
    if (this_present_allowSearchByUserid || that_present_allowSearchByUserid) {
      if (!(this_present_allowSearchByUserid && that_present_allowSearchByUserid))
        return false;
      if (this.allowSearchByUserid != that.allowSearchByUserid)
        return false;
    }

    boolean this_present_allowSearchByEmail = true;
    boolean that_present_allowSearchByEmail = true;
    if (this_present_allowSearchByEmail || that_present_allowSearchByEmail) {
      if (!(this_present_allowSearchByEmail && that_present_allowSearchByEmail))
        return false;
      if (this.allowSearchByEmail != that.allowSearchByEmail)
        return false;
    }

    boolean this_present_picturePath = true && this.isSetPicturePath();
    boolean that_present_picturePath = true && that.isSetPicturePath();
    if (this_present_picturePath || that_present_picturePath) {
      if (!(this_present_picturePath && that_present_picturePath))
        return false;
      if (!this.picturePath.equals(that.picturePath))
        return false;
    }

    boolean this_present_musicProfile = true && this.isSetMusicProfile();
    boolean that_present_musicProfile = true && that.isSetMusicProfile();
    if (this_present_musicProfile || that_present_musicProfile) {
      if (!(this_present_musicProfile && that_present_musicProfile))
        return false;
      if (!this.musicProfile.equals(that.musicProfile))
        return false;
    }

    boolean this_present_videoProfile = true && this.isSetVideoProfile();
    boolean that_present_videoProfile = true && that.isSetVideoProfile();
    if (this_present_videoProfile || that_present_videoProfile) {
      if (!(this_present_videoProfile && that_present_videoProfile))
        return false;
      if (!this.videoProfile.equals(that.videoProfile))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public int compareTo(Object otherObject) {
    if (!getClass().equals(otherObject.getClass())) {
      return getClass().getName().compareTo(otherObject.getClass().getName());
    }

    Profile other = (Profile)otherObject;    int lastComparison = 0;

    lastComparison = TBaseHelper.compareTo(isSetMid(), other.isSetMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMid()) {
      lastComparison = TBaseHelper.compareTo(this.mid, other.mid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetUserid(), other.isSetUserid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserid()) {
      lastComparison = TBaseHelper.compareTo(this.userid, other.userid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPhone(), other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetEmail(), other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetRegionCode(), other.isSetRegionCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegionCode()) {
      lastComparison = TBaseHelper.compareTo(this.regionCode, other.regionCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetDisplayName(), other.isSetDisplayName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayName()) {
      lastComparison = TBaseHelper.compareTo(this.displayName, other.displayName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPhoneticName(), other.isSetPhoneticName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhoneticName()) {
      lastComparison = TBaseHelper.compareTo(this.phoneticName, other.phoneticName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPictureStatus(), other.isSetPictureStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPictureStatus()) {
      lastComparison = TBaseHelper.compareTo(this.pictureStatus, other.pictureStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetThumbnailUrl(), other.isSetThumbnailUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThumbnailUrl()) {
      lastComparison = TBaseHelper.compareTo(this.thumbnailUrl, other.thumbnailUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetStatusMessage(), other.isSetStatusMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusMessage()) {
      lastComparison = TBaseHelper.compareTo(this.statusMessage, other.statusMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAllowSearchByUserid(), other.isSetAllowSearchByUserid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllowSearchByUserid()) {
      lastComparison = TBaseHelper.compareTo(this.allowSearchByUserid, other.allowSearchByUserid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetAllowSearchByEmail(), other.isSetAllowSearchByEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllowSearchByEmail()) {
      lastComparison = TBaseHelper.compareTo(this.allowSearchByEmail, other.allowSearchByEmail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetPicturePath(), other.isSetPicturePath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPicturePath()) {
      lastComparison = TBaseHelper.compareTo(this.picturePath, other.picturePath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetMusicProfile(), other.isSetMusicProfile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMusicProfile()) {
      lastComparison = TBaseHelper.compareTo(this.musicProfile, other.musicProfile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = TBaseHelper.compareTo(isSetVideoProfile(), other.isSetVideoProfile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVideoProfile()) {
      lastComparison = TBaseHelper.compareTo(this.videoProfile, other.videoProfile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // MID
          if (field.type == TType.STRING) {
            this.mid = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // USERID
          if (field.type == TType.STRING) {
            this.userid = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // PHONE
          if (field.type == TType.STRING) {
            this.phone = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // EMAIL
          if (field.type == TType.STRING) {
            this.email = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // REGION_CODE
          if (field.type == TType.STRING) {
            this.regionCode = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 20: // DISPLAY_NAME
          if (field.type == TType.STRING) {
            this.displayName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 21: // PHONETIC_NAME
          if (field.type == TType.STRING) {
            this.phoneticName = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 22: // PICTURE_STATUS
          if (field.type == TType.STRING) {
            this.pictureStatus = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 23: // THUMBNAIL_URL
          if (field.type == TType.STRING) {
            this.thumbnailUrl = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 24: // STATUS_MESSAGE
          if (field.type == TType.STRING) {
            this.statusMessage = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 31: // ALLOW_SEARCH_BY_USERID
          if (field.type == TType.BOOL) {
            this.allowSearchByUserid = iprot.readBool();
            setAllowSearchByUseridIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 32: // ALLOW_SEARCH_BY_EMAIL
          if (field.type == TType.BOOL) {
            this.allowSearchByEmail = iprot.readBool();
            setAllowSearchByEmailIsSet(true);
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 33: // PICTURE_PATH
          if (field.type == TType.STRING) {
            this.picturePath = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 34: // MUSIC_PROFILE
          if (field.type == TType.STRING) {
            this.musicProfile = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 35: // VIDEO_PROFILE
          if (field.type == TType.STRING) {
            this.videoProfile = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.mid != null) {
      oprot.writeFieldBegin(MID_FIELD_DESC);
      oprot.writeString(this.mid);
      oprot.writeFieldEnd();
    }
    if (this.userid != null) {
      oprot.writeFieldBegin(USERID_FIELD_DESC);
      oprot.writeString(this.userid);
      oprot.writeFieldEnd();
    }
    if (this.phone != null) {
      oprot.writeFieldBegin(PHONE_FIELD_DESC);
      oprot.writeString(this.phone);
      oprot.writeFieldEnd();
    }
    if (this.email != null) {
      oprot.writeFieldBegin(EMAIL_FIELD_DESC);
      oprot.writeString(this.email);
      oprot.writeFieldEnd();
    }
    if (this.regionCode != null) {
      oprot.writeFieldBegin(REGION_CODE_FIELD_DESC);
      oprot.writeString(this.regionCode);
      oprot.writeFieldEnd();
    }
    if (this.displayName != null) {
      oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
      oprot.writeString(this.displayName);
      oprot.writeFieldEnd();
    }
    if (this.phoneticName != null) {
      oprot.writeFieldBegin(PHONETIC_NAME_FIELD_DESC);
      oprot.writeString(this.phoneticName);
      oprot.writeFieldEnd();
    }
    if (this.pictureStatus != null) {
      oprot.writeFieldBegin(PICTURE_STATUS_FIELD_DESC);
      oprot.writeString(this.pictureStatus);
      oprot.writeFieldEnd();
    }
    if (this.thumbnailUrl != null) {
      oprot.writeFieldBegin(THUMBNAIL_URL_FIELD_DESC);
      oprot.writeString(this.thumbnailUrl);
      oprot.writeFieldEnd();
    }
    if (this.statusMessage != null) {
      oprot.writeFieldBegin(STATUS_MESSAGE_FIELD_DESC);
      oprot.writeString(this.statusMessage);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(ALLOW_SEARCH_BY_USERID_FIELD_DESC);
    oprot.writeBool(this.allowSearchByUserid);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(ALLOW_SEARCH_BY_EMAIL_FIELD_DESC);
    oprot.writeBool(this.allowSearchByEmail);
    oprot.writeFieldEnd();
    if (this.picturePath != null) {
      oprot.writeFieldBegin(PICTURE_PATH_FIELD_DESC);
      oprot.writeString(this.picturePath);
      oprot.writeFieldEnd();
    }
    if (this.musicProfile != null) {
      oprot.writeFieldBegin(MUSIC_PROFILE_FIELD_DESC);
      oprot.writeString(this.musicProfile);
      oprot.writeFieldEnd();
    }
    if (this.videoProfile != null) {
      oprot.writeFieldBegin(VIDEO_PROFILE_FIELD_DESC);
      oprot.writeString(this.videoProfile);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuffer sb = new StringBuffer("Profile(");
    boolean first = true;

    sb.append("mid:");
    if (this.mid == null) {
      sb.append("null");
    } else {
      sb.append(this.mid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userid:");
    if (this.userid == null) {
      sb.append("null");
    } else {
      sb.append(this.userid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("regionCode:");
    if (this.regionCode == null) {
      sb.append("null");
    } else {
      sb.append(this.regionCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayName:");
    if (this.displayName == null) {
      sb.append("null");
    } else {
      sb.append(this.displayName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phoneticName:");
    if (this.phoneticName == null) {
      sb.append("null");
    } else {
      sb.append(this.phoneticName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("pictureStatus:");
    if (this.pictureStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.pictureStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thumbnailUrl:");
    if (this.thumbnailUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.thumbnailUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("statusMessage:");
    if (this.statusMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.statusMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("allowSearchByUserid:");
    sb.append(this.allowSearchByUserid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("allowSearchByEmail:");
    sb.append(this.allowSearchByEmail);
    first = false;
    if (!first) sb.append(", ");
    sb.append("picturePath:");
    if (this.picturePath == null) {
      sb.append("null");
    } else {
      sb.append(this.picturePath);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("musicProfile:");
    if (this.musicProfile == null) {
      sb.append("null");
    } else {
      sb.append(this.musicProfile);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("videoProfile:");
    if (this.videoProfile == null) {
      sb.append("null");
    } else {
      sb.append(this.videoProfile);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
  }

}

