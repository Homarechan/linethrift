/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
public class OpType implements org.apache.thrift.TEnum {

  public static final OpType END_OF_OPERATION = new OpType(0);
  public static final OpType UPDATE_PROFILE = new OpType(1);
  public static final OpType UPDATE_SETTINGS = new OpType(36);
  public static final OpType NOTIFIED_UPDATE_PROFILE = new OpType(2);
  public static final OpType REGISTER_USERID = new OpType(3);
  public static final OpType ADD_CONTACT = new OpType(4);
  public static final OpType NOTIFIED_ADD_CONTACT = new OpType(5);
  public static final OpType BLOCK_CONTACT = new OpType(6);
  public static final OpType UNBLOCK_CONTACT = new OpType(7);
  public static final OpType NOTIFIED_RECOMMEND_CONTACT = new OpType(8);
  public static final OpType CREATE_GROUP = new OpType(9);
  public static final OpType UPDATE_GROUP = new OpType(10);
  public static final OpType NOTIFIED_UPDATE_GROUP = new OpType(11);
  public static final OpType INVITE_INTO_GROUP = new OpType(12);
  public static final OpType NOTIFIED_INVITE_INTO_GROUP = new OpType(13);
  public static final OpType CANCEL_INVITATION_GROUP = new OpType(31);
  public static final OpType NOTIFIED_CANCEL_INVITATION_GROUP = new OpType(32);
  public static final OpType LEAVE_GROUP = new OpType(14);
  public static final OpType NOTIFIED_LEAVE_GROUP = new OpType(15);
  public static final OpType ACCEPT_GROUP_INVITATION = new OpType(16);
  public static final OpType NOTIFIED_ACCEPT_GROUP_INVITATION = new OpType(17);
  public static final OpType REJECT_GROUP_INVITATION = new OpType(34);
  public static final OpType NOTIFIED_REJECT_GROUP_INVITATION = new OpType(35);
  public static final OpType KICKOUT_FROM_GROUP = new OpType(18);
  public static final OpType NOTIFIED_KICKOUT_FROM_GROUP = new OpType(19);
  public static final OpType CREATE_ROOM = new OpType(20);
  public static final OpType INVITE_INTO_ROOM = new OpType(21);
  public static final OpType NOTIFIED_INVITE_INTO_ROOM = new OpType(22);
  public static final OpType LEAVE_ROOM = new OpType(23);
  public static final OpType NOTIFIED_LEAVE_ROOM = new OpType(24);
  public static final OpType SEND_MESSAGE = new OpType(25);
  public static final OpType RECEIVE_MESSAGE = new OpType(26);
  public static final OpType SEND_MESSAGE_RECEIPT = new OpType(27);
  public static final OpType RECEIVE_MESSAGE_RECEIPT = new OpType(28);
  public static final OpType SEND_CONTENT_RECEIPT = new OpType(29);
  public static final OpType RECEIVE_ANNOUNCEMENT = new OpType(30);
  public static final OpType NOTIFIED_UNREGISTER_USER = new OpType(33);
  public static final OpType INVITE_VIA_EMAIL = new OpType(38);
  public static final OpType NOTIFIED_REGISTER_USER = new OpType(37);
  public static final OpType NOTIFIED_REQUEST_RECOVERY = new OpType(39);
  public static final OpType SEND_CHAT_CHECKED = new OpType(40);
  public static final OpType SEND_CHAT_REMOVED = new OpType(41);
  public static final OpType NOTIFIED_FORCE_SYNC = new OpType(42);
  public static final OpType SEND_CONTENT = new OpType(43);
  public static final OpType SEND_MESSAGE_MYHOME = new OpType(44);
  public static final OpType NOTIFIED_UPDATE_CONTENT_PREVIEW = new OpType(45);
  public static final OpType REMOVE_ALL_MESSAGES = new OpType(46);
  public static final OpType NOTIFIED_UPDATE_PURCHASES = new OpType(47);
  public static final OpType DUMMY = new OpType(48);
  public static final OpType UPDATE_CONTACT = new OpType(49);
  public static final OpType NOTIFIED_RECEIVED_CALL = new OpType(50);
  public static final OpType CANCEL_CALL = new OpType(51);
  public static final OpType NOTIFIED_REDIRECT = new OpType(52);
  public static final OpType NOTIFIED_CHANNEL_SYNC = new OpType(53);
  public static final OpType FAILED_SEND_MESSAGE = new OpType(54);
  public static final OpType NOTIFIED_READ_MESSAGE = new OpType(55);
  public static final OpType FAILED_EMAIL_CONFIRMATION = new OpType(56);
  public static final OpType NOTIFIED_CHAT_CONTENT = new OpType(58);
  public static final OpType NOTIFIED_PUSH_NOTICENTER_ITEM = new OpType(59);
  public static final OpType NOTIFIED_JOIN_CHAT = new OpType(60);
  public static final OpType NOTIFIED_LEAVE_CHAT = new OpType(61);
  public static final OpType NOTIFIED_TYPING = new OpType(62);
  public static final OpType FRIEND_REQUEST_ACCEPTED = new OpType(63);
  public static final OpType DESTROY_MESSAGE = new OpType(64);
  public static final OpType NOTIFIED_DESTROY_MESSAGE = new OpType(65);
  public static final OpType UPDATE_PUBLICKEYCHAIN = new OpType(66);
  public static final OpType NOTIFIED_UPDATE_PUBLICKEYCHAIN = new OpType(67);
  public static final OpType NOTIFIED_BLOCK_CONTACT = new OpType(68);
  public static final OpType NOTIFIED_UNBLOCK_CONTACT = new OpType(69);
  public static final OpType UPDATE_GROUPPREFERENCE = new OpType(70);
  public static final OpType NOTIFIED_PAYMENT_EVENT = new OpType(71);
  public static final OpType REGISTER_E2EE_PUBLICKEY = new OpType(72);
  public static final OpType NOTIFIED_E2EE_KEY_EXCHANGE_REQ = new OpType(73);
  public static final OpType NOTIFIED_E2EE_KEY_EXCHANGE_RESP = new OpType(74);
  public static final OpType NOTIFIED_E2EE_MESSAGE_RESEND_REQ = new OpType(75);
  public static final OpType NOTIFIED_E2EE_MESSAGE_RESEND_RESP = new OpType(76);
  public static final OpType NOTIFIED_E2EE_KEY_UPDATE = new OpType(77);
  public static final OpType NOTIFIED_BUDDY_UPDATE_PROFILE = new OpType(78);
  public static final OpType NOTIFIED_UPDATE_LINEAT_TABS = new OpType(79);
  public static final OpType UPDATE_ROOM = new OpType(80);
  public static final OpType NOTIFIED_BEACON_DETECTED = new OpType(81);
  public static final OpType UPDATE_EXTENDED_PROFILE = new OpType(82);
  public static final OpType ADD_FOLLOW = new OpType(83);
  public static final OpType NOTIFIED_ADD_FOLLOW = new OpType(84);
  public static final OpType DELETE_FOLLOW = new OpType(85);
  public static final OpType NOTIFIED_DELETE_FOLLOW = new OpType(86);
  public static final OpType UPDATE_TIMELINE_SETTINGS = new OpType(87);
  public static final OpType NOTIFIED_FRIEND_REQUEST = new OpType(88);
  public static final OpType UPDATE_RINGBACK_TONE = new OpType(89);
  public static final OpType NOTIFIED_POSTBACK = new OpType(90);
  public static final OpType RECEIVE_READ_WATERMARK = new OpType(91);
  public static final OpType NOTIFIED_MESSAGE_DELIVERED = new OpType(92);
  public static final OpType NOTIFIED_UPDATE_CHAT_BAR = new OpType(93);
  public static final OpType NOTIFIED_CHATAPP_INSTALLED = new OpType(94);
  public static final OpType NOTIFIED_CHATAPP_UPDATED = new OpType(95);
  public static final OpType NOTIFIED_CHATAPP_NEW_MARK = new OpType(96);
  public static final OpType NOTIFIED_CHATAPP_DELETED = new OpType(97);
  public static final OpType NOTIFIED_CHATAPP_SYNC = new OpType(98);
  public static final OpType NOTIFIED_UPDATE_MESSAGE = new OpType(99);

  private final int value;

  private OpType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static OpType findByValue(int value) { 
    switch (value) {
      case 0:
        return END_OF_OPERATION;
      case 1:
        return UPDATE_PROFILE;
      case 36:
        return UPDATE_SETTINGS;
      case 2:
        return NOTIFIED_UPDATE_PROFILE;
      case 3:
        return REGISTER_USERID;
      case 4:
        return ADD_CONTACT;
      case 5:
        return NOTIFIED_ADD_CONTACT;
      case 6:
        return BLOCK_CONTACT;
      case 7:
        return UNBLOCK_CONTACT;
      case 8:
        return NOTIFIED_RECOMMEND_CONTACT;
      case 9:
        return CREATE_GROUP;
      case 10:
        return UPDATE_GROUP;
      case 11:
        return NOTIFIED_UPDATE_GROUP;
      case 12:
        return INVITE_INTO_GROUP;
      case 13:
        return NOTIFIED_INVITE_INTO_GROUP;
      case 31:
        return CANCEL_INVITATION_GROUP;
      case 32:
        return NOTIFIED_CANCEL_INVITATION_GROUP;
      case 14:
        return LEAVE_GROUP;
      case 15:
        return NOTIFIED_LEAVE_GROUP;
      case 16:
        return ACCEPT_GROUP_INVITATION;
      case 17:
        return NOTIFIED_ACCEPT_GROUP_INVITATION;
      case 34:
        return REJECT_GROUP_INVITATION;
      case 35:
        return NOTIFIED_REJECT_GROUP_INVITATION;
      case 18:
        return KICKOUT_FROM_GROUP;
      case 19:
        return NOTIFIED_KICKOUT_FROM_GROUP;
      case 20:
        return CREATE_ROOM;
      case 21:
        return INVITE_INTO_ROOM;
      case 22:
        return NOTIFIED_INVITE_INTO_ROOM;
      case 23:
        return LEAVE_ROOM;
      case 24:
        return NOTIFIED_LEAVE_ROOM;
      case 25:
        return SEND_MESSAGE;
      case 26:
        return RECEIVE_MESSAGE;
      case 27:
        return SEND_MESSAGE_RECEIPT;
      case 28:
        return RECEIVE_MESSAGE_RECEIPT;
      case 29:
        return SEND_CONTENT_RECEIPT;
      case 30:
        return RECEIVE_ANNOUNCEMENT;
      case 33:
        return NOTIFIED_UNREGISTER_USER;
      case 38:
        return INVITE_VIA_EMAIL;
      case 37:
        return NOTIFIED_REGISTER_USER;
      case 39:
        return NOTIFIED_REQUEST_RECOVERY;
      case 40:
        return SEND_CHAT_CHECKED;
      case 41:
        return SEND_CHAT_REMOVED;
      case 42:
        return NOTIFIED_FORCE_SYNC;
      case 43:
        return SEND_CONTENT;
      case 44:
        return SEND_MESSAGE_MYHOME;
      case 45:
        return NOTIFIED_UPDATE_CONTENT_PREVIEW;
      case 46:
        return REMOVE_ALL_MESSAGES;
      case 47:
        return NOTIFIED_UPDATE_PURCHASES;
      case 48:
        return DUMMY;
      case 49:
        return UPDATE_CONTACT;
      case 50:
        return NOTIFIED_RECEIVED_CALL;
      case 51:
        return CANCEL_CALL;
      case 52:
        return NOTIFIED_REDIRECT;
      case 53:
        return NOTIFIED_CHANNEL_SYNC;
      case 54:
        return FAILED_SEND_MESSAGE;
      case 55:
        return NOTIFIED_READ_MESSAGE;
      case 56:
        return FAILED_EMAIL_CONFIRMATION;
      case 58:
        return NOTIFIED_CHAT_CONTENT;
      case 59:
        return NOTIFIED_PUSH_NOTICENTER_ITEM;
      case 60:
        return NOTIFIED_JOIN_CHAT;
      case 61:
        return NOTIFIED_LEAVE_CHAT;
      case 62:
        return NOTIFIED_TYPING;
      case 63:
        return FRIEND_REQUEST_ACCEPTED;
      case 64:
        return DESTROY_MESSAGE;
      case 65:
        return NOTIFIED_DESTROY_MESSAGE;
      case 66:
        return UPDATE_PUBLICKEYCHAIN;
      case 67:
        return NOTIFIED_UPDATE_PUBLICKEYCHAIN;
      case 68:
        return NOTIFIED_BLOCK_CONTACT;
      case 69:
        return NOTIFIED_UNBLOCK_CONTACT;
      case 70:
        return UPDATE_GROUPPREFERENCE;
      case 71:
        return NOTIFIED_PAYMENT_EVENT;
      case 72:
        return REGISTER_E2EE_PUBLICKEY;
      case 73:
        return NOTIFIED_E2EE_KEY_EXCHANGE_REQ;
      case 74:
        return NOTIFIED_E2EE_KEY_EXCHANGE_RESP;
      case 75:
        return NOTIFIED_E2EE_MESSAGE_RESEND_REQ;
      case 76:
        return NOTIFIED_E2EE_MESSAGE_RESEND_RESP;
      case 77:
        return NOTIFIED_E2EE_KEY_UPDATE;
      case 78:
        return NOTIFIED_BUDDY_UPDATE_PROFILE;
      case 79:
        return NOTIFIED_UPDATE_LINEAT_TABS;
      case 80:
        return UPDATE_ROOM;
      case 81:
        return NOTIFIED_BEACON_DETECTED;
      case 82:
        return UPDATE_EXTENDED_PROFILE;
      case 83:
        return ADD_FOLLOW;
      case 84:
        return NOTIFIED_ADD_FOLLOW;
      case 85:
        return DELETE_FOLLOW;
      case 86:
        return NOTIFIED_DELETE_FOLLOW;
      case 87:
        return UPDATE_TIMELINE_SETTINGS;
      case 88:
        return NOTIFIED_FRIEND_REQUEST;
      case 89:
        return UPDATE_RINGBACK_TONE;
      case 90:
        return NOTIFIED_POSTBACK;
      case 91:
        return RECEIVE_READ_WATERMARK;
      case 92:
        return NOTIFIED_MESSAGE_DELIVERED;
      case 93:
        return NOTIFIED_UPDATE_CHAT_BAR;
      case 94:
        return NOTIFIED_CHATAPP_INSTALLED;
      case 95:
        return NOTIFIED_CHATAPP_UPDATED;
      case 96:
        return NOTIFIED_CHATAPP_NEW_MARK;
      case 97:
        return NOTIFIED_CHATAPP_DELETED;
      case 98:
        return NOTIFIED_CHATAPP_SYNC;
      case 99:
        return NOTIFIED_UPDATE_MESSAGE;
      default:
        return null;
    }
  }
}
