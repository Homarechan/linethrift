digraph "line" {
node [style=filled, shape=record];
edge [arrowsize=0.5];
rankdir=LR
node [fillcolor=white];
ApplicationType [label="enum ApplicationType|IOS = 16|IOS_RC = 17|IOS_BETA = 18|IOS_ALPHA = 19|ANDROID = 32|ANDROID_RC = 33|ANDROID_BETA = 34|ANDROID_ALPHA = 35|WAP = 48|WAP_RC = 49|WAP_BETA = 50|WAP_ALPHA = 51|BOT = 64|BOT_RC = 65|BOT_BETA = 66|BOT_ALPHA = 67|WEB = 80|WEB_RC = 81|WEB_BETA = 82|WEB_ALPHA = 83|DESKTOPWIN = 96|DESKTOPWIN_RC = 97|DESKTOPWIN_BETA = 98|DESKTOPWIN_ALPHA = 99|DESKTOPMAC = 112|DESKTOPMAC_RC = 113|DESKTOPMAC_BETA = 114|DESKTOPMAC_ALPHA = 115|CHANNELGW = 128|CHANNELGW_RC = 129|CHANNELGW_BETA = 130|CHANNELGW_ALPHA = 131|CHANNELCP = 144|CHANNELCP_RC = 145|CHANNELCP_BETA = 146|CHANNELCP_ALPHA = 147|WINPHONE = 160|WINPHONE_RC = 161|WINPHONE_BETA = 162|WINPHONE_ALPHA = 163|BLACKBERRY = 176|BLACKBERRY_RC = 177|BLACKBERRY_BETA = 178|BLACKBERRY_ALPHA = 179|WINMETRO = 192|WINMETRO_RC = 193|WINMETRO_BETA = 194|WINMETRO_ALPHA = 195|S40 = 208|S40_RC = 209|S40_BETA = 210|S40_ALPHA = 211|CHRONO = 224|CHRONO_RC = 225|CHRONO_BETA = 226|CHRONO_ALPHA = 227|TIZEN = 256|TIZEN_RC = 257|TIZEN_BETA = 258|TIZEN_ALPHA = 259|VIRTUAL = 272|FIREFOXOS = 288|FIREFOXOS_RC = 289|FIREFOXOS_BETA = 290|FIREFOXOS_ALPHA = 291|IOSIPAD = 304|IOSIPAD_RC = 305|IOSIPAD_BETA = 306|IOSIPAD_ALPHA = 307|BIZIOS = 320|BIZIOS_RC = 321|BIZIOS_BETA = 322|BIZIOS_ALPHA = 323|BIZANDROID = 336|BIZANDROID_RC = 337|BIZANDROID_BETA = 338|BIZANDROID_ALPHA = 339|BIZBOT = 352|BIZBOT_RC = 353|BIZBOT_BETA = 354|BIZBOT_ALPHA = 355|CHROMEOS = 368|CHROMEOS_RC = 369|CHROMEOS_BETA = 370|CHROMEOS_ALPHA = 371|ANDROIDLITE = 384|ANDROIDLITE_RC = 385|ANDROIDLITE_BETA = 386|ANDROIDLITE_ALPHA = 387|WIN10 = 400|WIN10_RC = 401|WIN10_BETA = 402|WIN10_ALPHA = 403|BIZWEB = 416|BIZWEB_RC = 417|BIZWEB_BETA = 418|BIZWEB_ALPHA = 419|DUMMYPRIMARY = 432|DUMMYPRIMARY_RC = 433|DUMMYPRIMARY_BETA = 434|DUMMYPRIMARY_ALPHA = 435|SQUARE = 448|SQUARE_RC = 449|SQUARE_BETA = 450|SQUARE_ALPHA = 451|INTERNAL = 464|INTERNAL_RC = 465|INTERNAL_BETA = 466|INTERNAL_ALPHA = 467|CLOVAFRIENDS = 480|CLOVAFRIENDS_RC = 481|CLOVAFRIENDS_BETA = 482|CLOVAFRIENDS_ALPHA = 483"];
node [fillcolor=white];
ExtendedProfileAttribute [label="enum ExtendedProfileAttribute"];
node [fillcolor=white];
PrivacyLevelType [label="enum PrivacyLevelType|PUBLIC = 0|PRIVATE = 1"];
node [fillcolor=white];
PaidCallerIdStatus [label="enum PaidCallerIdStatus|NOT_SPECIFIED = 0|VALID = 1|VERIFICATION_REQUIRED = 2|NOT_PERMITTED = 3|LIMIT_EXCEEDED = 4|LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED = 5"];
node [fillcolor=white];
PaidCallProductType [label="enum PaidCallProductType|COIN = 0|CREDIT = 1|MONTHLY = 2"];
node [fillcolor=white];
PaidCallType [label="enum PaidCallType|OUT = 0|IN = 1|TOLLFREE = 2|RECORD = 3|AD = 4|CS = 5"];
node [fillcolor=white];
BotType [label="enum BotType|RESERVED = 0|OFFICIAL = 1|LINE_AT_0 = 2|LINE_AT = 3"];
node [fillcolor=white];
BuddyOnAirLabel [label="enum BuddyOnAirLabel|ON_AIR = 0|LIVE = 1"];
node [fillcolor=white];
BuddyBannerLinkType [label="enum BuddyBannerLinkType|BUDDY_BANNER_LINK_HIDDEN = 0|BUDDY_BANNER_LINK_MID = 1|BUDDY_BANNER_LINK_URL = 2"];
node [fillcolor=white];
BuddyOnAirType [label="enum BuddyOnAirType|NORMAL = 0|LIVE = 1|VOIP = 2"];
node [fillcolor=white];
Diff [label="enum Diff|ADDED = 0|UPDATED = 1|REMOVED = 2"];
node [fillcolor=white];
ReportType [label="enum ReportType|ADVERTISING = 1|GENDER_HARASSMENT = 2|HARASSMENT = 3|OTHER = 4"];
node [fillcolor=white];
SyncTriggerReason [label="enum SyncTriggerReason|OTHER = 0|REVISION_GAP_TOO_LARGE = 1|OPERATION_EXPIRED = 2"];
node [fillcolor=white];
ReportCategory [label="enum ReportCategory|PUSH_NORMAL_PLAIN = 0|PUSH_NORMAL_E2EE = 1|PUSH_VOIP_PLAIN = 2|PUSH_VOIP_E2EE = 3"];
node [fillcolor=white];
BuddyResultState [label="enum BuddyResultState|ACCEPTED = 1|SUCCEEDED = 2|FAILED = 3|CANCELLED = 4|NOTIFY_FAILED = 5|STORING = 11|UPLOADING = 21|NOTIFYING = 31|REMOVING_SUBSCRIPTION = 41|UNREGISTERING_ACCOUNT = 42|NOTIFYING_LEAVE_CHAT = 43"];
node [fillcolor=white];
BuddySearchRequestSource [label="enum BuddySearchRequestSource|NA = 0|FRIEND_VIEW = 1|OFFICIAL_ACCOUNT_VIEW = 2"];
node [fillcolor=white];
CarrierCode [label="enum CarrierCode|NOT_SPECIFIED = 0|JP_DOCOMO = 1|JP_AU = 2|JP_SOFTBANK = 3|JP_DOCOMO_LINE = 4|KR_SKT = 17|KR_KT = 18|KR_LGT = 19"];
node [fillcolor=white];
ChannelConfiguration [label="enum ChannelConfiguration|MESSAGE = 0|MESSAGE_NOTIFICATION = 1|NOTIFICATION_CENTER = 2"];
node [fillcolor=white];
ChannelPermission [label="enum ChannelPermission|PROFILE = 0|FRIENDS = 1|GROUP = 2"];
node [fillcolor=white];
ChannelFeatureLicense [label="enum ChannelFeatureLicense|BLE_LCS_API_USABLE = 26|PROHIBIT_MINIMIZE_CHANNEL_BROWSER = 27|ALLOW_IOS_WEBKIT = 28"];
node [fillcolor=white];
ChannelErrorCode [label="enum ChannelErrorCode|ILLEGAL_ARGUMENT = 0|INTERNAL_ERROR = 1|CONNECTION_ERROR = 2|AUTHENTICATIONI_FAILED = 3|NEED_PERMISSION_APPROVAL = 4|COIN_NOT_USABLE = 5|WEBVIEW_NOT_ALLOWED = 6"];
node [fillcolor=white];
ChannelSyncType [label="enum ChannelSyncType|SYNC = 0|REMOVE = 1|REMOVE_ALL = 2"];
node [fillcolor=white];
LoginType [label="enum LoginType|ID_CREDENTIAL = 0|QRCODE = 1|ID_CREDENTIAL_WITH_E2EE = 2"];
node [fillcolor=white];
ContactAttribute [label="enum ContactAttribute|CONTACT_ATTRIBUTE_CAPABLE_VOICE_CALL = 1|CONTACT_ATTRIBUTE_CAPABLE_VIDEO_CALL = 2|CONTACT_ATTRIBUTE_CAPABLE_MY_HOME = 16|CONTACT_ATTRIBUTE_CAPABLE_BUDDY = 32"];
node [fillcolor=white];
ContactCategory [label="enum ContactCategory|NORMAL = 0|RECOMMEND = 1"];
node [fillcolor=white];
ContactRelation [label="enum ContactRelation|ONEWAY = 0|BOTH = 1|NOT_REGISTERED = 2"];
node [fillcolor=white];
AsymmetricKeyAlgorithm [label="enum AsymmetricKeyAlgorithm|ASYMMETRIC_KEY_ALGORITHM_RSA = 1|ASYMMETRIC_KEY_ALGORITHM_ECDH = 2"];
node [fillcolor=white];
ContactSetting [label="enum ContactSetting|CONTACT_SETTING_NOTIFICATION_DISABLE = 1|CONTACT_SETTING_DISPLAY_NAME_OVERRIDE = 2|CONTACT_SETTING_CONTACT_HIDE = 4|CONTACT_SETTING_FAVORITE = 8|CONTACT_SETTING_DELETE = 16"];
node [fillcolor=white];
ContactStatus [label="enum ContactStatus|UNSPECIFIED = 0|FRIEND = 1|FRIEND_BLOCKED = 2|RECOMMEND = 3|RECOMMEND_BLOCKED = 4|DELETED = 5|DELETED_BLOCKED = 6"];
node [fillcolor=white];
ContactType [label="enum ContactType|MID = 0|PHONE = 1|EMAIL = 2|USERID = 3|PROXIMITY = 4|GROUP = 5|USER = 6|QRCODE = 7|PROMOTION_BOT = 8|CONTACT_MESSAGE = 9|FRIEND_REQUEST = 10|REPAIR = 128|FACEBOOK = 2305|SINA = 2306|RENREN = 2307|FEIXIN = 2308|BBM = 2309|BEACON = 11"];
node [fillcolor=white];
GroupPreferenceAttribute [label="enum GroupPreferenceAttribute|INVITATION_TICKET = 1|FAVORITE_TIMESTAMP = 2"];
node [fillcolor=white];
ContentType [label="enum ContentType|NONE = 0|IMAGE = 1|VIDEO = 2|AUDIO = 3|HTML = 4|PDF = 5|CALL = 6|STICKER = 7|PRESENCE = 8|GIFT = 9|GROUPBOARD = 10|APPLINK = 11|LINK = 12|CONTACT = 13|FILE = 14|LOCATION = 15|POSTNOTIFICATION = 16|RICH = 17|CHATEVENT = 18|MUSIC = 19|PAYMENT = 20|EXTIMAGE = 21"];
node [fillcolor=white];
MessageRelationType [label="enum MessageRelationType|FORWARD = 0|AUTO_REPLY = 1|SUBORDINATE = 2"];
node [fillcolor=white];
CustomMode [label="enum CustomMode|PROMOTION_FRIENDS_INVITE = 1|CAPABILITY_SERVER_SIDE_SMS = 2|LINE_CLIENT_ANALYTICS_CONFIGURATION = 3"];
node [fillcolor=white];
RoomAttribute [label="enum RoomAttribute|ALL = 255|NOTIFICATION_SETTING = 1"];
node [fillcolor=white];
UserStatus [label="enum UserStatus|NORMAL = 0|UNBOUND = 1|UNREGISTERED = 2"];
node [fillcolor=white];
EmailConfirmationStatus [label="enum EmailConfirmationStatus|NOT_SPECIFIED = 0|NOT_YET = 1|DONE = 3|NEED_ENFORCED_INPUT = 4"];
node [fillcolor=white];
AccountMigrationPincodeType [label="enum AccountMigrationPincodeType|NOT_APPLICABLE = 0|NOT_SET = 1|SET = 2|NEED_ENFORCED_INPUT = 3"];
node [fillcolor=white];
AccountMigrationCheckType [label="enum AccountMigrationCheckType|SKIP = 0|PINCODE = 1|SECURITY_CENTER = 2"];
node [fillcolor=white];
SecurityCenterSettingsType [label="enum SecurityCenterSettingsType|NOT_APPLICABLE = 0|NOT_SET = 1|SET = 2|NEED_ENFORCED_INPUT = 3"];
node [fillcolor=white];
EmailConfirmationType [label="enum EmailConfirmationType|SERVER_SIDE_EMAIL = 0|CLIENT_SIDE_EMAIL = 1"];
node [fillcolor=white];
SquareChatAnnouncementType [label="enum SquareChatAnnouncementType|TEXT_MESSAGE = 0"];
node [fillcolor=white];
SquareChatAttribute [label="enum SquareChatAttribute|NAME = 2|SQUARE_CHAT_IMAGE = 3|STATE = 4"];
node [fillcolor=white];
SquareMemberAttribute [label="enum SquareMemberAttribute|DISPLAY_NAME = 1|PROFILE_IMAGE = 2|ABLE_TO_RECEIVE_MESSAGE = 3|MEMBERSHIP_STATE = 5|ROLE = 6|PREFERENCE = 7"];
node [fillcolor=white];
SquareMemberRelationAttribute [label="enum SquareMemberRelationAttribute|BLOCKED = 1"];
node [fillcolor=white];
SquarePreferenceAttribute [label="enum SquarePreferenceAttribute|FAVORITE = 1|NOTI_FOR_NEW_JOIN_REQUEST = 2"];
node [fillcolor=white];
SquareState [label="enum SquareState|ALIVE = 0|DELETED = 1|SUSPENDED = 2"];
node [fillcolor=white];
CommitMessageResultCode [label="enum CommitMessageResultCode|DELIVERED = 0|DELIVERY_SKIPPED = 1|DELIVERY_RESTRICTED = 2"];
node [fillcolor=white];
ErrorCode [label="enum ErrorCode|ILLEGAL_ARGUMENT = 0|AUTHENTICATION_FAILED = 1|DB_FAILED = 2|INVALID_STATE = 3|EXCESSIVE_ACCESS = 4|NOT_FOUND = 5|INVALID_MID = 9|NOT_A_MEMBER = 10|INVALID_LENGTH = 6|NOT_AVAILABLE_USER = 7|NOT_AUTHORIZED_DEVICE = 8|NOT_AUTHORIZED_SESSION = 14|INCOMPATIBLE_APP_VERSION = 11|NOT_READY = 12|NOT_AVAILABLE_SESSION = 13|SYSTEM_ERROR = 15|NO_AVAILABLE_VERIFICATION_METHOD = 16|NOT_AUTHENTICATED = 17|INVALID_IDENTITY_CREDENTIAL = 18|NOT_AVAILABLE_IDENTITY_IDENTIFIER = 19|INTERNAL_ERROR = 20|NO_SUCH_IDENTITY_IDENFIER = 21|DEACTIVATED_ACCOUNT_BOUND_TO_THIS_IDENTITY = 22|ILLEGAL_IDENTITY_CREDENTIAL = 23|UNKNOWN_CHANNEL = 24|NO_SUCH_MESSAGE_BOX = 25|NOT_AVAILABLE_MESSAGE_BOX = 26|CHANNEL_DOES_NOT_MATCH = 27|NOT_YOUR_MESSAGE = 28|MESSAGE_DEFINED_ERROR = 29|USER_CANNOT_ACCEPT_PRESENTS = 30|USER_NOT_STICKER_OWNER = 32|MAINTENANCE_ERROR = 33|ACCOUNT_NOT_MATCHED = 34|ABUSE_BLOCK = 35|NOT_FRIEND = 36|NOT_ALLOWED_CALL = 37|BLOCK_FRIEND = 38|INCOMPATIBLE_VOIP_VERSION = 39|INVALID_SNS_ACCESS_TOKEN = 40|EXTERNAL_SERVICE_NOT_AVAILABLE = 41|NOT_ALLOWED_ADD_CONTACT = 42|NOT_CERTIFICATED = 43|NOT_ALLOWED_SECONDARY_DEVICE = 44|INVALID_PIN_CODE = 45|NOT_FOUND_IDENTITY_CREDENTIAL = 46|EXCEED_FILE_MAX_SIZE = 47|EXCEED_DAILY_QUOTA = 48|NOT_SUPPORT_SEND_FILE = 49|MUST_UPGRADE = 50|NOT_AVAILABLE_PIN_CODE_SESSION = 51|EXPIRED_REVISION = 52|NOT_YET_PHONE_NUMBER = 54|BAD_CALL_NUMBER = 55|UNAVAILABLE_CALL_NUMBER = 56|NOT_SUPPORT_CALL_SERVICE = 57|CONGESTION_CONTROL = 58|NO_BALANCE = 59|NOT_PERMITTED_CALLER_ID = 60|NO_CALLER_ID_LIMIT_EXCEEDED = 61|CALLER_ID_VERIFICATION_REQUIRED = 62|NO_CALLER_ID_LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED = 63|MESSAGE_NOT_FOUND = 64|INVALID_ACCOUNT_MIGRATION_PINCODE_FORMAT = 65|ACCOUNT_MIGRATION_PINCODE_NOT_MATCHED = 66|ACCOUNT_MIGRATION_PINCODE_BLOCKED = 67|INVALID_PASSWORD_FORMAT = 69|FEATURE_RESTRICTED = 70|MESSAGE_NOT_DESTRUCTIBLE = 71|PAID_CALL_REDEEM_FAILED = 72|PREVENTED_JOIN_BY_TICKET = 73|SEND_MESSAGE_NOT_PERMITTED_FROM_LINE_AT = 75|SEND_MESSAGE_NOT_PERMITTED_WHILE_AUTO_REPLY = 76|SECURITY_CENTER_NOT_VERIFIED = 77|SECURITY_CENTER_BLOCKED_BY_SETTING = 78|SECURITY_CENTER_BLOCKED = 79|TALK_PROXY_EXCEPTION = 80|E2EE_INVALID_PROTOCOL = 81|E2EE_RETRY_ENCRYPT = 82|E2EE_UPDATE_SENDER_KEY = 83|E2EE_UPDATE_RECEIVER_KEY = 84|E2EE_INVALID_ARGUMENT = 85|E2EE_INVALID_VERSION = 86|E2EE_SENDER_DISABLED = 87|E2EE_RECEIVER_DISABLED = 88|E2EE_SENDER_NOT_ALLOWED = 89|E2EE_RECEIVER_NOT_ALLOWED = 90|E2EE_RESEND_FAIL = 91|E2EE_RESEND_OK = 92|HITOKOTO_BACKUP_NO_AVAILABLE_DATA = 93|E2EE_UPDATE_PRIMARY_DEVICE = 94|SUCCESS = 95|CANCEL = 96|E2EE_PRIMARY_NOT_SUPPORT = 97|E2EE_RETRY_PLAIN = 98|E2EE_RECREATE_GROUP_KEY = 99|E2EE_GROUP_TOO_MANY_MEMBERS = 100|SERVER_BUSY = 101|NOT_ALLOWED_ADD_FOLLOW = 102|INCOMING_FRIEND_REQUEST_LIMIT = 103|OUTGOING_FRIEND_REQUEST_LIMIT = 104|OUTGOING_FRIEND_REQUEST_QUOTA = 105|DUPLICATED = 106|BANNED = 107"];
node [fillcolor=white];
FeatureType [label="enum FeatureType|OBS_VIDEO = 1|OBS_GENERAL = 2"];
node [fillcolor=white];
GroupAttribute [label="enum GroupAttribute|NAME = 1|PICTURE_STATUS = 2|ALL = 255|PREVENTED_JOIN_BY_TICKET = 4|NOTIFICATION_SETTING = 8"];
node [fillcolor=white];
IdentityProvider [label="enum IdentityProvider|UNKNOWN = 0|LINE = 1|NAVER_KR = 2|LINE_PHONE = 3"];
node [fillcolor=white];
LoginResultType [label="enum LoginResultType|SUCCESS = 1|REQUIRE_QRCODE = 2|REQUIRE_DEVICE_CONFIRM = 3|REQUIRE_SMS_CONFIRM = 4"];
node [fillcolor=white];
MessageOperationType [label="enum MessageOperationType|SEND_MESSAGE = 1|RECEIVE_MESSAGE = 2|READ_MESSAGE = 3|NOTIFIED_READ_MESSAGE = 4|NOTIFIED_JOIN_CHAT = 5|FAILED_SEND_MESSAGE = 6|SEND_CONTENT = 7|SEND_CONTENT_RECEIPT = 8|SEND_CHAT_REMOVED = 9|REMOVE_ALL_MESSAGES = 10"];
node [fillcolor=white];
MIDType [label="enum MIDType|USER = 0|ROOM = 1|GROUP = 2|SQUARE = 3|SQUARE_CHAT = 4|SQUARE_MEMBER = 5|BOT = 6"];
node [fillcolor=white];
ServiceCode [label="enum ServiceCode|UNKNOWN = 0|TALK = 1|SQUARE = 2"];
node [fillcolor=white];
FriendRequestDirection [label="enum FriendRequestDirection|INCOMING = 1|OUTGOING = 2"];
node [fillcolor=white];
FriendRequestMethod [label="enum FriendRequestMethod|TIMELINE = 1|NEARBY = 2|SQUARE = 3"];
node [fillcolor=white];
FriendRequestStatus [label="enum FriendRequestStatus|NONE = 0|AVAILABLE = 1|ALREADY_REQUESTED = 2|UNAVAILABLE = 3"];
node [fillcolor=white];
ModificationType [label="enum ModificationType|ADD = 0|REMOVE = 1|MODIFY = 2"];
node [fillcolor=white];
NotificationItemFetchMode [label="enum NotificationItemFetchMode|ALL = 0|APPEND = 1"];
node [fillcolor=white];
NotificationQueueType [label="enum NotificationQueueType|GLOBAL = 1|MESSAGE = 2|PRIMARY = 3"];
node [fillcolor=white];
GroupCallMediaType [label="enum GroupCallMediaType|AUDIO = 1|VIDEO = 2"];
node [fillcolor=white];
PersonalInfo [label="enum PersonalInfo|EMAIL = 0|PHONE = 1|BIRTHDAY = 2|RAW_BIRTHDAY = 3"];
node [fillcolor=white];
NotificationStatus [label="enum NotificationStatus|NOTIFICATION_ITEM_EXIST = 1|TIMELINE_ITEM_EXIST = 2|NOTE_GROUP_NEW_ITEM_EXIST = 4|TIMELINE_BUDDYGROUP_CHANGED = 8|NOTE_ONE_TO_ONE_NEW_ITEM_EXIST = 16|ALBUM_ITEM_EXIST = 32|TIMELINE_ITEM_DELETED = 64|OTOGROUP_ITEM_EXIST = 128|GROUPHOME_NEW_ITEM_EXIST = 256|GROUPHOME_HIDDEN_ITEM_CHANGED = 512|NOTIFICATION_ITEM_CHANGED = 1024|BEAD_ITEM_HIDE = 2048|BEAD_ITEM_SHOW = 4096"];
node [fillcolor=white];
NotificationType [label="enum NotificationType|APPLE_APNS = 1|GOOGLE_C2DM = 2|NHN_NNI = 3|SKT_AOM = 4|MS_MPNS = 5|RIM_BIS = 6|GOOGLE_GCM = 7|NOKIA_NNAPI = 8|TIZEN = 9|LINE_BOT = 17|LINE_WAP = 18|APPLE_APNS_VOIP = 19|MS_WNS = 20|GOOGLE_FCM = 21"];
node [fillcolor=white];
OpStatus [label="enum OpStatus|NORMAL = 0|ALERT_DISABLED = 1|ALWAYS = 2"];
node [fillcolor=white];
OpType [label="enum OpType|END_OF_OPERATION = 0|UPDATE_PROFILE = 1|UPDATE_SETTINGS = 36|NOTIFIED_UPDATE_PROFILE = 2|REGISTER_USERID = 3|ADD_CONTACT = 4|NOTIFIED_ADD_CONTACT = 5|BLOCK_CONTACT = 6|UNBLOCK_CONTACT = 7|NOTIFIED_RECOMMEND_CONTACT = 8|CREATE_GROUP = 9|UPDATE_GROUP = 10|NOTIFIED_UPDATE_GROUP = 11|INVITE_INTO_GROUP = 12|NOTIFIED_INVITE_INTO_GROUP = 13|CANCEL_INVITATION_GROUP = 31|NOTIFIED_CANCEL_INVITATION_GROUP = 32|LEAVE_GROUP = 14|NOTIFIED_LEAVE_GROUP = 15|ACCEPT_GROUP_INVITATION = 16|NOTIFIED_ACCEPT_GROUP_INVITATION = 17|REJECT_GROUP_INVITATION = 34|NOTIFIED_REJECT_GROUP_INVITATION = 35|KICKOUT_FROM_GROUP = 18|NOTIFIED_KICKOUT_FROM_GROUP = 19|CREATE_ROOM = 20|INVITE_INTO_ROOM = 21|NOTIFIED_INVITE_INTO_ROOM = 22|LEAVE_ROOM = 23|NOTIFIED_LEAVE_ROOM = 24|SEND_MESSAGE = 25|RECEIVE_MESSAGE = 26|SEND_MESSAGE_RECEIPT = 27|RECEIVE_MESSAGE_RECEIPT = 28|SEND_CONTENT_RECEIPT = 29|RECEIVE_ANNOUNCEMENT = 30|NOTIFIED_UNREGISTER_USER = 33|INVITE_VIA_EMAIL = 38|NOTIFIED_REGISTER_USER = 37|NOTIFIED_REQUEST_RECOVERY = 39|SEND_CHAT_CHECKED = 40|SEND_CHAT_REMOVED = 41|NOTIFIED_FORCE_SYNC = 42|SEND_CONTENT = 43|SEND_MESSAGE_MYHOME = 44|NOTIFIED_UPDATE_CONTENT_PREVIEW = 45|REMOVE_ALL_MESSAGES = 46|NOTIFIED_UPDATE_PURCHASES = 47|DUMMY = 48|UPDATE_CONTACT = 49|NOTIFIED_RECEIVED_CALL = 50|CANCEL_CALL = 51|NOTIFIED_REDIRECT = 52|NOTIFIED_CHANNEL_SYNC = 53|FAILED_SEND_MESSAGE = 54|NOTIFIED_READ_MESSAGE = 55|FAILED_EMAIL_CONFIRMATION = 56|NOTIFIED_CHAT_CONTENT = 58|NOTIFIED_PUSH_NOTICENTER_ITEM = 59|NOTIFIED_JOIN_CHAT = 60|NOTIFIED_LEAVE_CHAT = 61|NOTIFIED_TYPING = 62|FRIEND_REQUEST_ACCEPTED = 63|DESTROY_MESSAGE = 64|NOTIFIED_DESTROY_MESSAGE = 65|UPDATE_PUBLICKEYCHAIN = 66|NOTIFIED_UPDATE_PUBLICKEYCHAIN = 67|NOTIFIED_BLOCK_CONTACT = 68|NOTIFIED_UNBLOCK_CONTACT = 69|UPDATE_GROUPPREFERENCE = 70|NOTIFIED_PAYMENT_EVENT = 71|REGISTER_E2EE_PUBLICKEY = 72|NOTIFIED_E2EE_KEY_EXCHANGE_REQ = 73|NOTIFIED_E2EE_KEY_EXCHANGE_RESP = 74|NOTIFIED_E2EE_MESSAGE_RESEND_REQ = 75|NOTIFIED_E2EE_MESSAGE_RESEND_RESP = 76|NOTIFIED_E2EE_KEY_UPDATE = 77|NOTIFIED_BUDDY_UPDATE_PROFILE = 78|NOTIFIED_UPDATE_LINEAT_TABS = 79|UPDATE_ROOM = 80|NOTIFIED_BEACON_DETECTED = 81|UPDATE_EXTENDED_PROFILE = 82|ADD_FOLLOW = 83|NOTIFIED_ADD_FOLLOW = 84|DELETE_FOLLOW = 85|NOTIFIED_DELETE_FOLLOW = 86|UPDATE_TIMELINE_SETTINGS = 87|NOTIFIED_FRIEND_REQUEST = 88|UPDATE_RINGBACK_TONE = 89|NOTIFIED_POSTBACK = 90|RECEIVE_READ_WATERMARK = 91|NOTIFIED_MESSAGE_DELIVERED = 92|NOTIFIED_UPDATE_CHAT_BAR = 93|NOTIFIED_CHATAPP_INSTALLED = 94|NOTIFIED_CHATAPP_UPDATED = 95|NOTIFIED_CHATAPP_NEW_MARK = 96|NOTIFIED_CHATAPP_DELETED = 97|NOTIFIED_CHATAPP_SYNC = 98|NOTIFIED_UPDATE_MESSAGE = 99"];
node [fillcolor=white];
PayloadType [label="enum PayloadType|PAYLOAD_BUY = 101|PAYLOAD_CS = 111|PAYLOAD_BONUS = 121|PAYLOAD_EVENT = 131"];
node [fillcolor=white];
PaymentPgType [label="enum PaymentPgType|PAYMENT_PG_NONE = 0|PAYMENT_PG_AU = 1|PAYMENT_PG_AL = 2"];
node [fillcolor=white];
PaymentType [label="enum PaymentType|PAYMENT_APPLE = 1|PAYMENT_GOOGLE = 2"];
node [fillcolor=white];
ProductBannerLinkType [label="enum ProductBannerLinkType|BANNER_LINK_NONE = 0|BANNER_LINK_ITEM = 1|BANNER_LINK_URL = 2|BANNER_LINK_CATEGORY = 3"];
node [fillcolor=white];
ProductEventType [label="enum ProductEventType|NO_EVENT = 0|CARRIER_ANY = 65537|BUDDY_ANY = 131073|INSTALL_IOS = 196609|INSTALL_ANDROID = 196610|MISSION_ANY = 262145|MUSTBUY_ANY = 327681"];
node [fillcolor=white];
StickerResourceType [label="enum StickerResourceType|STATIC = 1|ANIMATION = 2|SOUND = 3|ANIMATION_SOUND = 4|POPUP = 5|POPUP_SOUND = 6"];
node [fillcolor=white];
PlaceSearchProvider [label="enum PlaceSearchProvider|GOOGLE = 0|BAIDU = 1"];
node [fillcolor=white];
PointErrorCode [label="enum PointErrorCode|REQUEST_DUPLICATION = 3001|INVALID_PARAMETER = 3002|NOT_ENOUGH_BALANCE = 3003|AUTHENTICATION_FAIL = 3004|API_ACCESS_FORBIDDEN = 3005|MEMBER_ACCOUNT_NOT_FOUND = 3006|SERVICE_ACCOUNT_NOT_FOUND = 3007|TRANSACTION_NOT_FOUND = 3008|ALREADY_REVERSED_TRANSACTION = 3009|MESSAGE_NOT_READABLE = 3010|HTTP_REQUEST_METHOD_NOT_SUPPORTED = 3011|HTTP_MEDIA_TYPE_NOT_SUPPORTED = 3012|NOT_ALLOWED_TO_DEPOSIT = 3013|NOT_ALLOWED_TO_PAY = 3014|TRANSACTION_ACCESS_FORBIDDEN = 3015|INVALID_SERVICE_CONFIGURATION = 4001|DCS_COMMUNICATION_FAIL = 5004|UPDATE_BALANCE_FAIL = 5007|SYSTEM_ERROR = 5999|SYSTEM_MAINTENANCE = 5888"];
node [fillcolor=white];
ProfileAttribute [label="enum ProfileAttribute|ALL = 511|EMAIL = 1|DISPLAY_NAME = 2|PHONETIC_NAME = 4|PICTURE = 8|STATUS_MESSAGE = 16|ALLOW_SEARCH_BY_USERID = 32|ALLOW_SEARCH_BY_EMAIL = 64|BUDDY_STATUS = 128|MUSIC_PROFILE = 256"];
node [fillcolor=white];
PublicType [label="enum PublicType|HIDDEN = 0|PUBLIC = 1000"];
node [fillcolor=white];
RedirectType [label="enum RedirectType|NONE = 0|EXPIRE_SECOND = 1"];
node [fillcolor=white];
RegistrationType [label="enum RegistrationType|PHONE = 0|EMAIL_WAP = 1|FACEBOOK = 2305|SINA = 2306|RENREN = 2307|FEIXIN = 2308"];
node [fillcolor=white];
ChatRoomAnnouncementType [label="enum ChatRoomAnnouncementType|MESSAGE = 0|NOTE = 1"];
node [fillcolor=white];
SettingsAttribute [label="enum SettingsAttribute|ALL = 2147483647|NOTIFICATION_ENABLE = 1|NOTIFICATION_MUTE_EXPIRATION = 2|NOTIFICATION_NEW_MESSAGE = 4|NOTIFICATION_GROUP_INVITATION = 8|NOTIFICATION_SHOW_MESSAGE = 16|NOTIFICATION_INCOMING_CALL = 32|NOTIFICATION_SOUND_MESSAGE = 256|NOTIFICATION_SOUND_GROUP = 512|NOTIFICATION_DISABLED_WITH_SUB = 65536|NOTIFICATION_PAYMENT = 131072|PRIVACY_SYNC_CONTACTS = 64|PRIVACY_SEARCH_BY_PHONE_NUMBER = 128|PRIVACY_SEARCH_BY_USERID = 8192|PRIVACY_SEARCH_BY_EMAIL = 16384|PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN = 2097152|PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME = 8388608|PRIVACY_ALLOW_FRIEND_REQUEST = 1073741824|PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND = 33554432|PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL = 67108864|PRIVACY_AGREE_USE_PAIDCALL = 134217728|CONTACT_MY_TICKET = 1024|IDENTITY_PROVIDER = 2048|IDENTITY_IDENTIFIER = 4096|SNS_ACCOUNT = 524288|PHONE_REGISTRATION = 1048576|PREFERENCE_LOCALE = 32768|CUSTOM_MODE = 4194304|EMAIL_CONFIRMATION_STATUS = 16777216|ACCOUNT_MIGRATION_PINCODE = 268435456|ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE = 536870912|SECURITY_CENTER_SETTINGS = 262144"];
node [fillcolor=white];
SettingsAttributeEx [label="enum SettingsAttributeEx|NOTIFICATION_ENABLE = 0|NOTIFICATION_MUTE_EXPIRATION = 1|NOTIFICATION_NEW_MESSAGE = 2|NOTIFICATION_GROUP_INVITATION = 3|NOTIFICATION_SHOW_MESSAGE = 4|NOTIFICATION_INCOMING_CALL = 5|NOTIFICATION_SOUND_MESSAGE = 8|NOTIFICATION_SOUND_GROUP = 9|NOTIFICATION_DISABLED_WITH_SUB = 16|NOTIFICATION_PAYMENT = 17|NOTIFICATION_MENTION = 40|NOTIFICATION_THUMBNAIL = 45|PRIVACY_SYNC_CONTACTS = 6|PRIVACY_SEARCH_BY_PHONE_NUMBER = 7|PRIVACY_SEARCH_BY_USERID = 13|PRIVACY_SEARCH_BY_EMAIL = 14|PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN = 21|PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME = 23|PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME = 35|PRIVACY_ALLOW_FRIEND_REQUEST = 30|PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND = 25|PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL = 26|PRIVACY_AGREE_USE_PAIDCALL = 27|CONTACT_MY_TICKET = 10|IDENTITY_PROVIDER = 11|IDENTITY_IDENTIFIER = 12|SNS_ACCOUNT = 19|PHONE_REGISTRATION = 20|PREFERENCE_LOCALE = 15|CUSTOM_MODE = 22|EMAIL_CONFIRMATION_STATUS = 24|ACCOUNT_MIGRATION_PINCODE = 28|ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE = 29|SECURITY_CENTER_SETTINGS = 18|E2EE_ENABLE = 33|ENABLE_SOUND_TO_TEXT = 47|HITOKOTO_BACKUP_REQUESTED = 34|CONTACT_ALLOW_FOLLOWING = 36|PRIVACY_ALLOW_NEARBY = 37|AGREEMENT_NEARBY = 38|AGREEMENT_SQUARE = 39|ALLOW_UNREGISTRATION_SECONDARY_DEVICE = 41|AGREEMENT_BOT_USE = 42|AGREEMENT_SHAKE_FUNCTION = 43|AGREEMENT_MOBILE_CONTACT_NAME = 44|AGREEMENT_SOUND_TO_TEXT = 46"];
node [fillcolor=white];
SnsIdType [label="enum SnsIdType|FACEBOOK = 1|SINA = 2|RENREN = 3|FEIXIN = 4|BBM = 5"];
node [fillcolor=white];
SpammerReason [label="enum SpammerReason|OTHER = 0|ADVERTISING = 1|GENDER_HARASSMENT = 2|HARASSMENT = 3"];
node [fillcolor=white];
SyncActionType [label="enum SyncActionType|SYNC = 0|REPORT = 1"];
node [fillcolor=white];
SpotCategory [label="enum SpotCategory|UNKNOWN = 0|GOURMET = 1|BEAUTY = 2|TRAVEL = 3|SHOPPING = 4|ENTERTAINMENT = 5|SPORTS = 6|TRANSPORT = 7|LIFE = 8|HOSPITAL = 9|FINANCE = 10|EDUCATION = 11|OTHER = 12|ALL = 10000"];
node [fillcolor=white];
SyncCategory [label="enum SyncCategory|PROFILE = 0|SETTINGS = 1|OPS = 2|CONTACT = 3|RECOMMEND = 4|BLOCK = 5|GROUP = 6|ROOM = 7|NOTIFICATION = 8|ADDRESS_BOOK = 9"];
node [fillcolor=white];
TMessageBoxStatus [label="enum TMessageBoxStatus|ACTIVATED = 1|UNREAD = 2"];
node [fillcolor=white];
UniversalNotificationServiceErrorCode [label="enum UniversalNotificationServiceErrorCode|INTERNAL_ERROR = 0|INVALID_KEY = 1|ILLEGAL_ARGUMENT = 2|TOO_MANY_REQUEST = 3|AUTHENTICATION_FAILED = 4|NO_WRITE_PERMISSION = 5"];
node [fillcolor=white];
UnregistrationReason [label="enum UnregistrationReason|UNREGISTRATION_REASON_UNREGISTER_USER = 1|UNREGISTRATION_REASON_UNBIND_DEVICE = 2"];
node [fillcolor=white];
UserAgeType [label="enum UserAgeType|OVER = 1|UNDER = 2|UNDEFINED = 3"];
node [fillcolor=white];
VerificationMethod [label="enum VerificationMethod|NO_AVAILABLE = 0|PIN_VIA_SMS = 1|CALLERID_INDIGO = 2|PIN_VIA_TTS = 4|SKIP = 10"];
node [fillcolor=white];
VerificationResult [label="enum VerificationResult|FAILED = 0|OK_NOT_REGISTERED_YET = 1|OK_REGISTERED_WITH_SAME_DEVICE = 2|OK_REGISTERED_WITH_ANOTHER_DEVICE = 3"];
node [fillcolor=white];
WapInvitationType [label="enum WapInvitationType|REGISTRATION = 1|CHAT = 2"];
node [fillcolor=white];
MediaType [label="enum MediaType|AUDIO = 1|VIDEO = 2"];
node [fillcolor=white];
SQErrorCode [label="enum SQErrorCode|UNKNOWN = 0|ILLEGAL_ARGUMENT = 400|AUTHENTICATION_FAILURE = 401|FORBIDDEN = 403|NOT_FOUND = 404|REVISION_MISMATCH = 409|PRECONDITION_FAILED = 410|INTERNAL_ERROR = 500|NOT_IMPLEMENTED = 501|TRY_AGAIN_LATER = 505"];
node [fillcolor=white];
SquareEventType [label="enum SquareEventType|RECEIVE_MESSAGE = 0|SEND_MESSAGE = 1|NOTIFIED_JOIN_SQUARE_CHAT = 2|NOTIFIED_INVITE_INTO_SQUARE_CHAT = 3|NOTIFIED_LEAVE_SQUARE_CHAT = 4|NOTIFIED_DESTROY_MESSAGE = 5|NOTIFIED_MARK_AS_READ = 6|NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE = 7|NOTIFIED_KICKOUT_FROM_SQUARE = 19|NOTIFIED_SHUTDOWN_SQUARE = 18|NOTIFIED_DELETE_SQUARE_CHAT = 20|NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME = 30|NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE = 31|NOTIFIED_UPDATE_SQUARE_CHAT_ANNOUNCEMENT = 37|NOTIFIED_ADD_BOT = 33|NOTIFIED_REMOVE_BOT = 34|NOTIFIED_UPDATE_SQUARE = 8|NOTIFIED_UPDATE_SQUARE_STATUS = 9|NOTIFIED_UPDATE_SQUARE_AUTHORITY = 10|NOTIFIED_UPDATE_SQUARE_MEMBER = 11|NOTIFIED_UPDATE_SQUARE_CHAT = 12|NOTIFIED_UPDATE_SQUARE_CHAT_STATUS = 13|NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER = 14|NOTIFIED_CREATE_SQUARE_MEMBER = 15|NOTIFIED_CREATE_SQUARE_CHAT_MEMBER = 16|NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION = 17|NOTIFIED_UPDATE_SQUARE_FEATURE_SET = 32|NOTIFIED_UPDATE_SQUARE_NOTE_STATUS = 36|NOTIFICATION_JOIN_REQUEST = 21|NOTIFICATION_JOINED = 22|NOTIFICATION_PROMOTED_COADMIN = 23|NOTIFICATION_PROMOTED_ADMIN = 24|NOTIFICATION_DEMOTED_MEMBER = 25|NOTIFICATION_KICKED_OUT = 26|NOTIFICATION_SQUARE_DELETE = 27|NOTIFICATION_SQUARE_CHAT_DELETE = 28|NOTIFICATION_MESSAGE = 29"];
node [fillcolor=white];
SquareMemberRelationState [label="enum SquareMemberRelationState|NONE = 1|BLOCKED = 2"];
node [fillcolor=white];
SquareFeatureControlState [label="enum SquareFeatureControlState|DISABLED = 1|ENABLED = 2"];
node [fillcolor=white];
BooleanState [label="enum BooleanState|NONE = 0|OFF = 1|ON = 2"];
node [fillcolor=white];
SquareType [label="enum SquareType|CLOSED = 0|OPEN = 1"];
node [fillcolor=white];
SquareChatType [label="enum SquareChatType|OPEN = 1|SECRET = 2|ONE_ON_ONE = 3|SQUARE_DEFAULT = 4"];
node [fillcolor=white];
SquareErrorCode [label="enum SquareErrorCode|UNKNOWN = 0|INTERNAL_ERROR = 500|NOT_IMPLEMENTED = 501|TRY_AGAIN_LATER = 503|MAINTENANCE = 505|ILLEGAL_ARGUMENT = 400|AUTHENTICATION_FAILURE = 401|FORBIDDEN = 403|NOT_FOUND = 404|REVISION_MISMATCH = 409|PRECONDITION_FAILED = 410"];
node [fillcolor=white];
SquareChatState [label="enum SquareChatState|ALIVE = 0|DELETED = 1|SUSPENDED = 2"];
node [fillcolor=white];
SquareFeatureSetAttribute [label="enum SquareFeatureSetAttribute|CREATING_SECRET_SQUARE_CHAT = 1|INVITING_INTO_OPEN_SQUARE_CHAT = 2"];
node [fillcolor=white];
SquareMembershipState [label="enum SquareMembershipState|JOIN_REQUESTED = 1|JOINED = 2|REJECTED = 3|LEFT = 4|KICK_OUT = 5|BANNED = 6|DELETED = 7"];
node [fillcolor=white];
SquareChatMemberAttribute [label="enum SquareChatMemberAttribute|MEMBERSHIP_STATE = 4|NOTIFICATION_MESSAGE = 6"];
node [fillcolor=white];
SquareMemberRole [label="enum SquareMemberRole|ADMIN = 1|CO_ADMIN = 2|MEMBER = 10"];
node [fillcolor=white];
PreconditionFailedExtraInfo [label="enum PreconditionFailedExtraInfo|DUPLICATED_DISPLAY_NAME = 0"];
node [fillcolor=white];
SquareChatMembershipState [label="enum SquareChatMembershipState|JOINED = 1|LEFT = 2"];
node [fillcolor=white];
FetchDirection [label="enum FetchDirection|FORWARD = 1|BACKWARD = 2"];
node [fillcolor=white];
SquareAttribute [label="enum SquareAttribute|NAME = 1|WELCOME_MESSAGE = 2|PROFILE_IMAGE = 3|DESCRIPTION = 4|SEARCHABLE = 6|CATEGORY = 7|INVITATION_URL = 8|ABLE_TO_USE_INVITATION_URL = 9|STATE = 10"];
node [fillcolor=white];
SquareAuthorityAttribute [label="enum SquareAuthorityAttribute|UPDATE_SQUARE_PROFILE = 1|INVITE_NEW_MEMBER = 2|APPROVE_JOIN_REQUEST = 3|CREATE_POST = 4|CREATE_OPEN_SQUARE_CHAT = 5|DELETE_SQUARE_CHAT_OR_POST = 6|REMOVE_SQUARE_MEMBER = 7|GRANT_ROLE = 8|ENABLE_INVITATION_TICKET = 9|CREATE_CHAT_ANNOUNCEMENT = 10"];
node [fillcolor=white];
SquareEventStatus [label="enum SquareEventStatus|NORMAL = 1|ALERT_DISABLED = 2"];
node [fillcolor=white];
SuggestDictionaryIncrementStatus [label="enum SuggestDictionaryIncrementStatus|SUCCESS = 0|INVALID_REVISION = 1|TOO_LARGE_DATA = 2|SCHEME_CHANGED = 3|RETRY = 4|FAIL = 5|TOO_OLD_DATA = 6"];
node [fillcolor=beige];
Location [label="struct Location|<field_title>title :: string|<field_address>address :: string|<field_latitude>latitude :: double|<field_longitude>longitude :: double|<field_phone>phone :: string"];
node [fillcolor=beige];
MessageBoxV2MessageId [label="struct MessageBoxV2MessageId|<field_deliveredTime>deliveredTime :: i64|<field_messageId>messageId :: i64"];
node [fillcolor=beige];
MessageCommitResult [label="struct MessageCommitResult|<field_requestId>requestId :: string|<field_state>state :: BuddyResultState|<field_messageStoreRequestId>messageStoreRequestId :: string|<field_messageIds>messageIds :: list\<string\>|<field_receiverCount>receiverCount :: i64|<field_successCount>successCount :: i64|<field_failCount>failCount :: i64|<field_blockCount>blockCount :: i64|<field_unregisteredCount>unregisteredCount :: i64|<field_unrelatedCount>unrelatedCount :: i64|<field_errorDescription>errorDescription :: string"];
node [fillcolor=beige];
CallHost [label="struct CallHost|<field_host>host :: string|<field_port>port :: i32|<field_zone>zone :: string"];
node [fillcolor=beige];
AgeCheckDocomoResult [label="struct AgeCheckDocomoResult|<field_authUrl>authUrl :: string|<field_userAgeType>userAgeType :: UserAgeType"];
node [fillcolor=beige];
AgeCheckRequestResult [label="struct AgeCheckRequestResult|<field_authUrl>authUrl :: string|<field_sessionId>sessionId :: string"];
node [fillcolor=beige];
TextMessageAnnouncementContents [label="struct TextMessageAnnouncementContents|<field_messageId>messageId :: string|<field_text>text :: string|<field_senderSquareMemberMid>senderSquareMemberMid :: string|<field_createdAt>createdAt :: i64"];
node [fillcolor=beige];
SquareChatAnnouncementContents [label="struct SquareChatAnnouncementContents|<field_textMessageAnnouncementContents>textMessageAnnouncementContents :: TextMessageAnnouncementContents"];
node [fillcolor=beige];
SquareChatAnnouncement [label="struct SquareChatAnnouncement|<field_announcementSeq>announcementSeq :: i64|<field_type>type :: SquareChatAnnouncementType|<field_contents>contents :: SquareChatAnnouncementContents"];
node [fillcolor=beige];
Announcement [label="struct Announcement|<field_index>index :: i32|<field_forceUpdate>forceUpdate :: bool|<field_title>title :: string|<field_text>text :: string|<field_createdTime>createdTime :: i64|<field_pictureUrl>pictureUrl :: string|<field_thumbnailUrl>thumbnailUrl :: string"];
node [fillcolor=beige];
ChannelProvider [label="struct ChannelProvider|<field_name>name :: string"];
node [fillcolor=beige];
E2EEPublicKey [label="struct E2EEPublicKey|<field_version>version :: i32|<field_keyId>keyId :: i32|<field_keyData>keyData :: binary|<field_createdTime>createdTime :: i64"];
node [fillcolor=beige];
ChannelDomain [label="struct ChannelDomain|<field_host>host :: string|<field_removed>removed :: bool"];
node [fillcolor=beige];
E2EENegotiationResult [label="struct E2EENegotiationResult|<field_allowedTypes>allowedTypes :: set\<ContentType\>|<field_publicKey>publicKey :: E2EEPublicKey"];
node [fillcolor=beige];
OTPResult [label="struct OTPResult|<field_otpId>otpId :: string|<field_otp>otp :: string"];
node [fillcolor=beige];
Square [label="struct Square|<field_mid>mid :: string|<field_name>name :: string|<field_welcomeMessage>welcomeMessage :: string|<field_profileImageObsHash>profileImageObsHash :: string|<field_desc>desc :: string|<field_searchable>searchable :: bool|<field_type>type :: SquareType|<field_categoryID>categoryID :: i32|<field_invitationURL>invitationURL :: string|<field_revision>revision :: i64|<field_ableToUseInvitationTicket>ableToUseInvitationTicket :: bool|<field_state>state :: SquareState"];
node [fillcolor=beige];
SquareAuthority [label="struct SquareAuthority|<field_squareMid>squareMid :: string|<field_updateSquareProfile>updateSquareProfile :: SquareMemberRole|<field_inviteNewMember>inviteNewMember :: SquareMemberRole|<field_approveJoinRequest>approveJoinRequest :: SquareMemberRole|<field_createPost>createPost :: SquareMemberRole|<field_createOpenSquareChat>createOpenSquareChat :: SquareMemberRole|<field_deleteSquareChatOrPost>deleteSquareChatOrPost :: SquareMemberRole|<field_removeSquareMember>removeSquareMember :: SquareMemberRole|<field_grantRole>grantRole :: SquareMemberRole|<field_enableInvitationTicket>enableInvitationTicket :: SquareMemberRole|<field_revision>revision :: i64"];
node [fillcolor=beige];
SquarePreference [label="struct SquarePreference|<field_favoriteTimestamp>favoriteTimestamp :: i64|<field_notiForNewJoinRequest>notiForNewJoinRequest :: bool"];
node [fillcolor=beige];
SquareMember [label="struct SquareMember|<field_squareMemberMid>squareMemberMid :: string|<field_squareMid>squareMid :: string|<field_displayName>displayName :: string|<field_profileImageObsHash>profileImageObsHash :: string|<field_ableToReceiveMessage>ableToReceiveMessage :: bool|<field_membershipState>membershipState :: SquareMembershipState|<field_role>role :: SquareMemberRole|<field_revision>revision :: i64|<field_preference>preference :: SquarePreference|<field_joinMessage>joinMessage :: string"];
node [fillcolor=beige];
SquareMemberRelation [label="struct SquareMemberRelation|<field_state>state :: SquareMemberRelationState|<field_revision>revision :: i64"];
node [fillcolor=beige];
SquareFeature [label="struct SquareFeature|<field_controlState>controlState :: SquareFeatureControlState|<field_booleanValue>booleanValue :: BooleanState"];
node [fillcolor=beige];
SquareFeatureSet [label="struct SquareFeatureSet|<field_squareMid>squareMid :: string|<field_revision>revision :: i64|<field_creatingSecretSquareChat>creatingSecretSquareChat :: SquareFeature|<field_invitingIntoOpenSquareChat>invitingIntoOpenSquareChat :: SquareFeature"];
node [fillcolor=beige];
SquareStatus [label="struct SquareStatus|<field_memberCount>memberCount :: i32|<field_joinRequestCount>joinRequestCount :: i32|<field_lastJoinRequestAt>lastJoinRequestAt :: i64|<field_openChatCount>openChatCount :: i32"];
node [fillcolor=beige];
SquareChat [label="struct SquareChat|<field_squareChatMid>squareChatMid :: string|<field_squareMid>squareMid :: string|<field_type>type :: SquareChatType|<field_name>name :: string|<field_chatImageObsHash>chatImageObsHash :: string|<field_squareChatRevision>squareChatRevision :: i64|<field_maxMemberCount>maxMemberCount :: i32|<field_state>state :: SquareChatState"];
node [fillcolor=beige];
NoteStatus [label="struct NoteStatus|<field_noteCount>noteCount :: i32|<field_latestCreatedAt>latestCreatedAt :: i64"];
node [fillcolor=beige];
SquareInfo [label="struct SquareInfo|<field_square>square :: Square|<field_squareStatus>squareStatus :: SquareStatus|<field_squareNoteStatus>squareNoteStatus :: NoteStatus"];
node [fillcolor=beige];
BotUseInfo [label="struct BotUseInfo|<field_botUseAgreementAccepted>botUseAgreementAccepted :: bool|<field_botInFriends>botInFriends :: bool|<field_primaryApplication>primaryApplication :: string|<field_locale>locale :: string"];
node [fillcolor=beige];
PaidCallAdCountry [label="struct PaidCallAdCountry|<field_countryCode>countryCode :: string|<field_rateDivision>rateDivision :: string"];
node [fillcolor=beige];
PaidCallAdResult [label="struct PaidCallAdResult|<field_adRemains>adRemains :: i32"];
node [fillcolor=beige];
PaidCallBalance [label="struct PaidCallBalance|<field_productType>productType :: PaidCallProductType|<field_productName>productName :: string|<field_unit>unit :: string|<field_limitedPaidBalance>limitedPaidBalance :: i32|<field_limitedFreeBalance>limitedFreeBalance :: i32|<field_unlimitedPaidBalance>unlimitedPaidBalance :: i32|<field_unlimitedFreeBalance>unlimitedFreeBalance :: i32|<field_startTime>startTime :: i64|<field_endTime>endTime :: i64|<field_autopayEnabled>autopayEnabled :: bool"];
node [fillcolor=beige];
PaidCallCurrencyExchangeRate [label="struct PaidCallCurrencyExchangeRate|<field_currencyCode>currencyCode :: string|<field_currencyName>currencyName :: string|<field_currencySign>currencySign :: string|<field_preferred>preferred :: bool|<field_coinRate>coinRate :: string|<field_creditRate>creditRate :: string"];
node [fillcolor=beige];
ExtendedProfileBirthday [label="struct ExtendedProfileBirthday|<field_year>year :: string|<field_yearPrivacyLevelType>yearPrivacyLevelType :: PrivacyLevelType|<field_yearEnabled>yearEnabled :: bool|<field_day>day :: string|<field_dayPrivacyLevelType>dayPrivacyLevelType :: PrivacyLevelType|<field_dayEnabled>dayEnabled :: bool"];
node [fillcolor=beige];
ExtendedProfile [label="struct ExtendedProfile|<field_birthday>birthday :: ExtendedProfileBirthday"];
node [fillcolor=beige];
PaidCallDialing [label="struct PaidCallDialing|<field_type>type :: PaidCallType|<field_dialedNumber>dialedNumber :: string|<field_serviceDomain>serviceDomain :: string|<field_productType>productType :: PaidCallProductType|<field_productName>productName :: string|<field_multipleProduct>multipleProduct :: bool|<field_callerIdStatus>callerIdStatus :: PaidCallerIdStatus|<field_balance>balance :: i32|<field_unit>unit :: string|<field_rate>rate :: i32|<field_displayCode>displayCode :: string|<field_calledNumber>calledNumber :: string|<field_calleeNationalNumber>calleeNationalNumber :: string|<field_calleeCallingCode>calleeCallingCode :: string|<field_rateDivision>rateDivision :: string|<field_adMaxMin>adMaxMin :: i32|<field_adRemains>adRemains :: i32|<field_adSessionId>adSessionId :: string"];
node [fillcolor=beige];
SpotItem [label="struct SpotItem|<field_name>name :: string|<field_phone>phone :: string|<field_category>category :: SpotCategory|<field_mid>mid :: string|<field_countryAreaCode>countryAreaCode :: string|<field_freePhoneCallable>freePhoneCallable :: bool"];
node [fillcolor=beige];
SpotNearbyItem [label="struct SpotNearbyItem|<field_spotItem>spotItem :: SpotItem|<field_location>location :: Location"];
node [fillcolor=beige];
SpotNearbyResponse [label="struct SpotNearbyResponse|<field_spotNearbyItems>spotNearbyItems :: list\<SpotNearbyItem\>"];
node [fillcolor=beige];
SpotPhoneNumberResponse [label="struct SpotPhoneNumberResponse|<field_spotItems>spotItems :: list\<SpotItem\>"];
node [fillcolor=beige];
PaidCallHistory [label="struct PaidCallHistory|<field_seq>seq :: i64|<field_type>type :: PaidCallType|<field_dialedNumber>dialedNumber :: string|<field_calledNumber>calledNumber :: string|<field_toMid>toMid :: string|<field_toName>toName :: string|<field_setupTime>setupTime :: i64|<field_startTime>startTime :: i64|<field_endTime>endTime :: i64|<field_duration>duration :: i64|<field_terminate>terminate :: i32|<field_productType>productType :: PaidCallProductType|<field_charge>charge :: i32|<field_unit>unit :: string|<field_result>result :: string"];
node [fillcolor=beige];
PaidCallHistoryResult [label="struct PaidCallHistoryResult|<field_historys>historys :: list\<PaidCallHistory\>|<field_hasNext>hasNext :: bool"];
node [fillcolor=beige];
PaidCallMetadataResult [label="struct PaidCallMetadataResult|<field_currencyExchangeRates>currencyExchangeRates :: list\<PaidCallCurrencyExchangeRate\>|<field_recommendedCountryCodes>recommendedCountryCodes :: list\<string\>|<field_adCountries>adCountries :: list\<PaidCallAdCountry\>"];
node [fillcolor=beige];
PaidCallRedeemResult [label="struct PaidCallRedeemResult|<field_eventName>eventName :: string|<field_eventAmount>eventAmount :: i32"];
node [fillcolor=beige];
PaidCallResponse [label="struct PaidCallResponse|<field_host>host :: CallHost|<field_dialing>dialing :: PaidCallDialing|<field_token>token :: string|<field_spotItems>spotItems :: list\<SpotItem\>"];
node [fillcolor=beige];
PaidCallUserRate [label="struct PaidCallUserRate|<field_countryCode>countryCode :: string|<field_rate>rate :: i32|<field_rateDivision>rateDivision :: string|<field_rateName>rateName :: string"];
node [fillcolor=beige];
ChannelInfo [label="struct ChannelInfo|<field_channelId>channelId :: string|<field_name>name :: string|<field_entryPageUrl>entryPageUrl :: string|<field_descriptionText>descriptionText :: string|<field_provider>provider :: ChannelProvider|<field_publicType>publicType :: PublicType|<field_iconImage>iconImage :: string|<field_permissions>permissions :: list\<string\>|<field_iconThumbnailImage>iconThumbnailImage :: string|<field_channelConfigurations>channelConfigurations :: list\<ChannelConfiguration\>|<field_lcsAllApiUsable>lcsAllApiUsable :: bool|<field_allowedPermissions>allowedPermissions :: set\<ChannelPermission\>|<field_channelDomains>channelDomains :: list\<ChannelDomain\>|<field_updatedTimestamp>updatedTimestamp :: i64"];
node [fillcolor=beige];
ApprovedChannelInfo [label="struct ApprovedChannelInfo|<field_channelInfo>channelInfo :: ChannelInfo|<field_approvedAt>approvedAt :: i64"];
node [fillcolor=beige];
ApprovedChannelInfos [label="struct ApprovedChannelInfos|<field_approvedChannelInfos>approvedChannelInfos :: list\<ApprovedChannelInfo\>|<field_revision>revision :: i64"];
node [fillcolor=beige];
AuthQrcode [label="struct AuthQrcode|<field_qrcode>qrcode :: string|<field_verifier>verifier :: string|<field_callbackUrl>callbackUrl :: string"];
node [fillcolor=beige];
AnalyticsInfo [label="struct AnalyticsInfo|<field_gaSamplingRate>gaSamplingRate :: double|<field_tmid>tmid :: string"];
node [fillcolor=beige];
ContactTransition [label="struct ContactTransition|<field_ownerMid>ownerMid :: string|<field_targetMid>targetMid :: string|<field_previousStatus>previousStatus :: ContactStatus|<field_resultStatus>resultStatus :: ContactStatus"];
node [fillcolor=beige];
UserTicketResponse [label="struct UserTicketResponse|<field_mid>mid :: string|<field_userTicket>userTicket :: string"];
node [fillcolor=beige];
BuddyBanner [label="struct BuddyBanner|<field_buddyBannerLinkType>buddyBannerLinkType :: BuddyBannerLinkType|<field_buddyBannerLink>buddyBannerLink :: string|<field_buddyBannerImageUrl>buddyBannerImageUrl :: string"];
node [fillcolor=beige];
BuddyDetail [label="struct BuddyDetail|<field_mid>mid :: string|<field_memberCount>memberCount :: i64|<field_onAir>onAir :: bool|<field_businessAccount>businessAccount :: bool|<field_addable>addable :: bool|<field_acceptableContentTypes>acceptableContentTypes :: set\<ContentType\>|<field_capableMyhome>capableMyhome :: bool"];
node [fillcolor=beige];
Contact [label="struct Contact|<field_mid>mid :: string|<field_createdTime>createdTime :: i64|<field_type>type :: ContactType|<field_status>status :: ContactStatus|<field_relation>relation :: ContactRelation|<field_displayName>displayName :: string|<field_phoneticName>phoneticName :: string|<field_pictureStatus>pictureStatus :: string|<field_thumbnailUrl>thumbnailUrl :: string|<field_statusMessage>statusMessage :: string|<field_displayNameOverridden>displayNameOverridden :: string|<field_favoriteTime>favoriteTime :: i64|<field_capableVoiceCall>capableVoiceCall :: bool|<field_capableVideoCall>capableVideoCall :: bool|<field_capableMyhome>capableMyhome :: bool|<field_capableBuddy>capableBuddy :: bool|<field_attributes>attributes :: i32|<field_settings>settings :: i64|<field_picturePath>picturePath :: string|<field_recommendParams>recommendParams :: string|<field_friendRequestStatus>friendRequestStatus :: FriendRequestStatus|<field_musicProfile>musicProfile :: string|<field_videoProfile>videoProfile :: string"];
node [fillcolor=beige];
BuddyList [label="struct BuddyList|<field_classification>classification :: string|<field_displayName>displayName :: string|<field_totalBuddyCount>totalBuddyCount :: i32|<field_popularContacts>popularContacts :: list\<Contact\>"];
node [fillcolor=beige];
RegisterWithPhoneNumberResult [label="struct RegisterWithPhoneNumberResult|<field_authToken>authToken :: string|<field_recommendEmailRegistration>recommendEmailRegistration :: bool|<field_certificate>certificate :: string"];
node [fillcolor=beige];
BuddyMessageRequest [label="struct BuddyMessageRequest|<field_contentType>contentType :: ContentType|<field_text>text :: string|<field_location>location :: Location|<field_content>content :: binary|<field_contentMetadata>contentMetadata :: map\<string, string\>"];
node [fillcolor=beige];
BuddyOnAirUrls [label="struct BuddyOnAirUrls|<field_hls>hls :: map\<string, string\>|<field_smoothStreaming>smoothStreaming :: map\<string, string\>"];
node [fillcolor=beige];
BuddyOnAir [label="struct BuddyOnAir|<field_mid>mid :: string|<field_freshnessLifetime>freshnessLifetime :: i64|<field_onAirId>onAirId :: string|<field_onAir>onAir :: bool|<field_text>text :: string|<field_viewerCount>viewerCount :: i64|<field_targetCount>targetCount :: i64|<field_onAirType>onAirType :: BuddyOnAirType|<field_onAirUrls>onAirUrls :: BuddyOnAirUrls"];
node [fillcolor=beige];
BuddyProfile [label="struct BuddyProfile|<field_buddyId>buddyId :: string|<field_mid>mid :: string|<field_searchId>searchId :: string|<field_displayName>displayName :: string|<field_statusMessage>statusMessage :: string|<field_contactCount>contactCount :: i64"];
node [fillcolor=beige];
CommitMessageResult [label="struct CommitMessageResult|<field_message>message :: Message|<field_code>code :: CommitMessageResultCode|<field_reason>reason :: string|<field_successCount>successCount :: i64|<field_failCount>failCount :: i64|<field_unregisterCount>unregisterCount :: i64|<field_blockCount>blockCount :: i64"];
node [fillcolor=beige];
BuddySearchResult [label="struct BuddySearchResult|<field_mid>mid :: string|<field_displayName>displayName :: string|<field_pictureStatus>pictureStatus :: string|<field_picturePath>picturePath :: string|<field_statusMessage>statusMessage :: string|<field_businessAccount>businessAccount :: bool"];
node [fillcolor=beige];
SyncParamMid [label="struct SyncParamMid|<field_mid>mid :: string|<field_diff>diff :: Diff|<field_revision>revision :: i64"];
node [fillcolor=beige];
SIMInfo [label="struct SIMInfo|<field_phoneNumber>phoneNumber :: string|<field_countryCode>countryCode :: string"];
node [fillcolor=beige];
SyncParamContact [label="struct SyncParamContact|<field_syncParamMid>syncParamMid :: SyncParamMid|<field_contactStatus>contactStatus :: ContactStatus"];
node [fillcolor=beige];
ChannelDomains [label="struct ChannelDomains|<field_channelDomains>channelDomains :: list\<ChannelDomain\>|<field_revision>revision :: i64"];
node [fillcolor=beige];
ProductCategory [label="struct ProductCategory|<field_productCategoryId>productCategoryId :: i64|<field_title>title :: string|<field_productCount>productCount :: i32|<field_newFlag>newFlag :: bool"];
node [fillcolor=beige];
ChannelInfos [label="struct ChannelInfos|<field_channelInfos>channelInfos :: list\<ChannelInfo\>|<field_revision>revision :: i64"];
node [fillcolor=beige];
ChannelNotificationSetting [label="struct ChannelNotificationSetting|<field_channelId>channelId :: string|<field_name>name :: string|<field_notificationReceivable>notificationReceivable :: bool|<field_messageReceivable>messageReceivable :: bool|<field_showDefault>showDefault :: bool"];
node [fillcolor=beige];
ChannelSyncDatas [label="struct ChannelSyncDatas|<field_channelInfos>channelInfos :: list\<ChannelInfo\>|<field_channelDomains>channelDomains :: list\<ChannelDomain\>|<field_revision>revision :: i64|<field_expires>expires :: i64"];
node [fillcolor=beige];
NotiCenterEventData [label="struct NotiCenterEventData|<field_id>id :: string|<field_to>to :: string|<field_from_>from_ :: string|<field_toChannel>toChannel :: string|<field_fromChannel>fromChannel :: string|<field_eventType>eventType :: string|<field_createdTime>createdTime :: i64|<field_operationRevision>operationRevision :: i64|<field_content>content :: map\<string, string\>|<field_push>push :: map\<string, string\>"];
node [fillcolor=beige];
ChannelToken [label="struct ChannelToken|<field_token>token :: string|<field_obsToken>obsToken :: string|<field_expiration>expiration :: i64|<field_refreshToken>refreshToken :: string|<field_channelAccessToken>channelAccessToken :: string"];
node [fillcolor=beige];
ChannelSettings [label="struct ChannelSettings|<field_unapprovedMessageReceivable>unapprovedMessageReceivable :: bool"];
node [fillcolor=beige];
ChannelIdWithLastUpdated [label="struct ChannelIdWithLastUpdated|<field_channelId>channelId :: string|<field_lastUpdated>lastUpdated :: i64"];
node [fillcolor=beige];
Coin [label="struct Coin|<field_freeCoinBalance>freeCoinBalance :: i32|<field_payedCoinBalance>payedCoinBalance :: i32|<field_totalCoinBalance>totalCoinBalance :: i32|<field_rewardCoinBalance>rewardCoinBalance :: i32"];
node [fillcolor=beige];
CoinPayLoad [label="struct CoinPayLoad|<field_payCoin>payCoin :: i32|<field_freeCoin>freeCoin :: i32|<field_type>type :: PayloadType|<field_rewardCoin>rewardCoin :: i32"];
node [fillcolor=beige];
CoinHistory [label="struct CoinHistory|<field_payDate>payDate :: i64|<field_coinBalance>coinBalance :: i32|<field_coin>coin :: i32|<field_price>price :: string|<field_title>title :: string|<field_refund>refund :: bool|<field_paySeq>paySeq :: string|<field_currency>currency :: string|<field_currencySign>currencySign :: string|<field_displayPrice>displayPrice :: string|<field_payload>payload :: CoinPayLoad|<field_channelId>channelId :: string"];
node [fillcolor=beige];
CoinHistoryCondition [label="struct CoinHistoryCondition|<field_start>start :: i64|<field_size>size :: i32|<field_language>language :: string|<field_eddt>eddt :: string|<field_appStoreCode>appStoreCode :: PaymentType"];
node [fillcolor=beige];
CoinHistoryResult [label="struct CoinHistoryResult|<field_historys>historys :: list\<CoinHistory\>|<field_balance>balance :: Coin|<field_hasNext>hasNext :: bool"];
node [fillcolor=beige];
CoinProductItem [label="struct CoinProductItem|<field_itemId>itemId :: string|<field_coin>coin :: i32|<field_freeCoin>freeCoin :: i32|<field_currency>currency :: string|<field_price>price :: string|<field_displayPrice>displayPrice :: string|<field_name>name :: string|<field_desc>desc :: string"];
node [fillcolor=beige];
CoinPurchaseConfirm [label="struct CoinPurchaseConfirm|<field_orderId>orderId :: string|<field_appStoreCode>appStoreCode :: PaymentType|<field_receipt>receipt :: string|<field_signature>signature :: string|<field_seller>seller :: string|<field_requestType>requestType :: string|<field_ignoreReceipt>ignoreReceipt :: bool"];
node [fillcolor=beige];
CoinPurchaseReservation [label="struct CoinPurchaseReservation|<field_productId>productId :: string|<field_country>country :: string|<field_currency>currency :: string|<field_price>price :: string|<field_appStoreCode>appStoreCode :: PaymentType|<field_language>language :: string|<field_pgCode>pgCode :: PaymentPgType|<field_redirectUrl>redirectUrl :: string"];
node [fillcolor=beige];
CoinUseReservationItem [label="struct CoinUseReservationItem|<field_itemId>itemId :: string|<field_itemName>itemName :: string|<field_amount>amount :: i32"];
node [fillcolor=beige];
CoinUseReservation [label="struct CoinUseReservation|<field_channelId>channelId :: string|<field_shopOrderId>shopOrderId :: string|<field_appStoreCode>appStoreCode :: PaymentType|<field_items>items :: list\<CoinUseReservationItem\>|<field_country>country :: string"];
node [fillcolor=beige];
CompactContact [label="struct CompactContact|<field_mid>mid :: string|<field_createdTime>createdTime :: i64|<field_modifiedTime>modifiedTime :: i64|<field_status>status :: ContactStatus|<field_settings>settings :: i64|<field_displayNameOverridden>displayNameOverridden :: string"];
node [fillcolor=beige];
ContactModification [label="struct ContactModification|<field_type>type :: ModificationType|<field_luid>luid :: string|<field_phones>phones :: list\<string\>|<field_emails>emails :: list\<string\>|<field_userids>userids :: list\<string\>"];
node [fillcolor=beige];
ContactRegistration [label="struct ContactRegistration|<field_contact>contact :: Contact|<field_luid>luid :: string|<field_contactType>contactType :: ContactType|<field_contactKey>contactKey :: string"];
node [fillcolor=beige];
ContactReport [label="struct ContactReport|<field_mid>mid :: string|<field_exists>exists :: bool|<field_contact>contact :: Contact"];
node [fillcolor=beige];
ContactReportResult [label="struct ContactReportResult|<field_mid>mid :: string|<field_exists>exists :: bool"];
node [fillcolor=beige];
DeviceInfo [label="struct DeviceInfo|<field_deviceName>deviceName :: string|<field_systemName>systemName :: string|<field_systemVersion>systemVersion :: string|<field_model>model :: string|<field_carrierCode>carrierCode :: CarrierCode|<field_carrierName>carrierName :: string|<field_applicationType>applicationType :: ApplicationType"];
node [fillcolor=beige];
EmailConfirmation [label="struct EmailConfirmation|<field_usePasswordSet>usePasswordSet :: bool|<field_email>email :: string|<field_password>password :: string|<field_ignoreDuplication>ignoreDuplication :: bool"];
node [fillcolor=beige];
EmailConfirmationSession [label="struct EmailConfirmationSession|<field_emailConfirmationType>emailConfirmationType :: EmailConfirmationType|<field_verifier>verifier :: string|<field_targetEmail>targetEmail :: string"];
node [fillcolor=beige];
FriendChannelMatrix [label="struct FriendChannelMatrix|<field_channelId>channelId :: string|<field_representMid>representMid :: string|<field_count>count :: i32|<field_point>point :: i32"];
node [fillcolor=beige];
FriendChannelMatricesResponse [label="struct FriendChannelMatricesResponse|<field_expires>expires :: i64|<field_matrices>matrices :: list\<FriendChannelMatrix\>"];
node [fillcolor=beige];
FriendRequest [label="struct FriendRequest|<field_eMid>eMid :: string|<field_mid>mid :: string|<field_direction>direction :: FriendRequestDirection|<field_method>method :: FriendRequestMethod|<field_param>param :: string|<field_timestamp>timestamp :: i64|<field_seqId>seqId :: i64|<field_displayName>displayName :: string|<field_picturePath>picturePath :: string|<field_pictureStatus>pictureStatus :: string"];
node [fillcolor=beige];
FriendRequestsInfo [label="struct FriendRequestsInfo|<field_totalIncomingCount>totalIncomingCount :: i32|<field_totalOutgoingCount>totalOutgoingCount :: i32|<field_recentIncomings>recentIncomings :: list\<FriendRequest\>|<field_recentOutgoings>recentOutgoings :: list\<FriendRequest\>|<field_totalIncomingLimit>totalIncomingLimit :: i32|<field_totalOutgoingLimit>totalOutgoingLimit :: i32"];
node [fillcolor=beige];
Geolocation [label="struct Geolocation|<field_longitude>longitude :: double|<field_latitude>latitude :: double"];
node [fillcolor=beige];
NotificationTarget [label="struct NotificationTarget|<field_applicationType>applicationType :: string|<field_applicationVersion>applicationVersion :: string|<field_region>region :: string"];
node [fillcolor=beige];
GlobalEvent [label="struct GlobalEvent|<field_key>key :: string|<field_targets>targets :: list\<NotificationTarget\>|<field_createdTime>createdTime :: i64|<field_data>data :: i64|<field_maxDelay>maxDelay :: i32"];
node [fillcolor=beige];
GroupPreference [label="struct GroupPreference|<field_invitationTicket>invitationTicket :: string|<field_favoriteTimestamp>favoriteTimestamp :: i64"];
node [fillcolor=beige];
Group [label="struct Group|<field_id>id :: string|<field_createdTime>createdTime :: i64|<field_name>name :: string|<field_pictureStatus>pictureStatus :: string|<field_preventedJoinByTicket>preventedJoinByTicket :: bool|<field_groupPreference>groupPreference :: GroupPreference|<field_members>members :: list\<Contact\>|<field_creator>creator :: Contact|<field_invitee>invitee :: list\<Contact\>|<field_notificationDisabled>notificationDisabled :: bool"];
node [fillcolor=beige];
IdentityCredential [label="struct IdentityCredential|<field_provider>provider :: IdentityProvider|<field_identifier>identifier :: string|<field_password>password :: string"];
node [fillcolor=beige];
LastReadMessageId [label="struct LastReadMessageId|<field_mid>mid :: string|<field_lastReadMessageId>lastReadMessageId :: string"];
node [fillcolor=beige];
LastReadMessageIds [label="struct LastReadMessageIds|<field_chatId>chatId :: string|<field_lastReadMessageIds>lastReadMessageIds :: list\<LastReadMessageId\>"];
node [fillcolor=beige];
VerificationSessionData [label="struct VerificationSessionData|<field_sessionId>sessionId :: string|<field_method>method :: VerificationMethod|<field_callback>callback :: string|<field_normalizedPhone>normalizedPhone :: string|<field_countryCode>countryCode :: string|<field_nationalSignificantNumber>nationalSignificantNumber :: string|<field_availableVerificationMethods>availableVerificationMethods :: list\<VerificationMethod\>"];
node [fillcolor=beige];
LoginResult [label="struct LoginResult|<field_authToken>authToken :: string|<field_certificate>certificate :: string|<field_verifier>verifier :: string|<field_pinCode>pinCode :: string|<field_type>type :: LoginResultType|<field_lastPrimaryBindTime>lastPrimaryBindTime :: i64|<field_displayMessage>displayMessage :: string|<field_sessionForSMSConfirm>sessionForSMSConfirm :: VerificationSessionData"];
node [fillcolor=beige];
LoginRequest [label="struct LoginRequest|<field_type>type :: i32|<field_identityProvider>identityProvider :: i32|<field_identifier>identifier :: string|<field_password>password :: string|<field_keepLoggedIn>keepLoggedIn :: bool|<field_accessLocation>accessLocation :: string|<field_systemName>systemName :: string|<field_certificate>certificate :: string|<field_verifier>verifier :: string|<field_secret>secret :: string|<field_e2eeVersion>e2eeVersion :: i32"];
node [fillcolor=beige];
LoginSession [label="struct LoginSession|<field_tokenKey>tokenKey :: string|<field_expirationTime>expirationTime :: i64|<field_applicationType>applicationType :: ApplicationType|<field_systemName>systemName :: string|<field_accessLocation>accessLocation :: string"];
node [fillcolor=beige];
Message [label="struct Message|<field__from>_from :: string|<field_to>to :: string|<field_toType>toType :: MIDType|<field_id>id :: string|<field_createdTime>createdTime :: i64|<field_deliveredTime>deliveredTime :: i64|<field_text>text :: string|<field_location>location :: Location|<field_hasContent>hasContent :: bool|<field_contentType>contentType :: ContentType|<field_contentPreview>contentPreview :: binary|<field_contentMetadata>contentMetadata :: map\<string, string\>|<field_sessionId>sessionId :: i8|<field_chunks>chunks :: list\<binary\>|<field_relatedMessageId>relatedMessageId :: string|<field_messageRelationType>messageRelationType :: MessageRelationType|<field_readCount>readCount :: i64|<field_relatedMessageServiceCode>relatedMessageServiceCode :: ServiceCode"];
node [fillcolor=beige];
SquareMessage [label="struct SquareMessage|<field_message>message :: Message|<field_fromType>fromType :: MIDType|<field_squareMessageRevision>squareMessageRevision :: i64"];
node [fillcolor=beige];
SquareChatStatusWithoutMessage [label="struct SquareChatStatusWithoutMessage|<field_memberCount>memberCount :: i32|<field_unreadMessageCount>unreadMessageCount :: i32"];
node [fillcolor=beige];
SquareChatStatus [label="struct SquareChatStatus|<field_lastMessage>lastMessage :: SquareMessage|<field_senderDisplayName>senderDisplayName :: string|<field_otherStatus>otherStatus :: SquareChatStatusWithoutMessage"];
node [fillcolor=beige];
SquareChatMember [label="struct SquareChatMember|<field_squareMemberMid>squareMemberMid :: string|<field_squareChatMid>squareChatMid :: string|<field_revision>revision :: i64|<field_membershipState>membershipState :: SquareChatMembershipState|<field_notificationForMessage>notificationForMessage :: bool"];
node [fillcolor=beige];
MessageOperation [label="struct MessageOperation|<field_revision>revision :: i64|<field_createdTime>createdTime :: i64|<field_type>type :: MessageOperationType|<field_reqSeq>reqSeq :: i32|<field_status>status :: OpStatus|<field_param1>param1 :: string|<field_param2>param2 :: string|<field_param3>param3 :: string|<field_message>message :: Message"];
node [fillcolor=beige];
MessageOperations [label="struct MessageOperations|<field_operations>operations :: list\<MessageOperation\>|<field_endFlag>endFlag :: bool"];
node [fillcolor=beige];
MessageStoreResult [label="struct MessageStoreResult|<field_requestId>requestId :: string|<field_messageIds>messageIds :: list\<string\>"];
node [fillcolor=beige];
MetaProfile [label="struct MetaProfile|<field_createTime>createTime :: i64|<field_regionCode>regionCode :: string|<field_identities>identities :: map\<RegistrationType, string\>"];
node [fillcolor=beige];
NotificationItem [label="struct NotificationItem|<field_id>id :: string|<field__from>_from :: string|<field_to>to :: string|<field_fromChannel>fromChannel :: string|<field_toChannel>toChannel :: string|<field_revision>revision :: i64|<field_createdTime>createdTime :: i64|<field_content>content :: map\<string, string\>"];
node [fillcolor=beige];
NotificationFetchResult [label="struct NotificationFetchResult|<field_fetchMode>fetchMode :: NotificationItemFetchMode|<field_itemList>itemList :: list\<NotificationItem\>"];
node [fillcolor=beige];
Operation [label="struct Operation|<field_revision>revision :: i64|<field_createdTime>createdTime :: i64|<field_type>type :: OpType|<field_reqSeq>reqSeq :: i32|<field_checksum>checksum :: string|<field_status>status :: OpStatus|<field_param1>param1 :: string|<field_param2>param2 :: string|<field_param3>param3 :: string|<field_message>message :: Message"];
node [fillcolor=beige];
PaymentReservation [label="struct PaymentReservation|<field_receiverMid>receiverMid :: string|<field_productId>productId :: string|<field_language>language :: string|<field_location>location :: string|<field_currency>currency :: string|<field_price>price :: string|<field_appStoreCode>appStoreCode :: PaymentType|<field_messageText>messageText :: string|<field_messageTemplate>messageTemplate :: i32|<field_packageId>packageId :: i64"];
node [fillcolor=beige];
PaymentReservationResult [label="struct PaymentReservationResult|<field_orderId>orderId :: string|<field_confirmUrl>confirmUrl :: string|<field_extras>extras :: map\<string, string\>"];
node [fillcolor=beige];
Product [label="struct Product|<field_productId>productId :: string|<field_packageId>packageId :: i64|<field_version>version :: i32|<field_authorName>authorName :: string|<field_onSale>onSale :: bool|<field_validDays>validDays :: i32|<field_saleType>saleType :: i32|<field_copyright>copyright :: string|<field_title>title :: string|<field_descriptionText>descriptionText :: string|<field_shopOrderId>shopOrderId :: i64|<field_fromMid>fromMid :: string|<field_toMid>toMid :: string|<field_validUntil>validUntil :: i64|<field_priceTier>priceTier :: i32|<field_price>price :: string|<field_currency>currency :: string|<field_currencySymbol>currencySymbol :: string|<field_paymentType>paymentType :: PaymentType|<field_createDate>createDate :: i64|<field_ownFlag>ownFlag :: bool|<field_eventType>eventType :: ProductEventType|<field_urlSchema>urlSchema :: string|<field_downloadUrl>downloadUrl :: string|<field_buddyMid>buddyMid :: string|<field_publishSince>publishSince :: i64|<field_newFlag>newFlag :: bool|<field_missionFlag>missionFlag :: bool|<field_categories>categories :: list\<ProductCategory\>|<field_missionButtonText>missionButtonText :: string|<field_missionShortDescription>missionShortDescription :: string|<field_authorId>authorId :: string|<field_grantedByDefault>grantedByDefault :: bool|<field_displayOrder>displayOrder :: i32|<field_availableForPresent>availableForPresent :: bool|<field_availableForMyself>availableForMyself :: bool|<field_hasAnimation>hasAnimation :: bool|<field_hasSound>hasSound :: bool|<field_recommendationsEnabled>recommendationsEnabled :: bool|<field_stickerResourceType>stickerResourceType :: StickerResourceType"];
node [fillcolor=beige];
ProductList [label="struct ProductList|<field_hasNext>hasNext :: bool|<field_bannerSequence>bannerSequence :: i64|<field_bannerTargetType>bannerTargetType :: ProductBannerLinkType|<field_bannerTargetPath>bannerTargetPath :: string|<field_productList>productList :: list\<Product\>|<field_bannerLang>bannerLang :: string"];
node [fillcolor=beige];
StickerIdRange [label="struct StickerIdRange|<field_start>start :: i64|<field_size>size :: i32"];
node [fillcolor=beige];
ProductSimple [label="struct ProductSimple|<field_productId>productId :: string|<field_packageId>packageId :: i64|<field_version>version :: i32|<field_onSale>onSale :: bool|<field_validUntil>validUntil :: i64|<field_stickerIdRanges>stickerIdRanges :: list\<StickerIdRange\>|<field_grantedByDefault>grantedByDefault :: bool|<field_displayOrder>displayOrder :: i32"];
node [fillcolor=beige];
ProductSimpleList [label="struct ProductSimpleList|<field_hasNext>hasNext :: bool|<field_reinvokeHour>reinvokeHour :: i32|<field_lastVersionSeq>lastVersionSeq :: i64|<field_productList>productList :: list\<ProductSimple\>|<field_recentNewReleaseDate>recentNewReleaseDate :: i64|<field_recentEventReleaseDate>recentEventReleaseDate :: i64"];
node [fillcolor=beige];
Profile [label="struct Profile|<field_mid>mid :: string|<field_userid>userid :: string|<field_phone>phone :: string|<field_email>email :: string|<field_regionCode>regionCode :: string|<field_displayName>displayName :: string|<field_phoneticName>phoneticName :: string|<field_pictureStatus>pictureStatus :: string|<field_thumbnailUrl>thumbnailUrl :: string|<field_statusMessage>statusMessage :: string|<field_allowSearchByUserid>allowSearchByUserid :: bool|<field_allowSearchByEmail>allowSearchByEmail :: bool|<field_picturePath>picturePath :: string|<field_musicProfile>musicProfile :: string|<field_videoProfile>videoProfile :: string"];
node [fillcolor=beige];
ProximityMatchCandidateResult [label="struct ProximityMatchCandidateResult|<field_users>users :: list\<Contact\>|<field_buddies>buddies :: list\<Contact\>"];
node [fillcolor=beige];
RegisterWithSnsIdResult [label="struct RegisterWithSnsIdResult|<field_authToken>authToken :: string|<field_userCreated>userCreated :: bool"];
node [fillcolor=beige];
RequestTokenResponse [label="struct RequestTokenResponse|<field_requestToken>requestToken :: string|<field_returnUrl>returnUrl :: string"];
node [fillcolor=beige];
Room [label="struct Room|<field_mid>mid :: string|<field_createdTime>createdTime :: i64|<field_contacts>contacts :: list\<Contact\>|<field_notificationDisabled>notificationDisabled :: bool|<field_memberMids>memberMids :: list\<string\>"];
node [fillcolor=beige];
SuggestDictionary [label="struct SuggestDictionary|<field_language>language :: string|<field_name>name :: string"];
node [fillcolor=beige];
SuggestItemDictionaryIncrement [label="struct SuggestItemDictionaryIncrement|<field_status>status :: SuggestDictionaryIncrementStatus|<field_revision>revision :: i64|<field_scheme>scheme :: string|<field_data>data :: binary"];
node [fillcolor=beige];
SuggestTagDictionaryIncrement [label="struct SuggestTagDictionaryIncrement|<field_status>status :: SuggestDictionaryIncrementStatus|<field_language>language :: string|<field_revision>revision :: i64|<field_scheme>scheme :: string|<field_data>data :: binary"];
node [fillcolor=beige];
SuggestDictionaryIncrements [label="struct SuggestDictionaryIncrements|<field_itemIncrement>itemIncrement :: SuggestItemDictionaryIncrement|<field_tagIncrements>tagIncrements :: list\<SuggestTagDictionaryIncrement\>"];
node [fillcolor=beige];
SuggestItemDictionaryRevision [label="struct SuggestItemDictionaryRevision|<field_revision>revision :: i64|<field_scheme>scheme :: string"];
node [fillcolor=beige];
SuggestTagDictionaryRevision [label="struct SuggestTagDictionaryRevision|<field_language>language :: string|<field_revision>revision :: i64|<field_scheme>scheme :: string"];
node [fillcolor=beige];
SuggestDictionaryRevisions [label="struct SuggestDictionaryRevisions|<field_itemRevision>itemRevision :: SuggestItemDictionaryRevision|<field_tagRevisions>tagRevisions :: list\<SuggestTagDictionaryRevision\>"];
node [fillcolor=beige];
SuggestDictionarySettings [label="struct SuggestDictionarySettings|<field_revision>revision :: i64|<field_newRevision>newRevision :: i64|<field_dictionaries>dictionaries :: list\<SuggestDictionary\>|<field_preloadedDictionaries>preloadedDictionaries :: list\<string\>"];
node [fillcolor=beige];
PhoneInfoForChannel [label="struct PhoneInfoForChannel|<field_mid>mid :: string|<field_normalizedPhoneNumber>normalizedPhoneNumber :: string|<field_allowedToSearchByPhoneNumber>allowedToSearchByPhoneNumber :: bool|<field_allowedToReceiveMessageFromNonFriend>allowedToReceiveMessageFromNonFriend :: bool|<field_region>region :: string"];
node [fillcolor=beige];
PhoneVerificationResult [label="struct PhoneVerificationResult|<field_verificationResult>verificationResult :: VerificationResult|<field_accountMigrationCheckType>accountMigrationCheckType :: AccountMigrationCheckType|<field_recommendAddFriends>recommendAddFriends :: bool"];
node [fillcolor=beige];
PlaceSearchInfo [label="struct PlaceSearchInfo|<field_name>name :: string|<field_address>address :: string|<field_latitude>latitude :: double|<field_longitude>longitude :: double"];
node [fillcolor=beige];
RSAKey [label="struct RSAKey|<field_keynm>keynm :: string|<field_nvalue>nvalue :: string|<field_evalue>evalue :: string|<field_sessionKey>sessionKey :: string"];
node [fillcolor=beige];
SecurityCenterResult [label="struct SecurityCenterResult|<field_uri>uri :: string|<field_token>token :: string|<field_cookiePath>cookiePath :: string|<field_skip>skip :: bool"];
node [fillcolor=beige];
SendBuddyMessageResult [label="struct SendBuddyMessageResult|<field_requestId>requestId :: string|<field_state>state :: BuddyResultState|<field_messageId>messageId :: string|<field_eventNo>eventNo :: i32|<field_receiverCount>receiverCount :: i64|<field_successCount>successCount :: i64|<field_failCount>failCount :: i64|<field_cancelCount>cancelCount :: i64|<field_blockCount>blockCount :: i64|<field_unregisterCount>unregisterCount :: i64|<field_timestamp>timestamp :: i64|<field_message>message :: string"];
node [fillcolor=beige];
SetBuddyOnAirResult [label="struct SetBuddyOnAirResult|<field_requestId>requestId :: string|<field_state>state :: BuddyResultState|<field_eventNo>eventNo :: i32|<field_receiverCount>receiverCount :: i64|<field_successCount>successCount :: i64|<field_failCount>failCount :: i64|<field_cancelCount>cancelCount :: i64|<field_unregisterCount>unregisterCount :: i64|<field_timestamp>timestamp :: i64|<field_message>message :: string"];
node [fillcolor=beige];
Settings [label="struct Settings|<field_notificationEnable>notificationEnable :: bool|<field_notificationMuteExpiration>notificationMuteExpiration :: i64|<field_notificationNewMessage>notificationNewMessage :: bool|<field_notificationGroupInvitation>notificationGroupInvitation :: bool|<field_notificationShowMessage>notificationShowMessage :: bool|<field_notificationIncomingCall>notificationIncomingCall :: bool|<field_notificationSoundMessage>notificationSoundMessage :: string|<field_notificationSoundGroup>notificationSoundGroup :: string|<field_notificationDisabledWithSub>notificationDisabledWithSub :: bool|<field_privacySyncContacts>privacySyncContacts :: bool|<field_privacySearchByPhoneNumber>privacySearchByPhoneNumber :: bool|<field_privacySearchByUserid>privacySearchByUserid :: bool|<field_privacySearchByEmail>privacySearchByEmail :: bool|<field_privacyAllowSecondaryDeviceLogin>privacyAllowSecondaryDeviceLogin :: bool|<field_privacyProfileImagePostToMyhome>privacyProfileImagePostToMyhome :: bool|<field_privacyReceiveMessagesFromNotFriend>privacyReceiveMessagesFromNotFriend :: bool|<field_contactMyTicket>contactMyTicket :: string|<field_identityProvider>identityProvider :: IdentityProvider|<field_identityIdentifier>identityIdentifier :: string|<field_snsAccounts>snsAccounts :: map\<SnsIdType, string\>|<field_phoneRegistration>phoneRegistration :: bool|<field_emailConfirmationStatus>emailConfirmationStatus :: EmailConfirmationStatus|<field_preferenceLocale>preferenceLocale :: string|<field_customModes>customModes :: map\<CustomMode, string\>|<field_e2eeEnable>e2eeEnable :: bool|<field_hitokotoBackupRequested>hitokotoBackupRequested :: bool|<field_privacyProfileMusicPostToMyhome>privacyProfileMusicPostToMyhome :: bool|<field_privacyAllowNearby>privacyAllowNearby :: bool|<field_agreementNearbyTime>agreementNearbyTime :: i64|<field_agreementSquareTime>agreementSquareTime :: i64|<field_notificationMention>notificationMention :: bool|<field_botUseAgreementAcceptedAt>botUseAgreementAcceptedAt :: i64"];
node [fillcolor=beige];
SimpleChannelClient [label="struct SimpleChannelClient|<field_applicationType>applicationType :: string|<field_applicationVersion>applicationVersion :: string|<field_locale>locale :: string"];
node [fillcolor=beige];
SimpleChannelContact [label="struct SimpleChannelContact|<field_mid>mid :: string|<field_displayName>displayName :: string|<field_pictureStatus>pictureStatus :: string|<field_picturePath>picturePath :: string|<field_statusMessage>statusMessage :: string"];
node [fillcolor=beige];
SnsFriend [label="struct SnsFriend|<field_snsUserId>snsUserId :: string|<field_snsUserName>snsUserName :: string|<field_snsIdType>snsIdType :: SnsIdType"];
node [fillcolor=beige];
SnsFriendContactRegistration [label="struct SnsFriendContactRegistration|<field_contact>contact :: Contact|<field_snsIdType>snsIdType :: SnsIdType|<field_snsUserId>snsUserId :: string"];
node [fillcolor=beige];
SnsFriendModification [label="struct SnsFriendModification|<field_type>type :: ModificationType|<field_snsFriend>snsFriend :: SnsFriend"];
node [fillcolor=beige];
SnsFriends [label="struct SnsFriends|<field_snsFriends>snsFriends :: list\<SnsFriend\>|<field_hasMore>hasMore :: bool"];
node [fillcolor=beige];
SnsIdUserStatus [label="struct SnsIdUserStatus|<field_userExisting>userExisting :: bool|<field_phoneNumberRegistered>phoneNumberRegistered :: bool|<field_sameDevice>sameDevice :: bool"];
node [fillcolor=beige];
SnsProfile [label="struct SnsProfile|<field_snsUserId>snsUserId :: string|<field_snsUserName>snsUserName :: string|<field_email>email :: string|<field_thumbnailUrl>thumbnailUrl :: string"];
node [fillcolor=beige];
SystemConfiguration [label="struct SystemConfiguration|<field_endpoint>endpoint :: string|<field_endpointSsl>endpointSsl :: string|<field_updateUrl>updateUrl :: string|<field_c2dmAccount>c2dmAccount :: string|<field_nniServer>nniServer :: string"];
node [fillcolor=beige];
Ticket [label="struct Ticket|<field_id>id :: string|<field_expirationTime>expirationTime :: i64|<field_maxUseCount>maxUseCount :: i32"];
node [fillcolor=beige];
TMessageBox [label="struct TMessageBox|<field_id>id :: string|<field_channelId>channelId :: string|<field_lastSeq>lastSeq :: i64|<field_unreadCount>unreadCount :: i64|<field_lastModifiedTime>lastModifiedTime :: i64|<field_status>status :: i32|<field_midType>midType :: MIDType|<field_lastMessages>lastMessages :: list\<Message\>"];
node [fillcolor=beige];
TMessageBoxWrapUp [label="struct TMessageBoxWrapUp|<field_messageBox>messageBox :: TMessageBox|<field_name>name :: string|<field_contacts>contacts :: list\<Contact\>|<field_pictureRevision>pictureRevision :: string"];
node [fillcolor=beige];
TMessageBoxWrapUpResponse [label="struct TMessageBoxWrapUpResponse|<field_messageBoxWrapUpList>messageBoxWrapUpList :: list\<TMessageBoxWrapUp\>|<field_totalSize>totalSize :: i32"];
node [fillcolor=beige];
TMessageReadRangeEntry [label="struct TMessageReadRangeEntry|<field_startMessageId>startMessageId :: i64|<field_endMessageId>endMessageId :: i64|<field_startTime>startTime :: i64|<field_endTime>endTime :: i64"];
node [fillcolor=beige];
TMessageReadRange [label="struct TMessageReadRange|<field_chatId>chatId :: string|<field_ranges>ranges :: map\<string, list\<TMessageReadRangeEntry\>\>"];
node [fillcolor=beige];
ChatRoomAnnouncementContents [label="struct ChatRoomAnnouncementContents|<field_displayFields>displayFields :: i32|<field_text>text :: string|<field_link>link :: string|<field_thumbnail>thumbnail :: string"];
node [fillcolor=beige];
ChatRoomAnnouncement [label="struct ChatRoomAnnouncement|<field_announcementSeq>announcementSeq :: i64|<field_type>type :: ChatRoomAnnouncementType|<field_contents>contents :: ChatRoomAnnouncementContents|<field_creatorMid>creatorMid :: string|<field_createdTime>createdTime :: i64"];
node [fillcolor=beige];
ErrorExtraInfo [label="struct ErrorExtraInfo|<field_preconditionFailedExtraInfo>preconditionFailedExtraInfo :: PreconditionFailedExtraInfo"];
node [fillcolor=beige];
SyncRelations [label="struct SyncRelations|<field_syncAll>syncAll :: bool|<field_syncParamContact>syncParamContact :: list\<SyncParamContact\>|<field_syncParamMid>syncParamMid :: list\<SyncParamMid\>"];
node [fillcolor=beige];
SyncScope [label="struct SyncScope|<field_syncProfile>syncProfile :: bool|<field_syncSettings>syncSettings :: bool|<field_syncSticker>syncSticker :: bool|<field_syncThemeShop>syncThemeShop :: bool|<field_contact>contact :: SyncRelations|<field_group>group :: SyncRelations|<field_room>room :: SyncRelations|<field_chat>chat :: SyncRelations"];
node [fillcolor=beige];
JoinSquareResponse [label="struct JoinSquareResponse|<field_square>square :: Square|<field_squareAuthority>squareAuthority :: SquareAuthority|<field_squareStatus>squareStatus :: SquareStatus|<field_squareMember>squareMember :: SquareMember|<field_squareFeatureSet>squareFeatureSet :: SquareFeatureSet|<field_noteStatus>noteStatus :: NoteStatus"];
node [fillcolor=beige];
JoinSquareRequest [label="struct JoinSquareRequest|<field_squareMid>squareMid :: string|<field_member>member :: SquareMember"];
node [fillcolor=beige];
JoinSquareChatResponse [label="struct JoinSquareChatResponse|<field_squareChat>squareChat :: SquareChat|<field_squareChatStatus>squareChatStatus :: SquareChatStatus|<field_squareChatMember>squareChatMember :: SquareChatMember"];
node [fillcolor=beige];
JoinSquareChatRequest [label="struct JoinSquareChatRequest|<field_squareChatMid>squareChatMid :: string"];
node [fillcolor=beige];
SendMessageResponse [label="struct SendMessageResponse|<field_createdSquareMessage>createdSquareMessage :: SquareMessage"];
node [fillcolor=beige];
SendMessageRequest [label="struct SendMessageRequest|<field_reqSeq>reqSeq :: i32|<field_squareChatMid>squareChatMid :: string|<field_squareMessage>squareMessage :: SquareMessage"];
node [fillcolor=beige];
MarkAsReadRequest [label="struct MarkAsReadRequest|<field_squareChatMid>squareChatMid :: string|<field_messageId>messageId :: string"];
node [fillcolor=beige];
MarkAsReadResponse [label="struct MarkAsReadResponse"];
node [fillcolor=beige];
SubscriptionState [label="struct SubscriptionState|<field_subscriptionId>subscriptionId :: i64|<field_ttlMillis>ttlMillis :: i64"];
node [fillcolor=beige];
ApproveSquareMembersResponse [label="struct ApproveSquareMembersResponse|<field_approvedMembers>approvedMembers :: list\<SquareMember\>|<field_status>status :: SquareStatus"];
node [fillcolor=beige];
ApproveSquareMembersRequest [label="struct ApproveSquareMembersRequest|<field_squareMid>squareMid :: string|<field_requestedMemberMids>requestedMemberMids :: list\<string\>"];
node [fillcolor=beige];
CreateSquareChatResponse [label="struct CreateSquareChatResponse|<field_squareChat>squareChat :: SquareChat|<field_squareChatStatus>squareChatStatus :: SquareChatStatus|<field_squareChatMember>squareChatMember :: SquareChatMember"];
node [fillcolor=beige];
CreateSquareChatRequest [label="struct CreateSquareChatRequest|<field_reqSeq>reqSeq :: i32|<field_squareChat>squareChat :: SquareChat|<field_squareMemberMids>squareMemberMids :: list\<string\>"];
node [fillcolor=beige];
CreateSquareResponse [label="struct CreateSquareResponse|<field_square>square :: Square|<field_creator>creator :: SquareMember|<field_authority>authority :: SquareAuthority|<field_status>status :: SquareStatus"];
node [fillcolor=beige];
CreateSquareRequest [label="struct CreateSquareRequest|<field_reqSeq>reqSeq :: i32|<field_square>square :: Square|<field_creator>creator :: SquareMember"];
node [fillcolor=beige];
DeleteSquareResponse [label="struct DeleteSquareResponse"];
node [fillcolor=beige];
DeleteSquareRequest [label="struct DeleteSquareRequest|<field_mid>mid :: string|<field_revision>revision :: i64"];
node [fillcolor=beige];
DestroyMessageResponse [label="struct DestroyMessageResponse"];
node [fillcolor=beige];
DestroyMessageRequest [label="struct DestroyMessageRequest|<field_squareChatMid>squareChatMid :: string|<field_messageId>messageId :: string"];
node [fillcolor=beige];
GetSquareChatMembersRequest [label="struct GetSquareChatMembersRequest|<field_squareChatMid>squareChatMid :: string|<field_continuationToken>continuationToken :: string|<field_limit>limit :: i32"];
node [fillcolor=beige];
GetSquareChatMembersResponse [label="struct GetSquareChatMembersResponse|<field_squareChatMembers>squareChatMembers :: SquareMember|<field_continuationToken>continuationToken :: string"];
node [fillcolor=beige];
GetSquareChatStatusRequest [label="struct GetSquareChatStatusRequest|<field_squareChatMid>squareChatMid :: string"];
node [fillcolor=beige];
GetSquareChatStatusResponse [label="struct GetSquareChatStatusResponse|<field_chatStatus>chatStatus :: SquareChatStatus"];
node [fillcolor=beige];
GetSquareChatRequest [label="struct GetSquareChatRequest|<field_squareChatMid>squareChatMid :: string"];
node [fillcolor=beige];
GetSquareChatResponse [label="struct GetSquareChatResponse|<field_squareChat>squareChat :: SquareChat|<field_squareChatMember>squareChatMember :: SquareChatMember|<field_squareChatStatus>squareChatStatus :: SquareChatStatus"];
node [fillcolor=beige];
GetSquareAuthorityRequest [label="struct GetSquareAuthorityRequest|<field_squareMid>squareMid :: string"];
node [fillcolor=beige];
GetSquareAuthorityResponse [label="struct GetSquareAuthorityResponse|<field_authority>authority :: SquareAuthority"];
node [fillcolor=beige];
GetJoinedSquaresRequest [label="struct GetJoinedSquaresRequest|<field_continuationToken>continuationToken :: string|<field_limit>limit :: i32"];
node [fillcolor=beige];
GetJoinedSquaresResponse [label="struct GetJoinedSquaresResponse|<field_squares>squares :: list\<Square\>|<field_members>members :: map\<string, SquareMember\>|<field_authorities>authorities :: map\<string, SquareAuthority\>|<field_statuses>statuses :: map\<string, SquareStatus\>|<field_continuationToken>continuationToken :: string|<field_noteStatuses>noteStatuses :: map\<string, NoteStatus\>"];
node [fillcolor=beige];
GetJoinableSquareChatsRequest [label="struct GetJoinableSquareChatsRequest|<field_squareMid>squareMid :: string|<field_continuationToken>continuationToken :: string|<field_limit>limit :: i32"];
node [fillcolor=beige];
GetJoinableSquareChatsResponse [label="struct GetJoinableSquareChatsResponse|<field_squareChats>squareChats :: list\<SquareChat\>|<field_continuationToken>continuationToken :: string|<field_totalSquareChatCount>totalSquareChatCount :: i32|<field_squareChatStatuses>squareChatStatuses :: map\<string, SquareChatStatus\>"];
node [fillcolor=beige];
GetInvitationTicketUrlRequest [label="struct GetInvitationTicketUrlRequest|<field_mid>mid :: string"];
node [fillcolor=beige];
GetInvitationTicketUrlResponse [label="struct GetInvitationTicketUrlResponse|<field_invitationURL>invitationURL :: string"];
node [fillcolor=beige];
LeaveSquareRequest [label="struct LeaveSquareRequest|<field_squareMid>squareMid :: string"];
node [fillcolor=beige];
LeaveSquareResponse [label="struct LeaveSquareResponse"];
node [fillcolor=beige];
LeaveSquareChatRequest [label="struct LeaveSquareChatRequest|<field_squareChatMid>squareChatMid :: string|<field_sayGoodbye>sayGoodbye :: bool|<field_squareChatMemberRevision>squareChatMemberRevision :: i64"];
node [fillcolor=beige];
LeaveSquareChatResponse [label="struct LeaveSquareChatResponse"];
node [fillcolor=beige];
SquareMemberSearchOption [label="struct SquareMemberSearchOption|<field_membershipState>membershipState :: SquareMembershipState|<field_memberRoles>memberRoles :: set\<SquareMemberRole\>|<field_displayName>displayName :: string|<field_ableToReceiveMessage>ableToReceiveMessage :: BooleanState|<field_ableToReceiveFriendRequest>ableToReceiveFriendRequest :: BooleanState|<field_chatMidToExcludeMembers>chatMidToExcludeMembers :: string|<field_includingMe>includingMe :: bool"];
node [fillcolor=beige];
SearchSquareMembersRequest [label="struct SearchSquareMembersRequest|<field_squareMid>squareMid :: string|<field_searchOption>searchOption :: SquareMemberSearchOption|<field_continuationToken>continuationToken :: string|<field_limit>limit :: i32"];
node [fillcolor=beige];
SearchSquareMembersResponse [label="struct SearchSquareMembersResponse|<field_members>members :: list\<SquareMember\>|<field_revision>revision :: i64|<field_continuationToken>continuationToken :: string|<field_totalCount>totalCount :: i32"];
node [fillcolor=beige];
FindSquareByInvitationTicketRequest [label="struct FindSquareByInvitationTicketRequest|<field_invitationTicket>invitationTicket :: string"];
node [fillcolor=beige];
FindSquareByInvitationTicketResponse [label="struct FindSquareByInvitationTicketResponse|<field_square>square :: Square|<field_myMembership>myMembership :: SquareMember|<field_squareAuthority>squareAuthority :: SquareAuthority|<field_squareStatus>squareStatus :: SquareStatus"];
node [fillcolor=beige];
SquareEventReceiveMessage [label="struct SquareEventReceiveMessage|<field_squareChatMid>squareChatMid :: string|<field_squareMessage>squareMessage :: SquareMessage"];
node [fillcolor=beige];
SquareEventSendMessage [label="struct SquareEventSendMessage|<field_squareChatMid>squareChatMid :: string|<field_squareMessage>squareMessage :: SquareMessage|<field_reqSeq>reqSeq :: i32"];
node [fillcolor=beige];
SquareEventNotifiedJoinSquareChat [label="struct SquareEventNotifiedJoinSquareChat|<field_squareChatMid>squareChatMid :: string|<field_joinedMember>joinedMember :: SquareMember"];
node [fillcolor=beige];
SquareEventNotifiedInviteIntoSquareChat [label="struct SquareEventNotifiedInviteIntoSquareChat|<field_squareChatMid>squareChatMid :: string|<field_invitees>invitees :: list\<SquareMember\>|<field_invitor>invitor :: SquareMember|<field_invitorRelation>invitorRelation :: SquareMemberRelation"];
node [fillcolor=beige];
SquareEventNotifiedLeaveSquareChat [label="struct SquareEventNotifiedLeaveSquareChat|<field_squareChatMid>squareChatMid :: string|<field_squareMemberMid>squareMemberMid :: string|<field_sayGoodbye>sayGoodbye :: bool|<field_squareMember>squareMember :: SquareMember"];
node [fillcolor=beige];
SquareEventNotifiedDestroyMessage [label="struct SquareEventNotifiedDestroyMessage|<field_squareChatMid>squareChatMid :: string|<field_messageId>messageId :: string"];
node [fillcolor=beige];
SquareEventNotifiedMarkAsRead [label="struct SquareEventNotifiedMarkAsRead|<field_squareChatMid>squareChatMid :: string|<field_sMemberMid>sMemberMid :: string|<field_messageId>messageId :: string"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareMemberProfile [label="struct SquareEventNotifiedUpdateSquareMemberProfile|<field_squareChatMid>squareChatMid :: string|<field_squareMember>squareMember :: SquareMember"];
node [fillcolor=beige];
SquareEventNotifiedKickoutFromSquare [label="struct SquareEventNotifiedKickoutFromSquare|<field_squareChatMid>squareChatMid :: string|<field_kickees>kickees :: list\<SquareMember\>"];
node [fillcolor=beige];
SquareEventNotifiedShutdownSquare [label="struct SquareEventNotifiedShutdownSquare|<field_squareChatMid>squareChatMid :: string|<field_square>square :: Square"];
node [fillcolor=beige];
SquareEventNotifiedDeleteSquareChat [label="struct SquareEventNotifiedDeleteSquareChat|<field_squareChat>squareChat :: SquareChat"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareChatProfileName [label="struct SquareEventNotifiedUpdateSquareChatProfileName|<field_squareChatMid>squareChatMid :: string|<field_editor>editor :: SquareMember|<field_updatedChatName>updatedChatName :: string"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareChatProfileImage [label="struct SquareEventNotifiedUpdateSquareChatProfileImage|<field_squareChatMid>squareChatMid :: string|<field_editor>editor :: SquareMember"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareChatStatus [label="struct SquareEventNotifiedUpdateSquareChatStatus|<field_squareChatMid>squareChatMid :: string|<field_statusWithoutMessage>statusWithoutMessage :: SquareChatStatusWithoutMessage"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareStatus [label="struct SquareEventNotifiedUpdateSquareStatus|<field_squareMid>squareMid :: string|<field_squareStatus>squareStatus :: SquareStatus"];
node [fillcolor=beige];
SquareEventNotifiedCreateSquareMember [label="struct SquareEventNotifiedCreateSquareMember|<field_square>square :: Square|<field_squareAuthority>squareAuthority :: SquareAuthority|<field_squareStatus>squareStatus :: SquareStatus|<field_squareMember>squareMember :: SquareMember|<field_squareFeatureSet>squareFeatureSet :: SquareFeatureSet"];
node [fillcolor=beige];
SquareEventNotifiedCreateSquareChatMember [label="struct SquareEventNotifiedCreateSquareChatMember|<field_squareChatMid>squareChatMid :: string|<field_squareMemberMid>squareMemberMid :: string|<field_squareChatMember>squareChatMember :: SquareChatMember"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareMemberRelation [label="struct SquareEventNotifiedUpdateSquareMemberRelation|<field_squareMid>squareMid :: string|<field_myMemberMid>myMemberMid :: string|<field_targetSquareMemberMid>targetSquareMemberMid :: string|<field_squareMemberRelation>squareMemberRelation :: SquareMemberRelation"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquare [label="struct SquareEventNotifiedUpdateSquare|<field_squareMid>squareMid :: string|<field_square>square :: Square"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareMember [label="struct SquareEventNotifiedUpdateSquareMember|<field_squareMid>squareMid :: string|<field_squareMemberMid>squareMemberMid :: string|<field_squareMember>squareMember :: SquareMember"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareChat [label="struct SquareEventNotifiedUpdateSquareChat|<field_squareMid>squareMid :: string|<field_squareChatMid>squareChatMid :: string|<field_squareChat>squareChat :: SquareChat"];
node [fillcolor=beige];
SquareEventNotificationJoinRequest [label="struct SquareEventNotificationJoinRequest|<field_squareMid>squareMid :: string|<field_squareName>squareName :: string|<field_requestMemberName>requestMemberName :: string|<field_profileImageObsHash>profileImageObsHash :: string"];
node [fillcolor=beige];
SquareEventNotificationMemberUpdate [label="struct SquareEventNotificationMemberUpdate|<field_squareMid>squareMid :: string|<field_squareName>squareName :: string|<field_profileImageObsHash>profileImageObsHash :: string"];
node [fillcolor=beige];
SquareEventNotificationSquareDelete [label="struct SquareEventNotificationSquareDelete|<field_squareMid>squareMid :: string|<field_squareName>squareName :: string|<field_profileImageObsHash>profileImageObsHash :: string"];
node [fillcolor=beige];
SquareEventNotificationSquareChatDelete [label="struct SquareEventNotificationSquareChatDelete|<field_squareChatMid>squareChatMid :: string|<field_squareChatName>squareChatName :: string|<field_profileImageObsHash>profileImageObsHash :: string"];
node [fillcolor=beige];
SquareEventNotificationMessage [label="struct SquareEventNotificationMessage|<field_squareChatMid>squareChatMid :: string|<field_squareMessage>squareMessage :: SquareMessage|<field_senderDisplayName>senderDisplayName :: string|<field_unreadCount>unreadCount :: i32|<field_requiredToFetchChatEvents>requiredToFetchChatEvents :: bool"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareChatMember [label="struct SquareEventNotifiedUpdateSquareChatMember|<field_squareChatMid>squareChatMid :: string|<field_squareMemberMid>squareMemberMid :: string|<field_squareChatMember>squareChatMember :: SquareChatMember"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareAuthority [label="struct SquareEventNotifiedUpdateSquareAuthority|<field_squareMid>squareMid :: string|<field_squareAuthority>squareAuthority :: SquareAuthority"];
node [fillcolor=beige];
SquareEventNotifiedUpdateSquareFeatureSet [label="struct SquareEventNotifiedUpdateSquareFeatureSet|<field_squareFeatureSet>squareFeatureSet :: SquareFeatureSet"];
node [fillcolor=beige];
SquareEventPayload [label="struct SquareEventPayload|<field_receiveMessage>receiveMessage :: SquareEventReceiveMessage|<field_sendMessage>sendMessage :: SquareEventSendMessage|<field_notifiedJoinSquareChat>notifiedJoinSquareChat :: SquareEventNotifiedJoinSquareChat|<field_notifiedInviteIntoSquareChat>notifiedInviteIntoSquareChat :: SquareEventNotifiedInviteIntoSquareChat|<field_notifiedLeaveSquareChat>notifiedLeaveSquareChat :: SquareEventNotifiedLeaveSquareChat|<field_notifiedDestroyMessage>notifiedDestroyMessage :: SquareEventNotifiedDestroyMessage|<field_notifiedMarkAsRead>notifiedMarkAsRead :: SquareEventNotifiedMarkAsRead|<field_notifiedUpdateSquareMemberProfile>notifiedUpdateSquareMemberProfile :: SquareEventNotifiedUpdateSquareMemberProfile|<field_notifiedKickoutFromSquare>notifiedKickoutFromSquare :: SquareEventNotifiedKickoutFromSquare|<field_notifiedShutdownSquare>notifiedShutdownSquare :: SquareEventNotifiedShutdownSquare|<field_notifiedDeleteSquareChat>notifiedDeleteSquareChat :: SquareEventNotifiedDeleteSquareChat|<field_notifiedUpdateSquareChatProfileName>notifiedUpdateSquareChatProfileName :: SquareEventNotifiedUpdateSquareChatProfileName|<field_notifiedUpdateSquareChatProfileImage>notifiedUpdateSquareChatProfileImage :: SquareEventNotifiedUpdateSquareChatProfileImage|<field_notifiedUpdateSquareStatus>notifiedUpdateSquareStatus :: SquareEventNotifiedUpdateSquareStatus|<field_notifiedUpdateSquareChatStatus>notifiedUpdateSquareChatStatus :: SquareEventNotifiedUpdateSquareChatStatus|<field_notifiedCreateSquareMember>notifiedCreateSquareMember :: SquareEventNotifiedCreateSquareMember|<field_notifiedCreateSquareChatMember>notifiedCreateSquareChatMember :: SquareEventNotifiedCreateSquareChatMember|<field_notifiedUpdateSquareMemberRelation>notifiedUpdateSquareMemberRelation :: SquareEventNotifiedUpdateSquareMemberRelation|<field_notifiedUpdateSquare>notifiedUpdateSquare :: SquareEventNotifiedUpdateSquare|<field_notifiedUpdateSquareMember>notifiedUpdateSquareMember :: SquareEventNotifiedUpdateSquareMember|<field_notifiedUpdateSquareChat>notifiedUpdateSquareChat :: SquareEventNotifiedUpdateSquareChat|<field_notificationJoinRequest>notificationJoinRequest :: SquareEventNotificationJoinRequest|<field_notificationJoined>notificationJoined :: SquareEventNotificationMemberUpdate|<field_notificationPromoteCoadmin>notificationPromoteCoadmin :: SquareEventNotificationMemberUpdate|<field_notificationPromoteAdmin>notificationPromoteAdmin :: SquareEventNotificationMemberUpdate|<field_notificationDemoteMember>notificationDemoteMember :: SquareEventNotificationMemberUpdate|<field_notificationKickedOut>notificationKickedOut :: SquareEventNotificationMemberUpdate|<field_notificationSquareDelete>notificationSquareDelete :: SquareEventNotificationSquareDelete|<field_notificationSquareChatDelete>notificationSquareChatDelete :: SquareEventNotificationSquareChatDelete|<field_notificationMessage>notificationMessage :: SquareEventNotificationMessage|<field_notifiedUpdateSquareChatMember>notifiedUpdateSquareChatMember :: SquareEventNotifiedUpdateSquareChatMember|<field_notifiedUpdateSquareAuthority>notifiedUpdateSquareAuthority :: SquareEventNotifiedUpdateSquareAuthority|<field_notifiedUpdateSquareFeatureSet>notifiedUpdateSquareFeatureSet :: SquareEventNotifiedUpdateSquareFeatureSet"];
node [fillcolor=beige];
SquareEvent [label="struct SquareEvent|<field_createdTime>createdTime :: i64|<field_type>type :: SquareEventType|<field_payload>payload :: SquareEventPayload|<field_syncToken>syncToken :: string|<field_eventStatus>eventStatus :: SquareEventStatus"];
node [fillcolor=beige];
FetchMyEventsRequest [label="struct FetchMyEventsRequest|<field_subscriptionId>subscriptionId :: i64|<field_syncToken>syncToken :: string|<field_limit>limit :: i32|<field_continuationToken>continuationToken :: string"];
node [fillcolor=beige];
FetchMyEventsResponse [label="struct FetchMyEventsResponse|<field_subscription>subscription :: SubscriptionState|<field_events>events :: list\<SquareEvent\>|<field_syncToken>syncToken :: string|<field_continuationToken>continuationToken :: string"];
node [fillcolor=beige];
FetchSquareChatEventsRequest [label="struct FetchSquareChatEventsRequest|<field_subscriptionId>subscriptionId :: i64|<field_squareChatMid>squareChatMid :: string|<field_syncToken>syncToken :: string|<field_limit>limit :: i32|<field_direction>direction :: FetchDirection"];
node [fillcolor=beige];
FetchSquareChatEventsResponse [label="struct FetchSquareChatEventsResponse|<field_subscription>subscription :: SubscriptionState|<field_events>events :: list\<SquareEvent\>|<field_syncToken>syncToken :: string|<field_continuationToken>continuationToken :: string"];
node [fillcolor=beige];
InviteToSquareRequest [label="struct InviteToSquareRequest|<field_squareMid>squareMid :: string|<field_invitees>invitees :: list\<string\>|<field_squareChatMid>squareChatMid :: string"];
node [fillcolor=beige];
InviteToSquareResponse [label="struct InviteToSquareResponse"];
node [fillcolor=beige];
InviteToSquareChatRequest [label="struct InviteToSquareChatRequest|<field_inviteeMids>inviteeMids :: list\<string\>|<field_squareChatMid>squareChatMid :: string"];
node [fillcolor=beige];
InviteToSquareChatResponse [label="struct InviteToSquareChatResponse|<field_inviteeMids>inviteeMids :: list\<string\>"];
node [fillcolor=beige];
GetSquareMemberRequest [label="struct GetSquareMemberRequest|<field_squareMemberMid>squareMemberMid :: string"];
node [fillcolor=beige];
GetSquareMemberResponse [label="struct GetSquareMemberResponse|<field_squareMember>squareMember :: SquareMember|<field_relation>relation :: SquareMemberRelation|<field_oneOnOneChatMid>oneOnOneChatMid :: string"];
node [fillcolor=beige];
GetSquareMembersRequest [label="struct GetSquareMembersRequest|<field_mids>mids :: set\<string\>"];
node [fillcolor=beige];
GetSquareMembersResponse [label="struct GetSquareMembersResponse|<field_members>members :: SquareMember"];
node [fillcolor=beige];
GetSquareMemberRelationsRequest [label="struct GetSquareMemberRelationsRequest|<field_state>state :: SquareMemberRelationState|<field_continuationToken>continuationToken :: string|<field_limit>limit :: i32"];
node [fillcolor=beige];
GetSquareMemberRelationsResponse [label="struct GetSquareMemberRelationsResponse|<field_squareMembers>squareMembers :: list\<SquareMember\>|<field_relations>relations :: map\<string, SquareMemberRelation\>|<field_continuationToken>continuationToken :: string"];
node [fillcolor=beige];
GetSquareMemberRelationRequest [label="struct GetSquareMemberRelationRequest|<field_squareMid>squareMid :: string|<field_targetSquareMemberMid>targetSquareMemberMid :: string"];
node [fillcolor=beige];
GetSquareMemberRelationResponse [label="struct GetSquareMemberRelationResponse|<field_squareMid>squareMid :: string|<field_targetSquareMemberMid>targetSquareMemberMid :: string|<field_relation>relation :: SquareMemberRelation"];
node [fillcolor=beige];
Category [label="struct Category|<field_id>id :: i32|<field_name>name :: string"];
node [fillcolor=beige];
GetSquareCategoriesRequest [label="struct GetSquareCategoriesRequest"];
node [fillcolor=beige];
GetSquareCategoriesResponse [label="struct GetSquareCategoriesResponse|<field_categoryList>categoryList :: list\<Category\>"];
node [fillcolor=beige];
UpdateSquareRequest [label="struct UpdateSquareRequest|<field_updatedAttrs>updatedAttrs :: set\<SquareAttribute\>|<field_square>square :: Square"];
node [fillcolor=beige];
UpdateSquareResponse [label="struct UpdateSquareResponse|<field_updatedAttrs>updatedAttrs :: set\<SquareAttribute\>|<field_square>square :: Square"];
node [fillcolor=beige];
SearchSquaresRequest [label="struct SearchSquaresRequest|<field_query>query :: string|<field_continuationToken>continuationToken :: string|<field_limit>limit :: i32"];
node [fillcolor=beige];
SearchSquaresResponse [label="struct SearchSquaresResponse|<field_squares>squares :: list\<Square\>|<field_squareStatuses>squareStatuses :: map\<string, SquareStatus\>|<field_myMemberships>myMemberships :: map\<string, SquareMember\>|<field_continuationToken>continuationToken :: string|<field_noteStatuses>noteStatuses :: map\<string, NoteStatus\>"];
node [fillcolor=beige];
GetSquareFeatureSetRequest [label="struct GetSquareFeatureSetRequest|<field_squareMid>squareMid :: string"];
node [fillcolor=beige];
GetSquareFeatureSetResponse [label="struct GetSquareFeatureSetResponse|<field_squareFeatureSet>squareFeatureSet :: SquareFeatureSet"];
node [fillcolor=beige];
UpdateSquareFeatureSetRequest [label="struct UpdateSquareFeatureSetRequest|<field_updateAttributes>updateAttributes :: set\<SquareFeatureSetAttribute\>|<field_squareFeatureSet>squareFeatureSet :: SquareFeatureSet"];
node [fillcolor=beige];
UpdateSquareFeatureSetResponse [label="struct UpdateSquareFeatureSetResponse|<field_updateAttributes>updateAttributes :: set\<SquareFeatureSetAttribute\>|<field_squareFeatureSet>squareFeatureSet :: SquareFeatureSet"];
node [fillcolor=beige];
UpdateSquareMemberRequest [label="struct UpdateSquareMemberRequest|<field_updatedAttrs>updatedAttrs :: set\<SquareMemberAttribute\>|<field_updatedPreferenceAttrs>updatedPreferenceAttrs :: set\<SquarePreferenceAttribute\>|<field_squareMember>squareMember :: SquareMember"];
node [fillcolor=beige];
UpdateSquareMemberResponse [label="struct UpdateSquareMemberResponse|<field_updatedAttrs>updatedAttrs :: set\<SquareMemberAttribute\>|<field_squareMember>squareMember :: SquareMember|<field_updatedPreferenceAttrs>updatedPreferenceAttrs :: set\<SquarePreferenceAttribute\>"];
node [fillcolor=beige];
UpdateSquareMembersRequest [label="struct UpdateSquareMembersRequest|<field_updatedAttrs>updatedAttrs :: set\<SquareMemberAttribute\>|<field_members>members :: list\<SquareMember\>"];
node [fillcolor=beige];
UpdateSquareMembersResponse [label="struct UpdateSquareMembersResponse|<field_updatedAttrs>updatedAttrs :: set\<SquareMemberAttribute\>|<field_editor>editor :: SquareMember|<field_members>members :: map\<string, SquareMember\>"];
node [fillcolor=beige];
RejectSquareMembersRequest [label="struct RejectSquareMembersRequest|<field_squareMid>squareMid :: string|<field_requestedMemberMids>requestedMemberMids :: list\<string\>"];
node [fillcolor=beige];
RejectSquareMembersResponse [label="struct RejectSquareMembersResponse|<field_rejectedMembers>rejectedMembers :: list\<SquareMember\>|<field_status>status :: SquareStatus"];
node [fillcolor=beige];
RemoveSubscriptionsRequest [label="struct RemoveSubscriptionsRequest|<field_unsubscriptions>unsubscriptions :: list\<i64\>"];
node [fillcolor=beige];
RemoveSubscriptionsResponse [label="struct RemoveSubscriptionsResponse"];
node [fillcolor=beige];
RefreshSubscriptionsRequest [label="struct RefreshSubscriptionsRequest|<field_subscriptions>subscriptions :: list\<i64\>"];
node [fillcolor=beige];
RefreshSubscriptionsResponse [label="struct RefreshSubscriptionsResponse|<field_ttlMillis>ttlMillis :: i64|<field_subscriptionStates>subscriptionStates :: map\<i64, SubscriptionState\>"];
node [fillcolor=beige];
UpdateSquareChatRequest [label="struct UpdateSquareChatRequest|<field_updatedAttrs>updatedAttrs :: set\<SquareChatAttribute\>|<field_squareChat>squareChat :: SquareChat"];
node [fillcolor=beige];
UpdateSquareChatResponse [label="struct UpdateSquareChatResponse|<field_updatedAttrs>updatedAttrs :: set\<SquareChatAttribute\>|<field_squareChat>squareChat :: SquareChat"];
node [fillcolor=beige];
DeleteSquareChatRequest [label="struct DeleteSquareChatRequest|<field_squareChatMid>squareChatMid :: string|<field_revision>revision :: i64"];
node [fillcolor=beige];
DeleteSquareChatResponse [label="struct DeleteSquareChatResponse"];
node [fillcolor=beige];
UpdateSquareChatMemberRequest [label="struct UpdateSquareChatMemberRequest|<field_updatedAttrs>updatedAttrs :: set\<SquareChatMemberAttribute\>|<field_chatMember>chatMember :: SquareChatMember"];
node [fillcolor=beige];
UpdateSquareChatMemberResponse [label="struct UpdateSquareChatMemberResponse|<field_updatedChatMember>updatedChatMember :: SquareChatMember"];
node [fillcolor=beige];
UpdateSquareAuthorityRequest [label="struct UpdateSquareAuthorityRequest|<field_updateAttributes>updateAttributes :: set\<SquareAuthorityAttribute\>|<field_authority>authority :: SquareAuthority"];
node [fillcolor=beige];
UpdateSquareAuthorityResponse [label="struct UpdateSquareAuthorityResponse|<field_updatdAttributes>updatdAttributes :: set\<SquareAuthorityAttribute\>|<field_authority>authority :: SquareAuthority"];
node [fillcolor=beige];
UpdateSquareMemberRelationRequest [label="struct UpdateSquareMemberRelationRequest|<field_squareMid>squareMid :: string|<field_targetSquareMemberMid>targetSquareMemberMid :: string|<field_updatedAttrs>updatedAttrs :: set\<SquareMemberRelationAttribute\>|<field_relation>relation :: SquareMemberRelation"];
node [fillcolor=beige];
UpdateSquareMemberRelationResponse [label="struct UpdateSquareMemberRelationResponse|<field_squareMid>squareMid :: string|<field_targetSquareMemberMid>targetSquareMemberMid :: string|<field_updatedAttrs>updatedAttrs :: set\<SquareMemberRelationAttribute\>|<field_relation>relation :: SquareMemberRelation"];
node [fillcolor=beige];
ReportSquareRequest [label="struct ReportSquareRequest|<field_squareMid>squareMid :: string|<field_reportType>reportType :: ReportType|<field_otherReason>otherReason :: string"];
node [fillcolor=beige];
ReportSquareResponse [label="struct ReportSquareResponse"];
node [fillcolor=beige];
ReportSquareChatRequest [label="struct ReportSquareChatRequest|<field_squareMid>squareMid :: string|<field_squareChatMid>squareChatMid :: string|<field_reportType>reportType :: ReportType|<field_otherReason>otherReason :: string"];
node [fillcolor=beige];
ReportSquareChatResponse [label="struct ReportSquareChatResponse"];
node [fillcolor=beige];
ReportSquareMessageRequest [label="struct ReportSquareMessageRequest|<field_squareMid>squareMid :: string|<field_squareChatMid>squareChatMid :: string|<field_squareMessageId>squareMessageId :: string|<field_reportType>reportType :: ReportType|<field_otherReason>otherReason :: string"];
node [fillcolor=beige];
ReportSquareMessageResponse [label="struct ReportSquareMessageResponse"];
node [fillcolor=beige];
ReportSquareMemberRequest [label="struct ReportSquareMemberRequest|<field_squareMemberMid>squareMemberMid :: string|<field_reportType>reportType :: ReportType|<field_otherReason>otherReason :: string|<field_squareChatMid>squareChatMid :: string"];
node [fillcolor=beige];
ReportSquareMemberResponse [label="struct ReportSquareMemberResponse"];
node [fillcolor=beige];
GetSquareRequest [label="struct GetSquareRequest|<field_mid>mid :: string"];
node [fillcolor=beige];
GetSquareResponse [label="struct GetSquareResponse|<field_square>square :: Square|<field_myMembership>myMembership :: SquareMember|<field_squareAuthority>squareAuthority :: SquareAuthority|<field_squareStatus>squareStatus :: SquareStatus|<field_squareFeatureSet>squareFeatureSet :: SquareFeatureSet|<field_noteStatus>noteStatus :: NoteStatus"];
node [fillcolor=beige];
GetSquareStatusRequest [label="struct GetSquareStatusRequest|<field_squareMid>squareMid :: string"];
node [fillcolor=beige];
GetSquareStatusResponse [label="struct GetSquareStatusResponse|<field_squareStatus>squareStatus :: SquareStatus"];
node [fillcolor=beige];
GetNoteStatusRequest [label="struct GetNoteStatusRequest|<field_squareMid>squareMid :: string"];
node [fillcolor=beige];
GetNoteStatusResponse [label="struct GetNoteStatusResponse|<field_squareMid>squareMid :: string|<field_status>status :: NoteStatus"];
node [fillcolor=beige];
CreateSquareChatAnnouncementRequest [label="struct CreateSquareChatAnnouncementRequest|<field_reqSeq>reqSeq :: i32|<field_squareChatMid>squareChatMid :: string|<field_squareChatAnnouncement>squareChatAnnouncement :: SquareChatAnnouncement"];
node [fillcolor=beige];
CreateSquareChatAnnouncementResponse [label="struct CreateSquareChatAnnouncementResponse|<field_announcement>announcement :: SquareChatAnnouncement"];
node [fillcolor=beige];
DeleteSquareChatAnnouncementRequest [label="struct DeleteSquareChatAnnouncementRequest|<field_squareChatMid>squareChatMid :: string|<field_announcementSeq>announcementSeq :: i64"];
node [fillcolor=beige];
DeleteSquareChatAnnouncementResponse [label="struct DeleteSquareChatAnnouncementResponse"];
node [fillcolor=beige];
GetSquareChatAnnouncementsRequest [label="struct GetSquareChatAnnouncementsRequest|<field_squareChatMid>squareChatMid :: string"];
node [fillcolor=beige];
GetSquareChatAnnouncementsResponse [label="struct GetSquareChatAnnouncementsResponse|<field_announcements>announcements :: list\<SquareChatAnnouncement\>"];
node [fillcolor=beige];
GetJoinedSquareChatsRequest [label="struct GetJoinedSquareChatsRequest|<field_continuationToken>continuationToken :: string|<field_limit>limit :: i32"];
node [fillcolor=beige];
GetJoinedSquareChatsResponse [label="struct GetJoinedSquareChatsResponse|<field_chats>chats :: list\<SquareChat\>|<field_chatMembers>chatMembers :: map\<string, SquareChatMember\>|<field_statuses>statuses :: map\<string, SquareChatStatus\>|<field_continuationToken>continuationToken :: string"];
node [fillcolor=lightpink];
TalkException [label="exception TalkException|<field_code>code :: ErrorCode|<field_reason>reason :: string|<field_parameterMap>parameterMap :: map\<string, string\>"];
node [fillcolor=lightpink];
ShouldSyncException [label="exception ShouldSyncException|<field_syncOpRevision>syncOpRevision :: i64|<field_syncScope>syncScope :: SyncScope|<field_syncReason>syncReason :: SyncTriggerReason|<field_message>message :: string"];
node [fillcolor=lightpink];
PointException [label="exception PointException|<field_code>code :: PointErrorCode|<field_reason>reason :: string|<field_extra>extra :: map\<string, string\>"];
node [fillcolor=lightpink];
ChannelException [label="exception ChannelException|<field_code>code :: ChannelErrorCode|<field_reason>reason :: string|<field_parameterMap>parameterMap :: map\<string, string\>"];
node [fillcolor=lightpink];
SquareException [label="exception SquareException|<field_errorCode>errorCode :: SQErrorCode|<field_errorExtraInfo>errorExtraInfo :: ErrorExtraInfo|<field_reason>reason :: string"];
node [fillcolor=lightpink];
UniversalNotificationServiceException [label="exception UniversalNotificationServiceException|<field_code>code :: UniversalNotificationServiceErrorCode|<field_reason>reason :: string|<field_parameterMap>parameterMap :: map\<string, string\>"];
node [fillcolor=beige];
UpdateBuddyProfileResult [label="struct UpdateBuddyProfileResult|<field_requestId>requestId :: string|<field_state>state :: BuddyResultState|<field_eventNo>eventNo :: i32|<field_receiverCount>receiverCount :: i64|<field_successCount>successCount :: i64|<field_failCount>failCount :: i64|<field_cancelCount>cancelCount :: i64|<field_unregisterCount>unregisterCount :: i64|<field_timestamp>timestamp :: i64|<field_message>message :: string"];
node [fillcolor=beige];
UserAuthStatus [label="struct UserAuthStatus|<field_phoneNumberRegistered>phoneNumberRegistered :: bool|<field_registeredSnsIdTypes>registeredSnsIdTypes :: list\<SnsIdType\>"];
node [fillcolor=beige];
WapInvitation [label="struct WapInvitation|<field_type>type :: WapInvitationType|<field_inviteeEmail>inviteeEmail :: string|<field_inviterMid>inviterMid :: string|<field_roomMid>roomMid :: string"];
node [fillcolor=beige];
GroupCall [label="struct GroupCall|<field_online>online :: bool|<field_chatMid>chatMid :: string|<field_hostMids>hostMids :: string|<field_memberMids>memberMids :: list\<string\>|<field_started>started :: i64|<field_mediaType>mediaType :: GroupCallMediaType"];
node [fillcolor=beige];
GroupCallRoute [label="struct GroupCallRoute|<field_token>token :: string|<field_cscf>cscf :: CallHost|<field_mix>mix :: CallHost"];
subgraph cluster_AccountSupervisorService {
node [fillcolor=bisque];
style=dashed;
label = "AccountSupervisorService service";
function_AccountSupervisorServicegetRSAKey[label="<return_type>function getRSAKey :: RSAKey"];
function_AccountSupervisorServicenotifyEmailConfirmationResult[label="<return_type>function notifyEmailConfirmationResult :: void|<param_parameterMap>parameterMap :: map\<string, string\>"];
function_AccountSupervisorServiceregisterVirtualAccount[label="<return_type>function registerVirtualAccount :: string|<param_locale>locale :: string|<param_encryptedVirtualUserId>encryptedVirtualUserId :: string|<param_encryptedPassword>encryptedPassword :: string"];
function_AccountSupervisorServicerequestVirtualAccountPasswordChange[label="<return_type>function requestVirtualAccountPasswordChange :: void|<param_virtualMid>virtualMid :: string|<param_encryptedVirtualUserId>encryptedVirtualUserId :: string|<param_encryptedOldPassword>encryptedOldPassword :: string|<param_encryptedNewPassword>encryptedNewPassword :: string"];
function_AccountSupervisorServicerequestVirtualAccountPasswordSet[label="<return_type>function requestVirtualAccountPasswordSet :: void|<param_virtualMid>virtualMid :: string|<param_encryptedVirtualUserId>encryptedVirtualUserId :: string|<param_encryptedNewPassword>encryptedNewPassword :: string"];
function_AccountSupervisorServiceunregisterVirtualAccount[label="<return_type>function unregisterVirtualAccount :: void|<param_virtualMid>virtualMid :: string"];
 }
subgraph cluster_SpotService {
node [fillcolor=bisque];
style=dashed;
label = "SpotService service";
function_SpotServicelookupByPhoneNumber[label="<return_type>function lookupByPhoneNumber :: SpotPhoneNumberResponse|<param_countryAreaCode>countryAreaCode :: string|<param_phoneNumber>phoneNumber :: string"];
function_SpotServicelookupNearby[label="<return_type>function lookupNearby :: SpotNearbyResponse|<param_location>location :: Location|<param_category>category :: SpotCategory|<param_query>query :: string|<param_countryAreaCode>countryAreaCode :: string"];
 }
subgraph cluster_BotService {
node [fillcolor=bisque];
style=dashed;
label = "BotService service";
function_BotServicenotifyLeaveGroup[label="<return_type>function notifyLeaveGroup :: void|<param_groupMid>groupMid :: string"];
function_BotServicenotifyLeaveRoom[label="<return_type>function notifyLeaveRoom :: void|<param_roomMid>roomMid :: string"];
function_BotServicegetBotUseInfo[label="<return_type>function getBotUseInfo :: BotUseInfo|<param_botMid>botMid :: string"];
function_BotServicesendChatCheckedByWatermark[label="<return_type>function sendChatCheckedByWatermark :: void|<param_seq>seq :: i32|<param_mid>mid :: string|<param_watermark>watermark :: i64|<param_sessionId>sessionId :: i8"];
 }
subgraph cluster_AgeCheckService {
node [fillcolor=bisque];
style=dashed;
label = "AgeCheckService service";
function_AgeCheckServicecheckUserAge[label="<return_type>function checkUserAge :: UserAgeType|<param_carrier>carrier :: CarrierCode|<param_sessionId>sessionId :: string|<param_verifier>verifier :: string|<param_standardAge>standardAge :: i32"];
function_AgeCheckServicecheckUserAgeWithDocomo[label="<return_type>function checkUserAgeWithDocomo :: AgeCheckDocomoResult|<param_openIdRedirectUrl>openIdRedirectUrl :: string|<param_standardAge>standardAge :: i32|<param_verifier>verifier :: string"];
function_AgeCheckServiceretrieveOpenIdAuthUrlWithDocomo[label="<return_type>function retrieveOpenIdAuthUrlWithDocomo :: string"];
function_AgeCheckServiceretrieveRequestToken[label="<return_type>function retrieveRequestToken :: AgeCheckRequestResult|<param_carrier>carrier :: CarrierCode"];
 }
subgraph cluster_BuddyManagementService {
node [fillcolor=bisque];
style=dashed;
label = "BuddyManagementService service";
function_BuddyManagementServiceaddBuddyMember[label="<return_type>function addBuddyMember :: void|<param_requestId>requestId :: string|<param_userMid>userMid :: string"];
function_BuddyManagementServiceaddBuddyMembers[label="<return_type>function addBuddyMembers :: void|<param_requestId>requestId :: string|<param_userMids>userMids :: list\<string\>"];
function_BuddyManagementServiceblockBuddyMember[label="<return_type>function blockBuddyMember :: void|<param_requestId>requestId :: string|<param_mid>mid :: string"];
function_BuddyManagementServicecommitSendMessagesToAll[label="<return_type>function commitSendMessagesToAll :: list\<SendBuddyMessageResult\>|<param_requestIdList>requestIdList :: list\<string\>"];
function_BuddyManagementServicecommitSendMessagesToMids[label="<return_type>function commitSendMessagesToMids :: list\<SendBuddyMessageResult\>|<param_requestIdList>requestIdList :: list\<string\>|<param_mids>mids :: list\<string\>"];
function_BuddyManagementServicecontainsBuddyMember[label="<return_type>function containsBuddyMember :: bool|<param_requestId>requestId :: string|<param_userMid>userMid :: string"];
function_BuddyManagementServicedownloadMessageContent[label="<return_type>function downloadMessageContent :: binary|<param_requestId>requestId :: string|<param_messageId>messageId :: string"];
function_BuddyManagementServicedownloadMessageContentPreview[label="<return_type>function downloadMessageContentPreview :: binary|<param_requestId>requestId :: string|<param_messageId>messageId :: string"];
function_BuddyManagementServicedownloadProfileImage[label="<return_type>function downloadProfileImage :: binary|<param_requestId>requestId :: string"];
function_BuddyManagementServicedownloadProfileImagePreview[label="<return_type>function downloadProfileImagePreview :: binary|<param_requestId>requestId :: string"];
function_BuddyManagementServicegetActiveMemberCountByBuddyMid[label="<return_type>function getActiveMemberCountByBuddyMid :: i64|<param_buddyMid>buddyMid :: string"];
function_BuddyManagementServicegetActiveMemberMidsByBuddyMid[label="<return_type>function getActiveMemberMidsByBuddyMid :: list\<string\>|<param_buddyMid>buddyMid :: string"];
function_BuddyManagementServicegetAllBuddyMembers[label="<return_type>function getAllBuddyMembers :: list\<string\>"];
function_BuddyManagementServicegetBlockedBuddyMembers[label="<return_type>function getBlockedBuddyMembers :: list\<string\>"];
function_BuddyManagementServicegetBlockerCountByBuddyMid[label="<return_type>function getBlockerCountByBuddyMid :: i64|<param_buddyMid>buddyMid :: string"];
function_BuddyManagementServicegetBuddyDetailByMid[label="<return_type>function getBuddyDetailByMid :: BuddyDetail|<param_buddyMid>buddyMid :: string"];
function_BuddyManagementServicegetBuddyProfile[label="<return_type>function getBuddyProfile :: BuddyProfile"];
function_BuddyManagementServicegetContactTicket[label="<return_type>function getContactTicket :: Ticket"];
function_BuddyManagementServicegetMemberCountByBuddyMid[label="<return_type>function getMemberCountByBuddyMid :: i64|<param_buddyMid>buddyMid :: string"];
function_BuddyManagementServicegetSendBuddyMessageResult[label="<return_type>function getSendBuddyMessageResult :: SendBuddyMessageResult|<param_sendBuddyMessageRequestId>sendBuddyMessageRequestId :: string"];
function_BuddyManagementServicegetSetBuddyOnAirResult[label="<return_type>function getSetBuddyOnAirResult :: SetBuddyOnAirResult|<param_setBuddyOnAirRequestId>setBuddyOnAirRequestId :: string"];
function_BuddyManagementServicegetUpdateBuddyProfileResult[label="<return_type>function getUpdateBuddyProfileResult :: UpdateBuddyProfileResult|<param_updateBuddyProfileRequestId>updateBuddyProfileRequestId :: string"];
function_BuddyManagementServiceisBuddyOnAirByMid[label="<return_type>function isBuddyOnAirByMid :: bool|<param_buddyMid>buddyMid :: string"];
function_BuddyManagementServicelinkAndSendBuddyContentMessageToAllAsync[label="<return_type>function linkAndSendBuddyContentMessageToAllAsync :: string|<param_requestId>requestId :: string|<param_msg>msg :: Message|<param_sourceContentId>sourceContentId :: string"];
function_BuddyManagementServicelinkAndSendBuddyContentMessageToMids[label="<return_type>function linkAndSendBuddyContentMessageToMids :: SendBuddyMessageResult|<param_requestId>requestId :: string|<param_msg>msg :: Message|<param_sourceContentId>sourceContentId :: string|<param_mids>mids :: list\<string\>"];
function_BuddyManagementServicenotifyBuddyBlocked[label="<return_type>function notifyBuddyBlocked :: void|<param_buddyMid>buddyMid :: string|<param_blockerMid>blockerMid :: string"];
function_BuddyManagementServicenotifyBuddyUnblocked[label="<return_type>function notifyBuddyUnblocked :: void|<param_buddyMid>buddyMid :: string|<param_blockerMid>blockerMid :: string"];
function_BuddyManagementServiceregisterBuddy[label="<return_type>function registerBuddy :: string|<param_buddyId>buddyId :: string|<param_searchId>searchId :: string|<param_displayName>displayName :: string|<param_statusMeessage>statusMeessage :: string|<param_picture>picture :: binary|<param_settings>settings :: map\<string, string\>"];
function_BuddyManagementServiceregisterBuddyAdmin[label="<return_type>function registerBuddyAdmin :: string|<param_buddyId>buddyId :: string|<param_searchId>searchId :: string|<param_displayName>displayName :: string|<param_statusMessage>statusMessage :: string|<param_picture>picture :: binary"];
function_BuddyManagementServicereissueContactTicket[label="<return_type>function reissueContactTicket :: string|<param_expirationTime>expirationTime :: i64|<param_maxUseCount>maxUseCount :: i32"];
function_BuddyManagementServiceremoveBuddyMember[label="<return_type>function removeBuddyMember :: void|<param_requestId>requestId :: string|<param_userMid>userMid :: string"];
function_BuddyManagementServiceremoveBuddyMembers[label="<return_type>function removeBuddyMembers :: void|<param_requestId>requestId :: string|<param_userMids>userMids :: list\<string\>"];
function_BuddyManagementServicesendBuddyContentMessageToAll[label="<return_type>function sendBuddyContentMessageToAll :: SendBuddyMessageResult|<param_requestId>requestId :: string|<param_msg>msg :: Message|<param_content>content :: binary"];
function_BuddyManagementServicesendBuddyContentMessageToAllAsync[label="<return_type>function sendBuddyContentMessageToAllAsync :: string|<param_requestId>requestId :: string|<param_msg>msg :: Message|<param_content>content :: binary"];
function_BuddyManagementServicesendBuddyContentMessageToMids[label="<return_type>function sendBuddyContentMessageToMids :: SendBuddyMessageResult|<param_requestId>requestId :: string|<param_msg>msg :: Message|<param_content>content :: binary|<param_mids>mids :: list\<string\>"];
function_BuddyManagementServicesendBuddyContentMessageToMidsAsync[label="<return_type>function sendBuddyContentMessageToMidsAsync :: string|<param_requestId>requestId :: string|<param_msg>msg :: Message|<param_content>content :: binary|<param_mids>mids :: list\<string\>"];
function_BuddyManagementServicesendBuddyMessageToAll[label="<return_type>function sendBuddyMessageToAll :: SendBuddyMessageResult|<param_requestId>requestId :: string|<param_msg>msg :: Message"];
function_BuddyManagementServicesendBuddyMessageToAllAsync[label="<return_type>function sendBuddyMessageToAllAsync :: string|<param_requestId>requestId :: string|<param_msg>msg :: Message"];
function_BuddyManagementServicesendBuddyMessageToMids[label="<return_type>function sendBuddyMessageToMids :: SendBuddyMessageResult|<param_requestId>requestId :: string|<param_msg>msg :: Message|<param_mids>mids :: list\<string\>"];
function_BuddyManagementServicesendBuddyMessageToMidsAsync[label="<return_type>function sendBuddyMessageToMidsAsync :: string|<param_requestId>requestId :: string|<param_msg>msg :: Message|<param_mids>mids :: list\<string\>"];
function_BuddyManagementServicesendIndividualEventToAllAsync[label="<return_type>function sendIndividualEventToAllAsync :: void|<param_requestId>requestId :: string|<param_buddyMid>buddyMid :: string|<param_notificationStatus>notificationStatus :: NotificationStatus"];
function_BuddyManagementServicesetBuddyOnAir[label="<return_type>function setBuddyOnAir :: SetBuddyOnAirResult|<param_requestId>requestId :: string|<param_onAir>onAir :: bool"];
function_BuddyManagementServicesetBuddyOnAirAsync[label="<return_type>function setBuddyOnAirAsync :: string|<param_requestId>requestId :: string|<param_onAir>onAir :: bool"];
function_BuddyManagementServicestoreMessage[label="<return_type>function storeMessage :: SendBuddyMessageResult|<param_requestId>requestId :: string|<param_messageRequest>messageRequest :: BuddyMessageRequest"];
function_BuddyManagementServiceunblockBuddyMember[label="<return_type>function unblockBuddyMember :: void|<param_requestId>requestId :: string|<param_mid>mid :: string"];
function_BuddyManagementServiceunregisterBuddy[label="<return_type>function unregisterBuddy :: void|<param_requestId>requestId :: string"];
function_BuddyManagementServiceunregisterBuddyAdmin[label="<return_type>function unregisterBuddyAdmin :: void|<param_requestId>requestId :: string"];
function_BuddyManagementServiceupdateBuddyAdminProfileAttribute[label="<return_type>function updateBuddyAdminProfileAttribute :: void|<param_requestId>requestId :: string|<param_attributes>attributes :: map\<string, string\>"];
function_BuddyManagementServiceupdateBuddyAdminProfileImage[label="<return_type>function updateBuddyAdminProfileImage :: void|<param_requestId>requestId :: string|<param_picture>picture :: binary"];
function_BuddyManagementServiceupdateBuddyProfileAttributes[label="<return_type>function updateBuddyProfileAttributes :: UpdateBuddyProfileResult|<param_requestId>requestId :: string|<param_attributes>attributes :: map\<string, string\>"];
function_BuddyManagementServiceupdateBuddyProfileAttributesAsync[label="<return_type>function updateBuddyProfileAttributesAsync :: string|<param_requestId>requestId :: string|<param_attributes>attributes :: map\<string, string\>"];
function_BuddyManagementServiceupdateBuddyProfileImage[label="<return_type>function updateBuddyProfileImage :: UpdateBuddyProfileResult|<param_requestId>requestId :: string|<param_image>image :: binary"];
function_BuddyManagementServiceupdateBuddyProfileImageAsync[label="<return_type>function updateBuddyProfileImageAsync :: string|<param_requestId>requestId :: string|<param_image>image :: binary"];
function_BuddyManagementServiceupdateBuddySearchId[label="<return_type>function updateBuddySearchId :: void|<param_requestId>requestId :: string|<param_searchId>searchId :: string"];
function_BuddyManagementServiceupdateBuddySettings[label="<return_type>function updateBuddySettings :: void|<param_settings>settings :: map\<string, string\>"];
function_BuddyManagementServiceuploadBuddyContent[label="<return_type>function uploadBuddyContent :: string|<param_contentType>contentType :: ContentType|<param_content>content :: binary"];
 }
subgraph cluster_BuddyService {
node [fillcolor=bisque];
style=dashed;
label = "BuddyService service";
function_BuddyServicefindBuddyContactsByQuery[label="<return_type>function findBuddyContactsByQuery :: list\<BuddySearchResult\>|<param_language>language :: string|<param_country>country :: string|<param_query>query :: string|<param_fromIndex>fromIndex :: i32|<param_count>count :: i32|<param_requestSource>requestSource :: BuddySearchRequestSource"];
function_BuddyServicegetBuddyContacts[label="<return_type>function getBuddyContacts :: list\<Contact\>|<param_language>language :: string|<param_country>country :: string|<param_classification>classification :: string|<param_fromIndex>fromIndex :: i32|<param_count>count :: i32"];
function_BuddyServicegetBuddyDetail[label="<return_type>function getBuddyDetail :: BuddyDetail|<param_buddyMid>buddyMid :: string"];
function_BuddyServicegetBuddyOnAir[label="<return_type>function getBuddyOnAir :: BuddyOnAir|<param_buddyMid>buddyMid :: string"];
function_BuddyServicegetCountriesHavingBuddy[label="<return_type>function getCountriesHavingBuddy :: list\<string\>"];
function_BuddyServicegetNewlyReleasedBuddyIds[label="<return_type>function getNewlyReleasedBuddyIds :: map\<string, i64\>|<param_country>country :: string"];
function_BuddyServicegetPopularBuddyBanner[label="<return_type>function getPopularBuddyBanner :: BuddyBanner|<param_language>language :: string|<param_country>country :: string|<param_applicationType>applicationType :: ApplicationType|<param_resourceSpecification>resourceSpecification :: string"];
function_BuddyServicegetPopularBuddyLists[label="<return_type>function getPopularBuddyLists :: list\<BuddyList\>|<param_language>language :: string|<param_country>country :: string"];
function_BuddyServicegetPromotedBuddyContacts[label="<return_type>function getPromotedBuddyContacts :: list\<Contact\>|<param_language>language :: string|<param_country>country :: string"];
 }
subgraph cluster_ChannelApplicationProvidedService {
node [fillcolor=bisque];
style=dashed;
label = "ChannelApplicationProvidedService service";
function_ChannelApplicationProvidedServiceactiveBuddySubscriberCount[label="<return_type>function activeBuddySubscriberCount :: i64"];
function_ChannelApplicationProvidedServiceaddOperationForChannel[label="<return_type>function addOperationForChannel :: void|<param_opType>opType :: OpType|<param_param1>param1 :: string|<param_param2>param2 :: string|<param_param3>param3 :: string"];
function_ChannelApplicationProvidedServicedisplayBuddySubscriberCount[label="<return_type>function displayBuddySubscriberCount :: i64"];
function_ChannelApplicationProvidedServicefindContactByUseridWithoutAbuseBlockForChannel[label="<return_type>function findContactByUseridWithoutAbuseBlockForChannel :: Contact|<param_userid>userid :: string"];
function_ChannelApplicationProvidedServicegetAllContactIdsForChannel[label="<return_type>function getAllContactIdsForChannel :: list\<string\>"];
function_ChannelApplicationProvidedServicegetCompactContacts[label="<return_type>function getCompactContacts :: list\<CompactContact\>|<param_lastModifiedTimestamp>lastModifiedTimestamp :: i64"];
function_ChannelApplicationProvidedServicegetContactsForChannel[label="<return_type>function getContactsForChannel :: list\<Contact\>|<param_ids>ids :: list\<string\>"];
function_ChannelApplicationProvidedServicegetDisplayName[label="<return_type>function getDisplayName :: string|<param_mid>mid :: string"];
function_ChannelApplicationProvidedServicegetFavoriteMidsForChannel[label="<return_type>function getFavoriteMidsForChannel :: list\<string\>"];
function_ChannelApplicationProvidedServicegetFriendMids[label="<return_type>function getFriendMids :: list\<string\>"];
function_ChannelApplicationProvidedServicegetGroupMemberMids[label="<return_type>function getGroupMemberMids :: list\<string\>|<param_groupId>groupId :: string"];
function_ChannelApplicationProvidedServicegetGroupsForChannel[label="<return_type>function getGroupsForChannel :: list\<Group\>|<param_groupIds>groupIds :: list\<string\>"];
function_ChannelApplicationProvidedServicegetIdentityCredential[label="<return_type>function getIdentityCredential :: IdentityCredential"];
function_ChannelApplicationProvidedServicegetJoinedGroupIdsForChannel[label="<return_type>function getJoinedGroupIdsForChannel :: list\<string\>"];
function_ChannelApplicationProvidedServicegetMetaProfile[label="<return_type>function getMetaProfile :: MetaProfile"];
function_ChannelApplicationProvidedServicegetMid[label="<return_type>function getMid :: string"];
function_ChannelApplicationProvidedServicegetPrimaryClientForChannel[label="<return_type>function getPrimaryClientForChannel :: SimpleChannelClient"];
function_ChannelApplicationProvidedServicegetProfileForChannel[label="<return_type>function getProfileForChannel :: Profile"];
function_ChannelApplicationProvidedServicegetSimpleChannelContacts[label="<return_type>function getSimpleChannelContacts :: list\<SimpleChannelContact\>|<param_ids>ids :: list\<string\>"];
function_ChannelApplicationProvidedServicegetUserCountryForBilling[label="<return_type>function getUserCountryForBilling :: string|<param_country>country :: string|<param_remoteIp>remoteIp :: string"];
function_ChannelApplicationProvidedServicegetUserCreateTime[label="<return_type>function getUserCreateTime :: i64"];
function_ChannelApplicationProvidedServicegetUserIdentities[label="<return_type>function getUserIdentities :: map\<RegistrationType, string\>"];
function_ChannelApplicationProvidedServicegetUserLanguage[label="<return_type>function getUserLanguage :: string"];
function_ChannelApplicationProvidedServicegetUserMidsWhoAddedMe[label="<return_type>function getUserMidsWhoAddedMe :: list\<string\>"];
function_ChannelApplicationProvidedServiceisGroupMember[label="<return_type>function isGroupMember :: bool|<param_groupId>groupId :: string"];
function_ChannelApplicationProvidedServiceisInContact[label="<return_type>function isInContact :: bool|<param_mid>mid :: string"];
function_ChannelApplicationProvidedServiceregisterChannelCP[label="<return_type>function registerChannelCP :: string|<param_cpId>cpId :: string|<param_registerPassword>registerPassword :: string"];
function_ChannelApplicationProvidedServiceremoveNotificationStatus[label="<return_type>function removeNotificationStatus :: void|<param_notificationStatus>notificationStatus :: NotificationStatus"];
function_ChannelApplicationProvidedServicesendMessageForChannel[label="<return_type>function sendMessageForChannel :: Message|<param_message>message :: Message"];
function_ChannelApplicationProvidedServicesendPinCodeOperation[label="<return_type>function sendPinCodeOperation :: void|<param_verifier>verifier :: string"];
function_ChannelApplicationProvidedServiceupdateProfileAttributeForChannel[label="<return_type>function updateProfileAttributeForChannel :: void|<param_profileAttribute>profileAttribute :: ProfileAttribute|<param_value>value :: string"];
 }
subgraph cluster_ChannelService {
node [fillcolor=bisque];
style=dashed;
label = "ChannelService service";
function_ChannelServiceissueOTP[label="<return_type>function issueOTP :: OTPResult|<param_channelId>channelId :: string"];
function_ChannelServiceapproveChannelAndIssueChannelToken[label="<return_type>function approveChannelAndIssueChannelToken :: ChannelToken|<param_channelId>channelId :: string"];
function_ChannelServiceapproveChannelAndIssueRequestToken[label="<return_type>function approveChannelAndIssueRequestToken :: string|<param_channelId>channelId :: string|<param_otpId>otpId :: string"];
function_ChannelServicefetchNotificationItems[label="<return_type>function fetchNotificationItems :: NotificationFetchResult|<param_localRev>localRev :: i64"];
function_ChannelServicegetApprovedChannels[label="<return_type>function getApprovedChannels :: ApprovedChannelInfos|<param_lastSynced>lastSynced :: i64|<param_locale>locale :: string"];
function_ChannelServicegetChannelInfo[label="<return_type>function getChannelInfo :: ChannelInfo|<param_channelId>channelId :: string|<param_locale>locale :: string"];
function_ChannelServicegetChannelNotificationSetting[label="<return_type>function getChannelNotificationSetting :: ChannelNotificationSetting|<param_channelId>channelId :: string|<param_locale>locale :: string"];
function_ChannelServicegetChannelNotificationSettings[label="<return_type>function getChannelNotificationSettings :: list\<ChannelNotificationSetting\>|<param_locale>locale :: string"];
function_ChannelServicegetChannels[label="<return_type>function getChannels :: ChannelInfos|<param_lastSynced>lastSynced :: i64|<param_locale>locale :: string"];
function_ChannelServicegetDomains[label="<return_type>function getDomains :: ChannelDomains|<param_lastSynced>lastSynced :: i64"];
function_ChannelServicegetFriendChannelMatrices[label="<return_type>function getFriendChannelMatrices :: FriendChannelMatricesResponse|<param_channelIds>channelIds :: list\<string\>"];
function_ChannelServiceupdateChannelSettings[label="<return_type>function updateChannelSettings :: bool|<param_channelSettings>channelSettings :: ChannelSettings"];
function_ChannelServicegetCommonDomains[label="<return_type>function getCommonDomains :: ChannelDomains|<param_lastSynced>lastSynced :: i64"];
function_ChannelServicegetNotificationBadgeCount[label="<return_type>function getNotificationBadgeCount :: i32|<param_localRev>localRev :: i64"];
function_ChannelServiceissueChannelToken[label="<return_type>function issueChannelToken :: ChannelToken|<param_channelId>channelId :: string"];
function_ChannelServiceissueRequestToken[label="<return_type>function issueRequestToken :: string|<param_channelId>channelId :: string|<param_otpId>otpId :: string"];
function_ChannelServiceissueRequestTokenWithAuthScheme[label="<return_type>function issueRequestTokenWithAuthScheme :: RequestTokenResponse|<param_channelId>channelId :: string|<param_otpId>otpId :: string|<param_authScheme>authScheme :: list\<string\>|<param_returnUrl>returnUrl :: string"];
function_ChannelServiceissueRequestTokenForAutoLogin[label="<return_type>function issueRequestTokenForAutoLogin :: string|<param_channelId>channelId :: string|<param_otpId>otpId :: string|<param_redirectUrl>redirectUrl :: string"];
function_ChannelServicegetUpdatedChannelIds[label="<return_type>function getUpdatedChannelIds :: list\<string\>|<param_channelIds>channelIds :: list\<ChannelIdWithLastUpdated\>"];
function_ChannelServicereserveCoinUse[label="<return_type>function reserveCoinUse :: string|<param_request>request :: CoinUseReservation|<param_locale>locale :: string"];
function_ChannelServicerevokeChannel[label="<return_type>function revokeChannel :: void|<param_channelId>channelId :: string"];
function_ChannelServicesyncChannelData[label="<return_type>function syncChannelData :: ChannelSyncDatas|<param_lastSynced>lastSynced :: i64|<param_locale>locale :: string"];
function_ChannelServiceupdateChannelNotificationSetting[label="<return_type>function updateChannelNotificationSetting :: void|<param_setting>setting :: list\<ChannelNotificationSetting\>"];
 }
subgraph cluster_MessageService {
node [fillcolor=bisque];
style=dashed;
label = "MessageService service";
function_MessageServicefetchMessageOperations[label="<return_type>function fetchMessageOperations :: MessageOperations|<param_localRevision>localRevision :: i64|<param_lastOpTimestamp>lastOpTimestamp :: i64|<param_count>count :: i32"];
function_MessageServicegetLastReadMessageIds[label="<return_type>function getLastReadMessageIds :: LastReadMessageIds|<param_chatId>chatId :: string"];
function_MessageServicemultiGetLastReadMessageIds[label="<return_type>function multiGetLastReadMessageIds :: list\<LastReadMessageIds\>|<param_chatIds>chatIds :: list\<string\>"];
 }
subgraph cluster_ShopService {
node [fillcolor=bisque];
style=dashed;
label = "ShopService service";
function_ShopServicebuyCoinProduct[label="<return_type>function buyCoinProduct :: void|<param_paymentReservation>paymentReservation :: PaymentReservation"];
function_ShopServicebuyFreeProduct[label="<return_type>function buyFreeProduct :: void|<param_receiverMid>receiverMid :: string|<param_productId>productId :: string|<param_messageTemplate>messageTemplate :: i32|<param_language>language :: string|<param_country>country :: string|<param_packageId>packageId :: i64"];
function_ShopServicebuyMustbuyProduct[label="<return_type>function buyMustbuyProduct :: void|<param_receiverMid>receiverMid :: string|<param_productId>productId :: string|<param_messageTemplate>messageTemplate :: i32|<param_language>language :: string|<param_country>country :: string|<param_packageId>packageId :: i64|<param_serialNumber>serialNumber :: string"];
function_ShopServicecheckCanReceivePresent[label="<return_type>function checkCanReceivePresent :: void|<param_recipientMid>recipientMid :: string|<param_packageId>packageId :: i64|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetActivePurchases[label="<return_type>function getActivePurchases :: ProductList|<param_start>start :: i64|<param_size>size :: i32|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetActivePurchaseVersions[label="<return_type>function getActivePurchaseVersions :: ProductSimpleList|<param_start>start :: i64|<param_size>size :: i32|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetCoinProducts[label="<return_type>function getCoinProducts :: list\<CoinProductItem\>|<param_appStoreCode>appStoreCode :: PaymentType|<param_country>country :: string|<param_language>language :: string"];
function_ShopServicegetCoinProductsByPgCode[label="<return_type>function getCoinProductsByPgCode :: list\<CoinProductItem\>|<param_appStoreCode>appStoreCode :: PaymentType|<param_pgCode>pgCode :: PaymentPgType|<param_country>country :: string|<param_language>language :: string"];
function_ShopServicegetCoinPurchaseHistory[label="<return_type>function getCoinPurchaseHistory :: CoinHistoryResult|<param_request>request :: CoinHistoryCondition"];
function_ShopServicegetCoinUseAndRefundHistory[label="<return_type>function getCoinUseAndRefundHistory :: CoinHistoryResult|<param_request>request :: CoinHistoryCondition"];
function_ShopServicegetDownloads[label="<return_type>function getDownloads :: ProductList|<param_start>start :: i64|<param_size>size :: i32|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetEventPackages[label="<return_type>function getEventPackages :: ProductList|<param_start>start :: i64|<param_size>size :: i32|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetNewlyReleasedPackages[label="<return_type>function getNewlyReleasedPackages :: ProductList|<param_start>start :: i64|<param_size>size :: i32|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetPopularPackages[label="<return_type>function getPopularPackages :: ProductList|<param_start>start :: i64|<param_size>size :: i32|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetPresentsReceived[label="<return_type>function getPresentsReceived :: ProductList|<param_start>start :: i64|<param_size>size :: i32|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetPresentsSent[label="<return_type>function getPresentsSent :: ProductList|<param_start>start :: i64|<param_size>size :: i32|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetProduct[label="<return_type>function getProduct :: Product|<param_packageID>packageID :: i64|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetProductList[label="<return_type>function getProductList :: ProductList|<param_productIdList>productIdList :: list\<string\>|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetProductListWithCarrier[label="<return_type>function getProductListWithCarrier :: ProductList|<param_productIdList>productIdList :: list\<string\>|<param_language>language :: string|<param_country>country :: string|<param_carrierCode>carrierCode :: string"];
function_ShopServicegetProductWithCarrier[label="<return_type>function getProductWithCarrier :: Product|<param_packageID>packageID :: i64|<param_language>language :: string|<param_country>country :: string|<param_carrierCode>carrierCode :: string"];
function_ShopServicegetPurchaseHistory[label="<return_type>function getPurchaseHistory :: ProductList|<param_start>start :: i64|<param_size>size :: i32|<param_language>language :: string|<param_country>country :: string"];
function_ShopServicegetTotalBalance[label="<return_type>function getTotalBalance :: Coin|<param_appStoreCode>appStoreCode :: PaymentType"];
function_ShopServicenotifyDownloaded[label="<return_type>function notifyDownloaded :: i64|<param_packageId>packageId :: i64|<param_language>language :: string"];
function_ShopServicereserveCoinPurchase[label="<return_type>function reserveCoinPurchase :: PaymentReservationResult|<param_request>request :: CoinPurchaseReservation"];
function_ShopServicereservePayment[label="<return_type>function reservePayment :: PaymentReservationResult|<param_paymentReservation>paymentReservation :: PaymentReservation"];
 }
subgraph cluster_SnsAdaptorService {
node [fillcolor=bisque];
style=dashed;
label = "SnsAdaptorService service";
function_SnsAdaptorServicegetSnsFriends[label="<return_type>function getSnsFriends :: SnsFriends|<param_snsIdType>snsIdType :: SnsIdType|<param_snsAccessToken>snsAccessToken :: string|<param_startIdx>startIdx :: i32|<param_limit>limit :: i32"];
function_SnsAdaptorServicegetSnsMyProfile[label="<return_type>function getSnsMyProfile :: SnsProfile|<param_snsIdType>snsIdType :: SnsIdType|<param_snsAccessToken>snsAccessToken :: string"];
function_SnsAdaptorServicepostSnsInvitationMessage[label="<return_type>function postSnsInvitationMessage :: void|<param_snsIdType>snsIdType :: SnsIdType|<param_snsAccessToken>snsAccessToken :: string|<param_toSnsUserId>toSnsUserId :: string"];
 }
subgraph cluster_TalkService {
node [fillcolor=bisque];
style=dashed;
label = "TalkService service";
function_TalkServicegetChatRoomAnnouncementsBulk[label="<return_type>function getChatRoomAnnouncementsBulk :: map\<string, list\<ChatRoomAnnouncement\>\>|<param_chatRoomMids>chatRoomMids :: list\<string\>"];
function_TalkServicegetChatRoomAnnouncements[label="<return_type>function getChatRoomAnnouncements :: list\<ChatRoomAnnouncement\>|<param_chatRoomMid>chatRoomMid :: string"];
function_TalkServicecreateChatRoomAnnouncement[label="<return_type>function createChatRoomAnnouncement :: ChatRoomAnnouncement|<param_reqSeq>reqSeq :: i32|<param_chatRoomMid>chatRoomMid :: string|<param_type>type :: ChatRoomAnnouncementType|<param_contents>contents :: ChatRoomAnnouncementContents"];
function_TalkServiceremoveChatRoomAnnouncement[label="<return_type>function removeChatRoomAnnouncement :: void|<param_reqSeq>reqSeq :: i32|<param_chatRoomMid>chatRoomMid :: string|<param_announcementSeq>announcementSeq :: i64"];
function_TalkServiceunsendMessage[label="<return_type>function unsendMessage :: void|<param_seq>seq :: i32|<param_messageId>messageId :: string"];
function_TalkServicegetGroupWithoutMembers[label="<return_type>function getGroupWithoutMembers :: Group|<param_groupId>groupId :: string"];
function_TalkServicerequestResendMessage[label="<return_type>function requestResendMessage :: void|<param_reqSeq>reqSeq :: i32|<param_senderMid>senderMid :: string|<param_messageId>messageId :: string"];
function_TalkServicerespondResendMessage[label="<return_type>function respondResendMessage :: void|<param_reqSeq>reqSeq :: i32|<param_receiverMid>receiverMid :: string|<param_originalMessageId>originalMessageId :: string|<param_resendMessage>resendMessage :: Message|<param_errorCode>errorCode :: ErrorCode"];
function_TalkServiceacceptGroupInvitation[label="<return_type>function acceptGroupInvitation :: void|<param_reqSeq>reqSeq :: i32|<param_groupId>groupId :: string"];
function_TalkServiceacceptGroupInvitationByTicket[label="<return_type>function acceptGroupInvitationByTicket :: void|<param_reqSeq>reqSeq :: i32|<param_GroupMid>GroupMid :: string|<param_ticketId>ticketId :: string"];
function_TalkServiceacceptProximityMatches[label="<return_type>function acceptProximityMatches :: void|<param_sessionId>sessionId :: string|<param_ids>ids :: set\<string\>"];
function_TalkServiceacquireCallRoute[label="<return_type>function acquireCallRoute :: list\<string\>|<param_to>to :: string"];
function_TalkServiceacquireCallTicket[label="<return_type>function acquireCallTicket :: string|<param_to>to :: string"];
function_TalkServiceacquireEncryptedAccessToken[label="<return_type>function acquireEncryptedAccessToken :: string|<param_featureType>featureType :: FeatureType"];
function_TalkServiceaddSnsId[label="<return_type>function addSnsId :: string|<param_snsIdType>snsIdType :: SnsIdType|<param_snsAccessToken>snsAccessToken :: string"];
function_TalkServiceblockContact[label="<return_type>function blockContact :: void|<param_reqSeq>reqSeq :: i32|<param_id>id :: string"];
function_TalkServiceblockRecommendation[label="<return_type>function blockRecommendation :: void|<param_reqSeq>reqSeq :: i32|<param_id>id :: string"];
function_TalkServicecancelGroupInvitation[label="<return_type>function cancelGroupInvitation :: void|<param_reqSeq>reqSeq :: i32|<param_groupId>groupId :: string|<param_contactIds>contactIds :: list\<string\>"];
function_TalkServicechangeVerificationMethod[label="<return_type>function changeVerificationMethod :: VerificationSessionData|<param_sessionId>sessionId :: string|<param_method>method :: VerificationMethod"];
function_TalkServiceclearIdentityCredential[label="<return_type>function clearIdentityCredential :: void"];
function_TalkServiceclearMessageBox[label="<return_type>function clearMessageBox :: void|<param_channelId>channelId :: string|<param_messageBoxId>messageBoxId :: string"];
function_TalkServicecloseProximityMatch[label="<return_type>function closeProximityMatch :: void|<param_sessionId>sessionId :: string"];
function_TalkServicecommitSendMessage[label="<return_type>function commitSendMessage :: map\<string, string\>|<param_seq>seq :: i32|<param_messageId>messageId :: string|<param_receiverMids>receiverMids :: list\<string\>"];
function_TalkServicecommitSendMessages[label="<return_type>function commitSendMessages :: map\<string, string\>|<param_seq>seq :: i32|<param_messageIds>messageIds :: list\<string\>|<param_receiverMids>receiverMids :: list\<string\>"];
function_TalkServicecommitUpdateProfile[label="<return_type>function commitUpdateProfile :: map\<string, string\>|<param_seq>seq :: i32|<param_attrs>attrs :: list\<ProfileAttribute\>|<param_receiverMids>receiverMids :: list\<string\>"];
function_TalkServiceconfirmEmail[label="<return_type>function confirmEmail :: void|<param_verifier>verifier :: string|<param_pinCode>pinCode :: string"];
function_TalkServicecreateGroup[label="<return_type>function createGroup :: Group|<param_seq>seq :: i32|<param_name>name :: string|<param_contactIds>contactIds :: list\<string\>"];
function_TalkServicecreateQrcodeBase64Image[label="<return_type>function createQrcodeBase64Image :: string|<param_url>url :: string|<param_characterSet>characterSet :: string|<param_imageSize>imageSize :: i32|<param_x>x :: i32|<param_y>y :: i32|<param_width>width :: i32|<param_height>height :: i32"];
function_TalkServicecreateRoom[label="<return_type>function createRoom :: Room|<param_reqSeq>reqSeq :: i32|<param_contactIds>contactIds :: list\<string\>"];
function_TalkServicecreateSession[label="<return_type>function createSession :: string"];
function_TalkServicefetchAnnouncements[label="<return_type>function fetchAnnouncements :: list\<Announcement\>|<param_lastFetchedIndex>lastFetchedIndex :: i32"];
function_TalkServicefetchMessages[label="<return_type>function fetchMessages :: list\<Message\>|<param_localTs>localTs :: i64|<param_count>count :: i32"];
function_TalkServicefetchOperations[label="<return_type>function fetchOperations :: list\<Operation\>|<param_localRev>localRev :: i64|<param_count>count :: i32"];
function_TalkServicefetchOps[label="<return_type>function fetchOps :: list\<Operation\>|<param_localRev>localRev :: i64|<param_count>count :: i32|<param_globalRev>globalRev :: i64|<param_individualRev>individualRev :: i64"];
function_TalkServicefindAndAddContactsByEmail[label="<return_type>function findAndAddContactsByEmail :: map\<string, Contact\>|<param_reqSeq>reqSeq :: i32|<param_emails>emails :: set\<string\>"];
function_TalkServicefindAndAddContactsByMid[label="<return_type>function findAndAddContactsByMid :: map\<string, Contact\>|<param_reqSeq>reqSeq :: i32|<param_mid>mid :: string|<param_type>type :: ContactType|<param_reference>reference :: string"];
function_TalkServicefindGroupByTicketV2[label="<return_type>function findGroupByTicketV2 :: Group|<param_ticketId>ticketId :: string"];
function_TalkServicefindAndAddContactsByPhone[label="<return_type>function findAndAddContactsByPhone :: map\<string, Contact\>|<param_reqSeq>reqSeq :: i32|<param_phones>phones :: set\<string\>"];
function_TalkServicegetFriendRequests[label="<return_type>function getFriendRequests :: list\<FriendRequest\>|<param_direction>direction :: FriendRequestDirection|<param_lastSeenSeqId>lastSeenSeqId :: i64"];
function_TalkServiceremoveFriendRequest[label="<return_type>function removeFriendRequest :: void|<param_direction>direction :: FriendRequestDirection|<param_midOrEMid>midOrEMid :: string"];
function_TalkServicefindAndAddContactsByUserid[label="<return_type>function findAndAddContactsByUserid :: map\<string, Contact\>|<param_reqSeq>reqSeq :: i32|<param_userid>userid :: string"];
function_TalkServicefindContactByUserid[label="<return_type>function findContactByUserid :: Contact|<param_userid>userid :: string"];
function_TalkServicefindContactByUserTicket[label="<return_type>function findContactByUserTicket :: Contact|<param_ticketIdWithTag>ticketIdWithTag :: string"];
function_TalkServicefindContactsByEmail[label="<return_type>function findContactsByEmail :: map\<string, Contact\>|<param_emails>emails :: set\<string\>"];
function_TalkServicefindContactsByPhone[label="<return_type>function findContactsByPhone :: map\<string, Contact\>|<param_phones>phones :: set\<string\>"];
function_TalkServicefindSnsIdUserStatus[label="<return_type>function findSnsIdUserStatus :: SnsIdUserStatus|<param_snsIdType>snsIdType :: SnsIdType|<param_snsAccessToken>snsAccessToken :: string|<param_udidHash>udidHash :: string"];
function_TalkServicefinishUpdateVerification[label="<return_type>function finishUpdateVerification :: void|<param_sessionId>sessionId :: string"];
function_TalkServicegenerateUserTicket[label="<return_type>function generateUserTicket :: Ticket|<param_expirationTime>expirationTime :: i64|<param_maxUseCount>maxUseCount :: i32"];
function_TalkServicedestroyMessage[label="<return_type>function destroyMessage :: void|<param_seq>seq :: i32|<param_chatId>chatId :: string|<param_messageId>messageId :: string|<param_sessionId>sessionId :: i8"];
function_TalkServicegetAcceptedProximityMatches[label="<return_type>function getAcceptedProximityMatches :: set\<string\>|<param_sessionId>sessionId :: string"];
function_TalkServicegetActiveBuddySubscriberIds[label="<return_type>function getActiveBuddySubscriberIds :: list\<string\>"];
function_TalkServicegetAllContactIds[label="<return_type>function getAllContactIds :: list\<string\>"];
function_TalkServicegetAuthQrcode[label="<return_type>function getAuthQrcode :: AuthQrcode|<param_keepLoggedIn>keepLoggedIn :: bool|<param_systemName>systemName :: string"];
function_TalkServicegetBlockedContactIds[label="<return_type>function getBlockedContactIds :: list\<string\>"];
function_TalkServiceregisterWithPhoneNumber[label="<return_type>function registerWithPhoneNumber :: RegisterWithPhoneNumberResult|<param_sessionId>sessionId :: string|<param_migrationPincodeSessionId>migrationPincodeSessionId :: string"];
function_TalkServiceregisterWithPhoneNumberAndPassword[label="<return_type>function registerWithPhoneNumberAndPassword :: RegisterWithPhoneNumberResult|<param_sessionId>sessionId :: string|<param_keynm>keynm :: string|<param_encrypted>encrypted :: string"];
function_TalkServicegetAnalyticsInfo[label="<return_type>function getAnalyticsInfo :: AnalyticsInfo"];
function_TalkServicereportClientStatistics[label="<return_type>function reportClientStatistics :: void|<param_reqSeq>reqSeq :: i32|<param_category>category :: ReportCategory|<param_count>count :: i32"];
function_TalkServiceverifyPhoneNumberForLogin[label="<return_type>function verifyPhoneNumberForLogin :: string|<param_verifierFromPhone>verifierFromPhone :: string|<param_pinCodeForPhone>pinCodeForPhone :: string|<param_verifierFromLogin>verifierFromLogin :: string"];
function_TalkServiceverifyPhoneNumber[label="<return_type>function verifyPhoneNumber :: PhoneVerificationResult|<param_sessionId>sessionId :: string|<param_pinCode>pinCode :: string|<param_udidHash>udidHash :: string|<param_migrationPincodeSessionId>migrationPincodeSessionId :: string|<param_oldUdidHash>oldUdidHash :: string"];
function_TalkServicegetBlockedContactIdsByRange[label="<return_type>function getBlockedContactIdsByRange :: list\<string\>|<param_start>start :: i32|<param_count>count :: i32"];
function_TalkServicegetBlockedRecommendationIds[label="<return_type>function getBlockedRecommendationIds :: list\<string\>"];
function_TalkServicegetBuddyBlockerIds[label="<return_type>function getBuddyBlockerIds :: list\<string\>"];
function_TalkServicegetBuddyLocation[label="<return_type>function getBuddyLocation :: Geolocation|<param_mid>mid :: string|<param_index>index :: i32"];
function_TalkServicegetCompactContactsModifiedSince[label="<return_type>function getCompactContactsModifiedSince :: list\<CompactContact\>|<param_timestamp>timestamp :: i64"];
function_TalkServicegetCompactGroup[label="<return_type>function getCompactGroup :: Group|<param_groupId>groupId :: string"];
function_TalkServicegetCompactRoom[label="<return_type>function getCompactRoom :: Room|<param_roomId>roomId :: string"];
function_TalkServicegetContact[label="<return_type>function getContact :: Contact|<param_id>id :: string"];
function_TalkServicegetContacts[label="<return_type>function getContacts :: list\<Contact\>|<param_ids>ids :: list\<string\>"];
function_TalkServicegetContactWithFriendRequestStatus[label="<return_type>function getContactWithFriendRequestStatus :: Contact|<param_id>id :: string"];
function_TalkServicegetCountryWithRequestIp[label="<return_type>function getCountryWithRequestIp :: string"];
function_TalkServicegetFavoriteMids[label="<return_type>function getFavoriteMids :: list\<string\>"];
function_TalkServicegetGroup[label="<return_type>function getGroup :: Group|<param_groupId>groupId :: string"];
function_TalkServicegetGroupIdsInvited[label="<return_type>function getGroupIdsInvited :: list\<string\>"];
function_TalkServicegetGroupIdsJoined[label="<return_type>function getGroupIdsJoined :: list\<string\>"];
function_TalkServicegetGroups[label="<return_type>function getGroups :: list\<Group\>|<param_groupIds>groupIds :: list\<string\>"];
function_TalkServicegetHiddenContactMids[label="<return_type>function getHiddenContactMids :: list\<string\>"];
function_TalkServicegetIdentityIdentifier[label="<return_type>function getIdentityIdentifier :: string"];
function_TalkServicegetLastAnnouncementIndex[label="<return_type>function getLastAnnouncementIndex :: i32"];
function_TalkServicegetLastOpRevision[label="<return_type>function getLastOpRevision :: i64"];
function_TalkServicegetSuggestRevisions[label="<return_type>function getSuggestRevisions :: SuggestDictionaryRevisions"];
function_TalkServicegetPreviousMessagesV2WithReadCount[label="<return_type>function getPreviousMessagesV2WithReadCount :: list\<Message\>|<param_messageBoxId>messageBoxId :: string|<param_endMessageId>endMessageId :: MessageBoxV2MessageId|<param_messagesCount>messagesCount :: i32"];
function_TalkServicegetMessageBox[label="<return_type>function getMessageBox :: TMessageBox|<param_channelId>channelId :: string|<param_messageBoxId>messageBoxId :: string|<param_lastMessagesCount>lastMessagesCount :: i32"];
function_TalkServicegetMessageBoxCompactWrapUp[label="<return_type>function getMessageBoxCompactWrapUp :: TMessageBoxWrapUp|<param_mid>mid :: string"];
function_TalkServicegetMessageBoxCompactWrapUpList[label="<return_type>function getMessageBoxCompactWrapUpList :: TMessageBoxWrapUpResponse|<param_start>start :: i32|<param_messageBoxCount>messageBoxCount :: i32"];
function_TalkServicegetMessageBoxList[label="<return_type>function getMessageBoxList :: list\<TMessageBox\>|<param_channelId>channelId :: string|<param_lastMessagesCount>lastMessagesCount :: i32"];
function_TalkServicegetMessageBoxListByStatus[label="<return_type>function getMessageBoxListByStatus :: list\<TMessageBox\>|<param_channelId>channelId :: string|<param_lastMessagesCount>lastMessagesCount :: i32|<param_status>status :: i32"];
function_TalkServicegetMessageBoxWrapUp[label="<return_type>function getMessageBoxWrapUp :: TMessageBoxWrapUp|<param_mid>mid :: string"];
function_TalkServicegetMessageBoxWrapUpList[label="<return_type>function getMessageBoxWrapUpList :: TMessageBoxWrapUpResponse|<param_start>start :: i32|<param_messageBoxCount>messageBoxCount :: i32"];
function_TalkServicegetMessagesBySequenceNumber[label="<return_type>function getMessagesBySequenceNumber :: list\<Message\>|<param_channelId>channelId :: string|<param_messageBoxId>messageBoxId :: string|<param_startSeq>startSeq :: i64|<param_endSeq>endSeq :: i64"];
function_TalkServicegetNextMessages[label="<return_type>function getNextMessages :: list\<Message\>|<param_messageBoxId>messageBoxId :: string|<param_startSeq>startSeq :: i64|<param_messagesCount>messagesCount :: i32"];
function_TalkServicegetNotificationPolicy[label="<return_type>function getNotificationPolicy :: list\<NotificationType\>|<param_carrier>carrier :: CarrierCode"];
function_TalkServicegetPreviousMessages[label="<return_type>function getPreviousMessages :: list\<Message\>|<param_messageBoxId>messageBoxId :: string|<param_endSeq>endSeq :: i64|<param_messagesCount>messagesCount :: i32"];
function_TalkServicegetProfile[label="<return_type>function getProfile :: Profile"];
function_TalkServicegetProximityMatchCandidateList[label="<return_type>function getProximityMatchCandidateList :: ProximityMatchCandidateResult|<param_sessionId>sessionId :: string"];
function_TalkServicegetProximityMatchCandidates[label="<return_type>function getProximityMatchCandidates :: set\<Contact\>|<param_sessionId>sessionId :: string"];
function_TalkServicegetRecentMessages[label="<return_type>function getRecentMessages :: list\<Message\>|<param_messageBoxId>messageBoxId :: string|<param_messagesCount>messagesCount :: i32"];
function_TalkServicegetRecommendationIds[label="<return_type>function getRecommendationIds :: list\<string\>"];
function_TalkServicegetRoom[label="<return_type>function getRoom :: Room|<param_roomId>roomId :: string"];
function_TalkServicegetRSAKeyInfo[label="<return_type>function getRSAKeyInfo :: RSAKey|<param_provider>provider :: IdentityProvider"];
function_TalkServicegetServerTime[label="<return_type>function getServerTime :: i64"];
function_TalkServicegetSessions[label="<return_type>function getSessions :: list\<LoginSession\>"];
function_TalkServicegetSettings[label="<return_type>function getSettings :: Settings"];
function_TalkServicegetGroupsV2[label="<return_type>function getGroupsV2 :: list\<Group\>|<param_groupIds>groupIds :: list\<string\>"];
function_TalkServicegetSettingsAttributes[label="<return_type>function getSettingsAttributes :: Settings|<param_attrBitset>attrBitset :: i32"];
function_TalkServicegetSystemConfiguration[label="<return_type>function getSystemConfiguration :: SystemConfiguration"];
function_TalkServicegetUserTicket[label="<return_type>function getUserTicket :: Ticket"];
function_TalkServicegetWapInvitation[label="<return_type>function getWapInvitation :: WapInvitation|<param_invitationHash>invitationHash :: string"];
function_TalkServiceinvalidateUserTicket[label="<return_type>function invalidateUserTicket :: void"];
function_TalkServiceinviteFriendsBySms[label="<return_type>function inviteFriendsBySms :: void|<param_phoneNumberList>phoneNumberList :: list\<string\>"];
function_TalkServiceinviteIntoGroup[label="<return_type>function inviteIntoGroup :: void|<param_reqSeq>reqSeq :: i32|<param_groupId>groupId :: string|<param_contactIds>contactIds :: list\<string\>"];
function_TalkServiceinviteIntoRoom[label="<return_type>function inviteIntoRoom :: void|<param_reqSeq>reqSeq :: i32|<param_roomId>roomId :: string|<param_contactIds>contactIds :: list\<string\>"];
function_TalkServiceinviteViaEmail[label="<return_type>function inviteViaEmail :: void|<param_reqSeq>reqSeq :: i32|<param_email>email :: string|<param_name>name :: string"];
function_TalkServiceisIdentityIdentifierAvailable[label="<return_type>function isIdentityIdentifierAvailable :: bool|<param_provider>provider :: IdentityProvider|<param_identifier>identifier :: string"];
function_TalkServiceisUseridAvailable[label="<return_type>function isUseridAvailable :: bool|<param_userid>userid :: string"];
function_TalkServicekickoutFromGroup[label="<return_type>function kickoutFromGroup :: void|<param_reqSeq>reqSeq :: i32|<param_groupId>groupId :: string|<param_contactIds>contactIds :: list\<string\>"];
function_TalkServicereissueGroupTicket[label="<return_type>function reissueGroupTicket :: string|<param_groupMid>groupMid :: string"];
function_TalkServicefindGroupByTicket[label="<return_type>function findGroupByTicket :: Group|<param_ticketId>ticketId :: string"];
function_TalkServiceleaveGroup[label="<return_type>function leaveGroup :: void|<param_reqSeq>reqSeq :: i32|<param_groupId>groupId :: string"];
function_TalkServiceleaveRoom[label="<return_type>function leaveRoom :: void|<param_reqSeq>reqSeq :: i32|<param_roomId>roomId :: string"];
function_TalkServiceloginWithIdentityCredential[label="<return_type>function loginWithIdentityCredential :: string|<param_identityProvider>identityProvider :: IdentityProvider|<param_identifier>identifier :: string|<param_password>password :: string|<param_keepLoggedIn>keepLoggedIn :: bool|<param_accessLocation>accessLocation :: string|<param_systemName>systemName :: string|<param_certificate>certificate :: string"];
function_TalkServiceloginWithIdentityCredentialForCertificate[label="<return_type>function loginWithIdentityCredentialForCertificate :: LoginResult|<param_identityProvider>identityProvider :: IdentityProvider|<param_identifier>identifier :: string|<param_password>password :: string|<param_keepLoggedIn>keepLoggedIn :: bool|<param_accessLocation>accessLocation :: string|<param_systemName>systemName :: string|<param_certificate>certificate :: string"];
function_TalkServiceloginWithVerifier[label="<return_type>function loginWithVerifier :: string|<param_verifier>verifier :: string"];
function_TalkServiceloginWithVerifierForCerificate[label="<return_type>function loginWithVerifierForCerificate :: LoginResult|<param_verifier>verifier :: string"];
function_TalkServiceloginWithVerifierForCertificate[label="<return_type>function loginWithVerifierForCertificate :: LoginResult|<param_verifier>verifier :: string"];
function_TalkServicelogout[label="<return_type>function logout :: void"];
function_TalkServicelogoutSession[label="<return_type>function logoutSession :: void|<param_tokenKey>tokenKey :: string"];
function_TalkServicenoop[label="<return_type>function noop :: void"];
function_TalkServicenotifiedRedirect[label="<return_type>function notifiedRedirect :: void|<param_paramMap>paramMap :: map\<string, string\>"];
function_TalkServicenotifyBuddyOnAir[label="<return_type>function notifyBuddyOnAir :: map\<string, string\>|<param_seq>seq :: i32|<param_receiverMids>receiverMids :: list\<string\>"];
function_TalkServicenotifyIndividualEvent[label="<return_type>function notifyIndividualEvent :: void|<param_notificationStatus>notificationStatus :: NotificationStatus|<param_receiverMids>receiverMids :: list\<string\>"];
function_TalkServicenotifyInstalled[label="<return_type>function notifyInstalled :: void|<param_udidHash>udidHash :: string|<param_applicationTypeWithExtensions>applicationTypeWithExtensions :: string"];
function_TalkServicenotifyRegistrationComplete[label="<return_type>function notifyRegistrationComplete :: void|<param_udidHash>udidHash :: string|<param_applicationTypeWithExtensions>applicationTypeWithExtensions :: string"];
function_TalkServicenotifySleep[label="<return_type>function notifySleep :: void|<param_lastRev>lastRev :: i64|<param_badge>badge :: i32"];
function_TalkServicenotifyUpdated[label="<return_type>function notifyUpdated :: void|<param_lastRev>lastRev :: i64|<param_deviceInfo>deviceInfo :: DeviceInfo"];
function_TalkServiceopenProximityMatch[label="<return_type>function openProximityMatch :: string|<param_location>location :: Location"];
function_TalkServiceregisterBuddyUser[label="<return_type>function registerBuddyUser :: string|<param_buddyId>buddyId :: string|<param_registrarPassword>registrarPassword :: string"];
function_TalkServiceregisterBuddyUserid[label="<return_type>function registerBuddyUserid :: void|<param_seq>seq :: i32|<param_userid>userid :: string"];
function_TalkServiceregisterDevice[label="<return_type>function registerDevice :: string|<param_sessionId>sessionId :: string"];
function_TalkServiceregisterDeviceWithIdentityCredential[label="<return_type>function registerDeviceWithIdentityCredential :: string|<param_sessionId>sessionId :: string|<param_provider>provider :: IdentityProvider|<param_identifier>identifier :: string|<param_verifier>verifier :: string"];
function_TalkServiceregisterDeviceWithoutPhoneNumber[label="<return_type>function registerDeviceWithoutPhoneNumber :: string|<param_region>region :: string|<param_udidHash>udidHash :: string|<param_deviceInfo>deviceInfo :: DeviceInfo"];
function_TalkServiceregisterDeviceWithoutPhoneNumberWithIdentityCredential[label="<return_type>function registerDeviceWithoutPhoneNumberWithIdentityCredential :: string|<param_region>region :: string|<param_udidHash>udidHash :: string|<param_deviceInfo>deviceInfo :: DeviceInfo|<param_provider>provider :: IdentityProvider|<param_identifier>identifier :: string|<param_verifier>verifier :: string|<param_mid>mid :: string|<param_migrationPincodeSessionId>migrationPincodeSessionId :: string"];
function_TalkServiceregisterUserid[label="<return_type>function registerUserid :: bool|<param_reqSeq>reqSeq :: i32|<param_userid>userid :: string"];
function_TalkServiceregisterWapDevice[label="<return_type>function registerWapDevice :: string|<param_invitationHash>invitationHash :: string|<param_guidHash>guidHash :: string|<param_email>email :: string|<param_deviceInfo>deviceInfo :: DeviceInfo"];
function_TalkServiceregisterWithExistingSnsIdAndIdentityCredential[label="<return_type>function registerWithExistingSnsIdAndIdentityCredential :: string|<param_identityCredential>identityCredential :: IdentityCredential|<param_region>region :: string|<param_udidHash>udidHash :: string|<param_deviceInfo>deviceInfo :: DeviceInfo"];
function_TalkServiceregisterWithSnsId[label="<return_type>function registerWithSnsId :: RegisterWithSnsIdResult|<param_snsIdType>snsIdType :: SnsIdType|<param_snsAccessToken>snsAccessToken :: string|<param_region>region :: string|<param_udidHash>udidHash :: string|<param_deviceInfo>deviceInfo :: DeviceInfo|<param_mid>mid :: string"];
function_TalkServiceregisterWithSnsIdAndIdentityCredential[label="<return_type>function registerWithSnsIdAndIdentityCredential :: string|<param_snsIdType>snsIdType :: SnsIdType|<param_snsAccessToken>snsAccessToken :: string|<param_identityCredential>identityCredential :: IdentityCredential|<param_region>region :: string|<param_udidHash>udidHash :: string|<param_deviceInfo>deviceInfo :: DeviceInfo"];
function_TalkServicereissueDeviceCredential[label="<return_type>function reissueDeviceCredential :: string"];
function_TalkServicereissueUserTicket[label="<return_type>function reissueUserTicket :: string|<param_expirationTime>expirationTime :: i64|<param_maxUseCount>maxUseCount :: i32"];
function_TalkServicegetMessageReadRange[label="<return_type>function getMessageReadRange :: list\<TMessageReadRange\>|<param_chatIds>chatIds :: list\<string\>"];
function_TalkServicerejectGroupInvitation[label="<return_type>function rejectGroupInvitation :: void|<param_reqSeq>reqSeq :: i32|<param_groupId>groupId :: string"];
function_TalkServicereleaseSession[label="<return_type>function releaseSession :: void"];
function_TalkServiceremoveAllMessages[label="<return_type>function removeAllMessages :: void|<param_seq>seq :: i32|<param_lastMessageId>lastMessageId :: string"];
function_TalkServiceremoveBuddyLocation[label="<return_type>function removeBuddyLocation :: void|<param_mid>mid :: string|<param_index>index :: i32"];
function_TalkServiceremoveMessage[label="<return_type>function removeMessage :: bool|<param_messageId>messageId :: string"];
function_TalkServicemakeUserAddMyselfAsContact[label="<return_type>function makeUserAddMyselfAsContact :: ContactTransition|<param_contactOwnerMid>contactOwnerMid :: string"];
function_TalkServiceremoveMessageFromMyHome[label="<return_type>function removeMessageFromMyHome :: bool|<param_messageId>messageId :: string"];
function_TalkServiceremoveSnsId[label="<return_type>function removeSnsId :: string|<param_snsIdType>snsIdType :: SnsIdType"];
function_TalkServicereport[label="<return_type>function report :: void|<param_syncOpRevision>syncOpRevision :: i64|<param_category>category :: SyncCategory|<param_report>report :: string"];
function_TalkServicereportContacts[label="<return_type>function reportContacts :: list\<ContactReportResult\>|<param_syncOpRevision>syncOpRevision :: i64|<param_category>category :: SyncCategory|<param_contactReports>contactReports :: list\<ContactReport\>|<param_actionType>actionType :: SyncActionType"];
function_TalkServicereportGroups[label="<return_type>function reportGroups :: void|<param_syncOpRevision>syncOpRevision :: i64|<param_groups>groups :: list\<Group\>"];
function_TalkServicereportProfile[label="<return_type>function reportProfile :: void|<param_syncOpRevision>syncOpRevision :: i64|<param_profile>profile :: Profile"];
function_TalkServicereportRooms[label="<return_type>function reportRooms :: void|<param_syncOpRevision>syncOpRevision :: i64|<param_rooms>rooms :: list\<Room\>"];
function_TalkServicefindAndAddContactByMetaTag[label="<return_type>function findAndAddContactByMetaTag :: Contact|<param_reqSeq>reqSeq :: i32|<param_userid>userid :: string|<param_reference>reference :: string"];
function_TalkServicereportSettings[label="<return_type>function reportSettings :: void|<param_syncOpRevision>syncOpRevision :: i64|<param_settings>settings :: Settings"];
function_TalkServicereportSpam[label="<return_type>function reportSpam :: void|<param_chatMid>chatMid :: string|<param_memberMids>memberMids :: list\<string\>|<param_spammerReasons>spammerReasons :: list\<SpammerReason\>|<param_senderMids>senderMids :: list\<string\>|<param_spamMessageIds>spamMessageIds :: list\<string\>|<param_spamMessages>spamMessages :: list\<string\>"];
function_TalkServicereportSpammer[label="<return_type>function reportSpammer :: void|<param_spammerMid>spammerMid :: string|<param_spammerReasons>spammerReasons :: list\<SpammerReason\>|<param_spamMessageIds>spamMessageIds :: list\<string\>"];
function_TalkServicerequestAccountPasswordReset[label="<return_type>function requestAccountPasswordReset :: void|<param_provider>provider :: IdentityProvider|<param_identifier>identifier :: string|<param_locale>locale :: string"];
function_TalkServicerequestEmailConfirmation[label="<return_type>function requestEmailConfirmation :: EmailConfirmationSession|<param_emailConfirmation>emailConfirmation :: EmailConfirmation"];
function_TalkServicerequestIdentityUnbind[label="<return_type>function requestIdentityUnbind :: void|<param_provider>provider :: IdentityProvider|<param_identifier>identifier :: string"];
function_TalkServiceresendEmailConfirmation[label="<return_type>function resendEmailConfirmation :: EmailConfirmationSession|<param_verifier>verifier :: string"];
function_TalkServiceresendPinCode[label="<return_type>function resendPinCode :: void|<param_sessionId>sessionId :: string"];
function_TalkServiceresendPinCodeBySMS[label="<return_type>function resendPinCodeBySMS :: void|<param_sessionId>sessionId :: string"];
function_TalkServicesendChatChecked[label="<return_type>function sendChatChecked :: void|<param_seq>seq :: i32|<param_consumer>consumer :: string|<param_lastMessageId>lastMessageId :: string"];
function_TalkServicesendMessageAwaitCommit[label="<return_type>function sendMessageAwaitCommit :: CommitMessageResult|<param_seq>seq :: i32|<param_message>message :: Message"];
function_TalkServicesendChatRemoved[label="<return_type>function sendChatRemoved :: void|<param_seq>seq :: i32|<param_consumer>consumer :: string|<param_lastMessageId>lastMessageId :: string"];
function_TalkServicesendContentPreviewUpdated[label="<return_type>function sendContentPreviewUpdated :: map\<string, string\>|<param_esq>esq :: i32|<param_messageId>messageId :: string|<param_receiverMids>receiverMids :: list\<string\>"];
function_TalkServicesendContentReceipt[label="<return_type>function sendContentReceipt :: void|<param_seq>seq :: i32|<param_consumer>consumer :: string|<param_messageId>messageId :: string"];
function_TalkServicesendDummyPush[label="<return_type>function sendDummyPush :: void"];
function_TalkServiceremoveE2EEPublicKey[label="<return_type>function removeE2EEPublicKey :: void|<param_publicKey>publicKey :: E2EEPublicKey"];
function_TalkServicenegotiateE2EEPublicKey[label="<return_type>function negotiateE2EEPublicKey :: E2EENegotiationResult|<param_mid>mid :: string"];
function_TalkServicegetE2EEPublicKey[label="<return_type>function getE2EEPublicKey :: E2EEPublicKey|<param_mid>mid :: string|<param_version>version :: i32|<param_keyId>keyId :: i32"];
function_TalkServicerequestE2EEKeyExchange[label="<return_type>function requestE2EEKeyExchange :: void|<param_reqSeq>reqSeq :: i32|<param_temporalPublicKey>temporalPublicKey :: binary|<param_publicKey>publicKey :: E2EEPublicKey|<param_verifier>verifier :: binary"];
function_TalkServicegetLastE2EEPublicKeys[label="<return_type>function getLastE2EEPublicKeys :: map\<string, E2EEPublicKey\>|<param_chatMid>chatMid :: string"];
function_TalkServiceregisterE2EEPublicKey[label="<return_type>function registerE2EEPublicKey :: E2EEPublicKey|<param_reqSeq>reqSeq :: i32|<param_publicKey>publicKey :: E2EEPublicKey"];
function_TalkServicegetE2EEPublicKeys[label="<return_type>function getE2EEPublicKeys :: list\<E2EEPublicKey\>"];
function_TalkServicegetE2EEPublicKeysEx[label="<return_type>function getE2EEPublicKeysEx :: list\<E2EEPublicKey\>|<param_ignoreE2EEStatus>ignoreE2EEStatus :: bool"];
function_TalkServicegetReadMessageOpsInBulk[label="<return_type>function getReadMessageOpsInBulk :: list\<Operation\>|<param_chatIds>chatIds :: list\<string\>"];
function_TalkServicesendEvent[label="<return_type>function sendEvent :: Message|<param_seq>seq :: i32|<param_message>message :: Message"];
function_TalkServicesendMessage[label="<return_type>function sendMessage :: Message|<param_seq>seq :: i32|<param_message>message :: Message"];
function_TalkServicesendMessageIgnored[label="<return_type>function sendMessageIgnored :: void|<param_seq>seq :: i32|<param_consumer>consumer :: string|<param_messageIds>messageIds :: list\<string\>"];
function_TalkServicesendMessageReceipt[label="<return_type>function sendMessageReceipt :: void|<param_seq>seq :: i32|<param_consumer>consumer :: string|<param_messageIds>messageIds :: list\<string\>"];
function_TalkServicefindContactByMetaTag[label="<return_type>function findContactByMetaTag :: Contact|<param_userid>userid :: string|<param_reference>reference :: string"];
function_TalkServicesendMessageToMyHome[label="<return_type>function sendMessageToMyHome :: Message|<param_seq>seq :: i32|<param_message>message :: Message"];
function_TalkServicesetBuddyLocation[label="<return_type>function setBuddyLocation :: void|<param_mid>mid :: string|<param_index>index :: i32|<param_location>location :: Geolocation"];
function_TalkServicesetIdentityCredential[label="<return_type>function setIdentityCredential :: void|<param_identifier>identifier :: string|<param_verifier>verifier :: string|<param_provider>provider :: IdentityProvider"];
function_TalkServicesetNotificationsEnabled[label="<return_type>function setNotificationsEnabled :: void|<param_reqSeq>reqSeq :: i32|<param_type>type :: MIDType|<param_target>target :: string|<param_enablement>enablement :: bool"];
function_TalkServicestartUpdateVerification[label="<return_type>function startUpdateVerification :: VerificationSessionData|<param_region>region :: string|<param_carrier>carrier :: CarrierCode|<param_phone>phone :: string|<param_udidHash>udidHash :: string|<param_deviceInfo>deviceInfo :: DeviceInfo|<param_networkCode>networkCode :: string|<param_locale>locale :: string"];
function_TalkServicestartVerification[label="<return_type>function startVerification :: VerificationSessionData|<param_region>region :: string|<param_carrier>carrier :: CarrierCode|<param_phone>phone :: string|<param_udidHash>udidHash :: string|<param_deviceInfo>deviceInfo :: DeviceInfo|<param_networkCode>networkCode :: string|<param_mid>mid :: string|<param_locale>locale :: string|<param_simInfo>simInfo :: SIMInfo|<param_oldUdidHash>oldUdidHash :: string"];
function_TalkServiceupdateGroupPreferenceAttribute[label="<return_type>function updateGroupPreferenceAttribute :: void|<param_reqSeq>reqSeq :: i32|<param_groupMid>groupMid :: string|<param_updatedAttrs>updatedAttrs :: map\<GroupPreferenceAttribute, string\>"];
function_TalkServicecreateRoomV2[label="<return_type>function createRoomV2 :: Room|<param_reqSeq>reqSeq :: i32|<param_contactIds>contactIds :: list\<string\>"];
function_TalkServicestoreUpdateProfileAttribute[label="<return_type>function storeUpdateProfileAttribute :: void|<param_seq>seq :: i32|<param_profileAttribute>profileAttribute :: ProfileAttribute|<param_value>value :: string"];
function_TalkServicesyncContactBySnsIds[label="<return_type>function syncContactBySnsIds :: list\<SnsFriendContactRegistration\>|<param_reqSeq>reqSeq :: i32|<param_modifications>modifications :: list\<SnsFriendModification\>"];
function_TalkServicesyncContacts[label="<return_type>function syncContacts :: map\<string, ContactRegistration\>|<param_reqSeq>reqSeq :: i32|<param_localContacts>localContacts :: list\<ContactModification\>"];
function_TalkServicetrySendMessage[label="<return_type>function trySendMessage :: Message|<param_seq>seq :: i32|<param_message>message :: Message"];
function_TalkServicegetNextMessagesV2[label="<return_type>function getNextMessagesV2 :: list\<Message\>|<param_messageBoxId>messageBoxId :: string|<param_startMessageId>startMessageId :: MessageBoxV2MessageId|<param_messagesCount>messagesCount :: i32"];
function_TalkServicegetMessageBoxCompactWrapUpV2[label="<return_type>function getMessageBoxCompactWrapUpV2 :: TMessageBoxWrapUp|<param_messageBoxId>messageBoxId :: string"];
function_TalkServicegetRecentMessagesV2[label="<return_type>function getRecentMessagesV2 :: list\<Message\>|<param_messageBoxId>messageBoxId :: string|<param_messagesCount>messagesCount :: i32"];
function_TalkServicevalidateContactsOnBot[label="<return_type>function validateContactsOnBot :: map\<string, string\>|<param_contacts>contacts :: list\<string\>"];
function_TalkServicetryFriendRequest[label="<return_type>function tryFriendRequest :: void|<param_midOrEMid>midOrEMid :: string|<param_method>method :: FriendRequestMethod|<param_friendRequestParams>friendRequestParams :: string"];
function_TalkServiceunblockContact[label="<return_type>function unblockContact :: void|<param_reqSeq>reqSeq :: i32|<param_id>id :: string"];
function_TalkServiceunblockRecommendation[label="<return_type>function unblockRecommendation :: void|<param_reqSeq>reqSeq :: i32|<param_id>id :: string"];
function_TalkServiceunregisterUserAndDevice[label="<return_type>function unregisterUserAndDevice :: string"];
function_TalkServiceupdateApnsDeviceToken[label="<return_type>function updateApnsDeviceToken :: void|<param_apnsDeviceToken>apnsDeviceToken :: binary"];
function_TalkServiceupdateBuddySetting[label="<return_type>function updateBuddySetting :: void|<param_key>key :: string|<param_value>value :: string"];
function_TalkServiceupdateC2DMRegistrationId[label="<return_type>function updateC2DMRegistrationId :: void|<param_registrationId>registrationId :: string"];
function_TalkServiceupdateContactSetting[label="<return_type>function updateContactSetting :: void|<param_reqSeq>reqSeq :: i32|<param_mid>mid :: string|<param_flag>flag :: ContactSetting|<param_value>value :: string"];
function_TalkServiceupdateCustomModeSettings[label="<return_type>function updateCustomModeSettings :: void|<param_customMode>customMode :: CustomMode|<param_paramMap>paramMap :: map\<string, string\>"];
function_TalkServiceupdateDeviceInfo[label="<return_type>function updateDeviceInfo :: void|<param_deviceUid>deviceUid :: string|<param_deviceInfo>deviceInfo :: DeviceInfo"];
function_TalkServiceupdateGroup[label="<return_type>function updateGroup :: void|<param_reqSeq>reqSeq :: i32|<param_group>group :: Group"];
function_TalkServiceupdateNotificationToken[label="<return_type>function updateNotificationToken :: void|<param_type>type :: NotificationType|<param_token>token :: string"];
function_TalkServiceupdateNotificationTokenWithBytes[label="<return_type>function updateNotificationTokenWithBytes :: void|<param_type>type :: NotificationType|<param_token>token :: binary"];
function_TalkServiceupdateProfile[label="<return_type>function updateProfile :: void|<param_reqSeq>reqSeq :: i32|<param_profile>profile :: Profile"];
function_TalkServiceupdateProfileAttribute[label="<return_type>function updateProfileAttribute :: void|<param_reqSeq>reqSeq :: i32|<param_attr>attr :: ProfileAttribute|<param_value>value :: string"];
function_TalkServiceupdateRegion[label="<return_type>function updateRegion :: void|<param_region>region :: string"];
function_TalkServiceupdateSettings[label="<return_type>function updateSettings :: void|<param_reqSeq>reqSeq :: i32|<param_settings>settings :: Settings"];
function_TalkServiceupdateSettings2[label="<return_type>function updateSettings2 :: i32|<param_reqSeq>reqSeq :: i32|<param_settings>settings :: Settings"];
function_TalkServiceupdateSettingsAttribute[label="<return_type>function updateSettingsAttribute :: void|<param_reqSeq>reqSeq :: i32|<param_attr>attr :: SettingsAttribute|<param_value>value :: string"];
function_TalkServiceupdateSettingsAttributes[label="<return_type>function updateSettingsAttributes :: i32|<param_reqSeq>reqSeq :: i32|<param_attrBitset>attrBitset :: i32|<param_settings>settings :: Settings"];
function_TalkServiceverifyIdentityCredential[label="<return_type>function verifyIdentityCredential :: void|<param_identityProvider>identityProvider :: IdentityProvider|<param_identifier>identifier :: string|<param_password>password :: string"];
function_TalkServiceverifyIdentityCredentialWithResult[label="<return_type>function verifyIdentityCredentialWithResult :: UserAuthStatus|<param_identityCredential>identityCredential :: IdentityCredential"];
function_TalkServiceverifyPhone[label="<return_type>function verifyPhone :: VerificationResult|<param_sessionId>sessionId :: string|<param_pinCode>pinCode :: string|<param_udidHash>udidHash :: string"];
function_TalkServiceverifyQrcode[label="<return_type>function verifyQrcode :: string|<param_verifier>verifier :: string|<param_pinCode>pinCode :: string"];
 }
subgraph cluster_UniversalNotificationService {
node [fillcolor=bisque];
style=dashed;
label = "UniversalNotificationService service";
function_UniversalNotificationServicenotify[label="<return_type>function notify :: void|<param_event>event :: GlobalEvent"];
 }
subgraph cluster_CallService {
node [fillcolor=bisque];
style=dashed;
label = "CallService service";
function_CallServicegetUserStatus[label="<return_type>function getUserStatus :: UserStatus|<param_mid>mid :: string"];
function_CallServiceupdateProfileAttributeForChannel[label="<return_type>function updateProfileAttributeForChannel :: void|<param_profileAttribute>profileAttribute :: ProfileAttribute|<param_value>value :: string"];
function_CallServiceupdateExtendedProfileAttribute[label="<return_type>function updateExtendedProfileAttribute :: void|<param_attr>attr :: ExtendedProfileAttribute|<param_extendedProfile>extendedProfile :: ExtendedProfile"];
function_CallServicegetAllSimpleChannelContacts[label="<return_type>function getAllSimpleChannelContacts :: list\<SimpleChannelContact\>|<param_statusSticonFallbackDisabled>statusSticonFallbackDisabled :: bool"];
function_CallServicegetUserIdentities[label="<return_type>function getUserIdentities :: map\<RegistrationType, string\>"];
function_CallServicemarkPaidCallAd[label="<return_type>function markPaidCallAd :: PaidCallDialing|<param_dialedNumber>dialedNumber :: string|<param_language>language :: string|<param_disableCallerId>disableCallerId :: bool"];
function_CallServiceisGroupMember[label="<return_type>function isGroupMember :: bool|<param_groupId>groupId :: string"];
function_CallServicegetPhoneInfoFromPhoneNumber[label="<return_type>function getPhoneInfoFromPhoneNumber :: PhoneInfoForChannel|<param_region>region :: string|<param_phoneNumber>phoneNumber :: string"];
function_CallServiceredeemPaidCallVoucher[label="<return_type>function redeemPaidCallVoucher :: PaidCallRedeemResult|<param_serial>serial :: string|<param_language>language :: string"];
function_CallServicegetPreferredDisplayName[label="<return_type>function getPreferredDisplayName :: map\<string, string\>|<param_mids>mids :: list\<string\>"];
function_CallServicegetContactsForChannel[label="<return_type>function getContactsForChannel :: list\<Contact\>|<param_ids>ids :: list\<string\>"];
function_CallServicegetCallCreditProducts[label="<return_type>function getCallCreditProducts :: list\<CoinProductItem\>|<param_appStoreCode>appStoreCode :: PaymentType|<param_pgCode>pgCode :: PaymentPgType|<param_country>country :: string|<param_language>language :: string"];
function_CallServicegetCompactContacts[label="<return_type>function getCompactContacts :: list\<CompactContact\>|<param_lastModifiedTimestamp>lastModifiedTimestamp :: i64"];
function_CallServicenotifyNotiCenterEvent[label="<return_type>function notifyNotiCenterEvent :: void|<param_event>event :: NotiCenterEventData"];
function_CallServiceisInContact[label="<return_type>function isInContact :: bool|<param_mid>mid :: string"];
function_CallServicelookupGroupMembers[label="<return_type>function lookupGroupMembers :: list\<SimpleChannelContact\>|<param_groupId>groupId :: string|<param_mids>mids :: list\<string\>"];
function_CallServicegetRoomInformation[label="<return_type>function getRoomInformation :: Room|<param_roomMid>roomMid :: string"];
function_CallServicegetGroupCall[label="<return_type>function getGroupCall :: GroupCall|<param_chatMid>chatMid :: string"];
function_CallServiceisAllowSecondaryDeviceLogin[label="<return_type>function isAllowSecondaryDeviceLogin :: bool"];
function_CallServicegetPrimaryClientForChannel[label="<return_type>function getPrimaryClientForChannel :: SimpleChannelClient"];
function_CallServicecreateRoomWithBuddy[label="<return_type>function createRoomWithBuddy :: Room|<param_reqSeq>reqSeq :: i32|<param_buddyMid>buddyMid :: string|<param_contactIds>contactIds :: list\<string\>"];
function_CallServicegetDisplayName[label="<return_type>function getDisplayName :: string|<param_mid>mid :: string"];
function_CallServicegetPaidCallMetadata[label="<return_type>function getPaidCallMetadata :: PaidCallMetadataResult|<param_language>language :: string"];
function_CallServicegetMid[label="<return_type>function getMid :: string"];
function_CallServicegetUserCountryForBilling[label="<return_type>function getUserCountryForBilling :: string|<param_country>country :: string|<param_remoteIp>remoteIp :: string"];
function_CallServicegetFavoriteGroupIdsForChannel[label="<return_type>function getFavoriteGroupIdsForChannel :: list\<string\>"];
function_CallServicegetPaidCallHistory[label="<return_type>function getPaidCallHistory :: PaidCallHistoryResult|<param_start>start :: i64|<param_size>size :: i32|<param_language>language :: string"];
function_CallServicesendPinCodeOperation[label="<return_type>function sendPinCodeOperation :: void|<param_verifier>verifier :: string"];
function_CallServiceinviteIntoGroupCall[label="<return_type>function inviteIntoGroupCall :: void|<param_chatMid>chatMid :: string|<param_memberMids>memberMids :: list\<string\>|<param_mediaType>mediaType :: GroupCallMediaType"];
function_CallServicegetFriendMids[label="<return_type>function getFriendMids :: list\<string\>"];
function_CallServicegetMetaProfile[label="<return_type>function getMetaProfile :: MetaProfile"];
function_CallServicesendMessageForChannel[label="<return_type>function sendMessageForChannel :: Message|<param_message>message :: Message"];
function_CallServiceactiveBuddySubscriberCount[label="<return_type>function activeBuddySubscriberCount :: i64"];
function_CallServicegetCallCreditPurchaseHistory[label="<return_type>function getCallCreditPurchaseHistory :: CoinHistoryResult|<param_request>request :: CoinHistoryCondition"];
function_CallServiceisRoomMember[label="<return_type>function isRoomMember :: bool|<param_roomId>roomId :: string"];
function_CallServicesendSystemOAMessage[label="<return_type>function sendSystemOAMessage :: Message|<param_message>message :: Message"];
function_CallServiceacquirePaidCallRoute[label="<return_type>function acquirePaidCallRoute :: PaidCallResponse|<param_paidCallType>paidCallType :: PaidCallType|<param_dialedNumber>dialedNumber :: string|<param_language>language :: string|<param_networkCode>networkCode :: string|<param_disableCallerId>disableCallerId :: bool|<param_referer>referer :: string|<param_adSessionId>adSessionId :: string"];
function_CallServicegetGroupsForChannel[label="<return_type>function getGroupsForChannel :: list\<Group\>|<param_groupIds>groupIds :: list\<string\>"];
function_CallServicegetUserCreateTime[label="<return_type>function getUserCreateTime :: i64"];
function_CallServiceregisterChannelCP[label="<return_type>function registerChannelCP :: string|<param_cpId>cpId :: string|<param_registerPassword>registerPassword :: string"];
function_CallServicereserveCallCreditPurchase[label="<return_type>function reserveCallCreditPurchase :: PaymentReservationResult|<param_request>request :: CoinPurchaseReservation"];
function_CallServiceacquirePaidCallCurrencyExchangeRate[label="<return_type>function acquirePaidCallCurrencyExchangeRate :: list\<PaidCallCurrencyExchangeRate\>|<param_language>language :: string"];
function_CallServicegetRoomMemberMidsForAppPlatform[label="<return_type>function getRoomMemberMidsForAppPlatform :: list\<string\>|<param_roomId>roomId :: string"];
function_CallServicegetPaidCallBalanceList[label="<return_type>function getPaidCallBalanceList :: list\<PaidCallBalance\>|<param_language>language :: string"];
function_CallServicegetPersonalInfos[label="<return_type>function getPersonalInfos :: map\<PersonalInfo, string\>|<param_requiredPersonalInfos>requiredPersonalInfos :: set\<PersonalInfo\>"];
function_CallServicegetPrimaryClientsForChannel[label="<return_type>function getPrimaryClientsForChannel :: list\<SimpleChannelClient\>|<param_userMids>userMids :: list\<string\>"];
function_CallServiceaddBuddyToContact[label="<return_type>function addBuddyToContact :: ContactTransition|<param_buddyMid>buddyMid :: string"];
function_CallServicegetGroupMemberMidsForAppPlatform[label="<return_type>function getGroupMemberMidsForAppPlatform :: list\<string\>|<param_groupId>groupId :: string"];
function_CallServicegetUserLanguage[label="<return_type>function getUserLanguage :: string"];
function_CallServicelookupPaidCall[label="<return_type>function lookupPaidCall :: PaidCallResponse|<param_dialedNumber>dialedNumber :: string|<param_language>language :: string|<param_referer>referer :: string"];
function_CallServicegetExtendedProfile[label="<return_type>function getExtendedProfile :: ExtendedProfile"];
function_CallServicegetReverseCompactContacts[label="<return_type>function getReverseCompactContacts :: map\<string, CompactContact\>|<param_ids>ids :: list\<string\>"];
function_CallServicegetPaidCallAdStatus[label="<return_type>function getPaidCallAdStatus :: PaidCallAdResult"];
function_CallServicefindContactByUseridWithoutAbuseBlockForChannel[label="<return_type>function findContactByUseridWithoutAbuseBlockForChannel :: Contact|<param_userid>userid :: string"];
function_CallServicegetGroupMemberMids[label="<return_type>function getGroupMemberMids :: list\<string\>|<param_groupId>groupId :: string"];
function_CallServicesendMessageWithoutRelationship[label="<return_type>function sendMessageWithoutRelationship :: Message|<param_message>message :: Message"];
function_CallServicedisplayBuddySubscriberCountInBulk[label="<return_type>function displayBuddySubscriberCountInBulk :: map\<string, i64\>|<param_mids>mids :: list\<string\>"];
function_CallServicelookupRoomMembers[label="<return_type>function lookupRoomMembers :: list\<SimpleChannelContact\>|<param_roomId>roomId :: string|<param_mids>mids :: list\<string\>"];
function_CallServicegetFavoriteMidsForChannel[label="<return_type>function getFavoriteMidsForChannel :: list\<string\>"];
function_CallServicegetAllContactIdsForChannel[label="<return_type>function getAllContactIdsForChannel :: list\<string\>"];
function_CallServicedisplayBuddySubscriberCount[label="<return_type>function displayBuddySubscriberCount :: i64"];
function_CallServicegetProfileForChannel[label="<return_type>function getProfileForChannel :: Profile"];
function_CallServicegetUserTickets[label="<return_type>function getUserTickets :: list\<UserTicketResponse\>|<param_userMids>userMids :: list\<string\>"];
function_CallServicegetOAFriendMids[label="<return_type>function getOAFriendMids :: list\<string\>"];
function_CallServicesearchPaidCallUserRate[label="<return_type>function searchPaidCallUserRate :: list\<PaidCallUserRate\>|<param_countryCode>countryCode :: string|<param_language>language :: string"];
function_CallServicegetJoinedGroupIdsForChannel[label="<return_type>function getJoinedGroupIdsForChannel :: list\<string\>"];
function_CallServiceacquireGroupCallRoute[label="<return_type>function acquireGroupCallRoute :: GroupCallRoute|<param_chatMid>chatMid :: string|<param_mediaType>mediaType :: GroupCallMediaType"];
function_CallServicegetUserMidsWhoAddedMe[label="<return_type>function getUserMidsWhoAddedMe :: list\<string\>"];
function_CallServicegetIdentityCredential[label="<return_type>function getIdentityCredential :: IdentityCredential"];
function_CallServiceaddOperationForChannel[label="<return_type>function addOperationForChannel :: void|<param_opType>opType :: OpType|<param_param1>param1 :: string|<param_param2>param2 :: string|<param_param3>param3 :: string"];
function_CallServicegetSimpleChannelContacts[label="<return_type>function getSimpleChannelContacts :: list\<SimpleChannelContact\>|<param_ids>ids :: list\<string\>|<param_statusSticonFallbackDisabled>statusSticonFallbackDisabled :: bool"];
function_CallServicegetUserLastSentMessageTimeStamp[label="<return_type>function getUserLastSentMessageTimeStamp :: i64|<param_mid>mid :: string"];
 }
subgraph cluster_AuthService {
node [fillcolor=bisque];
style=dashed;
label = "AuthService service";
function_AuthServicenormalizePhoneNumber[label="<return_type>function normalizePhoneNumber :: string|<param_countryCode>countryCode :: string|<param_phoneNumber>phoneNumber :: string|<param_countryCodeHint>countryCodeHint :: string"];
function_AuthServicerespondE2EELoginRequest[label="<return_type>function respondE2EELoginRequest :: void|<param_verifier>verifier :: string|<param_publicKey>publicKey :: E2EEPublicKey|<param_encryptedKeyChain>encryptedKeyChain :: binary|<param_hashKeyChain>hashKeyChain :: binary|<param_errorCode>errorCode :: ErrorCode"];
function_AuthServiceconfirmE2EELogin[label="<return_type>function confirmE2EELogin :: string|<param_verifier>verifier :: string|<param_deviceSecret>deviceSecret :: binary"];
function_AuthServicelogoutZ[label="<return_type>function logoutZ :: void"];
function_AuthServiceloginZ[label="<return_type>function loginZ :: LoginResult|<param_loginRequest>loginRequest :: LoginRequest"];
function_AuthServiceissueTokenForAccountMigrationSettings[label="<return_type>function issueTokenForAccountMigrationSettings :: SecurityCenterResult|<param_enforce>enforce :: bool"];
function_AuthServiceissueTokenForAccountMigration[label="<return_type>function issueTokenForAccountMigration :: SecurityCenterResult|<param_migrationSessionId>migrationSessionId :: string"];
function_AuthServiceverifyQrcodeWithE2EE[label="<return_type>function verifyQrcodeWithE2EE :: string|<param_verifier>verifier :: string|<param_pinCode>pinCode :: string|<param_errorCode>errorCode :: ErrorCode|<param_publicKey>publicKey :: E2EEPublicKey|<param_encryptedKeyChain>encryptedKeyChain :: binary|<param_hashKeyChain>hashKeyChain :: binary"];
 }
subgraph cluster_SquareService {
node [fillcolor=bisque];
style=dashed;
label = "SquareService service";
function_SquareServicegetSquareChatAnnouncements[label="<return_type>function getSquareChatAnnouncements :: GetSquareChatAnnouncementsResponse|<param_request>request :: GetSquareChatAnnouncementsRequest"];
function_SquareServicedeleteSquareChatAnnouncement[label="<return_type>function deleteSquareChatAnnouncement :: DeleteSquareChatAnnouncementResponse|<param_request>request :: DeleteSquareChatAnnouncementRequest"];
function_SquareServicecreateSquareChatAnnouncement[label="<return_type>function createSquareChatAnnouncement :: CreateSquareChatAnnouncementResponse|<param_request>request :: CreateSquareChatAnnouncementRequest"];
function_SquareServicegetNoteStatus[label="<return_type>function getNoteStatus :: GetNoteStatusResponse|<param_request>request :: GetNoteStatusRequest"];
function_SquareServicegetSquareStatus[label="<return_type>function getSquareStatus :: GetSquareStatusResponse|<param_request>request :: GetSquareStatusRequest"];
function_SquareServicereportSquareMember[label="<return_type>function reportSquareMember :: ReportSquareMemberResponse|<param_request>request :: ReportSquareMemberRequest"];
function_SquareServicereportSquareMessage[label="<return_type>function reportSquareMessage :: ReportSquareMessageResponse|<param_request>request :: ReportSquareMessageRequest"];
function_SquareServicereportSquareChat[label="<return_type>function reportSquareChat :: ReportSquareChatResponse|<param_request>request :: ReportSquareChatRequest"];
function_SquareServicereportSquare[label="<return_type>function reportSquare :: ReportSquareResponse|<param_request>request :: ReportSquareRequest"];
function_SquareServiceupdateSquareMemberRelation[label="<return_type>function updateSquareMemberRelation :: UpdateSquareMemberRelationResponse|<param_request>request :: UpdateSquareMemberRelationRequest"];
function_SquareServiceupdateSquareAuthority[label="<return_type>function updateSquareAuthority :: UpdateSquareAuthorityResponse|<param_request>request :: UpdateSquareAuthorityRequest"];
function_SquareServiceupdateSquareChatMember[label="<return_type>function updateSquareChatMember :: UpdateSquareChatMemberResponse|<param_request>request :: UpdateSquareChatMemberRequest"];
function_SquareServiceupdateSquareChat[label="<return_type>function updateSquareChat :: UpdateSquareChatResponse|<param_request>request :: UpdateSquareChatRequest"];
function_SquareServicerefreshSubscriptions[label="<return_type>function refreshSubscriptions :: RefreshSubscriptionsResponse|<param_request>request :: RefreshSubscriptionsRequest"];
function_SquareServiceremoveSubscriptions[label="<return_type>function removeSubscriptions :: RemoveSubscriptionsResponse|<param_request>request :: RemoveSubscriptionsRequest"];
function_SquareServicerejectSquareMembers[label="<return_type>function rejectSquareMembers :: RejectSquareMembersResponse|<param_request>request :: RejectSquareMembersRequest"];
function_SquareServiceupdateSquareMembers[label="<return_type>function updateSquareMembers :: UpdateSquareMembersResponse|<param_request>request :: UpdateSquareMembersRequest"];
function_SquareServiceupdateSquareMember[label="<return_type>function updateSquareMember :: UpdateSquareMemberResponse|<param_request>request :: UpdateSquareMemberRequest"];
function_SquareServiceupdateSquareFeatureSet[label="<return_type>function updateSquareFeatureSet :: UpdateSquareFeatureSetResponse|<param_request>request :: UpdateSquareFeatureSetRequest"];
function_SquareServicegetSquareFeatureSet[label="<return_type>function getSquareFeatureSet :: GetSquareFeatureSetResponse|<param_request>request :: GetSquareFeatureSetRequest"];
function_SquareServicesearchSquares[label="<return_type>function searchSquares :: SearchSquaresResponse|<param_request>request :: SearchSquaresRequest"];
function_SquareServiceupdateSquare[label="<return_type>function updateSquare :: UpdateSquareResponse|<param_request>request :: UpdateSquareRequest"];
function_SquareServicegetCategories[label="<return_type>function getCategories :: GetSquareCategoriesResponse|<param_request>request :: GetSquareCategoriesRequest"];
function_SquareServicesearchSquareMembers[label="<return_type>function searchSquareMembers :: SearchSquareMembersResponse|<param_request>request :: SearchSquareMembersRequest"];
function_SquareServicefetchSquareChatEvents[label="<return_type>function fetchSquareChatEvents :: FetchSquareChatEventsResponse|<param_request>request :: FetchSquareChatEventsRequest"];
function_SquareServicefetchMyEvents[label="<return_type>function fetchMyEvents :: FetchMyEventsResponse|<param_request>request :: FetchMyEventsRequest"];
function_SquareServicemarkAsRead[label="<return_type>function markAsRead :: MarkAsReadResponse|<param_request>request :: MarkAsReadRequest"];
function_SquareServicegetSquareAuthority[label="<return_type>function getSquareAuthority :: GetSquareAuthorityResponse|<param_request>request :: GetSquareAuthorityRequest"];
function_SquareServicesendMessage[label="<return_type>function sendMessage :: SendMessageResponse|<param_request>request :: SendMessageRequest"];
function_SquareServiceleaveSquare[label="<return_type>function leaveSquare :: LeaveSquareResponse|<param_request>request :: LeaveSquareRequest"];
function_SquareServiceleaveSquareChat[label="<return_type>function leaveSquareChat :: LeaveSquareChatResponse|<param_request>request :: LeaveSquareChatRequest"];
function_SquareServicejoinSquareChat[label="<return_type>function joinSquareChat :: JoinSquareChatResponse|<param_request>request :: JoinSquareChatRequest"];
function_SquareServicejoinSquare[label="<return_type>function joinSquare :: JoinSquareResponse|<param_request>request :: JoinSquareRequest"];
function_SquareServiceinviteToSquare[label="<return_type>function inviteToSquare :: InviteToSquareResponse|<param_request>request :: InviteToSquareRequest"];
function_SquareServiceinviteToSquareChat[label="<return_type>function inviteToSquareChat :: InviteToSquareChatResponse|<param_request>request :: InviteToSquareChatRequest"];
function_SquareServicegetSquareMember[label="<return_type>function getSquareMember :: GetSquareMemberResponse|<param_request>request :: GetSquareMemberRequest"];
function_SquareServicegetSquareMembers[label="<return_type>function getSquareMembers :: GetSquareMembersResponse|<param_request>request :: GetSquareMembersRequest"];
function_SquareServicegetSquareMemberRelation[label="<return_type>function getSquareMemberRelation :: GetSquareMemberRelationResponse|<param_request>request :: GetSquareMemberRelationRequest"];
function_SquareServicegetSquareMemberRelations[label="<return_type>function getSquareMemberRelations :: GetSquareMemberRelationsResponse|<param_request>request :: GetSquareMemberRelationsRequest"];
function_SquareServicegetSquareChatMembers[label="<return_type>function getSquareChatMembers :: GetSquareChatMembersResponse|<param_request>request :: GetSquareChatMembersRequest"];
function_SquareServicegetSquareChatStatus[label="<return_type>function getSquareChatStatus :: GetSquareChatStatusResponse|<param_request>request :: GetSquareChatStatusRequest"];
function_SquareServicegetSquareChat[label="<return_type>function getSquareChat :: GetSquareChatResponse|<param_request>request :: GetSquareChatRequest"];
function_SquareServicegetSquare[label="<return_type>function getSquare :: GetSquareResponse|<param_request>request :: GetSquareRequest"];
function_SquareServicegetJoinedSquares[label="<return_type>function getJoinedSquares :: GetJoinedSquaresResponse|<param_request>request :: GetJoinedSquaresRequest"];
function_SquareServicegetJoinedSquareChats[label="<return_type>function getJoinedSquareChats :: GetJoinedSquareChatsResponse|<param_request>request :: GetJoinedSquareChatsRequest"];
function_SquareServiceapproveSquareMembers[label="<return_type>function approveSquareMembers :: ApproveSquareMembersResponse|<param_request>request :: ApproveSquareMembersRequest"];
function_SquareServicecreateSquareChat[label="<return_type>function createSquareChat :: CreateSquareChatResponse|<param_request>request :: CreateSquareChatRequest"];
function_SquareServicecreateSquare[label="<return_type>function createSquare :: CreateSquareResponse|<param_request>request :: CreateSquareRequest"];
function_SquareServicedeleteSquareChat[label="<return_type>function deleteSquareChat :: DeleteSquareChatResponse|<param_request>request :: DeleteSquareChatRequest"];
function_SquareServicedeleteSquare[label="<return_type>function deleteSquare :: DeleteSquareResponse|<param_request>request :: DeleteSquareRequest"];
function_SquareServicedestroyMessage[label="<return_type>function destroyMessage :: DestroyMessageResponse|<param_request>request :: DestroyMessageRequest"];
function_SquareServicegetJoinableSquareChats[label="<return_type>function getJoinableSquareChats :: GetJoinableSquareChatsResponse|<param_request>request :: GetJoinableSquareChatsRequest"];
function_SquareServicegetInvitationTicketUrl[label="<return_type>function getInvitationTicketUrl :: GetInvitationTicketUrlResponse|<param_request>request :: GetInvitationTicketUrlRequest"];
function_SquareServicefindSquareByInvitationTicket[label="<return_type>function findSquareByInvitationTicket :: FindSquareByInvitationTicketResponse|<param_request>request :: FindSquareByInvitationTicketRequest"];
 }
MessageCommitResult:field_state -> BuddyResultState
AgeCheckDocomoResult:field_userAgeType -> UserAgeType
SquareChatAnnouncementContents:field_textMessageAnnouncementContents -> TextMessageAnnouncementContents
SquareChatAnnouncement:field_type -> SquareChatAnnouncementType
SquareChatAnnouncement:field_contents -> SquareChatAnnouncementContents
E2EENegotiationResult:field_allowedTypes -> ContentType
E2EENegotiationResult:field_publicKey -> E2EEPublicKey
Square:field_type -> SquareType
Square:field_state -> SquareState
SquareAuthority:field_updateSquareProfile -> SquareMemberRole
SquareAuthority:field_inviteNewMember -> SquareMemberRole
SquareAuthority:field_approveJoinRequest -> SquareMemberRole
SquareAuthority:field_createPost -> SquareMemberRole
SquareAuthority:field_createOpenSquareChat -> SquareMemberRole
SquareAuthority:field_deleteSquareChatOrPost -> SquareMemberRole
SquareAuthority:field_removeSquareMember -> SquareMemberRole
SquareAuthority:field_grantRole -> SquareMemberRole
SquareAuthority:field_enableInvitationTicket -> SquareMemberRole
SquareMember:field_membershipState -> SquareMembershipState
SquareMember:field_role -> SquareMemberRole
SquareMember:field_preference -> SquarePreference
SquareMemberRelation:field_state -> SquareMemberRelationState
SquareFeature:field_controlState -> SquareFeatureControlState
SquareFeature:field_booleanValue -> BooleanState
SquareFeatureSet:field_creatingSecretSquareChat -> SquareFeature
SquareFeatureSet:field_invitingIntoOpenSquareChat -> SquareFeature
SquareChat:field_type -> SquareChatType
SquareChat:field_state -> SquareChatState
SquareInfo:field_square -> Square
SquareInfo:field_squareStatus -> SquareStatus
SquareInfo:field_squareNoteStatus -> NoteStatus
PaidCallBalance:field_productType -> PaidCallProductType
ExtendedProfileBirthday:field_yearPrivacyLevelType -> PrivacyLevelType
ExtendedProfileBirthday:field_dayPrivacyLevelType -> PrivacyLevelType
ExtendedProfile:field_birthday -> ExtendedProfileBirthday
PaidCallDialing:field_type -> PaidCallType
PaidCallDialing:field_productType -> PaidCallProductType
PaidCallDialing:field_callerIdStatus -> PaidCallerIdStatus
SpotItem:field_category -> SpotCategory
SpotNearbyItem:field_spotItem -> SpotItem
SpotNearbyItem:field_location -> Location
SpotNearbyResponse:field_spotNearbyItems -> SpotNearbyItem
SpotPhoneNumberResponse:field_spotItems -> SpotItem
PaidCallHistory:field_type -> PaidCallType
PaidCallHistory:field_productType -> PaidCallProductType
PaidCallHistoryResult:field_historys -> PaidCallHistory
PaidCallMetadataResult:field_currencyExchangeRates -> PaidCallCurrencyExchangeRate
PaidCallMetadataResult:field_adCountries -> PaidCallAdCountry
PaidCallResponse:field_host -> CallHost
PaidCallResponse:field_dialing -> PaidCallDialing
PaidCallResponse:field_spotItems -> SpotItem
ChannelInfo:field_provider -> ChannelProvider
ChannelInfo:field_publicType -> PublicType
ChannelInfo:field_channelConfigurations -> ChannelConfiguration
ChannelInfo:field_allowedPermissions -> ChannelPermission
ChannelInfo:field_channelDomains -> ChannelDomain
ApprovedChannelInfo:field_channelInfo -> ChannelInfo
ApprovedChannelInfos:field_approvedChannelInfos -> ApprovedChannelInfo
ContactTransition:field_previousStatus -> ContactStatus
ContactTransition:field_resultStatus -> ContactStatus
BuddyBanner:field_buddyBannerLinkType -> BuddyBannerLinkType
BuddyDetail:field_acceptableContentTypes -> ContentType
Contact:field_type -> ContactType
Contact:field_status -> ContactStatus
Contact:field_relation -> ContactRelation
Contact:field_friendRequestStatus -> FriendRequestStatus
BuddyList:field_popularContacts -> Contact
BuddyMessageRequest:field_contentType -> ContentType
BuddyMessageRequest:field_location -> Location
BuddyOnAir:field_onAirType -> BuddyOnAirType
BuddyOnAir:field_onAirUrls -> BuddyOnAirUrls
CommitMessageResult:field_message -> Message
CommitMessageResult:field_code -> CommitMessageResultCode
SyncParamMid:field_diff -> Diff
SyncParamContact:field_syncParamMid -> SyncParamMid
SyncParamContact:field_contactStatus -> ContactStatus
ChannelDomains:field_channelDomains -> ChannelDomain
ChannelInfos:field_channelInfos -> ChannelInfo
ChannelSyncDatas:field_channelInfos -> ChannelInfo
ChannelSyncDatas:field_channelDomains -> ChannelDomain
CoinPayLoad:field_type -> PayloadType
CoinHistory:field_payload -> CoinPayLoad
CoinHistoryCondition:field_appStoreCode -> PaymentType
CoinHistoryResult:field_historys -> CoinHistory
CoinHistoryResult:field_balance -> Coin
CoinPurchaseConfirm:field_appStoreCode -> PaymentType
CoinPurchaseReservation:field_appStoreCode -> PaymentType
CoinPurchaseReservation:field_pgCode -> PaymentPgType
CoinUseReservation:field_appStoreCode -> PaymentType
CoinUseReservation:field_items -> CoinUseReservationItem
CompactContact:field_status -> ContactStatus
ContactModification:field_type -> ModificationType
ContactRegistration:field_contact -> Contact
ContactRegistration:field_contactType -> ContactType
ContactReport:field_contact -> Contact
DeviceInfo:field_carrierCode -> CarrierCode
DeviceInfo:field_applicationType -> ApplicationType
EmailConfirmationSession:field_emailConfirmationType -> EmailConfirmationType
FriendChannelMatricesResponse:field_matrices -> FriendChannelMatrix
FriendRequest:field_direction -> FriendRequestDirection
FriendRequest:field_method -> FriendRequestMethod
FriendRequestsInfo:field_recentIncomings -> FriendRequest
FriendRequestsInfo:field_recentOutgoings -> FriendRequest
GlobalEvent:field_targets -> NotificationTarget
Group:field_groupPreference -> GroupPreference
Group:field_members -> Contact
Group:field_creator -> Contact
Group:field_invitee -> Contact
IdentityCredential:field_provider -> IdentityProvider
LastReadMessageIds:field_lastReadMessageIds -> LastReadMessageId
VerificationSessionData:field_method -> VerificationMethod
VerificationSessionData:field_availableVerificationMethods -> VerificationMethod
LoginResult:field_type -> LoginResultType
LoginResult:field_sessionForSMSConfirm -> VerificationSessionData
LoginSession:field_applicationType -> ApplicationType
Message:field_toType -> MIDType
Message:field_location -> Location
Message:field_contentType -> ContentType
Message:field_messageRelationType -> MessageRelationType
Message:field_relatedMessageServiceCode -> ServiceCode
SquareMessage:field_message -> Message
SquareMessage:field_fromType -> MIDType
SquareChatStatus:field_lastMessage -> SquareMessage
SquareChatStatus:field_otherStatus -> SquareChatStatusWithoutMessage
SquareChatMember:field_membershipState -> SquareChatMembershipState
MessageOperation:field_type -> MessageOperationType
MessageOperation:field_status -> OpStatus
MessageOperation:field_message -> Message
MessageOperations:field_operations -> MessageOperation
MetaProfile:field_identities -> RegistrationType
NotificationFetchResult:field_fetchMode -> NotificationItemFetchMode
NotificationFetchResult:field_itemList -> NotificationItem
Operation:field_type -> OpType
Operation:field_status -> OpStatus
Operation:field_message -> Message
PaymentReservation:field_appStoreCode -> PaymentType
Product:field_paymentType -> PaymentType
Product:field_eventType -> ProductEventType
Product:field_categories -> ProductCategory
Product:field_stickerResourceType -> StickerResourceType
ProductList:field_bannerTargetType -> ProductBannerLinkType
ProductList:field_productList -> Product
ProductSimple:field_stickerIdRanges -> StickerIdRange
ProductSimpleList:field_productList -> ProductSimple
ProximityMatchCandidateResult:field_users -> Contact
ProximityMatchCandidateResult:field_buddies -> Contact
Room:field_contacts -> Contact
SuggestItemDictionaryIncrement:field_status -> SuggestDictionaryIncrementStatus
SuggestTagDictionaryIncrement:field_status -> SuggestDictionaryIncrementStatus
SuggestDictionaryIncrements:field_itemIncrement -> SuggestItemDictionaryIncrement
SuggestDictionaryIncrements:field_tagIncrements -> SuggestTagDictionaryIncrement
SuggestDictionaryRevisions:field_itemRevision -> SuggestItemDictionaryRevision
SuggestDictionaryRevisions:field_tagRevisions -> SuggestTagDictionaryRevision
SuggestDictionarySettings:field_dictionaries -> SuggestDictionary
PhoneVerificationResult:field_verificationResult -> VerificationResult
PhoneVerificationResult:field_accountMigrationCheckType -> AccountMigrationCheckType
SendBuddyMessageResult:field_state -> BuddyResultState
SetBuddyOnAirResult:field_state -> BuddyResultState
Settings:field_identityProvider -> IdentityProvider
Settings:field_snsAccounts -> SnsIdType
Settings:field_emailConfirmationStatus -> EmailConfirmationStatus
Settings:field_customModes -> CustomMode
SnsFriend:field_snsIdType -> SnsIdType
SnsFriendContactRegistration:field_contact -> Contact
SnsFriendContactRegistration:field_snsIdType -> SnsIdType
SnsFriendModification:field_type -> ModificationType
SnsFriendModification:field_snsFriend -> SnsFriend
SnsFriends:field_snsFriends -> SnsFriend
TMessageBox:field_midType -> MIDType
TMessageBox:field_lastMessages -> Message
TMessageBoxWrapUp:field_messageBox -> TMessageBox
TMessageBoxWrapUp:field_contacts -> Contact
TMessageBoxWrapUpResponse:field_messageBoxWrapUpList -> TMessageBoxWrapUp
TMessageReadRange:field_ranges -> TMessageReadRangeEntry
ChatRoomAnnouncement:field_type -> ChatRoomAnnouncementType
ChatRoomAnnouncement:field_contents -> ChatRoomAnnouncementContents
ErrorExtraInfo:field_preconditionFailedExtraInfo -> PreconditionFailedExtraInfo
SyncRelations:field_syncParamContact -> SyncParamContact
SyncRelations:field_syncParamMid -> SyncParamMid
SyncScope:field_contact -> SyncRelations
SyncScope:field_group -> SyncRelations
SyncScope:field_room -> SyncRelations
SyncScope:field_chat -> SyncRelations
JoinSquareResponse:field_square -> Square
JoinSquareResponse:field_squareAuthority -> SquareAuthority
JoinSquareResponse:field_squareStatus -> SquareStatus
JoinSquareResponse:field_squareMember -> SquareMember
JoinSquareResponse:field_squareFeatureSet -> SquareFeatureSet
JoinSquareResponse:field_noteStatus -> NoteStatus
JoinSquareRequest:field_member -> SquareMember
JoinSquareChatResponse:field_squareChat -> SquareChat
JoinSquareChatResponse:field_squareChatStatus -> SquareChatStatus
JoinSquareChatResponse:field_squareChatMember -> SquareChatMember
SendMessageResponse:field_createdSquareMessage -> SquareMessage
SendMessageRequest:field_squareMessage -> SquareMessage
ApproveSquareMembersResponse:field_approvedMembers -> SquareMember
ApproveSquareMembersResponse:field_status -> SquareStatus
CreateSquareChatResponse:field_squareChat -> SquareChat
CreateSquareChatResponse:field_squareChatStatus -> SquareChatStatus
CreateSquareChatResponse:field_squareChatMember -> SquareChatMember
CreateSquareChatRequest:field_squareChat -> SquareChat
CreateSquareResponse:field_square -> Square
CreateSquareResponse:field_creator -> SquareMember
CreateSquareResponse:field_authority -> SquareAuthority
CreateSquareResponse:field_status -> SquareStatus
CreateSquareRequest:field_square -> Square
CreateSquareRequest:field_creator -> SquareMember
GetSquareChatMembersResponse:field_squareChatMembers -> SquareMember
GetSquareChatStatusResponse:field_chatStatus -> SquareChatStatus
GetSquareChatResponse:field_squareChat -> SquareChat
GetSquareChatResponse:field_squareChatMember -> SquareChatMember
GetSquareChatResponse:field_squareChatStatus -> SquareChatStatus
GetSquareAuthorityResponse:field_authority -> SquareAuthority
GetJoinedSquaresResponse:field_squares -> Square
GetJoinedSquaresResponse:field_members -> SquareMember
GetJoinedSquaresResponse:field_authorities -> SquareAuthority
GetJoinedSquaresResponse:field_statuses -> SquareStatus
GetJoinedSquaresResponse:field_noteStatuses -> NoteStatus
GetJoinableSquareChatsResponse:field_squareChats -> SquareChat
GetJoinableSquareChatsResponse:field_squareChatStatuses -> SquareChatStatus
SquareMemberSearchOption:field_membershipState -> SquareMembershipState
SquareMemberSearchOption:field_memberRoles -> SquareMemberRole
SquareMemberSearchOption:field_ableToReceiveMessage -> BooleanState
SquareMemberSearchOption:field_ableToReceiveFriendRequest -> BooleanState
SearchSquareMembersRequest:field_searchOption -> SquareMemberSearchOption
SearchSquareMembersResponse:field_members -> SquareMember
FindSquareByInvitationTicketResponse:field_square -> Square
FindSquareByInvitationTicketResponse:field_myMembership -> SquareMember
FindSquareByInvitationTicketResponse:field_squareAuthority -> SquareAuthority
FindSquareByInvitationTicketResponse:field_squareStatus -> SquareStatus
SquareEventReceiveMessage:field_squareMessage -> SquareMessage
SquareEventSendMessage:field_squareMessage -> SquareMessage
SquareEventNotifiedJoinSquareChat:field_joinedMember -> SquareMember
SquareEventNotifiedInviteIntoSquareChat:field_invitees -> SquareMember
SquareEventNotifiedInviteIntoSquareChat:field_invitor -> SquareMember
SquareEventNotifiedInviteIntoSquareChat:field_invitorRelation -> SquareMemberRelation
SquareEventNotifiedLeaveSquareChat:field_squareMember -> SquareMember
SquareEventNotifiedUpdateSquareMemberProfile:field_squareMember -> SquareMember
SquareEventNotifiedKickoutFromSquare:field_kickees -> SquareMember
SquareEventNotifiedShutdownSquare:field_square -> Square
SquareEventNotifiedDeleteSquareChat:field_squareChat -> SquareChat
SquareEventNotifiedUpdateSquareChatProfileName:field_editor -> SquareMember
SquareEventNotifiedUpdateSquareChatProfileImage:field_editor -> SquareMember
SquareEventNotifiedUpdateSquareChatStatus:field_statusWithoutMessage -> SquareChatStatusWithoutMessage
SquareEventNotifiedUpdateSquareStatus:field_squareStatus -> SquareStatus
SquareEventNotifiedCreateSquareMember:field_square -> Square
SquareEventNotifiedCreateSquareMember:field_squareAuthority -> SquareAuthority
SquareEventNotifiedCreateSquareMember:field_squareStatus -> SquareStatus
SquareEventNotifiedCreateSquareMember:field_squareMember -> SquareMember
SquareEventNotifiedCreateSquareMember:field_squareFeatureSet -> SquareFeatureSet
SquareEventNotifiedCreateSquareChatMember:field_squareChatMember -> SquareChatMember
SquareEventNotifiedUpdateSquareMemberRelation:field_squareMemberRelation -> SquareMemberRelation
SquareEventNotifiedUpdateSquare:field_square -> Square
SquareEventNotifiedUpdateSquareMember:field_squareMember -> SquareMember
SquareEventNotifiedUpdateSquareChat:field_squareChat -> SquareChat
SquareEventNotificationMessage:field_squareMessage -> SquareMessage
SquareEventNotifiedUpdateSquareChatMember:field_squareChatMember -> SquareChatMember
SquareEventNotifiedUpdateSquareAuthority:field_squareAuthority -> SquareAuthority
SquareEventNotifiedUpdateSquareFeatureSet:field_squareFeatureSet -> SquareFeatureSet
SquareEventPayload:field_receiveMessage -> SquareEventReceiveMessage
SquareEventPayload:field_sendMessage -> SquareEventSendMessage
SquareEventPayload:field_notifiedJoinSquareChat -> SquareEventNotifiedJoinSquareChat
SquareEventPayload:field_notifiedInviteIntoSquareChat -> SquareEventNotifiedInviteIntoSquareChat
SquareEventPayload:field_notifiedLeaveSquareChat -> SquareEventNotifiedLeaveSquareChat
SquareEventPayload:field_notifiedDestroyMessage -> SquareEventNotifiedDestroyMessage
SquareEventPayload:field_notifiedMarkAsRead -> SquareEventNotifiedMarkAsRead
SquareEventPayload:field_notifiedUpdateSquareMemberProfile -> SquareEventNotifiedUpdateSquareMemberProfile
SquareEventPayload:field_notifiedKickoutFromSquare -> SquareEventNotifiedKickoutFromSquare
SquareEventPayload:field_notifiedShutdownSquare -> SquareEventNotifiedShutdownSquare
SquareEventPayload:field_notifiedDeleteSquareChat -> SquareEventNotifiedDeleteSquareChat
SquareEventPayload:field_notifiedUpdateSquareChatProfileName -> SquareEventNotifiedUpdateSquareChatProfileName
SquareEventPayload:field_notifiedUpdateSquareChatProfileImage -> SquareEventNotifiedUpdateSquareChatProfileImage
SquareEventPayload:field_notifiedUpdateSquareStatus -> SquareEventNotifiedUpdateSquareStatus
SquareEventPayload:field_notifiedUpdateSquareChatStatus -> SquareEventNotifiedUpdateSquareChatStatus
SquareEventPayload:field_notifiedCreateSquareMember -> SquareEventNotifiedCreateSquareMember
SquareEventPayload:field_notifiedCreateSquareChatMember -> SquareEventNotifiedCreateSquareChatMember
SquareEventPayload:field_notifiedUpdateSquareMemberRelation -> SquareEventNotifiedUpdateSquareMemberRelation
SquareEventPayload:field_notifiedUpdateSquare -> SquareEventNotifiedUpdateSquare
SquareEventPayload:field_notifiedUpdateSquareMember -> SquareEventNotifiedUpdateSquareMember
SquareEventPayload:field_notifiedUpdateSquareChat -> SquareEventNotifiedUpdateSquareChat
SquareEventPayload:field_notificationJoinRequest -> SquareEventNotificationJoinRequest
SquareEventPayload:field_notificationJoined -> SquareEventNotificationMemberUpdate
SquareEventPayload:field_notificationPromoteCoadmin -> SquareEventNotificationMemberUpdate
SquareEventPayload:field_notificationPromoteAdmin -> SquareEventNotificationMemberUpdate
SquareEventPayload:field_notificationDemoteMember -> SquareEventNotificationMemberUpdate
SquareEventPayload:field_notificationKickedOut -> SquareEventNotificationMemberUpdate
SquareEventPayload:field_notificationSquareDelete -> SquareEventNotificationSquareDelete
SquareEventPayload:field_notificationSquareChatDelete -> SquareEventNotificationSquareChatDelete
SquareEventPayload:field_notificationMessage -> SquareEventNotificationMessage
SquareEventPayload:field_notifiedUpdateSquareChatMember -> SquareEventNotifiedUpdateSquareChatMember
SquareEventPayload:field_notifiedUpdateSquareAuthority -> SquareEventNotifiedUpdateSquareAuthority
SquareEventPayload:field_notifiedUpdateSquareFeatureSet -> SquareEventNotifiedUpdateSquareFeatureSet
SquareEvent:field_type -> SquareEventType
SquareEvent:field_payload -> SquareEventPayload
SquareEvent:field_eventStatus -> SquareEventStatus
FetchMyEventsResponse:field_subscription -> SubscriptionState
FetchMyEventsResponse:field_events -> SquareEvent
FetchSquareChatEventsRequest:field_direction -> FetchDirection
FetchSquareChatEventsResponse:field_subscription -> SubscriptionState
FetchSquareChatEventsResponse:field_events -> SquareEvent
GetSquareMemberResponse:field_squareMember -> SquareMember
GetSquareMemberResponse:field_relation -> SquareMemberRelation
GetSquareMembersResponse:field_members -> SquareMember
GetSquareMemberRelationsRequest:field_state -> SquareMemberRelationState
GetSquareMemberRelationsResponse:field_squareMembers -> SquareMember
GetSquareMemberRelationsResponse:field_relations -> SquareMemberRelation
GetSquareMemberRelationResponse:field_relation -> SquareMemberRelation
GetSquareCategoriesResponse:field_categoryList -> Category
UpdateSquareRequest:field_updatedAttrs -> SquareAttribute
UpdateSquareRequest:field_square -> Square
UpdateSquareResponse:field_updatedAttrs -> SquareAttribute
UpdateSquareResponse:field_square -> Square
SearchSquaresResponse:field_squares -> Square
SearchSquaresResponse:field_squareStatuses -> SquareStatus
SearchSquaresResponse:field_myMemberships -> SquareMember
SearchSquaresResponse:field_noteStatuses -> NoteStatus
GetSquareFeatureSetResponse:field_squareFeatureSet -> SquareFeatureSet
UpdateSquareFeatureSetRequest:field_updateAttributes -> SquareFeatureSetAttribute
UpdateSquareFeatureSetRequest:field_squareFeatureSet -> SquareFeatureSet
UpdateSquareFeatureSetResponse:field_updateAttributes -> SquareFeatureSetAttribute
UpdateSquareFeatureSetResponse:field_squareFeatureSet -> SquareFeatureSet
UpdateSquareMemberRequest:field_updatedAttrs -> SquareMemberAttribute
UpdateSquareMemberRequest:field_updatedPreferenceAttrs -> SquarePreferenceAttribute
UpdateSquareMemberRequest:field_squareMember -> SquareMember
UpdateSquareMemberResponse:field_updatedAttrs -> SquareMemberAttribute
UpdateSquareMemberResponse:field_squareMember -> SquareMember
UpdateSquareMemberResponse:field_updatedPreferenceAttrs -> SquarePreferenceAttribute
UpdateSquareMembersRequest:field_updatedAttrs -> SquareMemberAttribute
UpdateSquareMembersRequest:field_members -> SquareMember
UpdateSquareMembersResponse:field_updatedAttrs -> SquareMemberAttribute
UpdateSquareMembersResponse:field_editor -> SquareMember
UpdateSquareMembersResponse:field_members -> SquareMember
RejectSquareMembersResponse:field_rejectedMembers -> SquareMember
RejectSquareMembersResponse:field_status -> SquareStatus
RefreshSubscriptionsResponse:field_subscriptionStates -> SubscriptionState
UpdateSquareChatRequest:field_updatedAttrs -> SquareChatAttribute
UpdateSquareChatRequest:field_squareChat -> SquareChat
UpdateSquareChatResponse:field_updatedAttrs -> SquareChatAttribute
UpdateSquareChatResponse:field_squareChat -> SquareChat
UpdateSquareChatMemberRequest:field_updatedAttrs -> SquareChatMemberAttribute
UpdateSquareChatMemberRequest:field_chatMember -> SquareChatMember
UpdateSquareChatMemberResponse:field_updatedChatMember -> SquareChatMember
UpdateSquareAuthorityRequest:field_updateAttributes -> SquareAuthorityAttribute
UpdateSquareAuthorityRequest:field_authority -> SquareAuthority
UpdateSquareAuthorityResponse:field_updatdAttributes -> SquareAuthorityAttribute
UpdateSquareAuthorityResponse:field_authority -> SquareAuthority
UpdateSquareMemberRelationRequest:field_updatedAttrs -> SquareMemberRelationAttribute
UpdateSquareMemberRelationRequest:field_relation -> SquareMemberRelation
UpdateSquareMemberRelationResponse:field_updatedAttrs -> SquareMemberRelationAttribute
UpdateSquareMemberRelationResponse:field_relation -> SquareMemberRelation
ReportSquareRequest:field_reportType -> ReportType
ReportSquareChatRequest:field_reportType -> ReportType
ReportSquareMessageRequest:field_reportType -> ReportType
ReportSquareMemberRequest:field_reportType -> ReportType
GetSquareResponse:field_square -> Square
GetSquareResponse:field_myMembership -> SquareMember
GetSquareResponse:field_squareAuthority -> SquareAuthority
GetSquareResponse:field_squareStatus -> SquareStatus
GetSquareResponse:field_squareFeatureSet -> SquareFeatureSet
GetSquareResponse:field_noteStatus -> NoteStatus
GetSquareStatusResponse:field_squareStatus -> SquareStatus
GetNoteStatusResponse:field_status -> NoteStatus
CreateSquareChatAnnouncementRequest:field_squareChatAnnouncement -> SquareChatAnnouncement
CreateSquareChatAnnouncementResponse:field_announcement -> SquareChatAnnouncement
GetSquareChatAnnouncementsResponse:field_announcements -> SquareChatAnnouncement
GetJoinedSquareChatsResponse:field_chats -> SquareChat
GetJoinedSquareChatsResponse:field_chatMembers -> SquareChatMember
GetJoinedSquareChatsResponse:field_statuses -> SquareChatStatus
TalkException:field_code -> ErrorCode
ShouldSyncException:field_syncScope -> SyncScope
ShouldSyncException:field_syncReason -> SyncTriggerReason
PointException:field_code -> PointErrorCode
ChannelException:field_code -> ChannelErrorCode
SquareException:field_errorCode -> SQErrorCode
SquareException:field_errorExtraInfo -> ErrorExtraInfo
UniversalNotificationServiceException:field_code -> UniversalNotificationServiceErrorCode
UpdateBuddyProfileResult:field_state -> BuddyResultState
UserAuthStatus:field_registeredSnsIdTypes -> SnsIdType
WapInvitation:field_type -> WapInvitationType
GroupCall:field_mediaType -> GroupCallMediaType
GroupCallRoute:field_cscf -> CallHost
GroupCallRoute:field_mix -> CallHost
function_AccountSupervisorServicegetRSAKey:return_type -> RSAKey
function_SpotServicelookupByPhoneNumber:return_type -> SpotPhoneNumberResponse
function_SpotServicelookupNearby:return_type -> SpotNearbyResponse
function_SpotServicelookupNearby:param_location -> Location
function_SpotServicelookupNearby:param_category -> SpotCategory
function_BotServicegetBotUseInfo:return_type -> BotUseInfo
function_AgeCheckServicecheckUserAge:return_type -> UserAgeType
function_AgeCheckServicecheckUserAge:param_carrier -> CarrierCode
function_AgeCheckServicecheckUserAgeWithDocomo:return_type -> AgeCheckDocomoResult
function_AgeCheckServiceretrieveRequestToken:return_type -> AgeCheckRequestResult
function_AgeCheckServiceretrieveRequestToken:param_carrier -> CarrierCode
function_BuddyManagementServicecommitSendMessagesToAll:return_type -> SendBuddyMessageResult
function_BuddyManagementServicecommitSendMessagesToMids:return_type -> SendBuddyMessageResult
function_BuddyManagementServicegetBuddyDetailByMid:return_type -> BuddyDetail
function_BuddyManagementServicegetBuddyProfile:return_type -> BuddyProfile
function_BuddyManagementServicegetContactTicket:return_type -> Ticket
function_BuddyManagementServicegetSendBuddyMessageResult:return_type -> SendBuddyMessageResult
function_BuddyManagementServicegetSetBuddyOnAirResult:return_type -> SetBuddyOnAirResult
function_BuddyManagementServicegetUpdateBuddyProfileResult:return_type -> UpdateBuddyProfileResult
function_BuddyManagementServicelinkAndSendBuddyContentMessageToAllAsync:param_msg -> Message
function_BuddyManagementServicelinkAndSendBuddyContentMessageToMids:return_type -> SendBuddyMessageResult
function_BuddyManagementServicelinkAndSendBuddyContentMessageToMids:param_msg -> Message
function_BuddyManagementServicesendBuddyContentMessageToAll:return_type -> SendBuddyMessageResult
function_BuddyManagementServicesendBuddyContentMessageToAll:param_msg -> Message
function_BuddyManagementServicesendBuddyContentMessageToAllAsync:param_msg -> Message
function_BuddyManagementServicesendBuddyContentMessageToMids:return_type -> SendBuddyMessageResult
function_BuddyManagementServicesendBuddyContentMessageToMids:param_msg -> Message
function_BuddyManagementServicesendBuddyContentMessageToMidsAsync:param_msg -> Message
function_BuddyManagementServicesendBuddyMessageToAll:return_type -> SendBuddyMessageResult
function_BuddyManagementServicesendBuddyMessageToAll:param_msg -> Message
function_BuddyManagementServicesendBuddyMessageToAllAsync:param_msg -> Message
function_BuddyManagementServicesendBuddyMessageToMids:return_type -> SendBuddyMessageResult
function_BuddyManagementServicesendBuddyMessageToMids:param_msg -> Message
function_BuddyManagementServicesendBuddyMessageToMidsAsync:param_msg -> Message
function_BuddyManagementServicesendIndividualEventToAllAsync:param_notificationStatus -> NotificationStatus
function_BuddyManagementServicesetBuddyOnAir:return_type -> SetBuddyOnAirResult
function_BuddyManagementServicestoreMessage:return_type -> SendBuddyMessageResult
function_BuddyManagementServicestoreMessage:param_messageRequest -> BuddyMessageRequest
function_BuddyManagementServiceupdateBuddyProfileAttributes:return_type -> UpdateBuddyProfileResult
function_BuddyManagementServiceupdateBuddyProfileImage:return_type -> UpdateBuddyProfileResult
function_BuddyManagementServiceuploadBuddyContent:param_contentType -> ContentType
function_BuddyServicefindBuddyContactsByQuery:return_type -> BuddySearchResult
function_BuddyServicefindBuddyContactsByQuery:param_requestSource -> BuddySearchRequestSource
function_BuddyServicegetBuddyContacts:return_type -> Contact
function_BuddyServicegetBuddyDetail:return_type -> BuddyDetail
function_BuddyServicegetBuddyOnAir:return_type -> BuddyOnAir
function_BuddyServicegetPopularBuddyBanner:return_type -> BuddyBanner
function_BuddyServicegetPopularBuddyBanner:param_applicationType -> ApplicationType
function_BuddyServicegetPopularBuddyLists:return_type -> BuddyList
function_BuddyServicegetPromotedBuddyContacts:return_type -> Contact
function_ChannelApplicationProvidedServiceaddOperationForChannel:param_opType -> OpType
function_ChannelApplicationProvidedServicefindContactByUseridWithoutAbuseBlockForChannel:return_type -> Contact
function_ChannelApplicationProvidedServicegetCompactContacts:return_type -> CompactContact
function_ChannelApplicationProvidedServicegetContactsForChannel:return_type -> Contact
function_ChannelApplicationProvidedServicegetGroupsForChannel:return_type -> Group
function_ChannelApplicationProvidedServicegetIdentityCredential:return_type -> IdentityCredential
function_ChannelApplicationProvidedServicegetMetaProfile:return_type -> MetaProfile
function_ChannelApplicationProvidedServicegetPrimaryClientForChannel:return_type -> SimpleChannelClient
function_ChannelApplicationProvidedServicegetProfileForChannel:return_type -> Profile
function_ChannelApplicationProvidedServicegetSimpleChannelContacts:return_type -> SimpleChannelContact
function_ChannelApplicationProvidedServicegetUserIdentities:return_type -> RegistrationType
function_ChannelApplicationProvidedServiceremoveNotificationStatus:param_notificationStatus -> NotificationStatus
function_ChannelApplicationProvidedServicesendMessageForChannel:return_type -> Message
function_ChannelApplicationProvidedServicesendMessageForChannel:param_message -> Message
function_ChannelApplicationProvidedServiceupdateProfileAttributeForChannel:param_profileAttribute -> ProfileAttribute
function_ChannelServiceissueOTP:return_type -> OTPResult
function_ChannelServiceapproveChannelAndIssueChannelToken:return_type -> ChannelToken
function_ChannelServicefetchNotificationItems:return_type -> NotificationFetchResult
function_ChannelServicegetApprovedChannels:return_type -> ApprovedChannelInfos
function_ChannelServicegetChannelInfo:return_type -> ChannelInfo
function_ChannelServicegetChannelNotificationSetting:return_type -> ChannelNotificationSetting
function_ChannelServicegetChannelNotificationSettings:return_type -> ChannelNotificationSetting
function_ChannelServicegetChannels:return_type -> ChannelInfos
function_ChannelServicegetDomains:return_type -> ChannelDomains
function_ChannelServicegetFriendChannelMatrices:return_type -> FriendChannelMatricesResponse
function_ChannelServiceupdateChannelSettings:param_channelSettings -> ChannelSettings
function_ChannelServicegetCommonDomains:return_type -> ChannelDomains
function_ChannelServiceissueChannelToken:return_type -> ChannelToken
function_ChannelServiceissueRequestTokenWithAuthScheme:return_type -> RequestTokenResponse
function_ChannelServicegetUpdatedChannelIds:param_channelIds -> ChannelIdWithLastUpdated
function_ChannelServicereserveCoinUse:param_request -> CoinUseReservation
function_ChannelServicesyncChannelData:return_type -> ChannelSyncDatas
function_ChannelServiceupdateChannelNotificationSetting:param_setting -> ChannelNotificationSetting
function_MessageServicefetchMessageOperations:return_type -> MessageOperations
function_MessageServicegetLastReadMessageIds:return_type -> LastReadMessageIds
function_MessageServicemultiGetLastReadMessageIds:return_type -> LastReadMessageIds
function_ShopServicebuyCoinProduct:param_paymentReservation -> PaymentReservation
function_ShopServicegetActivePurchases:return_type -> ProductList
function_ShopServicegetActivePurchaseVersions:return_type -> ProductSimpleList
function_ShopServicegetCoinProducts:return_type -> CoinProductItem
function_ShopServicegetCoinProducts:param_appStoreCode -> PaymentType
function_ShopServicegetCoinProductsByPgCode:return_type -> CoinProductItem
function_ShopServicegetCoinProductsByPgCode:param_appStoreCode -> PaymentType
function_ShopServicegetCoinProductsByPgCode:param_pgCode -> PaymentPgType
function_ShopServicegetCoinPurchaseHistory:return_type -> CoinHistoryResult
function_ShopServicegetCoinPurchaseHistory:param_request -> CoinHistoryCondition
function_ShopServicegetCoinUseAndRefundHistory:return_type -> CoinHistoryResult
function_ShopServicegetCoinUseAndRefundHistory:param_request -> CoinHistoryCondition
function_ShopServicegetDownloads:return_type -> ProductList
function_ShopServicegetEventPackages:return_type -> ProductList
function_ShopServicegetNewlyReleasedPackages:return_type -> ProductList
function_ShopServicegetPopularPackages:return_type -> ProductList
function_ShopServicegetPresentsReceived:return_type -> ProductList
function_ShopServicegetPresentsSent:return_type -> ProductList
function_ShopServicegetProduct:return_type -> Product
function_ShopServicegetProductList:return_type -> ProductList
function_ShopServicegetProductListWithCarrier:return_type -> ProductList
function_ShopServicegetProductWithCarrier:return_type -> Product
function_ShopServicegetPurchaseHistory:return_type -> ProductList
function_ShopServicegetTotalBalance:return_type -> Coin
function_ShopServicegetTotalBalance:param_appStoreCode -> PaymentType
function_ShopServicereserveCoinPurchase:return_type -> PaymentReservationResult
function_ShopServicereserveCoinPurchase:param_request -> CoinPurchaseReservation
function_ShopServicereservePayment:return_type -> PaymentReservationResult
function_ShopServicereservePayment:param_paymentReservation -> PaymentReservation
function_SnsAdaptorServicegetSnsFriends:return_type -> SnsFriends
function_SnsAdaptorServicegetSnsFriends:param_snsIdType -> SnsIdType
function_SnsAdaptorServicegetSnsMyProfile:return_type -> SnsProfile
function_SnsAdaptorServicegetSnsMyProfile:param_snsIdType -> SnsIdType
function_SnsAdaptorServicepostSnsInvitationMessage:param_snsIdType -> SnsIdType
function_TalkServicegetChatRoomAnnouncementsBulk:return_type -> ChatRoomAnnouncement
function_TalkServicegetChatRoomAnnouncements:return_type -> ChatRoomAnnouncement
function_TalkServicecreateChatRoomAnnouncement:return_type -> ChatRoomAnnouncement
function_TalkServicecreateChatRoomAnnouncement:param_type -> ChatRoomAnnouncementType
function_TalkServicecreateChatRoomAnnouncement:param_contents -> ChatRoomAnnouncementContents
function_TalkServicegetGroupWithoutMembers:return_type -> Group
function_TalkServicerespondResendMessage:param_resendMessage -> Message
function_TalkServicerespondResendMessage:param_errorCode -> ErrorCode
function_TalkServiceacquireEncryptedAccessToken:param_featureType -> FeatureType
function_TalkServiceaddSnsId:param_snsIdType -> SnsIdType
function_TalkServicechangeVerificationMethod:return_type -> VerificationSessionData
function_TalkServicechangeVerificationMethod:param_method -> VerificationMethod
function_TalkServicecommitUpdateProfile:param_attrs -> ProfileAttribute
function_TalkServicecreateGroup:return_type -> Group
function_TalkServicecreateRoom:return_type -> Room
function_TalkServicefetchAnnouncements:return_type -> Announcement
function_TalkServicefetchMessages:return_type -> Message
function_TalkServicefetchOperations:return_type -> Operation
function_TalkServicefetchOps:return_type -> Operation
function_TalkServicefindAndAddContactsByEmail:return_type -> Contact
function_TalkServicefindAndAddContactsByMid:return_type -> Contact
function_TalkServicefindAndAddContactsByMid:param_type -> ContactType
function_TalkServicefindGroupByTicketV2:return_type -> Group
function_TalkServicefindAndAddContactsByPhone:return_type -> Contact
function_TalkServicegetFriendRequests:return_type -> FriendRequest
function_TalkServicegetFriendRequests:param_direction -> FriendRequestDirection
function_TalkServiceremoveFriendRequest:param_direction -> FriendRequestDirection
function_TalkServicefindAndAddContactsByUserid:return_type -> Contact
function_TalkServicefindContactByUserid:return_type -> Contact
function_TalkServicefindContactByUserTicket:return_type -> Contact
function_TalkServicefindContactsByEmail:return_type -> Contact
function_TalkServicefindContactsByPhone:return_type -> Contact
function_TalkServicefindSnsIdUserStatus:return_type -> SnsIdUserStatus
function_TalkServicefindSnsIdUserStatus:param_snsIdType -> SnsIdType
function_TalkServicegenerateUserTicket:return_type -> Ticket
function_TalkServicegetAuthQrcode:return_type -> AuthQrcode
function_TalkServiceregisterWithPhoneNumber:return_type -> RegisterWithPhoneNumberResult
function_TalkServiceregisterWithPhoneNumberAndPassword:return_type -> RegisterWithPhoneNumberResult
function_TalkServicegetAnalyticsInfo:return_type -> AnalyticsInfo
function_TalkServicereportClientStatistics:param_category -> ReportCategory
function_TalkServiceverifyPhoneNumber:return_type -> PhoneVerificationResult
function_TalkServicegetBuddyLocation:return_type -> Geolocation
function_TalkServicegetCompactContactsModifiedSince:return_type -> CompactContact
function_TalkServicegetCompactGroup:return_type -> Group
function_TalkServicegetCompactRoom:return_type -> Room
function_TalkServicegetContact:return_type -> Contact
function_TalkServicegetContacts:return_type -> Contact
function_TalkServicegetContactWithFriendRequestStatus:return_type -> Contact
function_TalkServicegetGroup:return_type -> Group
function_TalkServicegetGroups:return_type -> Group
function_TalkServicegetSuggestRevisions:return_type -> SuggestDictionaryRevisions
function_TalkServicegetPreviousMessagesV2WithReadCount:return_type -> Message
function_TalkServicegetPreviousMessagesV2WithReadCount:param_endMessageId -> MessageBoxV2MessageId
function_TalkServicegetMessageBox:return_type -> TMessageBox
function_TalkServicegetMessageBoxCompactWrapUp:return_type -> TMessageBoxWrapUp
function_TalkServicegetMessageBoxCompactWrapUpList:return_type -> TMessageBoxWrapUpResponse
function_TalkServicegetMessageBoxList:return_type -> TMessageBox
function_TalkServicegetMessageBoxListByStatus:return_type -> TMessageBox
function_TalkServicegetMessageBoxWrapUp:return_type -> TMessageBoxWrapUp
function_TalkServicegetMessageBoxWrapUpList:return_type -> TMessageBoxWrapUpResponse
function_TalkServicegetMessagesBySequenceNumber:return_type -> Message
function_TalkServicegetNextMessages:return_type -> Message
function_TalkServicegetNotificationPolicy:return_type -> NotificationType
function_TalkServicegetNotificationPolicy:param_carrier -> CarrierCode
function_TalkServicegetPreviousMessages:return_type -> Message
function_TalkServicegetProfile:return_type -> Profile
function_TalkServicegetProximityMatchCandidateList:return_type -> ProximityMatchCandidateResult
function_TalkServicegetProximityMatchCandidates:return_type -> Contact
function_TalkServicegetRecentMessages:return_type -> Message
function_TalkServicegetRoom:return_type -> Room
function_TalkServicegetRSAKeyInfo:return_type -> RSAKey
function_TalkServicegetRSAKeyInfo:param_provider -> IdentityProvider
function_TalkServicegetSessions:return_type -> LoginSession
function_TalkServicegetSettings:return_type -> Settings
function_TalkServicegetGroupsV2:return_type -> Group
function_TalkServicegetSettingsAttributes:return_type -> Settings
function_TalkServicegetSystemConfiguration:return_type -> SystemConfiguration
function_TalkServicegetUserTicket:return_type -> Ticket
function_TalkServicegetWapInvitation:return_type -> WapInvitation
function_TalkServiceisIdentityIdentifierAvailable:param_provider -> IdentityProvider
function_TalkServicefindGroupByTicket:return_type -> Group
function_TalkServiceloginWithIdentityCredential:param_identityProvider -> IdentityProvider
function_TalkServiceloginWithIdentityCredentialForCertificate:return_type -> LoginResult
function_TalkServiceloginWithIdentityCredentialForCertificate:param_identityProvider -> IdentityProvider
function_TalkServiceloginWithVerifierForCerificate:return_type -> LoginResult
function_TalkServiceloginWithVerifierForCertificate:return_type -> LoginResult
function_TalkServicenotifyIndividualEvent:param_notificationStatus -> NotificationStatus
function_TalkServicenotifyUpdated:param_deviceInfo -> DeviceInfo
function_TalkServiceopenProximityMatch:param_location -> Location
function_TalkServiceregisterDeviceWithIdentityCredential:param_provider -> IdentityProvider
function_TalkServiceregisterDeviceWithoutPhoneNumber:param_deviceInfo -> DeviceInfo
function_TalkServiceregisterDeviceWithoutPhoneNumberWithIdentityCredential:param_deviceInfo -> DeviceInfo
function_TalkServiceregisterDeviceWithoutPhoneNumberWithIdentityCredential:param_provider -> IdentityProvider
function_TalkServiceregisterWapDevice:param_deviceInfo -> DeviceInfo
function_TalkServiceregisterWithExistingSnsIdAndIdentityCredential:param_identityCredential -> IdentityCredential
function_TalkServiceregisterWithExistingSnsIdAndIdentityCredential:param_deviceInfo -> DeviceInfo
function_TalkServiceregisterWithSnsId:return_type -> RegisterWithSnsIdResult
function_TalkServiceregisterWithSnsId:param_snsIdType -> SnsIdType
function_TalkServiceregisterWithSnsId:param_deviceInfo -> DeviceInfo
function_TalkServiceregisterWithSnsIdAndIdentityCredential:param_snsIdType -> SnsIdType
function_TalkServiceregisterWithSnsIdAndIdentityCredential:param_identityCredential -> IdentityCredential
function_TalkServiceregisterWithSnsIdAndIdentityCredential:param_deviceInfo -> DeviceInfo
function_TalkServicegetMessageReadRange:return_type -> TMessageReadRange
function_TalkServicemakeUserAddMyselfAsContact:return_type -> ContactTransition
function_TalkServiceremoveSnsId:param_snsIdType -> SnsIdType
function_TalkServicereport:param_category -> SyncCategory
function_TalkServicereportContacts:return_type -> ContactReportResult
function_TalkServicereportContacts:param_category -> SyncCategory
function_TalkServicereportContacts:param_contactReports -> ContactReport
function_TalkServicereportContacts:param_actionType -> SyncActionType
function_TalkServicereportGroups:param_groups -> Group
function_TalkServicereportProfile:param_profile -> Profile
function_TalkServicereportRooms:param_rooms -> Room
function_TalkServicefindAndAddContactByMetaTag:return_type -> Contact
function_TalkServicereportSettings:param_settings -> Settings
function_TalkServicereportSpam:param_spammerReasons -> SpammerReason
function_TalkServicereportSpammer:param_spammerReasons -> SpammerReason
function_TalkServicerequestAccountPasswordReset:param_provider -> IdentityProvider
function_TalkServicerequestEmailConfirmation:return_type -> EmailConfirmationSession
function_TalkServicerequestEmailConfirmation:param_emailConfirmation -> EmailConfirmation
function_TalkServicerequestIdentityUnbind:param_provider -> IdentityProvider
function_TalkServiceresendEmailConfirmation:return_type -> EmailConfirmationSession
function_TalkServicesendMessageAwaitCommit:return_type -> CommitMessageResult
function_TalkServicesendMessageAwaitCommit:param_message -> Message
function_TalkServiceremoveE2EEPublicKey:param_publicKey -> E2EEPublicKey
function_TalkServicenegotiateE2EEPublicKey:return_type -> E2EENegotiationResult
function_TalkServicegetE2EEPublicKey:return_type -> E2EEPublicKey
function_TalkServicerequestE2EEKeyExchange:param_publicKey -> E2EEPublicKey
function_TalkServicegetLastE2EEPublicKeys:return_type -> E2EEPublicKey
function_TalkServiceregisterE2EEPublicKey:return_type -> E2EEPublicKey
function_TalkServiceregisterE2EEPublicKey:param_publicKey -> E2EEPublicKey
function_TalkServicegetE2EEPublicKeys:return_type -> E2EEPublicKey
function_TalkServicegetE2EEPublicKeysEx:return_type -> E2EEPublicKey
function_TalkServicegetReadMessageOpsInBulk:return_type -> Operation
function_TalkServicesendEvent:return_type -> Message
function_TalkServicesendEvent:param_message -> Message
function_TalkServicesendMessage:return_type -> Message
function_TalkServicesendMessage:param_message -> Message
function_TalkServicefindContactByMetaTag:return_type -> Contact
function_TalkServicesendMessageToMyHome:return_type -> Message
function_TalkServicesendMessageToMyHome:param_message -> Message
function_TalkServicesetBuddyLocation:param_location -> Geolocation
function_TalkServicesetIdentityCredential:param_provider -> IdentityProvider
function_TalkServicesetNotificationsEnabled:param_type -> MIDType
function_TalkServicestartUpdateVerification:return_type -> VerificationSessionData
function_TalkServicestartUpdateVerification:param_carrier -> CarrierCode
function_TalkServicestartUpdateVerification:param_deviceInfo -> DeviceInfo
function_TalkServicestartVerification:return_type -> VerificationSessionData
function_TalkServicestartVerification:param_carrier -> CarrierCode
function_TalkServicestartVerification:param_deviceInfo -> DeviceInfo
function_TalkServicestartVerification:param_simInfo -> SIMInfo
function_TalkServiceupdateGroupPreferenceAttribute:param_updatedAttrs -> GroupPreferenceAttribute
function_TalkServicecreateRoomV2:return_type -> Room
function_TalkServicestoreUpdateProfileAttribute:param_profileAttribute -> ProfileAttribute
function_TalkServicesyncContactBySnsIds:return_type -> SnsFriendContactRegistration
function_TalkServicesyncContactBySnsIds:param_modifications -> SnsFriendModification
function_TalkServicesyncContacts:return_type -> ContactRegistration
function_TalkServicesyncContacts:param_localContacts -> ContactModification
function_TalkServicetrySendMessage:return_type -> Message
function_TalkServicetrySendMessage:param_message -> Message
function_TalkServicegetNextMessagesV2:return_type -> Message
function_TalkServicegetNextMessagesV2:param_startMessageId -> MessageBoxV2MessageId
function_TalkServicegetMessageBoxCompactWrapUpV2:return_type -> TMessageBoxWrapUp
function_TalkServicegetRecentMessagesV2:return_type -> Message
function_TalkServicetryFriendRequest:param_method -> FriendRequestMethod
function_TalkServiceupdateContactSetting:param_flag -> ContactSetting
function_TalkServiceupdateCustomModeSettings:param_customMode -> CustomMode
function_TalkServiceupdateDeviceInfo:param_deviceInfo -> DeviceInfo
function_TalkServiceupdateGroup:param_group -> Group
function_TalkServiceupdateNotificationToken:param_type -> NotificationType
function_TalkServiceupdateNotificationTokenWithBytes:param_type -> NotificationType
function_TalkServiceupdateProfile:param_profile -> Profile
function_TalkServiceupdateProfileAttribute:param_attr -> ProfileAttribute
function_TalkServiceupdateSettings:param_settings -> Settings
function_TalkServiceupdateSettings2:param_settings -> Settings
function_TalkServiceupdateSettingsAttribute:param_attr -> SettingsAttribute
function_TalkServiceupdateSettingsAttributes:param_settings -> Settings
function_TalkServiceverifyIdentityCredential:param_identityProvider -> IdentityProvider
function_TalkServiceverifyIdentityCredentialWithResult:return_type -> UserAuthStatus
function_TalkServiceverifyIdentityCredentialWithResult:param_identityCredential -> IdentityCredential
function_TalkServiceverifyPhone:return_type -> VerificationResult
function_UniversalNotificationServicenotify:param_event -> GlobalEvent
function_CallServicegetUserStatus:return_type -> UserStatus
function_CallServiceupdateProfileAttributeForChannel:param_profileAttribute -> ProfileAttribute
function_CallServiceupdateExtendedProfileAttribute:param_attr -> ExtendedProfileAttribute
function_CallServiceupdateExtendedProfileAttribute:param_extendedProfile -> ExtendedProfile
function_CallServicegetAllSimpleChannelContacts:return_type -> SimpleChannelContact
function_CallServicegetUserIdentities:return_type -> RegistrationType
function_CallServicemarkPaidCallAd:return_type -> PaidCallDialing
function_CallServicegetPhoneInfoFromPhoneNumber:return_type -> PhoneInfoForChannel
function_CallServiceredeemPaidCallVoucher:return_type -> PaidCallRedeemResult
function_CallServicegetContactsForChannel:return_type -> Contact
function_CallServicegetCallCreditProducts:return_type -> CoinProductItem
function_CallServicegetCallCreditProducts:param_appStoreCode -> PaymentType
function_CallServicegetCallCreditProducts:param_pgCode -> PaymentPgType
function_CallServicegetCompactContacts:return_type -> CompactContact
function_CallServicenotifyNotiCenterEvent:param_event -> NotiCenterEventData
function_CallServicelookupGroupMembers:return_type -> SimpleChannelContact
function_CallServicegetRoomInformation:return_type -> Room
function_CallServicegetGroupCall:return_type -> GroupCall
function_CallServicegetPrimaryClientForChannel:return_type -> SimpleChannelClient
function_CallServicecreateRoomWithBuddy:return_type -> Room
function_CallServicegetPaidCallMetadata:return_type -> PaidCallMetadataResult
function_CallServicegetPaidCallHistory:return_type -> PaidCallHistoryResult
function_CallServiceinviteIntoGroupCall:param_mediaType -> GroupCallMediaType
function_CallServicegetMetaProfile:return_type -> MetaProfile
function_CallServicesendMessageForChannel:return_type -> Message
function_CallServicesendMessageForChannel:param_message -> Message
function_CallServicegetCallCreditPurchaseHistory:return_type -> CoinHistoryResult
function_CallServicegetCallCreditPurchaseHistory:param_request -> CoinHistoryCondition
function_CallServicesendSystemOAMessage:return_type -> Message
function_CallServicesendSystemOAMessage:param_message -> Message
function_CallServiceacquirePaidCallRoute:return_type -> PaidCallResponse
function_CallServiceacquirePaidCallRoute:param_paidCallType -> PaidCallType
function_CallServicegetGroupsForChannel:return_type -> Group
function_CallServicereserveCallCreditPurchase:return_type -> PaymentReservationResult
function_CallServicereserveCallCreditPurchase:param_request -> CoinPurchaseReservation
function_CallServiceacquirePaidCallCurrencyExchangeRate:return_type -> PaidCallCurrencyExchangeRate
function_CallServicegetPaidCallBalanceList:return_type -> PaidCallBalance
function_CallServicegetPersonalInfos:return_type -> PersonalInfo
function_CallServicegetPersonalInfos:param_requiredPersonalInfos -> PersonalInfo
function_CallServicegetPrimaryClientsForChannel:return_type -> SimpleChannelClient
function_CallServiceaddBuddyToContact:return_type -> ContactTransition
function_CallServicelookupPaidCall:return_type -> PaidCallResponse
function_CallServicegetExtendedProfile:return_type -> ExtendedProfile
function_CallServicegetReverseCompactContacts:return_type -> CompactContact
function_CallServicegetPaidCallAdStatus:return_type -> PaidCallAdResult
function_CallServicefindContactByUseridWithoutAbuseBlockForChannel:return_type -> Contact
function_CallServicesendMessageWithoutRelationship:return_type -> Message
function_CallServicesendMessageWithoutRelationship:param_message -> Message
function_CallServicelookupRoomMembers:return_type -> SimpleChannelContact
function_CallServicegetProfileForChannel:return_type -> Profile
function_CallServicegetUserTickets:return_type -> UserTicketResponse
function_CallServicesearchPaidCallUserRate:return_type -> PaidCallUserRate
function_CallServiceacquireGroupCallRoute:return_type -> GroupCallRoute
function_CallServiceacquireGroupCallRoute:param_mediaType -> GroupCallMediaType
function_CallServicegetIdentityCredential:return_type -> IdentityCredential
function_CallServiceaddOperationForChannel:param_opType -> OpType
function_CallServicegetSimpleChannelContacts:return_type -> SimpleChannelContact
function_AuthServicerespondE2EELoginRequest:param_publicKey -> E2EEPublicKey
function_AuthServicerespondE2EELoginRequest:param_errorCode -> ErrorCode
function_AuthServiceloginZ:return_type -> LoginResult
function_AuthServiceloginZ:param_loginRequest -> LoginRequest
function_AuthServiceissueTokenForAccountMigrationSettings:return_type -> SecurityCenterResult
function_AuthServiceissueTokenForAccountMigration:return_type -> SecurityCenterResult
function_AuthServiceverifyQrcodeWithE2EE:param_errorCode -> ErrorCode
function_AuthServiceverifyQrcodeWithE2EE:param_publicKey -> E2EEPublicKey
function_SquareServicegetSquareChatAnnouncements:return_type -> GetSquareChatAnnouncementsResponse
function_SquareServicegetSquareChatAnnouncements:param_request -> GetSquareChatAnnouncementsRequest
function_SquareServicedeleteSquareChatAnnouncement:return_type -> DeleteSquareChatAnnouncementResponse
function_SquareServicedeleteSquareChatAnnouncement:param_request -> DeleteSquareChatAnnouncementRequest
function_SquareServicecreateSquareChatAnnouncement:return_type -> CreateSquareChatAnnouncementResponse
function_SquareServicecreateSquareChatAnnouncement:param_request -> CreateSquareChatAnnouncementRequest
function_SquareServicegetNoteStatus:return_type -> GetNoteStatusResponse
function_SquareServicegetNoteStatus:param_request -> GetNoteStatusRequest
function_SquareServicegetSquareStatus:return_type -> GetSquareStatusResponse
function_SquareServicegetSquareStatus:param_request -> GetSquareStatusRequest
function_SquareServicereportSquareMember:return_type -> ReportSquareMemberResponse
function_SquareServicereportSquareMember:param_request -> ReportSquareMemberRequest
function_SquareServicereportSquareMessage:return_type -> ReportSquareMessageResponse
function_SquareServicereportSquareMessage:param_request -> ReportSquareMessageRequest
function_SquareServicereportSquareChat:return_type -> ReportSquareChatResponse
function_SquareServicereportSquareChat:param_request -> ReportSquareChatRequest
function_SquareServicereportSquare:return_type -> ReportSquareResponse
function_SquareServicereportSquare:param_request -> ReportSquareRequest
function_SquareServiceupdateSquareMemberRelation:return_type -> UpdateSquareMemberRelationResponse
function_SquareServiceupdateSquareMemberRelation:param_request -> UpdateSquareMemberRelationRequest
function_SquareServiceupdateSquareAuthority:return_type -> UpdateSquareAuthorityResponse
function_SquareServiceupdateSquareAuthority:param_request -> UpdateSquareAuthorityRequest
function_SquareServiceupdateSquareChatMember:return_type -> UpdateSquareChatMemberResponse
function_SquareServiceupdateSquareChatMember:param_request -> UpdateSquareChatMemberRequest
function_SquareServiceupdateSquareChat:return_type -> UpdateSquareChatResponse
function_SquareServiceupdateSquareChat:param_request -> UpdateSquareChatRequest
function_SquareServicerefreshSubscriptions:return_type -> RefreshSubscriptionsResponse
function_SquareServicerefreshSubscriptions:param_request -> RefreshSubscriptionsRequest
function_SquareServiceremoveSubscriptions:return_type -> RemoveSubscriptionsResponse
function_SquareServiceremoveSubscriptions:param_request -> RemoveSubscriptionsRequest
function_SquareServicerejectSquareMembers:return_type -> RejectSquareMembersResponse
function_SquareServicerejectSquareMembers:param_request -> RejectSquareMembersRequest
function_SquareServiceupdateSquareMembers:return_type -> UpdateSquareMembersResponse
function_SquareServiceupdateSquareMembers:param_request -> UpdateSquareMembersRequest
function_SquareServiceupdateSquareMember:return_type -> UpdateSquareMemberResponse
function_SquareServiceupdateSquareMember:param_request -> UpdateSquareMemberRequest
function_SquareServiceupdateSquareFeatureSet:return_type -> UpdateSquareFeatureSetResponse
function_SquareServiceupdateSquareFeatureSet:param_request -> UpdateSquareFeatureSetRequest
function_SquareServicegetSquareFeatureSet:return_type -> GetSquareFeatureSetResponse
function_SquareServicegetSquareFeatureSet:param_request -> GetSquareFeatureSetRequest
function_SquareServicesearchSquares:return_type -> SearchSquaresResponse
function_SquareServicesearchSquares:param_request -> SearchSquaresRequest
function_SquareServiceupdateSquare:return_type -> UpdateSquareResponse
function_SquareServiceupdateSquare:param_request -> UpdateSquareRequest
function_SquareServicegetCategories:return_type -> GetSquareCategoriesResponse
function_SquareServicegetCategories:param_request -> GetSquareCategoriesRequest
function_SquareServicesearchSquareMembers:return_type -> SearchSquareMembersResponse
function_SquareServicesearchSquareMembers:param_request -> SearchSquareMembersRequest
function_SquareServicefetchSquareChatEvents:return_type -> FetchSquareChatEventsResponse
function_SquareServicefetchSquareChatEvents:param_request -> FetchSquareChatEventsRequest
function_SquareServicefetchMyEvents:return_type -> FetchMyEventsResponse
function_SquareServicefetchMyEvents:param_request -> FetchMyEventsRequest
function_SquareServicemarkAsRead:return_type -> MarkAsReadResponse
function_SquareServicemarkAsRead:param_request -> MarkAsReadRequest
function_SquareServicegetSquareAuthority:return_type -> GetSquareAuthorityResponse
function_SquareServicegetSquareAuthority:param_request -> GetSquareAuthorityRequest
function_SquareServicesendMessage:return_type -> SendMessageResponse
function_SquareServicesendMessage:param_request -> SendMessageRequest
function_SquareServiceleaveSquare:return_type -> LeaveSquareResponse
function_SquareServiceleaveSquare:param_request -> LeaveSquareRequest
function_SquareServiceleaveSquareChat:return_type -> LeaveSquareChatResponse
function_SquareServiceleaveSquareChat:param_request -> LeaveSquareChatRequest
function_SquareServicejoinSquareChat:return_type -> JoinSquareChatResponse
function_SquareServicejoinSquareChat:param_request -> JoinSquareChatRequest
function_SquareServicejoinSquare:return_type -> JoinSquareResponse
function_SquareServicejoinSquare:param_request -> JoinSquareRequest
function_SquareServiceinviteToSquare:return_type -> InviteToSquareResponse
function_SquareServiceinviteToSquare:param_request -> InviteToSquareRequest
function_SquareServiceinviteToSquareChat:return_type -> InviteToSquareChatResponse
function_SquareServiceinviteToSquareChat:param_request -> InviteToSquareChatRequest
function_SquareServicegetSquareMember:return_type -> GetSquareMemberResponse
function_SquareServicegetSquareMember:param_request -> GetSquareMemberRequest
function_SquareServicegetSquareMembers:return_type -> GetSquareMembersResponse
function_SquareServicegetSquareMembers:param_request -> GetSquareMembersRequest
function_SquareServicegetSquareMemberRelation:return_type -> GetSquareMemberRelationResponse
function_SquareServicegetSquareMemberRelation:param_request -> GetSquareMemberRelationRequest
function_SquareServicegetSquareMemberRelations:return_type -> GetSquareMemberRelationsResponse
function_SquareServicegetSquareMemberRelations:param_request -> GetSquareMemberRelationsRequest
function_SquareServicegetSquareChatMembers:return_type -> GetSquareChatMembersResponse
function_SquareServicegetSquareChatMembers:param_request -> GetSquareChatMembersRequest
function_SquareServicegetSquareChatStatus:return_type -> GetSquareChatStatusResponse
function_SquareServicegetSquareChatStatus:param_request -> GetSquareChatStatusRequest
function_SquareServicegetSquareChat:return_type -> GetSquareChatResponse
function_SquareServicegetSquareChat:param_request -> GetSquareChatRequest
function_SquareServicegetSquare:return_type -> GetSquareResponse
function_SquareServicegetSquare:param_request -> GetSquareRequest
function_SquareServicegetJoinedSquares:return_type -> GetJoinedSquaresResponse
function_SquareServicegetJoinedSquares:param_request -> GetJoinedSquaresRequest
function_SquareServicegetJoinedSquareChats:return_type -> GetJoinedSquareChatsResponse
function_SquareServicegetJoinedSquareChats:param_request -> GetJoinedSquareChatsRequest
function_SquareServiceapproveSquareMembers:return_type -> ApproveSquareMembersResponse
function_SquareServiceapproveSquareMembers:param_request -> ApproveSquareMembersRequest
function_SquareServicecreateSquareChat:return_type -> CreateSquareChatResponse
function_SquareServicecreateSquareChat:param_request -> CreateSquareChatRequest
function_SquareServicecreateSquare:return_type -> CreateSquareResponse
function_SquareServicecreateSquare:param_request -> CreateSquareRequest
function_SquareServicedeleteSquareChat:return_type -> DeleteSquareChatResponse
function_SquareServicedeleteSquareChat:param_request -> DeleteSquareChatRequest
function_SquareServicedeleteSquare:return_type -> DeleteSquareResponse
function_SquareServicedeleteSquare:param_request -> DeleteSquareRequest
function_SquareServicedestroyMessage:return_type -> DestroyMessageResponse
function_SquareServicedestroyMessage:param_request -> DestroyMessageRequest
function_SquareServicegetJoinableSquareChats:return_type -> GetJoinableSquareChatsResponse
function_SquareServicegetJoinableSquareChats:param_request -> GetJoinableSquareChatsRequest
function_SquareServicegetInvitationTicketUrl:return_type -> GetInvitationTicketUrlResponse
function_SquareServicegetInvitationTicketUrl:param_request -> GetInvitationTicketUrlRequest
function_SquareServicefindSquareByInvitationTicket:return_type -> FindSquareByInvitationTicketResponse
function_SquareServicefindSquareByInvitationTicket:param_request -> FindSquareByInvitationTicketRequest
}
