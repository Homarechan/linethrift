/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
library line.src.square_chat_announcement_contents;

import 'dart:typed_data' show Uint8List;
import 'package:thrift/thrift.dart';
import 'package:line/line.dart';

class SquareChatAnnouncementContents implements TBase {
  static final TStruct _STRUCT_DESC = new TStruct("SquareChatAnnouncementContents");
  static final TField _TEXT_MESSAGE_ANNOUNCEMENT_CONTENTS_FIELD_DESC = new TField("textMessageAnnouncementContents", TType.STRUCT, 1);

  TextMessageAnnouncementContents _textMessageAnnouncementContents;
  static const int TEXTMESSAGEANNOUNCEMENTCONTENTS = 1;


  SquareChatAnnouncementContents() {
  }

  // textMessageAnnouncementContents
  TextMessageAnnouncementContents get textMessageAnnouncementContents => this._textMessageAnnouncementContents;

  set textMessageAnnouncementContents(TextMessageAnnouncementContents textMessageAnnouncementContents) {
    this._textMessageAnnouncementContents = textMessageAnnouncementContents;
  }

  bool isSetTextMessageAnnouncementContents() => this.textMessageAnnouncementContents != null;

  unsetTextMessageAnnouncementContents() {
    this.textMessageAnnouncementContents = null;
  }

  getFieldValue(int fieldID) {
    switch (fieldID) {
      case TEXTMESSAGEANNOUNCEMENTCONTENTS:
        return this.textMessageAnnouncementContents;
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
      case TEXTMESSAGEANNOUNCEMENTCONTENTS:
        if (value == null) {
          unsetTextMessageAnnouncementContents();
        } else {
          this.textMessageAnnouncementContents = value;
        }
        break;

      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  bool isSet(int fieldID) {
    switch (fieldID) {
      case TEXTMESSAGEANNOUNCEMENTCONTENTS:
        return isSetTextMessageAnnouncementContents();
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  read(TProtocol iprot) {
    TField field;
    iprot.readStructBegin();
    while (true) {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case TEXTMESSAGEANNOUNCEMENTCONTENTS:
          if (field.type == TType.STRUCT) {
            this.textMessageAnnouncementContents = new TextMessageAnnouncementContents();
            this.textMessageAnnouncementContents.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  write(TProtocol oprot) {
    validate();

    oprot.writeStructBegin(_STRUCT_DESC);
    if (this.textMessageAnnouncementContents != null) {
      oprot.writeFieldBegin(_TEXT_MESSAGE_ANNOUNCEMENT_CONTENTS_FIELD_DESC);
      this.textMessageAnnouncementContents.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  String toString() {
    StringBuffer ret = new StringBuffer("SquareChatAnnouncementContents(");

    ret.write("textMessageAnnouncementContents:");
    if (this.textMessageAnnouncementContents == null) {
      ret.write("null");
    } else {
      ret.write(this.textMessageAnnouncementContents);
    }

    ret.write(")");

    return ret.toString();
  }

  validate() {
    // check for required fields
    // check that fields of type enum have valid values
  }

}

