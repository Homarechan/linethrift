/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
library line.src.promotion_info;

import 'dart:typed_data' show Uint8List;
import 'package:thrift/thrift.dart';
import 'package:line/line.dart';

class PromotionInfo implements TBase {
  static final TStruct _STRUCT_DESC = new TStruct("PromotionInfo");
  static final TField _PROMOTION_TYPE_FIELD_DESC = new TField("promotionType", TType.I32, 1);
  static final TField _BUDDY_INFO_FIELD_DESC = new TField("buddyInfo", TType.STRUCT, 51);
  static final TField _PROMOTION_DETAIL_FIELD_DESC = new TField("promotionDetail", TType.STRUCT, 2);

  int _promotionType;
  static const int PROMOTIONTYPE = 1;
  PromotionBuddyInfo _buddyInfo;
  static const int BUDDYINFO = 51;
  PromotionDetail _promotionDetail;
  static const int PROMOTIONDETAIL = 2;

  bool __isset_promotionType = false;

  PromotionInfo() {
  }

  // promotionType
  int get promotionType => this._promotionType;

  set promotionType(int promotionType) {
    this._promotionType = promotionType;
    this.__isset_promotionType = true;
  }

  bool isSetPromotionType() => this.__isset_promotionType;

  unsetPromotionType() {
    this.__isset_promotionType = false;
  }

  // buddyInfo
  PromotionBuddyInfo get buddyInfo => this._buddyInfo;

  set buddyInfo(PromotionBuddyInfo buddyInfo) {
    this._buddyInfo = buddyInfo;
  }

  bool isSetBuddyInfo() => this.buddyInfo != null;

  unsetBuddyInfo() {
    this.buddyInfo = null;
  }

  // promotionDetail
  PromotionDetail get promotionDetail => this._promotionDetail;

  set promotionDetail(PromotionDetail promotionDetail) {
    this._promotionDetail = promotionDetail;
  }

  bool isSetPromotionDetail() => this.promotionDetail != null;

  unsetPromotionDetail() {
    this.promotionDetail = null;
  }

  getFieldValue(int fieldID) {
    switch (fieldID) {
      case PROMOTIONTYPE:
        return this.promotionType;
      case BUDDYINFO:
        return this.buddyInfo;
      case PROMOTIONDETAIL:
        return this.promotionDetail;
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
      case PROMOTIONTYPE:
        if (value == null) {
          unsetPromotionType();
        } else {
          this.promotionType = value;
        }
        break;

      case BUDDYINFO:
        if (value == null) {
          unsetBuddyInfo();
        } else {
          this.buddyInfo = value;
        }
        break;

      case PROMOTIONDETAIL:
        if (value == null) {
          unsetPromotionDetail();
        } else {
          this.promotionDetail = value;
        }
        break;

      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  bool isSet(int fieldID) {
    switch (fieldID) {
      case PROMOTIONTYPE:
        return isSetPromotionType();
      case BUDDYINFO:
        return isSetBuddyInfo();
      case PROMOTIONDETAIL:
        return isSetPromotionDetail();
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  read(TProtocol iprot) {
    TField field;
    iprot.readStructBegin();
    while (true) {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case PROMOTIONTYPE:
          if (field.type == TType.I32) {
            this.promotionType = iprot.readI32();
            this.__isset_promotionType = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case BUDDYINFO:
          if (field.type == TType.STRUCT) {
            this.buddyInfo = new PromotionBuddyInfo();
            this.buddyInfo.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case PROMOTIONDETAIL:
          if (field.type == TType.STRUCT) {
            this.promotionDetail = new PromotionDetail();
            this.promotionDetail.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  write(TProtocol oprot) {
    validate();

    oprot.writeStructBegin(_STRUCT_DESC);
    oprot.writeFieldBegin(_PROMOTION_TYPE_FIELD_DESC);
    oprot.writeI32(this.promotionType);
    oprot.writeFieldEnd();
    if (this.promotionDetail != null) {
      oprot.writeFieldBegin(_PROMOTION_DETAIL_FIELD_DESC);
      this.promotionDetail.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.buddyInfo != null) {
      oprot.writeFieldBegin(_BUDDY_INFO_FIELD_DESC);
      this.buddyInfo.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  String toString() {
    StringBuffer ret = new StringBuffer("PromotionInfo(");

    ret.write("promotionType:");
    String promotionType_name = PromotionType.VALUES_TO_NAMES[this.promotionType];
    if (promotionType_name != null) {
      ret.write(promotionType_name);
      ret.write(" (");
    }
    ret.write(this.promotionType);
    if (promotionType_name != null) {
      ret.write(")");
    }

    ret.write(", ");
    ret.write("buddyInfo:");
    if (this.buddyInfo == null) {
      ret.write("null");
    } else {
      ret.write(this.buddyInfo);
    }

    ret.write(", ");
    ret.write("promotionDetail:");
    if (this.promotionDetail == null) {
      ret.write("null");
    } else {
      ret.write(this.promotionDetail);
    }

    ret.write(")");

    return ret.toString();
  }

  validate() {
    // check for required fields
    // check that fields of type enum have valid values
    if (isSetPromotionType() && !PromotionType.VALID_VALUES.contains(promotionType)) {
      throw new TProtocolError(TProtocolErrorType.UNKNOWN, "The field 'promotionType' has been assigned the invalid value $promotionType");
    }
  }

}

