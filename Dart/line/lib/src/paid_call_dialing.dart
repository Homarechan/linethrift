/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
library line.src.paid_call_dialing;

import 'dart:typed_data' show Uint8List;
import 'package:thrift/thrift.dart';
import 'package:line/line.dart';

class PaidCallDialing implements TBase {
  static final TStruct _STRUCT_DESC = new TStruct("PaidCallDialing");
  static final TField _TYPE_FIELD_DESC = new TField("type", TType.I32, 1);
  static final TField _DIALED_NUMBER_FIELD_DESC = new TField("dialedNumber", TType.STRING, 2);
  static final TField _SERVICE_DOMAIN_FIELD_DESC = new TField("serviceDomain", TType.STRING, 3);
  static final TField _PRODUCT_TYPE_FIELD_DESC = new TField("productType", TType.I32, 4);
  static final TField _PRODUCT_NAME_FIELD_DESC = new TField("productName", TType.STRING, 5);
  static final TField _MULTIPLE_PRODUCT_FIELD_DESC = new TField("multipleProduct", TType.BOOL, 6);
  static final TField _CALLER_ID_STATUS_FIELD_DESC = new TField("callerIdStatus", TType.I32, 7);
  static final TField _BALANCE_FIELD_DESC = new TField("balance", TType.I32, 10);
  static final TField _UNIT_FIELD_DESC = new TField("unit", TType.STRING, 11);
  static final TField _RATE_FIELD_DESC = new TField("rate", TType.I32, 12);
  static final TField _DISPLAY_CODE_FIELD_DESC = new TField("displayCode", TType.STRING, 13);
  static final TField _CALLED_NUMBER_FIELD_DESC = new TField("calledNumber", TType.STRING, 14);
  static final TField _CALLEE_NATIONAL_NUMBER_FIELD_DESC = new TField("calleeNationalNumber", TType.STRING, 15);
  static final TField _CALLEE_CALLING_CODE_FIELD_DESC = new TField("calleeCallingCode", TType.STRING, 16);
  static final TField _RATE_DIVISION_FIELD_DESC = new TField("rateDivision", TType.STRING, 17);
  static final TField _AD_MAX_MIN_FIELD_DESC = new TField("adMaxMin", TType.I32, 20);
  static final TField _AD_REMAINS_FIELD_DESC = new TField("adRemains", TType.I32, 21);
  static final TField _AD_SESSION_ID_FIELD_DESC = new TField("adSessionId", TType.STRING, 22);

  int _type;
  static const int TYPE = 1;
  String _dialedNumber;
  static const int DIALEDNUMBER = 2;
  String _serviceDomain;
  static const int SERVICEDOMAIN = 3;
  int _productType;
  static const int PRODUCTTYPE = 4;
  String _productName;
  static const int PRODUCTNAME = 5;
  bool _multipleProduct = false;
  static const int MULTIPLEPRODUCT = 6;
  int _callerIdStatus;
  static const int CALLERIDSTATUS = 7;
  int _balance = 0;
  static const int BALANCE = 10;
  String _unit;
  static const int UNIT = 11;
  int _rate = 0;
  static const int RATE = 12;
  String _displayCode;
  static const int DISPLAYCODE = 13;
  String _calledNumber;
  static const int CALLEDNUMBER = 14;
  String _calleeNationalNumber;
  static const int CALLEENATIONALNUMBER = 15;
  String _calleeCallingCode;
  static const int CALLEECALLINGCODE = 16;
  String _rateDivision;
  static const int RATEDIVISION = 17;
  int _adMaxMin = 0;
  static const int ADMAXMIN = 20;
  int _adRemains = 0;
  static const int ADREMAINS = 21;
  String _adSessionId;
  static const int ADSESSIONID = 22;

  bool __isset_type = false;
  bool __isset_productType = false;
  bool __isset_multipleProduct = false;
  bool __isset_callerIdStatus = false;
  bool __isset_balance = false;
  bool __isset_rate = false;
  bool __isset_adMaxMin = false;
  bool __isset_adRemains = false;

  PaidCallDialing() {
  }

  // type
  int get type => this._type;

  set type(int type) {
    this._type = type;
    this.__isset_type = true;
  }

  bool isSetType() => this.__isset_type;

  unsetType() {
    this.__isset_type = false;
  }

  // dialedNumber
  String get dialedNumber => this._dialedNumber;

  set dialedNumber(String dialedNumber) {
    this._dialedNumber = dialedNumber;
  }

  bool isSetDialedNumber() => this.dialedNumber != null;

  unsetDialedNumber() {
    this.dialedNumber = null;
  }

  // serviceDomain
  String get serviceDomain => this._serviceDomain;

  set serviceDomain(String serviceDomain) {
    this._serviceDomain = serviceDomain;
  }

  bool isSetServiceDomain() => this.serviceDomain != null;

  unsetServiceDomain() {
    this.serviceDomain = null;
  }

  // productType
  int get productType => this._productType;

  set productType(int productType) {
    this._productType = productType;
    this.__isset_productType = true;
  }

  bool isSetProductType() => this.__isset_productType;

  unsetProductType() {
    this.__isset_productType = false;
  }

  // productName
  String get productName => this._productName;

  set productName(String productName) {
    this._productName = productName;
  }

  bool isSetProductName() => this.productName != null;

  unsetProductName() {
    this.productName = null;
  }

  // multipleProduct
  bool get multipleProduct => this._multipleProduct;

  set multipleProduct(bool multipleProduct) {
    this._multipleProduct = multipleProduct;
    this.__isset_multipleProduct = true;
  }

  bool isSetMultipleProduct() => this.__isset_multipleProduct;

  unsetMultipleProduct() {
    this.__isset_multipleProduct = false;
  }

  // callerIdStatus
  int get callerIdStatus => this._callerIdStatus;

  set callerIdStatus(int callerIdStatus) {
    this._callerIdStatus = callerIdStatus;
    this.__isset_callerIdStatus = true;
  }

  bool isSetCallerIdStatus() => this.__isset_callerIdStatus;

  unsetCallerIdStatus() {
    this.__isset_callerIdStatus = false;
  }

  // balance
  int get balance => this._balance;

  set balance(int balance) {
    this._balance = balance;
    this.__isset_balance = true;
  }

  bool isSetBalance() => this.__isset_balance;

  unsetBalance() {
    this.__isset_balance = false;
  }

  // unit
  String get unit => this._unit;

  set unit(String unit) {
    this._unit = unit;
  }

  bool isSetUnit() => this.unit != null;

  unsetUnit() {
    this.unit = null;
  }

  // rate
  int get rate => this._rate;

  set rate(int rate) {
    this._rate = rate;
    this.__isset_rate = true;
  }

  bool isSetRate() => this.__isset_rate;

  unsetRate() {
    this.__isset_rate = false;
  }

  // displayCode
  String get displayCode => this._displayCode;

  set displayCode(String displayCode) {
    this._displayCode = displayCode;
  }

  bool isSetDisplayCode() => this.displayCode != null;

  unsetDisplayCode() {
    this.displayCode = null;
  }

  // calledNumber
  String get calledNumber => this._calledNumber;

  set calledNumber(String calledNumber) {
    this._calledNumber = calledNumber;
  }

  bool isSetCalledNumber() => this.calledNumber != null;

  unsetCalledNumber() {
    this.calledNumber = null;
  }

  // calleeNationalNumber
  String get calleeNationalNumber => this._calleeNationalNumber;

  set calleeNationalNumber(String calleeNationalNumber) {
    this._calleeNationalNumber = calleeNationalNumber;
  }

  bool isSetCalleeNationalNumber() => this.calleeNationalNumber != null;

  unsetCalleeNationalNumber() {
    this.calleeNationalNumber = null;
  }

  // calleeCallingCode
  String get calleeCallingCode => this._calleeCallingCode;

  set calleeCallingCode(String calleeCallingCode) {
    this._calleeCallingCode = calleeCallingCode;
  }

  bool isSetCalleeCallingCode() => this.calleeCallingCode != null;

  unsetCalleeCallingCode() {
    this.calleeCallingCode = null;
  }

  // rateDivision
  String get rateDivision => this._rateDivision;

  set rateDivision(String rateDivision) {
    this._rateDivision = rateDivision;
  }

  bool isSetRateDivision() => this.rateDivision != null;

  unsetRateDivision() {
    this.rateDivision = null;
  }

  // adMaxMin
  int get adMaxMin => this._adMaxMin;

  set adMaxMin(int adMaxMin) {
    this._adMaxMin = adMaxMin;
    this.__isset_adMaxMin = true;
  }

  bool isSetAdMaxMin() => this.__isset_adMaxMin;

  unsetAdMaxMin() {
    this.__isset_adMaxMin = false;
  }

  // adRemains
  int get adRemains => this._adRemains;

  set adRemains(int adRemains) {
    this._adRemains = adRemains;
    this.__isset_adRemains = true;
  }

  bool isSetAdRemains() => this.__isset_adRemains;

  unsetAdRemains() {
    this.__isset_adRemains = false;
  }

  // adSessionId
  String get adSessionId => this._adSessionId;

  set adSessionId(String adSessionId) {
    this._adSessionId = adSessionId;
  }

  bool isSetAdSessionId() => this.adSessionId != null;

  unsetAdSessionId() {
    this.adSessionId = null;
  }

  getFieldValue(int fieldID) {
    switch (fieldID) {
      case TYPE:
        return this.type;
      case DIALEDNUMBER:
        return this.dialedNumber;
      case SERVICEDOMAIN:
        return this.serviceDomain;
      case PRODUCTTYPE:
        return this.productType;
      case PRODUCTNAME:
        return this.productName;
      case MULTIPLEPRODUCT:
        return this.multipleProduct;
      case CALLERIDSTATUS:
        return this.callerIdStatus;
      case BALANCE:
        return this.balance;
      case UNIT:
        return this.unit;
      case RATE:
        return this.rate;
      case DISPLAYCODE:
        return this.displayCode;
      case CALLEDNUMBER:
        return this.calledNumber;
      case CALLEENATIONALNUMBER:
        return this.calleeNationalNumber;
      case CALLEECALLINGCODE:
        return this.calleeCallingCode;
      case RATEDIVISION:
        return this.rateDivision;
      case ADMAXMIN:
        return this.adMaxMin;
      case ADREMAINS:
        return this.adRemains;
      case ADSESSIONID:
        return this.adSessionId;
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
      case TYPE:
        if (value == null) {
          unsetType();
        } else {
          this.type = value;
        }
        break;

      case DIALEDNUMBER:
        if (value == null) {
          unsetDialedNumber();
        } else {
          this.dialedNumber = value;
        }
        break;

      case SERVICEDOMAIN:
        if (value == null) {
          unsetServiceDomain();
        } else {
          this.serviceDomain = value;
        }
        break;

      case PRODUCTTYPE:
        if (value == null) {
          unsetProductType();
        } else {
          this.productType = value;
        }
        break;

      case PRODUCTNAME:
        if (value == null) {
          unsetProductName();
        } else {
          this.productName = value;
        }
        break;

      case MULTIPLEPRODUCT:
        if (value == null) {
          unsetMultipleProduct();
        } else {
          this.multipleProduct = value;
        }
        break;

      case CALLERIDSTATUS:
        if (value == null) {
          unsetCallerIdStatus();
        } else {
          this.callerIdStatus = value;
        }
        break;

      case BALANCE:
        if (value == null) {
          unsetBalance();
        } else {
          this.balance = value;
        }
        break;

      case UNIT:
        if (value == null) {
          unsetUnit();
        } else {
          this.unit = value;
        }
        break;

      case RATE:
        if (value == null) {
          unsetRate();
        } else {
          this.rate = value;
        }
        break;

      case DISPLAYCODE:
        if (value == null) {
          unsetDisplayCode();
        } else {
          this.displayCode = value;
        }
        break;

      case CALLEDNUMBER:
        if (value == null) {
          unsetCalledNumber();
        } else {
          this.calledNumber = value;
        }
        break;

      case CALLEENATIONALNUMBER:
        if (value == null) {
          unsetCalleeNationalNumber();
        } else {
          this.calleeNationalNumber = value;
        }
        break;

      case CALLEECALLINGCODE:
        if (value == null) {
          unsetCalleeCallingCode();
        } else {
          this.calleeCallingCode = value;
        }
        break;

      case RATEDIVISION:
        if (value == null) {
          unsetRateDivision();
        } else {
          this.rateDivision = value;
        }
        break;

      case ADMAXMIN:
        if (value == null) {
          unsetAdMaxMin();
        } else {
          this.adMaxMin = value;
        }
        break;

      case ADREMAINS:
        if (value == null) {
          unsetAdRemains();
        } else {
          this.adRemains = value;
        }
        break;

      case ADSESSIONID:
        if (value == null) {
          unsetAdSessionId();
        } else {
          this.adSessionId = value;
        }
        break;

      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  bool isSet(int fieldID) {
    switch (fieldID) {
      case TYPE:
        return isSetType();
      case DIALEDNUMBER:
        return isSetDialedNumber();
      case SERVICEDOMAIN:
        return isSetServiceDomain();
      case PRODUCTTYPE:
        return isSetProductType();
      case PRODUCTNAME:
        return isSetProductName();
      case MULTIPLEPRODUCT:
        return isSetMultipleProduct();
      case CALLERIDSTATUS:
        return isSetCallerIdStatus();
      case BALANCE:
        return isSetBalance();
      case UNIT:
        return isSetUnit();
      case RATE:
        return isSetRate();
      case DISPLAYCODE:
        return isSetDisplayCode();
      case CALLEDNUMBER:
        return isSetCalledNumber();
      case CALLEENATIONALNUMBER:
        return isSetCalleeNationalNumber();
      case CALLEECALLINGCODE:
        return isSetCalleeCallingCode();
      case RATEDIVISION:
        return isSetRateDivision();
      case ADMAXMIN:
        return isSetAdMaxMin();
      case ADREMAINS:
        return isSetAdRemains();
      case ADSESSIONID:
        return isSetAdSessionId();
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  read(TProtocol iprot) {
    TField field;
    iprot.readStructBegin();
    while (true) {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case TYPE:
          if (field.type == TType.I32) {
            this.type = iprot.readI32();
            this.__isset_type = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DIALEDNUMBER:
          if (field.type == TType.STRING) {
            this.dialedNumber = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case SERVICEDOMAIN:
          if (field.type == TType.STRING) {
            this.serviceDomain = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case PRODUCTTYPE:
          if (field.type == TType.I32) {
            this.productType = iprot.readI32();
            this.__isset_productType = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case PRODUCTNAME:
          if (field.type == TType.STRING) {
            this.productName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case MULTIPLEPRODUCT:
          if (field.type == TType.BOOL) {
            this.multipleProduct = iprot.readBool();
            this.__isset_multipleProduct = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CALLERIDSTATUS:
          if (field.type == TType.I32) {
            this.callerIdStatus = iprot.readI32();
            this.__isset_callerIdStatus = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case BALANCE:
          if (field.type == TType.I32) {
            this.balance = iprot.readI32();
            this.__isset_balance = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case UNIT:
          if (field.type == TType.STRING) {
            this.unit = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case RATE:
          if (field.type == TType.I32) {
            this.rate = iprot.readI32();
            this.__isset_rate = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DISPLAYCODE:
          if (field.type == TType.STRING) {
            this.displayCode = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CALLEDNUMBER:
          if (field.type == TType.STRING) {
            this.calledNumber = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CALLEENATIONALNUMBER:
          if (field.type == TType.STRING) {
            this.calleeNationalNumber = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CALLEECALLINGCODE:
          if (field.type == TType.STRING) {
            this.calleeCallingCode = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case RATEDIVISION:
          if (field.type == TType.STRING) {
            this.rateDivision = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case ADMAXMIN:
          if (field.type == TType.I32) {
            this.adMaxMin = iprot.readI32();
            this.__isset_adMaxMin = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case ADREMAINS:
          if (field.type == TType.I32) {
            this.adRemains = iprot.readI32();
            this.__isset_adRemains = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case ADSESSIONID:
          if (field.type == TType.STRING) {
            this.adSessionId = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  write(TProtocol oprot) {
    validate();

    oprot.writeStructBegin(_STRUCT_DESC);
    oprot.writeFieldBegin(_TYPE_FIELD_DESC);
    oprot.writeI32(this.type);
    oprot.writeFieldEnd();
    if (this.dialedNumber != null) {
      oprot.writeFieldBegin(_DIALED_NUMBER_FIELD_DESC);
      oprot.writeString(this.dialedNumber);
      oprot.writeFieldEnd();
    }
    if (this.serviceDomain != null) {
      oprot.writeFieldBegin(_SERVICE_DOMAIN_FIELD_DESC);
      oprot.writeString(this.serviceDomain);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_PRODUCT_TYPE_FIELD_DESC);
    oprot.writeI32(this.productType);
    oprot.writeFieldEnd();
    if (this.productName != null) {
      oprot.writeFieldBegin(_PRODUCT_NAME_FIELD_DESC);
      oprot.writeString(this.productName);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_MULTIPLE_PRODUCT_FIELD_DESC);
    oprot.writeBool(this.multipleProduct);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_CALLER_ID_STATUS_FIELD_DESC);
    oprot.writeI32(this.callerIdStatus);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_BALANCE_FIELD_DESC);
    oprot.writeI32(this.balance);
    oprot.writeFieldEnd();
    if (this.unit != null) {
      oprot.writeFieldBegin(_UNIT_FIELD_DESC);
      oprot.writeString(this.unit);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_RATE_FIELD_DESC);
    oprot.writeI32(this.rate);
    oprot.writeFieldEnd();
    if (this.displayCode != null) {
      oprot.writeFieldBegin(_DISPLAY_CODE_FIELD_DESC);
      oprot.writeString(this.displayCode);
      oprot.writeFieldEnd();
    }
    if (this.calledNumber != null) {
      oprot.writeFieldBegin(_CALLED_NUMBER_FIELD_DESC);
      oprot.writeString(this.calledNumber);
      oprot.writeFieldEnd();
    }
    if (this.calleeNationalNumber != null) {
      oprot.writeFieldBegin(_CALLEE_NATIONAL_NUMBER_FIELD_DESC);
      oprot.writeString(this.calleeNationalNumber);
      oprot.writeFieldEnd();
    }
    if (this.calleeCallingCode != null) {
      oprot.writeFieldBegin(_CALLEE_CALLING_CODE_FIELD_DESC);
      oprot.writeString(this.calleeCallingCode);
      oprot.writeFieldEnd();
    }
    if (this.rateDivision != null) {
      oprot.writeFieldBegin(_RATE_DIVISION_FIELD_DESC);
      oprot.writeString(this.rateDivision);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_AD_MAX_MIN_FIELD_DESC);
    oprot.writeI32(this.adMaxMin);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_AD_REMAINS_FIELD_DESC);
    oprot.writeI32(this.adRemains);
    oprot.writeFieldEnd();
    if (this.adSessionId != null) {
      oprot.writeFieldBegin(_AD_SESSION_ID_FIELD_DESC);
      oprot.writeString(this.adSessionId);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  String toString() {
    StringBuffer ret = new StringBuffer("PaidCallDialing(");

    ret.write("type:");
    String type_name = PaidCallType.VALUES_TO_NAMES[this.type];
    if (type_name != null) {
      ret.write(type_name);
      ret.write(" (");
    }
    ret.write(this.type);
    if (type_name != null) {
      ret.write(")");
    }

    ret.write(", ");
    ret.write("dialedNumber:");
    if (this.dialedNumber == null) {
      ret.write("null");
    } else {
      ret.write(this.dialedNumber);
    }

    ret.write(", ");
    ret.write("serviceDomain:");
    if (this.serviceDomain == null) {
      ret.write("null");
    } else {
      ret.write(this.serviceDomain);
    }

    ret.write(", ");
    ret.write("productType:");
    String productType_name = PaidCallProductType.VALUES_TO_NAMES[this.productType];
    if (productType_name != null) {
      ret.write(productType_name);
      ret.write(" (");
    }
    ret.write(this.productType);
    if (productType_name != null) {
      ret.write(")");
    }

    ret.write(", ");
    ret.write("productName:");
    if (this.productName == null) {
      ret.write("null");
    } else {
      ret.write(this.productName);
    }

    ret.write(", ");
    ret.write("multipleProduct:");
    ret.write(this.multipleProduct);

    ret.write(", ");
    ret.write("callerIdStatus:");
    String callerIdStatus_name = PaidCallerIdStatus.VALUES_TO_NAMES[this.callerIdStatus];
    if (callerIdStatus_name != null) {
      ret.write(callerIdStatus_name);
      ret.write(" (");
    }
    ret.write(this.callerIdStatus);
    if (callerIdStatus_name != null) {
      ret.write(")");
    }

    ret.write(", ");
    ret.write("balance:");
    ret.write(this.balance);

    ret.write(", ");
    ret.write("unit:");
    if (this.unit == null) {
      ret.write("null");
    } else {
      ret.write(this.unit);
    }

    ret.write(", ");
    ret.write("rate:");
    ret.write(this.rate);

    ret.write(", ");
    ret.write("displayCode:");
    if (this.displayCode == null) {
      ret.write("null");
    } else {
      ret.write(this.displayCode);
    }

    ret.write(", ");
    ret.write("calledNumber:");
    if (this.calledNumber == null) {
      ret.write("null");
    } else {
      ret.write(this.calledNumber);
    }

    ret.write(", ");
    ret.write("calleeNationalNumber:");
    if (this.calleeNationalNumber == null) {
      ret.write("null");
    } else {
      ret.write(this.calleeNationalNumber);
    }

    ret.write(", ");
    ret.write("calleeCallingCode:");
    if (this.calleeCallingCode == null) {
      ret.write("null");
    } else {
      ret.write(this.calleeCallingCode);
    }

    ret.write(", ");
    ret.write("rateDivision:");
    if (this.rateDivision == null) {
      ret.write("null");
    } else {
      ret.write(this.rateDivision);
    }

    ret.write(", ");
    ret.write("adMaxMin:");
    ret.write(this.adMaxMin);

    ret.write(", ");
    ret.write("adRemains:");
    ret.write(this.adRemains);

    ret.write(", ");
    ret.write("adSessionId:");
    if (this.adSessionId == null) {
      ret.write("null");
    } else {
      ret.write(this.adSessionId);
    }

    ret.write(")");

    return ret.toString();
  }

  validate() {
    // check for required fields
    // check that fields of type enum have valid values
    if (isSetType() && !PaidCallType.VALID_VALUES.contains(type)) {
      throw new TProtocolError(TProtocolErrorType.UNKNOWN, "The field 'type' has been assigned the invalid value $type");
    }
    if (isSetProductType() && !PaidCallProductType.VALID_VALUES.contains(productType)) {
      throw new TProtocolError(TProtocolErrorType.UNKNOWN, "The field 'productType' has been assigned the invalid value $productType");
    }
    if (isSetCallerIdStatus() && !PaidCallerIdStatus.VALID_VALUES.contains(callerIdStatus)) {
      throw new TProtocolError(TProtocolErrorType.UNKNOWN, "The field 'callerIdStatus' has been assigned the invalid value $callerIdStatus");
    }
  }

}

