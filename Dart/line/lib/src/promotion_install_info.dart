/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
library line.src.promotion_install_info;

import 'dart:typed_data' show Uint8List;
import 'package:thrift/thrift.dart';
import 'package:line/line.dart';

class PromotionInstallInfo implements TBase {
  static final TStruct _STRUCT_DESC = new TStruct("PromotionInstallInfo");
  static final TField _DOWNLOAD_URL_FIELD_DESC = new TField("downloadUrl", TType.STRING, 1);
  static final TField _CUSTOM_URL_SCHEMA_FIELD_DESC = new TField("customUrlSchema", TType.STRING, 2);

  String _downloadUrl;
  static const int DOWNLOADURL = 1;
  String _customUrlSchema;
  static const int CUSTOMURLSCHEMA = 2;


  PromotionInstallInfo() {
  }

  // downloadUrl
  String get downloadUrl => this._downloadUrl;

  set downloadUrl(String downloadUrl) {
    this._downloadUrl = downloadUrl;
  }

  bool isSetDownloadUrl() => this.downloadUrl != null;

  unsetDownloadUrl() {
    this.downloadUrl = null;
  }

  // customUrlSchema
  String get customUrlSchema => this._customUrlSchema;

  set customUrlSchema(String customUrlSchema) {
    this._customUrlSchema = customUrlSchema;
  }

  bool isSetCustomUrlSchema() => this.customUrlSchema != null;

  unsetCustomUrlSchema() {
    this.customUrlSchema = null;
  }

  getFieldValue(int fieldID) {
    switch (fieldID) {
      case DOWNLOADURL:
        return this.downloadUrl;
      case CUSTOMURLSCHEMA:
        return this.customUrlSchema;
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
      case DOWNLOADURL:
        if (value == null) {
          unsetDownloadUrl();
        } else {
          this.downloadUrl = value;
        }
        break;

      case CUSTOMURLSCHEMA:
        if (value == null) {
          unsetCustomUrlSchema();
        } else {
          this.customUrlSchema = value;
        }
        break;

      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  bool isSet(int fieldID) {
    switch (fieldID) {
      case DOWNLOADURL:
        return isSetDownloadUrl();
      case CUSTOMURLSCHEMA:
        return isSetCustomUrlSchema();
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  read(TProtocol iprot) {
    TField field;
    iprot.readStructBegin();
    while (true) {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case DOWNLOADURL:
          if (field.type == TType.STRING) {
            this.downloadUrl = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CUSTOMURLSCHEMA:
          if (field.type == TType.STRING) {
            this.customUrlSchema = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  write(TProtocol oprot) {
    validate();

    oprot.writeStructBegin(_STRUCT_DESC);
    if (this.downloadUrl != null) {
      oprot.writeFieldBegin(_DOWNLOAD_URL_FIELD_DESC);
      oprot.writeString(this.downloadUrl);
      oprot.writeFieldEnd();
    }
    if (this.customUrlSchema != null) {
      oprot.writeFieldBegin(_CUSTOM_URL_SCHEMA_FIELD_DESC);
      oprot.writeString(this.customUrlSchema);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  String toString() {
    StringBuffer ret = new StringBuffer("PromotionInstallInfo(");

    ret.write("downloadUrl:");
    if (this.downloadUrl == null) {
      ret.write("null");
    } else {
      ret.write(this.downloadUrl);
    }

    ret.write(", ");
    ret.write("customUrlSchema:");
    if (this.customUrlSchema == null) {
      ret.write("null");
    } else {
      ret.write(this.customUrlSchema);
    }

    ret.write(")");

    return ret.toString();
  }

  validate() {
    // check for required fields
    // check that fields of type enum have valid values
  }

}

