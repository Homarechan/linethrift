/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
library line.src.extended_profile_birthday;

import 'dart:typed_data' show Uint8List;
import 'package:thrift/thrift.dart';
import 'package:line/line.dart';

class ExtendedProfileBirthday implements TBase {
  static final TStruct _STRUCT_DESC = new TStruct("ExtendedProfileBirthday");
  static final TField _YEAR_FIELD_DESC = new TField("year", TType.STRING, 1);
  static final TField _YEAR_PRIVACY_LEVEL_TYPE_FIELD_DESC = new TField("yearPrivacyLevelType", TType.I32, 2);
  static final TField _YEAR_ENABLED_FIELD_DESC = new TField("yearEnabled", TType.BOOL, 3);
  static final TField _DAY_FIELD_DESC = new TField("day", TType.STRING, 5);
  static final TField _DAY_PRIVACY_LEVEL_TYPE_FIELD_DESC = new TField("dayPrivacyLevelType", TType.I32, 6);
  static final TField _DAY_ENABLED_FIELD_DESC = new TField("dayEnabled", TType.BOOL, 7);

  String _year;
  static const int YEAR = 1;
  int _yearPrivacyLevelType;
  static const int YEARPRIVACYLEVELTYPE = 2;
  bool _yearEnabled = false;
  static const int YEARENABLED = 3;
  String _day;
  static const int DAY = 5;
  int _dayPrivacyLevelType;
  static const int DAYPRIVACYLEVELTYPE = 6;
  bool _dayEnabled = false;
  static const int DAYENABLED = 7;

  bool __isset_yearPrivacyLevelType = false;
  bool __isset_yearEnabled = false;
  bool __isset_dayPrivacyLevelType = false;
  bool __isset_dayEnabled = false;

  ExtendedProfileBirthday() {
  }

  // year
  String get year => this._year;

  set year(String year) {
    this._year = year;
  }

  bool isSetYear() => this.year != null;

  unsetYear() {
    this.year = null;
  }

  // yearPrivacyLevelType
  int get yearPrivacyLevelType => this._yearPrivacyLevelType;

  set yearPrivacyLevelType(int yearPrivacyLevelType) {
    this._yearPrivacyLevelType = yearPrivacyLevelType;
    this.__isset_yearPrivacyLevelType = true;
  }

  bool isSetYearPrivacyLevelType() => this.__isset_yearPrivacyLevelType;

  unsetYearPrivacyLevelType() {
    this.__isset_yearPrivacyLevelType = false;
  }

  // yearEnabled
  bool get yearEnabled => this._yearEnabled;

  set yearEnabled(bool yearEnabled) {
    this._yearEnabled = yearEnabled;
    this.__isset_yearEnabled = true;
  }

  bool isSetYearEnabled() => this.__isset_yearEnabled;

  unsetYearEnabled() {
    this.__isset_yearEnabled = false;
  }

  // day
  String get day => this._day;

  set day(String day) {
    this._day = day;
  }

  bool isSetDay() => this.day != null;

  unsetDay() {
    this.day = null;
  }

  // dayPrivacyLevelType
  int get dayPrivacyLevelType => this._dayPrivacyLevelType;

  set dayPrivacyLevelType(int dayPrivacyLevelType) {
    this._dayPrivacyLevelType = dayPrivacyLevelType;
    this.__isset_dayPrivacyLevelType = true;
  }

  bool isSetDayPrivacyLevelType() => this.__isset_dayPrivacyLevelType;

  unsetDayPrivacyLevelType() {
    this.__isset_dayPrivacyLevelType = false;
  }

  // dayEnabled
  bool get dayEnabled => this._dayEnabled;

  set dayEnabled(bool dayEnabled) {
    this._dayEnabled = dayEnabled;
    this.__isset_dayEnabled = true;
  }

  bool isSetDayEnabled() => this.__isset_dayEnabled;

  unsetDayEnabled() {
    this.__isset_dayEnabled = false;
  }

  getFieldValue(int fieldID) {
    switch (fieldID) {
      case YEAR:
        return this.year;
      case YEARPRIVACYLEVELTYPE:
        return this.yearPrivacyLevelType;
      case YEARENABLED:
        return this.yearEnabled;
      case DAY:
        return this.day;
      case DAYPRIVACYLEVELTYPE:
        return this.dayPrivacyLevelType;
      case DAYENABLED:
        return this.dayEnabled;
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
      case YEAR:
        if (value == null) {
          unsetYear();
        } else {
          this.year = value;
        }
        break;

      case YEARPRIVACYLEVELTYPE:
        if (value == null) {
          unsetYearPrivacyLevelType();
        } else {
          this.yearPrivacyLevelType = value;
        }
        break;

      case YEARENABLED:
        if (value == null) {
          unsetYearEnabled();
        } else {
          this.yearEnabled = value;
        }
        break;

      case DAY:
        if (value == null) {
          unsetDay();
        } else {
          this.day = value;
        }
        break;

      case DAYPRIVACYLEVELTYPE:
        if (value == null) {
          unsetDayPrivacyLevelType();
        } else {
          this.dayPrivacyLevelType = value;
        }
        break;

      case DAYENABLED:
        if (value == null) {
          unsetDayEnabled();
        } else {
          this.dayEnabled = value;
        }
        break;

      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  bool isSet(int fieldID) {
    switch (fieldID) {
      case YEAR:
        return isSetYear();
      case YEARPRIVACYLEVELTYPE:
        return isSetYearPrivacyLevelType();
      case YEARENABLED:
        return isSetYearEnabled();
      case DAY:
        return isSetDay();
      case DAYPRIVACYLEVELTYPE:
        return isSetDayPrivacyLevelType();
      case DAYENABLED:
        return isSetDayEnabled();
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  read(TProtocol iprot) {
    TField field;
    iprot.readStructBegin();
    while (true) {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case YEAR:
          if (field.type == TType.STRING) {
            this.year = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case YEARPRIVACYLEVELTYPE:
          if (field.type == TType.I32) {
            this.yearPrivacyLevelType = iprot.readI32();
            this.__isset_yearPrivacyLevelType = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case YEARENABLED:
          if (field.type == TType.BOOL) {
            this.yearEnabled = iprot.readBool();
            this.__isset_yearEnabled = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DAY:
          if (field.type == TType.STRING) {
            this.day = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DAYPRIVACYLEVELTYPE:
          if (field.type == TType.I32) {
            this.dayPrivacyLevelType = iprot.readI32();
            this.__isset_dayPrivacyLevelType = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DAYENABLED:
          if (field.type == TType.BOOL) {
            this.dayEnabled = iprot.readBool();
            this.__isset_dayEnabled = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  write(TProtocol oprot) {
    validate();

    oprot.writeStructBegin(_STRUCT_DESC);
    if (this.year != null) {
      oprot.writeFieldBegin(_YEAR_FIELD_DESC);
      oprot.writeString(this.year);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_YEAR_PRIVACY_LEVEL_TYPE_FIELD_DESC);
    oprot.writeI32(this.yearPrivacyLevelType);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_YEAR_ENABLED_FIELD_DESC);
    oprot.writeBool(this.yearEnabled);
    oprot.writeFieldEnd();
    if (this.day != null) {
      oprot.writeFieldBegin(_DAY_FIELD_DESC);
      oprot.writeString(this.day);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_DAY_PRIVACY_LEVEL_TYPE_FIELD_DESC);
    oprot.writeI32(this.dayPrivacyLevelType);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_DAY_ENABLED_FIELD_DESC);
    oprot.writeBool(this.dayEnabled);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  String toString() {
    StringBuffer ret = new StringBuffer("ExtendedProfileBirthday(");

    ret.write("year:");
    if (this.year == null) {
      ret.write("null");
    } else {
      ret.write(this.year);
    }

    ret.write(", ");
    ret.write("yearPrivacyLevelType:");
    String yearPrivacyLevelType_name = PrivacyLevelType.VALUES_TO_NAMES[this.yearPrivacyLevelType];
    if (yearPrivacyLevelType_name != null) {
      ret.write(yearPrivacyLevelType_name);
      ret.write(" (");
    }
    ret.write(this.yearPrivacyLevelType);
    if (yearPrivacyLevelType_name != null) {
      ret.write(")");
    }

    ret.write(", ");
    ret.write("yearEnabled:");
    ret.write(this.yearEnabled);

    ret.write(", ");
    ret.write("day:");
    if (this.day == null) {
      ret.write("null");
    } else {
      ret.write(this.day);
    }

    ret.write(", ");
    ret.write("dayPrivacyLevelType:");
    String dayPrivacyLevelType_name = PrivacyLevelType.VALUES_TO_NAMES[this.dayPrivacyLevelType];
    if (dayPrivacyLevelType_name != null) {
      ret.write(dayPrivacyLevelType_name);
      ret.write(" (");
    }
    ret.write(this.dayPrivacyLevelType);
    if (dayPrivacyLevelType_name != null) {
      ret.write(")");
    }

    ret.write(", ");
    ret.write("dayEnabled:");
    ret.write(this.dayEnabled);

    ret.write(")");

    return ret.toString();
  }

  validate() {
    // check for required fields
    // check that fields of type enum have valid values
    if (isSetYearPrivacyLevelType() && !PrivacyLevelType.VALID_VALUES.contains(yearPrivacyLevelType)) {
      throw new TProtocolError(TProtocolErrorType.UNKNOWN, "The field 'yearPrivacyLevelType' has been assigned the invalid value $yearPrivacyLevelType");
    }
    if (isSetDayPrivacyLevelType() && !PrivacyLevelType.VALID_VALUES.contains(dayPrivacyLevelType)) {
      throw new TProtocolError(TProtocolErrorType.UNKNOWN, "The field 'dayPrivacyLevelType' has been assigned the invalid value $dayPrivacyLevelType");
    }
  }

}

