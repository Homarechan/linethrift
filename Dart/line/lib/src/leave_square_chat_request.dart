/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
library line.src.leave_square_chat_request;

import 'dart:typed_data' show Uint8List;
import 'package:thrift/thrift.dart';
import 'package:line/line.dart';

class LeaveSquareChatRequest implements TBase {
  static final TStruct _STRUCT_DESC = new TStruct("LeaveSquareChatRequest");
  static final TField _SQUARE_CHAT_MID_FIELD_DESC = new TField("squareChatMid", TType.STRING, 2);
  static final TField _SAY_GOODBYE_FIELD_DESC = new TField("sayGoodbye", TType.BOOL, 3);
  static final TField _SQUARE_CHAT_MEMBER_REVISION_FIELD_DESC = new TField("squareChatMemberRevision", TType.I64, 4);

  String _squareChatMid;
  static const int SQUARECHATMID = 2;
  bool _sayGoodbye = false;
  static const int SAYGOODBYE = 3;
  int _squareChatMemberRevision = 0;
  static const int SQUARECHATMEMBERREVISION = 4;

  bool __isset_sayGoodbye = false;
  bool __isset_squareChatMemberRevision = false;

  LeaveSquareChatRequest() {
  }

  // squareChatMid
  String get squareChatMid => this._squareChatMid;

  set squareChatMid(String squareChatMid) {
    this._squareChatMid = squareChatMid;
  }

  bool isSetSquareChatMid() => this.squareChatMid != null;

  unsetSquareChatMid() {
    this.squareChatMid = null;
  }

  // sayGoodbye
  bool get sayGoodbye => this._sayGoodbye;

  set sayGoodbye(bool sayGoodbye) {
    this._sayGoodbye = sayGoodbye;
    this.__isset_sayGoodbye = true;
  }

  bool isSetSayGoodbye() => this.__isset_sayGoodbye;

  unsetSayGoodbye() {
    this.__isset_sayGoodbye = false;
  }

  // squareChatMemberRevision
  int get squareChatMemberRevision => this._squareChatMemberRevision;

  set squareChatMemberRevision(int squareChatMemberRevision) {
    this._squareChatMemberRevision = squareChatMemberRevision;
    this.__isset_squareChatMemberRevision = true;
  }

  bool isSetSquareChatMemberRevision() => this.__isset_squareChatMemberRevision;

  unsetSquareChatMemberRevision() {
    this.__isset_squareChatMemberRevision = false;
  }

  getFieldValue(int fieldID) {
    switch (fieldID) {
      case SQUARECHATMID:
        return this.squareChatMid;
      case SAYGOODBYE:
        return this.sayGoodbye;
      case SQUARECHATMEMBERREVISION:
        return this.squareChatMemberRevision;
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
      case SQUARECHATMID:
        if (value == null) {
          unsetSquareChatMid();
        } else {
          this.squareChatMid = value;
        }
        break;

      case SAYGOODBYE:
        if (value == null) {
          unsetSayGoodbye();
        } else {
          this.sayGoodbye = value;
        }
        break;

      case SQUARECHATMEMBERREVISION:
        if (value == null) {
          unsetSquareChatMemberRevision();
        } else {
          this.squareChatMemberRevision = value;
        }
        break;

      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  bool isSet(int fieldID) {
    switch (fieldID) {
      case SQUARECHATMID:
        return isSetSquareChatMid();
      case SAYGOODBYE:
        return isSetSayGoodbye();
      case SQUARECHATMEMBERREVISION:
        return isSetSquareChatMemberRevision();
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  read(TProtocol iprot) {
    TField field;
    iprot.readStructBegin();
    while (true) {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case SQUARECHATMID:
          if (field.type == TType.STRING) {
            this.squareChatMid = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case SAYGOODBYE:
          if (field.type == TType.BOOL) {
            this.sayGoodbye = iprot.readBool();
            this.__isset_sayGoodbye = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case SQUARECHATMEMBERREVISION:
          if (field.type == TType.I64) {
            this.squareChatMemberRevision = iprot.readI64();
            this.__isset_squareChatMemberRevision = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  write(TProtocol oprot) {
    validate();

    oprot.writeStructBegin(_STRUCT_DESC);
    if (this.squareChatMid != null) {
      oprot.writeFieldBegin(_SQUARE_CHAT_MID_FIELD_DESC);
      oprot.writeString(this.squareChatMid);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_SAY_GOODBYE_FIELD_DESC);
    oprot.writeBool(this.sayGoodbye);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_SQUARE_CHAT_MEMBER_REVISION_FIELD_DESC);
    oprot.writeI64(this.squareChatMemberRevision);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  String toString() {
    StringBuffer ret = new StringBuffer("LeaveSquareChatRequest(");

    ret.write("squareChatMid:");
    if (this.squareChatMid == null) {
      ret.write("null");
    } else {
      ret.write(this.squareChatMid);
    }

    ret.write(", ");
    ret.write("sayGoodbye:");
    ret.write(this.sayGoodbye);

    ret.write(", ");
    ret.write("squareChatMemberRevision:");
    ret.write(this.squareChatMemberRevision);

    ret.write(")");

    return ret.toString();
  }

  validate() {
    // check for required fields
    // check that fields of type enum have valid values
  }

}

