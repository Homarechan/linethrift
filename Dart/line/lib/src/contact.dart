/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
library line.src.contact;

import 'dart:typed_data' show Uint8List;
import 'package:thrift/thrift.dart';
import 'package:line/line.dart';

class Contact implements TBase {
  static final TStruct _STRUCT_DESC = new TStruct("Contact");
  static final TField _MID_FIELD_DESC = new TField("mid", TType.STRING, 1);
  static final TField _CREATED_TIME_FIELD_DESC = new TField("createdTime", TType.I64, 2);
  static final TField _TYPE_FIELD_DESC = new TField("type", TType.I32, 10);
  static final TField _STATUS_FIELD_DESC = new TField("status", TType.I32, 11);
  static final TField _RELATION_FIELD_DESC = new TField("relation", TType.I32, 21);
  static final TField _DISPLAY_NAME_FIELD_DESC = new TField("displayName", TType.STRING, 22);
  static final TField _PHONETIC_NAME_FIELD_DESC = new TField("phoneticName", TType.STRING, 23);
  static final TField _PICTURE_STATUS_FIELD_DESC = new TField("pictureStatus", TType.STRING, 24);
  static final TField _THUMBNAIL_URL_FIELD_DESC = new TField("thumbnailUrl", TType.STRING, 25);
  static final TField _STATUS_MESSAGE_FIELD_DESC = new TField("statusMessage", TType.STRING, 26);
  static final TField _DISPLAY_NAME_OVERRIDDEN_FIELD_DESC = new TField("displayNameOverridden", TType.STRING, 27);
  static final TField _FAVORITE_TIME_FIELD_DESC = new TField("favoriteTime", TType.I64, 28);
  static final TField _CAPABLE_VOICE_CALL_FIELD_DESC = new TField("capableVoiceCall", TType.BOOL, 31);
  static final TField _CAPABLE_VIDEO_CALL_FIELD_DESC = new TField("capableVideoCall", TType.BOOL, 32);
  static final TField _CAPABLE_MYHOME_FIELD_DESC = new TField("capableMyhome", TType.BOOL, 33);
  static final TField _CAPABLE_BUDDY_FIELD_DESC = new TField("capableBuddy", TType.BOOL, 34);
  static final TField _ATTRIBUTES_FIELD_DESC = new TField("attributes", TType.I32, 35);
  static final TField _SETTINGS_FIELD_DESC = new TField("settings", TType.I64, 36);
  static final TField _PICTURE_PATH_FIELD_DESC = new TField("picturePath", TType.STRING, 37);
  static final TField _RECOMMEND_PARAMS_FIELD_DESC = new TField("recommendParams", TType.STRING, 38);
  static final TField _FRIEND_REQUEST_STATUS_FIELD_DESC = new TField("friendRequestStatus", TType.I32, 39);
  static final TField _MUSIC_PROFILE_FIELD_DESC = new TField("musicProfile", TType.STRING, 40);
  static final TField _VIDEO_PROFILE_FIELD_DESC = new TField("videoProfile", TType.STRING, 42);

  String _mid;
  static const int MID = 1;
  int _createdTime = 0;
  static const int CREATEDTIME = 2;
  int _type;
  static const int TYPE = 10;
  int _status;
  static const int STATUS = 11;
  int _relation;
  static const int RELATION = 21;
  String _displayName;
  static const int DISPLAYNAME = 22;
  String _phoneticName;
  static const int PHONETICNAME = 23;
  String _pictureStatus;
  static const int PICTURESTATUS = 24;
  String _thumbnailUrl;
  static const int THUMBNAILURL = 25;
  String _statusMessage;
  static const int STATUSMESSAGE = 26;
  String _displayNameOverridden;
  static const int DISPLAYNAMEOVERRIDDEN = 27;
  int _favoriteTime = 0;
  static const int FAVORITETIME = 28;
  bool _capableVoiceCall = false;
  static const int CAPABLEVOICECALL = 31;
  bool _capableVideoCall = false;
  static const int CAPABLEVIDEOCALL = 32;
  bool _capableMyhome = false;
  static const int CAPABLEMYHOME = 33;
  bool _capableBuddy = false;
  static const int CAPABLEBUDDY = 34;
  int _attributes = 0;
  static const int ATTRIBUTES = 35;
  int _settings = 0;
  static const int SETTINGS = 36;
  String _picturePath;
  static const int PICTUREPATH = 37;
  String _recommendParams;
  static const int RECOMMENDPARAMS = 38;
  int _friendRequestStatus;
  static const int FRIENDREQUESTSTATUS = 39;
  String _musicProfile;
  static const int MUSICPROFILE = 40;
  String _videoProfile;
  static const int VIDEOPROFILE = 42;

  bool __isset_createdTime = false;
  bool __isset_type = false;
  bool __isset_status = false;
  bool __isset_relation = false;
  bool __isset_favoriteTime = false;
  bool __isset_capableVoiceCall = false;
  bool __isset_capableVideoCall = false;
  bool __isset_capableMyhome = false;
  bool __isset_capableBuddy = false;
  bool __isset_attributes = false;
  bool __isset_settings = false;
  bool __isset_friendRequestStatus = false;

  Contact() {
  }

  // mid
  String get mid => this._mid;

  set mid(String mid) {
    this._mid = mid;
  }

  bool isSetMid() => this.mid != null;

  unsetMid() {
    this.mid = null;
  }

  // createdTime
  int get createdTime => this._createdTime;

  set createdTime(int createdTime) {
    this._createdTime = createdTime;
    this.__isset_createdTime = true;
  }

  bool isSetCreatedTime() => this.__isset_createdTime;

  unsetCreatedTime() {
    this.__isset_createdTime = false;
  }

  // type
  int get type => this._type;

  set type(int type) {
    this._type = type;
    this.__isset_type = true;
  }

  bool isSetType() => this.__isset_type;

  unsetType() {
    this.__isset_type = false;
  }

  // status
  int get status => this._status;

  set status(int status) {
    this._status = status;
    this.__isset_status = true;
  }

  bool isSetStatus() => this.__isset_status;

  unsetStatus() {
    this.__isset_status = false;
  }

  // relation
  int get relation => this._relation;

  set relation(int relation) {
    this._relation = relation;
    this.__isset_relation = true;
  }

  bool isSetRelation() => this.__isset_relation;

  unsetRelation() {
    this.__isset_relation = false;
  }

  // displayName
  String get displayName => this._displayName;

  set displayName(String displayName) {
    this._displayName = displayName;
  }

  bool isSetDisplayName() => this.displayName != null;

  unsetDisplayName() {
    this.displayName = null;
  }

  // phoneticName
  String get phoneticName => this._phoneticName;

  set phoneticName(String phoneticName) {
    this._phoneticName = phoneticName;
  }

  bool isSetPhoneticName() => this.phoneticName != null;

  unsetPhoneticName() {
    this.phoneticName = null;
  }

  // pictureStatus
  String get pictureStatus => this._pictureStatus;

  set pictureStatus(String pictureStatus) {
    this._pictureStatus = pictureStatus;
  }

  bool isSetPictureStatus() => this.pictureStatus != null;

  unsetPictureStatus() {
    this.pictureStatus = null;
  }

  // thumbnailUrl
  String get thumbnailUrl => this._thumbnailUrl;

  set thumbnailUrl(String thumbnailUrl) {
    this._thumbnailUrl = thumbnailUrl;
  }

  bool isSetThumbnailUrl() => this.thumbnailUrl != null;

  unsetThumbnailUrl() {
    this.thumbnailUrl = null;
  }

  // statusMessage
  String get statusMessage => this._statusMessage;

  set statusMessage(String statusMessage) {
    this._statusMessage = statusMessage;
  }

  bool isSetStatusMessage() => this.statusMessage != null;

  unsetStatusMessage() {
    this.statusMessage = null;
  }

  // displayNameOverridden
  String get displayNameOverridden => this._displayNameOverridden;

  set displayNameOverridden(String displayNameOverridden) {
    this._displayNameOverridden = displayNameOverridden;
  }

  bool isSetDisplayNameOverridden() => this.displayNameOverridden != null;

  unsetDisplayNameOverridden() {
    this.displayNameOverridden = null;
  }

  // favoriteTime
  int get favoriteTime => this._favoriteTime;

  set favoriteTime(int favoriteTime) {
    this._favoriteTime = favoriteTime;
    this.__isset_favoriteTime = true;
  }

  bool isSetFavoriteTime() => this.__isset_favoriteTime;

  unsetFavoriteTime() {
    this.__isset_favoriteTime = false;
  }

  // capableVoiceCall
  bool get capableVoiceCall => this._capableVoiceCall;

  set capableVoiceCall(bool capableVoiceCall) {
    this._capableVoiceCall = capableVoiceCall;
    this.__isset_capableVoiceCall = true;
  }

  bool isSetCapableVoiceCall() => this.__isset_capableVoiceCall;

  unsetCapableVoiceCall() {
    this.__isset_capableVoiceCall = false;
  }

  // capableVideoCall
  bool get capableVideoCall => this._capableVideoCall;

  set capableVideoCall(bool capableVideoCall) {
    this._capableVideoCall = capableVideoCall;
    this.__isset_capableVideoCall = true;
  }

  bool isSetCapableVideoCall() => this.__isset_capableVideoCall;

  unsetCapableVideoCall() {
    this.__isset_capableVideoCall = false;
  }

  // capableMyhome
  bool get capableMyhome => this._capableMyhome;

  set capableMyhome(bool capableMyhome) {
    this._capableMyhome = capableMyhome;
    this.__isset_capableMyhome = true;
  }

  bool isSetCapableMyhome() => this.__isset_capableMyhome;

  unsetCapableMyhome() {
    this.__isset_capableMyhome = false;
  }

  // capableBuddy
  bool get capableBuddy => this._capableBuddy;

  set capableBuddy(bool capableBuddy) {
    this._capableBuddy = capableBuddy;
    this.__isset_capableBuddy = true;
  }

  bool isSetCapableBuddy() => this.__isset_capableBuddy;

  unsetCapableBuddy() {
    this.__isset_capableBuddy = false;
  }

  // attributes
  int get attributes => this._attributes;

  set attributes(int attributes) {
    this._attributes = attributes;
    this.__isset_attributes = true;
  }

  bool isSetAttributes() => this.__isset_attributes;

  unsetAttributes() {
    this.__isset_attributes = false;
  }

  // settings
  int get settings => this._settings;

  set settings(int settings) {
    this._settings = settings;
    this.__isset_settings = true;
  }

  bool isSetSettings() => this.__isset_settings;

  unsetSettings() {
    this.__isset_settings = false;
  }

  // picturePath
  String get picturePath => this._picturePath;

  set picturePath(String picturePath) {
    this._picturePath = picturePath;
  }

  bool isSetPicturePath() => this.picturePath != null;

  unsetPicturePath() {
    this.picturePath = null;
  }

  // recommendParams
  String get recommendParams => this._recommendParams;

  set recommendParams(String recommendParams) {
    this._recommendParams = recommendParams;
  }

  bool isSetRecommendParams() => this.recommendParams != null;

  unsetRecommendParams() {
    this.recommendParams = null;
  }

  // friendRequestStatus
  int get friendRequestStatus => this._friendRequestStatus;

  set friendRequestStatus(int friendRequestStatus) {
    this._friendRequestStatus = friendRequestStatus;
    this.__isset_friendRequestStatus = true;
  }

  bool isSetFriendRequestStatus() => this.__isset_friendRequestStatus;

  unsetFriendRequestStatus() {
    this.__isset_friendRequestStatus = false;
  }

  // musicProfile
  String get musicProfile => this._musicProfile;

  set musicProfile(String musicProfile) {
    this._musicProfile = musicProfile;
  }

  bool isSetMusicProfile() => this.musicProfile != null;

  unsetMusicProfile() {
    this.musicProfile = null;
  }

  // videoProfile
  String get videoProfile => this._videoProfile;

  set videoProfile(String videoProfile) {
    this._videoProfile = videoProfile;
  }

  bool isSetVideoProfile() => this.videoProfile != null;

  unsetVideoProfile() {
    this.videoProfile = null;
  }

  getFieldValue(int fieldID) {
    switch (fieldID) {
      case MID:
        return this.mid;
      case CREATEDTIME:
        return this.createdTime;
      case TYPE:
        return this.type;
      case STATUS:
        return this.status;
      case RELATION:
        return this.relation;
      case DISPLAYNAME:
        return this.displayName;
      case PHONETICNAME:
        return this.phoneticName;
      case PICTURESTATUS:
        return this.pictureStatus;
      case THUMBNAILURL:
        return this.thumbnailUrl;
      case STATUSMESSAGE:
        return this.statusMessage;
      case DISPLAYNAMEOVERRIDDEN:
        return this.displayNameOverridden;
      case FAVORITETIME:
        return this.favoriteTime;
      case CAPABLEVOICECALL:
        return this.capableVoiceCall;
      case CAPABLEVIDEOCALL:
        return this.capableVideoCall;
      case CAPABLEMYHOME:
        return this.capableMyhome;
      case CAPABLEBUDDY:
        return this.capableBuddy;
      case ATTRIBUTES:
        return this.attributes;
      case SETTINGS:
        return this.settings;
      case PICTUREPATH:
        return this.picturePath;
      case RECOMMENDPARAMS:
        return this.recommendParams;
      case FRIENDREQUESTSTATUS:
        return this.friendRequestStatus;
      case MUSICPROFILE:
        return this.musicProfile;
      case VIDEOPROFILE:
        return this.videoProfile;
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
      case MID:
        if (value == null) {
          unsetMid();
        } else {
          this.mid = value;
        }
        break;

      case CREATEDTIME:
        if (value == null) {
          unsetCreatedTime();
        } else {
          this.createdTime = value;
        }
        break;

      case TYPE:
        if (value == null) {
          unsetType();
        } else {
          this.type = value;
        }
        break;

      case STATUS:
        if (value == null) {
          unsetStatus();
        } else {
          this.status = value;
        }
        break;

      case RELATION:
        if (value == null) {
          unsetRelation();
        } else {
          this.relation = value;
        }
        break;

      case DISPLAYNAME:
        if (value == null) {
          unsetDisplayName();
        } else {
          this.displayName = value;
        }
        break;

      case PHONETICNAME:
        if (value == null) {
          unsetPhoneticName();
        } else {
          this.phoneticName = value;
        }
        break;

      case PICTURESTATUS:
        if (value == null) {
          unsetPictureStatus();
        } else {
          this.pictureStatus = value;
        }
        break;

      case THUMBNAILURL:
        if (value == null) {
          unsetThumbnailUrl();
        } else {
          this.thumbnailUrl = value;
        }
        break;

      case STATUSMESSAGE:
        if (value == null) {
          unsetStatusMessage();
        } else {
          this.statusMessage = value;
        }
        break;

      case DISPLAYNAMEOVERRIDDEN:
        if (value == null) {
          unsetDisplayNameOverridden();
        } else {
          this.displayNameOverridden = value;
        }
        break;

      case FAVORITETIME:
        if (value == null) {
          unsetFavoriteTime();
        } else {
          this.favoriteTime = value;
        }
        break;

      case CAPABLEVOICECALL:
        if (value == null) {
          unsetCapableVoiceCall();
        } else {
          this.capableVoiceCall = value;
        }
        break;

      case CAPABLEVIDEOCALL:
        if (value == null) {
          unsetCapableVideoCall();
        } else {
          this.capableVideoCall = value;
        }
        break;

      case CAPABLEMYHOME:
        if (value == null) {
          unsetCapableMyhome();
        } else {
          this.capableMyhome = value;
        }
        break;

      case CAPABLEBUDDY:
        if (value == null) {
          unsetCapableBuddy();
        } else {
          this.capableBuddy = value;
        }
        break;

      case ATTRIBUTES:
        if (value == null) {
          unsetAttributes();
        } else {
          this.attributes = value;
        }
        break;

      case SETTINGS:
        if (value == null) {
          unsetSettings();
        } else {
          this.settings = value;
        }
        break;

      case PICTUREPATH:
        if (value == null) {
          unsetPicturePath();
        } else {
          this.picturePath = value;
        }
        break;

      case RECOMMENDPARAMS:
        if (value == null) {
          unsetRecommendParams();
        } else {
          this.recommendParams = value;
        }
        break;

      case FRIENDREQUESTSTATUS:
        if (value == null) {
          unsetFriendRequestStatus();
        } else {
          this.friendRequestStatus = value;
        }
        break;

      case MUSICPROFILE:
        if (value == null) {
          unsetMusicProfile();
        } else {
          this.musicProfile = value;
        }
        break;

      case VIDEOPROFILE:
        if (value == null) {
          unsetVideoProfile();
        } else {
          this.videoProfile = value;
        }
        break;

      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  bool isSet(int fieldID) {
    switch (fieldID) {
      case MID:
        return isSetMid();
      case CREATEDTIME:
        return isSetCreatedTime();
      case TYPE:
        return isSetType();
      case STATUS:
        return isSetStatus();
      case RELATION:
        return isSetRelation();
      case DISPLAYNAME:
        return isSetDisplayName();
      case PHONETICNAME:
        return isSetPhoneticName();
      case PICTURESTATUS:
        return isSetPictureStatus();
      case THUMBNAILURL:
        return isSetThumbnailUrl();
      case STATUSMESSAGE:
        return isSetStatusMessage();
      case DISPLAYNAMEOVERRIDDEN:
        return isSetDisplayNameOverridden();
      case FAVORITETIME:
        return isSetFavoriteTime();
      case CAPABLEVOICECALL:
        return isSetCapableVoiceCall();
      case CAPABLEVIDEOCALL:
        return isSetCapableVideoCall();
      case CAPABLEMYHOME:
        return isSetCapableMyhome();
      case CAPABLEBUDDY:
        return isSetCapableBuddy();
      case ATTRIBUTES:
        return isSetAttributes();
      case SETTINGS:
        return isSetSettings();
      case PICTUREPATH:
        return isSetPicturePath();
      case RECOMMENDPARAMS:
        return isSetRecommendParams();
      case FRIENDREQUESTSTATUS:
        return isSetFriendRequestStatus();
      case MUSICPROFILE:
        return isSetMusicProfile();
      case VIDEOPROFILE:
        return isSetVideoProfile();
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  read(TProtocol iprot) {
    TField field;
    iprot.readStructBegin();
    while (true) {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case MID:
          if (field.type == TType.STRING) {
            this.mid = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CREATEDTIME:
          if (field.type == TType.I64) {
            this.createdTime = iprot.readI64();
            this.__isset_createdTime = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case TYPE:
          if (field.type == TType.I32) {
            this.type = iprot.readI32();
            this.__isset_type = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case STATUS:
          if (field.type == TType.I32) {
            this.status = iprot.readI32();
            this.__isset_status = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case RELATION:
          if (field.type == TType.I32) {
            this.relation = iprot.readI32();
            this.__isset_relation = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DISPLAYNAME:
          if (field.type == TType.STRING) {
            this.displayName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case PHONETICNAME:
          if (field.type == TType.STRING) {
            this.phoneticName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case PICTURESTATUS:
          if (field.type == TType.STRING) {
            this.pictureStatus = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case THUMBNAILURL:
          if (field.type == TType.STRING) {
            this.thumbnailUrl = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case STATUSMESSAGE:
          if (field.type == TType.STRING) {
            this.statusMessage = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DISPLAYNAMEOVERRIDDEN:
          if (field.type == TType.STRING) {
            this.displayNameOverridden = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case FAVORITETIME:
          if (field.type == TType.I64) {
            this.favoriteTime = iprot.readI64();
            this.__isset_favoriteTime = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CAPABLEVOICECALL:
          if (field.type == TType.BOOL) {
            this.capableVoiceCall = iprot.readBool();
            this.__isset_capableVoiceCall = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CAPABLEVIDEOCALL:
          if (field.type == TType.BOOL) {
            this.capableVideoCall = iprot.readBool();
            this.__isset_capableVideoCall = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CAPABLEMYHOME:
          if (field.type == TType.BOOL) {
            this.capableMyhome = iprot.readBool();
            this.__isset_capableMyhome = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CAPABLEBUDDY:
          if (field.type == TType.BOOL) {
            this.capableBuddy = iprot.readBool();
            this.__isset_capableBuddy = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case ATTRIBUTES:
          if (field.type == TType.I32) {
            this.attributes = iprot.readI32();
            this.__isset_attributes = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case SETTINGS:
          if (field.type == TType.I64) {
            this.settings = iprot.readI64();
            this.__isset_settings = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case PICTUREPATH:
          if (field.type == TType.STRING) {
            this.picturePath = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case RECOMMENDPARAMS:
          if (field.type == TType.STRING) {
            this.recommendParams = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case FRIENDREQUESTSTATUS:
          if (field.type == TType.I32) {
            this.friendRequestStatus = iprot.readI32();
            this.__isset_friendRequestStatus = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case MUSICPROFILE:
          if (field.type == TType.STRING) {
            this.musicProfile = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case VIDEOPROFILE:
          if (field.type == TType.STRING) {
            this.videoProfile = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  write(TProtocol oprot) {
    validate();

    oprot.writeStructBegin(_STRUCT_DESC);
    if (this.mid != null) {
      oprot.writeFieldBegin(_MID_FIELD_DESC);
      oprot.writeString(this.mid);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_CREATED_TIME_FIELD_DESC);
    oprot.writeI64(this.createdTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_TYPE_FIELD_DESC);
    oprot.writeI32(this.type);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_STATUS_FIELD_DESC);
    oprot.writeI32(this.status);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_RELATION_FIELD_DESC);
    oprot.writeI32(this.relation);
    oprot.writeFieldEnd();
    if (this.displayName != null) {
      oprot.writeFieldBegin(_DISPLAY_NAME_FIELD_DESC);
      oprot.writeString(this.displayName);
      oprot.writeFieldEnd();
    }
    if (this.phoneticName != null) {
      oprot.writeFieldBegin(_PHONETIC_NAME_FIELD_DESC);
      oprot.writeString(this.phoneticName);
      oprot.writeFieldEnd();
    }
    if (this.pictureStatus != null) {
      oprot.writeFieldBegin(_PICTURE_STATUS_FIELD_DESC);
      oprot.writeString(this.pictureStatus);
      oprot.writeFieldEnd();
    }
    if (this.thumbnailUrl != null) {
      oprot.writeFieldBegin(_THUMBNAIL_URL_FIELD_DESC);
      oprot.writeString(this.thumbnailUrl);
      oprot.writeFieldEnd();
    }
    if (this.statusMessage != null) {
      oprot.writeFieldBegin(_STATUS_MESSAGE_FIELD_DESC);
      oprot.writeString(this.statusMessage);
      oprot.writeFieldEnd();
    }
    if (this.displayNameOverridden != null) {
      oprot.writeFieldBegin(_DISPLAY_NAME_OVERRIDDEN_FIELD_DESC);
      oprot.writeString(this.displayNameOverridden);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_FAVORITE_TIME_FIELD_DESC);
    oprot.writeI64(this.favoriteTime);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_CAPABLE_VOICE_CALL_FIELD_DESC);
    oprot.writeBool(this.capableVoiceCall);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_CAPABLE_VIDEO_CALL_FIELD_DESC);
    oprot.writeBool(this.capableVideoCall);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_CAPABLE_MYHOME_FIELD_DESC);
    oprot.writeBool(this.capableMyhome);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_CAPABLE_BUDDY_FIELD_DESC);
    oprot.writeBool(this.capableBuddy);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_ATTRIBUTES_FIELD_DESC);
    oprot.writeI32(this.attributes);
    oprot.writeFieldEnd();
    oprot.writeFieldBegin(_SETTINGS_FIELD_DESC);
    oprot.writeI64(this.settings);
    oprot.writeFieldEnd();
    if (this.picturePath != null) {
      oprot.writeFieldBegin(_PICTURE_PATH_FIELD_DESC);
      oprot.writeString(this.picturePath);
      oprot.writeFieldEnd();
    }
    if (this.recommendParams != null) {
      oprot.writeFieldBegin(_RECOMMEND_PARAMS_FIELD_DESC);
      oprot.writeString(this.recommendParams);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_FRIEND_REQUEST_STATUS_FIELD_DESC);
    oprot.writeI32(this.friendRequestStatus);
    oprot.writeFieldEnd();
    if (this.musicProfile != null) {
      oprot.writeFieldBegin(_MUSIC_PROFILE_FIELD_DESC);
      oprot.writeString(this.musicProfile);
      oprot.writeFieldEnd();
    }
    if (this.videoProfile != null) {
      oprot.writeFieldBegin(_VIDEO_PROFILE_FIELD_DESC);
      oprot.writeString(this.videoProfile);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  String toString() {
    StringBuffer ret = new StringBuffer("Contact(");

    ret.write("mid:");
    if (this.mid == null) {
      ret.write("null");
    } else {
      ret.write(this.mid);
    }

    ret.write(", ");
    ret.write("createdTime:");
    ret.write(this.createdTime);

    ret.write(", ");
    ret.write("type:");
    String type_name = ContactType.VALUES_TO_NAMES[this.type];
    if (type_name != null) {
      ret.write(type_name);
      ret.write(" (");
    }
    ret.write(this.type);
    if (type_name != null) {
      ret.write(")");
    }

    ret.write(", ");
    ret.write("status:");
    String status_name = ContactStatus.VALUES_TO_NAMES[this.status];
    if (status_name != null) {
      ret.write(status_name);
      ret.write(" (");
    }
    ret.write(this.status);
    if (status_name != null) {
      ret.write(")");
    }

    ret.write(", ");
    ret.write("relation:");
    String relation_name = ContactRelation.VALUES_TO_NAMES[this.relation];
    if (relation_name != null) {
      ret.write(relation_name);
      ret.write(" (");
    }
    ret.write(this.relation);
    if (relation_name != null) {
      ret.write(")");
    }

    ret.write(", ");
    ret.write("displayName:");
    if (this.displayName == null) {
      ret.write("null");
    } else {
      ret.write(this.displayName);
    }

    ret.write(", ");
    ret.write("phoneticName:");
    if (this.phoneticName == null) {
      ret.write("null");
    } else {
      ret.write(this.phoneticName);
    }

    ret.write(", ");
    ret.write("pictureStatus:");
    if (this.pictureStatus == null) {
      ret.write("null");
    } else {
      ret.write(this.pictureStatus);
    }

    ret.write(", ");
    ret.write("thumbnailUrl:");
    if (this.thumbnailUrl == null) {
      ret.write("null");
    } else {
      ret.write(this.thumbnailUrl);
    }

    ret.write(", ");
    ret.write("statusMessage:");
    if (this.statusMessage == null) {
      ret.write("null");
    } else {
      ret.write(this.statusMessage);
    }

    ret.write(", ");
    ret.write("displayNameOverridden:");
    if (this.displayNameOverridden == null) {
      ret.write("null");
    } else {
      ret.write(this.displayNameOverridden);
    }

    ret.write(", ");
    ret.write("favoriteTime:");
    ret.write(this.favoriteTime);

    ret.write(", ");
    ret.write("capableVoiceCall:");
    ret.write(this.capableVoiceCall);

    ret.write(", ");
    ret.write("capableVideoCall:");
    ret.write(this.capableVideoCall);

    ret.write(", ");
    ret.write("capableMyhome:");
    ret.write(this.capableMyhome);

    ret.write(", ");
    ret.write("capableBuddy:");
    ret.write(this.capableBuddy);

    ret.write(", ");
    ret.write("attributes:");
    ret.write(this.attributes);

    ret.write(", ");
    ret.write("settings:");
    ret.write(this.settings);

    ret.write(", ");
    ret.write("picturePath:");
    if (this.picturePath == null) {
      ret.write("null");
    } else {
      ret.write(this.picturePath);
    }

    ret.write(", ");
    ret.write("recommendParams:");
    if (this.recommendParams == null) {
      ret.write("null");
    } else {
      ret.write(this.recommendParams);
    }

    ret.write(", ");
    ret.write("friendRequestStatus:");
    String friendRequestStatus_name = FriendRequestStatus.VALUES_TO_NAMES[this.friendRequestStatus];
    if (friendRequestStatus_name != null) {
      ret.write(friendRequestStatus_name);
      ret.write(" (");
    }
    ret.write(this.friendRequestStatus);
    if (friendRequestStatus_name != null) {
      ret.write(")");
    }

    ret.write(", ");
    ret.write("musicProfile:");
    if (this.musicProfile == null) {
      ret.write("null");
    } else {
      ret.write(this.musicProfile);
    }

    ret.write(", ");
    ret.write("videoProfile:");
    if (this.videoProfile == null) {
      ret.write("null");
    } else {
      ret.write(this.videoProfile);
    }

    ret.write(")");

    return ret.toString();
  }

  validate() {
    // check for required fields
    // check that fields of type enum have valid values
    if (isSetType() && !ContactType.VALID_VALUES.contains(type)) {
      throw new TProtocolError(TProtocolErrorType.UNKNOWN, "The field 'type' has been assigned the invalid value $type");
    }
    if (isSetStatus() && !ContactStatus.VALID_VALUES.contains(status)) {
      throw new TProtocolError(TProtocolErrorType.UNKNOWN, "The field 'status' has been assigned the invalid value $status");
    }
    if (isSetRelation() && !ContactRelation.VALID_VALUES.contains(relation)) {
      throw new TProtocolError(TProtocolErrorType.UNKNOWN, "The field 'relation' has been assigned the invalid value $relation");
    }
    if (isSetFriendRequestStatus() && !FriendRequestStatus.VALID_VALUES.contains(friendRequestStatus)) {
      throw new TProtocolError(TProtocolErrorType.UNKNOWN, "The field 'friendRequestStatus' has been assigned the invalid value $friendRequestStatus");
    }
  }

}

