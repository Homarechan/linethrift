/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
library line.src.square_event_payload;

import 'dart:typed_data' show Uint8List;
import 'package:thrift/thrift.dart';
import 'package:line/line.dart';

class SquareEventPayload implements TBase {
  static final TStruct _STRUCT_DESC = new TStruct("SquareEventPayload");
  static final TField _RECEIVE_MESSAGE_FIELD_DESC = new TField("receiveMessage", TType.STRUCT, 1);
  static final TField _SEND_MESSAGE_FIELD_DESC = new TField("sendMessage", TType.STRUCT, 2);
  static final TField _NOTIFIED_JOIN_SQUARE_CHAT_FIELD_DESC = new TField("notifiedJoinSquareChat", TType.STRUCT, 3);
  static final TField _NOTIFIED_INVITE_INTO_SQUARE_CHAT_FIELD_DESC = new TField("notifiedInviteIntoSquareChat", TType.STRUCT, 4);
  static final TField _NOTIFIED_LEAVE_SQUARE_CHAT_FIELD_DESC = new TField("notifiedLeaveSquareChat", TType.STRUCT, 5);
  static final TField _NOTIFIED_DESTROY_MESSAGE_FIELD_DESC = new TField("notifiedDestroyMessage", TType.STRUCT, 6);
  static final TField _NOTIFIED_MARK_AS_READ_FIELD_DESC = new TField("notifiedMarkAsRead", TType.STRUCT, 7);
  static final TField _NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE_FIELD_DESC = new TField("notifiedUpdateSquareMemberProfile", TType.STRUCT, 8);
  static final TField _NOTIFIED_KICKOUT_FROM_SQUARE_FIELD_DESC = new TField("notifiedKickoutFromSquare", TType.STRUCT, 20);
  static final TField _NOTIFIED_SHUTDOWN_SQUARE_FIELD_DESC = new TField("notifiedShutdownSquare", TType.STRUCT, 19);
  static final TField _NOTIFIED_DELETE_SQUARE_CHAT_FIELD_DESC = new TField("notifiedDeleteSquareChat", TType.STRUCT, 21);
  static final TField _NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME_FIELD_DESC = new TField("notifiedUpdateSquareChatProfileName", TType.STRUCT, 31);
  static final TField _NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE_FIELD_DESC = new TField("notifiedUpdateSquareChatProfileImage", TType.STRUCT, 32);
  static final TField _NOTIFIED_UPDATE_SQUARE_STATUS_FIELD_DESC = new TField("notifiedUpdateSquareStatus", TType.STRUCT, 14);
  static final TField _NOTIFIED_UPDATE_SQUARE_CHAT_STATUS_FIELD_DESC = new TField("notifiedUpdateSquareChatStatus", TType.STRUCT, 15);
  static final TField _NOTIFIED_CREATE_SQUARE_MEMBER_FIELD_DESC = new TField("notifiedCreateSquareMember", TType.STRUCT, 16);
  static final TField _NOTIFIED_CREATE_SQUARE_CHAT_MEMBER_FIELD_DESC = new TField("notifiedCreateSquareChatMember", TType.STRUCT, 17);
  static final TField _NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION_FIELD_DESC = new TField("notifiedUpdateSquareMemberRelation", TType.STRUCT, 18);
  static final TField _NOTIFIED_UPDATE_SQUARE_FIELD_DESC = new TField("notifiedUpdateSquare", TType.STRUCT, 9);
  static final TField _NOTIFIED_UPDATE_SQUARE_MEMBER_FIELD_DESC = new TField("notifiedUpdateSquareMember", TType.STRUCT, 10);
  static final TField _NOTIFIED_UPDATE_SQUARE_CHAT_FIELD_DESC = new TField("notifiedUpdateSquareChat", TType.STRUCT, 11);
  static final TField _NOTIFICATION_JOIN_REQUEST_FIELD_DESC = new TField("notificationJoinRequest", TType.STRUCT, 22);
  static final TField _NOTIFICATION_JOINED_FIELD_DESC = new TField("notificationJoined", TType.STRUCT, 23);
  static final TField _NOTIFICATION_PROMOTE_COADMIN_FIELD_DESC = new TField("notificationPromoteCoadmin", TType.STRUCT, 24);
  static final TField _NOTIFICATION_PROMOTE_ADMIN_FIELD_DESC = new TField("notificationPromoteAdmin", TType.STRUCT, 25);
  static final TField _NOTIFICATION_DEMOTE_MEMBER_FIELD_DESC = new TField("notificationDemoteMember", TType.STRUCT, 26);
  static final TField _NOTIFICATION_KICKED_OUT_FIELD_DESC = new TField("notificationKickedOut", TType.STRUCT, 27);
  static final TField _NOTIFICATION_SQUARE_DELETE_FIELD_DESC = new TField("notificationSquareDelete", TType.STRUCT, 28);
  static final TField _NOTIFICATION_SQUARE_CHAT_DELETE_FIELD_DESC = new TField("notificationSquareChatDelete", TType.STRUCT, 29);
  static final TField _NOTIFICATION_MESSAGE_FIELD_DESC = new TField("notificationMessage", TType.STRUCT, 30);
  static final TField _NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER_FIELD_DESC = new TField("notifiedUpdateSquareChatMember", TType.STRUCT, 12);
  static final TField _NOTIFIED_UPDATE_SQUARE_AUTHORITY_FIELD_DESC = new TField("notifiedUpdateSquareAuthority", TType.STRUCT, 13);
  static final TField _NOTIFIED_UPDATE_SQUARE_FEATURE_SET_FIELD_DESC = new TField("notifiedUpdateSquareFeatureSet", TType.STRUCT, 33);

  SquareEventReceiveMessage _receiveMessage;
  static const int RECEIVEMESSAGE = 1;
  SquareEventSendMessage _sendMessage;
  static const int SENDMESSAGE = 2;
  SquareEventNotifiedJoinSquareChat _notifiedJoinSquareChat;
  static const int NOTIFIEDJOINSQUARECHAT = 3;
  SquareEventNotifiedInviteIntoSquareChat _notifiedInviteIntoSquareChat;
  static const int NOTIFIEDINVITEINTOSQUARECHAT = 4;
  SquareEventNotifiedLeaveSquareChat _notifiedLeaveSquareChat;
  static const int NOTIFIEDLEAVESQUARECHAT = 5;
  SquareEventNotifiedDestroyMessage _notifiedDestroyMessage;
  static const int NOTIFIEDDESTROYMESSAGE = 6;
  SquareEventNotifiedMarkAsRead _notifiedMarkAsRead;
  static const int NOTIFIEDMARKASREAD = 7;
  SquareEventNotifiedUpdateSquareMemberProfile _notifiedUpdateSquareMemberProfile;
  static const int NOTIFIEDUPDATESQUAREMEMBERPROFILE = 8;
  SquareEventNotifiedKickoutFromSquare _notifiedKickoutFromSquare;
  static const int NOTIFIEDKICKOUTFROMSQUARE = 20;
  SquareEventNotifiedShutdownSquare _notifiedShutdownSquare;
  static const int NOTIFIEDSHUTDOWNSQUARE = 19;
  SquareEventNotifiedDeleteSquareChat _notifiedDeleteSquareChat;
  static const int NOTIFIEDDELETESQUARECHAT = 21;
  SquareEventNotifiedUpdateSquareChatProfileName _notifiedUpdateSquareChatProfileName;
  static const int NOTIFIEDUPDATESQUARECHATPROFILENAME = 31;
  SquareEventNotifiedUpdateSquareChatProfileImage _notifiedUpdateSquareChatProfileImage;
  static const int NOTIFIEDUPDATESQUARECHATPROFILEIMAGE = 32;
  SquareEventNotifiedUpdateSquareStatus _notifiedUpdateSquareStatus;
  static const int NOTIFIEDUPDATESQUARESTATUS = 14;
  SquareEventNotifiedUpdateSquareChatStatus _notifiedUpdateSquareChatStatus;
  static const int NOTIFIEDUPDATESQUARECHATSTATUS = 15;
  SquareEventNotifiedCreateSquareMember _notifiedCreateSquareMember;
  static const int NOTIFIEDCREATESQUAREMEMBER = 16;
  SquareEventNotifiedCreateSquareChatMember _notifiedCreateSquareChatMember;
  static const int NOTIFIEDCREATESQUARECHATMEMBER = 17;
  SquareEventNotifiedUpdateSquareMemberRelation _notifiedUpdateSquareMemberRelation;
  static const int NOTIFIEDUPDATESQUAREMEMBERRELATION = 18;
  SquareEventNotifiedUpdateSquare _notifiedUpdateSquare;
  static const int NOTIFIEDUPDATESQUARE = 9;
  SquareEventNotifiedUpdateSquareMember _notifiedUpdateSquareMember;
  static const int NOTIFIEDUPDATESQUAREMEMBER = 10;
  SquareEventNotifiedUpdateSquareChat _notifiedUpdateSquareChat;
  static const int NOTIFIEDUPDATESQUARECHAT = 11;
  SquareEventNotificationJoinRequest _notificationJoinRequest;
  static const int NOTIFICATIONJOINREQUEST = 22;
  SquareEventNotificationMemberUpdate _notificationJoined;
  static const int NOTIFICATIONJOINED = 23;
  SquareEventNotificationMemberUpdate _notificationPromoteCoadmin;
  static const int NOTIFICATIONPROMOTECOADMIN = 24;
  SquareEventNotificationMemberUpdate _notificationPromoteAdmin;
  static const int NOTIFICATIONPROMOTEADMIN = 25;
  SquareEventNotificationMemberUpdate _notificationDemoteMember;
  static const int NOTIFICATIONDEMOTEMEMBER = 26;
  SquareEventNotificationMemberUpdate _notificationKickedOut;
  static const int NOTIFICATIONKICKEDOUT = 27;
  SquareEventNotificationSquareDelete _notificationSquareDelete;
  static const int NOTIFICATIONSQUAREDELETE = 28;
  SquareEventNotificationSquareChatDelete _notificationSquareChatDelete;
  static const int NOTIFICATIONSQUARECHATDELETE = 29;
  SquareEventNotificationMessage _notificationMessage;
  static const int NOTIFICATIONMESSAGE = 30;
  SquareEventNotifiedUpdateSquareChatMember _notifiedUpdateSquareChatMember;
  static const int NOTIFIEDUPDATESQUARECHATMEMBER = 12;
  SquareEventNotifiedUpdateSquareAuthority _notifiedUpdateSquareAuthority;
  static const int NOTIFIEDUPDATESQUAREAUTHORITY = 13;
  SquareEventNotifiedUpdateSquareFeatureSet _notifiedUpdateSquareFeatureSet;
  static const int NOTIFIEDUPDATESQUAREFEATURESET = 33;


  SquareEventPayload() {
  }

  // receiveMessage
  SquareEventReceiveMessage get receiveMessage => this._receiveMessage;

  set receiveMessage(SquareEventReceiveMessage receiveMessage) {
    this._receiveMessage = receiveMessage;
  }

  bool isSetReceiveMessage() => this.receiveMessage != null;

  unsetReceiveMessage() {
    this.receiveMessage = null;
  }

  // sendMessage
  SquareEventSendMessage get sendMessage => this._sendMessage;

  set sendMessage(SquareEventSendMessage sendMessage) {
    this._sendMessage = sendMessage;
  }

  bool isSetSendMessage() => this.sendMessage != null;

  unsetSendMessage() {
    this.sendMessage = null;
  }

  // notifiedJoinSquareChat
  SquareEventNotifiedJoinSquareChat get notifiedJoinSquareChat => this._notifiedJoinSquareChat;

  set notifiedJoinSquareChat(SquareEventNotifiedJoinSquareChat notifiedJoinSquareChat) {
    this._notifiedJoinSquareChat = notifiedJoinSquareChat;
  }

  bool isSetNotifiedJoinSquareChat() => this.notifiedJoinSquareChat != null;

  unsetNotifiedJoinSquareChat() {
    this.notifiedJoinSquareChat = null;
  }

  // notifiedInviteIntoSquareChat
  SquareEventNotifiedInviteIntoSquareChat get notifiedInviteIntoSquareChat => this._notifiedInviteIntoSquareChat;

  set notifiedInviteIntoSquareChat(SquareEventNotifiedInviteIntoSquareChat notifiedInviteIntoSquareChat) {
    this._notifiedInviteIntoSquareChat = notifiedInviteIntoSquareChat;
  }

  bool isSetNotifiedInviteIntoSquareChat() => this.notifiedInviteIntoSquareChat != null;

  unsetNotifiedInviteIntoSquareChat() {
    this.notifiedInviteIntoSquareChat = null;
  }

  // notifiedLeaveSquareChat
  SquareEventNotifiedLeaveSquareChat get notifiedLeaveSquareChat => this._notifiedLeaveSquareChat;

  set notifiedLeaveSquareChat(SquareEventNotifiedLeaveSquareChat notifiedLeaveSquareChat) {
    this._notifiedLeaveSquareChat = notifiedLeaveSquareChat;
  }

  bool isSetNotifiedLeaveSquareChat() => this.notifiedLeaveSquareChat != null;

  unsetNotifiedLeaveSquareChat() {
    this.notifiedLeaveSquareChat = null;
  }

  // notifiedDestroyMessage
  SquareEventNotifiedDestroyMessage get notifiedDestroyMessage => this._notifiedDestroyMessage;

  set notifiedDestroyMessage(SquareEventNotifiedDestroyMessage notifiedDestroyMessage) {
    this._notifiedDestroyMessage = notifiedDestroyMessage;
  }

  bool isSetNotifiedDestroyMessage() => this.notifiedDestroyMessage != null;

  unsetNotifiedDestroyMessage() {
    this.notifiedDestroyMessage = null;
  }

  // notifiedMarkAsRead
  SquareEventNotifiedMarkAsRead get notifiedMarkAsRead => this._notifiedMarkAsRead;

  set notifiedMarkAsRead(SquareEventNotifiedMarkAsRead notifiedMarkAsRead) {
    this._notifiedMarkAsRead = notifiedMarkAsRead;
  }

  bool isSetNotifiedMarkAsRead() => this.notifiedMarkAsRead != null;

  unsetNotifiedMarkAsRead() {
    this.notifiedMarkAsRead = null;
  }

  // notifiedUpdateSquareMemberProfile
  SquareEventNotifiedUpdateSquareMemberProfile get notifiedUpdateSquareMemberProfile => this._notifiedUpdateSquareMemberProfile;

  set notifiedUpdateSquareMemberProfile(SquareEventNotifiedUpdateSquareMemberProfile notifiedUpdateSquareMemberProfile) {
    this._notifiedUpdateSquareMemberProfile = notifiedUpdateSquareMemberProfile;
  }

  bool isSetNotifiedUpdateSquareMemberProfile() => this.notifiedUpdateSquareMemberProfile != null;

  unsetNotifiedUpdateSquareMemberProfile() {
    this.notifiedUpdateSquareMemberProfile = null;
  }

  // notifiedKickoutFromSquare
  SquareEventNotifiedKickoutFromSquare get notifiedKickoutFromSquare => this._notifiedKickoutFromSquare;

  set notifiedKickoutFromSquare(SquareEventNotifiedKickoutFromSquare notifiedKickoutFromSquare) {
    this._notifiedKickoutFromSquare = notifiedKickoutFromSquare;
  }

  bool isSetNotifiedKickoutFromSquare() => this.notifiedKickoutFromSquare != null;

  unsetNotifiedKickoutFromSquare() {
    this.notifiedKickoutFromSquare = null;
  }

  // notifiedShutdownSquare
  SquareEventNotifiedShutdownSquare get notifiedShutdownSquare => this._notifiedShutdownSquare;

  set notifiedShutdownSquare(SquareEventNotifiedShutdownSquare notifiedShutdownSquare) {
    this._notifiedShutdownSquare = notifiedShutdownSquare;
  }

  bool isSetNotifiedShutdownSquare() => this.notifiedShutdownSquare != null;

  unsetNotifiedShutdownSquare() {
    this.notifiedShutdownSquare = null;
  }

  // notifiedDeleteSquareChat
  SquareEventNotifiedDeleteSquareChat get notifiedDeleteSquareChat => this._notifiedDeleteSquareChat;

  set notifiedDeleteSquareChat(SquareEventNotifiedDeleteSquareChat notifiedDeleteSquareChat) {
    this._notifiedDeleteSquareChat = notifiedDeleteSquareChat;
  }

  bool isSetNotifiedDeleteSquareChat() => this.notifiedDeleteSquareChat != null;

  unsetNotifiedDeleteSquareChat() {
    this.notifiedDeleteSquareChat = null;
  }

  // notifiedUpdateSquareChatProfileName
  SquareEventNotifiedUpdateSquareChatProfileName get notifiedUpdateSquareChatProfileName => this._notifiedUpdateSquareChatProfileName;

  set notifiedUpdateSquareChatProfileName(SquareEventNotifiedUpdateSquareChatProfileName notifiedUpdateSquareChatProfileName) {
    this._notifiedUpdateSquareChatProfileName = notifiedUpdateSquareChatProfileName;
  }

  bool isSetNotifiedUpdateSquareChatProfileName() => this.notifiedUpdateSquareChatProfileName != null;

  unsetNotifiedUpdateSquareChatProfileName() {
    this.notifiedUpdateSquareChatProfileName = null;
  }

  // notifiedUpdateSquareChatProfileImage
  SquareEventNotifiedUpdateSquareChatProfileImage get notifiedUpdateSquareChatProfileImage => this._notifiedUpdateSquareChatProfileImage;

  set notifiedUpdateSquareChatProfileImage(SquareEventNotifiedUpdateSquareChatProfileImage notifiedUpdateSquareChatProfileImage) {
    this._notifiedUpdateSquareChatProfileImage = notifiedUpdateSquareChatProfileImage;
  }

  bool isSetNotifiedUpdateSquareChatProfileImage() => this.notifiedUpdateSquareChatProfileImage != null;

  unsetNotifiedUpdateSquareChatProfileImage() {
    this.notifiedUpdateSquareChatProfileImage = null;
  }

  // notifiedUpdateSquareStatus
  SquareEventNotifiedUpdateSquareStatus get notifiedUpdateSquareStatus => this._notifiedUpdateSquareStatus;

  set notifiedUpdateSquareStatus(SquareEventNotifiedUpdateSquareStatus notifiedUpdateSquareStatus) {
    this._notifiedUpdateSquareStatus = notifiedUpdateSquareStatus;
  }

  bool isSetNotifiedUpdateSquareStatus() => this.notifiedUpdateSquareStatus != null;

  unsetNotifiedUpdateSquareStatus() {
    this.notifiedUpdateSquareStatus = null;
  }

  // notifiedUpdateSquareChatStatus
  SquareEventNotifiedUpdateSquareChatStatus get notifiedUpdateSquareChatStatus => this._notifiedUpdateSquareChatStatus;

  set notifiedUpdateSquareChatStatus(SquareEventNotifiedUpdateSquareChatStatus notifiedUpdateSquareChatStatus) {
    this._notifiedUpdateSquareChatStatus = notifiedUpdateSquareChatStatus;
  }

  bool isSetNotifiedUpdateSquareChatStatus() => this.notifiedUpdateSquareChatStatus != null;

  unsetNotifiedUpdateSquareChatStatus() {
    this.notifiedUpdateSquareChatStatus = null;
  }

  // notifiedCreateSquareMember
  SquareEventNotifiedCreateSquareMember get notifiedCreateSquareMember => this._notifiedCreateSquareMember;

  set notifiedCreateSquareMember(SquareEventNotifiedCreateSquareMember notifiedCreateSquareMember) {
    this._notifiedCreateSquareMember = notifiedCreateSquareMember;
  }

  bool isSetNotifiedCreateSquareMember() => this.notifiedCreateSquareMember != null;

  unsetNotifiedCreateSquareMember() {
    this.notifiedCreateSquareMember = null;
  }

  // notifiedCreateSquareChatMember
  SquareEventNotifiedCreateSquareChatMember get notifiedCreateSquareChatMember => this._notifiedCreateSquareChatMember;

  set notifiedCreateSquareChatMember(SquareEventNotifiedCreateSquareChatMember notifiedCreateSquareChatMember) {
    this._notifiedCreateSquareChatMember = notifiedCreateSquareChatMember;
  }

  bool isSetNotifiedCreateSquareChatMember() => this.notifiedCreateSquareChatMember != null;

  unsetNotifiedCreateSquareChatMember() {
    this.notifiedCreateSquareChatMember = null;
  }

  // notifiedUpdateSquareMemberRelation
  SquareEventNotifiedUpdateSquareMemberRelation get notifiedUpdateSquareMemberRelation => this._notifiedUpdateSquareMemberRelation;

  set notifiedUpdateSquareMemberRelation(SquareEventNotifiedUpdateSquareMemberRelation notifiedUpdateSquareMemberRelation) {
    this._notifiedUpdateSquareMemberRelation = notifiedUpdateSquareMemberRelation;
  }

  bool isSetNotifiedUpdateSquareMemberRelation() => this.notifiedUpdateSquareMemberRelation != null;

  unsetNotifiedUpdateSquareMemberRelation() {
    this.notifiedUpdateSquareMemberRelation = null;
  }

  // notifiedUpdateSquare
  SquareEventNotifiedUpdateSquare get notifiedUpdateSquare => this._notifiedUpdateSquare;

  set notifiedUpdateSquare(SquareEventNotifiedUpdateSquare notifiedUpdateSquare) {
    this._notifiedUpdateSquare = notifiedUpdateSquare;
  }

  bool isSetNotifiedUpdateSquare() => this.notifiedUpdateSquare != null;

  unsetNotifiedUpdateSquare() {
    this.notifiedUpdateSquare = null;
  }

  // notifiedUpdateSquareMember
  SquareEventNotifiedUpdateSquareMember get notifiedUpdateSquareMember => this._notifiedUpdateSquareMember;

  set notifiedUpdateSquareMember(SquareEventNotifiedUpdateSquareMember notifiedUpdateSquareMember) {
    this._notifiedUpdateSquareMember = notifiedUpdateSquareMember;
  }

  bool isSetNotifiedUpdateSquareMember() => this.notifiedUpdateSquareMember != null;

  unsetNotifiedUpdateSquareMember() {
    this.notifiedUpdateSquareMember = null;
  }

  // notifiedUpdateSquareChat
  SquareEventNotifiedUpdateSquareChat get notifiedUpdateSquareChat => this._notifiedUpdateSquareChat;

  set notifiedUpdateSquareChat(SquareEventNotifiedUpdateSquareChat notifiedUpdateSquareChat) {
    this._notifiedUpdateSquareChat = notifiedUpdateSquareChat;
  }

  bool isSetNotifiedUpdateSquareChat() => this.notifiedUpdateSquareChat != null;

  unsetNotifiedUpdateSquareChat() {
    this.notifiedUpdateSquareChat = null;
  }

  // notificationJoinRequest
  SquareEventNotificationJoinRequest get notificationJoinRequest => this._notificationJoinRequest;

  set notificationJoinRequest(SquareEventNotificationJoinRequest notificationJoinRequest) {
    this._notificationJoinRequest = notificationJoinRequest;
  }

  bool isSetNotificationJoinRequest() => this.notificationJoinRequest != null;

  unsetNotificationJoinRequest() {
    this.notificationJoinRequest = null;
  }

  // notificationJoined
  SquareEventNotificationMemberUpdate get notificationJoined => this._notificationJoined;

  set notificationJoined(SquareEventNotificationMemberUpdate notificationJoined) {
    this._notificationJoined = notificationJoined;
  }

  bool isSetNotificationJoined() => this.notificationJoined != null;

  unsetNotificationJoined() {
    this.notificationJoined = null;
  }

  // notificationPromoteCoadmin
  SquareEventNotificationMemberUpdate get notificationPromoteCoadmin => this._notificationPromoteCoadmin;

  set notificationPromoteCoadmin(SquareEventNotificationMemberUpdate notificationPromoteCoadmin) {
    this._notificationPromoteCoadmin = notificationPromoteCoadmin;
  }

  bool isSetNotificationPromoteCoadmin() => this.notificationPromoteCoadmin != null;

  unsetNotificationPromoteCoadmin() {
    this.notificationPromoteCoadmin = null;
  }

  // notificationPromoteAdmin
  SquareEventNotificationMemberUpdate get notificationPromoteAdmin => this._notificationPromoteAdmin;

  set notificationPromoteAdmin(SquareEventNotificationMemberUpdate notificationPromoteAdmin) {
    this._notificationPromoteAdmin = notificationPromoteAdmin;
  }

  bool isSetNotificationPromoteAdmin() => this.notificationPromoteAdmin != null;

  unsetNotificationPromoteAdmin() {
    this.notificationPromoteAdmin = null;
  }

  // notificationDemoteMember
  SquareEventNotificationMemberUpdate get notificationDemoteMember => this._notificationDemoteMember;

  set notificationDemoteMember(SquareEventNotificationMemberUpdate notificationDemoteMember) {
    this._notificationDemoteMember = notificationDemoteMember;
  }

  bool isSetNotificationDemoteMember() => this.notificationDemoteMember != null;

  unsetNotificationDemoteMember() {
    this.notificationDemoteMember = null;
  }

  // notificationKickedOut
  SquareEventNotificationMemberUpdate get notificationKickedOut => this._notificationKickedOut;

  set notificationKickedOut(SquareEventNotificationMemberUpdate notificationKickedOut) {
    this._notificationKickedOut = notificationKickedOut;
  }

  bool isSetNotificationKickedOut() => this.notificationKickedOut != null;

  unsetNotificationKickedOut() {
    this.notificationKickedOut = null;
  }

  // notificationSquareDelete
  SquareEventNotificationSquareDelete get notificationSquareDelete => this._notificationSquareDelete;

  set notificationSquareDelete(SquareEventNotificationSquareDelete notificationSquareDelete) {
    this._notificationSquareDelete = notificationSquareDelete;
  }

  bool isSetNotificationSquareDelete() => this.notificationSquareDelete != null;

  unsetNotificationSquareDelete() {
    this.notificationSquareDelete = null;
  }

  // notificationSquareChatDelete
  SquareEventNotificationSquareChatDelete get notificationSquareChatDelete => this._notificationSquareChatDelete;

  set notificationSquareChatDelete(SquareEventNotificationSquareChatDelete notificationSquareChatDelete) {
    this._notificationSquareChatDelete = notificationSquareChatDelete;
  }

  bool isSetNotificationSquareChatDelete() => this.notificationSquareChatDelete != null;

  unsetNotificationSquareChatDelete() {
    this.notificationSquareChatDelete = null;
  }

  // notificationMessage
  SquareEventNotificationMessage get notificationMessage => this._notificationMessage;

  set notificationMessage(SquareEventNotificationMessage notificationMessage) {
    this._notificationMessage = notificationMessage;
  }

  bool isSetNotificationMessage() => this.notificationMessage != null;

  unsetNotificationMessage() {
    this.notificationMessage = null;
  }

  // notifiedUpdateSquareChatMember
  SquareEventNotifiedUpdateSquareChatMember get notifiedUpdateSquareChatMember => this._notifiedUpdateSquareChatMember;

  set notifiedUpdateSquareChatMember(SquareEventNotifiedUpdateSquareChatMember notifiedUpdateSquareChatMember) {
    this._notifiedUpdateSquareChatMember = notifiedUpdateSquareChatMember;
  }

  bool isSetNotifiedUpdateSquareChatMember() => this.notifiedUpdateSquareChatMember != null;

  unsetNotifiedUpdateSquareChatMember() {
    this.notifiedUpdateSquareChatMember = null;
  }

  // notifiedUpdateSquareAuthority
  SquareEventNotifiedUpdateSquareAuthority get notifiedUpdateSquareAuthority => this._notifiedUpdateSquareAuthority;

  set notifiedUpdateSquareAuthority(SquareEventNotifiedUpdateSquareAuthority notifiedUpdateSquareAuthority) {
    this._notifiedUpdateSquareAuthority = notifiedUpdateSquareAuthority;
  }

  bool isSetNotifiedUpdateSquareAuthority() => this.notifiedUpdateSquareAuthority != null;

  unsetNotifiedUpdateSquareAuthority() {
    this.notifiedUpdateSquareAuthority = null;
  }

  // notifiedUpdateSquareFeatureSet
  SquareEventNotifiedUpdateSquareFeatureSet get notifiedUpdateSquareFeatureSet => this._notifiedUpdateSquareFeatureSet;

  set notifiedUpdateSquareFeatureSet(SquareEventNotifiedUpdateSquareFeatureSet notifiedUpdateSquareFeatureSet) {
    this._notifiedUpdateSquareFeatureSet = notifiedUpdateSquareFeatureSet;
  }

  bool isSetNotifiedUpdateSquareFeatureSet() => this.notifiedUpdateSquareFeatureSet != null;

  unsetNotifiedUpdateSquareFeatureSet() {
    this.notifiedUpdateSquareFeatureSet = null;
  }

  getFieldValue(int fieldID) {
    switch (fieldID) {
      case RECEIVEMESSAGE:
        return this.receiveMessage;
      case SENDMESSAGE:
        return this.sendMessage;
      case NOTIFIEDJOINSQUARECHAT:
        return this.notifiedJoinSquareChat;
      case NOTIFIEDINVITEINTOSQUARECHAT:
        return this.notifiedInviteIntoSquareChat;
      case NOTIFIEDLEAVESQUARECHAT:
        return this.notifiedLeaveSquareChat;
      case NOTIFIEDDESTROYMESSAGE:
        return this.notifiedDestroyMessage;
      case NOTIFIEDMARKASREAD:
        return this.notifiedMarkAsRead;
      case NOTIFIEDUPDATESQUAREMEMBERPROFILE:
        return this.notifiedUpdateSquareMemberProfile;
      case NOTIFIEDKICKOUTFROMSQUARE:
        return this.notifiedKickoutFromSquare;
      case NOTIFIEDSHUTDOWNSQUARE:
        return this.notifiedShutdownSquare;
      case NOTIFIEDDELETESQUARECHAT:
        return this.notifiedDeleteSquareChat;
      case NOTIFIEDUPDATESQUARECHATPROFILENAME:
        return this.notifiedUpdateSquareChatProfileName;
      case NOTIFIEDUPDATESQUARECHATPROFILEIMAGE:
        return this.notifiedUpdateSquareChatProfileImage;
      case NOTIFIEDUPDATESQUARESTATUS:
        return this.notifiedUpdateSquareStatus;
      case NOTIFIEDUPDATESQUARECHATSTATUS:
        return this.notifiedUpdateSquareChatStatus;
      case NOTIFIEDCREATESQUAREMEMBER:
        return this.notifiedCreateSquareMember;
      case NOTIFIEDCREATESQUARECHATMEMBER:
        return this.notifiedCreateSquareChatMember;
      case NOTIFIEDUPDATESQUAREMEMBERRELATION:
        return this.notifiedUpdateSquareMemberRelation;
      case NOTIFIEDUPDATESQUARE:
        return this.notifiedUpdateSquare;
      case NOTIFIEDUPDATESQUAREMEMBER:
        return this.notifiedUpdateSquareMember;
      case NOTIFIEDUPDATESQUARECHAT:
        return this.notifiedUpdateSquareChat;
      case NOTIFICATIONJOINREQUEST:
        return this.notificationJoinRequest;
      case NOTIFICATIONJOINED:
        return this.notificationJoined;
      case NOTIFICATIONPROMOTECOADMIN:
        return this.notificationPromoteCoadmin;
      case NOTIFICATIONPROMOTEADMIN:
        return this.notificationPromoteAdmin;
      case NOTIFICATIONDEMOTEMEMBER:
        return this.notificationDemoteMember;
      case NOTIFICATIONKICKEDOUT:
        return this.notificationKickedOut;
      case NOTIFICATIONSQUAREDELETE:
        return this.notificationSquareDelete;
      case NOTIFICATIONSQUARECHATDELETE:
        return this.notificationSquareChatDelete;
      case NOTIFICATIONMESSAGE:
        return this.notificationMessage;
      case NOTIFIEDUPDATESQUARECHATMEMBER:
        return this.notifiedUpdateSquareChatMember;
      case NOTIFIEDUPDATESQUAREAUTHORITY:
        return this.notifiedUpdateSquareAuthority;
      case NOTIFIEDUPDATESQUAREFEATURESET:
        return this.notifiedUpdateSquareFeatureSet;
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
      case RECEIVEMESSAGE:
        if (value == null) {
          unsetReceiveMessage();
        } else {
          this.receiveMessage = value;
        }
        break;

      case SENDMESSAGE:
        if (value == null) {
          unsetSendMessage();
        } else {
          this.sendMessage = value;
        }
        break;

      case NOTIFIEDJOINSQUARECHAT:
        if (value == null) {
          unsetNotifiedJoinSquareChat();
        } else {
          this.notifiedJoinSquareChat = value;
        }
        break;

      case NOTIFIEDINVITEINTOSQUARECHAT:
        if (value == null) {
          unsetNotifiedInviteIntoSquareChat();
        } else {
          this.notifiedInviteIntoSquareChat = value;
        }
        break;

      case NOTIFIEDLEAVESQUARECHAT:
        if (value == null) {
          unsetNotifiedLeaveSquareChat();
        } else {
          this.notifiedLeaveSquareChat = value;
        }
        break;

      case NOTIFIEDDESTROYMESSAGE:
        if (value == null) {
          unsetNotifiedDestroyMessage();
        } else {
          this.notifiedDestroyMessage = value;
        }
        break;

      case NOTIFIEDMARKASREAD:
        if (value == null) {
          unsetNotifiedMarkAsRead();
        } else {
          this.notifiedMarkAsRead = value;
        }
        break;

      case NOTIFIEDUPDATESQUAREMEMBERPROFILE:
        if (value == null) {
          unsetNotifiedUpdateSquareMemberProfile();
        } else {
          this.notifiedUpdateSquareMemberProfile = value;
        }
        break;

      case NOTIFIEDKICKOUTFROMSQUARE:
        if (value == null) {
          unsetNotifiedKickoutFromSquare();
        } else {
          this.notifiedKickoutFromSquare = value;
        }
        break;

      case NOTIFIEDSHUTDOWNSQUARE:
        if (value == null) {
          unsetNotifiedShutdownSquare();
        } else {
          this.notifiedShutdownSquare = value;
        }
        break;

      case NOTIFIEDDELETESQUARECHAT:
        if (value == null) {
          unsetNotifiedDeleteSquareChat();
        } else {
          this.notifiedDeleteSquareChat = value;
        }
        break;

      case NOTIFIEDUPDATESQUARECHATPROFILENAME:
        if (value == null) {
          unsetNotifiedUpdateSquareChatProfileName();
        } else {
          this.notifiedUpdateSquareChatProfileName = value;
        }
        break;

      case NOTIFIEDUPDATESQUARECHATPROFILEIMAGE:
        if (value == null) {
          unsetNotifiedUpdateSquareChatProfileImage();
        } else {
          this.notifiedUpdateSquareChatProfileImage = value;
        }
        break;

      case NOTIFIEDUPDATESQUARESTATUS:
        if (value == null) {
          unsetNotifiedUpdateSquareStatus();
        } else {
          this.notifiedUpdateSquareStatus = value;
        }
        break;

      case NOTIFIEDUPDATESQUARECHATSTATUS:
        if (value == null) {
          unsetNotifiedUpdateSquareChatStatus();
        } else {
          this.notifiedUpdateSquareChatStatus = value;
        }
        break;

      case NOTIFIEDCREATESQUAREMEMBER:
        if (value == null) {
          unsetNotifiedCreateSquareMember();
        } else {
          this.notifiedCreateSquareMember = value;
        }
        break;

      case NOTIFIEDCREATESQUARECHATMEMBER:
        if (value == null) {
          unsetNotifiedCreateSquareChatMember();
        } else {
          this.notifiedCreateSquareChatMember = value;
        }
        break;

      case NOTIFIEDUPDATESQUAREMEMBERRELATION:
        if (value == null) {
          unsetNotifiedUpdateSquareMemberRelation();
        } else {
          this.notifiedUpdateSquareMemberRelation = value;
        }
        break;

      case NOTIFIEDUPDATESQUARE:
        if (value == null) {
          unsetNotifiedUpdateSquare();
        } else {
          this.notifiedUpdateSquare = value;
        }
        break;

      case NOTIFIEDUPDATESQUAREMEMBER:
        if (value == null) {
          unsetNotifiedUpdateSquareMember();
        } else {
          this.notifiedUpdateSquareMember = value;
        }
        break;

      case NOTIFIEDUPDATESQUARECHAT:
        if (value == null) {
          unsetNotifiedUpdateSquareChat();
        } else {
          this.notifiedUpdateSquareChat = value;
        }
        break;

      case NOTIFICATIONJOINREQUEST:
        if (value == null) {
          unsetNotificationJoinRequest();
        } else {
          this.notificationJoinRequest = value;
        }
        break;

      case NOTIFICATIONJOINED:
        if (value == null) {
          unsetNotificationJoined();
        } else {
          this.notificationJoined = value;
        }
        break;

      case NOTIFICATIONPROMOTECOADMIN:
        if (value == null) {
          unsetNotificationPromoteCoadmin();
        } else {
          this.notificationPromoteCoadmin = value;
        }
        break;

      case NOTIFICATIONPROMOTEADMIN:
        if (value == null) {
          unsetNotificationPromoteAdmin();
        } else {
          this.notificationPromoteAdmin = value;
        }
        break;

      case NOTIFICATIONDEMOTEMEMBER:
        if (value == null) {
          unsetNotificationDemoteMember();
        } else {
          this.notificationDemoteMember = value;
        }
        break;

      case NOTIFICATIONKICKEDOUT:
        if (value == null) {
          unsetNotificationKickedOut();
        } else {
          this.notificationKickedOut = value;
        }
        break;

      case NOTIFICATIONSQUAREDELETE:
        if (value == null) {
          unsetNotificationSquareDelete();
        } else {
          this.notificationSquareDelete = value;
        }
        break;

      case NOTIFICATIONSQUARECHATDELETE:
        if (value == null) {
          unsetNotificationSquareChatDelete();
        } else {
          this.notificationSquareChatDelete = value;
        }
        break;

      case NOTIFICATIONMESSAGE:
        if (value == null) {
          unsetNotificationMessage();
        } else {
          this.notificationMessage = value;
        }
        break;

      case NOTIFIEDUPDATESQUARECHATMEMBER:
        if (value == null) {
          unsetNotifiedUpdateSquareChatMember();
        } else {
          this.notifiedUpdateSquareChatMember = value;
        }
        break;

      case NOTIFIEDUPDATESQUAREAUTHORITY:
        if (value == null) {
          unsetNotifiedUpdateSquareAuthority();
        } else {
          this.notifiedUpdateSquareAuthority = value;
        }
        break;

      case NOTIFIEDUPDATESQUAREFEATURESET:
        if (value == null) {
          unsetNotifiedUpdateSquareFeatureSet();
        } else {
          this.notifiedUpdateSquareFeatureSet = value;
        }
        break;

      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  bool isSet(int fieldID) {
    switch (fieldID) {
      case RECEIVEMESSAGE:
        return isSetReceiveMessage();
      case SENDMESSAGE:
        return isSetSendMessage();
      case NOTIFIEDJOINSQUARECHAT:
        return isSetNotifiedJoinSquareChat();
      case NOTIFIEDINVITEINTOSQUARECHAT:
        return isSetNotifiedInviteIntoSquareChat();
      case NOTIFIEDLEAVESQUARECHAT:
        return isSetNotifiedLeaveSquareChat();
      case NOTIFIEDDESTROYMESSAGE:
        return isSetNotifiedDestroyMessage();
      case NOTIFIEDMARKASREAD:
        return isSetNotifiedMarkAsRead();
      case NOTIFIEDUPDATESQUAREMEMBERPROFILE:
        return isSetNotifiedUpdateSquareMemberProfile();
      case NOTIFIEDKICKOUTFROMSQUARE:
        return isSetNotifiedKickoutFromSquare();
      case NOTIFIEDSHUTDOWNSQUARE:
        return isSetNotifiedShutdownSquare();
      case NOTIFIEDDELETESQUARECHAT:
        return isSetNotifiedDeleteSquareChat();
      case NOTIFIEDUPDATESQUARECHATPROFILENAME:
        return isSetNotifiedUpdateSquareChatProfileName();
      case NOTIFIEDUPDATESQUARECHATPROFILEIMAGE:
        return isSetNotifiedUpdateSquareChatProfileImage();
      case NOTIFIEDUPDATESQUARESTATUS:
        return isSetNotifiedUpdateSquareStatus();
      case NOTIFIEDUPDATESQUARECHATSTATUS:
        return isSetNotifiedUpdateSquareChatStatus();
      case NOTIFIEDCREATESQUAREMEMBER:
        return isSetNotifiedCreateSquareMember();
      case NOTIFIEDCREATESQUARECHATMEMBER:
        return isSetNotifiedCreateSquareChatMember();
      case NOTIFIEDUPDATESQUAREMEMBERRELATION:
        return isSetNotifiedUpdateSquareMemberRelation();
      case NOTIFIEDUPDATESQUARE:
        return isSetNotifiedUpdateSquare();
      case NOTIFIEDUPDATESQUAREMEMBER:
        return isSetNotifiedUpdateSquareMember();
      case NOTIFIEDUPDATESQUARECHAT:
        return isSetNotifiedUpdateSquareChat();
      case NOTIFICATIONJOINREQUEST:
        return isSetNotificationJoinRequest();
      case NOTIFICATIONJOINED:
        return isSetNotificationJoined();
      case NOTIFICATIONPROMOTECOADMIN:
        return isSetNotificationPromoteCoadmin();
      case NOTIFICATIONPROMOTEADMIN:
        return isSetNotificationPromoteAdmin();
      case NOTIFICATIONDEMOTEMEMBER:
        return isSetNotificationDemoteMember();
      case NOTIFICATIONKICKEDOUT:
        return isSetNotificationKickedOut();
      case NOTIFICATIONSQUAREDELETE:
        return isSetNotificationSquareDelete();
      case NOTIFICATIONSQUARECHATDELETE:
        return isSetNotificationSquareChatDelete();
      case NOTIFICATIONMESSAGE:
        return isSetNotificationMessage();
      case NOTIFIEDUPDATESQUARECHATMEMBER:
        return isSetNotifiedUpdateSquareChatMember();
      case NOTIFIEDUPDATESQUAREAUTHORITY:
        return isSetNotifiedUpdateSquareAuthority();
      case NOTIFIEDUPDATESQUAREFEATURESET:
        return isSetNotifiedUpdateSquareFeatureSet();
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  read(TProtocol iprot) {
    TField field;
    iprot.readStructBegin();
    while (true) {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case RECEIVEMESSAGE:
          if (field.type == TType.STRUCT) {
            this.receiveMessage = new SquareEventReceiveMessage();
            this.receiveMessage.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case SENDMESSAGE:
          if (field.type == TType.STRUCT) {
            this.sendMessage = new SquareEventSendMessage();
            this.sendMessage.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDJOINSQUARECHAT:
          if (field.type == TType.STRUCT) {
            this.notifiedJoinSquareChat = new SquareEventNotifiedJoinSquareChat();
            this.notifiedJoinSquareChat.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDINVITEINTOSQUARECHAT:
          if (field.type == TType.STRUCT) {
            this.notifiedInviteIntoSquareChat = new SquareEventNotifiedInviteIntoSquareChat();
            this.notifiedInviteIntoSquareChat.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDLEAVESQUARECHAT:
          if (field.type == TType.STRUCT) {
            this.notifiedLeaveSquareChat = new SquareEventNotifiedLeaveSquareChat();
            this.notifiedLeaveSquareChat.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDDESTROYMESSAGE:
          if (field.type == TType.STRUCT) {
            this.notifiedDestroyMessage = new SquareEventNotifiedDestroyMessage();
            this.notifiedDestroyMessage.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDMARKASREAD:
          if (field.type == TType.STRUCT) {
            this.notifiedMarkAsRead = new SquareEventNotifiedMarkAsRead();
            this.notifiedMarkAsRead.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUAREMEMBERPROFILE:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareMemberProfile = new SquareEventNotifiedUpdateSquareMemberProfile();
            this.notifiedUpdateSquareMemberProfile.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDKICKOUTFROMSQUARE:
          if (field.type == TType.STRUCT) {
            this.notifiedKickoutFromSquare = new SquareEventNotifiedKickoutFromSquare();
            this.notifiedKickoutFromSquare.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDSHUTDOWNSQUARE:
          if (field.type == TType.STRUCT) {
            this.notifiedShutdownSquare = new SquareEventNotifiedShutdownSquare();
            this.notifiedShutdownSquare.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDDELETESQUARECHAT:
          if (field.type == TType.STRUCT) {
            this.notifiedDeleteSquareChat = new SquareEventNotifiedDeleteSquareChat();
            this.notifiedDeleteSquareChat.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUARECHATPROFILENAME:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareChatProfileName = new SquareEventNotifiedUpdateSquareChatProfileName();
            this.notifiedUpdateSquareChatProfileName.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUARECHATPROFILEIMAGE:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareChatProfileImage = new SquareEventNotifiedUpdateSquareChatProfileImage();
            this.notifiedUpdateSquareChatProfileImage.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUARESTATUS:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareStatus = new SquareEventNotifiedUpdateSquareStatus();
            this.notifiedUpdateSquareStatus.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUARECHATSTATUS:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareChatStatus = new SquareEventNotifiedUpdateSquareChatStatus();
            this.notifiedUpdateSquareChatStatus.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDCREATESQUAREMEMBER:
          if (field.type == TType.STRUCT) {
            this.notifiedCreateSquareMember = new SquareEventNotifiedCreateSquareMember();
            this.notifiedCreateSquareMember.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDCREATESQUARECHATMEMBER:
          if (field.type == TType.STRUCT) {
            this.notifiedCreateSquareChatMember = new SquareEventNotifiedCreateSquareChatMember();
            this.notifiedCreateSquareChatMember.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUAREMEMBERRELATION:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareMemberRelation = new SquareEventNotifiedUpdateSquareMemberRelation();
            this.notifiedUpdateSquareMemberRelation.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUARE:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquare = new SquareEventNotifiedUpdateSquare();
            this.notifiedUpdateSquare.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUAREMEMBER:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareMember = new SquareEventNotifiedUpdateSquareMember();
            this.notifiedUpdateSquareMember.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUARECHAT:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareChat = new SquareEventNotifiedUpdateSquareChat();
            this.notifiedUpdateSquareChat.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFICATIONJOINREQUEST:
          if (field.type == TType.STRUCT) {
            this.notificationJoinRequest = new SquareEventNotificationJoinRequest();
            this.notificationJoinRequest.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFICATIONJOINED:
          if (field.type == TType.STRUCT) {
            this.notificationJoined = new SquareEventNotificationMemberUpdate();
            this.notificationJoined.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFICATIONPROMOTECOADMIN:
          if (field.type == TType.STRUCT) {
            this.notificationPromoteCoadmin = new SquareEventNotificationMemberUpdate();
            this.notificationPromoteCoadmin.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFICATIONPROMOTEADMIN:
          if (field.type == TType.STRUCT) {
            this.notificationPromoteAdmin = new SquareEventNotificationMemberUpdate();
            this.notificationPromoteAdmin.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFICATIONDEMOTEMEMBER:
          if (field.type == TType.STRUCT) {
            this.notificationDemoteMember = new SquareEventNotificationMemberUpdate();
            this.notificationDemoteMember.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFICATIONKICKEDOUT:
          if (field.type == TType.STRUCT) {
            this.notificationKickedOut = new SquareEventNotificationMemberUpdate();
            this.notificationKickedOut.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFICATIONSQUAREDELETE:
          if (field.type == TType.STRUCT) {
            this.notificationSquareDelete = new SquareEventNotificationSquareDelete();
            this.notificationSquareDelete.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFICATIONSQUARECHATDELETE:
          if (field.type == TType.STRUCT) {
            this.notificationSquareChatDelete = new SquareEventNotificationSquareChatDelete();
            this.notificationSquareChatDelete.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFICATIONMESSAGE:
          if (field.type == TType.STRUCT) {
            this.notificationMessage = new SquareEventNotificationMessage();
            this.notificationMessage.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUARECHATMEMBER:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareChatMember = new SquareEventNotifiedUpdateSquareChatMember();
            this.notifiedUpdateSquareChatMember.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUAREAUTHORITY:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareAuthority = new SquareEventNotifiedUpdateSquareAuthority();
            this.notifiedUpdateSquareAuthority.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case NOTIFIEDUPDATESQUAREFEATURESET:
          if (field.type == TType.STRUCT) {
            this.notifiedUpdateSquareFeatureSet = new SquareEventNotifiedUpdateSquareFeatureSet();
            this.notifiedUpdateSquareFeatureSet.read(iprot);
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  write(TProtocol oprot) {
    validate();

    oprot.writeStructBegin(_STRUCT_DESC);
    if (this.receiveMessage != null) {
      oprot.writeFieldBegin(_RECEIVE_MESSAGE_FIELD_DESC);
      this.receiveMessage.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.sendMessage != null) {
      oprot.writeFieldBegin(_SEND_MESSAGE_FIELD_DESC);
      this.sendMessage.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedJoinSquareChat != null) {
      oprot.writeFieldBegin(_NOTIFIED_JOIN_SQUARE_CHAT_FIELD_DESC);
      this.notifiedJoinSquareChat.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedInviteIntoSquareChat != null) {
      oprot.writeFieldBegin(_NOTIFIED_INVITE_INTO_SQUARE_CHAT_FIELD_DESC);
      this.notifiedInviteIntoSquareChat.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedLeaveSquareChat != null) {
      oprot.writeFieldBegin(_NOTIFIED_LEAVE_SQUARE_CHAT_FIELD_DESC);
      this.notifiedLeaveSquareChat.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedDestroyMessage != null) {
      oprot.writeFieldBegin(_NOTIFIED_DESTROY_MESSAGE_FIELD_DESC);
      this.notifiedDestroyMessage.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedMarkAsRead != null) {
      oprot.writeFieldBegin(_NOTIFIED_MARK_AS_READ_FIELD_DESC);
      this.notifiedMarkAsRead.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareMemberProfile != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE_FIELD_DESC);
      this.notifiedUpdateSquareMemberProfile.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquare != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_FIELD_DESC);
      this.notifiedUpdateSquare.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareMember != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_MEMBER_FIELD_DESC);
      this.notifiedUpdateSquareMember.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareChat != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_CHAT_FIELD_DESC);
      this.notifiedUpdateSquareChat.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareChatMember != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER_FIELD_DESC);
      this.notifiedUpdateSquareChatMember.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareAuthority != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_AUTHORITY_FIELD_DESC);
      this.notifiedUpdateSquareAuthority.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareStatus != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_STATUS_FIELD_DESC);
      this.notifiedUpdateSquareStatus.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareChatStatus != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_CHAT_STATUS_FIELD_DESC);
      this.notifiedUpdateSquareChatStatus.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedCreateSquareMember != null) {
      oprot.writeFieldBegin(_NOTIFIED_CREATE_SQUARE_MEMBER_FIELD_DESC);
      this.notifiedCreateSquareMember.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedCreateSquareChatMember != null) {
      oprot.writeFieldBegin(_NOTIFIED_CREATE_SQUARE_CHAT_MEMBER_FIELD_DESC);
      this.notifiedCreateSquareChatMember.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareMemberRelation != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION_FIELD_DESC);
      this.notifiedUpdateSquareMemberRelation.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedShutdownSquare != null) {
      oprot.writeFieldBegin(_NOTIFIED_SHUTDOWN_SQUARE_FIELD_DESC);
      this.notifiedShutdownSquare.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedKickoutFromSquare != null) {
      oprot.writeFieldBegin(_NOTIFIED_KICKOUT_FROM_SQUARE_FIELD_DESC);
      this.notifiedKickoutFromSquare.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedDeleteSquareChat != null) {
      oprot.writeFieldBegin(_NOTIFIED_DELETE_SQUARE_CHAT_FIELD_DESC);
      this.notifiedDeleteSquareChat.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notificationJoinRequest != null) {
      oprot.writeFieldBegin(_NOTIFICATION_JOIN_REQUEST_FIELD_DESC);
      this.notificationJoinRequest.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notificationJoined != null) {
      oprot.writeFieldBegin(_NOTIFICATION_JOINED_FIELD_DESC);
      this.notificationJoined.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notificationPromoteCoadmin != null) {
      oprot.writeFieldBegin(_NOTIFICATION_PROMOTE_COADMIN_FIELD_DESC);
      this.notificationPromoteCoadmin.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notificationPromoteAdmin != null) {
      oprot.writeFieldBegin(_NOTIFICATION_PROMOTE_ADMIN_FIELD_DESC);
      this.notificationPromoteAdmin.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notificationDemoteMember != null) {
      oprot.writeFieldBegin(_NOTIFICATION_DEMOTE_MEMBER_FIELD_DESC);
      this.notificationDemoteMember.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notificationKickedOut != null) {
      oprot.writeFieldBegin(_NOTIFICATION_KICKED_OUT_FIELD_DESC);
      this.notificationKickedOut.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notificationSquareDelete != null) {
      oprot.writeFieldBegin(_NOTIFICATION_SQUARE_DELETE_FIELD_DESC);
      this.notificationSquareDelete.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notificationSquareChatDelete != null) {
      oprot.writeFieldBegin(_NOTIFICATION_SQUARE_CHAT_DELETE_FIELD_DESC);
      this.notificationSquareChatDelete.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notificationMessage != null) {
      oprot.writeFieldBegin(_NOTIFICATION_MESSAGE_FIELD_DESC);
      this.notificationMessage.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareChatProfileName != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME_FIELD_DESC);
      this.notifiedUpdateSquareChatProfileName.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareChatProfileImage != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE_FIELD_DESC);
      this.notifiedUpdateSquareChatProfileImage.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.notifiedUpdateSquareFeatureSet != null) {
      oprot.writeFieldBegin(_NOTIFIED_UPDATE_SQUARE_FEATURE_SET_FIELD_DESC);
      this.notifiedUpdateSquareFeatureSet.write(oprot);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  String toString() {
    StringBuffer ret = new StringBuffer("SquareEventPayload(");

    ret.write("receiveMessage:");
    if (this.receiveMessage == null) {
      ret.write("null");
    } else {
      ret.write(this.receiveMessage);
    }

    ret.write(", ");
    ret.write("sendMessage:");
    if (this.sendMessage == null) {
      ret.write("null");
    } else {
      ret.write(this.sendMessage);
    }

    ret.write(", ");
    ret.write("notifiedJoinSquareChat:");
    if (this.notifiedJoinSquareChat == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedJoinSquareChat);
    }

    ret.write(", ");
    ret.write("notifiedInviteIntoSquareChat:");
    if (this.notifiedInviteIntoSquareChat == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedInviteIntoSquareChat);
    }

    ret.write(", ");
    ret.write("notifiedLeaveSquareChat:");
    if (this.notifiedLeaveSquareChat == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedLeaveSquareChat);
    }

    ret.write(", ");
    ret.write("notifiedDestroyMessage:");
    if (this.notifiedDestroyMessage == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedDestroyMessage);
    }

    ret.write(", ");
    ret.write("notifiedMarkAsRead:");
    if (this.notifiedMarkAsRead == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedMarkAsRead);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareMemberProfile:");
    if (this.notifiedUpdateSquareMemberProfile == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareMemberProfile);
    }

    ret.write(", ");
    ret.write("notifiedKickoutFromSquare:");
    if (this.notifiedKickoutFromSquare == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedKickoutFromSquare);
    }

    ret.write(", ");
    ret.write("notifiedShutdownSquare:");
    if (this.notifiedShutdownSquare == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedShutdownSquare);
    }

    ret.write(", ");
    ret.write("notifiedDeleteSquareChat:");
    if (this.notifiedDeleteSquareChat == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedDeleteSquareChat);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareChatProfileName:");
    if (this.notifiedUpdateSquareChatProfileName == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareChatProfileName);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareChatProfileImage:");
    if (this.notifiedUpdateSquareChatProfileImage == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareChatProfileImage);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareStatus:");
    if (this.notifiedUpdateSquareStatus == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareStatus);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareChatStatus:");
    if (this.notifiedUpdateSquareChatStatus == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareChatStatus);
    }

    ret.write(", ");
    ret.write("notifiedCreateSquareMember:");
    if (this.notifiedCreateSquareMember == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedCreateSquareMember);
    }

    ret.write(", ");
    ret.write("notifiedCreateSquareChatMember:");
    if (this.notifiedCreateSquareChatMember == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedCreateSquareChatMember);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareMemberRelation:");
    if (this.notifiedUpdateSquareMemberRelation == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareMemberRelation);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquare:");
    if (this.notifiedUpdateSquare == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquare);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareMember:");
    if (this.notifiedUpdateSquareMember == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareMember);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareChat:");
    if (this.notifiedUpdateSquareChat == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareChat);
    }

    ret.write(", ");
    ret.write("notificationJoinRequest:");
    if (this.notificationJoinRequest == null) {
      ret.write("null");
    } else {
      ret.write(this.notificationJoinRequest);
    }

    ret.write(", ");
    ret.write("notificationJoined:");
    if (this.notificationJoined == null) {
      ret.write("null");
    } else {
      ret.write(this.notificationJoined);
    }

    ret.write(", ");
    ret.write("notificationPromoteCoadmin:");
    if (this.notificationPromoteCoadmin == null) {
      ret.write("null");
    } else {
      ret.write(this.notificationPromoteCoadmin);
    }

    ret.write(", ");
    ret.write("notificationPromoteAdmin:");
    if (this.notificationPromoteAdmin == null) {
      ret.write("null");
    } else {
      ret.write(this.notificationPromoteAdmin);
    }

    ret.write(", ");
    ret.write("notificationDemoteMember:");
    if (this.notificationDemoteMember == null) {
      ret.write("null");
    } else {
      ret.write(this.notificationDemoteMember);
    }

    ret.write(", ");
    ret.write("notificationKickedOut:");
    if (this.notificationKickedOut == null) {
      ret.write("null");
    } else {
      ret.write(this.notificationKickedOut);
    }

    ret.write(", ");
    ret.write("notificationSquareDelete:");
    if (this.notificationSquareDelete == null) {
      ret.write("null");
    } else {
      ret.write(this.notificationSquareDelete);
    }

    ret.write(", ");
    ret.write("notificationSquareChatDelete:");
    if (this.notificationSquareChatDelete == null) {
      ret.write("null");
    } else {
      ret.write(this.notificationSquareChatDelete);
    }

    ret.write(", ");
    ret.write("notificationMessage:");
    if (this.notificationMessage == null) {
      ret.write("null");
    } else {
      ret.write(this.notificationMessage);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareChatMember:");
    if (this.notifiedUpdateSquareChatMember == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareChatMember);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareAuthority:");
    if (this.notifiedUpdateSquareAuthority == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareAuthority);
    }

    ret.write(", ");
    ret.write("notifiedUpdateSquareFeatureSet:");
    if (this.notifiedUpdateSquareFeatureSet == null) {
      ret.write("null");
    } else {
      ret.write(this.notifiedUpdateSquareFeatureSet);
    }

    ret.write(")");

    return ret.toString();
  }

  validate() {
    // check for required fields
    // check that fields of type enum have valid values
  }

}

