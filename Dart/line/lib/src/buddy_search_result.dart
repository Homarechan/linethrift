/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
library line.src.buddy_search_result;

import 'dart:typed_data' show Uint8List;
import 'package:thrift/thrift.dart';
import 'package:line/line.dart';

class BuddySearchResult implements TBase {
  static final TStruct _STRUCT_DESC = new TStruct("BuddySearchResult");
  static final TField _MID_FIELD_DESC = new TField("mid", TType.STRING, 1);
  static final TField _DISPLAY_NAME_FIELD_DESC = new TField("displayName", TType.STRING, 2);
  static final TField _PICTURE_STATUS_FIELD_DESC = new TField("pictureStatus", TType.STRING, 3);
  static final TField _PICTURE_PATH_FIELD_DESC = new TField("picturePath", TType.STRING, 4);
  static final TField _STATUS_MESSAGE_FIELD_DESC = new TField("statusMessage", TType.STRING, 5);
  static final TField _BUSINESS_ACCOUNT_FIELD_DESC = new TField("businessAccount", TType.BOOL, 6);

  String _mid;
  static const int MID = 1;
  String _displayName;
  static const int DISPLAYNAME = 2;
  String _pictureStatus;
  static const int PICTURESTATUS = 3;
  String _picturePath;
  static const int PICTUREPATH = 4;
  String _statusMessage;
  static const int STATUSMESSAGE = 5;
  bool _businessAccount = false;
  static const int BUSINESSACCOUNT = 6;

  bool __isset_businessAccount = false;

  BuddySearchResult() {
  }

  // mid
  String get mid => this._mid;

  set mid(String mid) {
    this._mid = mid;
  }

  bool isSetMid() => this.mid != null;

  unsetMid() {
    this.mid = null;
  }

  // displayName
  String get displayName => this._displayName;

  set displayName(String displayName) {
    this._displayName = displayName;
  }

  bool isSetDisplayName() => this.displayName != null;

  unsetDisplayName() {
    this.displayName = null;
  }

  // pictureStatus
  String get pictureStatus => this._pictureStatus;

  set pictureStatus(String pictureStatus) {
    this._pictureStatus = pictureStatus;
  }

  bool isSetPictureStatus() => this.pictureStatus != null;

  unsetPictureStatus() {
    this.pictureStatus = null;
  }

  // picturePath
  String get picturePath => this._picturePath;

  set picturePath(String picturePath) {
    this._picturePath = picturePath;
  }

  bool isSetPicturePath() => this.picturePath != null;

  unsetPicturePath() {
    this.picturePath = null;
  }

  // statusMessage
  String get statusMessage => this._statusMessage;

  set statusMessage(String statusMessage) {
    this._statusMessage = statusMessage;
  }

  bool isSetStatusMessage() => this.statusMessage != null;

  unsetStatusMessage() {
    this.statusMessage = null;
  }

  // businessAccount
  bool get businessAccount => this._businessAccount;

  set businessAccount(bool businessAccount) {
    this._businessAccount = businessAccount;
    this.__isset_businessAccount = true;
  }

  bool isSetBusinessAccount() => this.__isset_businessAccount;

  unsetBusinessAccount() {
    this.__isset_businessAccount = false;
  }

  getFieldValue(int fieldID) {
    switch (fieldID) {
      case MID:
        return this.mid;
      case DISPLAYNAME:
        return this.displayName;
      case PICTURESTATUS:
        return this.pictureStatus;
      case PICTUREPATH:
        return this.picturePath;
      case STATUSMESSAGE:
        return this.statusMessage;
      case BUSINESSACCOUNT:
        return this.businessAccount;
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
      case MID:
        if (value == null) {
          unsetMid();
        } else {
          this.mid = value;
        }
        break;

      case DISPLAYNAME:
        if (value == null) {
          unsetDisplayName();
        } else {
          this.displayName = value;
        }
        break;

      case PICTURESTATUS:
        if (value == null) {
          unsetPictureStatus();
        } else {
          this.pictureStatus = value;
        }
        break;

      case PICTUREPATH:
        if (value == null) {
          unsetPicturePath();
        } else {
          this.picturePath = value;
        }
        break;

      case STATUSMESSAGE:
        if (value == null) {
          unsetStatusMessage();
        } else {
          this.statusMessage = value;
        }
        break;

      case BUSINESSACCOUNT:
        if (value == null) {
          unsetBusinessAccount();
        } else {
          this.businessAccount = value;
        }
        break;

      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
  bool isSet(int fieldID) {
    switch (fieldID) {
      case MID:
        return isSetMid();
      case DISPLAYNAME:
        return isSetDisplayName();
      case PICTURESTATUS:
        return isSetPictureStatus();
      case PICTUREPATH:
        return isSetPicturePath();
      case STATUSMESSAGE:
        return isSetStatusMessage();
      case BUSINESSACCOUNT:
        return isSetBusinessAccount();
      default:
        throw new ArgumentError("Field $fieldID doesn't exist!");
    }
  }

  read(TProtocol iprot) {
    TField field;
    iprot.readStructBegin();
    while (true) {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) {
        break;
      }
      switch (field.id) {
        case MID:
          if (field.type == TType.STRING) {
            this.mid = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case DISPLAYNAME:
          if (field.type == TType.STRING) {
            this.displayName = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case PICTURESTATUS:
          if (field.type == TType.STRING) {
            this.pictureStatus = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case PICTUREPATH:
          if (field.type == TType.STRING) {
            this.picturePath = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case STATUSMESSAGE:
          if (field.type == TType.STRING) {
            this.statusMessage = iprot.readString();
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case BUSINESSACCOUNT:
          if (field.type == TType.BOOL) {
            this.businessAccount = iprot.readBool();
            this.__isset_businessAccount = true;
          } else {
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  write(TProtocol oprot) {
    validate();

    oprot.writeStructBegin(_STRUCT_DESC);
    if (this.mid != null) {
      oprot.writeFieldBegin(_MID_FIELD_DESC);
      oprot.writeString(this.mid);
      oprot.writeFieldEnd();
    }
    if (this.displayName != null) {
      oprot.writeFieldBegin(_DISPLAY_NAME_FIELD_DESC);
      oprot.writeString(this.displayName);
      oprot.writeFieldEnd();
    }
    if (this.pictureStatus != null) {
      oprot.writeFieldBegin(_PICTURE_STATUS_FIELD_DESC);
      oprot.writeString(this.pictureStatus);
      oprot.writeFieldEnd();
    }
    if (this.picturePath != null) {
      oprot.writeFieldBegin(_PICTURE_PATH_FIELD_DESC);
      oprot.writeString(this.picturePath);
      oprot.writeFieldEnd();
    }
    if (this.statusMessage != null) {
      oprot.writeFieldBegin(_STATUS_MESSAGE_FIELD_DESC);
      oprot.writeString(this.statusMessage);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldBegin(_BUSINESS_ACCOUNT_FIELD_DESC);
    oprot.writeBool(this.businessAccount);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  String toString() {
    StringBuffer ret = new StringBuffer("BuddySearchResult(");

    ret.write("mid:");
    if (this.mid == null) {
      ret.write("null");
    } else {
      ret.write(this.mid);
    }

    ret.write(", ");
    ret.write("displayName:");
    if (this.displayName == null) {
      ret.write("null");
    } else {
      ret.write(this.displayName);
    }

    ret.write(", ");
    ret.write("pictureStatus:");
    if (this.pictureStatus == null) {
      ret.write("null");
    } else {
      ret.write(this.pictureStatus);
    }

    ret.write(", ");
    ret.write("picturePath:");
    if (this.picturePath == null) {
      ret.write("null");
    } else {
      ret.write(this.picturePath);
    }

    ret.write(", ");
    ret.write("statusMessage:");
    if (this.statusMessage == null) {
      ret.write("null");
    } else {
      ret.write(this.statusMessage);
    }

    ret.write(", ");
    ret.write("businessAccount:");
    ret.write(this.businessAccount);

    ret.write(")");

    return ret.toString();
  }

  validate() {
    // check for required fields
    // check that fields of type enum have valid values
  }

}

