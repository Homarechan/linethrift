/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
module TalkService;

import thrift.base;
import thrift.codegen.base;
import thrift.util.hashset;

import line_types;

interface TalkService {
  ChatRoomAnnouncement[][string] getChatRoomAnnouncementsBulk(string[] chatRoomMids);
  ChatRoomAnnouncement[] getChatRoomAnnouncements(string chatRoomMid);
  ChatRoomAnnouncement createChatRoomAnnouncement(int reqSeq, string chatRoomMid, ChatRoomAnnouncementType type, ref const(ChatRoomAnnouncementContents) contents);
  void removeChatRoomAnnouncement(int reqSeq, string chatRoomMid, long announcementSeq);
  void unsendMessage(int seq, string messageId);
  Group getGroupWithoutMembers(string groupId);
  void requestResendMessage(int reqSeq, string senderMid, string messageId);
  void respondResendMessage(int reqSeq, string receiverMid, string originalMessageId, ref const(Message) resendMessage, ErrorCode errorCode);
  void acceptGroupInvitation(int reqSeq, string groupId);
  void acceptGroupInvitationByTicket(int reqSeq, string GroupMid, string ticketId);
  void acceptProximityMatches(string sessionId, HashSet!(string) ids);
  string[] acquireCallRoute(string to);
  string acquireCallTicket(string to);
  string acquireEncryptedAccessToken(FeatureType featureType);
  string addSnsId(SnsIdType snsIdType, string snsAccessToken);
  void blockContact(int reqSeq, string id);
  void blockRecommendation(int reqSeq, string id);
  void cancelGroupInvitation(int reqSeq, string groupId, string[] contactIds);
  VerificationSessionData changeVerificationMethod(string sessionId, VerificationMethod method);
  void clearIdentityCredential();
  void clearMessageBox(string channelId, string messageBoxId);
  void closeProximityMatch(string sessionId);
  string[string] commitSendMessage(int seq, string messageId, string[] receiverMids);
  string[string] commitSendMessages(int seq, string[] messageIds, string[] receiverMids);
  string[string] commitUpdateProfile(int seq, ProfileAttribute[] attrs, string[] receiverMids);
  void confirmEmail(string verifier, string pinCode);
  Group createGroup(int seq, string name, string[] contactIds);
  string createQrcodeBase64Image(string url, string characterSet, int imageSize, int x, int y, int width, int height);
  Room createRoom(int reqSeq, string[] contactIds);
  string createSession();
  Announcement[] fetchAnnouncements(int lastFetchedIndex);
  Message[] fetchMessages(long localTs, int count);
  Operation[] fetchOperations(long localRev, int count);
  Operation[] fetchOps(long localRev, int count, long globalRev, long individualRev);
  Contact[string] findAndAddContactsByEmail(int reqSeq, HashSet!(string) emails);
  Contact[string] findAndAddContactsByMid(int reqSeq, string mid, ContactType type, string reference);
  Group findGroupByTicketV2(string ticketId);
  Contact[string] findAndAddContactsByPhone(int reqSeq, HashSet!(string) phones);
  FriendRequest[] getFriendRequests(FriendRequestDirection direction, long lastSeenSeqId);
  void removeFriendRequest(FriendRequestDirection direction, string midOrEMid);
  Contact[string] findAndAddContactsByUserid(int reqSeq, string userid);
  Contact findContactByUserid(string userid);
  Contact findContactByUserTicket(string ticketIdWithTag);
  Contact[string] findContactsByEmail(HashSet!(string) emails);
  Contact[string] findContactsByPhone(HashSet!(string) phones);
  SnsIdUserStatus findSnsIdUserStatus(SnsIdType snsIdType, string snsAccessToken, string udidHash);
  void finishUpdateVerification(string sessionId);
  Ticket generateUserTicket(long expirationTime, int maxUseCount);
  void destroyMessage(int seq, string chatId, string messageId, byte sessionId);
  HashSet!(string) getAcceptedProximityMatches(string sessionId);
  string[] getActiveBuddySubscriberIds();
  string[] getAllContactIds();
  AuthQrcode getAuthQrcode(bool keepLoggedIn, string systemName);
  string[] getBlockedContactIds();
  RegisterWithPhoneNumberResult registerWithPhoneNumber(string sessionId, string migrationPincodeSessionId);
  RegisterWithPhoneNumberResult registerWithPhoneNumberAndPassword(string sessionId, string keynm, string encrypted);
  AnalyticsInfo getAnalyticsInfo();
  void reportClientStatistics(int reqSeq, ReportCategory category, int count);
  string verifyPhoneNumberForLogin(string verifierFromPhone, string pinCodeForPhone, string verifierFromLogin);
  PhoneVerificationResult verifyPhoneNumber(string sessionId, string pinCode, string udidHash, string migrationPincodeSessionId, string oldUdidHash);
  string[] getBlockedContactIdsByRange(int start, int count);
  string[] getBlockedRecommendationIds();
  string[] getBuddyBlockerIds();
  Geolocation getBuddyLocation(string mid, int index);
  CompactContact[] getCompactContactsModifiedSince(long timestamp);
  Group getCompactGroup(string groupId);
  Room getCompactRoom(string roomId);
  Contact getContact(string id);
  Contact[] getContacts(string[] ids);
  Contact getContactWithFriendRequestStatus(string id);
  string getCountryWithRequestIp();
  string[] getFavoriteMids();
  Group getGroup(string groupId);
  string[] getGroupIdsInvited();
  string[] getGroupIdsJoined();
  Group[] getGroups(string[] groupIds);
  string[] getHiddenContactMids();
  string getIdentityIdentifier();
  int getLastAnnouncementIndex();
  long getLastOpRevision();
  SuggestDictionaryRevisions getSuggestRevisions();
  Message[] getPreviousMessagesV2WithReadCount(string messageBoxId, ref const(MessageBoxV2MessageId) endMessageId, int messagesCount);
  TMessageBox getMessageBox(string channelId, string messageBoxId, int lastMessagesCount);
  TMessageBoxWrapUp getMessageBoxCompactWrapUp(string mid);
  TMessageBoxWrapUpResponse getMessageBoxCompactWrapUpList(int start, int messageBoxCount);
  TMessageBox[] getMessageBoxList(string channelId, int lastMessagesCount);
  TMessageBox[] getMessageBoxListByStatus(string channelId, int lastMessagesCount, int status);
  TMessageBoxWrapUp getMessageBoxWrapUp(string mid);
  TMessageBoxWrapUpResponse getMessageBoxWrapUpList(int start, int messageBoxCount);
  Message[] getMessagesBySequenceNumber(string channelId, string messageBoxId, long startSeq, long endSeq);
  Message[] getNextMessages(string messageBoxId, long startSeq, int messagesCount);
  NotificationType[] getNotificationPolicy(CarrierCode carrier);
  Message[] getPreviousMessages(string messageBoxId, long endSeq, int messagesCount);
  Profile getProfile();
  ProximityMatchCandidateResult getProximityMatchCandidateList(string sessionId);
  HashSet!(Contact) getProximityMatchCandidates(string sessionId);
  Message[] getRecentMessages(string messageBoxId, int messagesCount);
  string[] getRecommendationIds();
  Room getRoom(string roomId);
  RSAKey getRSAKeyInfo(IdentityProvider provider);
  long getServerTime();
  LoginSession[] getSessions();
  Settings getSettings();
  Group[] getGroupsV2(string[] groupIds);
  Settings getSettingsAttributes(int attrBitset);
  SystemConfiguration getSystemConfiguration();
  Ticket getUserTicket();
  WapInvitation getWapInvitation(string invitationHash);
  void invalidateUserTicket();
  void inviteFriendsBySms(string[] phoneNumberList);
  void inviteIntoGroup(int reqSeq, string groupId, string[] contactIds);
  void inviteIntoRoom(int reqSeq, string roomId, string[] contactIds);
  void inviteViaEmail(int reqSeq, string email, string name);
  bool isIdentityIdentifierAvailable(IdentityProvider provider, string identifier);
  bool isUseridAvailable(string userid);
  void kickoutFromGroup(int reqSeq, string groupId, string[] contactIds);
  string reissueGroupTicket(string groupMid);
  Group findGroupByTicket(string ticketId);
  void leaveGroup(int reqSeq, string groupId);
  void leaveRoom(int reqSeq, string roomId);
  string loginWithIdentityCredential(IdentityProvider identityProvider, string identifier, string password, bool keepLoggedIn, string accessLocation, string systemName, string certificate);
  LoginResult loginWithIdentityCredentialForCertificate(IdentityProvider identityProvider, string identifier, string password, bool keepLoggedIn, string accessLocation, string systemName, string certificate);
  string loginWithVerifier(string verifier);
  LoginResult loginWithVerifierForCerificate(string verifier);
  LoginResult loginWithVerifierForCertificate(string verifier);
  void logout();
  void logoutSession(string tokenKey);
  void noop();
  void notifiedRedirect(string[string] paramMap);
  string[string] notifyBuddyOnAir(int seq, string[] receiverMids);
  void notifyIndividualEvent(NotificationStatus notificationStatus, string[] receiverMids);
  void notifyInstalled(string udidHash, string applicationTypeWithExtensions);
  void notifyRegistrationComplete(string udidHash, string applicationTypeWithExtensions);
  void notifySleep(long lastRev, int badge);
  void notifyUpdated(long lastRev, ref const(DeviceInfo) deviceInfo);
  string openProximityMatch(ref const(Location) location);
  string registerBuddyUser(string buddyId, string registrarPassword);
  void registerBuddyUserid(int seq, string userid);
  string registerDevice(string sessionId);
  string registerDeviceWithIdentityCredential(string sessionId, IdentityProvider provider, string identifier, string verifier);
  string registerDeviceWithoutPhoneNumber(string region, string udidHash, ref const(DeviceInfo) deviceInfo);
  string registerDeviceWithoutPhoneNumberWithIdentityCredential(string region, string udidHash, ref const(DeviceInfo) deviceInfo, IdentityProvider provider, string identifier, string verifier, string mid, string migrationPincodeSessionId);
  bool registerUserid(int reqSeq, string userid);
  string registerWapDevice(string invitationHash, string guidHash, string email, ref const(DeviceInfo) deviceInfo);
  string registerWithExistingSnsIdAndIdentityCredential(ref const(IdentityCredential) identityCredential, string region, string udidHash, ref const(DeviceInfo) deviceInfo);
  RegisterWithSnsIdResult registerWithSnsId(SnsIdType snsIdType, string snsAccessToken, string region, string udidHash, ref const(DeviceInfo) deviceInfo, string mid);
  string registerWithSnsIdAndIdentityCredential(SnsIdType snsIdType, string snsAccessToken, ref const(IdentityCredential) identityCredential, string region, string udidHash, ref const(DeviceInfo) deviceInfo);
  string reissueDeviceCredential();
  string reissueUserTicket(long expirationTime, int maxUseCount);
  TMessageReadRange[] getMessageReadRange(string[] chatIds);
  void rejectGroupInvitation(int reqSeq, string groupId);
  void releaseSession();
  void removeAllMessages(int seq, string lastMessageId);
  void removeBuddyLocation(string mid, int index);
  bool removeMessage(string messageId);
  ContactTransition makeUserAddMyselfAsContact(string contactOwnerMid);
  bool removeMessageFromMyHome(string messageId);
  string removeSnsId(SnsIdType snsIdType);
  void report(long syncOpRevision, SyncCategory category, string report);
  ContactReportResult[] reportContacts(long syncOpRevision, SyncCategory category, ContactReport[] contactReports, SyncActionType actionType);
  void reportGroups(long syncOpRevision, Group[] groups);
  void reportProfile(long syncOpRevision, ref const(Profile) profile);
  void reportRooms(long syncOpRevision, Room[] rooms);
  Contact findAndAddContactByMetaTag(int reqSeq, string userid, string reference);
  void reportSettings(long syncOpRevision, ref const(Settings) settings);
  void reportSpam(string chatMid, string[] memberMids, SpammerReason[] spammerReasons, string[] senderMids, string[] spamMessageIds, string[] spamMessages);
  void reportSpammer(string spammerMid, SpammerReason[] spammerReasons, string[] spamMessageIds);
  void requestAccountPasswordReset(IdentityProvider provider, string identifier, string locale);
  EmailConfirmationSession requestEmailConfirmation(ref const(EmailConfirmation) emailConfirmation);
  void requestIdentityUnbind(IdentityProvider provider, string identifier);
  EmailConfirmationSession resendEmailConfirmation(string verifier);
  void resendPinCode(string sessionId);
  void resendPinCodeBySMS(string sessionId);
  void sendChatChecked(int seq, string consumer, string lastMessageId);
  CommitMessageResult sendMessageAwaitCommit(int seq, ref const(Message) message);
  void sendChatRemoved(int seq, string consumer, string lastMessageId);
  string[string] sendContentPreviewUpdated(int esq, string messageId, string[] receiverMids);
  void sendContentReceipt(int seq, string consumer, string messageId);
  void sendDummyPush();
  void removeE2EEPublicKey(ref const(E2EEPublicKey) publicKey);
  E2EENegotiationResult negotiateE2EEPublicKey(string mid);
  E2EEPublicKey getE2EEPublicKey(string mid, int version_, int keyId);
  void requestE2EEKeyExchange(int reqSeq, string temporalPublicKey, ref const(E2EEPublicKey) publicKey, string verifier);
  E2EEPublicKey[string] getLastE2EEPublicKeys(string chatMid);
  E2EEPublicKey registerE2EEPublicKey(int reqSeq, ref const(E2EEPublicKey) publicKey);
  E2EEPublicKey[] getE2EEPublicKeys();
  E2EEPublicKey[] getE2EEPublicKeysEx(bool ignoreE2EEStatus);
  Operation[] getReadMessageOpsInBulk(string[] chatIds);
  Message sendEvent(int seq, ref const(Message) message);
  Message sendMessage(int seq, ref const(Message) message);
  void sendMessageIgnored(int seq, string consumer, string[] messageIds);
  void sendMessageReceipt(int seq, string consumer, string[] messageIds);
  Contact findContactByMetaTag(string userid, string reference);
  Message sendMessageToMyHome(int seq, ref const(Message) message);
  void setBuddyLocation(string mid, int index, ref const(Geolocation) location);
  void setIdentityCredential(string identifier, string verifier, IdentityProvider provider);
  void setNotificationsEnabled(int reqSeq, MIDType type, string target, bool enablement);
  VerificationSessionData startUpdateVerification(string region, CarrierCode carrier, string phone, string udidHash, ref const(DeviceInfo) deviceInfo, string networkCode, string locale);
  VerificationSessionData startVerification(string region, CarrierCode carrier, string phone, string udidHash, ref const(DeviceInfo) deviceInfo, string networkCode, string mid, string locale, ref const(SIMInfo) simInfo, string oldUdidHash);
  void updateGroupPreferenceAttribute(int reqSeq, string groupMid, string[GroupPreferenceAttribute] updatedAttrs);
  Room createRoomV2(int reqSeq, string[] contactIds);
  void storeUpdateProfileAttribute(int seq, ProfileAttribute profileAttribute, string value);
  SnsFriendContactRegistration[] syncContactBySnsIds(int reqSeq, SnsFriendModification[] modifications);
  ContactRegistration[string] syncContacts(int reqSeq, ContactModification[] localContacts);
  Message trySendMessage(int seq, ref const(Message) message);
  Message[] getNextMessagesV2(string messageBoxId, ref const(MessageBoxV2MessageId) startMessageId, int messagesCount);
  TMessageBoxWrapUp getMessageBoxCompactWrapUpV2(string messageBoxId);
  Message[] getRecentMessagesV2(string messageBoxId, int messagesCount);
  string[string] validateContactsOnBot(string[] contacts);
  void tryFriendRequest(string midOrEMid, FriendRequestMethod method, string friendRequestParams);
  void unblockContact(int reqSeq, string id);
  void unblockRecommendation(int reqSeq, string id);
  string unregisterUserAndDevice();
  void updateApnsDeviceToken(string apnsDeviceToken);
  void updateBuddySetting(string key, string value);
  void updateC2DMRegistrationId(string registrationId);
  void updateContactSetting(int reqSeq, string mid, ContactSetting flag, string value);
  void updateCustomModeSettings(CustomMode customMode, string[string] paramMap);
  void updateDeviceInfo(string deviceUid, ref const(DeviceInfo) deviceInfo);
  void updateGroup(int reqSeq, ref const(Group) group);
  void updateNotificationToken(NotificationType type, string token);
  void updateNotificationTokenWithBytes(NotificationType type, string token);
  void updateProfile(int reqSeq, ref const(Profile) profile);
  void updateProfileAttribute(int reqSeq, ProfileAttribute attr, string value);
  void updateRegion(string region);
  void updateSettings(int reqSeq, ref const(Settings) settings);
  int updateSettings2(int reqSeq, ref const(Settings) settings);
  void updateSettingsAttribute(int reqSeq, SettingsAttribute attr, string value);
  int updateSettingsAttributes(int reqSeq, int attrBitset, ref const(Settings) settings);
  void verifyIdentityCredential(IdentityProvider identityProvider, string identifier, string password);
  UserAuthStatus verifyIdentityCredentialWithResult(ref const(IdentityCredential) identityCredential);
  VerificationResult verifyPhone(string sessionId, string pinCode, string udidHash);
  string verifyQrcode(string verifier, string pinCode);

  alias line_types.TalkException TalkException;
  alias line_types.ShouldSyncException ShouldSyncException;

  enum methodMeta = [
    TMethodMeta(`getChatRoomAnnouncementsBulk`, 
      [TParamMeta(`chatRoomMids`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getChatRoomAnnouncements`, 
      [TParamMeta(`chatRoomMid`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`createChatRoomAnnouncement`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`chatRoomMid`, 2), TParamMeta(`type`, 3), TParamMeta(`contents`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`removeChatRoomAnnouncement`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`chatRoomMid`, 2), TParamMeta(`announcementSeq`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`unsendMessage`, 
      [TParamMeta(`seq`, 1), TParamMeta(`messageId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getGroupWithoutMembers`, 
      [TParamMeta(`groupId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`requestResendMessage`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`senderMid`, 2), TParamMeta(`messageId`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`respondResendMessage`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`receiverMid`, 2), TParamMeta(`originalMessageId`, 3), TParamMeta(`resendMessage`, 4), TParamMeta(`errorCode`, 5)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`acceptGroupInvitation`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`groupId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`acceptGroupInvitationByTicket`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`GroupMid`, 2), TParamMeta(`ticketId`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`acceptProximityMatches`, 
      [TParamMeta(`sessionId`, 2), TParamMeta(`ids`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`acquireCallRoute`, 
      [TParamMeta(`to`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`acquireCallTicket`, 
      [TParamMeta(`to`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`acquireEncryptedAccessToken`, 
      [TParamMeta(`featureType`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`addSnsId`, 
      [TParamMeta(`snsIdType`, 2), TParamMeta(`snsAccessToken`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`blockContact`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`id`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`blockRecommendation`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`id`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`cancelGroupInvitation`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`groupId`, 2), TParamMeta(`contactIds`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`changeVerificationMethod`, 
      [TParamMeta(`sessionId`, 2), TParamMeta(`method`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`clearIdentityCredential`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`clearMessageBox`, 
      [TParamMeta(`channelId`, 2), TParamMeta(`messageBoxId`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`closeProximityMatch`, 
      [TParamMeta(`sessionId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`commitSendMessage`, 
      [TParamMeta(`seq`, 1), TParamMeta(`messageId`, 2), TParamMeta(`receiverMids`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`commitSendMessages`, 
      [TParamMeta(`seq`, 1), TParamMeta(`messageIds`, 2), TParamMeta(`receiverMids`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`commitUpdateProfile`, 
      [TParamMeta(`seq`, 1), TParamMeta(`attrs`, 2), TParamMeta(`receiverMids`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`confirmEmail`, 
      [TParamMeta(`verifier`, 2), TParamMeta(`pinCode`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`createGroup`, 
      [TParamMeta(`seq`, 1), TParamMeta(`name`, 2), TParamMeta(`contactIds`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`createQrcodeBase64Image`, 
      [TParamMeta(`url`, 2), TParamMeta(`characterSet`, 3), TParamMeta(`imageSize`, 4), TParamMeta(`x`, 5), TParamMeta(`y`, 6), TParamMeta(`width`, 7), TParamMeta(`height`, 8)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`createRoom`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`contactIds`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`createSession`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`fetchAnnouncements`, 
      [TParamMeta(`lastFetchedIndex`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`fetchMessages`, 
      [TParamMeta(`localTs`, 2), TParamMeta(`count`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`fetchOperations`, 
      [TParamMeta(`localRev`, 2), TParamMeta(`count`, 3)],
      [TExceptionMeta(`e`, 1, `ShouldSyncException`)]
    ),
    TMethodMeta(`fetchOps`, 
      [TParamMeta(`localRev`, 2), TParamMeta(`count`, 3), TParamMeta(`globalRev`, 4), TParamMeta(`individualRev`, 5)],
      [TExceptionMeta(`e`, 1, `ShouldSyncException`)]
    ),
    TMethodMeta(`findAndAddContactsByEmail`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`emails`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findAndAddContactsByMid`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`mid`, 2), TParamMeta(`type`, 3), TParamMeta(`reference`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findGroupByTicketV2`, 
      [TParamMeta(`ticketId`, 1)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findAndAddContactsByPhone`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`phones`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getFriendRequests`, 
      [TParamMeta(`direction`, 1), TParamMeta(`lastSeenSeqId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`removeFriendRequest`, 
      [TParamMeta(`direction`, 1), TParamMeta(`midOrEMid`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findAndAddContactsByUserid`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`userid`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findContactByUserid`, 
      [TParamMeta(`userid`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findContactByUserTicket`, 
      [TParamMeta(`ticketIdWithTag`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findContactsByEmail`, 
      [TParamMeta(`emails`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findContactsByPhone`, 
      [TParamMeta(`phones`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findSnsIdUserStatus`, 
      [TParamMeta(`snsIdType`, 2), TParamMeta(`snsAccessToken`, 3), TParamMeta(`udidHash`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`finishUpdateVerification`, 
      [TParamMeta(`sessionId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`generateUserTicket`, 
      [TParamMeta(`expirationTime`, 3), TParamMeta(`maxUseCount`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`destroyMessage`, 
      [TParamMeta(`seq`, 1), TParamMeta(`chatId`, 2), TParamMeta(`messageId`, 3), TParamMeta(`sessionId`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getAcceptedProximityMatches`, 
      [TParamMeta(`sessionId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getActiveBuddySubscriberIds`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getAllContactIds`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getAuthQrcode`, 
      [TParamMeta(`keepLoggedIn`, 2), TParamMeta(`systemName`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getBlockedContactIds`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerWithPhoneNumber`, 
      [TParamMeta(`sessionId`, 2), TParamMeta(`migrationPincodeSessionId`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerWithPhoneNumberAndPassword`, 
      [TParamMeta(`sessionId`, 2), TParamMeta(`keynm`, 3), TParamMeta(`encrypted`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getAnalyticsInfo`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reportClientStatistics`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`category`, 2), TParamMeta(`count`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`verifyPhoneNumberForLogin`, 
      [TParamMeta(`verifierFromPhone`, 2), TParamMeta(`pinCodeForPhone`, 3), TParamMeta(`verifierFromLogin`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`verifyPhoneNumber`, 
      [TParamMeta(`sessionId`, 2), TParamMeta(`pinCode`, 3), TParamMeta(`udidHash`, 4), TParamMeta(`migrationPincodeSessionId`, 5), TParamMeta(`oldUdidHash`, 6)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getBlockedContactIdsByRange`, 
      [TParamMeta(`start`, 2), TParamMeta(`count`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getBlockedRecommendationIds`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getBuddyBlockerIds`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getBuddyLocation`, 
      [TParamMeta(`mid`, 2), TParamMeta(`index`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getCompactContactsModifiedSince`, 
      [TParamMeta(`timestamp`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getCompactGroup`, 
      [TParamMeta(`groupId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getCompactRoom`, 
      [TParamMeta(`roomId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getContact`, 
      [TParamMeta(`id`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getContacts`, 
      [TParamMeta(`ids`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getContactWithFriendRequestStatus`, 
      [TParamMeta(`id`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getCountryWithRequestIp`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getFavoriteMids`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getGroup`, 
      [TParamMeta(`groupId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getGroupIdsInvited`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getGroupIdsJoined`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getGroups`, 
      [TParamMeta(`groupIds`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getHiddenContactMids`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getIdentityIdentifier`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getLastAnnouncementIndex`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getLastOpRevision`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getSuggestRevisions`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getPreviousMessagesV2WithReadCount`, 
      [TParamMeta(`messageBoxId`, 2), TParamMeta(`endMessageId`, 3), TParamMeta(`messagesCount`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getMessageBox`, 
      [TParamMeta(`channelId`, 2), TParamMeta(`messageBoxId`, 3), TParamMeta(`lastMessagesCount`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getMessageBoxCompactWrapUp`, 
      [TParamMeta(`mid`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getMessageBoxCompactWrapUpList`, 
      [TParamMeta(`start`, 2), TParamMeta(`messageBoxCount`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getMessageBoxList`, 
      [TParamMeta(`channelId`, 2), TParamMeta(`lastMessagesCount`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getMessageBoxListByStatus`, 
      [TParamMeta(`channelId`, 2), TParamMeta(`lastMessagesCount`, 3), TParamMeta(`status`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getMessageBoxWrapUp`, 
      [TParamMeta(`mid`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getMessageBoxWrapUpList`, 
      [TParamMeta(`start`, 2), TParamMeta(`messageBoxCount`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getMessagesBySequenceNumber`, 
      [TParamMeta(`channelId`, 2), TParamMeta(`messageBoxId`, 3), TParamMeta(`startSeq`, 4), TParamMeta(`endSeq`, 5)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getNextMessages`, 
      [TParamMeta(`messageBoxId`, 2), TParamMeta(`startSeq`, 3), TParamMeta(`messagesCount`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getNotificationPolicy`, 
      [TParamMeta(`carrier`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getPreviousMessages`, 
      [TParamMeta(`messageBoxId`, 2), TParamMeta(`endSeq`, 3), TParamMeta(`messagesCount`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getProfile`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getProximityMatchCandidateList`, 
      [TParamMeta(`sessionId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getProximityMatchCandidates`, 
      [TParamMeta(`sessionId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getRecentMessages`, 
      [TParamMeta(`messageBoxId`, 2), TParamMeta(`messagesCount`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getRecommendationIds`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getRoom`, 
      [TParamMeta(`roomId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getRSAKeyInfo`, 
      [TParamMeta(`provider`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getServerTime`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getSessions`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getSettings`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getGroupsV2`, 
      [TParamMeta(`groupIds`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getSettingsAttributes`, 
      [TParamMeta(`attrBitset`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getSystemConfiguration`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getUserTicket`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getWapInvitation`, 
      [TParamMeta(`invitationHash`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`invalidateUserTicket`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`inviteFriendsBySms`, 
      [TParamMeta(`phoneNumberList`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`inviteIntoGroup`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`groupId`, 2), TParamMeta(`contactIds`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`inviteIntoRoom`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`roomId`, 2), TParamMeta(`contactIds`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`inviteViaEmail`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`email`, 2), TParamMeta(`name`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`isIdentityIdentifierAvailable`, 
      [TParamMeta(`provider`, 3), TParamMeta(`identifier`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`isUseridAvailable`, 
      [TParamMeta(`userid`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`kickoutFromGroup`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`groupId`, 2), TParamMeta(`contactIds`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reissueGroupTicket`, 
      [TParamMeta(`groupMid`, 1)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findGroupByTicket`, 
      [TParamMeta(`ticketId`, 1)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`leaveGroup`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`groupId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`leaveRoom`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`roomId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`loginWithIdentityCredential`, 
      [TParamMeta(`identityProvider`, 8), TParamMeta(`identifier`, 3), TParamMeta(`password`, 4), TParamMeta(`keepLoggedIn`, 5), TParamMeta(`accessLocation`, 6), TParamMeta(`systemName`, 7), TParamMeta(`certificate`, 9)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`loginWithIdentityCredentialForCertificate`, 
      [TParamMeta(`identityProvider`, 8), TParamMeta(`identifier`, 3), TParamMeta(`password`, 4), TParamMeta(`keepLoggedIn`, 5), TParamMeta(`accessLocation`, 6), TParamMeta(`systemName`, 7), TParamMeta(`certificate`, 9)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`loginWithVerifier`, 
      [TParamMeta(`verifier`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`loginWithVerifierForCerificate`, 
      [TParamMeta(`verifier`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`loginWithVerifierForCertificate`, 
      [TParamMeta(`verifier`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`logout`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`logoutSession`, 
      [TParamMeta(`tokenKey`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`noop`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`notifiedRedirect`, 
      [TParamMeta(`paramMap`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`notifyBuddyOnAir`, 
      [TParamMeta(`seq`, 1), TParamMeta(`receiverMids`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`notifyIndividualEvent`, 
      [TParamMeta(`notificationStatus`, 2), TParamMeta(`receiverMids`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`notifyInstalled`, 
      [TParamMeta(`udidHash`, 2), TParamMeta(`applicationTypeWithExtensions`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`notifyRegistrationComplete`, 
      [TParamMeta(`udidHash`, 2), TParamMeta(`applicationTypeWithExtensions`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`notifySleep`, 
      [TParamMeta(`lastRev`, 2), TParamMeta(`badge`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`notifyUpdated`, 
      [TParamMeta(`lastRev`, 2), TParamMeta(`deviceInfo`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`openProximityMatch`, 
      [TParamMeta(`location`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerBuddyUser`, 
      [TParamMeta(`buddyId`, 2), TParamMeta(`registrarPassword`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerBuddyUserid`, 
      [TParamMeta(`seq`, 2), TParamMeta(`userid`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerDevice`, 
      [TParamMeta(`sessionId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerDeviceWithIdentityCredential`, 
      [TParamMeta(`sessionId`, 2), TParamMeta(`provider`, 5), TParamMeta(`identifier`, 3), TParamMeta(`verifier`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerDeviceWithoutPhoneNumber`, 
      [TParamMeta(`region`, 2), TParamMeta(`udidHash`, 3), TParamMeta(`deviceInfo`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerDeviceWithoutPhoneNumberWithIdentityCredential`, 
      [TParamMeta(`region`, 2), TParamMeta(`udidHash`, 3), TParamMeta(`deviceInfo`, 4), TParamMeta(`provider`, 5), TParamMeta(`identifier`, 6), TParamMeta(`verifier`, 7), TParamMeta(`mid`, 8), TParamMeta(`migrationPincodeSessionId`, 9)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerUserid`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`userid`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerWapDevice`, 
      [TParamMeta(`invitationHash`, 2), TParamMeta(`guidHash`, 3), TParamMeta(`email`, 4), TParamMeta(`deviceInfo`, 5)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerWithExistingSnsIdAndIdentityCredential`, 
      [TParamMeta(`identityCredential`, 2), TParamMeta(`region`, 3), TParamMeta(`udidHash`, 4), TParamMeta(`deviceInfo`, 5)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerWithSnsId`, 
      [TParamMeta(`snsIdType`, 2), TParamMeta(`snsAccessToken`, 3), TParamMeta(`region`, 4), TParamMeta(`udidHash`, 5), TParamMeta(`deviceInfo`, 6), TParamMeta(`mid`, 7)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerWithSnsIdAndIdentityCredential`, 
      [TParamMeta(`snsIdType`, 2), TParamMeta(`snsAccessToken`, 3), TParamMeta(`identityCredential`, 4), TParamMeta(`region`, 5), TParamMeta(`udidHash`, 6), TParamMeta(`deviceInfo`, 7)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reissueDeviceCredential`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reissueUserTicket`, 
      [TParamMeta(`expirationTime`, 3), TParamMeta(`maxUseCount`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getMessageReadRange`, 
      [TParamMeta(`chatIds`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`rejectGroupInvitation`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`groupId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`releaseSession`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`removeAllMessages`, 
      [TParamMeta(`seq`, 1), TParamMeta(`lastMessageId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`removeBuddyLocation`, 
      [TParamMeta(`mid`, 2), TParamMeta(`index`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`removeMessage`, 
      [TParamMeta(`messageId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`makeUserAddMyselfAsContact`, 
      [TParamMeta(`contactOwnerMid`, 1)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`removeMessageFromMyHome`, 
      [TParamMeta(`messageId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`removeSnsId`, 
      [TParamMeta(`snsIdType`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`report`, 
      [TParamMeta(`syncOpRevision`, 2), TParamMeta(`category`, 3), TParamMeta(`report`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reportContacts`, 
      [TParamMeta(`syncOpRevision`, 2), TParamMeta(`category`, 3), TParamMeta(`contactReports`, 4), TParamMeta(`actionType`, 5)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reportGroups`, 
      [TParamMeta(`syncOpRevision`, 2), TParamMeta(`groups`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reportProfile`, 
      [TParamMeta(`syncOpRevision`, 2), TParamMeta(`profile`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reportRooms`, 
      [TParamMeta(`syncOpRevision`, 2), TParamMeta(`rooms`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findAndAddContactByMetaTag`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`userid`, 2), TParamMeta(`reference`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reportSettings`, 
      [TParamMeta(`syncOpRevision`, 2), TParamMeta(`settings`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reportSpam`, 
      [TParamMeta(`chatMid`, 2), TParamMeta(`memberMids`, 3), TParamMeta(`spammerReasons`, 4), TParamMeta(`senderMids`, 5), TParamMeta(`spamMessageIds`, 6), TParamMeta(`spamMessages`, 7)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`reportSpammer`, 
      [TParamMeta(`spammerMid`, 2), TParamMeta(`spammerReasons`, 3), TParamMeta(`spamMessageIds`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`requestAccountPasswordReset`, 
      [TParamMeta(`provider`, 4), TParamMeta(`identifier`, 2), TParamMeta(`locale`, 5)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`requestEmailConfirmation`, 
      [TParamMeta(`emailConfirmation`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`requestIdentityUnbind`, 
      [TParamMeta(`provider`, 4), TParamMeta(`identifier`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`resendEmailConfirmation`, 
      [TParamMeta(`verifier`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`resendPinCode`, 
      [TParamMeta(`sessionId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`resendPinCodeBySMS`, 
      [TParamMeta(`sessionId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendChatChecked`, 
      [TParamMeta(`seq`, 1), TParamMeta(`consumer`, 2), TParamMeta(`lastMessageId`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendMessageAwaitCommit`, 
      [TParamMeta(`seq`, 1), TParamMeta(`message`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendChatRemoved`, 
      [TParamMeta(`seq`, 1), TParamMeta(`consumer`, 2), TParamMeta(`lastMessageId`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendContentPreviewUpdated`, 
      [TParamMeta(`esq`, 1), TParamMeta(`messageId`, 2), TParamMeta(`receiverMids`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendContentReceipt`, 
      [TParamMeta(`seq`, 1), TParamMeta(`consumer`, 2), TParamMeta(`messageId`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendDummyPush`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`removeE2EEPublicKey`, 
      [TParamMeta(`publicKey`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`negotiateE2EEPublicKey`, 
      [TParamMeta(`mid`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getE2EEPublicKey`, 
      [TParamMeta(`mid`, 2), TParamMeta(`version_`, 3), TParamMeta(`keyId`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`requestE2EEKeyExchange`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`temporalPublicKey`, 2), TParamMeta(`publicKey`, 3), TParamMeta(`verifier`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getLastE2EEPublicKeys`, 
      [TParamMeta(`chatMid`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`registerE2EEPublicKey`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`publicKey`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getE2EEPublicKeys`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getE2EEPublicKeysEx`, 
      [TParamMeta(`ignoreE2EEStatus`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getReadMessageOpsInBulk`, 
      [TParamMeta(`chatIds`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendEvent`, 
      [TParamMeta(`seq`, 1), TParamMeta(`message`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendMessage`, 
      [TParamMeta(`seq`, 1), TParamMeta(`message`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendMessageIgnored`, 
      [TParamMeta(`seq`, 1), TParamMeta(`consumer`, 2), TParamMeta(`messageIds`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendMessageReceipt`, 
      [TParamMeta(`seq`, 1), TParamMeta(`consumer`, 2), TParamMeta(`messageIds`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`findContactByMetaTag`, 
      [TParamMeta(`userid`, 2), TParamMeta(`reference`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`sendMessageToMyHome`, 
      [TParamMeta(`seq`, 1), TParamMeta(`message`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`setBuddyLocation`, 
      [TParamMeta(`mid`, 2), TParamMeta(`index`, 3), TParamMeta(`location`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`setIdentityCredential`, 
      [TParamMeta(`identifier`, 2), TParamMeta(`verifier`, 3), TParamMeta(`provider`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`setNotificationsEnabled`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`type`, 2), TParamMeta(`target`, 3), TParamMeta(`enablement`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`startUpdateVerification`, 
      [TParamMeta(`region`, 2), TParamMeta(`carrier`, 3), TParamMeta(`phone`, 4), TParamMeta(`udidHash`, 5), TParamMeta(`deviceInfo`, 6), TParamMeta(`networkCode`, 7), TParamMeta(`locale`, 8)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`startVerification`, 
      [TParamMeta(`region`, 2), TParamMeta(`carrier`, 3), TParamMeta(`phone`, 4), TParamMeta(`udidHash`, 5), TParamMeta(`deviceInfo`, 6), TParamMeta(`networkCode`, 7), TParamMeta(`mid`, 8), TParamMeta(`locale`, 9), TParamMeta(`simInfo`, 10), TParamMeta(`oldUdidHash`, 11)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateGroupPreferenceAttribute`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`groupMid`, 2), TParamMeta(`updatedAttrs`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`createRoomV2`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`contactIds`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`storeUpdateProfileAttribute`, 
      [TParamMeta(`seq`, 1), TParamMeta(`profileAttribute`, 2), TParamMeta(`value`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`syncContactBySnsIds`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`modifications`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`syncContacts`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`localContacts`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`trySendMessage`, 
      [TParamMeta(`seq`, 1), TParamMeta(`message`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getNextMessagesV2`, 
      [TParamMeta(`messageBoxId`, 2), TParamMeta(`startMessageId`, 3), TParamMeta(`messagesCount`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getMessageBoxCompactWrapUpV2`, 
      [TParamMeta(`messageBoxId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getRecentMessagesV2`, 
      [TParamMeta(`messageBoxId`, 2), TParamMeta(`messagesCount`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`validateContactsOnBot`, 
      [TParamMeta(`contacts`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`tryFriendRequest`, 
      [TParamMeta(`midOrEMid`, 1), TParamMeta(`method`, 2), TParamMeta(`friendRequestParams`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`unblockContact`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`id`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`unblockRecommendation`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`id`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`unregisterUserAndDevice`, 
      [],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateApnsDeviceToken`, 
      [TParamMeta(`apnsDeviceToken`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateBuddySetting`, 
      [TParamMeta(`key`, 2), TParamMeta(`value`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateC2DMRegistrationId`, 
      [TParamMeta(`registrationId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateContactSetting`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`mid`, 2), TParamMeta(`flag`, 3), TParamMeta(`value`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateCustomModeSettings`, 
      [TParamMeta(`customMode`, 2), TParamMeta(`paramMap`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateDeviceInfo`, 
      [TParamMeta(`deviceUid`, 2), TParamMeta(`deviceInfo`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateGroup`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`group`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateNotificationToken`, 
      [TParamMeta(`type`, 3), TParamMeta(`token`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateNotificationTokenWithBytes`, 
      [TParamMeta(`type`, 3), TParamMeta(`token`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateProfile`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`profile`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateProfileAttribute`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`attr`, 2), TParamMeta(`value`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateRegion`, 
      [TParamMeta(`region`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateSettings`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`settings`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateSettings2`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`settings`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateSettingsAttribute`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`attr`, 2), TParamMeta(`value`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`updateSettingsAttributes`, 
      [TParamMeta(`reqSeq`, 1), TParamMeta(`attrBitset`, 2), TParamMeta(`settings`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`verifyIdentityCredential`, 
      [TParamMeta(`identityProvider`, 8), TParamMeta(`identifier`, 3), TParamMeta(`password`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`verifyIdentityCredentialWithResult`, 
      [TParamMeta(`identityCredential`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`verifyPhone`, 
      [TParamMeta(`sessionId`, 2), TParamMeta(`pinCode`, 3), TParamMeta(`udidHash`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`verifyQrcode`, 
      [TParamMeta(`verifier`, 2), TParamMeta(`pinCode`, 3)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    )
  ];
}
