/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
module MessageService;

import thrift.base;
import thrift.codegen.base;
import thrift.util.hashset;

import line_types;

interface MessageService {
  MessageOperations fetchMessageOperations(long localRevision, long lastOpTimestamp, int count);
  LastReadMessageIds getLastReadMessageIds(string chatId);
  LastReadMessageIds[] multiGetLastReadMessageIds(string[] chatIds);

  alias line_types.TalkException TalkException;

  enum methodMeta = [
    TMethodMeta(`fetchMessageOperations`, 
      [TParamMeta(`localRevision`, 2), TParamMeta(`lastOpTimestamp`, 3), TParamMeta(`count`, 4)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`getLastReadMessageIds`, 
      [TParamMeta(`chatId`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    ),
    TMethodMeta(`multiGetLastReadMessageIds`, 
      [TParamMeta(`chatIds`, 2)],
      [TExceptionMeta(`e`, 1, `TalkException`)]
    )
  ];
}
