/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
module line_types;

import thrift.base;
import thrift.codegen.base;
import thrift.util.hashset;

/**
  **line.thrift****

| Author : GoogleX
|
| Copyright (c) 2018

*/
enum ApplicationType {
  IOS = 16,  IOS_RC = 17,  IOS_BETA = 18,  IOS_ALPHA = 19,  ANDROID = 32,  ANDROID_RC = 33,  ANDROID_BETA = 34,  ANDROID_ALPHA = 35,  WAP = 48,  WAP_RC = 49,  WAP_BETA = 50,  WAP_ALPHA = 51,  BOT = 64,  BOT_RC = 65,  BOT_BETA = 66,  BOT_ALPHA = 67,  WEB = 80,  WEB_RC = 81,  WEB_BETA = 82,  WEB_ALPHA = 83,  DESKTOPWIN = 96,  DESKTOPWIN_RC = 97,  DESKTOPWIN_BETA = 98,  DESKTOPWIN_ALPHA = 99,  DESKTOPMAC = 112,  DESKTOPMAC_RC = 113,  DESKTOPMAC_BETA = 114,  DESKTOPMAC_ALPHA = 115,  CHANNELGW = 128,  CHANNELGW_RC = 129,  CHANNELGW_BETA = 130,  CHANNELGW_ALPHA = 131,  CHANNELCP = 144,  CHANNELCP_RC = 145,  CHANNELCP_BETA = 146,  CHANNELCP_ALPHA = 147,  WINPHONE = 160,  WINPHONE_RC = 161,  WINPHONE_BETA = 162,  WINPHONE_ALPHA = 163,  BLACKBERRY = 176,  BLACKBERRY_RC = 177,  BLACKBERRY_BETA = 178,  BLACKBERRY_ALPHA = 179,  WINMETRO = 192,  WINMETRO_RC = 193,  WINMETRO_BETA = 194,  WINMETRO_ALPHA = 195,  S40 = 208,  S40_RC = 209,  S40_BETA = 210,  S40_ALPHA = 211,  CHRONO = 224,  CHRONO_RC = 225,  CHRONO_BETA = 226,  CHRONO_ALPHA = 227,  TIZEN = 256,  TIZEN_RC = 257,  TIZEN_BETA = 258,  TIZEN_ALPHA = 259,  VIRTUAL = 272,  FIREFOXOS = 288,  FIREFOXOS_RC = 289,  FIREFOXOS_BETA = 290,  FIREFOXOS_ALPHA = 291,  IOSIPAD = 304,  IOSIPAD_RC = 305,  IOSIPAD_BETA = 306,  IOSIPAD_ALPHA = 307,  BIZIOS = 320,  BIZIOS_RC = 321,  BIZIOS_BETA = 322,  BIZIOS_ALPHA = 323,  BIZANDROID = 336,  BIZANDROID_RC = 337,  BIZANDROID_BETA = 338,  BIZANDROID_ALPHA = 339,  BIZBOT = 352,  BIZBOT_RC = 353,  BIZBOT_BETA = 354,  BIZBOT_ALPHA = 355,  CHROMEOS = 368,  CHROMEOS_RC = 369,  CHROMEOS_BETA = 370,  CHROMEOS_ALPHA = 371,  ANDROIDLITE = 384,  ANDROIDLITE_RC = 385,  ANDROIDLITE_BETA = 386,  ANDROIDLITE_ALPHA = 387,  WIN10 = 400,  WIN10_RC = 401,  WIN10_BETA = 402,  WIN10_ALPHA = 403,  BIZWEB = 416,  BIZWEB_RC = 417,  BIZWEB_BETA = 418,  BIZWEB_ALPHA = 419,  DUMMYPRIMARY = 432,  DUMMYPRIMARY_RC = 433,  DUMMYPRIMARY_BETA = 434,  DUMMYPRIMARY_ALPHA = 435,  SQUARE = 448,  SQUARE_RC = 449,  SQUARE_BETA = 450,  SQUARE_ALPHA = 451,  INTERNAL = 464,  INTERNAL_RC = 465,  INTERNAL_BETA = 466,  INTERNAL_ALPHA = 467,  CLOVAFRIENDS = 480,  CLOVAFRIENDS_RC = 481,  CLOVAFRIENDS_BETA = 482,  CLOVAFRIENDS_ALPHA = 483,
}

enum ExtendedProfileAttribute {

}

enum PrivacyLevelType {
  PUBLIC = 0,  PRIVATE = 1,
}

enum PaidCallerIdStatus {
  NOT_SPECIFIED = 0,  VALID = 1,  VERIFICATION_REQUIRED = 2,  NOT_PERMITTED = 3,  LIMIT_EXCEEDED = 4,  LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED = 5,
}

enum PaidCallProductType {
  COIN = 0,  CREDIT = 1,  MONTHLY = 2,
}

enum PaidCallType {
  OUT = 0,  IN = 1,  TOLLFREE = 2,  RECORD = 3,  AD = 4,  CS = 5,
}

enum BotType {
  RESERVED = 0,  OFFICIAL = 1,  LINE_AT_0 = 2,  LINE_AT = 3,
}

enum BuddyOnAirLabel {
  ON_AIR = 0,  LIVE = 1,
}

enum BuddyBannerLinkType {
  BUDDY_BANNER_LINK_HIDDEN = 0,  BUDDY_BANNER_LINK_MID = 1,  BUDDY_BANNER_LINK_URL = 2,
}

enum BuddyOnAirType {
  NORMAL = 0,  LIVE = 1,  VOIP = 2,
}

enum Diff {
  ADDED = 0,  UPDATED = 1,  REMOVED = 2,
}

enum ReportType {
  ADVERTISING = 1,  GENDER_HARASSMENT = 2,  HARASSMENT = 3,  OTHER = 4,
}

enum SyncTriggerReason {
  OTHER = 0,  REVISION_GAP_TOO_LARGE = 1,  OPERATION_EXPIRED = 2,
}

enum ReportCategory {
  PUSH_NORMAL_PLAIN = 0,  PUSH_NORMAL_E2EE = 1,  PUSH_VOIP_PLAIN = 2,  PUSH_VOIP_E2EE = 3,
}

enum BuddyResultState {
  ACCEPTED = 1,  SUCCEEDED = 2,  FAILED = 3,  CANCELLED = 4,  NOTIFY_FAILED = 5,  STORING = 11,  UPLOADING = 21,  NOTIFYING = 31,  REMOVING_SUBSCRIPTION = 41,  UNREGISTERING_ACCOUNT = 42,  NOTIFYING_LEAVE_CHAT = 43,
}

enum BuddySearchRequestSource {
  NA = 0,  FRIEND_VIEW = 1,  OFFICIAL_ACCOUNT_VIEW = 2,
}

enum CarrierCode {
  NOT_SPECIFIED = 0,  JP_DOCOMO = 1,  JP_AU = 2,  JP_SOFTBANK = 3,  JP_DOCOMO_LINE = 4,  KR_SKT = 17,  KR_KT = 18,  KR_LGT = 19,
}

enum ChannelConfiguration {
  MESSAGE = 0,  MESSAGE_NOTIFICATION = 1,  NOTIFICATION_CENTER = 2,
}

enum ChannelPermission {
  PROFILE = 0,  FRIENDS = 1,  GROUP = 2,
}

enum ChannelFeatureLicense {
  BLE_LCS_API_USABLE = 26,  PROHIBIT_MINIMIZE_CHANNEL_BROWSER = 27,  ALLOW_IOS_WEBKIT = 28,
}

enum ChannelErrorCode {
  ILLEGAL_ARGUMENT = 0,  INTERNAL_ERROR = 1,  CONNECTION_ERROR = 2,  AUTHENTICATIONI_FAILED = 3,  NEED_PERMISSION_APPROVAL = 4,  COIN_NOT_USABLE = 5,  WEBVIEW_NOT_ALLOWED = 6,
}

enum ChannelSyncType {
  SYNC = 0,  REMOVE = 1,  REMOVE_ALL = 2,
}

enum LoginType {
  ID_CREDENTIAL = 0,  QRCODE = 1,  ID_CREDENTIAL_WITH_E2EE = 2,
}

enum ContactAttribute {
  CONTACT_ATTRIBUTE_CAPABLE_VOICE_CALL = 1,  CONTACT_ATTRIBUTE_CAPABLE_VIDEO_CALL = 2,  CONTACT_ATTRIBUTE_CAPABLE_MY_HOME = 16,  CONTACT_ATTRIBUTE_CAPABLE_BUDDY = 32,
}

enum ContactCategory {
  NORMAL = 0,  RECOMMEND = 1,
}

enum ContactRelation {
  ONEWAY = 0,  BOTH = 1,  NOT_REGISTERED = 2,
}

enum AsymmetricKeyAlgorithm {
  ASYMMETRIC_KEY_ALGORITHM_RSA = 1,  ASYMMETRIC_KEY_ALGORITHM_ECDH = 2,
}

enum ContactSetting {
  CONTACT_SETTING_NOTIFICATION_DISABLE = 1,  CONTACT_SETTING_DISPLAY_NAME_OVERRIDE = 2,  CONTACT_SETTING_CONTACT_HIDE = 4,  CONTACT_SETTING_FAVORITE = 8,  CONTACT_SETTING_DELETE = 16,
}

enum ContactStatus {
  UNSPECIFIED = 0,  FRIEND = 1,  FRIEND_BLOCKED = 2,  RECOMMEND = 3,  RECOMMEND_BLOCKED = 4,  DELETED = 5,  DELETED_BLOCKED = 6,
}

enum ContactType {
  MID = 0,  PHONE = 1,  EMAIL = 2,  USERID = 3,  PROXIMITY = 4,  GROUP = 5,  USER = 6,  QRCODE = 7,  PROMOTION_BOT = 8,  CONTACT_MESSAGE = 9,  FRIEND_REQUEST = 10,  REPAIR = 128,  FACEBOOK = 2305,  SINA = 2306,  RENREN = 2307,  FEIXIN = 2308,  BBM = 2309,  BEACON = 11,
}

enum GroupPreferenceAttribute {
  INVITATION_TICKET = 1,  FAVORITE_TIMESTAMP = 2,
}

enum ContentType {
  NONE = 0,  IMAGE = 1,  VIDEO = 2,  AUDIO = 3,  HTML = 4,  PDF = 5,  CALL = 6,  STICKER = 7,  PRESENCE = 8,  GIFT = 9,  GROUPBOARD = 10,  APPLINK = 11,  LINK = 12,  CONTACT = 13,  FILE = 14,  LOCATION = 15,  POSTNOTIFICATION = 16,  RICH = 17,  CHATEVENT = 18,  MUSIC = 19,  PAYMENT = 20,  EXTIMAGE = 21,
}

enum MessageRelationType {
  FORWARD = 0,  AUTO_REPLY = 1,  SUBORDINATE = 2,
}

enum CustomMode {
  PROMOTION_FRIENDS_INVITE = 1,  CAPABILITY_SERVER_SIDE_SMS = 2,  LINE_CLIENT_ANALYTICS_CONFIGURATION = 3,
}

enum RoomAttribute {
  ALL = 255,  NOTIFICATION_SETTING = 1,
}

enum UserStatus {
  NORMAL = 0,  UNBOUND = 1,  UNREGISTERED = 2,
}

enum EmailConfirmationStatus {
  NOT_SPECIFIED = 0,  NOT_YET = 1,  DONE = 3,  NEED_ENFORCED_INPUT = 4,
}

enum AccountMigrationPincodeType {
  NOT_APPLICABLE = 0,  NOT_SET = 1,  SET = 2,  NEED_ENFORCED_INPUT = 3,
}

enum AccountMigrationCheckType {
  SKIP = 0,  PINCODE = 1,  SECURITY_CENTER = 2,
}

enum SecurityCenterSettingsType {
  NOT_APPLICABLE = 0,  NOT_SET = 1,  SET = 2,  NEED_ENFORCED_INPUT = 3,
}

enum EmailConfirmationType {
  SERVER_SIDE_EMAIL = 0,  CLIENT_SIDE_EMAIL = 1,
}

enum SquareChatAnnouncementType {
  TEXT_MESSAGE = 0,
}

enum SquareChatAttribute {
  NAME = 2,  SQUARE_CHAT_IMAGE = 3,  STATE = 4,
}

enum SquareMemberAttribute {
  DISPLAY_NAME = 1,  PROFILE_IMAGE = 2,  ABLE_TO_RECEIVE_MESSAGE = 3,  MEMBERSHIP_STATE = 5,  ROLE = 6,  PREFERENCE = 7,
}

enum SquareMemberRelationAttribute {
  BLOCKED = 1,
}

enum SquarePreferenceAttribute {
  FAVORITE = 1,  NOTI_FOR_NEW_JOIN_REQUEST = 2,
}

enum SquareState {
  ALIVE = 0,  DELETED = 1,  SUSPENDED = 2,
}

enum CommitMessageResultCode {
  DELIVERED = 0,  DELIVERY_SKIPPED = 1,  DELIVERY_RESTRICTED = 2,
}

enum ErrorCode {
  ILLEGAL_ARGUMENT = 0,  AUTHENTICATION_FAILED = 1,  DB_FAILED = 2,  INVALID_STATE = 3,  EXCESSIVE_ACCESS = 4,  NOT_FOUND = 5,  INVALID_MID = 9,  NOT_A_MEMBER = 10,  INVALID_LENGTH = 6,  NOT_AVAILABLE_USER = 7,  NOT_AUTHORIZED_DEVICE = 8,  NOT_AUTHORIZED_SESSION = 14,  INCOMPATIBLE_APP_VERSION = 11,  NOT_READY = 12,  NOT_AVAILABLE_SESSION = 13,  SYSTEM_ERROR = 15,  NO_AVAILABLE_VERIFICATION_METHOD = 16,  NOT_AUTHENTICATED = 17,  INVALID_IDENTITY_CREDENTIAL = 18,  NOT_AVAILABLE_IDENTITY_IDENTIFIER = 19,  INTERNAL_ERROR = 20,  NO_SUCH_IDENTITY_IDENFIER = 21,  DEACTIVATED_ACCOUNT_BOUND_TO_THIS_IDENTITY = 22,  ILLEGAL_IDENTITY_CREDENTIAL = 23,  UNKNOWN_CHANNEL = 24,  NO_SUCH_MESSAGE_BOX = 25,  NOT_AVAILABLE_MESSAGE_BOX = 26,  CHANNEL_DOES_NOT_MATCH = 27,  NOT_YOUR_MESSAGE = 28,  MESSAGE_DEFINED_ERROR = 29,  USER_CANNOT_ACCEPT_PRESENTS = 30,  USER_NOT_STICKER_OWNER = 32,  MAINTENANCE_ERROR = 33,  ACCOUNT_NOT_MATCHED = 34,  ABUSE_BLOCK = 35,  NOT_FRIEND = 36,  NOT_ALLOWED_CALL = 37,  BLOCK_FRIEND = 38,  INCOMPATIBLE_VOIP_VERSION = 39,  INVALID_SNS_ACCESS_TOKEN = 40,  EXTERNAL_SERVICE_NOT_AVAILABLE = 41,  NOT_ALLOWED_ADD_CONTACT = 42,  NOT_CERTIFICATED = 43,  NOT_ALLOWED_SECONDARY_DEVICE = 44,  INVALID_PIN_CODE = 45,  NOT_FOUND_IDENTITY_CREDENTIAL = 46,  EXCEED_FILE_MAX_SIZE = 47,  EXCEED_DAILY_QUOTA = 48,  NOT_SUPPORT_SEND_FILE = 49,  MUST_UPGRADE = 50,  NOT_AVAILABLE_PIN_CODE_SESSION = 51,  EXPIRED_REVISION = 52,  NOT_YET_PHONE_NUMBER = 54,  BAD_CALL_NUMBER = 55,  UNAVAILABLE_CALL_NUMBER = 56,  NOT_SUPPORT_CALL_SERVICE = 57,  CONGESTION_CONTROL = 58,  NO_BALANCE = 59,  NOT_PERMITTED_CALLER_ID = 60,  NO_CALLER_ID_LIMIT_EXCEEDED = 61,  CALLER_ID_VERIFICATION_REQUIRED = 62,  NO_CALLER_ID_LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED = 63,  MESSAGE_NOT_FOUND = 64,  INVALID_ACCOUNT_MIGRATION_PINCODE_FORMAT = 65,  ACCOUNT_MIGRATION_PINCODE_NOT_MATCHED = 66,  ACCOUNT_MIGRATION_PINCODE_BLOCKED = 67,  INVALID_PASSWORD_FORMAT = 69,  FEATURE_RESTRICTED = 70,  MESSAGE_NOT_DESTRUCTIBLE = 71,  PAID_CALL_REDEEM_FAILED = 72,  PREVENTED_JOIN_BY_TICKET = 73,  SEND_MESSAGE_NOT_PERMITTED_FROM_LINE_AT = 75,  SEND_MESSAGE_NOT_PERMITTED_WHILE_AUTO_REPLY = 76,  SECURITY_CENTER_NOT_VERIFIED = 77,  SECURITY_CENTER_BLOCKED_BY_SETTING = 78,  SECURITY_CENTER_BLOCKED = 79,  TALK_PROXY_EXCEPTION = 80,  E2EE_INVALID_PROTOCOL = 81,  E2EE_RETRY_ENCRYPT = 82,  E2EE_UPDATE_SENDER_KEY = 83,  E2EE_UPDATE_RECEIVER_KEY = 84,  E2EE_INVALID_ARGUMENT = 85,  E2EE_INVALID_VERSION = 86,  E2EE_SENDER_DISABLED = 87,  E2EE_RECEIVER_DISABLED = 88,  E2EE_SENDER_NOT_ALLOWED = 89,  E2EE_RECEIVER_NOT_ALLOWED = 90,  E2EE_RESEND_FAIL = 91,  E2EE_RESEND_OK = 92,  HITOKOTO_BACKUP_NO_AVAILABLE_DATA = 93,  E2EE_UPDATE_PRIMARY_DEVICE = 94,  SUCCESS = 95,  CANCEL = 96,  E2EE_PRIMARY_NOT_SUPPORT = 97,  E2EE_RETRY_PLAIN = 98,  E2EE_RECREATE_GROUP_KEY = 99,  E2EE_GROUP_TOO_MANY_MEMBERS = 100,  SERVER_BUSY = 101,  NOT_ALLOWED_ADD_FOLLOW = 102,  INCOMING_FRIEND_REQUEST_LIMIT = 103,  OUTGOING_FRIEND_REQUEST_LIMIT = 104,  OUTGOING_FRIEND_REQUEST_QUOTA = 105,  DUPLICATED = 106,  BANNED = 107,
}

enum FeatureType {
  OBS_VIDEO = 1,  OBS_GENERAL = 2,
}

enum GroupAttribute {
  NAME = 1,  PICTURE_STATUS = 2,  ALL = 255,  PREVENTED_JOIN_BY_TICKET = 4,  NOTIFICATION_SETTING = 8,
}

enum IdentityProvider {
  UNKNOWN = 0,  LINE = 1,  NAVER_KR = 2,  LINE_PHONE = 3,
}

enum LoginResultType {
  SUCCESS = 1,  REQUIRE_QRCODE = 2,  REQUIRE_DEVICE_CONFIRM = 3,  REQUIRE_SMS_CONFIRM = 4,
}

enum MessageOperationType {
  SEND_MESSAGE = 1,  RECEIVE_MESSAGE = 2,  READ_MESSAGE = 3,  NOTIFIED_READ_MESSAGE = 4,  NOTIFIED_JOIN_CHAT = 5,  FAILED_SEND_MESSAGE = 6,  SEND_CONTENT = 7,  SEND_CONTENT_RECEIPT = 8,  SEND_CHAT_REMOVED = 9,  REMOVE_ALL_MESSAGES = 10,
}

enum MIDType {
  USER = 0,  ROOM = 1,  GROUP = 2,  SQUARE = 3,  SQUARE_CHAT = 4,  SQUARE_MEMBER = 5,  BOT = 6,
}

enum ServiceCode {
  UNKNOWN = 0,  TALK = 1,  SQUARE = 2,
}

enum FriendRequestDirection {
  INCOMING = 1,  OUTGOING = 2,
}

enum FriendRequestMethod {
  TIMELINE = 1,  NEARBY = 2,  SQUARE = 3,
}

enum FriendRequestStatus {
  NONE = 0,  AVAILABLE = 1,  ALREADY_REQUESTED = 2,  UNAVAILABLE = 3,
}

enum ModificationType {
  ADD = 0,  REMOVE = 1,  MODIFY = 2,
}

enum NotificationItemFetchMode {
  ALL = 0,  APPEND = 1,
}

enum NotificationQueueType {
  GLOBAL = 1,  MESSAGE = 2,  PRIMARY = 3,
}

enum GroupCallMediaType {
  AUDIO = 1,  VIDEO = 2,
}

enum PersonalInfo {
  EMAIL = 0,  PHONE = 1,  BIRTHDAY = 2,  RAW_BIRTHDAY = 3,
}

enum NotificationStatus {
  NOTIFICATION_ITEM_EXIST = 1,  TIMELINE_ITEM_EXIST = 2,  NOTE_GROUP_NEW_ITEM_EXIST = 4,  TIMELINE_BUDDYGROUP_CHANGED = 8,  NOTE_ONE_TO_ONE_NEW_ITEM_EXIST = 16,  ALBUM_ITEM_EXIST = 32,  TIMELINE_ITEM_DELETED = 64,  OTOGROUP_ITEM_EXIST = 128,  GROUPHOME_NEW_ITEM_EXIST = 256,  GROUPHOME_HIDDEN_ITEM_CHANGED = 512,  NOTIFICATION_ITEM_CHANGED = 1024,  BEAD_ITEM_HIDE = 2048,  BEAD_ITEM_SHOW = 4096,
}

enum NotificationType {
  APPLE_APNS = 1,  GOOGLE_C2DM = 2,  NHN_NNI = 3,  SKT_AOM = 4,  MS_MPNS = 5,  RIM_BIS = 6,  GOOGLE_GCM = 7,  NOKIA_NNAPI = 8,  TIZEN = 9,  LINE_BOT = 17,  LINE_WAP = 18,  APPLE_APNS_VOIP = 19,  MS_WNS = 20,  GOOGLE_FCM = 21,
}

enum OpStatus {
  NORMAL = 0,  ALERT_DISABLED = 1,  ALWAYS = 2,
}

enum OpType {
  END_OF_OPERATION = 0,  UPDATE_PROFILE = 1,  UPDATE_SETTINGS = 36,  NOTIFIED_UPDATE_PROFILE = 2,  REGISTER_USERID = 3,  ADD_CONTACT = 4,  NOTIFIED_ADD_CONTACT = 5,  BLOCK_CONTACT = 6,  UNBLOCK_CONTACT = 7,  NOTIFIED_RECOMMEND_CONTACT = 8,  CREATE_GROUP = 9,  UPDATE_GROUP = 10,  NOTIFIED_UPDATE_GROUP = 11,  INVITE_INTO_GROUP = 12,  NOTIFIED_INVITE_INTO_GROUP = 13,  CANCEL_INVITATION_GROUP = 31,  NOTIFIED_CANCEL_INVITATION_GROUP = 32,  LEAVE_GROUP = 14,  NOTIFIED_LEAVE_GROUP = 15,  ACCEPT_GROUP_INVITATION = 16,  NOTIFIED_ACCEPT_GROUP_INVITATION = 17,  REJECT_GROUP_INVITATION = 34,  NOTIFIED_REJECT_GROUP_INVITATION = 35,  KICKOUT_FROM_GROUP = 18,  NOTIFIED_KICKOUT_FROM_GROUP = 19,  CREATE_ROOM = 20,  INVITE_INTO_ROOM = 21,  NOTIFIED_INVITE_INTO_ROOM = 22,  LEAVE_ROOM = 23,  NOTIFIED_LEAVE_ROOM = 24,  SEND_MESSAGE = 25,  RECEIVE_MESSAGE = 26,  SEND_MESSAGE_RECEIPT = 27,  RECEIVE_MESSAGE_RECEIPT = 28,  SEND_CONTENT_RECEIPT = 29,  RECEIVE_ANNOUNCEMENT = 30,  NOTIFIED_UNREGISTER_USER = 33,  INVITE_VIA_EMAIL = 38,  NOTIFIED_REGISTER_USER = 37,  NOTIFIED_REQUEST_RECOVERY = 39,  SEND_CHAT_CHECKED = 40,  SEND_CHAT_REMOVED = 41,  NOTIFIED_FORCE_SYNC = 42,  SEND_CONTENT = 43,  SEND_MESSAGE_MYHOME = 44,  NOTIFIED_UPDATE_CONTENT_PREVIEW = 45,  REMOVE_ALL_MESSAGES = 46,  NOTIFIED_UPDATE_PURCHASES = 47,  DUMMY = 48,  UPDATE_CONTACT = 49,  NOTIFIED_RECEIVED_CALL = 50,  CANCEL_CALL = 51,  NOTIFIED_REDIRECT = 52,  NOTIFIED_CHANNEL_SYNC = 53,  FAILED_SEND_MESSAGE = 54,  NOTIFIED_READ_MESSAGE = 55,  FAILED_EMAIL_CONFIRMATION = 56,  NOTIFIED_CHAT_CONTENT = 58,  NOTIFIED_PUSH_NOTICENTER_ITEM = 59,  NOTIFIED_JOIN_CHAT = 60,  NOTIFIED_LEAVE_CHAT = 61,  NOTIFIED_TYPING = 62,  FRIEND_REQUEST_ACCEPTED = 63,  DESTROY_MESSAGE = 64,  NOTIFIED_DESTROY_MESSAGE = 65,  UPDATE_PUBLICKEYCHAIN = 66,  NOTIFIED_UPDATE_PUBLICKEYCHAIN = 67,  NOTIFIED_BLOCK_CONTACT = 68,  NOTIFIED_UNBLOCK_CONTACT = 69,  UPDATE_GROUPPREFERENCE = 70,  NOTIFIED_PAYMENT_EVENT = 71,  REGISTER_E2EE_PUBLICKEY = 72,  NOTIFIED_E2EE_KEY_EXCHANGE_REQ = 73,  NOTIFIED_E2EE_KEY_EXCHANGE_RESP = 74,  NOTIFIED_E2EE_MESSAGE_RESEND_REQ = 75,  NOTIFIED_E2EE_MESSAGE_RESEND_RESP = 76,  NOTIFIED_E2EE_KEY_UPDATE = 77,  NOTIFIED_BUDDY_UPDATE_PROFILE = 78,  NOTIFIED_UPDATE_LINEAT_TABS = 79,  UPDATE_ROOM = 80,  NOTIFIED_BEACON_DETECTED = 81,  UPDATE_EXTENDED_PROFILE = 82,  ADD_FOLLOW = 83,  NOTIFIED_ADD_FOLLOW = 84,  DELETE_FOLLOW = 85,  NOTIFIED_DELETE_FOLLOW = 86,  UPDATE_TIMELINE_SETTINGS = 87,  NOTIFIED_FRIEND_REQUEST = 88,  UPDATE_RINGBACK_TONE = 89,  NOTIFIED_POSTBACK = 90,  RECEIVE_READ_WATERMARK = 91,  NOTIFIED_MESSAGE_DELIVERED = 92,  NOTIFIED_UPDATE_CHAT_BAR = 93,  NOTIFIED_CHATAPP_INSTALLED = 94,  NOTIFIED_CHATAPP_UPDATED = 95,  NOTIFIED_CHATAPP_NEW_MARK = 96,  NOTIFIED_CHATAPP_DELETED = 97,  NOTIFIED_CHATAPP_SYNC = 98,  NOTIFIED_UPDATE_MESSAGE = 99,
}

enum PayloadType {
  PAYLOAD_BUY = 101,  PAYLOAD_CS = 111,  PAYLOAD_BONUS = 121,  PAYLOAD_EVENT = 131,
}

enum PaymentPgType {
  PAYMENT_PG_NONE = 0,  PAYMENT_PG_AU = 1,  PAYMENT_PG_AL = 2,
}

enum PaymentType {
  PAYMENT_APPLE = 1,  PAYMENT_GOOGLE = 2,
}

enum ProductBannerLinkType {
  BANNER_LINK_NONE = 0,  BANNER_LINK_ITEM = 1,  BANNER_LINK_URL = 2,  BANNER_LINK_CATEGORY = 3,
}

enum ProductEventType {
  NO_EVENT = 0,  CARRIER_ANY = 65537,  BUDDY_ANY = 131073,  INSTALL_IOS = 196609,  INSTALL_ANDROID = 196610,  MISSION_ANY = 262145,  MUSTBUY_ANY = 327681,
}

enum StickerResourceType {
  STATIC = 1,  ANIMATION = 2,  SOUND = 3,  ANIMATION_SOUND = 4,  POPUP = 5,  POPUP_SOUND = 6,
}

enum PlaceSearchProvider {
  GOOGLE = 0,  BAIDU = 1,
}

enum PointErrorCode {
  REQUEST_DUPLICATION = 3001,  INVALID_PARAMETER = 3002,  NOT_ENOUGH_BALANCE = 3003,  AUTHENTICATION_FAIL = 3004,  API_ACCESS_FORBIDDEN = 3005,  MEMBER_ACCOUNT_NOT_FOUND = 3006,  SERVICE_ACCOUNT_NOT_FOUND = 3007,  TRANSACTION_NOT_FOUND = 3008,  ALREADY_REVERSED_TRANSACTION = 3009,  MESSAGE_NOT_READABLE = 3010,  HTTP_REQUEST_METHOD_NOT_SUPPORTED = 3011,  HTTP_MEDIA_TYPE_NOT_SUPPORTED = 3012,  NOT_ALLOWED_TO_DEPOSIT = 3013,  NOT_ALLOWED_TO_PAY = 3014,  TRANSACTION_ACCESS_FORBIDDEN = 3015,  INVALID_SERVICE_CONFIGURATION = 4001,  DCS_COMMUNICATION_FAIL = 5004,  UPDATE_BALANCE_FAIL = 5007,  SYSTEM_ERROR = 5999,  SYSTEM_MAINTENANCE = 5888,
}

enum ProfileAttribute {
  ALL = 511,  EMAIL = 1,  DISPLAY_NAME = 2,  PHONETIC_NAME = 4,  PICTURE = 8,  STATUS_MESSAGE = 16,  ALLOW_SEARCH_BY_USERID = 32,  ALLOW_SEARCH_BY_EMAIL = 64,  BUDDY_STATUS = 128,  MUSIC_PROFILE = 256,
}

enum PublicType {
  HIDDEN = 0,  PUBLIC = 1000,
}

enum RedirectType {
  NONE = 0,  EXPIRE_SECOND = 1,
}

enum RegistrationType {
  PHONE = 0,  EMAIL_WAP = 1,  FACEBOOK = 2305,  SINA = 2306,  RENREN = 2307,  FEIXIN = 2308,
}

enum ChatRoomAnnouncementType {
  MESSAGE = 0,  NOTE = 1,
}

enum SettingsAttribute {
  ALL = 2147483647,  NOTIFICATION_ENABLE = 1,  NOTIFICATION_MUTE_EXPIRATION = 2,  NOTIFICATION_NEW_MESSAGE = 4,  NOTIFICATION_GROUP_INVITATION = 8,  NOTIFICATION_SHOW_MESSAGE = 16,  NOTIFICATION_INCOMING_CALL = 32,  NOTIFICATION_SOUND_MESSAGE = 256,  NOTIFICATION_SOUND_GROUP = 512,  NOTIFICATION_DISABLED_WITH_SUB = 65536,  NOTIFICATION_PAYMENT = 131072,  PRIVACY_SYNC_CONTACTS = 64,  PRIVACY_SEARCH_BY_PHONE_NUMBER = 128,  PRIVACY_SEARCH_BY_USERID = 8192,  PRIVACY_SEARCH_BY_EMAIL = 16384,  PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN = 2097152,  PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME = 8388608,  PRIVACY_ALLOW_FRIEND_REQUEST = 1073741824,  PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND = 33554432,  PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL = 67108864,  PRIVACY_AGREE_USE_PAIDCALL = 134217728,  CONTACT_MY_TICKET = 1024,  IDENTITY_PROVIDER = 2048,  IDENTITY_IDENTIFIER = 4096,  SNS_ACCOUNT = 524288,  PHONE_REGISTRATION = 1048576,  PREFERENCE_LOCALE = 32768,  CUSTOM_MODE = 4194304,  EMAIL_CONFIRMATION_STATUS = 16777216,  ACCOUNT_MIGRATION_PINCODE = 268435456,  ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE = 536870912,  SECURITY_CENTER_SETTINGS = 262144,
}

enum SettingsAttributeEx {
  NOTIFICATION_ENABLE = 0,  NOTIFICATION_MUTE_EXPIRATION = 1,  NOTIFICATION_NEW_MESSAGE = 2,  NOTIFICATION_GROUP_INVITATION = 3,  NOTIFICATION_SHOW_MESSAGE = 4,  NOTIFICATION_INCOMING_CALL = 5,  NOTIFICATION_SOUND_MESSAGE = 8,  NOTIFICATION_SOUND_GROUP = 9,  NOTIFICATION_DISABLED_WITH_SUB = 16,  NOTIFICATION_PAYMENT = 17,  NOTIFICATION_MENTION = 40,  NOTIFICATION_THUMBNAIL = 45,  PRIVACY_SYNC_CONTACTS = 6,  PRIVACY_SEARCH_BY_PHONE_NUMBER = 7,  PRIVACY_SEARCH_BY_USERID = 13,  PRIVACY_SEARCH_BY_EMAIL = 14,  PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN = 21,  PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME = 23,  PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME = 35,  PRIVACY_ALLOW_FRIEND_REQUEST = 30,  PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND = 25,  PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL = 26,  PRIVACY_AGREE_USE_PAIDCALL = 27,  CONTACT_MY_TICKET = 10,  IDENTITY_PROVIDER = 11,  IDENTITY_IDENTIFIER = 12,  SNS_ACCOUNT = 19,  PHONE_REGISTRATION = 20,  PREFERENCE_LOCALE = 15,  CUSTOM_MODE = 22,  EMAIL_CONFIRMATION_STATUS = 24,  ACCOUNT_MIGRATION_PINCODE = 28,  ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE = 29,  SECURITY_CENTER_SETTINGS = 18,  E2EE_ENABLE = 33,  ENABLE_SOUND_TO_TEXT = 47,  HITOKOTO_BACKUP_REQUESTED = 34,  CONTACT_ALLOW_FOLLOWING = 36,  PRIVACY_ALLOW_NEARBY = 37,  AGREEMENT_NEARBY = 38,  AGREEMENT_SQUARE = 39,  ALLOW_UNREGISTRATION_SECONDARY_DEVICE = 41,  AGREEMENT_BOT_USE = 42,  AGREEMENT_SHAKE_FUNCTION = 43,  AGREEMENT_MOBILE_CONTACT_NAME = 44,  AGREEMENT_SOUND_TO_TEXT = 46,
}

enum SnsIdType {
  FACEBOOK = 1,  SINA = 2,  RENREN = 3,  FEIXIN = 4,  BBM = 5,
}

enum SpammerReason {
  OTHER = 0,  ADVERTISING = 1,  GENDER_HARASSMENT = 2,  HARASSMENT = 3,
}

enum SyncActionType {
  SYNC = 0,  REPORT = 1,
}

enum SpotCategory {
  UNKNOWN = 0,  GOURMET = 1,  BEAUTY = 2,  TRAVEL = 3,  SHOPPING = 4,  ENTERTAINMENT = 5,  SPORTS = 6,  TRANSPORT = 7,  LIFE = 8,  HOSPITAL = 9,  FINANCE = 10,  EDUCATION = 11,  OTHER = 12,  ALL = 10000,
}

enum SyncCategory {
  PROFILE = 0,  SETTINGS = 1,  OPS = 2,  CONTACT = 3,  RECOMMEND = 4,  BLOCK = 5,  GROUP = 6,  ROOM = 7,  NOTIFICATION = 8,  ADDRESS_BOOK = 9,
}

enum TMessageBoxStatus {
  ACTIVATED = 1,  UNREAD = 2,
}

enum UniversalNotificationServiceErrorCode {
  INTERNAL_ERROR = 0,  INVALID_KEY = 1,  ILLEGAL_ARGUMENT = 2,  TOO_MANY_REQUEST = 3,  AUTHENTICATION_FAILED = 4,  NO_WRITE_PERMISSION = 5,
}

enum UnregistrationReason {
  UNREGISTRATION_REASON_UNREGISTER_USER = 1,  UNREGISTRATION_REASON_UNBIND_DEVICE = 2,
}

enum UserAgeType {
  OVER = 1,  UNDER = 2,  UNDEFINED = 3,
}

enum VerificationMethod {
  NO_AVAILABLE = 0,  PIN_VIA_SMS = 1,  CALLERID_INDIGO = 2,  PIN_VIA_TTS = 4,  SKIP = 10,
}

enum VerificationResult {
  FAILED = 0,  OK_NOT_REGISTERED_YET = 1,  OK_REGISTERED_WITH_SAME_DEVICE = 2,  OK_REGISTERED_WITH_ANOTHER_DEVICE = 3,
}

enum WapInvitationType {
  REGISTRATION = 1,  CHAT = 2,
}

enum MediaType {
  AUDIO = 1,  VIDEO = 2,
}

enum SQErrorCode {
  UNKNOWN = 0,  ILLEGAL_ARGUMENT = 400,  AUTHENTICATION_FAILURE = 401,  FORBIDDEN = 403,  NOT_FOUND = 404,  REVISION_MISMATCH = 409,  PRECONDITION_FAILED = 410,  INTERNAL_ERROR = 500,  NOT_IMPLEMENTED = 501,  TRY_AGAIN_LATER = 505,
}

enum SquareEventType {
  RECEIVE_MESSAGE = 0,  SEND_MESSAGE = 1,  NOTIFIED_JOIN_SQUARE_CHAT = 2,  NOTIFIED_INVITE_INTO_SQUARE_CHAT = 3,  NOTIFIED_LEAVE_SQUARE_CHAT = 4,  NOTIFIED_DESTROY_MESSAGE = 5,  NOTIFIED_MARK_AS_READ = 6,  NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE = 7,  NOTIFIED_KICKOUT_FROM_SQUARE = 19,  NOTIFIED_SHUTDOWN_SQUARE = 18,  NOTIFIED_DELETE_SQUARE_CHAT = 20,  NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME = 30,  NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE = 31,  NOTIFIED_UPDATE_SQUARE_CHAT_ANNOUNCEMENT = 37,  NOTIFIED_ADD_BOT = 33,  NOTIFIED_REMOVE_BOT = 34,  NOTIFIED_UPDATE_SQUARE = 8,  NOTIFIED_UPDATE_SQUARE_STATUS = 9,  NOTIFIED_UPDATE_SQUARE_AUTHORITY = 10,  NOTIFIED_UPDATE_SQUARE_MEMBER = 11,  NOTIFIED_UPDATE_SQUARE_CHAT = 12,  NOTIFIED_UPDATE_SQUARE_CHAT_STATUS = 13,  NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER = 14,  NOTIFIED_CREATE_SQUARE_MEMBER = 15,  NOTIFIED_CREATE_SQUARE_CHAT_MEMBER = 16,  NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION = 17,  NOTIFIED_UPDATE_SQUARE_FEATURE_SET = 32,  NOTIFIED_UPDATE_SQUARE_NOTE_STATUS = 36,  NOTIFICATION_JOIN_REQUEST = 21,  NOTIFICATION_JOINED = 22,  NOTIFICATION_PROMOTED_COADMIN = 23,  NOTIFICATION_PROMOTED_ADMIN = 24,  NOTIFICATION_DEMOTED_MEMBER = 25,  NOTIFICATION_KICKED_OUT = 26,  NOTIFICATION_SQUARE_DELETE = 27,  NOTIFICATION_SQUARE_CHAT_DELETE = 28,  NOTIFICATION_MESSAGE = 29,
}

enum SquareMemberRelationState {
  NONE = 1,  BLOCKED = 2,
}

enum SquareFeatureControlState {
  DISABLED = 1,  ENABLED = 2,
}

enum BooleanState {
  NONE = 0,  OFF = 1,  ON = 2,
}

enum SquareType {
  CLOSED = 0,  OPEN = 1,
}

enum SquareChatType {
  OPEN = 1,  SECRET = 2,  ONE_ON_ONE = 3,  SQUARE_DEFAULT = 4,
}

enum SquareErrorCode {
  UNKNOWN = 0,  INTERNAL_ERROR = 500,  NOT_IMPLEMENTED = 501,  TRY_AGAIN_LATER = 503,  MAINTENANCE = 505,  ILLEGAL_ARGUMENT = 400,  AUTHENTICATION_FAILURE = 401,  FORBIDDEN = 403,  NOT_FOUND = 404,  REVISION_MISMATCH = 409,  PRECONDITION_FAILED = 410,
}

enum SquareChatState {
  ALIVE = 0,  DELETED = 1,  SUSPENDED = 2,
}

enum SquareFeatureSetAttribute {
  CREATING_SECRET_SQUARE_CHAT = 1,  INVITING_INTO_OPEN_SQUARE_CHAT = 2,
}

enum SquareMembershipState {
  JOIN_REQUESTED = 1,  JOINED = 2,  REJECTED = 3,  LEFT = 4,  KICK_OUT = 5,  BANNED = 6,  DELETED = 7,
}

enum SquareChatMemberAttribute {
  MEMBERSHIP_STATE = 4,  NOTIFICATION_MESSAGE = 6,
}

enum SquareMemberRole {
  ADMIN = 1,  CO_ADMIN = 2,  MEMBER = 10,
}

enum PreconditionFailedExtraInfo {
  DUPLICATED_DISPLAY_NAME = 0,
}

enum SquareChatMembershipState {
  JOINED = 1,  LEFT = 2,
}

enum FetchDirection {
  FORWARD = 1,  BACKWARD = 2,
}

enum SquareAttribute {
  NAME = 1,  WELCOME_MESSAGE = 2,  PROFILE_IMAGE = 3,  DESCRIPTION = 4,  SEARCHABLE = 6,  CATEGORY = 7,  INVITATION_URL = 8,  ABLE_TO_USE_INVITATION_URL = 9,  STATE = 10,
}

enum SquareAuthorityAttribute {
  UPDATE_SQUARE_PROFILE = 1,  INVITE_NEW_MEMBER = 2,  APPROVE_JOIN_REQUEST = 3,  CREATE_POST = 4,  CREATE_OPEN_SQUARE_CHAT = 5,  DELETE_SQUARE_CHAT_OR_POST = 6,  REMOVE_SQUARE_MEMBER = 7,  GRANT_ROLE = 8,  ENABLE_INVITATION_TICKET = 9,  CREATE_CHAT_ANNOUNCEMENT = 10,
}

enum SquareEventStatus {
  NORMAL = 1,  ALERT_DISABLED = 2,
}

enum PType {
  STICKER = 1,  THEME = 2,  STICON = 3,
}

enum PromotionType {
  NONE = 0,  CARRIER = 1,  BUDDY = 2,  INSTALL = 3,  MISSION = 4,  MUSTBUY = 5,
}

enum PMType {
  DEFAULT = 1,  VIEW_VIDEO = 2,
}

enum SRType {
  STATIC = 1,  ANIMATION = 2,  SOUND = 3,  ANIMATION_SOUND = 4,  POPUP = 5,  l = 6,  POPUP_SOUND = 6,
}

enum TRType {
  STATIC = 1,  ANIMATION = 2,
}

enum SubType {
  GENERAL = 0,  CREATORS = 1,
}

enum IdentityResponseType {
  UNKNOWN = 0,  SUCCESS = 1,  REQUIRE_SERVER_SIDE_EMAIL = 2,  REQUIRE_CLIENT_SIDE_EMAIL = 3,
}

enum AvailableChatTypes {
  PERSONAL = 1,  ROOM = 2,  GROUP = 3,  SQUARE_CHAT = 4,
}

enum ChatAppExceptionCode {
  INVALID_REQUEST = 1,  UNAUTHORIZED = 2,  SERVER_ERROR = 100,
}

enum ChatappCategory {
  PRIORITY = 2,  REGULAR = 1,  MORE = 3,
}

enum SuggestDictionaryIncrementStatus {
  SUCCESS = 0,  INVALID_REVISION = 1,  TOO_LARGE_DATA = 2,  SCHEME_CHANGED = 3,  RETRY = 4,  FAIL = 5,  TOO_OLD_DATA = 6,
}

struct Chatapp {
  string chatappId;
  string name;
  string icon;
  string url;
  AvailableChatTypes[] availableChatTypes;
  
  mixin TStructHelpers!([
    TFieldMeta(`chatappId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`icon`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`url`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`availableChatTypes`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct MyChatapp {
  Chatapp app;
  ChatappCategory category;
  long priority;
  
  mixin TStructHelpers!([
    TFieldMeta(`app`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`category`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`priority`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetMyChatappsResponse {
  MyChatapp[] apps;
  string continuationToken;
  
  mixin TStructHelpers!([
    TFieldMeta(`apps`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetMyChatappsRequest {
  string language;
  string continuationToken;
  
  mixin TStructHelpers!([
    TFieldMeta(`language`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetChatappRequest {
  string chatappId;
  string language;
  
  mixin TStructHelpers!([
    TFieldMeta(`chatappId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`language`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChatappException {
  ChatAppExceptionCode code;
  string reason;
  
  mixin TStructHelpers!([
    TFieldMeta(`code`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reason`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetChatappResponse {
  Chatapp app;
  
  mixin TStructHelpers!([
    TFieldMeta(`app`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct WebLoginResponse {
  string returnUrl;
  
  mixin TStructHelpers!([
    TFieldMeta(`returnUrl`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct WebLoginRequest {
  string hookedFullUrl;
  string sessionString;
  bool fromIAB;
  
  mixin TStructHelpers!([
    TFieldMeta(`hookedFullUrl`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sessionString`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`fromIAB`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct TestCallRoute {
  string token;
  CallHost voipServer;
  
  mixin TStructHelpers!([
    TFieldMeta(`token`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`voipServer`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ProfileContent {
  string value;
  string[string] meta;
  
  mixin TStructHelpers!([
    TFieldMeta(`value`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`meta`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateProfileAttributesRequest {
  ProfileContent[ProfileAttribute] profileAttributes;
  
  mixin TStructHelpers!([
    TFieldMeta(`profileAttributes`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct IdentityCredentialResponse {
  string[string] metaData;
  IdentityResponseType responseType;
  string confirmationVerifier;
  long timeoutInSeconds;
  
  mixin TStructHelpers!([
    TFieldMeta(`metaData`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`responseType`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`confirmationVerifier`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`timeoutInSeconds`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct IdentifierConfirmationRequest {
  string[string] metaData;
  bool forceRegistration;
  string verificationCode;
  
  mixin TStructHelpers!([
    TFieldMeta(`metaData`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`forceRegistration`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`verificationCode`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct IdentityCredentialRequest {
  string[string] metaData;
  IdentityProvider identityProvider;
  string cipherKeyId;
  string cipherText;
  IdentifierConfirmationRequest confirmationRequest;
  
  mixin TStructHelpers!([
    TFieldMeta(`metaData`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`identityProvider`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`cipherKeyId`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`cipherText`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`confirmationRequest`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct AuthSessionRequest {
  string[string] metaData;
  
  mixin TStructHelpers!([
    TFieldMeta(`metaData`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CategoryItem {
  int collection;
  int cat;
  string name;
  
  mixin TStructHelpers!([
    TFieldMeta(`collection`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`cat`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PromotionBuddyInfo {
  string buddyMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`buddyMid`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PromotionInstallInfo {
  string downloadUrl;
  string customUrlSchema;
  
  mixin TStructHelpers!([
    TFieldMeta(`downloadUrl`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`customUrlSchema`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PromotionMissionInfo {
  PMType promotionMissionType;
  bool missionCompleted;
  string downloadUrl;
  string customUrlSchema;
  
  mixin TStructHelpers!([
    TFieldMeta(`promotionMissionType`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`missionCompleted`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`downloadUrl`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`customUrlSchema`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PromotionDetail {
  PromotionBuddyInfo promotionBuddyInfo;
  PromotionInstallInfo promotionInstallInfo;
  PromotionMissionInfo promotionMissionInfo;
  
  mixin TStructHelpers!([
    TFieldMeta(`promotionBuddyInfo`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`promotionInstallInfo`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`promotionMissionInfo`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PromotionInfo {
  PromotionType promotionType;
  PromotionBuddyInfo buddyInfo;
  PromotionDetail promotionDetail;
  
  mixin TStructHelpers!([
    TFieldMeta(`promotionType`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`buddyInfo`, 51, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`promotionDetail`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct StickerProperty {
  bool hasAnimation;
  bool hasSound;
  bool hasPopup;
  SRType stickerResourceType;
  string stickerOptions;
  int compactStickerOptions;
  string stickerHash;
  HashSet!(string) stickerIds;
  
  mixin TStructHelpers!([
    TFieldMeta(`hasAnimation`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hasSound`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hasPopup`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`stickerResourceType`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`stickerOptions`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`compactStickerOptions`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`stickerHash`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`stickerIds`, 8, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ThemeProperty {
  string thumbnailUrl;
  TRType themeResourceType;
  
  mixin TStructHelpers!([
    TFieldMeta(`thumbnailUrl`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`themeResourceType`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SticonProperty {
  HashSet!(string) sticonIds;
  
  mixin TStructHelpers!([
    TFieldMeta(`sticonIds`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ProductProperty {
  StickerProperty stickerProperty;
  SticonProperty sticonProperty;
  ThemeProperty themeProperty;
  
  mixin TStructHelpers!([
    TFieldMeta(`stickerProperty`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sticonProperty`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`themeProperty`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ProductSearchSummary {
  string id;
  PType type;
  string name;
  string author;
  PromotionInfo promotionInfo;
  long version;
  bool newFlag;
  int priceTier;
  string priceInLineCoin;
  ProductProperty property;
  SubType subType;
  bool onSale;
  bool availableForPresent;
  bool availableForPurchase;
  int validDays;
  string authorId;
  bool saleFlag;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`author`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`promotionInfo`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`version`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`newFlag`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`priceTier`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`priceInLineCoin`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`property`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`subType`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`onSale`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`availableForPresent`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`availableForPurchase`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`validDays`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`authorId`, 16, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`saleFlag`, 17, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ServiceItem {
  string id;
  string title;
  int g;
  SubType subType;
  string appId;
  string channelId;
  string badge;
  string iconUrl;
  string downloadUrl;
  string launchScheme;
  bool iconTint;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`title`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`g`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`subType`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`appId`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`channelId`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`badge`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`iconUrl`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`downloadUrl`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`launchScheme`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`iconTint`, 11, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct AdditionalInfoItem {
  string id;
  int g;
  string title;
  string descr;
  string iconUrl;
  string link;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`g`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`title`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`descr`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`iconUrl`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`link`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct YellowpageItem {
  string id;
  string mid;
  string name;
  string address;
  double latitude;
  double longitude;
  double distance;
  bool canFreeCall;
  int k;
  string phoneNumber;
  int cat;
  int categoryIcon;
  AdditionalInfoItem[] additionalInfo;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`mid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`address`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`latitude`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`longitude`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`distance`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`canFreeCall`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`k`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`phoneNumber`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`cat`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`categoryIcon`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`additionalInfo`, 13, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct BuddySearchResult {
  string mid;
  string displayName;
  string pictureStatus;
  string picturePath;
  string statusMessage;
  bool businessAccount;
  int iconType;
  BotType botType;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`pictureStatus`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`picturePath`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`statusMessage`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`businessAccount`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`iconType`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`botType`, 8, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GeoAddressItem {
  double latitude;
  double longitude;
  string displayAddress;
  
  mixin TStructHelpers!([
    TFieldMeta(`latitude`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`longitude`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayAddress`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct AddFriendData {
  string mid;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct InstallAppData {
  string[string] installData;
  
  mixin TStructHelpers!([
    TFieldMeta(`installData`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct JumpUrlData {
  mixin TStructHelpers!();
}

struct ButtonActionData {
  AddFriendData addFriendData;
  InstallAppData installAppData;
  JumpUrlData jumpUrlData;
  
  mixin TStructHelpers!([
    TFieldMeta(`addFriendData`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`installAppData`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`jumpUrlData`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ShortcutButtonAction {
  int actionType;
  ButtonActionData actionData;
  
  mixin TStructHelpers!([
    TFieldMeta(`actionType`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`actionData`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ShortcutButton {
  string id;
  string title;
  string url;
  string iconPath;
  ShortcutButtonAction action;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`title`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`url`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`iconPath`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`action`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ShortcutItem {
  string id;
  string title;
  string descr;
  string iconPath;
  string url;
  ShortcutButton[] buttons;
  ShortcutButtonAction action;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`title`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`descr`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`iconPath`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`url`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`buttons`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`action`, 7, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SQCat {
  int id;
  string name;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SearchItemUnion {
  CategoryItem categoryItem;
  SpotItem spotItem;
  ProductSearchSummary productItem;
  ServiceItem serviceItem;
  YellowpageItem yellowpageItem;
  BuddySearchResult oaItem;
  GeoAddressItem geoAddressItem;
  ShortcutItem shortcutItem;
  SquareInfo squareItem;
  SQCat squareCategoryItem;
  
  mixin TStructHelpers!([
    TFieldMeta(`categoryItem`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`spotItem`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`productItem`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`serviceItem`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`yellowpageItem`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`oaItem`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`geoAddressItem`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`shortcutItem`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareItem`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareCategoryItem`, 10, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SearchResultItem {
  string id;
  int ItemType;
  SearchItemUnion item;
  string title;
  string sub1;
  string sub2;
  string iconUrl;
  string titleLink;
  string iconLink;
  string displayTemplate;
  AdditionalInfoItem[] additionalInfo;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`ItemType`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`item`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`title`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sub1`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sub2`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`iconUrl`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`titleLink`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`iconLink`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayTemplate`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`additionalInfo`, 11, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SearchResultCollection {
  int collection;
  string title;
  int rank;
  int hits;
  SearchResultItem[] items;
  bool hasNext;
  int[] cat;
  string error;
  string tabTitle;
  int start;
  int length;
  int squareCategoryId;
  
  mixin TStructHelpers!([
    TFieldMeta(`collection`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`title`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`rank`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hits`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`items`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hasNext`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`cat`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`error`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`tabTitle`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`start`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`length`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareCategoryId`, 12, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SearchResult {
  string sid;
  SearchResultCollection[] collections;
  int start;
  int length;
  
  mixin TStructHelpers!([
    TFieldMeta(`sid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`collections`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`start`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`length`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SearchCommonParameter {
  double latitude;
  double longitude;
  string source;
  string region;
  string sid;
  int queryType;
  
  mixin TStructHelpers!([
    TFieldMeta(`latitude`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`longitude`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`source`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`region`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sid`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`queryType`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SearchPagingParameter {
  int collection;
  int start;
  int length;
  SearchCommonParameter commonParam;
  
  mixin TStructHelpers!([
    TFieldMeta(`collection`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`start`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`length`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`commonParam`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Location {
  string title;
  string address;
  double latitude;
  double longitude;
  string phone;
  
  mixin TStructHelpers!([
    TFieldMeta(`title`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`address`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`latitude`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`longitude`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`phone`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct MessageBoxV2MessageId {
  long deliveredTime;
  long messageId;
  
  mixin TStructHelpers!([
    TFieldMeta(`deliveredTime`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageId`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct MessageCommitResult {
  string requestId;
  BuddyResultState state;
  string messageStoreRequestId;
  string[] messageIds;
  long receiverCount;
  long successCount;
  long failCount;
  long blockCount;
  long unregisteredCount;
  long unrelatedCount;
  string errorDescription;
  
  mixin TStructHelpers!([
    TFieldMeta(`requestId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`state`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageStoreRequestId`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageIds`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`receiverCount`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`successCount`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`failCount`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`blockCount`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unregisteredCount`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unrelatedCount`, 16, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`errorDescription`, 21, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CallHost {
  string host;
  int port;
  string zone;
  
  mixin TStructHelpers!([
    TFieldMeta(`host`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`port`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`zone`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct AgeCheckDocomoResult {
  string authUrl;
  UserAgeType userAgeType;
  
  mixin TStructHelpers!([
    TFieldMeta(`authUrl`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`userAgeType`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct AgeCheckRequestResult {
  string authUrl;
  string sessionId;
  
  mixin TStructHelpers!([
    TFieldMeta(`authUrl`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sessionId`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct TextMessageAnnouncementContents {
  string messageId;
  string text;
  string senderSquareMemberMid;
  long createdAt;
  
  mixin TStructHelpers!([
    TFieldMeta(`messageId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`text`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`senderSquareMemberMid`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdAt`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareChatAnnouncementContents {
  TextMessageAnnouncementContents textMessageAnnouncementContents;
  
  mixin TStructHelpers!([
    TFieldMeta(`textMessageAnnouncementContents`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareChatAnnouncement {
  long announcementSeq;
  SquareChatAnnouncementType type;
  SquareChatAnnouncementContents contents;
  
  mixin TStructHelpers!([
    TFieldMeta(`announcementSeq`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contents`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Announcement {
  int index;
  bool forceUpdate;
  string title;
  string text;
  long createdTime;
  string pictureUrl;
  string thumbnailUrl;
  
  mixin TStructHelpers!([
    TFieldMeta(`index`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`forceUpdate`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`title`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`text`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`pictureUrl`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`thumbnailUrl`, 15, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChannelProvider {
  string name;
  
  mixin TStructHelpers!([
    TFieldMeta(`name`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct E2EEPublicKey {
  int version;
  int keyId;
  string keyData;
  long createdTime;
  
  mixin TStructHelpers!([
    TFieldMeta(`version`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`keyId`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`keyData`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChannelDomain {
  string host;
  bool removed;
  
  mixin TStructHelpers!([
    TFieldMeta(`host`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`removed`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct E2EENegotiationResult {
  HashSet!(ContentType) allowedTypes;
  E2EEPublicKey publicKey;
  
  mixin TStructHelpers!([
    TFieldMeta(`allowedTypes`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`publicKey`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct OTPResult {
  string otpId;
  string otp;
  
  mixin TStructHelpers!([
    TFieldMeta(`otpId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`otp`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Square {
  string mid;
  string name;
  string welcomeMessage;
  string profileImageObsHash;
  string desc;
  bool searchable;
  SquareType type;
  int categoryID;
  string invitationURL;
  long revision;
  bool ableToUseInvitationTicket;
  SquareState state;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`welcomeMessage`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`profileImageObsHash`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`desc`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`searchable`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`categoryID`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`invitationURL`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`ableToUseInvitationTicket`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`state`, 12, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareAuthority {
  string squareMid;
  SquareMemberRole updateSquareProfile;
  SquareMemberRole inviteNewMember;
  SquareMemberRole approveJoinRequest;
  SquareMemberRole createPost;
  SquareMemberRole createOpenSquareChat;
  SquareMemberRole deleteSquareChatOrPost;
  SquareMemberRole removeSquareMember;
  SquareMemberRole grantRole;
  SquareMemberRole enableInvitationTicket;
  long revision;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`updateSquareProfile`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`inviteNewMember`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`approveJoinRequest`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createPost`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createOpenSquareChat`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`deleteSquareChatOrPost`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`removeSquareMember`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`grantRole`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`enableInvitationTicket`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 11, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquarePreference {
  long favoriteTimestamp;
  bool notiForNewJoinRequest;
  
  mixin TStructHelpers!([
    TFieldMeta(`favoriteTimestamp`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notiForNewJoinRequest`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareMember {
  string squareMemberMid;
  string squareMid;
  string displayName;
  string profileImageObsHash;
  bool ableToReceiveMessage;
  SquareMembershipState membershipState;
  SquareMemberRole role;
  long revision;
  SquarePreference preference;
  string joinMessage;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMemberMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayName`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`profileImageObsHash`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`ableToReceiveMessage`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`membershipState`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`role`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`preference`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`joinMessage`, 11, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareMemberRelation {
  SquareMemberRelationState state;
  long revision;
  
  mixin TStructHelpers!([
    TFieldMeta(`state`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareFeature {
  SquareFeatureControlState controlState;
  BooleanState booleanValue;
  
  mixin TStructHelpers!([
    TFieldMeta(`controlState`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`booleanValue`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareFeatureSet {
  string squareMid;
  long revision;
  SquareFeature creatingSecretSquareChat;
  SquareFeature invitingIntoOpenSquareChat;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`creatingSecretSquareChat`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`invitingIntoOpenSquareChat`, 12, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareStatus {
  int memberCount;
  int joinRequestCount;
  long lastJoinRequestAt;
  int openChatCount;
  
  mixin TStructHelpers!([
    TFieldMeta(`memberCount`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`joinRequestCount`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`lastJoinRequestAt`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`openChatCount`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareChat {
  string squareChatMid;
  string squareMid;
  SquareChatType type;
  string name;
  string chatImageObsHash;
  long squareChatRevision;
  int maxMemberCount;
  SquareChatState state;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`chatImageObsHash`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatRevision`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`maxMemberCount`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`state`, 8, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct NoteStatus {
  int noteCount;
  long latestCreatedAt;
  
  mixin TStructHelpers!([
    TFieldMeta(`noteCount`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`latestCreatedAt`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareInfo {
  Square square;
  SquareStatus squareStatus;
  NoteStatus squareNoteStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`square`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareStatus`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareNoteStatus`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct BotUseInfo {
  bool botUseAgreementAccepted;
  bool botInFriends;
  string primaryApplication;
  string locale;
  
  mixin TStructHelpers!([
    TFieldMeta(`botUseAgreementAccepted`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`botInFriends`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`primaryApplication`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`locale`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallAdCountry {
  string countryCode;
  string rateDivision;
  
  mixin TStructHelpers!([
    TFieldMeta(`countryCode`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`rateDivision`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallAdResult {
  int adRemains;
  
  mixin TStructHelpers!([
    TFieldMeta(`adRemains`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallBalance {
  PaidCallProductType productType;
  string productName;
  string unit;
  int limitedPaidBalance;
  int limitedFreeBalance;
  int unlimitedPaidBalance;
  int unlimitedFreeBalance;
  long startTime;
  long endTime;
  bool autopayEnabled;
  
  mixin TStructHelpers!([
    TFieldMeta(`productType`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`productName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unit`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limitedPaidBalance`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limitedFreeBalance`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unlimitedPaidBalance`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unlimitedFreeBalance`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`startTime`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`endTime`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`autopayEnabled`, 10, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallCurrencyExchangeRate {
  string currencyCode;
  string currencyName;
  string currencySign;
  bool preferred;
  string coinRate;
  string creditRate;
  
  mixin TStructHelpers!([
    TFieldMeta(`currencyCode`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`currencyName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`currencySign`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`preferred`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`coinRate`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`creditRate`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ExtendedProfileBirthday {
  string year;
  PrivacyLevelType yearPrivacyLevelType;
  bool yearEnabled;
  string day;
  PrivacyLevelType dayPrivacyLevelType;
  bool dayEnabled;
  
  mixin TStructHelpers!([
    TFieldMeta(`year`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`yearPrivacyLevelType`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`yearEnabled`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`day`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`dayPrivacyLevelType`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`dayEnabled`, 7, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ExtendedProfile {
  ExtendedProfileBirthday birthday;
  
  mixin TStructHelpers!([
    TFieldMeta(`birthday`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallDialing {
  PaidCallType type;
  string dialedNumber;
  string serviceDomain;
  PaidCallProductType productType;
  string productName;
  bool multipleProduct;
  PaidCallerIdStatus callerIdStatus;
  int balance;
  string unit;
  int rate;
  string displayCode;
  string calledNumber;
  string calleeNationalNumber;
  string calleeCallingCode;
  string rateDivision;
  int adMaxMin;
  int adRemains;
  string adSessionId;
  
  mixin TStructHelpers!([
    TFieldMeta(`type`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`dialedNumber`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`serviceDomain`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`productType`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`productName`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`multipleProduct`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`callerIdStatus`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`balance`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unit`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`rate`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayCode`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`calledNumber`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`calleeNationalNumber`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`calleeCallingCode`, 16, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`rateDivision`, 17, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`adMaxMin`, 20, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`adRemains`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`adSessionId`, 22, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SpotItem {
  string name;
  string phone;
  SpotCategory category;
  string mid;
  string countryAreaCode;
  bool freePhoneCallable;
  
  mixin TStructHelpers!([
    TFieldMeta(`name`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`phone`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`category`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`mid`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`countryAreaCode`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`freePhoneCallable`, 10, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SpotNearbyItem {
  SpotItem spotItem;
  Location location;
  
  mixin TStructHelpers!([
    TFieldMeta(`spotItem`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`location`, 11, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SpotNearbyResponse {
  SpotNearbyItem[] spotNearbyItems;
  
  mixin TStructHelpers!([
    TFieldMeta(`spotNearbyItems`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SpotPhoneNumberResponse {
  SpotItem[] spotItems;
  
  mixin TStructHelpers!([
    TFieldMeta(`spotItems`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallHistory {
  long seq;
  PaidCallType type;
  string dialedNumber;
  string calledNumber;
  string toMid;
  string toName;
  long setupTime;
  long startTime;
  long endTime;
  long duration;
  int terminate;
  PaidCallProductType productType;
  int charge;
  string unit;
  string result;
  
  mixin TStructHelpers!([
    TFieldMeta(`seq`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`dialedNumber`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`calledNumber`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`toMid`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`toName`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`setupTime`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`startTime`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`endTime`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`duration`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`terminate`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`productType`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`charge`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unit`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`result`, 15, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallHistoryResult {
  PaidCallHistory[] historys;
  bool hasNext;
  
  mixin TStructHelpers!([
    TFieldMeta(`historys`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hasNext`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallMetadataResult {
  PaidCallCurrencyExchangeRate[] currencyExchangeRates;
  string[] recommendedCountryCodes;
  PaidCallAdCountry[] adCountries;
  
  mixin TStructHelpers!([
    TFieldMeta(`currencyExchangeRates`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`recommendedCountryCodes`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`adCountries`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallRedeemResult {
  string eventName;
  int eventAmount;
  
  mixin TStructHelpers!([
    TFieldMeta(`eventName`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`eventAmount`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallResponse {
  CallHost host;
  PaidCallDialing dialing;
  string token;
  SpotItem[] spotItems;
  
  mixin TStructHelpers!([
    TFieldMeta(`host`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`dialing`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`token`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`spotItems`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaidCallUserRate {
  string countryCode;
  int rate;
  string rateDivision;
  string rateName;
  
  mixin TStructHelpers!([
    TFieldMeta(`countryCode`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`rate`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`rateDivision`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`rateName`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChannelInfo {
  string channelId;
  string name;
  string entryPageUrl;
  string descriptionText;
  ChannelProvider provider;
  PublicType publicType;
  string iconImage;
  string[] permissions;
  string iconThumbnailImage;
  ChannelConfiguration[] channelConfigurations;
  bool lcsAllApiUsable;
  HashSet!(ChannelPermission) allowedPermissions;
  ChannelDomain[] channelDomains;
  long updatedTimestamp;
  
  mixin TStructHelpers!([
    TFieldMeta(`channelId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`entryPageUrl`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`descriptionText`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`provider`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`publicType`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`iconImage`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`permissions`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`iconThumbnailImage`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`channelConfigurations`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`lcsAllApiUsable`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`allowedPermissions`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`channelDomains`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`updatedTimestamp`, 16, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ApprovedChannelInfo {
  ChannelInfo channelInfo;
  long approvedAt;
  
  mixin TStructHelpers!([
    TFieldMeta(`channelInfo`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`approvedAt`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ApprovedChannelInfos {
  ApprovedChannelInfo[] approvedChannelInfos;
  long revision;
  
  mixin TStructHelpers!([
    TFieldMeta(`approvedChannelInfos`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct AuthQrcode {
  string qrcode;
  string verifier;
  string callbackUrl;
  
  mixin TStructHelpers!([
    TFieldMeta(`qrcode`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`verifier`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`callbackUrl`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct AnalyticsInfo {
  double gaSamplingRate;
  string tmid;
  
  mixin TStructHelpers!([
    TFieldMeta(`gaSamplingRate`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`tmid`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ContactTransition {
  string ownerMid;
  string targetMid;
  ContactStatus previousStatus;
  ContactStatus resultStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`ownerMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`targetMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`previousStatus`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`resultStatus`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UserTicketResponse {
  string mid;
  string userTicket;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`userTicket`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct BuddyBanner {
  BuddyBannerLinkType buddyBannerLinkType;
  string buddyBannerLink;
  string buddyBannerImageUrl;
  
  mixin TStructHelpers!([
    TFieldMeta(`buddyBannerLinkType`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`buddyBannerLink`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`buddyBannerImageUrl`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct BuddyDetail {
  string mid;
  long memberCount;
  bool onAir;
  bool businessAccount;
  bool addable;
  HashSet!(ContentType) acceptableContentTypes;
  bool capableMyhome;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`memberCount`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`onAir`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`businessAccount`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`addable`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`acceptableContentTypes`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`capableMyhome`, 7, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Contact {
  string mid;
  long createdTime;
  ContactType type;
  ContactStatus status;
  ContactRelation relation;
  string displayName;
  string phoneticName;
  string pictureStatus;
  string thumbnailUrl;
  string statusMessage;
  string displayNameOverridden;
  long favoriteTime;
  bool capableVoiceCall;
  bool capableVideoCall;
  bool capableMyhome;
  bool capableBuddy;
  int attributes;
  long settings;
  string picturePath;
  string recommendParams;
  FriendRequestStatus friendRequestStatus;
  string musicProfile;
  string videoProfile;
  string[string] statusMessageContentMetadata;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`status`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`relation`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayName`, 22, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`phoneticName`, 23, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`pictureStatus`, 24, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`thumbnailUrl`, 25, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`statusMessage`, 26, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayNameOverridden`, 27, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`favoriteTime`, 28, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`capableVoiceCall`, 31, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`capableVideoCall`, 32, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`capableMyhome`, 33, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`capableBuddy`, 34, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`attributes`, 35, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`settings`, 36, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`picturePath`, 37, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`recommendParams`, 38, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`friendRequestStatus`, 39, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`musicProfile`, 40, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`videoProfile`, 42, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`statusMessageContentMetadata`, 43, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct BuddyList {
  string classification;
  string displayName;
  int totalBuddyCount;
  Contact[] popularContacts;
  
  mixin TStructHelpers!([
    TFieldMeta(`classification`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`totalBuddyCount`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`popularContacts`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct RegisterWithPhoneNumberResult {
  string authToken;
  bool recommendEmailRegistration;
  string certificate;
  
  mixin TStructHelpers!([
    TFieldMeta(`authToken`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`recommendEmailRegistration`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`certificate`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct BuddyMessageRequest {
  ContentType contentType;
  string text;
  Location location;
  string content;
  string[string] contentMetadata;
  
  mixin TStructHelpers!([
    TFieldMeta(`contentType`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`text`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`location`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`content`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contentMetadata`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct BuddyOnAirUrls {
  string[string] hls;
  string[string] smoothStreaming;
  
  mixin TStructHelpers!([
    TFieldMeta(`hls`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`smoothStreaming`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct BuddyOnAir {
  string mid;
  long freshnessLifetime;
  string onAirId;
  bool onAir;
  string text;
  long viewerCount;
  long targetCount;
  BuddyOnAirType onAirType;
  BuddyOnAirUrls onAirUrls;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`freshnessLifetime`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`onAirId`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`onAir`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`text`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`viewerCount`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`targetCount`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`onAirType`, 31, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`onAirUrls`, 32, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct BuddyProfile {
  string buddyId;
  string mid;
  string searchId;
  string displayName;
  string statusMessage;
  long contactCount;
  
  mixin TStructHelpers!([
    TFieldMeta(`buddyId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`mid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`searchId`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayName`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`statusMessage`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contactCount`, 11, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CommitMessageResult {
  Message message;
  CommitMessageResultCode code;
  string reason;
  long successCount;
  long failCount;
  long unregisterCount;
  long blockCount;
  
  mixin TStructHelpers!([
    TFieldMeta(`message`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`code`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reason`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`successCount`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`failCount`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unregisterCount`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`blockCount`, 7, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SyncParamMid {
  string mid;
  Diff diff;
  long revision;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`diff`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SIMInfo {
  string phoneNumber;
  string countryCode;
  
  mixin TStructHelpers!([
    TFieldMeta(`phoneNumber`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`countryCode`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SyncParamContact {
  SyncParamMid syncParamMid;
  ContactStatus contactStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`syncParamMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contactStatus`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChannelDomains {
  ChannelDomain[] channelDomains;
  long revision;
  
  mixin TStructHelpers!([
    TFieldMeta(`channelDomains`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ProductCategory {
  long productCategoryId;
  string title;
  int productCount;
  bool newFlag;
  
  mixin TStructHelpers!([
    TFieldMeta(`productCategoryId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`title`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`productCount`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`newFlag`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChannelInfos {
  ChannelInfo[] channelInfos;
  long revision;
  
  mixin TStructHelpers!([
    TFieldMeta(`channelInfos`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChannelNotificationSetting {
  string channelId;
  string name;
  bool notificationReceivable;
  bool messageReceivable;
  bool showDefault;
  
  mixin TStructHelpers!([
    TFieldMeta(`channelId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationReceivable`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageReceivable`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`showDefault`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChannelSyncDatas {
  ChannelInfo[] channelInfos;
  ChannelDomain[] channelDomains;
  long revision;
  long expires;
  
  mixin TStructHelpers!([
    TFieldMeta(`channelInfos`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`channelDomains`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`expires`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct NotiCenterEventData {
  string id;
  string to;
  string from_;
  string toChannel;
  string fromChannel;
  string eventType;
  long createdTime;
  long operationRevision;
  string[string] content;
  string[string] push;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`to`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`from_`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`toChannel`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`fromChannel`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`eventType`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`operationRevision`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`content`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`push`, 10, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChannelToken {
  string token;
  string obsToken;
  long expiration;
  string refreshToken;
  string channelAccessToken;
  
  mixin TStructHelpers!([
    TFieldMeta(`token`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`obsToken`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`expiration`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`refreshToken`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`channelAccessToken`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChannelSettings {
  bool unapprovedMessageReceivable;
  
  mixin TStructHelpers!([
    TFieldMeta(`unapprovedMessageReceivable`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChannelIdWithLastUpdated {
  string channelId;
  long lastUpdated;
  
  mixin TStructHelpers!([
    TFieldMeta(`channelId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`lastUpdated`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Coin {
  int freeCoinBalance;
  int payedCoinBalance;
  int totalCoinBalance;
  int rewardCoinBalance;
  
  mixin TStructHelpers!([
    TFieldMeta(`freeCoinBalance`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`payedCoinBalance`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`totalCoinBalance`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`rewardCoinBalance`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CoinPayLoad {
  int payCoin;
  int freeCoin;
  PayloadType type;
  int rewardCoin;
  
  mixin TStructHelpers!([
    TFieldMeta(`payCoin`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`freeCoin`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`rewardCoin`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CoinHistory {
  long payDate;
  int coinBalance;
  int coin;
  string price;
  string title;
  bool refund;
  string paySeq;
  string currency;
  string currencySign;
  string displayPrice;
  CoinPayLoad payload;
  string channelId;
  
  mixin TStructHelpers!([
    TFieldMeta(`payDate`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`coinBalance`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`coin`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`price`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`title`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`refund`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`paySeq`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`currency`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`currencySign`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayPrice`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`payload`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`channelId`, 12, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CoinHistoryCondition {
  long start;
  int size;
  string language;
  string eddt;
  PaymentType appStoreCode;
  
  mixin TStructHelpers!([
    TFieldMeta(`start`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`size`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`language`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`eddt`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`appStoreCode`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CoinHistoryResult {
  CoinHistory[] historys;
  Coin balance;
  bool hasNext;
  
  mixin TStructHelpers!([
    TFieldMeta(`historys`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`balance`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hasNext`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CoinProductItem {
  string itemId;
  int coin;
  int freeCoin;
  string currency;
  string price;
  string displayPrice;
  string name;
  string desc;
  
  mixin TStructHelpers!([
    TFieldMeta(`itemId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`coin`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`freeCoin`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`currency`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`price`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayPrice`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`desc`, 9, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CoinPurchaseConfirm {
  string orderId;
  PaymentType appStoreCode;
  string receipt;
  string signature;
  string seller;
  string requestType;
  bool ignoreReceipt;
  
  mixin TStructHelpers!([
    TFieldMeta(`orderId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`appStoreCode`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`receipt`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`signature`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`seller`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`requestType`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`ignoreReceipt`, 7, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CoinPurchaseReservation {
  string productId;
  string country;
  string currency;
  string price;
  PaymentType appStoreCode;
  string language;
  PaymentPgType pgCode;
  string redirectUrl;
  
  mixin TStructHelpers!([
    TFieldMeta(`productId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`country`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`currency`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`price`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`appStoreCode`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`language`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`pgCode`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`redirectUrl`, 8, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CoinUseReservationItem {
  string itemId;
  string itemName;
  int amount;
  
  mixin TStructHelpers!([
    TFieldMeta(`itemId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`itemName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`amount`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CoinUseReservation {
  string channelId;
  string shopOrderId;
  PaymentType appStoreCode;
  CoinUseReservationItem[] items;
  string country;
  
  mixin TStructHelpers!([
    TFieldMeta(`channelId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`shopOrderId`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`appStoreCode`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`items`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`country`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CompactContact {
  string mid;
  long createdTime;
  long modifiedTime;
  ContactStatus status;
  long settings;
  string displayNameOverridden;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`modifiedTime`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`status`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`settings`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayNameOverridden`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ContactModification {
  ModificationType type;
  string luid;
  string[] phones;
  string[] emails;
  string[] userids;
  
  mixin TStructHelpers!([
    TFieldMeta(`type`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`luid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`phones`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`emails`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`userids`, 13, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ContactRegistration {
  Contact contact;
  string luid;
  ContactType contactType;
  string contactKey;
  
  mixin TStructHelpers!([
    TFieldMeta(`contact`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`luid`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contactType`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contactKey`, 12, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ContactReport {
  string mid;
  bool exists;
  Contact contact;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`exists`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contact`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ContactReportResult {
  string mid;
  bool exists;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`exists`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct DeviceInfo {
  string deviceName;
  string systemName;
  string systemVersion;
  string model;
  CarrierCode carrierCode;
  string carrierName;
  ApplicationType applicationType;
  
  mixin TStructHelpers!([
    TFieldMeta(`deviceName`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`systemName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`systemVersion`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`model`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`carrierCode`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`carrierName`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`applicationType`, 20, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct EmailConfirmation {
  bool usePasswordSet;
  string email;
  string password;
  bool ignoreDuplication;
  
  mixin TStructHelpers!([
    TFieldMeta(`usePasswordSet`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`email`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`password`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`ignoreDuplication`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct EmailConfirmationSession {
  EmailConfirmationType emailConfirmationType;
  string verifier;
  string targetEmail;
  
  mixin TStructHelpers!([
    TFieldMeta(`emailConfirmationType`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`verifier`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`targetEmail`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct FriendChannelMatrix {
  string channelId;
  string representMid;
  int count;
  int point;
  
  mixin TStructHelpers!([
    TFieldMeta(`channelId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`representMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`count`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`point`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct FriendChannelMatricesResponse {
  long expires;
  FriendChannelMatrix[] matrices;
  
  mixin TStructHelpers!([
    TFieldMeta(`expires`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`matrices`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct FriendRequest {
  string eMid;
  string mid;
  FriendRequestDirection direction;
  FriendRequestMethod method;
  string param;
  long timestamp;
  long seqId;
  string displayName;
  string picturePath;
  string pictureStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`eMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`mid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`direction`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`method`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`param`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`timestamp`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`seqId`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayName`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`picturePath`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`pictureStatus`, 12, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct FriendRequestsInfo {
  int totalIncomingCount;
  int totalOutgoingCount;
  FriendRequest[] recentIncomings;
  FriendRequest[] recentOutgoings;
  int totalIncomingLimit;
  int totalOutgoingLimit;
  
  mixin TStructHelpers!([
    TFieldMeta(`totalIncomingCount`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`totalOutgoingCount`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`recentIncomings`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`recentOutgoings`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`totalIncomingLimit`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`totalOutgoingLimit`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Geolocation {
  double longitude;
  double latitude;
  
  mixin TStructHelpers!([
    TFieldMeta(`longitude`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`latitude`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct NotificationTarget {
  string applicationType;
  string applicationVersion;
  string region;
  
  mixin TStructHelpers!([
    TFieldMeta(`applicationType`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`applicationVersion`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`region`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GlobalEvent {
  string key;
  NotificationTarget[] targets;
  long createdTime;
  long data;
  int maxDelay;
  
  mixin TStructHelpers!([
    TFieldMeta(`key`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`targets`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`data`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`maxDelay`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GroupPreference {
  string invitationTicket;
  long favoriteTimestamp;
  
  mixin TStructHelpers!([
    TFieldMeta(`invitationTicket`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`favoriteTimestamp`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Group {
  string id;
  long createdTime;
  string name;
  string pictureStatus;
  bool preventedJoinByTicket;
  GroupPreference groupPreference;
  Contact[] members;
  Contact creator;
  Contact[] invitee;
  bool notificationDisabled;
  string picturePath;
  string[] memberMids;
  string[] inviteeMids;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`pictureStatus`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`preventedJoinByTicket`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`groupPreference`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`members`, 20, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`creator`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`invitee`, 22, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationDisabled`, 31, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`picturePath`, 32, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`memberMids`, 40, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`inviteeMids`, 41, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct IdentityCredential {
  IdentityProvider provider;
  string identifier;
  string password;
  
  mixin TStructHelpers!([
    TFieldMeta(`provider`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`identifier`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`password`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct LastReadMessageId {
  string mid;
  string lastReadMessageId;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`lastReadMessageId`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct LastReadMessageIds {
  string chatId;
  LastReadMessageId[] lastReadMessageIds;
  
  mixin TStructHelpers!([
    TFieldMeta(`chatId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`lastReadMessageIds`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct VerificationSessionData {
  string sessionId;
  VerificationMethod method;
  string callback;
  string normalizedPhone;
  string countryCode;
  string nationalSignificantNumber;
  VerificationMethod[] availableVerificationMethods;
  string callerIdMask;
  
  mixin TStructHelpers!([
    TFieldMeta(`sessionId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`method`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`callback`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`normalizedPhone`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`countryCode`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`nationalSignificantNumber`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`availableVerificationMethods`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`callerIdMask`, 8, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct LoginResult {
  string authToken;
  string certificate;
  string verifier;
  string pinCode;
  LoginResultType type;
  long lastPrimaryBindTime;
  string displayMessage;
  VerificationSessionData sessionForSMSConfirm;
  
  mixin TStructHelpers!([
    TFieldMeta(`authToken`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`certificate`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`verifier`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`pinCode`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`lastPrimaryBindTime`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayMessage`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sessionForSMSConfirm`, 8, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct LoginRequest {
  int type;
  int identityProvider;
  string identifier;
  string password;
  bool keepLoggedIn;
  string accessLocation;
  string systemName;
  string certificate;
  string verifier;
  string secret;
  int e2eeVersion;
  
  mixin TStructHelpers!([
    TFieldMeta(`type`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`identityProvider`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`identifier`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`password`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`keepLoggedIn`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`accessLocation`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`systemName`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`certificate`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`verifier`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`secret`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`e2eeVersion`, 11, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct LoginSession {
  string tokenKey;
  long expirationTime;
  ApplicationType applicationType;
  string systemName;
  string accessLocation;
  
  mixin TStructHelpers!([
    TFieldMeta(`tokenKey`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`expirationTime`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`applicationType`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`systemName`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`accessLocation`, 22, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Message {
  string _from;
  string displayName;
  string picturePath;
  string type;
  string person;
  string person2;
  string personName;
  string personName2;
  string to;
  MIDType toType;
  string id;
  long createdTime;
  long deliveredTime;
  string text;
  Location location;
  bool hasContent;
  ContentType contentType;
  string contentPreview;
  string[string] contentMetadata;
  byte sessionId;
  string[] chunks;
  string relatedMessageId;
  MessageRelationType messageRelationType;
  int readCount;
  ServiceCode relatedMessageServiceCode;
  
  mixin TStructHelpers!([
    TFieldMeta(`_from`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayName`, 99, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`picturePath`, 98, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 97, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`person`, 96, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`person2`, 95, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`personName`, 94, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`personName2`, 93, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`to`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`toType`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`id`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`deliveredTime`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`text`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`location`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hasContent`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contentType`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contentPreview`, 17, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contentMetadata`, 18, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sessionId`, 19, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`chunks`, 20, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`relatedMessageId`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageRelationType`, 22, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`readCount`, 23, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`relatedMessageServiceCode`, 24, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareMessage {
  Message message;
  MIDType fromType;
  long squareMessageRevision;
  
  mixin TStructHelpers!([
    TFieldMeta(`message`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`fromType`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMessageRevision`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareChatStatusWithoutMessage {
  int memberCount;
  int unreadMessageCount;
  
  mixin TStructHelpers!([
    TFieldMeta(`memberCount`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unreadMessageCount`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareChatStatus {
  SquareMessage lastMessage;
  string senderDisplayName;
  SquareChatStatusWithoutMessage otherStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`lastMessage`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`senderDisplayName`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`otherStatus`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareChatMember {
  string squareMemberMid;
  string squareChatMid;
  long revision;
  SquareChatMembershipState membershipState;
  bool notificationForMessage;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMemberMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`membershipState`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationForMessage`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct MessageOperation {
  long revision;
  long createdTime;
  MessageOperationType type;
  int reqSeq;
  OpStatus status;
  string param1;
  string param2;
  string param3;
  Message message;
  
  mixin TStructHelpers!([
    TFieldMeta(`revision`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reqSeq`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`status`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`param1`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`param2`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`param3`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`message`, 20, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct MessageOperations {
  MessageOperation[] operations;
  bool endFlag;
  
  mixin TStructHelpers!([
    TFieldMeta(`operations`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`endFlag`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct MessageStoreResult {
  string requestId;
  string[] messageIds;
  
  mixin TStructHelpers!([
    TFieldMeta(`requestId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageIds`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct MetaProfile {
  long createTime;
  string regionCode;
  string[RegistrationType] identities;
  
  mixin TStructHelpers!([
    TFieldMeta(`createTime`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`regionCode`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`identities`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct NotificationItem {
  string id;
  string _from;
  string to;
  string fromChannel;
  string toChannel;
  long revision;
  long createdTime;
  string[string] content;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`_from`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`to`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`fromChannel`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`toChannel`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`content`, 9, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct NotificationFetchResult {
  NotificationItemFetchMode fetchMode;
  NotificationItem[] itemList;
  
  mixin TStructHelpers!([
    TFieldMeta(`fetchMode`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`itemList`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Operation {
  long revision;
  long createdTime;
  OpType type;
  int reqSeq;
  string checksum;
  OpStatus status;
  string param1;
  string param2;
  string param3;
  Message message;
  
  mixin TStructHelpers!([
    TFieldMeta(`revision`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reqSeq`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`checksum`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`status`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`param1`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`param2`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`param3`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`message`, 20, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaymentReservation {
  string receiverMid;
  string productId;
  string language;
  string location;
  string currency;
  string price;
  PaymentType appStoreCode;
  string messageText;
  int messageTemplate;
  long packageId;
  
  mixin TStructHelpers!([
    TFieldMeta(`receiverMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`productId`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`language`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`location`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`currency`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`price`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`appStoreCode`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageText`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageTemplate`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`packageId`, 10, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PaymentReservationResult {
  string orderId;
  string confirmUrl;
  string[string] extras;
  
  mixin TStructHelpers!([
    TFieldMeta(`orderId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`confirmUrl`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`extras`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Product {
  string productId;
  long packageId;
  int version;
  string authorName;
  bool onSale;
  int validDays;
  int saleType;
  string copyright;
  string title;
  string descriptionText;
  long shopOrderId;
  string fromMid;
  string toMid;
  long validUntil;
  int priceTier;
  string price;
  string currency;
  string currencySymbol;
  PaymentType paymentType;
  long createDate;
  bool ownFlag;
  ProductEventType eventType;
  string urlSchema;
  string downloadUrl;
  string buddyMid;
  long publishSince;
  bool newFlag;
  bool missionFlag;
  ProductCategory[] categories;
  string missionButtonText;
  string missionShortDescription;
  string authorId;
  bool grantedByDefault;
  int displayOrder;
  bool availableForPresent;
  bool availableForMyself;
  bool hasAnimation;
  bool hasSound;
  bool recommendationsEnabled;
  StickerResourceType stickerResourceType;
  
  mixin TStructHelpers!([
    TFieldMeta(`productId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`packageId`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`version`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`authorName`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`onSale`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`validDays`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`saleType`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`copyright`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`title`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`descriptionText`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`shopOrderId`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`fromMid`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`toMid`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`validUntil`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`priceTier`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`price`, 16, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`currency`, 17, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`currencySymbol`, 18, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`paymentType`, 19, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createDate`, 20, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`ownFlag`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`eventType`, 22, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`urlSchema`, 23, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`downloadUrl`, 24, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`buddyMid`, 25, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`publishSince`, 26, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`newFlag`, 27, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`missionFlag`, 28, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`categories`, 29, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`missionButtonText`, 30, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`missionShortDescription`, 31, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`authorId`, 32, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`grantedByDefault`, 41, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayOrder`, 42, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`availableForPresent`, 43, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`availableForMyself`, 44, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hasAnimation`, 51, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hasSound`, 52, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`recommendationsEnabled`, 53, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`stickerResourceType`, 54, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ProductList {
  bool hasNext;
  long bannerSequence;
  ProductBannerLinkType bannerTargetType;
  string bannerTargetPath;
  Product[] productList;
  string bannerLang;
  
  mixin TStructHelpers!([
    TFieldMeta(`hasNext`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`bannerSequence`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`bannerTargetType`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`bannerTargetPath`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`productList`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`bannerLang`, 8, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct StickerIdRange {
  long start;
  int size;
  
  mixin TStructHelpers!([
    TFieldMeta(`start`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`size`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ProductSimple {
  string productId;
  long packageId;
  int version;
  bool onSale;
  long validUntil;
  StickerIdRange[] stickerIdRanges;
  bool grantedByDefault;
  int displayOrder;
  
  mixin TStructHelpers!([
    TFieldMeta(`productId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`packageId`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`version`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`onSale`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`validUntil`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`stickerIdRanges`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`grantedByDefault`, 41, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayOrder`, 42, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ProductSimpleList {
  bool hasNext;
  int reinvokeHour;
  long lastVersionSeq;
  ProductSimple[] productList;
  long recentNewReleaseDate;
  long recentEventReleaseDate;
  
  mixin TStructHelpers!([
    TFieldMeta(`hasNext`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reinvokeHour`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`lastVersionSeq`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`productList`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`recentNewReleaseDate`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`recentEventReleaseDate`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Profile {
  string mid;
  string userid;
  string phone;
  string email;
  string regionCode;
  string displayName;
  string phoneticName;
  string pictureStatus;
  string thumbnailUrl;
  string statusMessage;
  bool allowSearchByUserid;
  bool allowSearchByEmail;
  string picturePath;
  string musicProfile;
  string videoProfile;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`userid`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`phone`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`email`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`regionCode`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayName`, 20, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`phoneticName`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`pictureStatus`, 22, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`thumbnailUrl`, 23, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`statusMessage`, 24, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`allowSearchByUserid`, 31, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`allowSearchByEmail`, 32, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`picturePath`, 33, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`musicProfile`, 34, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`videoProfile`, 35, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ProximityMatchCandidateResult {
  Contact[] users;
  Contact[] buddies;
  
  mixin TStructHelpers!([
    TFieldMeta(`users`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`buddies`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct RegisterWithSnsIdResult {
  string authToken;
  bool userCreated;
  
  mixin TStructHelpers!([
    TFieldMeta(`authToken`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`userCreated`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct RequestTokenResponse {
  string requestToken;
  string returnUrl;
  
  mixin TStructHelpers!([
    TFieldMeta(`requestToken`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`returnUrl`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Room {
  string mid;
  long createdTime;
  Contact[] contacts;
  bool notificationDisabled;
  string[] memberMids;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contacts`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationDisabled`, 31, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`memberMids`, 40, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SuggestDictionary {
  string language;
  string name;
  
  mixin TStructHelpers!([
    TFieldMeta(`language`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SuggestItemDictionaryIncrement {
  SuggestDictionaryIncrementStatus status;
  long revision;
  string scheme;
  string data;
  
  mixin TStructHelpers!([
    TFieldMeta(`status`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`scheme`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`data`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SuggestTagDictionaryIncrement {
  SuggestDictionaryIncrementStatus status;
  string language;
  long revision;
  string scheme;
  string data;
  
  mixin TStructHelpers!([
    TFieldMeta(`status`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`language`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`scheme`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`data`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SuggestDictionaryIncrements {
  SuggestItemDictionaryIncrement itemIncrement;
  SuggestTagDictionaryIncrement[] tagIncrements;
  
  mixin TStructHelpers!([
    TFieldMeta(`itemIncrement`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`tagIncrements`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SuggestItemDictionaryRevision {
  long revision;
  string scheme;
  
  mixin TStructHelpers!([
    TFieldMeta(`revision`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`scheme`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SuggestTagDictionaryRevision {
  string language;
  long revision;
  string scheme;
  
  mixin TStructHelpers!([
    TFieldMeta(`language`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`scheme`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SuggestDictionaryRevisions {
  SuggestItemDictionaryRevision itemRevision;
  SuggestTagDictionaryRevision[] tagRevisions;
  
  mixin TStructHelpers!([
    TFieldMeta(`itemRevision`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`tagRevisions`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SuggestDictionarySettings {
  long revision;
  long newRevision;
  SuggestDictionary[] dictionaries;
  string[] preloadedDictionaries;
  
  mixin TStructHelpers!([
    TFieldMeta(`revision`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`newRevision`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`dictionaries`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`preloadedDictionaries`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PhoneInfoForChannel {
  string mid;
  string normalizedPhoneNumber;
  bool allowedToSearchByPhoneNumber;
  bool allowedToReceiveMessageFromNonFriend;
  string region;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`normalizedPhoneNumber`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`allowedToSearchByPhoneNumber`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`allowedToReceiveMessageFromNonFriend`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`region`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PhoneVerificationResult {
  VerificationResult verificationResult;
  AccountMigrationCheckType accountMigrationCheckType;
  bool recommendAddFriends;
  
  mixin TStructHelpers!([
    TFieldMeta(`verificationResult`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`accountMigrationCheckType`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`recommendAddFriends`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct PlaceSearchInfo {
  string name;
  string address;
  double latitude;
  double longitude;
  
  mixin TStructHelpers!([
    TFieldMeta(`name`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`address`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`latitude`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`longitude`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct RSAKey {
  string keynm;
  string nvalue;
  string evalue;
  string sessionKey;
  
  mixin TStructHelpers!([
    TFieldMeta(`keynm`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`nvalue`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`evalue`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sessionKey`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SecurityCenterResult {
  string uri;
  string token;
  string cookiePath;
  bool skip;
  
  mixin TStructHelpers!([
    TFieldMeta(`uri`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`token`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`cookiePath`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`skip`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SendBuddyMessageResult {
  string requestId;
  BuddyResultState state;
  string messageId;
  int eventNo;
  long receiverCount;
  long successCount;
  long failCount;
  long cancelCount;
  long blockCount;
  long unregisterCount;
  long timestamp;
  string message;
  
  mixin TStructHelpers!([
    TFieldMeta(`requestId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`state`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageId`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`eventNo`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`receiverCount`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`successCount`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`failCount`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`cancelCount`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`blockCount`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unregisterCount`, 16, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`timestamp`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`message`, 22, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SetBuddyOnAirResult {
  string requestId;
  BuddyResultState state;
  int eventNo;
  long receiverCount;
  long successCount;
  long failCount;
  long cancelCount;
  long unregisterCount;
  long timestamp;
  string message;
  
  mixin TStructHelpers!([
    TFieldMeta(`requestId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`state`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`eventNo`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`receiverCount`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`successCount`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`failCount`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`cancelCount`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unregisterCount`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`timestamp`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`message`, 22, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Settings {
  bool notificationEnable;
  long notificationMuteExpiration;
  bool notificationNewMessage;
  bool notificationGroupInvitation;
  bool notificationShowMessage;
  bool notificationIncomingCall;
  string notificationSoundMessage;
  string notificationSoundGroup;
  bool notificationDisabledWithSub;
  bool privacySyncContacts;
  bool privacySearchByPhoneNumber;
  bool privacySearchByUserid;
  bool privacySearchByEmail;
  bool privacyAllowSecondaryDeviceLogin;
  bool privacyProfileImagePostToMyhome;
  bool privacyReceiveMessagesFromNotFriend;
  string contactMyTicket;
  IdentityProvider identityProvider;
  string identityIdentifier;
  string[SnsIdType] snsAccounts;
  bool phoneRegistration;
  EmailConfirmationStatus emailConfirmationStatus;
  string preferenceLocale;
  string[CustomMode] customModes;
  bool e2eeEnable;
  bool hitokotoBackupRequested;
  bool privacyProfileMusicPostToMyhome;
  bool privacyAllowNearby;
  long agreementNearbyTime;
  long agreementSquareTime;
  bool notificationMention;
  long botUseAgreementAcceptedAt;
  
  mixin TStructHelpers!([
    TFieldMeta(`notificationEnable`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationMuteExpiration`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationNewMessage`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationGroupInvitation`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationShowMessage`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationIncomingCall`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationSoundMessage`, 16, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationSoundGroup`, 17, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationDisabledWithSub`, 18, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`privacySyncContacts`, 20, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`privacySearchByPhoneNumber`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`privacySearchByUserid`, 22, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`privacySearchByEmail`, 23, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`privacyAllowSecondaryDeviceLogin`, 24, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`privacyProfileImagePostToMyhome`, 25, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`privacyReceiveMessagesFromNotFriend`, 26, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contactMyTicket`, 30, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`identityProvider`, 40, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`identityIdentifier`, 41, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`snsAccounts`, 42, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`phoneRegistration`, 43, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`emailConfirmationStatus`, 44, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`preferenceLocale`, 50, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`customModes`, 60, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`e2eeEnable`, 61, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hitokotoBackupRequested`, 62, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`privacyProfileMusicPostToMyhome`, 63, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`privacyAllowNearby`, 65, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`agreementNearbyTime`, 66, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`agreementSquareTime`, 67, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationMention`, 68, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`botUseAgreementAcceptedAt`, 69, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SimpleChannelClient {
  string applicationType;
  string applicationVersion;
  string locale;
  
  mixin TStructHelpers!([
    TFieldMeta(`applicationType`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`applicationVersion`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`locale`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SimpleChannelContact {
  string mid;
  string displayName;
  string pictureStatus;
  string picturePath;
  string statusMessage;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`pictureStatus`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`picturePath`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`statusMessage`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SnsFriend {
  string snsUserId;
  string snsUserName;
  SnsIdType snsIdType;
  
  mixin TStructHelpers!([
    TFieldMeta(`snsUserId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`snsUserName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`snsIdType`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SnsFriendContactRegistration {
  Contact contact;
  SnsIdType snsIdType;
  string snsUserId;
  
  mixin TStructHelpers!([
    TFieldMeta(`contact`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`snsIdType`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`snsUserId`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SnsFriendModification {
  ModificationType type;
  SnsFriend snsFriend;
  
  mixin TStructHelpers!([
    TFieldMeta(`type`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`snsFriend`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SnsFriends {
  SnsFriend[] snsFriends;
  bool hasMore;
  
  mixin TStructHelpers!([
    TFieldMeta(`snsFriends`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hasMore`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SnsIdUserStatus {
  bool userExisting;
  bool phoneNumberRegistered;
  bool sameDevice;
  
  mixin TStructHelpers!([
    TFieldMeta(`userExisting`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`phoneNumberRegistered`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sameDevice`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SnsProfile {
  string snsUserId;
  string snsUserName;
  string email;
  string thumbnailUrl;
  
  mixin TStructHelpers!([
    TFieldMeta(`snsUserId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`snsUserName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`email`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`thumbnailUrl`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SystemConfiguration {
  string endpoint;
  string endpointSsl;
  string updateUrl;
  string c2dmAccount;
  string nniServer;
  
  mixin TStructHelpers!([
    TFieldMeta(`endpoint`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`endpointSsl`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`updateUrl`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`c2dmAccount`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`nniServer`, 12, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Ticket {
  string id;
  long expirationTime;
  int maxUseCount;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`expirationTime`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`maxUseCount`, 21, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct TMessageBox {
  string id;
  string channelId;
  long lastSeq;
  long unreadCount;
  long lastModifiedTime;
  int status;
  MIDType midType;
  Message[] lastMessages;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`channelId`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`lastSeq`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unreadCount`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`lastModifiedTime`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`status`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`midType`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`lastMessages`, 10, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct TMessageBoxWrapUp {
  TMessageBox messageBox;
  string name;
  Contact[] contacts;
  string pictureRevision;
  
  mixin TStructHelpers!([
    TFieldMeta(`messageBox`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contacts`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`pictureRevision`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct TMessageBoxWrapUpResponse {
  TMessageBoxWrapUp[] messageBoxWrapUpList;
  int totalSize;
  
  mixin TStructHelpers!([
    TFieldMeta(`messageBoxWrapUpList`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`totalSize`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct TMessageReadRangeEntry {
  long startMessageId;
  long endMessageId;
  long startTime;
  long endTime;
  
  mixin TStructHelpers!([
    TFieldMeta(`startMessageId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`endMessageId`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`startTime`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`endTime`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct TMessageReadRange {
  string chatId;
  TMessageReadRangeEntry[][string] ranges;
  
  mixin TStructHelpers!([
    TFieldMeta(`chatId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`ranges`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChatRoomAnnouncementContents {
  int displayFields;
  string text;
  string link;
  string thumbnail;
  
  mixin TStructHelpers!([
    TFieldMeta(`displayFields`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`text`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`link`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`thumbnail`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ChatRoomAnnouncement {
  long announcementSeq;
  ChatRoomAnnouncementType type;
  ChatRoomAnnouncementContents contents;
  string creatorMid;
  long createdTime;
  
  mixin TStructHelpers!([
    TFieldMeta(`announcementSeq`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contents`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`creatorMid`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`createdTime`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ErrorExtraInfo {
  PreconditionFailedExtraInfo preconditionFailedExtraInfo;
  
  mixin TStructHelpers!([
    TFieldMeta(`preconditionFailedExtraInfo`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SyncRelations {
  bool syncAll;
  SyncParamContact[] syncParamContact;
  SyncParamMid[] syncParamMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`syncAll`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncParamContact`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncParamMid`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SyncScope {
  bool syncProfile;
  bool syncSettings;
  bool syncSticker;
  bool syncThemeShop;
  SyncRelations contact;
  SyncRelations group;
  SyncRelations room;
  SyncRelations chat;
  
  mixin TStructHelpers!([
    TFieldMeta(`syncProfile`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncSettings`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncSticker`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncThemeShop`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`contact`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`group`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`room`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`chat`, 13, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct JoinSquareResponse {
  Square square;
  SquareAuthority squareAuthority;
  SquareStatus squareStatus;
  SquareMember squareMember;
  SquareFeatureSet squareFeatureSet;
  NoteStatus noteStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`square`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareAuthority`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareStatus`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMember`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareFeatureSet`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`noteStatus`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct JoinSquareRequest {
  string squareMid;
  SquareMember member;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`member`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct JoinSquareChatResponse {
  SquareChat squareChat;
  SquareChatStatus squareChatStatus;
  SquareChatMember squareChatMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChat`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatStatus`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMember`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct JoinSquareChatRequest {
  string squareChatMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SendMessageResponse {
  SquareMessage createdSquareMessage;
  
  mixin TStructHelpers!([
    TFieldMeta(`createdSquareMessage`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SendMessageRequest {
  int reqSeq;
  string squareChatMid;
  SquareMessage squareMessage;
  
  mixin TStructHelpers!([
    TFieldMeta(`reqSeq`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMessage`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct MarkAsReadRequest {
  string squareChatMid;
  string messageId;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageId`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct MarkAsReadResponse {
  mixin TStructHelpers!();
}

struct SubscriptionState {
  long subscriptionId;
  long ttlMillis;
  
  mixin TStructHelpers!([
    TFieldMeta(`subscriptionId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`ttlMillis`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ApproveSquareMembersResponse {
  SquareMember[] approvedMembers;
  SquareStatus status;
  
  mixin TStructHelpers!([
    TFieldMeta(`approvedMembers`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`status`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ApproveSquareMembersRequest {
  string squareMid;
  string[] requestedMemberMids;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`requestedMemberMids`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CreateSquareChatResponse {
  SquareChat squareChat;
  SquareChatStatus squareChatStatus;
  SquareChatMember squareChatMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChat`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatStatus`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMember`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CreateSquareChatRequest {
  int reqSeq;
  SquareChat squareChat;
  string[] squareMemberMids;
  
  mixin TStructHelpers!([
    TFieldMeta(`reqSeq`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChat`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMemberMids`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CreateSquareResponse {
  Square square;
  SquareMember creator;
  SquareAuthority authority;
  SquareStatus status;
  
  mixin TStructHelpers!([
    TFieldMeta(`square`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`creator`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`authority`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`status`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CreateSquareRequest {
  int reqSeq;
  Square square;
  SquareMember creator;
  
  mixin TStructHelpers!([
    TFieldMeta(`reqSeq`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`square`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`creator`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct DeleteSquareResponse {
  mixin TStructHelpers!();
}

struct DeleteSquareRequest {
  string mid;
  long revision;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct DestroyMessageResponse {
  mixin TStructHelpers!();
}

struct DestroyMessageRequest {
  string squareChatMid;
  string messageId;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageId`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareChatMembersRequest {
  string squareChatMid;
  string continuationToken;
  int limit;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limit`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareChatMembersResponse {
  SquareMember squareChatMembers;
  string continuationToken;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMembers`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareChatStatusRequest {
  string squareChatMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareChatStatusResponse {
  SquareChatStatus chatStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`chatStatus`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareChatRequest {
  string squareChatMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareChatResponse {
  SquareChat squareChat;
  SquareChatMember squareChatMember;
  SquareChatStatus squareChatStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChat`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMember`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatStatus`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareAuthorityRequest {
  string squareMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareAuthorityResponse {
  SquareAuthority authority;
  
  mixin TStructHelpers!([
    TFieldMeta(`authority`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetJoinedSquaresRequest {
  string continuationToken;
  int limit;
  
  mixin TStructHelpers!([
    TFieldMeta(`continuationToken`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limit`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetJoinedSquaresResponse {
  Square[] squares;
  SquareMember[string] members;
  SquareAuthority[string] authorities;
  SquareStatus[string] statuses;
  string continuationToken;
  NoteStatus[string] noteStatuses;
  
  mixin TStructHelpers!([
    TFieldMeta(`squares`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`members`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`authorities`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`statuses`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`noteStatuses`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetJoinableSquareChatsRequest {
  string squareMid;
  string continuationToken;
  int limit;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limit`, 11, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetJoinableSquareChatsResponse {
  SquareChat[] squareChats;
  string continuationToken;
  int totalSquareChatCount;
  SquareChatStatus[string] squareChatStatuses;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChats`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`totalSquareChatCount`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatStatuses`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetInvitationTicketUrlRequest {
  string mid;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetInvitationTicketUrlResponse {
  string invitationURL;
  
  mixin TStructHelpers!([
    TFieldMeta(`invitationURL`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct LeaveSquareRequest {
  string squareMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct LeaveSquareResponse {
  mixin TStructHelpers!();
}

struct LeaveSquareChatRequest {
  string squareChatMid;
  bool sayGoodbye;
  long squareChatMemberRevision;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sayGoodbye`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMemberRevision`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct LeaveSquareChatResponse {
  mixin TStructHelpers!();
}

struct SquareMemberSearchOption {
  SquareMembershipState membershipState;
  HashSet!(SquareMemberRole) memberRoles;
  string displayName;
  BooleanState ableToReceiveMessage;
  BooleanState ableToReceiveFriendRequest;
  string chatMidToExcludeMembers;
  bool includingMe;
  
  mixin TStructHelpers!([
    TFieldMeta(`membershipState`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`memberRoles`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`displayName`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`ableToReceiveMessage`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`ableToReceiveFriendRequest`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`chatMidToExcludeMembers`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`includingMe`, 7, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SearchSquareMembersRequest {
  string squareMid;
  SquareMemberSearchOption searchOption;
  string continuationToken;
  int limit;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`searchOption`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limit`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SearchSquareMembersResponse {
  SquareMember[] members;
  long revision;
  string continuationToken;
  int totalCount;
  
  mixin TStructHelpers!([
    TFieldMeta(`members`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`totalCount`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct FindSquareByInvitationTicketRequest {
  string invitationTicket;
  
  mixin TStructHelpers!([
    TFieldMeta(`invitationTicket`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct FindSquareByInvitationTicketResponse {
  Square square;
  SquareMember myMembership;
  SquareAuthority squareAuthority;
  SquareStatus squareStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`square`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`myMembership`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareAuthority`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareStatus`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventReceiveMessage {
  string squareChatMid;
  SquareMessage squareMessage;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMessage`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventSendMessage {
  string squareChatMid;
  SquareMessage squareMessage;
  int reqSeq;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMessage`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reqSeq`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedJoinSquareChat {
  string squareChatMid;
  SquareMember joinedMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`joinedMember`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedInviteIntoSquareChat {
  string squareChatMid;
  SquareMember[] invitees;
  SquareMember invitor;
  SquareMemberRelation invitorRelation;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`invitees`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`invitor`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`invitorRelation`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedLeaveSquareChat {
  string squareChatMid;
  string squareMemberMid;
  bool sayGoodbye;
  SquareMember squareMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMemberMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sayGoodbye`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMember`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedDestroyMessage {
  string squareChatMid;
  string messageId;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageId`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedMarkAsRead {
  string squareChatMid;
  string sMemberMid;
  string messageId;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sMemberMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`messageId`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareMemberProfile {
  string squareChatMid;
  SquareMember squareMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMember`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedKickoutFromSquare {
  string squareChatMid;
  SquareMember[] kickees;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`kickees`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedShutdownSquare {
  string squareChatMid;
  Square square;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`square`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedDeleteSquareChat {
  SquareChat squareChat;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChat`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareChatProfileName {
  string squareChatMid;
  SquareMember editor;
  string updatedChatName;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`editor`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`updatedChatName`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareChatProfileImage {
  string squareChatMid;
  SquareMember editor;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`editor`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareChatStatus {
  string squareChatMid;
  SquareChatStatusWithoutMessage statusWithoutMessage;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`statusWithoutMessage`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareStatus {
  string squareMid;
  SquareStatus squareStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareStatus`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedCreateSquareMember {
  Square square;
  SquareAuthority squareAuthority;
  SquareStatus squareStatus;
  SquareMember squareMember;
  SquareFeatureSet squareFeatureSet;
  
  mixin TStructHelpers!([
    TFieldMeta(`square`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareAuthority`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareStatus`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMember`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareFeatureSet`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedCreateSquareChatMember {
  string squareChatMid;
  string squareMemberMid;
  SquareChatMember squareChatMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMemberMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMember`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareMemberRelation {
  string squareMid;
  string myMemberMid;
  string targetSquareMemberMid;
  SquareMemberRelation squareMemberRelation;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`myMemberMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`targetSquareMemberMid`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMemberRelation`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquare {
  string squareMid;
  Square square;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`square`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareMember {
  string squareMid;
  string squareMemberMid;
  SquareMember squareMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMemberMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMember`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareChat {
  string squareMid;
  string squareChatMid;
  SquareChat squareChat;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChat`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotificationJoinRequest {
  string squareMid;
  string squareName;
  string requestMemberName;
  string profileImageObsHash;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`requestMemberName`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`profileImageObsHash`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotificationMemberUpdate {
  string squareMid;
  string squareName;
  string profileImageObsHash;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`profileImageObsHash`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotificationSquareDelete {
  string squareMid;
  string squareName;
  string profileImageObsHash;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`profileImageObsHash`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotificationSquareChatDelete {
  string squareChatMid;
  string squareChatName;
  string profileImageObsHash;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatName`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`profileImageObsHash`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotificationMessage {
  string squareChatMid;
  SquareMessage squareMessage;
  string senderDisplayName;
  int unreadCount;
  bool requiredToFetchChatEvents;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMessage`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`senderDisplayName`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unreadCount`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`requiredToFetchChatEvents`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareChatMember {
  string squareChatMid;
  string squareMemberMid;
  SquareChatMember squareChatMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMemberMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMember`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareAuthority {
  string squareMid;
  SquareAuthority squareAuthority;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareAuthority`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventNotifiedUpdateSquareFeatureSet {
  SquareFeatureSet squareFeatureSet;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareFeatureSet`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEventPayload {
  SquareEventReceiveMessage receiveMessage;
  SquareEventSendMessage sendMessage;
  SquareEventNotifiedJoinSquareChat notifiedJoinSquareChat;
  SquareEventNotifiedInviteIntoSquareChat notifiedInviteIntoSquareChat;
  SquareEventNotifiedLeaveSquareChat notifiedLeaveSquareChat;
  SquareEventNotifiedDestroyMessage notifiedDestroyMessage;
  SquareEventNotifiedMarkAsRead notifiedMarkAsRead;
  SquareEventNotifiedUpdateSquareMemberProfile notifiedUpdateSquareMemberProfile;
  SquareEventNotifiedKickoutFromSquare notifiedKickoutFromSquare;
  SquareEventNotifiedShutdownSquare notifiedShutdownSquare;
  SquareEventNotifiedDeleteSquareChat notifiedDeleteSquareChat;
  SquareEventNotifiedUpdateSquareChatProfileName notifiedUpdateSquareChatProfileName;
  SquareEventNotifiedUpdateSquareChatProfileImage notifiedUpdateSquareChatProfileImage;
  SquareEventNotifiedUpdateSquareStatus notifiedUpdateSquareStatus;
  SquareEventNotifiedUpdateSquareChatStatus notifiedUpdateSquareChatStatus;
  SquareEventNotifiedCreateSquareMember notifiedCreateSquareMember;
  SquareEventNotifiedCreateSquareChatMember notifiedCreateSquareChatMember;
  SquareEventNotifiedUpdateSquareMemberRelation notifiedUpdateSquareMemberRelation;
  SquareEventNotifiedUpdateSquare notifiedUpdateSquare;
  SquareEventNotifiedUpdateSquareMember notifiedUpdateSquareMember;
  SquareEventNotifiedUpdateSquareChat notifiedUpdateSquareChat;
  SquareEventNotificationJoinRequest notificationJoinRequest;
  SquareEventNotificationMemberUpdate notificationJoined;
  SquareEventNotificationMemberUpdate notificationPromoteCoadmin;
  SquareEventNotificationMemberUpdate notificationPromoteAdmin;
  SquareEventNotificationMemberUpdate notificationDemoteMember;
  SquareEventNotificationMemberUpdate notificationKickedOut;
  SquareEventNotificationSquareDelete notificationSquareDelete;
  SquareEventNotificationSquareChatDelete notificationSquareChatDelete;
  SquareEventNotificationMessage notificationMessage;
  SquareEventNotifiedUpdateSquareChatMember notifiedUpdateSquareChatMember;
  SquareEventNotifiedUpdateSquareAuthority notifiedUpdateSquareAuthority;
  SquareEventNotifiedUpdateSquareFeatureSet notifiedUpdateSquareFeatureSet;
  
  mixin TStructHelpers!([
    TFieldMeta(`receiveMessage`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`sendMessage`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedJoinSquareChat`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedInviteIntoSquareChat`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedLeaveSquareChat`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedDestroyMessage`, 6, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedMarkAsRead`, 7, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareMemberProfile`, 8, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedKickoutFromSquare`, 20, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedShutdownSquare`, 19, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedDeleteSquareChat`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareChatProfileName`, 31, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareChatProfileImage`, 32, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareStatus`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareChatStatus`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedCreateSquareMember`, 16, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedCreateSquareChatMember`, 17, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareMemberRelation`, 18, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquare`, 9, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareMember`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareChat`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationJoinRequest`, 22, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationJoined`, 23, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationPromoteCoadmin`, 24, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationPromoteAdmin`, 25, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationDemoteMember`, 26, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationKickedOut`, 27, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationSquareDelete`, 28, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationSquareChatDelete`, 29, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notificationMessage`, 30, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareChatMember`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareAuthority`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`notifiedUpdateSquareFeatureSet`, 33, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SquareEvent {
  long createdTime;
  SquareEventType type;
  SquareEventPayload payload;
  string syncToken;
  SquareEventStatus eventStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`createdTime`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`type`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`payload`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncToken`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`eventStatus`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct FetchMyEventsRequest {
  long subscriptionId;
  string syncToken;
  int limit;
  string continuationToken;
  
  mixin TStructHelpers!([
    TFieldMeta(`subscriptionId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncToken`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limit`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct FetchMyEventsResponse {
  SubscriptionState subscription;
  SquareEvent[] events;
  string syncToken;
  string continuationToken;
  
  mixin TStructHelpers!([
    TFieldMeta(`subscription`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`events`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncToken`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct FetchSquareChatEventsRequest {
  long subscriptionId;
  string squareChatMid;
  string syncToken;
  int limit;
  FetchDirection direction;
  
  mixin TStructHelpers!([
    TFieldMeta(`subscriptionId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncToken`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limit`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`direction`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct FetchSquareChatEventsResponse {
  SubscriptionState subscription;
  SquareEvent[] events;
  string syncToken;
  string continuationToken;
  
  mixin TStructHelpers!([
    TFieldMeta(`subscription`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`events`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncToken`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct InviteToSquareRequest {
  string squareMid;
  string[] invitees;
  string squareChatMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`invitees`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMid`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct InviteToSquareResponse {
  mixin TStructHelpers!();
}

struct InviteToSquareChatRequest {
  string[] inviteeMids;
  string squareChatMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`inviteeMids`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct InviteToSquareChatResponse {
  string[] inviteeMids;
  
  mixin TStructHelpers!([
    TFieldMeta(`inviteeMids`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareMemberRequest {
  string squareMemberMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMemberMid`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareMemberResponse {
  SquareMember squareMember;
  SquareMemberRelation relation;
  string oneOnOneChatMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMember`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`relation`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`oneOnOneChatMid`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareMembersRequest {
  HashSet!(string) mids;
  
  mixin TStructHelpers!([
    TFieldMeta(`mids`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareMembersResponse {
  SquareMember members;
  
  mixin TStructHelpers!([
    TFieldMeta(`members`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareMemberRelationsRequest {
  SquareMemberRelationState state;
  string continuationToken;
  int limit;
  
  mixin TStructHelpers!([
    TFieldMeta(`state`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limit`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareMemberRelationsResponse {
  SquareMember[] squareMembers;
  SquareMemberRelation[string] relations;
  string continuationToken;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMembers`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`relations`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareMemberRelationRequest {
  string squareMid;
  string targetSquareMemberMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`targetSquareMemberMid`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareMemberRelationResponse {
  string squareMid;
  string targetSquareMemberMid;
  SquareMemberRelation relation;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`targetSquareMemberMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`relation`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct Category {
  int id;
  string name;
  
  mixin TStructHelpers!([
    TFieldMeta(`id`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`name`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareCategoriesRequest {
  mixin TStructHelpers!();
}

struct GetSquareCategoriesResponse {
  Category[] categoryList;
  
  mixin TStructHelpers!([
    TFieldMeta(`categoryList`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareRequest {
  HashSet!(SquareAttribute) updatedAttrs;
  Square square;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatedAttrs`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`square`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareResponse {
  HashSet!(SquareAttribute) updatedAttrs;
  Square square;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatedAttrs`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`square`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SearchSquaresRequest {
  string query;
  string continuationToken;
  int limit;
  
  mixin TStructHelpers!([
    TFieldMeta(`query`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limit`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct SearchSquaresResponse {
  Square[] squares;
  SquareStatus[string] squareStatuses;
  SquareMember[string] myMemberships;
  string continuationToken;
  NoteStatus[string] noteStatuses;
  
  mixin TStructHelpers!([
    TFieldMeta(`squares`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareStatuses`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`myMemberships`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`noteStatuses`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareFeatureSetRequest {
  string squareMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareFeatureSetResponse {
  SquareFeatureSet squareFeatureSet;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareFeatureSet`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareFeatureSetRequest {
  HashSet!(SquareFeatureSetAttribute) updateAttributes;
  SquareFeatureSet squareFeatureSet;
  
  mixin TStructHelpers!([
    TFieldMeta(`updateAttributes`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareFeatureSet`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareFeatureSetResponse {
  HashSet!(SquareFeatureSetAttribute) updateAttributes;
  SquareFeatureSet squareFeatureSet;
  
  mixin TStructHelpers!([
    TFieldMeta(`updateAttributes`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareFeatureSet`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareMemberRequest {
  HashSet!(SquareMemberAttribute) updatedAttrs;
  HashSet!(SquarePreferenceAttribute) updatedPreferenceAttrs;
  SquareMember squareMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatedAttrs`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`updatedPreferenceAttrs`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMember`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareMemberResponse {
  HashSet!(SquareMemberAttribute) updatedAttrs;
  SquareMember squareMember;
  HashSet!(SquarePreferenceAttribute) updatedPreferenceAttrs;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatedAttrs`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMember`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`updatedPreferenceAttrs`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareMembersRequest {
  HashSet!(SquareMemberAttribute) updatedAttrs;
  SquareMember[] members;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatedAttrs`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`members`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareMembersResponse {
  HashSet!(SquareMemberAttribute) updatedAttrs;
  SquareMember editor;
  SquareMember[string] members;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatedAttrs`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`editor`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`members`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct RejectSquareMembersRequest {
  string squareMid;
  string[] requestedMemberMids;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`requestedMemberMids`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct RejectSquareMembersResponse {
  SquareMember[] rejectedMembers;
  SquareStatus status;
  
  mixin TStructHelpers!([
    TFieldMeta(`rejectedMembers`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`status`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct RemoveSubscriptionsRequest {
  long[] unsubscriptions;
  
  mixin TStructHelpers!([
    TFieldMeta(`unsubscriptions`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct RemoveSubscriptionsResponse {
  mixin TStructHelpers!();
}

struct RefreshSubscriptionsRequest {
  long[] subscriptions;
  
  mixin TStructHelpers!([
    TFieldMeta(`subscriptions`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct RefreshSubscriptionsResponse {
  long ttlMillis;
  SubscriptionState[long] subscriptionStates;
  
  mixin TStructHelpers!([
    TFieldMeta(`ttlMillis`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`subscriptionStates`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareChatRequest {
  HashSet!(SquareChatAttribute) updatedAttrs;
  SquareChat squareChat;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatedAttrs`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChat`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareChatResponse {
  HashSet!(SquareChatAttribute) updatedAttrs;
  SquareChat squareChat;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatedAttrs`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChat`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct DeleteSquareChatRequest {
  string squareChatMid;
  long revision;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`revision`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct DeleteSquareChatResponse {
  mixin TStructHelpers!();
}

struct UpdateSquareChatMemberRequest {
  HashSet!(SquareChatMemberAttribute) updatedAttrs;
  SquareChatMember chatMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatedAttrs`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`chatMember`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareChatMemberResponse {
  SquareChatMember updatedChatMember;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatedChatMember`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareAuthorityRequest {
  HashSet!(SquareAuthorityAttribute) updateAttributes;
  SquareAuthority authority;
  
  mixin TStructHelpers!([
    TFieldMeta(`updateAttributes`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`authority`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareAuthorityResponse {
  HashSet!(SquareAuthorityAttribute) updatdAttributes;
  SquareAuthority authority;
  
  mixin TStructHelpers!([
    TFieldMeta(`updatdAttributes`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`authority`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareMemberRelationRequest {
  string squareMid;
  string targetSquareMemberMid;
  HashSet!(SquareMemberRelationAttribute) updatedAttrs;
  SquareMemberRelation relation;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`targetSquareMemberMid`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`updatedAttrs`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`relation`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateSquareMemberRelationResponse {
  string squareMid;
  string targetSquareMemberMid;
  HashSet!(SquareMemberRelationAttribute) updatedAttrs;
  SquareMemberRelation relation;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`targetSquareMemberMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`updatedAttrs`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`relation`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ReportSquareRequest {
  string squareMid;
  ReportType reportType;
  string otherReason;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reportType`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`otherReason`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ReportSquareResponse {
  mixin TStructHelpers!();
}

struct ReportSquareChatRequest {
  string squareMid;
  string squareChatMid;
  ReportType reportType;
  string otherReason;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMid`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reportType`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`otherReason`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ReportSquareChatResponse {
  mixin TStructHelpers!();
}

struct ReportSquareMessageRequest {
  string squareMid;
  string squareChatMid;
  string squareMessageId;
  ReportType reportType;
  string otherReason;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMid`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareMessageId`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reportType`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`otherReason`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ReportSquareMessageResponse {
  mixin TStructHelpers!();
}

struct ReportSquareMemberRequest {
  string squareMemberMid;
  ReportType reportType;
  string otherReason;
  string squareChatMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMemberMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reportType`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`otherReason`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMid`, 5, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct ReportSquareMemberResponse {
  mixin TStructHelpers!();
}

struct GetSquareRequest {
  string mid;
  
  mixin TStructHelpers!([
    TFieldMeta(`mid`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareResponse {
  Square square;
  SquareMember myMembership;
  SquareAuthority squareAuthority;
  SquareStatus squareStatus;
  SquareFeatureSet squareFeatureSet;
  NoteStatus noteStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`square`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`myMembership`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareAuthority`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareStatus`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareFeatureSet`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`noteStatus`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareStatusRequest {
  string squareMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareStatusResponse {
  SquareStatus squareStatus;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareStatus`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetNoteStatusRequest {
  string squareMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetNoteStatusResponse {
  string squareMid;
  NoteStatus status;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareMid`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`status`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CreateSquareChatAnnouncementRequest {
  int reqSeq;
  string squareChatMid;
  SquareChatAnnouncement squareChatAnnouncement;
  
  mixin TStructHelpers!([
    TFieldMeta(`reqSeq`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`squareChatAnnouncement`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct CreateSquareChatAnnouncementResponse {
  SquareChatAnnouncement announcement;
  
  mixin TStructHelpers!([
    TFieldMeta(`announcement`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct DeleteSquareChatAnnouncementRequest {
  string squareChatMid;
  long announcementSeq;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`announcementSeq`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct DeleteSquareChatAnnouncementResponse {
  mixin TStructHelpers!();
}

struct GetSquareChatAnnouncementsRequest {
  string squareChatMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`squareChatMid`, 2, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetSquareChatAnnouncementsResponse {
  SquareChatAnnouncement[] announcements;
  
  mixin TStructHelpers!([
    TFieldMeta(`announcements`, 1, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetJoinedSquareChatsRequest {
  string continuationToken;
  int limit;
  
  mixin TStructHelpers!([
    TFieldMeta(`continuationToken`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`limit`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GetJoinedSquareChatsResponse {
  SquareChat[] chats;
  SquareChatMember[string] chatMembers;
  SquareChatStatus[string] statuses;
  string continuationToken;
  
  mixin TStructHelpers!([
    TFieldMeta(`chats`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`chatMembers`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`statuses`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`continuationToken`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

class TalkException : TException {
  ErrorCode code;
  string reason;
  string[string] parameterMap;
  
  mixin TStructHelpers!([
    TFieldMeta(`code`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reason`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`parameterMap`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

class ShouldSyncException : TException {
  long syncOpRevision;
  SyncScope syncScope;
  SyncTriggerReason syncReason;
  string message;
  
  mixin TStructHelpers!([
    TFieldMeta(`syncOpRevision`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncScope`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`syncReason`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`message`, 4, TReq.OPT_IN_REQ_OUT)
  ]);
}

class PointException : TException {
  PointErrorCode code;
  string reason;
  string[string] extra;
  
  mixin TStructHelpers!([
    TFieldMeta(`code`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reason`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`extra`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

class ChannelException : TException {
  ChannelErrorCode code;
  string reason;
  string[string] parameterMap;
  
  mixin TStructHelpers!([
    TFieldMeta(`code`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reason`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`parameterMap`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

class SquareException : TException {
  SQErrorCode errorCode;
  ErrorExtraInfo errorExtraInfo;
  string reason;
  
  mixin TStructHelpers!([
    TFieldMeta(`errorCode`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`errorExtraInfo`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reason`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

class UniversalNotificationServiceException : TException {
  UniversalNotificationServiceErrorCode code;
  string reason;
  string[string] parameterMap;
  
  mixin TStructHelpers!([
    TFieldMeta(`code`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`reason`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`parameterMap`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UpdateBuddyProfileResult {
  string requestId;
  BuddyResultState state;
  int eventNo;
  long receiverCount;
  long successCount;
  long failCount;
  long cancelCount;
  long unregisterCount;
  long timestamp;
  string message;
  
  mixin TStructHelpers!([
    TFieldMeta(`requestId`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`state`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`eventNo`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`receiverCount`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`successCount`, 12, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`failCount`, 13, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`cancelCount`, 14, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`unregisterCount`, 15, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`timestamp`, 21, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`message`, 22, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct UserAuthStatus {
  bool phoneNumberRegistered;
  SnsIdType[] registeredSnsIdTypes;
  AccountMigrationCheckType accountMigrationCheckType;
  
  mixin TStructHelpers!([
    TFieldMeta(`phoneNumberRegistered`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`registeredSnsIdTypes`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`accountMigrationCheckType`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct WapInvitation {
  WapInvitationType type;
  string inviteeEmail;
  string inviterMid;
  string roomMid;
  
  mixin TStructHelpers!([
    TFieldMeta(`type`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`inviteeEmail`, 10, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`inviterMid`, 11, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`roomMid`, 12, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GroupCall {
  bool online;
  string chatMid;
  string hostMids;
  string[] memberMids;
  long started;
  GroupCallMediaType mediaType;
  
  mixin TStructHelpers!([
    TFieldMeta(`online`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`chatMid`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`hostMids`, 3, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`memberMids`, 4, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`started`, 5, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`mediaType`, 6, TReq.OPT_IN_REQ_OUT)
  ]);
}

struct GroupCallRoute {
  string token;
  CallHost cscf;
  CallHost mix;
  
  mixin TStructHelpers!([
    TFieldMeta(`token`, 1, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`cscf`, 2, TReq.OPT_IN_REQ_OUT),
    TFieldMeta(`mix`, 3, TReq.OPT_IN_REQ_OUT)
  ]);
}

