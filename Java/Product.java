/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2020-04-18")
public class Product implements org.apache.thrift.TBase<Product, Product._Fields>, java.io.Serializable, Cloneable, Comparable<Product> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Product");

  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PACKAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("packageId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField AUTHOR_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("authorName", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ON_SALE_FIELD_DESC = new org.apache.thrift.protocol.TField("onSale", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField VALID_DAYS_FIELD_DESC = new org.apache.thrift.protocol.TField("validDays", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField SALE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("saleType", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField COPYRIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("copyright", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_TEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("descriptionText", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField SHOP_ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("shopOrderId", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField FROM_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("fromMid", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField TO_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("toMid", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField VALID_UNTIL_FIELD_DESC = new org.apache.thrift.protocol.TField("validUntil", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField PRICE_TIER_FIELD_DESC = new org.apache.thrift.protocol.TField("priceTier", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField CURRENCY_FIELD_DESC = new org.apache.thrift.protocol.TField("currency", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField CURRENCY_SYMBOL_FIELD_DESC = new org.apache.thrift.protocol.TField("currencySymbol", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField PAYMENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("paymentType", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField CREATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("createDate", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField OWN_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("ownFlag", org.apache.thrift.protocol.TType.BOOL, (short)21);
  private static final org.apache.thrift.protocol.TField EVENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("eventType", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField URL_SCHEMA_FIELD_DESC = new org.apache.thrift.protocol.TField("urlSchema", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField DOWNLOAD_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("downloadUrl", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField BUDDY_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("buddyMid", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField PUBLISH_SINCE_FIELD_DESC = new org.apache.thrift.protocol.TField("publishSince", org.apache.thrift.protocol.TType.I64, (short)26);
  private static final org.apache.thrift.protocol.TField NEW_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("newFlag", org.apache.thrift.protocol.TType.BOOL, (short)27);
  private static final org.apache.thrift.protocol.TField MISSION_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("missionFlag", org.apache.thrift.protocol.TType.BOOL, (short)28);
  private static final org.apache.thrift.protocol.TField CATEGORIES_FIELD_DESC = new org.apache.thrift.protocol.TField("categories", org.apache.thrift.protocol.TType.LIST, (short)29);
  private static final org.apache.thrift.protocol.TField MISSION_BUTTON_TEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("missionButtonText", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField MISSION_SHORT_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("missionShortDescription", org.apache.thrift.protocol.TType.STRING, (short)31);
  private static final org.apache.thrift.protocol.TField AUTHOR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("authorId", org.apache.thrift.protocol.TType.STRING, (short)32);
  private static final org.apache.thrift.protocol.TField GRANTED_BY_DEFAULT_FIELD_DESC = new org.apache.thrift.protocol.TField("grantedByDefault", org.apache.thrift.protocol.TType.BOOL, (short)41);
  private static final org.apache.thrift.protocol.TField DISPLAY_ORDER_FIELD_DESC = new org.apache.thrift.protocol.TField("displayOrder", org.apache.thrift.protocol.TType.I32, (short)42);
  private static final org.apache.thrift.protocol.TField AVAILABLE_FOR_PRESENT_FIELD_DESC = new org.apache.thrift.protocol.TField("availableForPresent", org.apache.thrift.protocol.TType.BOOL, (short)43);
  private static final org.apache.thrift.protocol.TField AVAILABLE_FOR_MYSELF_FIELD_DESC = new org.apache.thrift.protocol.TField("availableForMyself", org.apache.thrift.protocol.TType.BOOL, (short)44);
  private static final org.apache.thrift.protocol.TField HAS_ANIMATION_FIELD_DESC = new org.apache.thrift.protocol.TField("hasAnimation", org.apache.thrift.protocol.TType.BOOL, (short)51);
  private static final org.apache.thrift.protocol.TField HAS_SOUND_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSound", org.apache.thrift.protocol.TType.BOOL, (short)52);
  private static final org.apache.thrift.protocol.TField RECOMMENDATIONS_ENABLED_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendationsEnabled", org.apache.thrift.protocol.TType.BOOL, (short)53);
  private static final org.apache.thrift.protocol.TField STICKER_RESOURCE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("stickerResourceType", org.apache.thrift.protocol.TType.I32, (short)54);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ProductStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ProductTupleSchemeFactory();

  public java.lang.String productId; // required
  public long packageId; // required
  public int version; // required
  public java.lang.String authorName; // required
  public boolean onSale; // required
  public int validDays; // required
  public int saleType; // required
  public java.lang.String copyright; // required
  public java.lang.String title; // required
  public java.lang.String descriptionText; // required
  public long shopOrderId; // required
  public java.lang.String fromMid; // required
  public java.lang.String toMid; // required
  public long validUntil; // required
  public int priceTier; // required
  public java.lang.String price; // required
  public java.lang.String currency; // required
  public java.lang.String currencySymbol; // required
  /**
   * 
   * @see PaymentType
   */
  public PaymentType paymentType; // required
  public long createDate; // required
  public boolean ownFlag; // required
  /**
   * 
   * @see ProductEventType
   */
  public ProductEventType eventType; // required
  public java.lang.String urlSchema; // required
  public java.lang.String downloadUrl; // required
  public java.lang.String buddyMid; // required
  public long publishSince; // required
  public boolean newFlag; // required
  public boolean missionFlag; // required
  public java.util.List<ProductCategory> categories; // required
  public java.lang.String missionButtonText; // required
  public java.lang.String missionShortDescription; // required
  public java.lang.String authorId; // required
  public boolean grantedByDefault; // required
  public int displayOrder; // required
  public boolean availableForPresent; // required
  public boolean availableForMyself; // required
  public boolean hasAnimation; // required
  public boolean hasSound; // required
  public boolean recommendationsEnabled; // required
  /**
   * 
   * @see StickerResourceType
   */
  public StickerResourceType stickerResourceType; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PRODUCT_ID((short)1, "productId"),
    PACKAGE_ID((short)2, "packageId"),
    VERSION((short)3, "version"),
    AUTHOR_NAME((short)4, "authorName"),
    ON_SALE((short)5, "onSale"),
    VALID_DAYS((short)6, "validDays"),
    SALE_TYPE((short)7, "saleType"),
    COPYRIGHT((short)8, "copyright"),
    TITLE((short)9, "title"),
    DESCRIPTION_TEXT((short)10, "descriptionText"),
    SHOP_ORDER_ID((short)11, "shopOrderId"),
    FROM_MID((short)12, "fromMid"),
    TO_MID((short)13, "toMid"),
    VALID_UNTIL((short)14, "validUntil"),
    PRICE_TIER((short)15, "priceTier"),
    PRICE((short)16, "price"),
    CURRENCY((short)17, "currency"),
    CURRENCY_SYMBOL((short)18, "currencySymbol"),
    /**
     * 
     * @see PaymentType
     */
    PAYMENT_TYPE((short)19, "paymentType"),
    CREATE_DATE((short)20, "createDate"),
    OWN_FLAG((short)21, "ownFlag"),
    /**
     * 
     * @see ProductEventType
     */
    EVENT_TYPE((short)22, "eventType"),
    URL_SCHEMA((short)23, "urlSchema"),
    DOWNLOAD_URL((short)24, "downloadUrl"),
    BUDDY_MID((short)25, "buddyMid"),
    PUBLISH_SINCE((short)26, "publishSince"),
    NEW_FLAG((short)27, "newFlag"),
    MISSION_FLAG((short)28, "missionFlag"),
    CATEGORIES((short)29, "categories"),
    MISSION_BUTTON_TEXT((short)30, "missionButtonText"),
    MISSION_SHORT_DESCRIPTION((short)31, "missionShortDescription"),
    AUTHOR_ID((short)32, "authorId"),
    GRANTED_BY_DEFAULT((short)41, "grantedByDefault"),
    DISPLAY_ORDER((short)42, "displayOrder"),
    AVAILABLE_FOR_PRESENT((short)43, "availableForPresent"),
    AVAILABLE_FOR_MYSELF((short)44, "availableForMyself"),
    HAS_ANIMATION((short)51, "hasAnimation"),
    HAS_SOUND((short)52, "hasSound"),
    RECOMMENDATIONS_ENABLED((short)53, "recommendationsEnabled"),
    /**
     * 
     * @see StickerResourceType
     */
    STICKER_RESOURCE_TYPE((short)54, "stickerResourceType");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PRODUCT_ID
          return PRODUCT_ID;
        case 2: // PACKAGE_ID
          return PACKAGE_ID;
        case 3: // VERSION
          return VERSION;
        case 4: // AUTHOR_NAME
          return AUTHOR_NAME;
        case 5: // ON_SALE
          return ON_SALE;
        case 6: // VALID_DAYS
          return VALID_DAYS;
        case 7: // SALE_TYPE
          return SALE_TYPE;
        case 8: // COPYRIGHT
          return COPYRIGHT;
        case 9: // TITLE
          return TITLE;
        case 10: // DESCRIPTION_TEXT
          return DESCRIPTION_TEXT;
        case 11: // SHOP_ORDER_ID
          return SHOP_ORDER_ID;
        case 12: // FROM_MID
          return FROM_MID;
        case 13: // TO_MID
          return TO_MID;
        case 14: // VALID_UNTIL
          return VALID_UNTIL;
        case 15: // PRICE_TIER
          return PRICE_TIER;
        case 16: // PRICE
          return PRICE;
        case 17: // CURRENCY
          return CURRENCY;
        case 18: // CURRENCY_SYMBOL
          return CURRENCY_SYMBOL;
        case 19: // PAYMENT_TYPE
          return PAYMENT_TYPE;
        case 20: // CREATE_DATE
          return CREATE_DATE;
        case 21: // OWN_FLAG
          return OWN_FLAG;
        case 22: // EVENT_TYPE
          return EVENT_TYPE;
        case 23: // URL_SCHEMA
          return URL_SCHEMA;
        case 24: // DOWNLOAD_URL
          return DOWNLOAD_URL;
        case 25: // BUDDY_MID
          return BUDDY_MID;
        case 26: // PUBLISH_SINCE
          return PUBLISH_SINCE;
        case 27: // NEW_FLAG
          return NEW_FLAG;
        case 28: // MISSION_FLAG
          return MISSION_FLAG;
        case 29: // CATEGORIES
          return CATEGORIES;
        case 30: // MISSION_BUTTON_TEXT
          return MISSION_BUTTON_TEXT;
        case 31: // MISSION_SHORT_DESCRIPTION
          return MISSION_SHORT_DESCRIPTION;
        case 32: // AUTHOR_ID
          return AUTHOR_ID;
        case 41: // GRANTED_BY_DEFAULT
          return GRANTED_BY_DEFAULT;
        case 42: // DISPLAY_ORDER
          return DISPLAY_ORDER;
        case 43: // AVAILABLE_FOR_PRESENT
          return AVAILABLE_FOR_PRESENT;
        case 44: // AVAILABLE_FOR_MYSELF
          return AVAILABLE_FOR_MYSELF;
        case 51: // HAS_ANIMATION
          return HAS_ANIMATION;
        case 52: // HAS_SOUND
          return HAS_SOUND;
        case 53: // RECOMMENDATIONS_ENABLED
          return RECOMMENDATIONS_ENABLED;
        case 54: // STICKER_RESOURCE_TYPE
          return STICKER_RESOURCE_TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PACKAGEID_ISSET_ID = 0;
  private static final int __VERSION_ISSET_ID = 1;
  private static final int __ONSALE_ISSET_ID = 2;
  private static final int __VALIDDAYS_ISSET_ID = 3;
  private static final int __SALETYPE_ISSET_ID = 4;
  private static final int __SHOPORDERID_ISSET_ID = 5;
  private static final int __VALIDUNTIL_ISSET_ID = 6;
  private static final int __PRICETIER_ISSET_ID = 7;
  private static final int __CREATEDATE_ISSET_ID = 8;
  private static final int __OWNFLAG_ISSET_ID = 9;
  private static final int __PUBLISHSINCE_ISSET_ID = 10;
  private static final int __NEWFLAG_ISSET_ID = 11;
  private static final int __MISSIONFLAG_ISSET_ID = 12;
  private static final int __GRANTEDBYDEFAULT_ISSET_ID = 13;
  private static final int __DISPLAYORDER_ISSET_ID = 14;
  private static final int __AVAILABLEFORPRESENT_ISSET_ID = 15;
  private static final int __AVAILABLEFORMYSELF_ISSET_ID = 16;
  private static final int __HASANIMATION_ISSET_ID = 17;
  private static final int __HASSOUND_ISSET_ID = 18;
  private static final int __RECOMMENDATIONSENABLED_ISSET_ID = 19;
  private int __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PACKAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("packageId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AUTHOR_NAME, new org.apache.thrift.meta_data.FieldMetaData("authorName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ON_SALE, new org.apache.thrift.meta_data.FieldMetaData("onSale", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.VALID_DAYS, new org.apache.thrift.meta_data.FieldMetaData("validDays", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SALE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("saleType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COPYRIGHT, new org.apache.thrift.meta_data.FieldMetaData("copyright", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION_TEXT, new org.apache.thrift.meta_data.FieldMetaData("descriptionText", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHOP_ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("shopOrderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FROM_MID, new org.apache.thrift.meta_data.FieldMetaData("fromMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TO_MID, new org.apache.thrift.meta_data.FieldMetaData("toMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALID_UNTIL, new org.apache.thrift.meta_data.FieldMetaData("validUntil", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PRICE_TIER, new org.apache.thrift.meta_data.FieldMetaData("priceTier", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CURRENCY, new org.apache.thrift.meta_data.FieldMetaData("currency", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CURRENCY_SYMBOL, new org.apache.thrift.meta_data.FieldMetaData("currencySymbol", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYMENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("paymentType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, PaymentType.class)));
    tmpMap.put(_Fields.CREATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("createDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OWN_FLAG, new org.apache.thrift.meta_data.FieldMetaData("ownFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.EVENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("eventType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ProductEventType.class)));
    tmpMap.put(_Fields.URL_SCHEMA, new org.apache.thrift.meta_data.FieldMetaData("urlSchema", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DOWNLOAD_URL, new org.apache.thrift.meta_data.FieldMetaData("downloadUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUDDY_MID, new org.apache.thrift.meta_data.FieldMetaData("buddyMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PUBLISH_SINCE, new org.apache.thrift.meta_data.FieldMetaData("publishSince", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NEW_FLAG, new org.apache.thrift.meta_data.FieldMetaData("newFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MISSION_FLAG, new org.apache.thrift.meta_data.FieldMetaData("missionFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CATEGORIES, new org.apache.thrift.meta_data.FieldMetaData("categories", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProductCategory.class))));
    tmpMap.put(_Fields.MISSION_BUTTON_TEXT, new org.apache.thrift.meta_data.FieldMetaData("missionButtonText", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MISSION_SHORT_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("missionShortDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUTHOR_ID, new org.apache.thrift.meta_data.FieldMetaData("authorId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GRANTED_BY_DEFAULT, new org.apache.thrift.meta_data.FieldMetaData("grantedByDefault", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DISPLAY_ORDER, new org.apache.thrift.meta_data.FieldMetaData("displayOrder", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AVAILABLE_FOR_PRESENT, new org.apache.thrift.meta_data.FieldMetaData("availableForPresent", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.AVAILABLE_FOR_MYSELF, new org.apache.thrift.meta_data.FieldMetaData("availableForMyself", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_ANIMATION, new org.apache.thrift.meta_data.FieldMetaData("hasAnimation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SOUND, new org.apache.thrift.meta_data.FieldMetaData("hasSound", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.RECOMMENDATIONS_ENABLED, new org.apache.thrift.meta_data.FieldMetaData("recommendationsEnabled", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.STICKER_RESOURCE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("stickerResourceType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, StickerResourceType.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Product.class, metaDataMap);
  }

  public Product() {
  }

  public Product(
    java.lang.String productId,
    long packageId,
    int version,
    java.lang.String authorName,
    boolean onSale,
    int validDays,
    int saleType,
    java.lang.String copyright,
    java.lang.String title,
    java.lang.String descriptionText,
    long shopOrderId,
    java.lang.String fromMid,
    java.lang.String toMid,
    long validUntil,
    int priceTier,
    java.lang.String price,
    java.lang.String currency,
    java.lang.String currencySymbol,
    PaymentType paymentType,
    long createDate,
    boolean ownFlag,
    ProductEventType eventType,
    java.lang.String urlSchema,
    java.lang.String downloadUrl,
    java.lang.String buddyMid,
    long publishSince,
    boolean newFlag,
    boolean missionFlag,
    java.util.List<ProductCategory> categories,
    java.lang.String missionButtonText,
    java.lang.String missionShortDescription,
    java.lang.String authorId,
    boolean grantedByDefault,
    int displayOrder,
    boolean availableForPresent,
    boolean availableForMyself,
    boolean hasAnimation,
    boolean hasSound,
    boolean recommendationsEnabled,
    StickerResourceType stickerResourceType)
  {
    this();
    this.productId = productId;
    this.packageId = packageId;
    setPackageIdIsSet(true);
    this.version = version;
    setVersionIsSet(true);
    this.authorName = authorName;
    this.onSale = onSale;
    setOnSaleIsSet(true);
    this.validDays = validDays;
    setValidDaysIsSet(true);
    this.saleType = saleType;
    setSaleTypeIsSet(true);
    this.copyright = copyright;
    this.title = title;
    this.descriptionText = descriptionText;
    this.shopOrderId = shopOrderId;
    setShopOrderIdIsSet(true);
    this.fromMid = fromMid;
    this.toMid = toMid;
    this.validUntil = validUntil;
    setValidUntilIsSet(true);
    this.priceTier = priceTier;
    setPriceTierIsSet(true);
    this.price = price;
    this.currency = currency;
    this.currencySymbol = currencySymbol;
    this.paymentType = paymentType;
    this.createDate = createDate;
    setCreateDateIsSet(true);
    this.ownFlag = ownFlag;
    setOwnFlagIsSet(true);
    this.eventType = eventType;
    this.urlSchema = urlSchema;
    this.downloadUrl = downloadUrl;
    this.buddyMid = buddyMid;
    this.publishSince = publishSince;
    setPublishSinceIsSet(true);
    this.newFlag = newFlag;
    setNewFlagIsSet(true);
    this.missionFlag = missionFlag;
    setMissionFlagIsSet(true);
    this.categories = categories;
    this.missionButtonText = missionButtonText;
    this.missionShortDescription = missionShortDescription;
    this.authorId = authorId;
    this.grantedByDefault = grantedByDefault;
    setGrantedByDefaultIsSet(true);
    this.displayOrder = displayOrder;
    setDisplayOrderIsSet(true);
    this.availableForPresent = availableForPresent;
    setAvailableForPresentIsSet(true);
    this.availableForMyself = availableForMyself;
    setAvailableForMyselfIsSet(true);
    this.hasAnimation = hasAnimation;
    setHasAnimationIsSet(true);
    this.hasSound = hasSound;
    setHasSoundIsSet(true);
    this.recommendationsEnabled = recommendationsEnabled;
    setRecommendationsEnabledIsSet(true);
    this.stickerResourceType = stickerResourceType;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Product(Product other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetProductId()) {
      this.productId = other.productId;
    }
    this.packageId = other.packageId;
    this.version = other.version;
    if (other.isSetAuthorName()) {
      this.authorName = other.authorName;
    }
    this.onSale = other.onSale;
    this.validDays = other.validDays;
    this.saleType = other.saleType;
    if (other.isSetCopyright()) {
      this.copyright = other.copyright;
    }
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetDescriptionText()) {
      this.descriptionText = other.descriptionText;
    }
    this.shopOrderId = other.shopOrderId;
    if (other.isSetFromMid()) {
      this.fromMid = other.fromMid;
    }
    if (other.isSetToMid()) {
      this.toMid = other.toMid;
    }
    this.validUntil = other.validUntil;
    this.priceTier = other.priceTier;
    if (other.isSetPrice()) {
      this.price = other.price;
    }
    if (other.isSetCurrency()) {
      this.currency = other.currency;
    }
    if (other.isSetCurrencySymbol()) {
      this.currencySymbol = other.currencySymbol;
    }
    if (other.isSetPaymentType()) {
      this.paymentType = other.paymentType;
    }
    this.createDate = other.createDate;
    this.ownFlag = other.ownFlag;
    if (other.isSetEventType()) {
      this.eventType = other.eventType;
    }
    if (other.isSetUrlSchema()) {
      this.urlSchema = other.urlSchema;
    }
    if (other.isSetDownloadUrl()) {
      this.downloadUrl = other.downloadUrl;
    }
    if (other.isSetBuddyMid()) {
      this.buddyMid = other.buddyMid;
    }
    this.publishSince = other.publishSince;
    this.newFlag = other.newFlag;
    this.missionFlag = other.missionFlag;
    if (other.isSetCategories()) {
      java.util.List<ProductCategory> __this__categories = new java.util.ArrayList<ProductCategory>(other.categories.size());
      for (ProductCategory other_element : other.categories) {
        __this__categories.add(new ProductCategory(other_element));
      }
      this.categories = __this__categories;
    }
    if (other.isSetMissionButtonText()) {
      this.missionButtonText = other.missionButtonText;
    }
    if (other.isSetMissionShortDescription()) {
      this.missionShortDescription = other.missionShortDescription;
    }
    if (other.isSetAuthorId()) {
      this.authorId = other.authorId;
    }
    this.grantedByDefault = other.grantedByDefault;
    this.displayOrder = other.displayOrder;
    this.availableForPresent = other.availableForPresent;
    this.availableForMyself = other.availableForMyself;
    this.hasAnimation = other.hasAnimation;
    this.hasSound = other.hasSound;
    this.recommendationsEnabled = other.recommendationsEnabled;
    if (other.isSetStickerResourceType()) {
      this.stickerResourceType = other.stickerResourceType;
    }
  }

  public Product deepCopy() {
    return new Product(this);
  }

  @Override
  public void clear() {
    this.productId = null;
    setPackageIdIsSet(false);
    this.packageId = 0;
    setVersionIsSet(false);
    this.version = 0;
    this.authorName = null;
    setOnSaleIsSet(false);
    this.onSale = false;
    setValidDaysIsSet(false);
    this.validDays = 0;
    setSaleTypeIsSet(false);
    this.saleType = 0;
    this.copyright = null;
    this.title = null;
    this.descriptionText = null;
    setShopOrderIdIsSet(false);
    this.shopOrderId = 0;
    this.fromMid = null;
    this.toMid = null;
    setValidUntilIsSet(false);
    this.validUntil = 0;
    setPriceTierIsSet(false);
    this.priceTier = 0;
    this.price = null;
    this.currency = null;
    this.currencySymbol = null;
    this.paymentType = null;
    setCreateDateIsSet(false);
    this.createDate = 0;
    setOwnFlagIsSet(false);
    this.ownFlag = false;
    this.eventType = null;
    this.urlSchema = null;
    this.downloadUrl = null;
    this.buddyMid = null;
    setPublishSinceIsSet(false);
    this.publishSince = 0;
    setNewFlagIsSet(false);
    this.newFlag = false;
    setMissionFlagIsSet(false);
    this.missionFlag = false;
    this.categories = null;
    this.missionButtonText = null;
    this.missionShortDescription = null;
    this.authorId = null;
    setGrantedByDefaultIsSet(false);
    this.grantedByDefault = false;
    setDisplayOrderIsSet(false);
    this.displayOrder = 0;
    setAvailableForPresentIsSet(false);
    this.availableForPresent = false;
    setAvailableForMyselfIsSet(false);
    this.availableForMyself = false;
    setHasAnimationIsSet(false);
    this.hasAnimation = false;
    setHasSoundIsSet(false);
    this.hasSound = false;
    setRecommendationsEnabledIsSet(false);
    this.recommendationsEnabled = false;
    this.stickerResourceType = null;
  }

  public java.lang.String getProductId() {
    return this.productId;
  }

  public Product setProductId(java.lang.String productId) {
    this.productId = productId;
    return this;
  }

  public void unsetProductId() {
    this.productId = null;
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return this.productId != null;
  }

  public void setProductIdIsSet(boolean value) {
    if (!value) {
      this.productId = null;
    }
  }

  public long getPackageId() {
    return this.packageId;
  }

  public Product setPackageId(long packageId) {
    this.packageId = packageId;
    setPackageIdIsSet(true);
    return this;
  }

  public void unsetPackageId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PACKAGEID_ISSET_ID);
  }

  /** Returns true if field packageId is set (has been assigned a value) and false otherwise */
  public boolean isSetPackageId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PACKAGEID_ISSET_ID);
  }

  public void setPackageIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PACKAGEID_ISSET_ID, value);
  }

  public int getVersion() {
    return this.version;
  }

  public Product setVersion(int version) {
    this.version = version;
    setVersionIsSet(true);
    return this;
  }

  public void unsetVersion() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VERSION_ISSET_ID);
  }

  public void setVersionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VERSION_ISSET_ID, value);
  }

  public java.lang.String getAuthorName() {
    return this.authorName;
  }

  public Product setAuthorName(java.lang.String authorName) {
    this.authorName = authorName;
    return this;
  }

  public void unsetAuthorName() {
    this.authorName = null;
  }

  /** Returns true if field authorName is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthorName() {
    return this.authorName != null;
  }

  public void setAuthorNameIsSet(boolean value) {
    if (!value) {
      this.authorName = null;
    }
  }

  public boolean isOnSale() {
    return this.onSale;
  }

  public Product setOnSale(boolean onSale) {
    this.onSale = onSale;
    setOnSaleIsSet(true);
    return this;
  }

  public void unsetOnSale() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ONSALE_ISSET_ID);
  }

  /** Returns true if field onSale is set (has been assigned a value) and false otherwise */
  public boolean isSetOnSale() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ONSALE_ISSET_ID);
  }

  public void setOnSaleIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ONSALE_ISSET_ID, value);
  }

  public int getValidDays() {
    return this.validDays;
  }

  public Product setValidDays(int validDays) {
    this.validDays = validDays;
    setValidDaysIsSet(true);
    return this;
  }

  public void unsetValidDays() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VALIDDAYS_ISSET_ID);
  }

  /** Returns true if field validDays is set (has been assigned a value) and false otherwise */
  public boolean isSetValidDays() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VALIDDAYS_ISSET_ID);
  }

  public void setValidDaysIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VALIDDAYS_ISSET_ID, value);
  }

  public int getSaleType() {
    return this.saleType;
  }

  public Product setSaleType(int saleType) {
    this.saleType = saleType;
    setSaleTypeIsSet(true);
    return this;
  }

  public void unsetSaleType() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SALETYPE_ISSET_ID);
  }

  /** Returns true if field saleType is set (has been assigned a value) and false otherwise */
  public boolean isSetSaleType() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SALETYPE_ISSET_ID);
  }

  public void setSaleTypeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SALETYPE_ISSET_ID, value);
  }

  public java.lang.String getCopyright() {
    return this.copyright;
  }

  public Product setCopyright(java.lang.String copyright) {
    this.copyright = copyright;
    return this;
  }

  public void unsetCopyright() {
    this.copyright = null;
  }

  /** Returns true if field copyright is set (has been assigned a value) and false otherwise */
  public boolean isSetCopyright() {
    return this.copyright != null;
  }

  public void setCopyrightIsSet(boolean value) {
    if (!value) {
      this.copyright = null;
    }
  }

  public java.lang.String getTitle() {
    return this.title;
  }

  public Product setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public java.lang.String getDescriptionText() {
    return this.descriptionText;
  }

  public Product setDescriptionText(java.lang.String descriptionText) {
    this.descriptionText = descriptionText;
    return this;
  }

  public void unsetDescriptionText() {
    this.descriptionText = null;
  }

  /** Returns true if field descriptionText is set (has been assigned a value) and false otherwise */
  public boolean isSetDescriptionText() {
    return this.descriptionText != null;
  }

  public void setDescriptionTextIsSet(boolean value) {
    if (!value) {
      this.descriptionText = null;
    }
  }

  public long getShopOrderId() {
    return this.shopOrderId;
  }

  public Product setShopOrderId(long shopOrderId) {
    this.shopOrderId = shopOrderId;
    setShopOrderIdIsSet(true);
    return this;
  }

  public void unsetShopOrderId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SHOPORDERID_ISSET_ID);
  }

  /** Returns true if field shopOrderId is set (has been assigned a value) and false otherwise */
  public boolean isSetShopOrderId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SHOPORDERID_ISSET_ID);
  }

  public void setShopOrderIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SHOPORDERID_ISSET_ID, value);
  }

  public java.lang.String getFromMid() {
    return this.fromMid;
  }

  public Product setFromMid(java.lang.String fromMid) {
    this.fromMid = fromMid;
    return this;
  }

  public void unsetFromMid() {
    this.fromMid = null;
  }

  /** Returns true if field fromMid is set (has been assigned a value) and false otherwise */
  public boolean isSetFromMid() {
    return this.fromMid != null;
  }

  public void setFromMidIsSet(boolean value) {
    if (!value) {
      this.fromMid = null;
    }
  }

  public java.lang.String getToMid() {
    return this.toMid;
  }

  public Product setToMid(java.lang.String toMid) {
    this.toMid = toMid;
    return this;
  }

  public void unsetToMid() {
    this.toMid = null;
  }

  /** Returns true if field toMid is set (has been assigned a value) and false otherwise */
  public boolean isSetToMid() {
    return this.toMid != null;
  }

  public void setToMidIsSet(boolean value) {
    if (!value) {
      this.toMid = null;
    }
  }

  public long getValidUntil() {
    return this.validUntil;
  }

  public Product setValidUntil(long validUntil) {
    this.validUntil = validUntil;
    setValidUntilIsSet(true);
    return this;
  }

  public void unsetValidUntil() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VALIDUNTIL_ISSET_ID);
  }

  /** Returns true if field validUntil is set (has been assigned a value) and false otherwise */
  public boolean isSetValidUntil() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VALIDUNTIL_ISSET_ID);
  }

  public void setValidUntilIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VALIDUNTIL_ISSET_ID, value);
  }

  public int getPriceTier() {
    return this.priceTier;
  }

  public Product setPriceTier(int priceTier) {
    this.priceTier = priceTier;
    setPriceTierIsSet(true);
    return this;
  }

  public void unsetPriceTier() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRICETIER_ISSET_ID);
  }

  /** Returns true if field priceTier is set (has been assigned a value) and false otherwise */
  public boolean isSetPriceTier() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRICETIER_ISSET_ID);
  }

  public void setPriceTierIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRICETIER_ISSET_ID, value);
  }

  public java.lang.String getPrice() {
    return this.price;
  }

  public Product setPrice(java.lang.String price) {
    this.price = price;
    return this;
  }

  public void unsetPrice() {
    this.price = null;
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return this.price != null;
  }

  public void setPriceIsSet(boolean value) {
    if (!value) {
      this.price = null;
    }
  }

  public java.lang.String getCurrency() {
    return this.currency;
  }

  public Product setCurrency(java.lang.String currency) {
    this.currency = currency;
    return this;
  }

  public void unsetCurrency() {
    this.currency = null;
  }

  /** Returns true if field currency is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrency() {
    return this.currency != null;
  }

  public void setCurrencyIsSet(boolean value) {
    if (!value) {
      this.currency = null;
    }
  }

  public java.lang.String getCurrencySymbol() {
    return this.currencySymbol;
  }

  public Product setCurrencySymbol(java.lang.String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

  public void unsetCurrencySymbol() {
    this.currencySymbol = null;
  }

  /** Returns true if field currencySymbol is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrencySymbol() {
    return this.currencySymbol != null;
  }

  public void setCurrencySymbolIsSet(boolean value) {
    if (!value) {
      this.currencySymbol = null;
    }
  }

  /**
   * 
   * @see PaymentType
   */
  public PaymentType getPaymentType() {
    return this.paymentType;
  }

  /**
   * 
   * @see PaymentType
   */
  public Product setPaymentType(PaymentType paymentType) {
    this.paymentType = paymentType;
    return this;
  }

  public void unsetPaymentType() {
    this.paymentType = null;
  }

  /** Returns true if field paymentType is set (has been assigned a value) and false otherwise */
  public boolean isSetPaymentType() {
    return this.paymentType != null;
  }

  public void setPaymentTypeIsSet(boolean value) {
    if (!value) {
      this.paymentType = null;
    }
  }

  public long getCreateDate() {
    return this.createDate;
  }

  public Product setCreateDate(long createDate) {
    this.createDate = createDate;
    setCreateDateIsSet(true);
    return this;
  }

  public void unsetCreateDate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATEDATE_ISSET_ID);
  }

  /** Returns true if field createDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateDate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATEDATE_ISSET_ID);
  }

  public void setCreateDateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATEDATE_ISSET_ID, value);
  }

  public boolean isOwnFlag() {
    return this.ownFlag;
  }

  public Product setOwnFlag(boolean ownFlag) {
    this.ownFlag = ownFlag;
    setOwnFlagIsSet(true);
    return this;
  }

  public void unsetOwnFlag() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OWNFLAG_ISSET_ID);
  }

  /** Returns true if field ownFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetOwnFlag() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OWNFLAG_ISSET_ID);
  }

  public void setOwnFlagIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OWNFLAG_ISSET_ID, value);
  }

  /**
   * 
   * @see ProductEventType
   */
  public ProductEventType getEventType() {
    return this.eventType;
  }

  /**
   * 
   * @see ProductEventType
   */
  public Product setEventType(ProductEventType eventType) {
    this.eventType = eventType;
    return this;
  }

  public void unsetEventType() {
    this.eventType = null;
  }

  /** Returns true if field eventType is set (has been assigned a value) and false otherwise */
  public boolean isSetEventType() {
    return this.eventType != null;
  }

  public void setEventTypeIsSet(boolean value) {
    if (!value) {
      this.eventType = null;
    }
  }

  public java.lang.String getUrlSchema() {
    return this.urlSchema;
  }

  public Product setUrlSchema(java.lang.String urlSchema) {
    this.urlSchema = urlSchema;
    return this;
  }

  public void unsetUrlSchema() {
    this.urlSchema = null;
  }

  /** Returns true if field urlSchema is set (has been assigned a value) and false otherwise */
  public boolean isSetUrlSchema() {
    return this.urlSchema != null;
  }

  public void setUrlSchemaIsSet(boolean value) {
    if (!value) {
      this.urlSchema = null;
    }
  }

  public java.lang.String getDownloadUrl() {
    return this.downloadUrl;
  }

  public Product setDownloadUrl(java.lang.String downloadUrl) {
    this.downloadUrl = downloadUrl;
    return this;
  }

  public void unsetDownloadUrl() {
    this.downloadUrl = null;
  }

  /** Returns true if field downloadUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetDownloadUrl() {
    return this.downloadUrl != null;
  }

  public void setDownloadUrlIsSet(boolean value) {
    if (!value) {
      this.downloadUrl = null;
    }
  }

  public java.lang.String getBuddyMid() {
    return this.buddyMid;
  }

  public Product setBuddyMid(java.lang.String buddyMid) {
    this.buddyMid = buddyMid;
    return this;
  }

  public void unsetBuddyMid() {
    this.buddyMid = null;
  }

  /** Returns true if field buddyMid is set (has been assigned a value) and false otherwise */
  public boolean isSetBuddyMid() {
    return this.buddyMid != null;
  }

  public void setBuddyMidIsSet(boolean value) {
    if (!value) {
      this.buddyMid = null;
    }
  }

  public long getPublishSince() {
    return this.publishSince;
  }

  public Product setPublishSince(long publishSince) {
    this.publishSince = publishSince;
    setPublishSinceIsSet(true);
    return this;
  }

  public void unsetPublishSince() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PUBLISHSINCE_ISSET_ID);
  }

  /** Returns true if field publishSince is set (has been assigned a value) and false otherwise */
  public boolean isSetPublishSince() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PUBLISHSINCE_ISSET_ID);
  }

  public void setPublishSinceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PUBLISHSINCE_ISSET_ID, value);
  }

  public boolean isNewFlag() {
    return this.newFlag;
  }

  public Product setNewFlag(boolean newFlag) {
    this.newFlag = newFlag;
    setNewFlagIsSet(true);
    return this;
  }

  public void unsetNewFlag() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NEWFLAG_ISSET_ID);
  }

  /** Returns true if field newFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetNewFlag() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NEWFLAG_ISSET_ID);
  }

  public void setNewFlagIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NEWFLAG_ISSET_ID, value);
  }

  public boolean isMissionFlag() {
    return this.missionFlag;
  }

  public Product setMissionFlag(boolean missionFlag) {
    this.missionFlag = missionFlag;
    setMissionFlagIsSet(true);
    return this;
  }

  public void unsetMissionFlag() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __MISSIONFLAG_ISSET_ID);
  }

  /** Returns true if field missionFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetMissionFlag() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __MISSIONFLAG_ISSET_ID);
  }

  public void setMissionFlagIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __MISSIONFLAG_ISSET_ID, value);
  }

  public int getCategoriesSize() {
    return (this.categories == null) ? 0 : this.categories.size();
  }

  public java.util.Iterator<ProductCategory> getCategoriesIterator() {
    return (this.categories == null) ? null : this.categories.iterator();
  }

  public void addToCategories(ProductCategory elem) {
    if (this.categories == null) {
      this.categories = new java.util.ArrayList<ProductCategory>();
    }
    this.categories.add(elem);
  }

  public java.util.List<ProductCategory> getCategories() {
    return this.categories;
  }

  public Product setCategories(java.util.List<ProductCategory> categories) {
    this.categories = categories;
    return this;
  }

  public void unsetCategories() {
    this.categories = null;
  }

  /** Returns true if field categories is set (has been assigned a value) and false otherwise */
  public boolean isSetCategories() {
    return this.categories != null;
  }

  public void setCategoriesIsSet(boolean value) {
    if (!value) {
      this.categories = null;
    }
  }

  public java.lang.String getMissionButtonText() {
    return this.missionButtonText;
  }

  public Product setMissionButtonText(java.lang.String missionButtonText) {
    this.missionButtonText = missionButtonText;
    return this;
  }

  public void unsetMissionButtonText() {
    this.missionButtonText = null;
  }

  /** Returns true if field missionButtonText is set (has been assigned a value) and false otherwise */
  public boolean isSetMissionButtonText() {
    return this.missionButtonText != null;
  }

  public void setMissionButtonTextIsSet(boolean value) {
    if (!value) {
      this.missionButtonText = null;
    }
  }

  public java.lang.String getMissionShortDescription() {
    return this.missionShortDescription;
  }

  public Product setMissionShortDescription(java.lang.String missionShortDescription) {
    this.missionShortDescription = missionShortDescription;
    return this;
  }

  public void unsetMissionShortDescription() {
    this.missionShortDescription = null;
  }

  /** Returns true if field missionShortDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetMissionShortDescription() {
    return this.missionShortDescription != null;
  }

  public void setMissionShortDescriptionIsSet(boolean value) {
    if (!value) {
      this.missionShortDescription = null;
    }
  }

  public java.lang.String getAuthorId() {
    return this.authorId;
  }

  public Product setAuthorId(java.lang.String authorId) {
    this.authorId = authorId;
    return this;
  }

  public void unsetAuthorId() {
    this.authorId = null;
  }

  /** Returns true if field authorId is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthorId() {
    return this.authorId != null;
  }

  public void setAuthorIdIsSet(boolean value) {
    if (!value) {
      this.authorId = null;
    }
  }

  public boolean isGrantedByDefault() {
    return this.grantedByDefault;
  }

  public Product setGrantedByDefault(boolean grantedByDefault) {
    this.grantedByDefault = grantedByDefault;
    setGrantedByDefaultIsSet(true);
    return this;
  }

  public void unsetGrantedByDefault() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __GRANTEDBYDEFAULT_ISSET_ID);
  }

  /** Returns true if field grantedByDefault is set (has been assigned a value) and false otherwise */
  public boolean isSetGrantedByDefault() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __GRANTEDBYDEFAULT_ISSET_ID);
  }

  public void setGrantedByDefaultIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __GRANTEDBYDEFAULT_ISSET_ID, value);
  }

  public int getDisplayOrder() {
    return this.displayOrder;
  }

  public Product setDisplayOrder(int displayOrder) {
    this.displayOrder = displayOrder;
    setDisplayOrderIsSet(true);
    return this;
  }

  public void unsetDisplayOrder() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISPLAYORDER_ISSET_ID);
  }

  /** Returns true if field displayOrder is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayOrder() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISPLAYORDER_ISSET_ID);
  }

  public void setDisplayOrderIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISPLAYORDER_ISSET_ID, value);
  }

  public boolean isAvailableForPresent() {
    return this.availableForPresent;
  }

  public Product setAvailableForPresent(boolean availableForPresent) {
    this.availableForPresent = availableForPresent;
    setAvailableForPresentIsSet(true);
    return this;
  }

  public void unsetAvailableForPresent() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AVAILABLEFORPRESENT_ISSET_ID);
  }

  /** Returns true if field availableForPresent is set (has been assigned a value) and false otherwise */
  public boolean isSetAvailableForPresent() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AVAILABLEFORPRESENT_ISSET_ID);
  }

  public void setAvailableForPresentIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AVAILABLEFORPRESENT_ISSET_ID, value);
  }

  public boolean isAvailableForMyself() {
    return this.availableForMyself;
  }

  public Product setAvailableForMyself(boolean availableForMyself) {
    this.availableForMyself = availableForMyself;
    setAvailableForMyselfIsSet(true);
    return this;
  }

  public void unsetAvailableForMyself() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AVAILABLEFORMYSELF_ISSET_ID);
  }

  /** Returns true if field availableForMyself is set (has been assigned a value) and false otherwise */
  public boolean isSetAvailableForMyself() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AVAILABLEFORMYSELF_ISSET_ID);
  }

  public void setAvailableForMyselfIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AVAILABLEFORMYSELF_ISSET_ID, value);
  }

  public boolean isHasAnimation() {
    return this.hasAnimation;
  }

  public Product setHasAnimation(boolean hasAnimation) {
    this.hasAnimation = hasAnimation;
    setHasAnimationIsSet(true);
    return this;
  }

  public void unsetHasAnimation() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HASANIMATION_ISSET_ID);
  }

  /** Returns true if field hasAnimation is set (has been assigned a value) and false otherwise */
  public boolean isSetHasAnimation() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HASANIMATION_ISSET_ID);
  }

  public void setHasAnimationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HASANIMATION_ISSET_ID, value);
  }

  public boolean isHasSound() {
    return this.hasSound;
  }

  public Product setHasSound(boolean hasSound) {
    this.hasSound = hasSound;
    setHasSoundIsSet(true);
    return this;
  }

  public void unsetHasSound() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HASSOUND_ISSET_ID);
  }

  /** Returns true if field hasSound is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSound() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HASSOUND_ISSET_ID);
  }

  public void setHasSoundIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HASSOUND_ISSET_ID, value);
  }

  public boolean isRecommendationsEnabled() {
    return this.recommendationsEnabled;
  }

  public Product setRecommendationsEnabled(boolean recommendationsEnabled) {
    this.recommendationsEnabled = recommendationsEnabled;
    setRecommendationsEnabledIsSet(true);
    return this;
  }

  public void unsetRecommendationsEnabled() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECOMMENDATIONSENABLED_ISSET_ID);
  }

  /** Returns true if field recommendationsEnabled is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommendationsEnabled() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECOMMENDATIONSENABLED_ISSET_ID);
  }

  public void setRecommendationsEnabledIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECOMMENDATIONSENABLED_ISSET_ID, value);
  }

  /**
   * 
   * @see StickerResourceType
   */
  public StickerResourceType getStickerResourceType() {
    return this.stickerResourceType;
  }

  /**
   * 
   * @see StickerResourceType
   */
  public Product setStickerResourceType(StickerResourceType stickerResourceType) {
    this.stickerResourceType = stickerResourceType;
    return this;
  }

  public void unsetStickerResourceType() {
    this.stickerResourceType = null;
  }

  /** Returns true if field stickerResourceType is set (has been assigned a value) and false otherwise */
  public boolean isSetStickerResourceType() {
    return this.stickerResourceType != null;
  }

  public void setStickerResourceTypeIsSet(boolean value) {
    if (!value) {
      this.stickerResourceType = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((java.lang.String)value);
      }
      break;

    case PACKAGE_ID:
      if (value == null) {
        unsetPackageId();
      } else {
        setPackageId((java.lang.Long)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((java.lang.Integer)value);
      }
      break;

    case AUTHOR_NAME:
      if (value == null) {
        unsetAuthorName();
      } else {
        setAuthorName((java.lang.String)value);
      }
      break;

    case ON_SALE:
      if (value == null) {
        unsetOnSale();
      } else {
        setOnSale((java.lang.Boolean)value);
      }
      break;

    case VALID_DAYS:
      if (value == null) {
        unsetValidDays();
      } else {
        setValidDays((java.lang.Integer)value);
      }
      break;

    case SALE_TYPE:
      if (value == null) {
        unsetSaleType();
      } else {
        setSaleType((java.lang.Integer)value);
      }
      break;

    case COPYRIGHT:
      if (value == null) {
        unsetCopyright();
      } else {
        setCopyright((java.lang.String)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((java.lang.String)value);
      }
      break;

    case DESCRIPTION_TEXT:
      if (value == null) {
        unsetDescriptionText();
      } else {
        setDescriptionText((java.lang.String)value);
      }
      break;

    case SHOP_ORDER_ID:
      if (value == null) {
        unsetShopOrderId();
      } else {
        setShopOrderId((java.lang.Long)value);
      }
      break;

    case FROM_MID:
      if (value == null) {
        unsetFromMid();
      } else {
        setFromMid((java.lang.String)value);
      }
      break;

    case TO_MID:
      if (value == null) {
        unsetToMid();
      } else {
        setToMid((java.lang.String)value);
      }
      break;

    case VALID_UNTIL:
      if (value == null) {
        unsetValidUntil();
      } else {
        setValidUntil((java.lang.Long)value);
      }
      break;

    case PRICE_TIER:
      if (value == null) {
        unsetPriceTier();
      } else {
        setPriceTier((java.lang.Integer)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((java.lang.String)value);
      }
      break;

    case CURRENCY:
      if (value == null) {
        unsetCurrency();
      } else {
        setCurrency((java.lang.String)value);
      }
      break;

    case CURRENCY_SYMBOL:
      if (value == null) {
        unsetCurrencySymbol();
      } else {
        setCurrencySymbol((java.lang.String)value);
      }
      break;

    case PAYMENT_TYPE:
      if (value == null) {
        unsetPaymentType();
      } else {
        setPaymentType((PaymentType)value);
      }
      break;

    case CREATE_DATE:
      if (value == null) {
        unsetCreateDate();
      } else {
        setCreateDate((java.lang.Long)value);
      }
      break;

    case OWN_FLAG:
      if (value == null) {
        unsetOwnFlag();
      } else {
        setOwnFlag((java.lang.Boolean)value);
      }
      break;

    case EVENT_TYPE:
      if (value == null) {
        unsetEventType();
      } else {
        setEventType((ProductEventType)value);
      }
      break;

    case URL_SCHEMA:
      if (value == null) {
        unsetUrlSchema();
      } else {
        setUrlSchema((java.lang.String)value);
      }
      break;

    case DOWNLOAD_URL:
      if (value == null) {
        unsetDownloadUrl();
      } else {
        setDownloadUrl((java.lang.String)value);
      }
      break;

    case BUDDY_MID:
      if (value == null) {
        unsetBuddyMid();
      } else {
        setBuddyMid((java.lang.String)value);
      }
      break;

    case PUBLISH_SINCE:
      if (value == null) {
        unsetPublishSince();
      } else {
        setPublishSince((java.lang.Long)value);
      }
      break;

    case NEW_FLAG:
      if (value == null) {
        unsetNewFlag();
      } else {
        setNewFlag((java.lang.Boolean)value);
      }
      break;

    case MISSION_FLAG:
      if (value == null) {
        unsetMissionFlag();
      } else {
        setMissionFlag((java.lang.Boolean)value);
      }
      break;

    case CATEGORIES:
      if (value == null) {
        unsetCategories();
      } else {
        setCategories((java.util.List<ProductCategory>)value);
      }
      break;

    case MISSION_BUTTON_TEXT:
      if (value == null) {
        unsetMissionButtonText();
      } else {
        setMissionButtonText((java.lang.String)value);
      }
      break;

    case MISSION_SHORT_DESCRIPTION:
      if (value == null) {
        unsetMissionShortDescription();
      } else {
        setMissionShortDescription((java.lang.String)value);
      }
      break;

    case AUTHOR_ID:
      if (value == null) {
        unsetAuthorId();
      } else {
        setAuthorId((java.lang.String)value);
      }
      break;

    case GRANTED_BY_DEFAULT:
      if (value == null) {
        unsetGrantedByDefault();
      } else {
        setGrantedByDefault((java.lang.Boolean)value);
      }
      break;

    case DISPLAY_ORDER:
      if (value == null) {
        unsetDisplayOrder();
      } else {
        setDisplayOrder((java.lang.Integer)value);
      }
      break;

    case AVAILABLE_FOR_PRESENT:
      if (value == null) {
        unsetAvailableForPresent();
      } else {
        setAvailableForPresent((java.lang.Boolean)value);
      }
      break;

    case AVAILABLE_FOR_MYSELF:
      if (value == null) {
        unsetAvailableForMyself();
      } else {
        setAvailableForMyself((java.lang.Boolean)value);
      }
      break;

    case HAS_ANIMATION:
      if (value == null) {
        unsetHasAnimation();
      } else {
        setHasAnimation((java.lang.Boolean)value);
      }
      break;

    case HAS_SOUND:
      if (value == null) {
        unsetHasSound();
      } else {
        setHasSound((java.lang.Boolean)value);
      }
      break;

    case RECOMMENDATIONS_ENABLED:
      if (value == null) {
        unsetRecommendationsEnabled();
      } else {
        setRecommendationsEnabled((java.lang.Boolean)value);
      }
      break;

    case STICKER_RESOURCE_TYPE:
      if (value == null) {
        unsetStickerResourceType();
      } else {
        setStickerResourceType((StickerResourceType)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case PRODUCT_ID:
      return getProductId();

    case PACKAGE_ID:
      return getPackageId();

    case VERSION:
      return getVersion();

    case AUTHOR_NAME:
      return getAuthorName();

    case ON_SALE:
      return isOnSale();

    case VALID_DAYS:
      return getValidDays();

    case SALE_TYPE:
      return getSaleType();

    case COPYRIGHT:
      return getCopyright();

    case TITLE:
      return getTitle();

    case DESCRIPTION_TEXT:
      return getDescriptionText();

    case SHOP_ORDER_ID:
      return getShopOrderId();

    case FROM_MID:
      return getFromMid();

    case TO_MID:
      return getToMid();

    case VALID_UNTIL:
      return getValidUntil();

    case PRICE_TIER:
      return getPriceTier();

    case PRICE:
      return getPrice();

    case CURRENCY:
      return getCurrency();

    case CURRENCY_SYMBOL:
      return getCurrencySymbol();

    case PAYMENT_TYPE:
      return getPaymentType();

    case CREATE_DATE:
      return getCreateDate();

    case OWN_FLAG:
      return isOwnFlag();

    case EVENT_TYPE:
      return getEventType();

    case URL_SCHEMA:
      return getUrlSchema();

    case DOWNLOAD_URL:
      return getDownloadUrl();

    case BUDDY_MID:
      return getBuddyMid();

    case PUBLISH_SINCE:
      return getPublishSince();

    case NEW_FLAG:
      return isNewFlag();

    case MISSION_FLAG:
      return isMissionFlag();

    case CATEGORIES:
      return getCategories();

    case MISSION_BUTTON_TEXT:
      return getMissionButtonText();

    case MISSION_SHORT_DESCRIPTION:
      return getMissionShortDescription();

    case AUTHOR_ID:
      return getAuthorId();

    case GRANTED_BY_DEFAULT:
      return isGrantedByDefault();

    case DISPLAY_ORDER:
      return getDisplayOrder();

    case AVAILABLE_FOR_PRESENT:
      return isAvailableForPresent();

    case AVAILABLE_FOR_MYSELF:
      return isAvailableForMyself();

    case HAS_ANIMATION:
      return isHasAnimation();

    case HAS_SOUND:
      return isHasSound();

    case RECOMMENDATIONS_ENABLED:
      return isRecommendationsEnabled();

    case STICKER_RESOURCE_TYPE:
      return getStickerResourceType();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case PRODUCT_ID:
      return isSetProductId();
    case PACKAGE_ID:
      return isSetPackageId();
    case VERSION:
      return isSetVersion();
    case AUTHOR_NAME:
      return isSetAuthorName();
    case ON_SALE:
      return isSetOnSale();
    case VALID_DAYS:
      return isSetValidDays();
    case SALE_TYPE:
      return isSetSaleType();
    case COPYRIGHT:
      return isSetCopyright();
    case TITLE:
      return isSetTitle();
    case DESCRIPTION_TEXT:
      return isSetDescriptionText();
    case SHOP_ORDER_ID:
      return isSetShopOrderId();
    case FROM_MID:
      return isSetFromMid();
    case TO_MID:
      return isSetToMid();
    case VALID_UNTIL:
      return isSetValidUntil();
    case PRICE_TIER:
      return isSetPriceTier();
    case PRICE:
      return isSetPrice();
    case CURRENCY:
      return isSetCurrency();
    case CURRENCY_SYMBOL:
      return isSetCurrencySymbol();
    case PAYMENT_TYPE:
      return isSetPaymentType();
    case CREATE_DATE:
      return isSetCreateDate();
    case OWN_FLAG:
      return isSetOwnFlag();
    case EVENT_TYPE:
      return isSetEventType();
    case URL_SCHEMA:
      return isSetUrlSchema();
    case DOWNLOAD_URL:
      return isSetDownloadUrl();
    case BUDDY_MID:
      return isSetBuddyMid();
    case PUBLISH_SINCE:
      return isSetPublishSince();
    case NEW_FLAG:
      return isSetNewFlag();
    case MISSION_FLAG:
      return isSetMissionFlag();
    case CATEGORIES:
      return isSetCategories();
    case MISSION_BUTTON_TEXT:
      return isSetMissionButtonText();
    case MISSION_SHORT_DESCRIPTION:
      return isSetMissionShortDescription();
    case AUTHOR_ID:
      return isSetAuthorId();
    case GRANTED_BY_DEFAULT:
      return isSetGrantedByDefault();
    case DISPLAY_ORDER:
      return isSetDisplayOrder();
    case AVAILABLE_FOR_PRESENT:
      return isSetAvailableForPresent();
    case AVAILABLE_FOR_MYSELF:
      return isSetAvailableForMyself();
    case HAS_ANIMATION:
      return isSetHasAnimation();
    case HAS_SOUND:
      return isSetHasSound();
    case RECOMMENDATIONS_ENABLED:
      return isSetRecommendationsEnabled();
    case STICKER_RESOURCE_TYPE:
      return isSetStickerResourceType();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Product)
      return this.equals((Product)that);
    return false;
  }

  public boolean equals(Product that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (!this.productId.equals(that.productId))
        return false;
    }

    boolean this_present_packageId = true;
    boolean that_present_packageId = true;
    if (this_present_packageId || that_present_packageId) {
      if (!(this_present_packageId && that_present_packageId))
        return false;
      if (this.packageId != that.packageId)
        return false;
    }

    boolean this_present_version = true;
    boolean that_present_version = true;
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (this.version != that.version)
        return false;
    }

    boolean this_present_authorName = true && this.isSetAuthorName();
    boolean that_present_authorName = true && that.isSetAuthorName();
    if (this_present_authorName || that_present_authorName) {
      if (!(this_present_authorName && that_present_authorName))
        return false;
      if (!this.authorName.equals(that.authorName))
        return false;
    }

    boolean this_present_onSale = true;
    boolean that_present_onSale = true;
    if (this_present_onSale || that_present_onSale) {
      if (!(this_present_onSale && that_present_onSale))
        return false;
      if (this.onSale != that.onSale)
        return false;
    }

    boolean this_present_validDays = true;
    boolean that_present_validDays = true;
    if (this_present_validDays || that_present_validDays) {
      if (!(this_present_validDays && that_present_validDays))
        return false;
      if (this.validDays != that.validDays)
        return false;
    }

    boolean this_present_saleType = true;
    boolean that_present_saleType = true;
    if (this_present_saleType || that_present_saleType) {
      if (!(this_present_saleType && that_present_saleType))
        return false;
      if (this.saleType != that.saleType)
        return false;
    }

    boolean this_present_copyright = true && this.isSetCopyright();
    boolean that_present_copyright = true && that.isSetCopyright();
    if (this_present_copyright || that_present_copyright) {
      if (!(this_present_copyright && that_present_copyright))
        return false;
      if (!this.copyright.equals(that.copyright))
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_descriptionText = true && this.isSetDescriptionText();
    boolean that_present_descriptionText = true && that.isSetDescriptionText();
    if (this_present_descriptionText || that_present_descriptionText) {
      if (!(this_present_descriptionText && that_present_descriptionText))
        return false;
      if (!this.descriptionText.equals(that.descriptionText))
        return false;
    }

    boolean this_present_shopOrderId = true;
    boolean that_present_shopOrderId = true;
    if (this_present_shopOrderId || that_present_shopOrderId) {
      if (!(this_present_shopOrderId && that_present_shopOrderId))
        return false;
      if (this.shopOrderId != that.shopOrderId)
        return false;
    }

    boolean this_present_fromMid = true && this.isSetFromMid();
    boolean that_present_fromMid = true && that.isSetFromMid();
    if (this_present_fromMid || that_present_fromMid) {
      if (!(this_present_fromMid && that_present_fromMid))
        return false;
      if (!this.fromMid.equals(that.fromMid))
        return false;
    }

    boolean this_present_toMid = true && this.isSetToMid();
    boolean that_present_toMid = true && that.isSetToMid();
    if (this_present_toMid || that_present_toMid) {
      if (!(this_present_toMid && that_present_toMid))
        return false;
      if (!this.toMid.equals(that.toMid))
        return false;
    }

    boolean this_present_validUntil = true;
    boolean that_present_validUntil = true;
    if (this_present_validUntil || that_present_validUntil) {
      if (!(this_present_validUntil && that_present_validUntil))
        return false;
      if (this.validUntil != that.validUntil)
        return false;
    }

    boolean this_present_priceTier = true;
    boolean that_present_priceTier = true;
    if (this_present_priceTier || that_present_priceTier) {
      if (!(this_present_priceTier && that_present_priceTier))
        return false;
      if (this.priceTier != that.priceTier)
        return false;
    }

    boolean this_present_price = true && this.isSetPrice();
    boolean that_present_price = true && that.isSetPrice();
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (!this.price.equals(that.price))
        return false;
    }

    boolean this_present_currency = true && this.isSetCurrency();
    boolean that_present_currency = true && that.isSetCurrency();
    if (this_present_currency || that_present_currency) {
      if (!(this_present_currency && that_present_currency))
        return false;
      if (!this.currency.equals(that.currency))
        return false;
    }

    boolean this_present_currencySymbol = true && this.isSetCurrencySymbol();
    boolean that_present_currencySymbol = true && that.isSetCurrencySymbol();
    if (this_present_currencySymbol || that_present_currencySymbol) {
      if (!(this_present_currencySymbol && that_present_currencySymbol))
        return false;
      if (!this.currencySymbol.equals(that.currencySymbol))
        return false;
    }

    boolean this_present_paymentType = true && this.isSetPaymentType();
    boolean that_present_paymentType = true && that.isSetPaymentType();
    if (this_present_paymentType || that_present_paymentType) {
      if (!(this_present_paymentType && that_present_paymentType))
        return false;
      if (!this.paymentType.equals(that.paymentType))
        return false;
    }

    boolean this_present_createDate = true;
    boolean that_present_createDate = true;
    if (this_present_createDate || that_present_createDate) {
      if (!(this_present_createDate && that_present_createDate))
        return false;
      if (this.createDate != that.createDate)
        return false;
    }

    boolean this_present_ownFlag = true;
    boolean that_present_ownFlag = true;
    if (this_present_ownFlag || that_present_ownFlag) {
      if (!(this_present_ownFlag && that_present_ownFlag))
        return false;
      if (this.ownFlag != that.ownFlag)
        return false;
    }

    boolean this_present_eventType = true && this.isSetEventType();
    boolean that_present_eventType = true && that.isSetEventType();
    if (this_present_eventType || that_present_eventType) {
      if (!(this_present_eventType && that_present_eventType))
        return false;
      if (!this.eventType.equals(that.eventType))
        return false;
    }

    boolean this_present_urlSchema = true && this.isSetUrlSchema();
    boolean that_present_urlSchema = true && that.isSetUrlSchema();
    if (this_present_urlSchema || that_present_urlSchema) {
      if (!(this_present_urlSchema && that_present_urlSchema))
        return false;
      if (!this.urlSchema.equals(that.urlSchema))
        return false;
    }

    boolean this_present_downloadUrl = true && this.isSetDownloadUrl();
    boolean that_present_downloadUrl = true && that.isSetDownloadUrl();
    if (this_present_downloadUrl || that_present_downloadUrl) {
      if (!(this_present_downloadUrl && that_present_downloadUrl))
        return false;
      if (!this.downloadUrl.equals(that.downloadUrl))
        return false;
    }

    boolean this_present_buddyMid = true && this.isSetBuddyMid();
    boolean that_present_buddyMid = true && that.isSetBuddyMid();
    if (this_present_buddyMid || that_present_buddyMid) {
      if (!(this_present_buddyMid && that_present_buddyMid))
        return false;
      if (!this.buddyMid.equals(that.buddyMid))
        return false;
    }

    boolean this_present_publishSince = true;
    boolean that_present_publishSince = true;
    if (this_present_publishSince || that_present_publishSince) {
      if (!(this_present_publishSince && that_present_publishSince))
        return false;
      if (this.publishSince != that.publishSince)
        return false;
    }

    boolean this_present_newFlag = true;
    boolean that_present_newFlag = true;
    if (this_present_newFlag || that_present_newFlag) {
      if (!(this_present_newFlag && that_present_newFlag))
        return false;
      if (this.newFlag != that.newFlag)
        return false;
    }

    boolean this_present_missionFlag = true;
    boolean that_present_missionFlag = true;
    if (this_present_missionFlag || that_present_missionFlag) {
      if (!(this_present_missionFlag && that_present_missionFlag))
        return false;
      if (this.missionFlag != that.missionFlag)
        return false;
    }

    boolean this_present_categories = true && this.isSetCategories();
    boolean that_present_categories = true && that.isSetCategories();
    if (this_present_categories || that_present_categories) {
      if (!(this_present_categories && that_present_categories))
        return false;
      if (!this.categories.equals(that.categories))
        return false;
    }

    boolean this_present_missionButtonText = true && this.isSetMissionButtonText();
    boolean that_present_missionButtonText = true && that.isSetMissionButtonText();
    if (this_present_missionButtonText || that_present_missionButtonText) {
      if (!(this_present_missionButtonText && that_present_missionButtonText))
        return false;
      if (!this.missionButtonText.equals(that.missionButtonText))
        return false;
    }

    boolean this_present_missionShortDescription = true && this.isSetMissionShortDescription();
    boolean that_present_missionShortDescription = true && that.isSetMissionShortDescription();
    if (this_present_missionShortDescription || that_present_missionShortDescription) {
      if (!(this_present_missionShortDescription && that_present_missionShortDescription))
        return false;
      if (!this.missionShortDescription.equals(that.missionShortDescription))
        return false;
    }

    boolean this_present_authorId = true && this.isSetAuthorId();
    boolean that_present_authorId = true && that.isSetAuthorId();
    if (this_present_authorId || that_present_authorId) {
      if (!(this_present_authorId && that_present_authorId))
        return false;
      if (!this.authorId.equals(that.authorId))
        return false;
    }

    boolean this_present_grantedByDefault = true;
    boolean that_present_grantedByDefault = true;
    if (this_present_grantedByDefault || that_present_grantedByDefault) {
      if (!(this_present_grantedByDefault && that_present_grantedByDefault))
        return false;
      if (this.grantedByDefault != that.grantedByDefault)
        return false;
    }

    boolean this_present_displayOrder = true;
    boolean that_present_displayOrder = true;
    if (this_present_displayOrder || that_present_displayOrder) {
      if (!(this_present_displayOrder && that_present_displayOrder))
        return false;
      if (this.displayOrder != that.displayOrder)
        return false;
    }

    boolean this_present_availableForPresent = true;
    boolean that_present_availableForPresent = true;
    if (this_present_availableForPresent || that_present_availableForPresent) {
      if (!(this_present_availableForPresent && that_present_availableForPresent))
        return false;
      if (this.availableForPresent != that.availableForPresent)
        return false;
    }

    boolean this_present_availableForMyself = true;
    boolean that_present_availableForMyself = true;
    if (this_present_availableForMyself || that_present_availableForMyself) {
      if (!(this_present_availableForMyself && that_present_availableForMyself))
        return false;
      if (this.availableForMyself != that.availableForMyself)
        return false;
    }

    boolean this_present_hasAnimation = true;
    boolean that_present_hasAnimation = true;
    if (this_present_hasAnimation || that_present_hasAnimation) {
      if (!(this_present_hasAnimation && that_present_hasAnimation))
        return false;
      if (this.hasAnimation != that.hasAnimation)
        return false;
    }

    boolean this_present_hasSound = true;
    boolean that_present_hasSound = true;
    if (this_present_hasSound || that_present_hasSound) {
      if (!(this_present_hasSound && that_present_hasSound))
        return false;
      if (this.hasSound != that.hasSound)
        return false;
    }

    boolean this_present_recommendationsEnabled = true;
    boolean that_present_recommendationsEnabled = true;
    if (this_present_recommendationsEnabled || that_present_recommendationsEnabled) {
      if (!(this_present_recommendationsEnabled && that_present_recommendationsEnabled))
        return false;
      if (this.recommendationsEnabled != that.recommendationsEnabled)
        return false;
    }

    boolean this_present_stickerResourceType = true && this.isSetStickerResourceType();
    boolean that_present_stickerResourceType = true && that.isSetStickerResourceType();
    if (this_present_stickerResourceType || that_present_stickerResourceType) {
      if (!(this_present_stickerResourceType && that_present_stickerResourceType))
        return false;
      if (!this.stickerResourceType.equals(that.stickerResourceType))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetProductId()) ? 131071 : 524287);
    if (isSetProductId())
      hashCode = hashCode * 8191 + productId.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(packageId);

    hashCode = hashCode * 8191 + version;

    hashCode = hashCode * 8191 + ((isSetAuthorName()) ? 131071 : 524287);
    if (isSetAuthorName())
      hashCode = hashCode * 8191 + authorName.hashCode();

    hashCode = hashCode * 8191 + ((onSale) ? 131071 : 524287);

    hashCode = hashCode * 8191 + validDays;

    hashCode = hashCode * 8191 + saleType;

    hashCode = hashCode * 8191 + ((isSetCopyright()) ? 131071 : 524287);
    if (isSetCopyright())
      hashCode = hashCode * 8191 + copyright.hashCode();

    hashCode = hashCode * 8191 + ((isSetTitle()) ? 131071 : 524287);
    if (isSetTitle())
      hashCode = hashCode * 8191 + title.hashCode();

    hashCode = hashCode * 8191 + ((isSetDescriptionText()) ? 131071 : 524287);
    if (isSetDescriptionText())
      hashCode = hashCode * 8191 + descriptionText.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(shopOrderId);

    hashCode = hashCode * 8191 + ((isSetFromMid()) ? 131071 : 524287);
    if (isSetFromMid())
      hashCode = hashCode * 8191 + fromMid.hashCode();

    hashCode = hashCode * 8191 + ((isSetToMid()) ? 131071 : 524287);
    if (isSetToMid())
      hashCode = hashCode * 8191 + toMid.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(validUntil);

    hashCode = hashCode * 8191 + priceTier;

    hashCode = hashCode * 8191 + ((isSetPrice()) ? 131071 : 524287);
    if (isSetPrice())
      hashCode = hashCode * 8191 + price.hashCode();

    hashCode = hashCode * 8191 + ((isSetCurrency()) ? 131071 : 524287);
    if (isSetCurrency())
      hashCode = hashCode * 8191 + currency.hashCode();

    hashCode = hashCode * 8191 + ((isSetCurrencySymbol()) ? 131071 : 524287);
    if (isSetCurrencySymbol())
      hashCode = hashCode * 8191 + currencySymbol.hashCode();

    hashCode = hashCode * 8191 + ((isSetPaymentType()) ? 131071 : 524287);
    if (isSetPaymentType())
      hashCode = hashCode * 8191 + paymentType.getValue();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createDate);

    hashCode = hashCode * 8191 + ((ownFlag) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetEventType()) ? 131071 : 524287);
    if (isSetEventType())
      hashCode = hashCode * 8191 + eventType.getValue();

    hashCode = hashCode * 8191 + ((isSetUrlSchema()) ? 131071 : 524287);
    if (isSetUrlSchema())
      hashCode = hashCode * 8191 + urlSchema.hashCode();

    hashCode = hashCode * 8191 + ((isSetDownloadUrl()) ? 131071 : 524287);
    if (isSetDownloadUrl())
      hashCode = hashCode * 8191 + downloadUrl.hashCode();

    hashCode = hashCode * 8191 + ((isSetBuddyMid()) ? 131071 : 524287);
    if (isSetBuddyMid())
      hashCode = hashCode * 8191 + buddyMid.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(publishSince);

    hashCode = hashCode * 8191 + ((newFlag) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((missionFlag) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetCategories()) ? 131071 : 524287);
    if (isSetCategories())
      hashCode = hashCode * 8191 + categories.hashCode();

    hashCode = hashCode * 8191 + ((isSetMissionButtonText()) ? 131071 : 524287);
    if (isSetMissionButtonText())
      hashCode = hashCode * 8191 + missionButtonText.hashCode();

    hashCode = hashCode * 8191 + ((isSetMissionShortDescription()) ? 131071 : 524287);
    if (isSetMissionShortDescription())
      hashCode = hashCode * 8191 + missionShortDescription.hashCode();

    hashCode = hashCode * 8191 + ((isSetAuthorId()) ? 131071 : 524287);
    if (isSetAuthorId())
      hashCode = hashCode * 8191 + authorId.hashCode();

    hashCode = hashCode * 8191 + ((grantedByDefault) ? 131071 : 524287);

    hashCode = hashCode * 8191 + displayOrder;

    hashCode = hashCode * 8191 + ((availableForPresent) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((availableForMyself) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((hasAnimation) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((hasSound) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((recommendationsEnabled) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetStickerResourceType()) ? 131071 : 524287);
    if (isSetStickerResourceType())
      hashCode = hashCode * 8191 + stickerResourceType.getValue();

    return hashCode;
  }

  @Override
  public int compareTo(Product other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPackageId()).compareTo(other.isSetPackageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPackageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.packageId, other.packageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVersion()).compareTo(other.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, other.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAuthorName()).compareTo(other.isSetAuthorName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthorName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authorName, other.authorName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOnSale()).compareTo(other.isSetOnSale());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOnSale()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.onSale, other.onSale);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetValidDays()).compareTo(other.isSetValidDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidDays()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validDays, other.validDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSaleType()).compareTo(other.isSetSaleType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSaleType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.saleType, other.saleType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCopyright()).compareTo(other.isSetCopyright());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCopyright()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.copyright, other.copyright);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, other.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescriptionText()).compareTo(other.isSetDescriptionText());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescriptionText()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descriptionText, other.descriptionText);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetShopOrderId()).compareTo(other.isSetShopOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShopOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shopOrderId, other.shopOrderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFromMid()).compareTo(other.isSetFromMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFromMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromMid, other.fromMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetToMid()).compareTo(other.isSetToMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.toMid, other.toMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetValidUntil()).compareTo(other.isSetValidUntil());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidUntil()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validUntil, other.validUntil);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPriceTier()).compareTo(other.isSetPriceTier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPriceTier()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.priceTier, other.priceTier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCurrency()).compareTo(other.isSetCurrency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrency()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currency, other.currency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCurrencySymbol()).compareTo(other.isSetCurrencySymbol());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrencySymbol()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currencySymbol, other.currencySymbol);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPaymentType()).compareTo(other.isSetPaymentType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaymentType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paymentType, other.paymentType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreateDate()).compareTo(other.isSetCreateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createDate, other.createDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOwnFlag()).compareTo(other.isSetOwnFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOwnFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ownFlag, other.ownFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEventType()).compareTo(other.isSetEventType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEventType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.eventType, other.eventType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUrlSchema()).compareTo(other.isSetUrlSchema());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUrlSchema()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.urlSchema, other.urlSchema);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDownloadUrl()).compareTo(other.isSetDownloadUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDownloadUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.downloadUrl, other.downloadUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBuddyMid()).compareTo(other.isSetBuddyMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuddyMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buddyMid, other.buddyMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPublishSince()).compareTo(other.isSetPublishSince());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublishSince()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publishSince, other.publishSince);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNewFlag()).compareTo(other.isSetNewFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNewFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.newFlag, other.newFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMissionFlag()).compareTo(other.isSetMissionFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMissionFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.missionFlag, other.missionFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCategories()).compareTo(other.isSetCategories());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategories()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categories, other.categories);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMissionButtonText()).compareTo(other.isSetMissionButtonText());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMissionButtonText()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.missionButtonText, other.missionButtonText);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMissionShortDescription()).compareTo(other.isSetMissionShortDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMissionShortDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.missionShortDescription, other.missionShortDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAuthorId()).compareTo(other.isSetAuthorId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthorId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authorId, other.authorId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetGrantedByDefault()).compareTo(other.isSetGrantedByDefault());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGrantedByDefault()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.grantedByDefault, other.grantedByDefault);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDisplayOrder()).compareTo(other.isSetDisplayOrder());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayOrder()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayOrder, other.displayOrder);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAvailableForPresent()).compareTo(other.isSetAvailableForPresent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAvailableForPresent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.availableForPresent, other.availableForPresent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAvailableForMyself()).compareTo(other.isSetAvailableForMyself());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAvailableForMyself()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.availableForMyself, other.availableForMyself);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHasAnimation()).compareTo(other.isSetHasAnimation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasAnimation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasAnimation, other.hasAnimation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetHasSound()).compareTo(other.isSetHasSound());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSound()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSound, other.hasSound);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRecommendationsEnabled()).compareTo(other.isSetRecommendationsEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommendationsEnabled()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendationsEnabled, other.recommendationsEnabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStickerResourceType()).compareTo(other.isSetStickerResourceType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStickerResourceType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stickerResourceType, other.stickerResourceType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Product(");
    boolean first = true;

    sb.append("productId:");
    if (this.productId == null) {
      sb.append("null");
    } else {
      sb.append(this.productId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("packageId:");
    sb.append(this.packageId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    sb.append(this.version);
    first = false;
    if (!first) sb.append(", ");
    sb.append("authorName:");
    if (this.authorName == null) {
      sb.append("null");
    } else {
      sb.append(this.authorName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("onSale:");
    sb.append(this.onSale);
    first = false;
    if (!first) sb.append(", ");
    sb.append("validDays:");
    sb.append(this.validDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("saleType:");
    sb.append(this.saleType);
    first = false;
    if (!first) sb.append(", ");
    sb.append("copyright:");
    if (this.copyright == null) {
      sb.append("null");
    } else {
      sb.append(this.copyright);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("title:");
    if (this.title == null) {
      sb.append("null");
    } else {
      sb.append(this.title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("descriptionText:");
    if (this.descriptionText == null) {
      sb.append("null");
    } else {
      sb.append(this.descriptionText);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("shopOrderId:");
    sb.append(this.shopOrderId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fromMid:");
    if (this.fromMid == null) {
      sb.append("null");
    } else {
      sb.append(this.fromMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("toMid:");
    if (this.toMid == null) {
      sb.append("null");
    } else {
      sb.append(this.toMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("validUntil:");
    sb.append(this.validUntil);
    first = false;
    if (!first) sb.append(", ");
    sb.append("priceTier:");
    sb.append(this.priceTier);
    first = false;
    if (!first) sb.append(", ");
    sb.append("price:");
    if (this.price == null) {
      sb.append("null");
    } else {
      sb.append(this.price);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currency:");
    if (this.currency == null) {
      sb.append("null");
    } else {
      sb.append(this.currency);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currencySymbol:");
    if (this.currencySymbol == null) {
      sb.append("null");
    } else {
      sb.append(this.currencySymbol);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("paymentType:");
    if (this.paymentType == null) {
      sb.append("null");
    } else {
      sb.append(this.paymentType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createDate:");
    sb.append(this.createDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ownFlag:");
    sb.append(this.ownFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("eventType:");
    if (this.eventType == null) {
      sb.append("null");
    } else {
      sb.append(this.eventType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("urlSchema:");
    if (this.urlSchema == null) {
      sb.append("null");
    } else {
      sb.append(this.urlSchema);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("downloadUrl:");
    if (this.downloadUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.downloadUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("buddyMid:");
    if (this.buddyMid == null) {
      sb.append("null");
    } else {
      sb.append(this.buddyMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("publishSince:");
    sb.append(this.publishSince);
    first = false;
    if (!first) sb.append(", ");
    sb.append("newFlag:");
    sb.append(this.newFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("missionFlag:");
    sb.append(this.missionFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("categories:");
    if (this.categories == null) {
      sb.append("null");
    } else {
      sb.append(this.categories);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("missionButtonText:");
    if (this.missionButtonText == null) {
      sb.append("null");
    } else {
      sb.append(this.missionButtonText);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("missionShortDescription:");
    if (this.missionShortDescription == null) {
      sb.append("null");
    } else {
      sb.append(this.missionShortDescription);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("authorId:");
    if (this.authorId == null) {
      sb.append("null");
    } else {
      sb.append(this.authorId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("grantedByDefault:");
    sb.append(this.grantedByDefault);
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayOrder:");
    sb.append(this.displayOrder);
    first = false;
    if (!first) sb.append(", ");
    sb.append("availableForPresent:");
    sb.append(this.availableForPresent);
    first = false;
    if (!first) sb.append(", ");
    sb.append("availableForMyself:");
    sb.append(this.availableForMyself);
    first = false;
    if (!first) sb.append(", ");
    sb.append("hasAnimation:");
    sb.append(this.hasAnimation);
    first = false;
    if (!first) sb.append(", ");
    sb.append("hasSound:");
    sb.append(this.hasSound);
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommendationsEnabled:");
    sb.append(this.recommendationsEnabled);
    first = false;
    if (!first) sb.append(", ");
    sb.append("stickerResourceType:");
    if (this.stickerResourceType == null) {
      sb.append("null");
    } else {
      sb.append(this.stickerResourceType);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProductStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ProductStandardScheme getScheme() {
      return new ProductStandardScheme();
    }
  }

  private static class ProductStandardScheme extends org.apache.thrift.scheme.StandardScheme<Product> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Product struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productId = iprot.readString();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PACKAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.packageId = iprot.readI64();
              struct.setPackageIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.version = iprot.readI32();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AUTHOR_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.authorName = iprot.readString();
              struct.setAuthorNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ON_SALE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.onSale = iprot.readBool();
              struct.setOnSaleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // VALID_DAYS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.validDays = iprot.readI32();
              struct.setValidDaysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SALE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.saleType = iprot.readI32();
              struct.setSaleTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // COPYRIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.copyright = iprot.readString();
              struct.setCopyrightIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DESCRIPTION_TEXT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.descriptionText = iprot.readString();
              struct.setDescriptionTextIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SHOP_ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.shopOrderId = iprot.readI64();
              struct.setShopOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // FROM_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fromMid = iprot.readString();
              struct.setFromMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // TO_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.toMid = iprot.readString();
              struct.setToMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // VALID_UNTIL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.validUntil = iprot.readI64();
              struct.setValidUntilIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PRICE_TIER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.priceTier = iprot.readI32();
              struct.setPriceTierIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.price = iprot.readString();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CURRENCY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.currency = iprot.readString();
              struct.setCurrencyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CURRENCY_SYMBOL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.currencySymbol = iprot.readString();
              struct.setCurrencySymbolIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PAYMENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.paymentType = PaymentType.findByValue(iprot.readI32());
              struct.setPaymentTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CREATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createDate = iprot.readI64();
              struct.setCreateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // OWN_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.ownFlag = iprot.readBool();
              struct.setOwnFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // EVENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.eventType = ProductEventType.findByValue(iprot.readI32());
              struct.setEventTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // URL_SCHEMA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.urlSchema = iprot.readString();
              struct.setUrlSchemaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // DOWNLOAD_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.downloadUrl = iprot.readString();
              struct.setDownloadUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // BUDDY_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buddyMid = iprot.readString();
              struct.setBuddyMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // PUBLISH_SINCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.publishSince = iprot.readI64();
              struct.setPublishSinceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // NEW_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.newFlag = iprot.readBool();
              struct.setNewFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // MISSION_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.missionFlag = iprot.readBool();
              struct.setMissionFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // CATEGORIES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list386 = iprot.readListBegin();
                struct.categories = new java.util.ArrayList<ProductCategory>(_list386.size);
                ProductCategory _elem387;
                for (int _i388 = 0; _i388 < _list386.size; ++_i388)
                {
                  _elem387 = new ProductCategory();
                  _elem387.read(iprot);
                  struct.categories.add(_elem387);
                }
                iprot.readListEnd();
              }
              struct.setCategoriesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // MISSION_BUTTON_TEXT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.missionButtonText = iprot.readString();
              struct.setMissionButtonTextIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // MISSION_SHORT_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.missionShortDescription = iprot.readString();
              struct.setMissionShortDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // AUTHOR_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.authorId = iprot.readString();
              struct.setAuthorIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // GRANTED_BY_DEFAULT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.grantedByDefault = iprot.readBool();
              struct.setGrantedByDefaultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // DISPLAY_ORDER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.displayOrder = iprot.readI32();
              struct.setDisplayOrderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 43: // AVAILABLE_FOR_PRESENT
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.availableForPresent = iprot.readBool();
              struct.setAvailableForPresentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 44: // AVAILABLE_FOR_MYSELF
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.availableForMyself = iprot.readBool();
              struct.setAvailableForMyselfIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 51: // HAS_ANIMATION
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasAnimation = iprot.readBool();
              struct.setHasAnimationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 52: // HAS_SOUND
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSound = iprot.readBool();
              struct.setHasSoundIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 53: // RECOMMENDATIONS_ENABLED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.recommendationsEnabled = iprot.readBool();
              struct.setRecommendationsEnabledIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 54: // STICKER_RESOURCE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.stickerResourceType = StickerResourceType.findByValue(iprot.readI32());
              struct.setStickerResourceTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Product struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.productId != null) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeString(struct.productId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PACKAGE_ID_FIELD_DESC);
      oprot.writeI64(struct.packageId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI32(struct.version);
      oprot.writeFieldEnd();
      if (struct.authorName != null) {
        oprot.writeFieldBegin(AUTHOR_NAME_FIELD_DESC);
        oprot.writeString(struct.authorName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ON_SALE_FIELD_DESC);
      oprot.writeBool(struct.onSale);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VALID_DAYS_FIELD_DESC);
      oprot.writeI32(struct.validDays);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SALE_TYPE_FIELD_DESC);
      oprot.writeI32(struct.saleType);
      oprot.writeFieldEnd();
      if (struct.copyright != null) {
        oprot.writeFieldBegin(COPYRIGHT_FIELD_DESC);
        oprot.writeString(struct.copyright);
        oprot.writeFieldEnd();
      }
      if (struct.title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.title);
        oprot.writeFieldEnd();
      }
      if (struct.descriptionText != null) {
        oprot.writeFieldBegin(DESCRIPTION_TEXT_FIELD_DESC);
        oprot.writeString(struct.descriptionText);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SHOP_ORDER_ID_FIELD_DESC);
      oprot.writeI64(struct.shopOrderId);
      oprot.writeFieldEnd();
      if (struct.fromMid != null) {
        oprot.writeFieldBegin(FROM_MID_FIELD_DESC);
        oprot.writeString(struct.fromMid);
        oprot.writeFieldEnd();
      }
      if (struct.toMid != null) {
        oprot.writeFieldBegin(TO_MID_FIELD_DESC);
        oprot.writeString(struct.toMid);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VALID_UNTIL_FIELD_DESC);
      oprot.writeI64(struct.validUntil);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PRICE_TIER_FIELD_DESC);
      oprot.writeI32(struct.priceTier);
      oprot.writeFieldEnd();
      if (struct.price != null) {
        oprot.writeFieldBegin(PRICE_FIELD_DESC);
        oprot.writeString(struct.price);
        oprot.writeFieldEnd();
      }
      if (struct.currency != null) {
        oprot.writeFieldBegin(CURRENCY_FIELD_DESC);
        oprot.writeString(struct.currency);
        oprot.writeFieldEnd();
      }
      if (struct.currencySymbol != null) {
        oprot.writeFieldBegin(CURRENCY_SYMBOL_FIELD_DESC);
        oprot.writeString(struct.currencySymbol);
        oprot.writeFieldEnd();
      }
      if (struct.paymentType != null) {
        oprot.writeFieldBegin(PAYMENT_TYPE_FIELD_DESC);
        oprot.writeI32(struct.paymentType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_DATE_FIELD_DESC);
      oprot.writeI64(struct.createDate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OWN_FLAG_FIELD_DESC);
      oprot.writeBool(struct.ownFlag);
      oprot.writeFieldEnd();
      if (struct.eventType != null) {
        oprot.writeFieldBegin(EVENT_TYPE_FIELD_DESC);
        oprot.writeI32(struct.eventType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.urlSchema != null) {
        oprot.writeFieldBegin(URL_SCHEMA_FIELD_DESC);
        oprot.writeString(struct.urlSchema);
        oprot.writeFieldEnd();
      }
      if (struct.downloadUrl != null) {
        oprot.writeFieldBegin(DOWNLOAD_URL_FIELD_DESC);
        oprot.writeString(struct.downloadUrl);
        oprot.writeFieldEnd();
      }
      if (struct.buddyMid != null) {
        oprot.writeFieldBegin(BUDDY_MID_FIELD_DESC);
        oprot.writeString(struct.buddyMid);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PUBLISH_SINCE_FIELD_DESC);
      oprot.writeI64(struct.publishSince);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NEW_FLAG_FIELD_DESC);
      oprot.writeBool(struct.newFlag);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MISSION_FLAG_FIELD_DESC);
      oprot.writeBool(struct.missionFlag);
      oprot.writeFieldEnd();
      if (struct.categories != null) {
        oprot.writeFieldBegin(CATEGORIES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.categories.size()));
          for (ProductCategory _iter389 : struct.categories)
          {
            _iter389.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.missionButtonText != null) {
        oprot.writeFieldBegin(MISSION_BUTTON_TEXT_FIELD_DESC);
        oprot.writeString(struct.missionButtonText);
        oprot.writeFieldEnd();
      }
      if (struct.missionShortDescription != null) {
        oprot.writeFieldBegin(MISSION_SHORT_DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.missionShortDescription);
        oprot.writeFieldEnd();
      }
      if (struct.authorId != null) {
        oprot.writeFieldBegin(AUTHOR_ID_FIELD_DESC);
        oprot.writeString(struct.authorId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(GRANTED_BY_DEFAULT_FIELD_DESC);
      oprot.writeBool(struct.grantedByDefault);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DISPLAY_ORDER_FIELD_DESC);
      oprot.writeI32(struct.displayOrder);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AVAILABLE_FOR_PRESENT_FIELD_DESC);
      oprot.writeBool(struct.availableForPresent);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AVAILABLE_FOR_MYSELF_FIELD_DESC);
      oprot.writeBool(struct.availableForMyself);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(HAS_ANIMATION_FIELD_DESC);
      oprot.writeBool(struct.hasAnimation);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(HAS_SOUND_FIELD_DESC);
      oprot.writeBool(struct.hasSound);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RECOMMENDATIONS_ENABLED_FIELD_DESC);
      oprot.writeBool(struct.recommendationsEnabled);
      oprot.writeFieldEnd();
      if (struct.stickerResourceType != null) {
        oprot.writeFieldBegin(STICKER_RESOURCE_TYPE_FIELD_DESC);
        oprot.writeI32(struct.stickerResourceType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProductTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ProductTupleScheme getScheme() {
      return new ProductTupleScheme();
    }
  }

  private static class ProductTupleScheme extends org.apache.thrift.scheme.TupleScheme<Product> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Product struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetProductId()) {
        optionals.set(0);
      }
      if (struct.isSetPackageId()) {
        optionals.set(1);
      }
      if (struct.isSetVersion()) {
        optionals.set(2);
      }
      if (struct.isSetAuthorName()) {
        optionals.set(3);
      }
      if (struct.isSetOnSale()) {
        optionals.set(4);
      }
      if (struct.isSetValidDays()) {
        optionals.set(5);
      }
      if (struct.isSetSaleType()) {
        optionals.set(6);
      }
      if (struct.isSetCopyright()) {
        optionals.set(7);
      }
      if (struct.isSetTitle()) {
        optionals.set(8);
      }
      if (struct.isSetDescriptionText()) {
        optionals.set(9);
      }
      if (struct.isSetShopOrderId()) {
        optionals.set(10);
      }
      if (struct.isSetFromMid()) {
        optionals.set(11);
      }
      if (struct.isSetToMid()) {
        optionals.set(12);
      }
      if (struct.isSetValidUntil()) {
        optionals.set(13);
      }
      if (struct.isSetPriceTier()) {
        optionals.set(14);
      }
      if (struct.isSetPrice()) {
        optionals.set(15);
      }
      if (struct.isSetCurrency()) {
        optionals.set(16);
      }
      if (struct.isSetCurrencySymbol()) {
        optionals.set(17);
      }
      if (struct.isSetPaymentType()) {
        optionals.set(18);
      }
      if (struct.isSetCreateDate()) {
        optionals.set(19);
      }
      if (struct.isSetOwnFlag()) {
        optionals.set(20);
      }
      if (struct.isSetEventType()) {
        optionals.set(21);
      }
      if (struct.isSetUrlSchema()) {
        optionals.set(22);
      }
      if (struct.isSetDownloadUrl()) {
        optionals.set(23);
      }
      if (struct.isSetBuddyMid()) {
        optionals.set(24);
      }
      if (struct.isSetPublishSince()) {
        optionals.set(25);
      }
      if (struct.isSetNewFlag()) {
        optionals.set(26);
      }
      if (struct.isSetMissionFlag()) {
        optionals.set(27);
      }
      if (struct.isSetCategories()) {
        optionals.set(28);
      }
      if (struct.isSetMissionButtonText()) {
        optionals.set(29);
      }
      if (struct.isSetMissionShortDescription()) {
        optionals.set(30);
      }
      if (struct.isSetAuthorId()) {
        optionals.set(31);
      }
      if (struct.isSetGrantedByDefault()) {
        optionals.set(32);
      }
      if (struct.isSetDisplayOrder()) {
        optionals.set(33);
      }
      if (struct.isSetAvailableForPresent()) {
        optionals.set(34);
      }
      if (struct.isSetAvailableForMyself()) {
        optionals.set(35);
      }
      if (struct.isSetHasAnimation()) {
        optionals.set(36);
      }
      if (struct.isSetHasSound()) {
        optionals.set(37);
      }
      if (struct.isSetRecommendationsEnabled()) {
        optionals.set(38);
      }
      if (struct.isSetStickerResourceType()) {
        optionals.set(39);
      }
      oprot.writeBitSet(optionals, 40);
      if (struct.isSetProductId()) {
        oprot.writeString(struct.productId);
      }
      if (struct.isSetPackageId()) {
        oprot.writeI64(struct.packageId);
      }
      if (struct.isSetVersion()) {
        oprot.writeI32(struct.version);
      }
      if (struct.isSetAuthorName()) {
        oprot.writeString(struct.authorName);
      }
      if (struct.isSetOnSale()) {
        oprot.writeBool(struct.onSale);
      }
      if (struct.isSetValidDays()) {
        oprot.writeI32(struct.validDays);
      }
      if (struct.isSetSaleType()) {
        oprot.writeI32(struct.saleType);
      }
      if (struct.isSetCopyright()) {
        oprot.writeString(struct.copyright);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetDescriptionText()) {
        oprot.writeString(struct.descriptionText);
      }
      if (struct.isSetShopOrderId()) {
        oprot.writeI64(struct.shopOrderId);
      }
      if (struct.isSetFromMid()) {
        oprot.writeString(struct.fromMid);
      }
      if (struct.isSetToMid()) {
        oprot.writeString(struct.toMid);
      }
      if (struct.isSetValidUntil()) {
        oprot.writeI64(struct.validUntil);
      }
      if (struct.isSetPriceTier()) {
        oprot.writeI32(struct.priceTier);
      }
      if (struct.isSetPrice()) {
        oprot.writeString(struct.price);
      }
      if (struct.isSetCurrency()) {
        oprot.writeString(struct.currency);
      }
      if (struct.isSetCurrencySymbol()) {
        oprot.writeString(struct.currencySymbol);
      }
      if (struct.isSetPaymentType()) {
        oprot.writeI32(struct.paymentType.getValue());
      }
      if (struct.isSetCreateDate()) {
        oprot.writeI64(struct.createDate);
      }
      if (struct.isSetOwnFlag()) {
        oprot.writeBool(struct.ownFlag);
      }
      if (struct.isSetEventType()) {
        oprot.writeI32(struct.eventType.getValue());
      }
      if (struct.isSetUrlSchema()) {
        oprot.writeString(struct.urlSchema);
      }
      if (struct.isSetDownloadUrl()) {
        oprot.writeString(struct.downloadUrl);
      }
      if (struct.isSetBuddyMid()) {
        oprot.writeString(struct.buddyMid);
      }
      if (struct.isSetPublishSince()) {
        oprot.writeI64(struct.publishSince);
      }
      if (struct.isSetNewFlag()) {
        oprot.writeBool(struct.newFlag);
      }
      if (struct.isSetMissionFlag()) {
        oprot.writeBool(struct.missionFlag);
      }
      if (struct.isSetCategories()) {
        {
          oprot.writeI32(struct.categories.size());
          for (ProductCategory _iter390 : struct.categories)
          {
            _iter390.write(oprot);
          }
        }
      }
      if (struct.isSetMissionButtonText()) {
        oprot.writeString(struct.missionButtonText);
      }
      if (struct.isSetMissionShortDescription()) {
        oprot.writeString(struct.missionShortDescription);
      }
      if (struct.isSetAuthorId()) {
        oprot.writeString(struct.authorId);
      }
      if (struct.isSetGrantedByDefault()) {
        oprot.writeBool(struct.grantedByDefault);
      }
      if (struct.isSetDisplayOrder()) {
        oprot.writeI32(struct.displayOrder);
      }
      if (struct.isSetAvailableForPresent()) {
        oprot.writeBool(struct.availableForPresent);
      }
      if (struct.isSetAvailableForMyself()) {
        oprot.writeBool(struct.availableForMyself);
      }
      if (struct.isSetHasAnimation()) {
        oprot.writeBool(struct.hasAnimation);
      }
      if (struct.isSetHasSound()) {
        oprot.writeBool(struct.hasSound);
      }
      if (struct.isSetRecommendationsEnabled()) {
        oprot.writeBool(struct.recommendationsEnabled);
      }
      if (struct.isSetStickerResourceType()) {
        oprot.writeI32(struct.stickerResourceType.getValue());
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Product struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(40);
      if (incoming.get(0)) {
        struct.productId = iprot.readString();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.packageId = iprot.readI64();
        struct.setPackageIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.version = iprot.readI32();
        struct.setVersionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.authorName = iprot.readString();
        struct.setAuthorNameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.onSale = iprot.readBool();
        struct.setOnSaleIsSet(true);
      }
      if (incoming.get(5)) {
        struct.validDays = iprot.readI32();
        struct.setValidDaysIsSet(true);
      }
      if (incoming.get(6)) {
        struct.saleType = iprot.readI32();
        struct.setSaleTypeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.copyright = iprot.readString();
        struct.setCopyrightIsSet(true);
      }
      if (incoming.get(8)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(9)) {
        struct.descriptionText = iprot.readString();
        struct.setDescriptionTextIsSet(true);
      }
      if (incoming.get(10)) {
        struct.shopOrderId = iprot.readI64();
        struct.setShopOrderIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.fromMid = iprot.readString();
        struct.setFromMidIsSet(true);
      }
      if (incoming.get(12)) {
        struct.toMid = iprot.readString();
        struct.setToMidIsSet(true);
      }
      if (incoming.get(13)) {
        struct.validUntil = iprot.readI64();
        struct.setValidUntilIsSet(true);
      }
      if (incoming.get(14)) {
        struct.priceTier = iprot.readI32();
        struct.setPriceTierIsSet(true);
      }
      if (incoming.get(15)) {
        struct.price = iprot.readString();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(16)) {
        struct.currency = iprot.readString();
        struct.setCurrencyIsSet(true);
      }
      if (incoming.get(17)) {
        struct.currencySymbol = iprot.readString();
        struct.setCurrencySymbolIsSet(true);
      }
      if (incoming.get(18)) {
        struct.paymentType = PaymentType.findByValue(iprot.readI32());
        struct.setPaymentTypeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.createDate = iprot.readI64();
        struct.setCreateDateIsSet(true);
      }
      if (incoming.get(20)) {
        struct.ownFlag = iprot.readBool();
        struct.setOwnFlagIsSet(true);
      }
      if (incoming.get(21)) {
        struct.eventType = ProductEventType.findByValue(iprot.readI32());
        struct.setEventTypeIsSet(true);
      }
      if (incoming.get(22)) {
        struct.urlSchema = iprot.readString();
        struct.setUrlSchemaIsSet(true);
      }
      if (incoming.get(23)) {
        struct.downloadUrl = iprot.readString();
        struct.setDownloadUrlIsSet(true);
      }
      if (incoming.get(24)) {
        struct.buddyMid = iprot.readString();
        struct.setBuddyMidIsSet(true);
      }
      if (incoming.get(25)) {
        struct.publishSince = iprot.readI64();
        struct.setPublishSinceIsSet(true);
      }
      if (incoming.get(26)) {
        struct.newFlag = iprot.readBool();
        struct.setNewFlagIsSet(true);
      }
      if (incoming.get(27)) {
        struct.missionFlag = iprot.readBool();
        struct.setMissionFlagIsSet(true);
      }
      if (incoming.get(28)) {
        {
          org.apache.thrift.protocol.TList _list391 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.categories = new java.util.ArrayList<ProductCategory>(_list391.size);
          ProductCategory _elem392;
          for (int _i393 = 0; _i393 < _list391.size; ++_i393)
          {
            _elem392 = new ProductCategory();
            _elem392.read(iprot);
            struct.categories.add(_elem392);
          }
        }
        struct.setCategoriesIsSet(true);
      }
      if (incoming.get(29)) {
        struct.missionButtonText = iprot.readString();
        struct.setMissionButtonTextIsSet(true);
      }
      if (incoming.get(30)) {
        struct.missionShortDescription = iprot.readString();
        struct.setMissionShortDescriptionIsSet(true);
      }
      if (incoming.get(31)) {
        struct.authorId = iprot.readString();
        struct.setAuthorIdIsSet(true);
      }
      if (incoming.get(32)) {
        struct.grantedByDefault = iprot.readBool();
        struct.setGrantedByDefaultIsSet(true);
      }
      if (incoming.get(33)) {
        struct.displayOrder = iprot.readI32();
        struct.setDisplayOrderIsSet(true);
      }
      if (incoming.get(34)) {
        struct.availableForPresent = iprot.readBool();
        struct.setAvailableForPresentIsSet(true);
      }
      if (incoming.get(35)) {
        struct.availableForMyself = iprot.readBool();
        struct.setAvailableForMyselfIsSet(true);
      }
      if (incoming.get(36)) {
        struct.hasAnimation = iprot.readBool();
        struct.setHasAnimationIsSet(true);
      }
      if (incoming.get(37)) {
        struct.hasSound = iprot.readBool();
        struct.setHasSoundIsSet(true);
      }
      if (incoming.get(38)) {
        struct.recommendationsEnabled = iprot.readBool();
        struct.setRecommendationsEnabledIsSet(true);
      }
      if (incoming.get(39)) {
        struct.stickerResourceType = StickerResourceType.findByValue(iprot.readI32());
        struct.setStickerResourceTypeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

