/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.0)", date = "2020-03-23")
public class CreateSquareChatAnnouncementRequest implements org.apache.thrift.TBase<CreateSquareChatAnnouncementRequest, CreateSquareChatAnnouncementRequest._Fields>, java.io.Serializable, Cloneable, Comparable<CreateSquareChatAnnouncementRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CreateSquareChatAnnouncementRequest");

  private static final org.apache.thrift.protocol.TField REQ_SEQ_FIELD_DESC = new org.apache.thrift.protocol.TField("reqSeq", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField SQUARE_CHAT_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("squareChatMid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SQUARE_CHAT_ANNOUNCEMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("squareChatAnnouncement", org.apache.thrift.protocol.TType.STRUCT, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CreateSquareChatAnnouncementRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CreateSquareChatAnnouncementRequestTupleSchemeFactory();

  public int reqSeq; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String squareChatMid; // required
  public @org.apache.thrift.annotation.Nullable SquareChatAnnouncement squareChatAnnouncement; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    REQ_SEQ((short)1, "reqSeq"),
    SQUARE_CHAT_MID((short)2, "squareChatMid"),
    SQUARE_CHAT_ANNOUNCEMENT((short)3, "squareChatAnnouncement");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // REQ_SEQ
          return REQ_SEQ;
        case 2: // SQUARE_CHAT_MID
          return SQUARE_CHAT_MID;
        case 3: // SQUARE_CHAT_ANNOUNCEMENT
          return SQUARE_CHAT_ANNOUNCEMENT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __REQSEQ_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.REQ_SEQ, new org.apache.thrift.meta_data.FieldMetaData("reqSeq", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SQUARE_CHAT_MID, new org.apache.thrift.meta_data.FieldMetaData("squareChatMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SQUARE_CHAT_ANNOUNCEMENT, new org.apache.thrift.meta_data.FieldMetaData("squareChatAnnouncement", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareChatAnnouncement.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CreateSquareChatAnnouncementRequest.class, metaDataMap);
  }

  public CreateSquareChatAnnouncementRequest() {
  }

  public CreateSquareChatAnnouncementRequest(
    int reqSeq,
    java.lang.String squareChatMid,
    SquareChatAnnouncement squareChatAnnouncement)
  {
    this();
    this.reqSeq = reqSeq;
    setReqSeqIsSet(true);
    this.squareChatMid = squareChatMid;
    this.squareChatAnnouncement = squareChatAnnouncement;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CreateSquareChatAnnouncementRequest(CreateSquareChatAnnouncementRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    this.reqSeq = other.reqSeq;
    if (other.isSetSquareChatMid()) {
      this.squareChatMid = other.squareChatMid;
    }
    if (other.isSetSquareChatAnnouncement()) {
      this.squareChatAnnouncement = new SquareChatAnnouncement(other.squareChatAnnouncement);
    }
  }

  public CreateSquareChatAnnouncementRequest deepCopy() {
    return new CreateSquareChatAnnouncementRequest(this);
  }

  @Override
  public void clear() {
    setReqSeqIsSet(false);
    this.reqSeq = 0;
    this.squareChatMid = null;
    this.squareChatAnnouncement = null;
  }

  public int getReqSeq() {
    return this.reqSeq;
  }

  public CreateSquareChatAnnouncementRequest setReqSeq(int reqSeq) {
    this.reqSeq = reqSeq;
    setReqSeqIsSet(true);
    return this;
  }

  public void unsetReqSeq() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REQSEQ_ISSET_ID);
  }

  /** Returns true if field reqSeq is set (has been assigned a value) and false otherwise */
  public boolean isSetReqSeq() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REQSEQ_ISSET_ID);
  }

  public void setReqSeqIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REQSEQ_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSquareChatMid() {
    return this.squareChatMid;
  }

  public CreateSquareChatAnnouncementRequest setSquareChatMid(@org.apache.thrift.annotation.Nullable java.lang.String squareChatMid) {
    this.squareChatMid = squareChatMid;
    return this;
  }

  public void unsetSquareChatMid() {
    this.squareChatMid = null;
  }

  /** Returns true if field squareChatMid is set (has been assigned a value) and false otherwise */
  public boolean isSetSquareChatMid() {
    return this.squareChatMid != null;
  }

  public void setSquareChatMidIsSet(boolean value) {
    if (!value) {
      this.squareChatMid = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public SquareChatAnnouncement getSquareChatAnnouncement() {
    return this.squareChatAnnouncement;
  }

  public CreateSquareChatAnnouncementRequest setSquareChatAnnouncement(@org.apache.thrift.annotation.Nullable SquareChatAnnouncement squareChatAnnouncement) {
    this.squareChatAnnouncement = squareChatAnnouncement;
    return this;
  }

  public void unsetSquareChatAnnouncement() {
    this.squareChatAnnouncement = null;
  }

  /** Returns true if field squareChatAnnouncement is set (has been assigned a value) and false otherwise */
  public boolean isSetSquareChatAnnouncement() {
    return this.squareChatAnnouncement != null;
  }

  public void setSquareChatAnnouncementIsSet(boolean value) {
    if (!value) {
      this.squareChatAnnouncement = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case REQ_SEQ:
      if (value == null) {
        unsetReqSeq();
      } else {
        setReqSeq((java.lang.Integer)value);
      }
      break;

    case SQUARE_CHAT_MID:
      if (value == null) {
        unsetSquareChatMid();
      } else {
        setSquareChatMid((java.lang.String)value);
      }
      break;

    case SQUARE_CHAT_ANNOUNCEMENT:
      if (value == null) {
        unsetSquareChatAnnouncement();
      } else {
        setSquareChatAnnouncement((SquareChatAnnouncement)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case REQ_SEQ:
      return getReqSeq();

    case SQUARE_CHAT_MID:
      return getSquareChatMid();

    case SQUARE_CHAT_ANNOUNCEMENT:
      return getSquareChatAnnouncement();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case REQ_SEQ:
      return isSetReqSeq();
    case SQUARE_CHAT_MID:
      return isSetSquareChatMid();
    case SQUARE_CHAT_ANNOUNCEMENT:
      return isSetSquareChatAnnouncement();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof CreateSquareChatAnnouncementRequest)
      return this.equals((CreateSquareChatAnnouncementRequest)that);
    return false;
  }

  public boolean equals(CreateSquareChatAnnouncementRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_reqSeq = true;
    boolean that_present_reqSeq = true;
    if (this_present_reqSeq || that_present_reqSeq) {
      if (!(this_present_reqSeq && that_present_reqSeq))
        return false;
      if (this.reqSeq != that.reqSeq)
        return false;
    }

    boolean this_present_squareChatMid = true && this.isSetSquareChatMid();
    boolean that_present_squareChatMid = true && that.isSetSquareChatMid();
    if (this_present_squareChatMid || that_present_squareChatMid) {
      if (!(this_present_squareChatMid && that_present_squareChatMid))
        return false;
      if (!this.squareChatMid.equals(that.squareChatMid))
        return false;
    }

    boolean this_present_squareChatAnnouncement = true && this.isSetSquareChatAnnouncement();
    boolean that_present_squareChatAnnouncement = true && that.isSetSquareChatAnnouncement();
    if (this_present_squareChatAnnouncement || that_present_squareChatAnnouncement) {
      if (!(this_present_squareChatAnnouncement && that_present_squareChatAnnouncement))
        return false;
      if (!this.squareChatAnnouncement.equals(that.squareChatAnnouncement))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + reqSeq;

    hashCode = hashCode * 8191 + ((isSetSquareChatMid()) ? 131071 : 524287);
    if (isSetSquareChatMid())
      hashCode = hashCode * 8191 + squareChatMid.hashCode();

    hashCode = hashCode * 8191 + ((isSetSquareChatAnnouncement()) ? 131071 : 524287);
    if (isSetSquareChatAnnouncement())
      hashCode = hashCode * 8191 + squareChatAnnouncement.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(CreateSquareChatAnnouncementRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetReqSeq(), other.isSetReqSeq());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReqSeq()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reqSeq, other.reqSeq);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSquareChatMid(), other.isSetSquareChatMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSquareChatMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.squareChatMid, other.squareChatMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSquareChatAnnouncement(), other.isSetSquareChatAnnouncement());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSquareChatAnnouncement()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.squareChatAnnouncement, other.squareChatAnnouncement);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("CreateSquareChatAnnouncementRequest(");
    boolean first = true;

    sb.append("reqSeq:");
    sb.append(this.reqSeq);
    first = false;
    if (!first) sb.append(", ");
    sb.append("squareChatMid:");
    if (this.squareChatMid == null) {
      sb.append("null");
    } else {
      sb.append(this.squareChatMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("squareChatAnnouncement:");
    if (this.squareChatAnnouncement == null) {
      sb.append("null");
    } else {
      sb.append(this.squareChatAnnouncement);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (squareChatAnnouncement != null) {
      squareChatAnnouncement.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CreateSquareChatAnnouncementRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CreateSquareChatAnnouncementRequestStandardScheme getScheme() {
      return new CreateSquareChatAnnouncementRequestStandardScheme();
    }
  }

  private static class CreateSquareChatAnnouncementRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<CreateSquareChatAnnouncementRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CreateSquareChatAnnouncementRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // REQ_SEQ
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.reqSeq = iprot.readI32();
              struct.setReqSeqIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SQUARE_CHAT_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.squareChatMid = iprot.readString();
              struct.setSquareChatMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SQUARE_CHAT_ANNOUNCEMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.squareChatAnnouncement = new SquareChatAnnouncement();
              struct.squareChatAnnouncement.read(iprot);
              struct.setSquareChatAnnouncementIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CreateSquareChatAnnouncementRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(REQ_SEQ_FIELD_DESC);
      oprot.writeI32(struct.reqSeq);
      oprot.writeFieldEnd();
      if (struct.squareChatMid != null) {
        oprot.writeFieldBegin(SQUARE_CHAT_MID_FIELD_DESC);
        oprot.writeString(struct.squareChatMid);
        oprot.writeFieldEnd();
      }
      if (struct.squareChatAnnouncement != null) {
        oprot.writeFieldBegin(SQUARE_CHAT_ANNOUNCEMENT_FIELD_DESC);
        struct.squareChatAnnouncement.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CreateSquareChatAnnouncementRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CreateSquareChatAnnouncementRequestTupleScheme getScheme() {
      return new CreateSquareChatAnnouncementRequestTupleScheme();
    }
  }

  private static class CreateSquareChatAnnouncementRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<CreateSquareChatAnnouncementRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CreateSquareChatAnnouncementRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetReqSeq()) {
        optionals.set(0);
      }
      if (struct.isSetSquareChatMid()) {
        optionals.set(1);
      }
      if (struct.isSetSquareChatAnnouncement()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetReqSeq()) {
        oprot.writeI32(struct.reqSeq);
      }
      if (struct.isSetSquareChatMid()) {
        oprot.writeString(struct.squareChatMid);
      }
      if (struct.isSetSquareChatAnnouncement()) {
        struct.squareChatAnnouncement.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CreateSquareChatAnnouncementRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.reqSeq = iprot.readI32();
        struct.setReqSeqIsSet(true);
      }
      if (incoming.get(1)) {
        struct.squareChatMid = iprot.readString();
        struct.setSquareChatMidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.squareChatAnnouncement = new SquareChatAnnouncement();
        struct.squareChatAnnouncement.read(iprot);
        struct.setSquareChatAnnouncementIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

