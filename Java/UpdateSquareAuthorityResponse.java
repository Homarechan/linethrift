/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2020-04-18")
public class UpdateSquareAuthorityResponse implements org.apache.thrift.TBase<UpdateSquareAuthorityResponse, UpdateSquareAuthorityResponse._Fields>, java.io.Serializable, Cloneable, Comparable<UpdateSquareAuthorityResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UpdateSquareAuthorityResponse");

  private static final org.apache.thrift.protocol.TField UPDATD_ATTRIBUTES_FIELD_DESC = new org.apache.thrift.protocol.TField("updatdAttributes", org.apache.thrift.protocol.TType.SET, (short)1);
  private static final org.apache.thrift.protocol.TField AUTHORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("authority", org.apache.thrift.protocol.TType.STRUCT, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UpdateSquareAuthorityResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UpdateSquareAuthorityResponseTupleSchemeFactory();

  public java.util.Set<SquareAuthorityAttribute> updatdAttributes; // required
  public SquareAuthority authority; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UPDATD_ATTRIBUTES((short)1, "updatdAttributes"),
    AUTHORITY((short)2, "authority");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UPDATD_ATTRIBUTES
          return UPDATD_ATTRIBUTES;
        case 2: // AUTHORITY
          return AUTHORITY;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UPDATD_ATTRIBUTES, new org.apache.thrift.meta_data.FieldMetaData("updatdAttributes", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareAuthorityAttribute.class))));
    tmpMap.put(_Fields.AUTHORITY, new org.apache.thrift.meta_data.FieldMetaData("authority", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareAuthority.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UpdateSquareAuthorityResponse.class, metaDataMap);
  }

  public UpdateSquareAuthorityResponse() {
  }

  public UpdateSquareAuthorityResponse(
    java.util.Set<SquareAuthorityAttribute> updatdAttributes,
    SquareAuthority authority)
  {
    this();
    this.updatdAttributes = updatdAttributes;
    this.authority = authority;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UpdateSquareAuthorityResponse(UpdateSquareAuthorityResponse other) {
    if (other.isSetUpdatdAttributes()) {
      java.util.Set<SquareAuthorityAttribute> __this__updatdAttributes = java.util.EnumSet.noneOf(SquareAuthorityAttribute.class);
      for (SquareAuthorityAttribute other_element : other.updatdAttributes) {
        __this__updatdAttributes.add(other_element);
      }
      this.updatdAttributes = __this__updatdAttributes;
    }
    if (other.isSetAuthority()) {
      this.authority = new SquareAuthority(other.authority);
    }
  }

  public UpdateSquareAuthorityResponse deepCopy() {
    return new UpdateSquareAuthorityResponse(this);
  }

  @Override
  public void clear() {
    this.updatdAttributes = null;
    this.authority = null;
  }

  public int getUpdatdAttributesSize() {
    return (this.updatdAttributes == null) ? 0 : this.updatdAttributes.size();
  }

  public java.util.Iterator<SquareAuthorityAttribute> getUpdatdAttributesIterator() {
    return (this.updatdAttributes == null) ? null : this.updatdAttributes.iterator();
  }

  public void addToUpdatdAttributes(SquareAuthorityAttribute elem) {
    if (this.updatdAttributes == null) {
      this.updatdAttributes = java.util.EnumSet.noneOf(SquareAuthorityAttribute.class);
    }
    this.updatdAttributes.add(elem);
  }

  public java.util.Set<SquareAuthorityAttribute> getUpdatdAttributes() {
    return this.updatdAttributes;
  }

  public UpdateSquareAuthorityResponse setUpdatdAttributes(java.util.Set<SquareAuthorityAttribute> updatdAttributes) {
    this.updatdAttributes = updatdAttributes;
    return this;
  }

  public void unsetUpdatdAttributes() {
    this.updatdAttributes = null;
  }

  /** Returns true if field updatdAttributes is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatdAttributes() {
    return this.updatdAttributes != null;
  }

  public void setUpdatdAttributesIsSet(boolean value) {
    if (!value) {
      this.updatdAttributes = null;
    }
  }

  public SquareAuthority getAuthority() {
    return this.authority;
  }

  public UpdateSquareAuthorityResponse setAuthority(SquareAuthority authority) {
    this.authority = authority;
    return this;
  }

  public void unsetAuthority() {
    this.authority = null;
  }

  /** Returns true if field authority is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthority() {
    return this.authority != null;
  }

  public void setAuthorityIsSet(boolean value) {
    if (!value) {
      this.authority = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case UPDATD_ATTRIBUTES:
      if (value == null) {
        unsetUpdatdAttributes();
      } else {
        setUpdatdAttributes((java.util.Set<SquareAuthorityAttribute>)value);
      }
      break;

    case AUTHORITY:
      if (value == null) {
        unsetAuthority();
      } else {
        setAuthority((SquareAuthority)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case UPDATD_ATTRIBUTES:
      return getUpdatdAttributes();

    case AUTHORITY:
      return getAuthority();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case UPDATD_ATTRIBUTES:
      return isSetUpdatdAttributes();
    case AUTHORITY:
      return isSetAuthority();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof UpdateSquareAuthorityResponse)
      return this.equals((UpdateSquareAuthorityResponse)that);
    return false;
  }

  public boolean equals(UpdateSquareAuthorityResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_updatdAttributes = true && this.isSetUpdatdAttributes();
    boolean that_present_updatdAttributes = true && that.isSetUpdatdAttributes();
    if (this_present_updatdAttributes || that_present_updatdAttributes) {
      if (!(this_present_updatdAttributes && that_present_updatdAttributes))
        return false;
      if (!this.updatdAttributes.equals(that.updatdAttributes))
        return false;
    }

    boolean this_present_authority = true && this.isSetAuthority();
    boolean that_present_authority = true && that.isSetAuthority();
    if (this_present_authority || that_present_authority) {
      if (!(this_present_authority && that_present_authority))
        return false;
      if (!this.authority.equals(that.authority))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetUpdatdAttributes()) ? 131071 : 524287);
    if (isSetUpdatdAttributes())
      hashCode = hashCode * 8191 + updatdAttributes.hashCode();

    hashCode = hashCode * 8191 + ((isSetAuthority()) ? 131071 : 524287);
    if (isSetAuthority())
      hashCode = hashCode * 8191 + authority.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(UpdateSquareAuthorityResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetUpdatdAttributes()).compareTo(other.isSetUpdatdAttributes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatdAttributes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatdAttributes, other.updatdAttributes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAuthority()).compareTo(other.isSetAuthority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthority()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.authority, other.authority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("UpdateSquareAuthorityResponse(");
    boolean first = true;

    sb.append("updatdAttributes:");
    if (this.updatdAttributes == null) {
      sb.append("null");
    } else {
      sb.append(this.updatdAttributes);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("authority:");
    if (this.authority == null) {
      sb.append("null");
    } else {
      sb.append(this.authority);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (authority != null) {
      authority.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UpdateSquareAuthorityResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UpdateSquareAuthorityResponseStandardScheme getScheme() {
      return new UpdateSquareAuthorityResponseStandardScheme();
    }
  }

  private static class UpdateSquareAuthorityResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<UpdateSquareAuthorityResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UpdateSquareAuthorityResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UPDATD_ATTRIBUTES
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set974 = iprot.readSetBegin();
                struct.updatdAttributes = java.util.EnumSet.noneOf(SquareAuthorityAttribute.class);
                SquareAuthorityAttribute _elem975;
                for (int _i976 = 0; _i976 < _set974.size; ++_i976)
                {
                  _elem975 = SquareAuthorityAttribute.findByValue(iprot.readI32());
                  if (_elem975 != null)
                  {
                    struct.updatdAttributes.add(_elem975);
                  }
                }
                iprot.readSetEnd();
              }
              struct.setUpdatdAttributesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AUTHORITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.authority = new SquareAuthority();
              struct.authority.read(iprot);
              struct.setAuthorityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UpdateSquareAuthorityResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.updatdAttributes != null) {
        oprot.writeFieldBegin(UPDATD_ATTRIBUTES_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.updatdAttributes.size()));
          for (SquareAuthorityAttribute _iter977 : struct.updatdAttributes)
          {
            oprot.writeI32(_iter977.getValue());
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.authority != null) {
        oprot.writeFieldBegin(AUTHORITY_FIELD_DESC);
        struct.authority.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UpdateSquareAuthorityResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UpdateSquareAuthorityResponseTupleScheme getScheme() {
      return new UpdateSquareAuthorityResponseTupleScheme();
    }
  }

  private static class UpdateSquareAuthorityResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<UpdateSquareAuthorityResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UpdateSquareAuthorityResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetUpdatdAttributes()) {
        optionals.set(0);
      }
      if (struct.isSetAuthority()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetUpdatdAttributes()) {
        {
          oprot.writeI32(struct.updatdAttributes.size());
          for (SquareAuthorityAttribute _iter978 : struct.updatdAttributes)
          {
            oprot.writeI32(_iter978.getValue());
          }
        }
      }
      if (struct.isSetAuthority()) {
        struct.authority.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UpdateSquareAuthorityResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TSet _set979 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.updatdAttributes = java.util.EnumSet.noneOf(SquareAuthorityAttribute.class);
          SquareAuthorityAttribute _elem980;
          for (int _i981 = 0; _i981 < _set979.size; ++_i981)
          {
            _elem980 = SquareAuthorityAttribute.findByValue(iprot.readI32());
            if (_elem980 != null)
            {
              struct.updatdAttributes.add(_elem980);
            }
          }
        }
        struct.setUpdatdAttributesIsSet(true);
      }
      if (incoming.get(1)) {
        struct.authority = new SquareAuthority();
        struct.authority.read(iprot);
        struct.setAuthorityIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

