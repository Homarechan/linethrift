/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2019-09-28")
public class PaymentReservationResult implements org.apache.thrift.TBase<PaymentReservationResult, PaymentReservationResult._Fields>, java.io.Serializable, Cloneable, Comparable<PaymentReservationResult> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PaymentReservationResult");

  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CONFIRM_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("confirmUrl", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField EXTRAS_FIELD_DESC = new org.apache.thrift.protocol.TField("extras", org.apache.thrift.protocol.TType.MAP, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new PaymentReservationResultStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new PaymentReservationResultTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String orderId; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String confirmUrl; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> extras; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ORDER_ID((short)1, "orderId"),
    CONFIRM_URL((short)2, "confirmUrl"),
    EXTRAS((short)3, "extras");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_ID
          return ORDER_ID;
        case 2: // CONFIRM_URL
          return CONFIRM_URL;
        case 3: // EXTRAS
          return EXTRAS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONFIRM_URL, new org.apache.thrift.meta_data.FieldMetaData("confirmUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTRAS, new org.apache.thrift.meta_data.FieldMetaData("extras", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PaymentReservationResult.class, metaDataMap);
  }

  public PaymentReservationResult() {
  }

  public PaymentReservationResult(
    java.lang.String orderId,
    java.lang.String confirmUrl,
    java.util.Map<java.lang.String,java.lang.String> extras)
  {
    this();
    this.orderId = orderId;
    this.confirmUrl = confirmUrl;
    this.extras = extras;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PaymentReservationResult(PaymentReservationResult other) {
    if (other.isSetOrderId()) {
      this.orderId = other.orderId;
    }
    if (other.isSetConfirmUrl()) {
      this.confirmUrl = other.confirmUrl;
    }
    if (other.isSetExtras()) {
      java.util.Map<java.lang.String,java.lang.String> __this__extras = new java.util.HashMap<java.lang.String,java.lang.String>(other.extras);
      this.extras = __this__extras;
    }
  }

  public PaymentReservationResult deepCopy() {
    return new PaymentReservationResult(this);
  }

  @Override
  public void clear() {
    this.orderId = null;
    this.confirmUrl = null;
    this.extras = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getOrderId() {
    return this.orderId;
  }

  public PaymentReservationResult setOrderId(@org.apache.thrift.annotation.Nullable java.lang.String orderId) {
    this.orderId = orderId;
    return this;
  }

  public void unsetOrderId() {
    this.orderId = null;
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return this.orderId != null;
  }

  public void setOrderIdIsSet(boolean value) {
    if (!value) {
      this.orderId = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getConfirmUrl() {
    return this.confirmUrl;
  }

  public PaymentReservationResult setConfirmUrl(@org.apache.thrift.annotation.Nullable java.lang.String confirmUrl) {
    this.confirmUrl = confirmUrl;
    return this;
  }

  public void unsetConfirmUrl() {
    this.confirmUrl = null;
  }

  /** Returns true if field confirmUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetConfirmUrl() {
    return this.confirmUrl != null;
  }

  public void setConfirmUrlIsSet(boolean value) {
    if (!value) {
      this.confirmUrl = null;
    }
  }

  public int getExtrasSize() {
    return (this.extras == null) ? 0 : this.extras.size();
  }

  public void putToExtras(java.lang.String key, java.lang.String val) {
    if (this.extras == null) {
      this.extras = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.extras.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getExtras() {
    return this.extras;
  }

  public PaymentReservationResult setExtras(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> extras) {
    this.extras = extras;
    return this;
  }

  public void unsetExtras() {
    this.extras = null;
  }

  /** Returns true if field extras is set (has been assigned a value) and false otherwise */
  public boolean isSetExtras() {
    return this.extras != null;
  }

  public void setExtrasIsSet(boolean value) {
    if (!value) {
      this.extras = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((java.lang.String)value);
      }
      break;

    case CONFIRM_URL:
      if (value == null) {
        unsetConfirmUrl();
      } else {
        setConfirmUrl((java.lang.String)value);
      }
      break;

    case EXTRAS:
      if (value == null) {
        unsetExtras();
      } else {
        setExtras((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_ID:
      return getOrderId();

    case CONFIRM_URL:
      return getConfirmUrl();

    case EXTRAS:
      return getExtras();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ORDER_ID:
      return isSetOrderId();
    case CONFIRM_URL:
      return isSetConfirmUrl();
    case EXTRAS:
      return isSetExtras();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof PaymentReservationResult)
      return this.equals((PaymentReservationResult)that);
    return false;
  }

  public boolean equals(PaymentReservationResult that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (!this.orderId.equals(that.orderId))
        return false;
    }

    boolean this_present_confirmUrl = true && this.isSetConfirmUrl();
    boolean that_present_confirmUrl = true && that.isSetConfirmUrl();
    if (this_present_confirmUrl || that_present_confirmUrl) {
      if (!(this_present_confirmUrl && that_present_confirmUrl))
        return false;
      if (!this.confirmUrl.equals(that.confirmUrl))
        return false;
    }

    boolean this_present_extras = true && this.isSetExtras();
    boolean that_present_extras = true && that.isSetExtras();
    if (this_present_extras || that_present_extras) {
      if (!(this_present_extras && that_present_extras))
        return false;
      if (!this.extras.equals(that.extras))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetOrderId()) ? 131071 : 524287);
    if (isSetOrderId())
      hashCode = hashCode * 8191 + orderId.hashCode();

    hashCode = hashCode * 8191 + ((isSetConfirmUrl()) ? 131071 : 524287);
    if (isSetConfirmUrl())
      hashCode = hashCode * 8191 + confirmUrl.hashCode();

    hashCode = hashCode * 8191 + ((isSetExtras()) ? 131071 : 524287);
    if (isSetExtras())
      hashCode = hashCode * 8191 + extras.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(PaymentReservationResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetConfirmUrl()).compareTo(other.isSetConfirmUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConfirmUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.confirmUrl, other.confirmUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExtras()).compareTo(other.isSetExtras());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtras()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extras, other.extras);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("PaymentReservationResult(");
    boolean first = true;

    sb.append("orderId:");
    if (this.orderId == null) {
      sb.append("null");
    } else {
      sb.append(this.orderId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("confirmUrl:");
    if (this.confirmUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.confirmUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extras:");
    if (this.extras == null) {
      sb.append("null");
    } else {
      sb.append(this.extras);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PaymentReservationResultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PaymentReservationResultStandardScheme getScheme() {
      return new PaymentReservationResultStandardScheme();
    }
  }

  private static class PaymentReservationResultStandardScheme extends org.apache.thrift.scheme.StandardScheme<PaymentReservationResult> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PaymentReservationResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderId = iprot.readString();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CONFIRM_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.confirmUrl = iprot.readString();
              struct.setConfirmUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // EXTRAS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map376 = iprot.readMapBegin();
                struct.extras = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map376.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key377;
                @org.apache.thrift.annotation.Nullable java.lang.String _val378;
                for (int _i379 = 0; _i379 < _map376.size; ++_i379)
                {
                  _key377 = iprot.readString();
                  _val378 = iprot.readString();
                  struct.extras.put(_key377, _val378);
                }
                iprot.readMapEnd();
              }
              struct.setExtrasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PaymentReservationResult struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orderId != null) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeString(struct.orderId);
        oprot.writeFieldEnd();
      }
      if (struct.confirmUrl != null) {
        oprot.writeFieldBegin(CONFIRM_URL_FIELD_DESC);
        oprot.writeString(struct.confirmUrl);
        oprot.writeFieldEnd();
      }
      if (struct.extras != null) {
        oprot.writeFieldBegin(EXTRAS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.extras.size()));
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter380 : struct.extras.entrySet())
          {
            oprot.writeString(_iter380.getKey());
            oprot.writeString(_iter380.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PaymentReservationResultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PaymentReservationResultTupleScheme getScheme() {
      return new PaymentReservationResultTupleScheme();
    }
  }

  private static class PaymentReservationResultTupleScheme extends org.apache.thrift.scheme.TupleScheme<PaymentReservationResult> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PaymentReservationResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetOrderId()) {
        optionals.set(0);
      }
      if (struct.isSetConfirmUrl()) {
        optionals.set(1);
      }
      if (struct.isSetExtras()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetOrderId()) {
        oprot.writeString(struct.orderId);
      }
      if (struct.isSetConfirmUrl()) {
        oprot.writeString(struct.confirmUrl);
      }
      if (struct.isSetExtras()) {
        {
          oprot.writeI32(struct.extras.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter381 : struct.extras.entrySet())
          {
            oprot.writeString(_iter381.getKey());
            oprot.writeString(_iter381.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PaymentReservationResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.orderId = iprot.readString();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.confirmUrl = iprot.readString();
        struct.setConfirmUrlIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TMap _map382 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.extras = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map382.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key383;
          @org.apache.thrift.annotation.Nullable java.lang.String _val384;
          for (int _i385 = 0; _i385 < _map382.size; ++_i385)
          {
            _key383 = iprot.readString();
            _val384 = iprot.readString();
            struct.extras.put(_key383, _val384);
          }
        }
        struct.setExtrasIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

