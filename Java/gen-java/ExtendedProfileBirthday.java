/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.0)", date = "2020-03-23")
public class ExtendedProfileBirthday implements org.apache.thrift.TBase<ExtendedProfileBirthday, ExtendedProfileBirthday._Fields>, java.io.Serializable, Cloneable, Comparable<ExtendedProfileBirthday> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ExtendedProfileBirthday");

  private static final org.apache.thrift.protocol.TField YEAR_FIELD_DESC = new org.apache.thrift.protocol.TField("year", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField YEAR_PRIVACY_LEVEL_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("yearPrivacyLevelType", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField YEAR_ENABLED_FIELD_DESC = new org.apache.thrift.protocol.TField("yearEnabled", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField DAY_FIELD_DESC = new org.apache.thrift.protocol.TField("day", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField DAY_PRIVACY_LEVEL_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("dayPrivacyLevelType", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField DAY_ENABLED_FIELD_DESC = new org.apache.thrift.protocol.TField("dayEnabled", org.apache.thrift.protocol.TType.BOOL, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ExtendedProfileBirthdayStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ExtendedProfileBirthdayTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String year; // required
  /**
   * 
   * @see PrivacyLevelType
   */
  public @org.apache.thrift.annotation.Nullable PrivacyLevelType yearPrivacyLevelType; // required
  public boolean yearEnabled; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String day; // required
  /**
   * 
   * @see PrivacyLevelType
   */
  public @org.apache.thrift.annotation.Nullable PrivacyLevelType dayPrivacyLevelType; // required
  public boolean dayEnabled; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    YEAR((short)1, "year"),
    /**
     * 
     * @see PrivacyLevelType
     */
    YEAR_PRIVACY_LEVEL_TYPE((short)2, "yearPrivacyLevelType"),
    YEAR_ENABLED((short)3, "yearEnabled"),
    DAY((short)5, "day"),
    /**
     * 
     * @see PrivacyLevelType
     */
    DAY_PRIVACY_LEVEL_TYPE((short)6, "dayPrivacyLevelType"),
    DAY_ENABLED((short)7, "dayEnabled");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // YEAR
          return YEAR;
        case 2: // YEAR_PRIVACY_LEVEL_TYPE
          return YEAR_PRIVACY_LEVEL_TYPE;
        case 3: // YEAR_ENABLED
          return YEAR_ENABLED;
        case 5: // DAY
          return DAY;
        case 6: // DAY_PRIVACY_LEVEL_TYPE
          return DAY_PRIVACY_LEVEL_TYPE;
        case 7: // DAY_ENABLED
          return DAY_ENABLED;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __YEARENABLED_ISSET_ID = 0;
  private static final int __DAYENABLED_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.YEAR, new org.apache.thrift.meta_data.FieldMetaData("year", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.YEAR_PRIVACY_LEVEL_TYPE, new org.apache.thrift.meta_data.FieldMetaData("yearPrivacyLevelType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, PrivacyLevelType.class)));
    tmpMap.put(_Fields.YEAR_ENABLED, new org.apache.thrift.meta_data.FieldMetaData("yearEnabled", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DAY, new org.apache.thrift.meta_data.FieldMetaData("day", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DAY_PRIVACY_LEVEL_TYPE, new org.apache.thrift.meta_data.FieldMetaData("dayPrivacyLevelType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, PrivacyLevelType.class)));
    tmpMap.put(_Fields.DAY_ENABLED, new org.apache.thrift.meta_data.FieldMetaData("dayEnabled", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ExtendedProfileBirthday.class, metaDataMap);
  }

  public ExtendedProfileBirthday() {
  }

  public ExtendedProfileBirthday(
    java.lang.String year,
    PrivacyLevelType yearPrivacyLevelType,
    boolean yearEnabled,
    java.lang.String day,
    PrivacyLevelType dayPrivacyLevelType,
    boolean dayEnabled)
  {
    this();
    this.year = year;
    this.yearPrivacyLevelType = yearPrivacyLevelType;
    this.yearEnabled = yearEnabled;
    setYearEnabledIsSet(true);
    this.day = day;
    this.dayPrivacyLevelType = dayPrivacyLevelType;
    this.dayEnabled = dayEnabled;
    setDayEnabledIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ExtendedProfileBirthday(ExtendedProfileBirthday other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetYear()) {
      this.year = other.year;
    }
    if (other.isSetYearPrivacyLevelType()) {
      this.yearPrivacyLevelType = other.yearPrivacyLevelType;
    }
    this.yearEnabled = other.yearEnabled;
    if (other.isSetDay()) {
      this.day = other.day;
    }
    if (other.isSetDayPrivacyLevelType()) {
      this.dayPrivacyLevelType = other.dayPrivacyLevelType;
    }
    this.dayEnabled = other.dayEnabled;
  }

  public ExtendedProfileBirthday deepCopy() {
    return new ExtendedProfileBirthday(this);
  }

  @Override
  public void clear() {
    this.year = null;
    this.yearPrivacyLevelType = null;
    setYearEnabledIsSet(false);
    this.yearEnabled = false;
    this.day = null;
    this.dayPrivacyLevelType = null;
    setDayEnabledIsSet(false);
    this.dayEnabled = false;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getYear() {
    return this.year;
  }

  public ExtendedProfileBirthday setYear(@org.apache.thrift.annotation.Nullable java.lang.String year) {
    this.year = year;
    return this;
  }

  public void unsetYear() {
    this.year = null;
  }

  /** Returns true if field year is set (has been assigned a value) and false otherwise */
  public boolean isSetYear() {
    return this.year != null;
  }

  public void setYearIsSet(boolean value) {
    if (!value) {
      this.year = null;
    }
  }

  /**
   * 
   * @see PrivacyLevelType
   */
  @org.apache.thrift.annotation.Nullable
  public PrivacyLevelType getYearPrivacyLevelType() {
    return this.yearPrivacyLevelType;
  }

  /**
   * 
   * @see PrivacyLevelType
   */
  public ExtendedProfileBirthday setYearPrivacyLevelType(@org.apache.thrift.annotation.Nullable PrivacyLevelType yearPrivacyLevelType) {
    this.yearPrivacyLevelType = yearPrivacyLevelType;
    return this;
  }

  public void unsetYearPrivacyLevelType() {
    this.yearPrivacyLevelType = null;
  }

  /** Returns true if field yearPrivacyLevelType is set (has been assigned a value) and false otherwise */
  public boolean isSetYearPrivacyLevelType() {
    return this.yearPrivacyLevelType != null;
  }

  public void setYearPrivacyLevelTypeIsSet(boolean value) {
    if (!value) {
      this.yearPrivacyLevelType = null;
    }
  }

  public boolean isYearEnabled() {
    return this.yearEnabled;
  }

  public ExtendedProfileBirthday setYearEnabled(boolean yearEnabled) {
    this.yearEnabled = yearEnabled;
    setYearEnabledIsSet(true);
    return this;
  }

  public void unsetYearEnabled() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __YEARENABLED_ISSET_ID);
  }

  /** Returns true if field yearEnabled is set (has been assigned a value) and false otherwise */
  public boolean isSetYearEnabled() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __YEARENABLED_ISSET_ID);
  }

  public void setYearEnabledIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __YEARENABLED_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDay() {
    return this.day;
  }

  public ExtendedProfileBirthday setDay(@org.apache.thrift.annotation.Nullable java.lang.String day) {
    this.day = day;
    return this;
  }

  public void unsetDay() {
    this.day = null;
  }

  /** Returns true if field day is set (has been assigned a value) and false otherwise */
  public boolean isSetDay() {
    return this.day != null;
  }

  public void setDayIsSet(boolean value) {
    if (!value) {
      this.day = null;
    }
  }

  /**
   * 
   * @see PrivacyLevelType
   */
  @org.apache.thrift.annotation.Nullable
  public PrivacyLevelType getDayPrivacyLevelType() {
    return this.dayPrivacyLevelType;
  }

  /**
   * 
   * @see PrivacyLevelType
   */
  public ExtendedProfileBirthday setDayPrivacyLevelType(@org.apache.thrift.annotation.Nullable PrivacyLevelType dayPrivacyLevelType) {
    this.dayPrivacyLevelType = dayPrivacyLevelType;
    return this;
  }

  public void unsetDayPrivacyLevelType() {
    this.dayPrivacyLevelType = null;
  }

  /** Returns true if field dayPrivacyLevelType is set (has been assigned a value) and false otherwise */
  public boolean isSetDayPrivacyLevelType() {
    return this.dayPrivacyLevelType != null;
  }

  public void setDayPrivacyLevelTypeIsSet(boolean value) {
    if (!value) {
      this.dayPrivacyLevelType = null;
    }
  }

  public boolean isDayEnabled() {
    return this.dayEnabled;
  }

  public ExtendedProfileBirthday setDayEnabled(boolean dayEnabled) {
    this.dayEnabled = dayEnabled;
    setDayEnabledIsSet(true);
    return this;
  }

  public void unsetDayEnabled() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DAYENABLED_ISSET_ID);
  }

  /** Returns true if field dayEnabled is set (has been assigned a value) and false otherwise */
  public boolean isSetDayEnabled() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DAYENABLED_ISSET_ID);
  }

  public void setDayEnabledIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DAYENABLED_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case YEAR:
      if (value == null) {
        unsetYear();
      } else {
        setYear((java.lang.String)value);
      }
      break;

    case YEAR_PRIVACY_LEVEL_TYPE:
      if (value == null) {
        unsetYearPrivacyLevelType();
      } else {
        setYearPrivacyLevelType((PrivacyLevelType)value);
      }
      break;

    case YEAR_ENABLED:
      if (value == null) {
        unsetYearEnabled();
      } else {
        setYearEnabled((java.lang.Boolean)value);
      }
      break;

    case DAY:
      if (value == null) {
        unsetDay();
      } else {
        setDay((java.lang.String)value);
      }
      break;

    case DAY_PRIVACY_LEVEL_TYPE:
      if (value == null) {
        unsetDayPrivacyLevelType();
      } else {
        setDayPrivacyLevelType((PrivacyLevelType)value);
      }
      break;

    case DAY_ENABLED:
      if (value == null) {
        unsetDayEnabled();
      } else {
        setDayEnabled((java.lang.Boolean)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case YEAR:
      return getYear();

    case YEAR_PRIVACY_LEVEL_TYPE:
      return getYearPrivacyLevelType();

    case YEAR_ENABLED:
      return isYearEnabled();

    case DAY:
      return getDay();

    case DAY_PRIVACY_LEVEL_TYPE:
      return getDayPrivacyLevelType();

    case DAY_ENABLED:
      return isDayEnabled();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case YEAR:
      return isSetYear();
    case YEAR_PRIVACY_LEVEL_TYPE:
      return isSetYearPrivacyLevelType();
    case YEAR_ENABLED:
      return isSetYearEnabled();
    case DAY:
      return isSetDay();
    case DAY_PRIVACY_LEVEL_TYPE:
      return isSetDayPrivacyLevelType();
    case DAY_ENABLED:
      return isSetDayEnabled();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof ExtendedProfileBirthday)
      return this.equals((ExtendedProfileBirthday)that);
    return false;
  }

  public boolean equals(ExtendedProfileBirthday that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_year = true && this.isSetYear();
    boolean that_present_year = true && that.isSetYear();
    if (this_present_year || that_present_year) {
      if (!(this_present_year && that_present_year))
        return false;
      if (!this.year.equals(that.year))
        return false;
    }

    boolean this_present_yearPrivacyLevelType = true && this.isSetYearPrivacyLevelType();
    boolean that_present_yearPrivacyLevelType = true && that.isSetYearPrivacyLevelType();
    if (this_present_yearPrivacyLevelType || that_present_yearPrivacyLevelType) {
      if (!(this_present_yearPrivacyLevelType && that_present_yearPrivacyLevelType))
        return false;
      if (!this.yearPrivacyLevelType.equals(that.yearPrivacyLevelType))
        return false;
    }

    boolean this_present_yearEnabled = true;
    boolean that_present_yearEnabled = true;
    if (this_present_yearEnabled || that_present_yearEnabled) {
      if (!(this_present_yearEnabled && that_present_yearEnabled))
        return false;
      if (this.yearEnabled != that.yearEnabled)
        return false;
    }

    boolean this_present_day = true && this.isSetDay();
    boolean that_present_day = true && that.isSetDay();
    if (this_present_day || that_present_day) {
      if (!(this_present_day && that_present_day))
        return false;
      if (!this.day.equals(that.day))
        return false;
    }

    boolean this_present_dayPrivacyLevelType = true && this.isSetDayPrivacyLevelType();
    boolean that_present_dayPrivacyLevelType = true && that.isSetDayPrivacyLevelType();
    if (this_present_dayPrivacyLevelType || that_present_dayPrivacyLevelType) {
      if (!(this_present_dayPrivacyLevelType && that_present_dayPrivacyLevelType))
        return false;
      if (!this.dayPrivacyLevelType.equals(that.dayPrivacyLevelType))
        return false;
    }

    boolean this_present_dayEnabled = true;
    boolean that_present_dayEnabled = true;
    if (this_present_dayEnabled || that_present_dayEnabled) {
      if (!(this_present_dayEnabled && that_present_dayEnabled))
        return false;
      if (this.dayEnabled != that.dayEnabled)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetYear()) ? 131071 : 524287);
    if (isSetYear())
      hashCode = hashCode * 8191 + year.hashCode();

    hashCode = hashCode * 8191 + ((isSetYearPrivacyLevelType()) ? 131071 : 524287);
    if (isSetYearPrivacyLevelType())
      hashCode = hashCode * 8191 + yearPrivacyLevelType.getValue();

    hashCode = hashCode * 8191 + ((yearEnabled) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetDay()) ? 131071 : 524287);
    if (isSetDay())
      hashCode = hashCode * 8191 + day.hashCode();

    hashCode = hashCode * 8191 + ((isSetDayPrivacyLevelType()) ? 131071 : 524287);
    if (isSetDayPrivacyLevelType())
      hashCode = hashCode * 8191 + dayPrivacyLevelType.getValue();

    hashCode = hashCode * 8191 + ((dayEnabled) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(ExtendedProfileBirthday other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetYear(), other.isSetYear());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYear()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.year, other.year);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetYearPrivacyLevelType(), other.isSetYearPrivacyLevelType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYearPrivacyLevelType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.yearPrivacyLevelType, other.yearPrivacyLevelType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetYearEnabled(), other.isSetYearEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYearEnabled()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.yearEnabled, other.yearEnabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDay(), other.isSetDay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.day, other.day);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDayPrivacyLevelType(), other.isSetDayPrivacyLevelType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDayPrivacyLevelType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dayPrivacyLevelType, other.dayPrivacyLevelType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDayEnabled(), other.isSetDayEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDayEnabled()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dayEnabled, other.dayEnabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ExtendedProfileBirthday(");
    boolean first = true;

    sb.append("year:");
    if (this.year == null) {
      sb.append("null");
    } else {
      sb.append(this.year);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("yearPrivacyLevelType:");
    if (this.yearPrivacyLevelType == null) {
      sb.append("null");
    } else {
      sb.append(this.yearPrivacyLevelType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("yearEnabled:");
    sb.append(this.yearEnabled);
    first = false;
    if (!first) sb.append(", ");
    sb.append("day:");
    if (this.day == null) {
      sb.append("null");
    } else {
      sb.append(this.day);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dayPrivacyLevelType:");
    if (this.dayPrivacyLevelType == null) {
      sb.append("null");
    } else {
      sb.append(this.dayPrivacyLevelType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dayEnabled:");
    sb.append(this.dayEnabled);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ExtendedProfileBirthdayStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ExtendedProfileBirthdayStandardScheme getScheme() {
      return new ExtendedProfileBirthdayStandardScheme();
    }
  }

  private static class ExtendedProfileBirthdayStandardScheme extends org.apache.thrift.scheme.StandardScheme<ExtendedProfileBirthday> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ExtendedProfileBirthday struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // YEAR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.year = iprot.readString();
              struct.setYearIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // YEAR_PRIVACY_LEVEL_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.yearPrivacyLevelType = PrivacyLevelType.findByValue(iprot.readI32());
              struct.setYearPrivacyLevelTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // YEAR_ENABLED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.yearEnabled = iprot.readBool();
              struct.setYearEnabledIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DAY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.day = iprot.readString();
              struct.setDayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DAY_PRIVACY_LEVEL_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.dayPrivacyLevelType = PrivacyLevelType.findByValue(iprot.readI32());
              struct.setDayPrivacyLevelTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DAY_ENABLED
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.dayEnabled = iprot.readBool();
              struct.setDayEnabledIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ExtendedProfileBirthday struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.year != null) {
        oprot.writeFieldBegin(YEAR_FIELD_DESC);
        oprot.writeString(struct.year);
        oprot.writeFieldEnd();
      }
      if (struct.yearPrivacyLevelType != null) {
        oprot.writeFieldBegin(YEAR_PRIVACY_LEVEL_TYPE_FIELD_DESC);
        oprot.writeI32(struct.yearPrivacyLevelType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(YEAR_ENABLED_FIELD_DESC);
      oprot.writeBool(struct.yearEnabled);
      oprot.writeFieldEnd();
      if (struct.day != null) {
        oprot.writeFieldBegin(DAY_FIELD_DESC);
        oprot.writeString(struct.day);
        oprot.writeFieldEnd();
      }
      if (struct.dayPrivacyLevelType != null) {
        oprot.writeFieldBegin(DAY_PRIVACY_LEVEL_TYPE_FIELD_DESC);
        oprot.writeI32(struct.dayPrivacyLevelType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DAY_ENABLED_FIELD_DESC);
      oprot.writeBool(struct.dayEnabled);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ExtendedProfileBirthdayTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ExtendedProfileBirthdayTupleScheme getScheme() {
      return new ExtendedProfileBirthdayTupleScheme();
    }
  }

  private static class ExtendedProfileBirthdayTupleScheme extends org.apache.thrift.scheme.TupleScheme<ExtendedProfileBirthday> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ExtendedProfileBirthday struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetYear()) {
        optionals.set(0);
      }
      if (struct.isSetYearPrivacyLevelType()) {
        optionals.set(1);
      }
      if (struct.isSetYearEnabled()) {
        optionals.set(2);
      }
      if (struct.isSetDay()) {
        optionals.set(3);
      }
      if (struct.isSetDayPrivacyLevelType()) {
        optionals.set(4);
      }
      if (struct.isSetDayEnabled()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetYear()) {
        oprot.writeString(struct.year);
      }
      if (struct.isSetYearPrivacyLevelType()) {
        oprot.writeI32(struct.yearPrivacyLevelType.getValue());
      }
      if (struct.isSetYearEnabled()) {
        oprot.writeBool(struct.yearEnabled);
      }
      if (struct.isSetDay()) {
        oprot.writeString(struct.day);
      }
      if (struct.isSetDayPrivacyLevelType()) {
        oprot.writeI32(struct.dayPrivacyLevelType.getValue());
      }
      if (struct.isSetDayEnabled()) {
        oprot.writeBool(struct.dayEnabled);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ExtendedProfileBirthday struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.year = iprot.readString();
        struct.setYearIsSet(true);
      }
      if (incoming.get(1)) {
        struct.yearPrivacyLevelType = PrivacyLevelType.findByValue(iprot.readI32());
        struct.setYearPrivacyLevelTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.yearEnabled = iprot.readBool();
        struct.setYearEnabledIsSet(true);
      }
      if (incoming.get(3)) {
        struct.day = iprot.readString();
        struct.setDayIsSet(true);
      }
      if (incoming.get(4)) {
        struct.dayPrivacyLevelType = PrivacyLevelType.findByValue(iprot.readI32());
        struct.setDayPrivacyLevelTypeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.dayEnabled = iprot.readBool();
        struct.setDayEnabledIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

