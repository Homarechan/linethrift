/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.0)", date = "2020-03-23")
public class SquareAuthority implements org.apache.thrift.TBase<SquareAuthority, SquareAuthority._Fields>, java.io.Serializable, Cloneable, Comparable<SquareAuthority> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SquareAuthority");

  private static final org.apache.thrift.protocol.TField SQUARE_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("squareMid", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField UPDATE_SQUARE_PROFILE_FIELD_DESC = new org.apache.thrift.protocol.TField("updateSquareProfile", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField INVITE_NEW_MEMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("inviteNewMember", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField APPROVE_JOIN_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("approveJoinRequest", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_POST_FIELD_DESC = new org.apache.thrift.protocol.TField("createPost", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField CREATE_OPEN_SQUARE_CHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("createOpenSquareChat", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField DELETE_SQUARE_CHAT_OR_POST_FIELD_DESC = new org.apache.thrift.protocol.TField("deleteSquareChatOrPost", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField REMOVE_SQUARE_MEMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("removeSquareMember", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField GRANT_ROLE_FIELD_DESC = new org.apache.thrift.protocol.TField("grantRole", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField ENABLE_INVITATION_TICKET_FIELD_DESC = new org.apache.thrift.protocol.TField("enableInvitationTicket", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField REVISION_FIELD_DESC = new org.apache.thrift.protocol.TField("revision", org.apache.thrift.protocol.TType.I64, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SquareAuthorityStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SquareAuthorityTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String squareMid; // required
  /**
   * 
   * @see SquareMemberRole
   */
  public @org.apache.thrift.annotation.Nullable SquareMemberRole updateSquareProfile; // required
  /**
   * 
   * @see SquareMemberRole
   */
  public @org.apache.thrift.annotation.Nullable SquareMemberRole inviteNewMember; // required
  /**
   * 
   * @see SquareMemberRole
   */
  public @org.apache.thrift.annotation.Nullable SquareMemberRole approveJoinRequest; // required
  /**
   * 
   * @see SquareMemberRole
   */
  public @org.apache.thrift.annotation.Nullable SquareMemberRole createPost; // required
  /**
   * 
   * @see SquareMemberRole
   */
  public @org.apache.thrift.annotation.Nullable SquareMemberRole createOpenSquareChat; // required
  /**
   * 
   * @see SquareMemberRole
   */
  public @org.apache.thrift.annotation.Nullable SquareMemberRole deleteSquareChatOrPost; // required
  /**
   * 
   * @see SquareMemberRole
   */
  public @org.apache.thrift.annotation.Nullable SquareMemberRole removeSquareMember; // required
  /**
   * 
   * @see SquareMemberRole
   */
  public @org.apache.thrift.annotation.Nullable SquareMemberRole grantRole; // required
  /**
   * 
   * @see SquareMemberRole
   */
  public @org.apache.thrift.annotation.Nullable SquareMemberRole enableInvitationTicket; // required
  public long revision; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SQUARE_MID((short)1, "squareMid"),
    /**
     * 
     * @see SquareMemberRole
     */
    UPDATE_SQUARE_PROFILE((short)2, "updateSquareProfile"),
    /**
     * 
     * @see SquareMemberRole
     */
    INVITE_NEW_MEMBER((short)3, "inviteNewMember"),
    /**
     * 
     * @see SquareMemberRole
     */
    APPROVE_JOIN_REQUEST((short)4, "approveJoinRequest"),
    /**
     * 
     * @see SquareMemberRole
     */
    CREATE_POST((short)5, "createPost"),
    /**
     * 
     * @see SquareMemberRole
     */
    CREATE_OPEN_SQUARE_CHAT((short)6, "createOpenSquareChat"),
    /**
     * 
     * @see SquareMemberRole
     */
    DELETE_SQUARE_CHAT_OR_POST((short)7, "deleteSquareChatOrPost"),
    /**
     * 
     * @see SquareMemberRole
     */
    REMOVE_SQUARE_MEMBER((short)8, "removeSquareMember"),
    /**
     * 
     * @see SquareMemberRole
     */
    GRANT_ROLE((short)9, "grantRole"),
    /**
     * 
     * @see SquareMemberRole
     */
    ENABLE_INVITATION_TICKET((short)10, "enableInvitationTicket"),
    REVISION((short)11, "revision");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SQUARE_MID
          return SQUARE_MID;
        case 2: // UPDATE_SQUARE_PROFILE
          return UPDATE_SQUARE_PROFILE;
        case 3: // INVITE_NEW_MEMBER
          return INVITE_NEW_MEMBER;
        case 4: // APPROVE_JOIN_REQUEST
          return APPROVE_JOIN_REQUEST;
        case 5: // CREATE_POST
          return CREATE_POST;
        case 6: // CREATE_OPEN_SQUARE_CHAT
          return CREATE_OPEN_SQUARE_CHAT;
        case 7: // DELETE_SQUARE_CHAT_OR_POST
          return DELETE_SQUARE_CHAT_OR_POST;
        case 8: // REMOVE_SQUARE_MEMBER
          return REMOVE_SQUARE_MEMBER;
        case 9: // GRANT_ROLE
          return GRANT_ROLE;
        case 10: // ENABLE_INVITATION_TICKET
          return ENABLE_INVITATION_TICKET;
        case 11: // REVISION
          return REVISION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __REVISION_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SQUARE_MID, new org.apache.thrift.meta_data.FieldMetaData("squareMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_SQUARE_PROFILE, new org.apache.thrift.meta_data.FieldMetaData("updateSquareProfile", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class)));
    tmpMap.put(_Fields.INVITE_NEW_MEMBER, new org.apache.thrift.meta_data.FieldMetaData("inviteNewMember", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class)));
    tmpMap.put(_Fields.APPROVE_JOIN_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("approveJoinRequest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class)));
    tmpMap.put(_Fields.CREATE_POST, new org.apache.thrift.meta_data.FieldMetaData("createPost", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class)));
    tmpMap.put(_Fields.CREATE_OPEN_SQUARE_CHAT, new org.apache.thrift.meta_data.FieldMetaData("createOpenSquareChat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class)));
    tmpMap.put(_Fields.DELETE_SQUARE_CHAT_OR_POST, new org.apache.thrift.meta_data.FieldMetaData("deleteSquareChatOrPost", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class)));
    tmpMap.put(_Fields.REMOVE_SQUARE_MEMBER, new org.apache.thrift.meta_data.FieldMetaData("removeSquareMember", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class)));
    tmpMap.put(_Fields.GRANT_ROLE, new org.apache.thrift.meta_data.FieldMetaData("grantRole", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class)));
    tmpMap.put(_Fields.ENABLE_INVITATION_TICKET, new org.apache.thrift.meta_data.FieldMetaData("enableInvitationTicket", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class)));
    tmpMap.put(_Fields.REVISION, new org.apache.thrift.meta_data.FieldMetaData("revision", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SquareAuthority.class, metaDataMap);
  }

  public SquareAuthority() {
  }

  public SquareAuthority(
    java.lang.String squareMid,
    SquareMemberRole updateSquareProfile,
    SquareMemberRole inviteNewMember,
    SquareMemberRole approveJoinRequest,
    SquareMemberRole createPost,
    SquareMemberRole createOpenSquareChat,
    SquareMemberRole deleteSquareChatOrPost,
    SquareMemberRole removeSquareMember,
    SquareMemberRole grantRole,
    SquareMemberRole enableInvitationTicket,
    long revision)
  {
    this();
    this.squareMid = squareMid;
    this.updateSquareProfile = updateSquareProfile;
    this.inviteNewMember = inviteNewMember;
    this.approveJoinRequest = approveJoinRequest;
    this.createPost = createPost;
    this.createOpenSquareChat = createOpenSquareChat;
    this.deleteSquareChatOrPost = deleteSquareChatOrPost;
    this.removeSquareMember = removeSquareMember;
    this.grantRole = grantRole;
    this.enableInvitationTicket = enableInvitationTicket;
    this.revision = revision;
    setRevisionIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SquareAuthority(SquareAuthority other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetSquareMid()) {
      this.squareMid = other.squareMid;
    }
    if (other.isSetUpdateSquareProfile()) {
      this.updateSquareProfile = other.updateSquareProfile;
    }
    if (other.isSetInviteNewMember()) {
      this.inviteNewMember = other.inviteNewMember;
    }
    if (other.isSetApproveJoinRequest()) {
      this.approveJoinRequest = other.approveJoinRequest;
    }
    if (other.isSetCreatePost()) {
      this.createPost = other.createPost;
    }
    if (other.isSetCreateOpenSquareChat()) {
      this.createOpenSquareChat = other.createOpenSquareChat;
    }
    if (other.isSetDeleteSquareChatOrPost()) {
      this.deleteSquareChatOrPost = other.deleteSquareChatOrPost;
    }
    if (other.isSetRemoveSquareMember()) {
      this.removeSquareMember = other.removeSquareMember;
    }
    if (other.isSetGrantRole()) {
      this.grantRole = other.grantRole;
    }
    if (other.isSetEnableInvitationTicket()) {
      this.enableInvitationTicket = other.enableInvitationTicket;
    }
    this.revision = other.revision;
  }

  public SquareAuthority deepCopy() {
    return new SquareAuthority(this);
  }

  @Override
  public void clear() {
    this.squareMid = null;
    this.updateSquareProfile = null;
    this.inviteNewMember = null;
    this.approveJoinRequest = null;
    this.createPost = null;
    this.createOpenSquareChat = null;
    this.deleteSquareChatOrPost = null;
    this.removeSquareMember = null;
    this.grantRole = null;
    this.enableInvitationTicket = null;
    setRevisionIsSet(false);
    this.revision = 0;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSquareMid() {
    return this.squareMid;
  }

  public SquareAuthority setSquareMid(@org.apache.thrift.annotation.Nullable java.lang.String squareMid) {
    this.squareMid = squareMid;
    return this;
  }

  public void unsetSquareMid() {
    this.squareMid = null;
  }

  /** Returns true if field squareMid is set (has been assigned a value) and false otherwise */
  public boolean isSetSquareMid() {
    return this.squareMid != null;
  }

  public void setSquareMidIsSet(boolean value) {
    if (!value) {
      this.squareMid = null;
    }
  }

  /**
   * 
   * @see SquareMemberRole
   */
  @org.apache.thrift.annotation.Nullable
  public SquareMemberRole getUpdateSquareProfile() {
    return this.updateSquareProfile;
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareAuthority setUpdateSquareProfile(@org.apache.thrift.annotation.Nullable SquareMemberRole updateSquareProfile) {
    this.updateSquareProfile = updateSquareProfile;
    return this;
  }

  public void unsetUpdateSquareProfile() {
    this.updateSquareProfile = null;
  }

  /** Returns true if field updateSquareProfile is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateSquareProfile() {
    return this.updateSquareProfile != null;
  }

  public void setUpdateSquareProfileIsSet(boolean value) {
    if (!value) {
      this.updateSquareProfile = null;
    }
  }

  /**
   * 
   * @see SquareMemberRole
   */
  @org.apache.thrift.annotation.Nullable
  public SquareMemberRole getInviteNewMember() {
    return this.inviteNewMember;
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareAuthority setInviteNewMember(@org.apache.thrift.annotation.Nullable SquareMemberRole inviteNewMember) {
    this.inviteNewMember = inviteNewMember;
    return this;
  }

  public void unsetInviteNewMember() {
    this.inviteNewMember = null;
  }

  /** Returns true if field inviteNewMember is set (has been assigned a value) and false otherwise */
  public boolean isSetInviteNewMember() {
    return this.inviteNewMember != null;
  }

  public void setInviteNewMemberIsSet(boolean value) {
    if (!value) {
      this.inviteNewMember = null;
    }
  }

  /**
   * 
   * @see SquareMemberRole
   */
  @org.apache.thrift.annotation.Nullable
  public SquareMemberRole getApproveJoinRequest() {
    return this.approveJoinRequest;
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareAuthority setApproveJoinRequest(@org.apache.thrift.annotation.Nullable SquareMemberRole approveJoinRequest) {
    this.approveJoinRequest = approveJoinRequest;
    return this;
  }

  public void unsetApproveJoinRequest() {
    this.approveJoinRequest = null;
  }

  /** Returns true if field approveJoinRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetApproveJoinRequest() {
    return this.approveJoinRequest != null;
  }

  public void setApproveJoinRequestIsSet(boolean value) {
    if (!value) {
      this.approveJoinRequest = null;
    }
  }

  /**
   * 
   * @see SquareMemberRole
   */
  @org.apache.thrift.annotation.Nullable
  public SquareMemberRole getCreatePost() {
    return this.createPost;
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareAuthority setCreatePost(@org.apache.thrift.annotation.Nullable SquareMemberRole createPost) {
    this.createPost = createPost;
    return this;
  }

  public void unsetCreatePost() {
    this.createPost = null;
  }

  /** Returns true if field createPost is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatePost() {
    return this.createPost != null;
  }

  public void setCreatePostIsSet(boolean value) {
    if (!value) {
      this.createPost = null;
    }
  }

  /**
   * 
   * @see SquareMemberRole
   */
  @org.apache.thrift.annotation.Nullable
  public SquareMemberRole getCreateOpenSquareChat() {
    return this.createOpenSquareChat;
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareAuthority setCreateOpenSquareChat(@org.apache.thrift.annotation.Nullable SquareMemberRole createOpenSquareChat) {
    this.createOpenSquareChat = createOpenSquareChat;
    return this;
  }

  public void unsetCreateOpenSquareChat() {
    this.createOpenSquareChat = null;
  }

  /** Returns true if field createOpenSquareChat is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateOpenSquareChat() {
    return this.createOpenSquareChat != null;
  }

  public void setCreateOpenSquareChatIsSet(boolean value) {
    if (!value) {
      this.createOpenSquareChat = null;
    }
  }

  /**
   * 
   * @see SquareMemberRole
   */
  @org.apache.thrift.annotation.Nullable
  public SquareMemberRole getDeleteSquareChatOrPost() {
    return this.deleteSquareChatOrPost;
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareAuthority setDeleteSquareChatOrPost(@org.apache.thrift.annotation.Nullable SquareMemberRole deleteSquareChatOrPost) {
    this.deleteSquareChatOrPost = deleteSquareChatOrPost;
    return this;
  }

  public void unsetDeleteSquareChatOrPost() {
    this.deleteSquareChatOrPost = null;
  }

  /** Returns true if field deleteSquareChatOrPost is set (has been assigned a value) and false otherwise */
  public boolean isSetDeleteSquareChatOrPost() {
    return this.deleteSquareChatOrPost != null;
  }

  public void setDeleteSquareChatOrPostIsSet(boolean value) {
    if (!value) {
      this.deleteSquareChatOrPost = null;
    }
  }

  /**
   * 
   * @see SquareMemberRole
   */
  @org.apache.thrift.annotation.Nullable
  public SquareMemberRole getRemoveSquareMember() {
    return this.removeSquareMember;
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareAuthority setRemoveSquareMember(@org.apache.thrift.annotation.Nullable SquareMemberRole removeSquareMember) {
    this.removeSquareMember = removeSquareMember;
    return this;
  }

  public void unsetRemoveSquareMember() {
    this.removeSquareMember = null;
  }

  /** Returns true if field removeSquareMember is set (has been assigned a value) and false otherwise */
  public boolean isSetRemoveSquareMember() {
    return this.removeSquareMember != null;
  }

  public void setRemoveSquareMemberIsSet(boolean value) {
    if (!value) {
      this.removeSquareMember = null;
    }
  }

  /**
   * 
   * @see SquareMemberRole
   */
  @org.apache.thrift.annotation.Nullable
  public SquareMemberRole getGrantRole() {
    return this.grantRole;
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareAuthority setGrantRole(@org.apache.thrift.annotation.Nullable SquareMemberRole grantRole) {
    this.grantRole = grantRole;
    return this;
  }

  public void unsetGrantRole() {
    this.grantRole = null;
  }

  /** Returns true if field grantRole is set (has been assigned a value) and false otherwise */
  public boolean isSetGrantRole() {
    return this.grantRole != null;
  }

  public void setGrantRoleIsSet(boolean value) {
    if (!value) {
      this.grantRole = null;
    }
  }

  /**
   * 
   * @see SquareMemberRole
   */
  @org.apache.thrift.annotation.Nullable
  public SquareMemberRole getEnableInvitationTicket() {
    return this.enableInvitationTicket;
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareAuthority setEnableInvitationTicket(@org.apache.thrift.annotation.Nullable SquareMemberRole enableInvitationTicket) {
    this.enableInvitationTicket = enableInvitationTicket;
    return this;
  }

  public void unsetEnableInvitationTicket() {
    this.enableInvitationTicket = null;
  }

  /** Returns true if field enableInvitationTicket is set (has been assigned a value) and false otherwise */
  public boolean isSetEnableInvitationTicket() {
    return this.enableInvitationTicket != null;
  }

  public void setEnableInvitationTicketIsSet(boolean value) {
    if (!value) {
      this.enableInvitationTicket = null;
    }
  }

  public long getRevision() {
    return this.revision;
  }

  public SquareAuthority setRevision(long revision) {
    this.revision = revision;
    setRevisionIsSet(true);
    return this;
  }

  public void unsetRevision() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REVISION_ISSET_ID);
  }

  /** Returns true if field revision is set (has been assigned a value) and false otherwise */
  public boolean isSetRevision() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REVISION_ISSET_ID);
  }

  public void setRevisionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REVISION_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SQUARE_MID:
      if (value == null) {
        unsetSquareMid();
      } else {
        setSquareMid((java.lang.String)value);
      }
      break;

    case UPDATE_SQUARE_PROFILE:
      if (value == null) {
        unsetUpdateSquareProfile();
      } else {
        setUpdateSquareProfile((SquareMemberRole)value);
      }
      break;

    case INVITE_NEW_MEMBER:
      if (value == null) {
        unsetInviteNewMember();
      } else {
        setInviteNewMember((SquareMemberRole)value);
      }
      break;

    case APPROVE_JOIN_REQUEST:
      if (value == null) {
        unsetApproveJoinRequest();
      } else {
        setApproveJoinRequest((SquareMemberRole)value);
      }
      break;

    case CREATE_POST:
      if (value == null) {
        unsetCreatePost();
      } else {
        setCreatePost((SquareMemberRole)value);
      }
      break;

    case CREATE_OPEN_SQUARE_CHAT:
      if (value == null) {
        unsetCreateOpenSquareChat();
      } else {
        setCreateOpenSquareChat((SquareMemberRole)value);
      }
      break;

    case DELETE_SQUARE_CHAT_OR_POST:
      if (value == null) {
        unsetDeleteSquareChatOrPost();
      } else {
        setDeleteSquareChatOrPost((SquareMemberRole)value);
      }
      break;

    case REMOVE_SQUARE_MEMBER:
      if (value == null) {
        unsetRemoveSquareMember();
      } else {
        setRemoveSquareMember((SquareMemberRole)value);
      }
      break;

    case GRANT_ROLE:
      if (value == null) {
        unsetGrantRole();
      } else {
        setGrantRole((SquareMemberRole)value);
      }
      break;

    case ENABLE_INVITATION_TICKET:
      if (value == null) {
        unsetEnableInvitationTicket();
      } else {
        setEnableInvitationTicket((SquareMemberRole)value);
      }
      break;

    case REVISION:
      if (value == null) {
        unsetRevision();
      } else {
        setRevision((java.lang.Long)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SQUARE_MID:
      return getSquareMid();

    case UPDATE_SQUARE_PROFILE:
      return getUpdateSquareProfile();

    case INVITE_NEW_MEMBER:
      return getInviteNewMember();

    case APPROVE_JOIN_REQUEST:
      return getApproveJoinRequest();

    case CREATE_POST:
      return getCreatePost();

    case CREATE_OPEN_SQUARE_CHAT:
      return getCreateOpenSquareChat();

    case DELETE_SQUARE_CHAT_OR_POST:
      return getDeleteSquareChatOrPost();

    case REMOVE_SQUARE_MEMBER:
      return getRemoveSquareMember();

    case GRANT_ROLE:
      return getGrantRole();

    case ENABLE_INVITATION_TICKET:
      return getEnableInvitationTicket();

    case REVISION:
      return getRevision();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SQUARE_MID:
      return isSetSquareMid();
    case UPDATE_SQUARE_PROFILE:
      return isSetUpdateSquareProfile();
    case INVITE_NEW_MEMBER:
      return isSetInviteNewMember();
    case APPROVE_JOIN_REQUEST:
      return isSetApproveJoinRequest();
    case CREATE_POST:
      return isSetCreatePost();
    case CREATE_OPEN_SQUARE_CHAT:
      return isSetCreateOpenSquareChat();
    case DELETE_SQUARE_CHAT_OR_POST:
      return isSetDeleteSquareChatOrPost();
    case REMOVE_SQUARE_MEMBER:
      return isSetRemoveSquareMember();
    case GRANT_ROLE:
      return isSetGrantRole();
    case ENABLE_INVITATION_TICKET:
      return isSetEnableInvitationTicket();
    case REVISION:
      return isSetRevision();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof SquareAuthority)
      return this.equals((SquareAuthority)that);
    return false;
  }

  public boolean equals(SquareAuthority that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_squareMid = true && this.isSetSquareMid();
    boolean that_present_squareMid = true && that.isSetSquareMid();
    if (this_present_squareMid || that_present_squareMid) {
      if (!(this_present_squareMid && that_present_squareMid))
        return false;
      if (!this.squareMid.equals(that.squareMid))
        return false;
    }

    boolean this_present_updateSquareProfile = true && this.isSetUpdateSquareProfile();
    boolean that_present_updateSquareProfile = true && that.isSetUpdateSquareProfile();
    if (this_present_updateSquareProfile || that_present_updateSquareProfile) {
      if (!(this_present_updateSquareProfile && that_present_updateSquareProfile))
        return false;
      if (!this.updateSquareProfile.equals(that.updateSquareProfile))
        return false;
    }

    boolean this_present_inviteNewMember = true && this.isSetInviteNewMember();
    boolean that_present_inviteNewMember = true && that.isSetInviteNewMember();
    if (this_present_inviteNewMember || that_present_inviteNewMember) {
      if (!(this_present_inviteNewMember && that_present_inviteNewMember))
        return false;
      if (!this.inviteNewMember.equals(that.inviteNewMember))
        return false;
    }

    boolean this_present_approveJoinRequest = true && this.isSetApproveJoinRequest();
    boolean that_present_approveJoinRequest = true && that.isSetApproveJoinRequest();
    if (this_present_approveJoinRequest || that_present_approveJoinRequest) {
      if (!(this_present_approveJoinRequest && that_present_approveJoinRequest))
        return false;
      if (!this.approveJoinRequest.equals(that.approveJoinRequest))
        return false;
    }

    boolean this_present_createPost = true && this.isSetCreatePost();
    boolean that_present_createPost = true && that.isSetCreatePost();
    if (this_present_createPost || that_present_createPost) {
      if (!(this_present_createPost && that_present_createPost))
        return false;
      if (!this.createPost.equals(that.createPost))
        return false;
    }

    boolean this_present_createOpenSquareChat = true && this.isSetCreateOpenSquareChat();
    boolean that_present_createOpenSquareChat = true && that.isSetCreateOpenSquareChat();
    if (this_present_createOpenSquareChat || that_present_createOpenSquareChat) {
      if (!(this_present_createOpenSquareChat && that_present_createOpenSquareChat))
        return false;
      if (!this.createOpenSquareChat.equals(that.createOpenSquareChat))
        return false;
    }

    boolean this_present_deleteSquareChatOrPost = true && this.isSetDeleteSquareChatOrPost();
    boolean that_present_deleteSquareChatOrPost = true && that.isSetDeleteSquareChatOrPost();
    if (this_present_deleteSquareChatOrPost || that_present_deleteSquareChatOrPost) {
      if (!(this_present_deleteSquareChatOrPost && that_present_deleteSquareChatOrPost))
        return false;
      if (!this.deleteSquareChatOrPost.equals(that.deleteSquareChatOrPost))
        return false;
    }

    boolean this_present_removeSquareMember = true && this.isSetRemoveSquareMember();
    boolean that_present_removeSquareMember = true && that.isSetRemoveSquareMember();
    if (this_present_removeSquareMember || that_present_removeSquareMember) {
      if (!(this_present_removeSquareMember && that_present_removeSquareMember))
        return false;
      if (!this.removeSquareMember.equals(that.removeSquareMember))
        return false;
    }

    boolean this_present_grantRole = true && this.isSetGrantRole();
    boolean that_present_grantRole = true && that.isSetGrantRole();
    if (this_present_grantRole || that_present_grantRole) {
      if (!(this_present_grantRole && that_present_grantRole))
        return false;
      if (!this.grantRole.equals(that.grantRole))
        return false;
    }

    boolean this_present_enableInvitationTicket = true && this.isSetEnableInvitationTicket();
    boolean that_present_enableInvitationTicket = true && that.isSetEnableInvitationTicket();
    if (this_present_enableInvitationTicket || that_present_enableInvitationTicket) {
      if (!(this_present_enableInvitationTicket && that_present_enableInvitationTicket))
        return false;
      if (!this.enableInvitationTicket.equals(that.enableInvitationTicket))
        return false;
    }

    boolean this_present_revision = true;
    boolean that_present_revision = true;
    if (this_present_revision || that_present_revision) {
      if (!(this_present_revision && that_present_revision))
        return false;
      if (this.revision != that.revision)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSquareMid()) ? 131071 : 524287);
    if (isSetSquareMid())
      hashCode = hashCode * 8191 + squareMid.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdateSquareProfile()) ? 131071 : 524287);
    if (isSetUpdateSquareProfile())
      hashCode = hashCode * 8191 + updateSquareProfile.getValue();

    hashCode = hashCode * 8191 + ((isSetInviteNewMember()) ? 131071 : 524287);
    if (isSetInviteNewMember())
      hashCode = hashCode * 8191 + inviteNewMember.getValue();

    hashCode = hashCode * 8191 + ((isSetApproveJoinRequest()) ? 131071 : 524287);
    if (isSetApproveJoinRequest())
      hashCode = hashCode * 8191 + approveJoinRequest.getValue();

    hashCode = hashCode * 8191 + ((isSetCreatePost()) ? 131071 : 524287);
    if (isSetCreatePost())
      hashCode = hashCode * 8191 + createPost.getValue();

    hashCode = hashCode * 8191 + ((isSetCreateOpenSquareChat()) ? 131071 : 524287);
    if (isSetCreateOpenSquareChat())
      hashCode = hashCode * 8191 + createOpenSquareChat.getValue();

    hashCode = hashCode * 8191 + ((isSetDeleteSquareChatOrPost()) ? 131071 : 524287);
    if (isSetDeleteSquareChatOrPost())
      hashCode = hashCode * 8191 + deleteSquareChatOrPost.getValue();

    hashCode = hashCode * 8191 + ((isSetRemoveSquareMember()) ? 131071 : 524287);
    if (isSetRemoveSquareMember())
      hashCode = hashCode * 8191 + removeSquareMember.getValue();

    hashCode = hashCode * 8191 + ((isSetGrantRole()) ? 131071 : 524287);
    if (isSetGrantRole())
      hashCode = hashCode * 8191 + grantRole.getValue();

    hashCode = hashCode * 8191 + ((isSetEnableInvitationTicket()) ? 131071 : 524287);
    if (isSetEnableInvitationTicket())
      hashCode = hashCode * 8191 + enableInvitationTicket.getValue();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(revision);

    return hashCode;
  }

  @Override
  public int compareTo(SquareAuthority other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetSquareMid(), other.isSetSquareMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSquareMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.squareMid, other.squareMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetUpdateSquareProfile(), other.isSetUpdateSquareProfile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateSquareProfile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateSquareProfile, other.updateSquareProfile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetInviteNewMember(), other.isSetInviteNewMember());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInviteNewMember()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inviteNewMember, other.inviteNewMember);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetApproveJoinRequest(), other.isSetApproveJoinRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApproveJoinRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approveJoinRequest, other.approveJoinRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreatePost(), other.isSetCreatePost());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatePost()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createPost, other.createPost);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreateOpenSquareChat(), other.isSetCreateOpenSquareChat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateOpenSquareChat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createOpenSquareChat, other.createOpenSquareChat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDeleteSquareChatOrPost(), other.isSetDeleteSquareChatOrPost());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeleteSquareChatOrPost()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deleteSquareChatOrPost, other.deleteSquareChatOrPost);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetRemoveSquareMember(), other.isSetRemoveSquareMember());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemoveSquareMember()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.removeSquareMember, other.removeSquareMember);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetGrantRole(), other.isSetGrantRole());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGrantRole()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.grantRole, other.grantRole);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetEnableInvitationTicket(), other.isSetEnableInvitationTicket());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnableInvitationTicket()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableInvitationTicket, other.enableInvitationTicket);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetRevision(), other.isSetRevision());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRevision()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.revision, other.revision);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SquareAuthority(");
    boolean first = true;

    sb.append("squareMid:");
    if (this.squareMid == null) {
      sb.append("null");
    } else {
      sb.append(this.squareMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateSquareProfile:");
    if (this.updateSquareProfile == null) {
      sb.append("null");
    } else {
      sb.append(this.updateSquareProfile);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("inviteNewMember:");
    if (this.inviteNewMember == null) {
      sb.append("null");
    } else {
      sb.append(this.inviteNewMember);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("approveJoinRequest:");
    if (this.approveJoinRequest == null) {
      sb.append("null");
    } else {
      sb.append(this.approveJoinRequest);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createPost:");
    if (this.createPost == null) {
      sb.append("null");
    } else {
      sb.append(this.createPost);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createOpenSquareChat:");
    if (this.createOpenSquareChat == null) {
      sb.append("null");
    } else {
      sb.append(this.createOpenSquareChat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("deleteSquareChatOrPost:");
    if (this.deleteSquareChatOrPost == null) {
      sb.append("null");
    } else {
      sb.append(this.deleteSquareChatOrPost);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("removeSquareMember:");
    if (this.removeSquareMember == null) {
      sb.append("null");
    } else {
      sb.append(this.removeSquareMember);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("grantRole:");
    if (this.grantRole == null) {
      sb.append("null");
    } else {
      sb.append(this.grantRole);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("enableInvitationTicket:");
    if (this.enableInvitationTicket == null) {
      sb.append("null");
    } else {
      sb.append(this.enableInvitationTicket);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("revision:");
    sb.append(this.revision);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SquareAuthorityStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SquareAuthorityStandardScheme getScheme() {
      return new SquareAuthorityStandardScheme();
    }
  }

  private static class SquareAuthorityStandardScheme extends org.apache.thrift.scheme.StandardScheme<SquareAuthority> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SquareAuthority struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SQUARE_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.squareMid = iprot.readString();
              struct.setSquareMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // UPDATE_SQUARE_PROFILE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.updateSquareProfile = SquareMemberRole.findByValue(iprot.readI32());
              struct.setUpdateSquareProfileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // INVITE_NEW_MEMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.inviteNewMember = SquareMemberRole.findByValue(iprot.readI32());
              struct.setInviteNewMemberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // APPROVE_JOIN_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.approveJoinRequest = SquareMemberRole.findByValue(iprot.readI32());
              struct.setApproveJoinRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATE_POST
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.createPost = SquareMemberRole.findByValue(iprot.readI32());
              struct.setCreatePostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREATE_OPEN_SQUARE_CHAT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.createOpenSquareChat = SquareMemberRole.findByValue(iprot.readI32());
              struct.setCreateOpenSquareChatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DELETE_SQUARE_CHAT_OR_POST
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.deleteSquareChatOrPost = SquareMemberRole.findByValue(iprot.readI32());
              struct.setDeleteSquareChatOrPostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // REMOVE_SQUARE_MEMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.removeSquareMember = SquareMemberRole.findByValue(iprot.readI32());
              struct.setRemoveSquareMemberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // GRANT_ROLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.grantRole = SquareMemberRole.findByValue(iprot.readI32());
              struct.setGrantRoleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ENABLE_INVITATION_TICKET
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.enableInvitationTicket = SquareMemberRole.findByValue(iprot.readI32());
              struct.setEnableInvitationTicketIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // REVISION
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.revision = iprot.readI64();
              struct.setRevisionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SquareAuthority struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.squareMid != null) {
        oprot.writeFieldBegin(SQUARE_MID_FIELD_DESC);
        oprot.writeString(struct.squareMid);
        oprot.writeFieldEnd();
      }
      if (struct.updateSquareProfile != null) {
        oprot.writeFieldBegin(UPDATE_SQUARE_PROFILE_FIELD_DESC);
        oprot.writeI32(struct.updateSquareProfile.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.inviteNewMember != null) {
        oprot.writeFieldBegin(INVITE_NEW_MEMBER_FIELD_DESC);
        oprot.writeI32(struct.inviteNewMember.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.approveJoinRequest != null) {
        oprot.writeFieldBegin(APPROVE_JOIN_REQUEST_FIELD_DESC);
        oprot.writeI32(struct.approveJoinRequest.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.createPost != null) {
        oprot.writeFieldBegin(CREATE_POST_FIELD_DESC);
        oprot.writeI32(struct.createPost.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.createOpenSquareChat != null) {
        oprot.writeFieldBegin(CREATE_OPEN_SQUARE_CHAT_FIELD_DESC);
        oprot.writeI32(struct.createOpenSquareChat.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.deleteSquareChatOrPost != null) {
        oprot.writeFieldBegin(DELETE_SQUARE_CHAT_OR_POST_FIELD_DESC);
        oprot.writeI32(struct.deleteSquareChatOrPost.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.removeSquareMember != null) {
        oprot.writeFieldBegin(REMOVE_SQUARE_MEMBER_FIELD_DESC);
        oprot.writeI32(struct.removeSquareMember.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.grantRole != null) {
        oprot.writeFieldBegin(GRANT_ROLE_FIELD_DESC);
        oprot.writeI32(struct.grantRole.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.enableInvitationTicket != null) {
        oprot.writeFieldBegin(ENABLE_INVITATION_TICKET_FIELD_DESC);
        oprot.writeI32(struct.enableInvitationTicket.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REVISION_FIELD_DESC);
      oprot.writeI64(struct.revision);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SquareAuthorityTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SquareAuthorityTupleScheme getScheme() {
      return new SquareAuthorityTupleScheme();
    }
  }

  private static class SquareAuthorityTupleScheme extends org.apache.thrift.scheme.TupleScheme<SquareAuthority> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SquareAuthority struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSquareMid()) {
        optionals.set(0);
      }
      if (struct.isSetUpdateSquareProfile()) {
        optionals.set(1);
      }
      if (struct.isSetInviteNewMember()) {
        optionals.set(2);
      }
      if (struct.isSetApproveJoinRequest()) {
        optionals.set(3);
      }
      if (struct.isSetCreatePost()) {
        optionals.set(4);
      }
      if (struct.isSetCreateOpenSquareChat()) {
        optionals.set(5);
      }
      if (struct.isSetDeleteSquareChatOrPost()) {
        optionals.set(6);
      }
      if (struct.isSetRemoveSquareMember()) {
        optionals.set(7);
      }
      if (struct.isSetGrantRole()) {
        optionals.set(8);
      }
      if (struct.isSetEnableInvitationTicket()) {
        optionals.set(9);
      }
      if (struct.isSetRevision()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetSquareMid()) {
        oprot.writeString(struct.squareMid);
      }
      if (struct.isSetUpdateSquareProfile()) {
        oprot.writeI32(struct.updateSquareProfile.getValue());
      }
      if (struct.isSetInviteNewMember()) {
        oprot.writeI32(struct.inviteNewMember.getValue());
      }
      if (struct.isSetApproveJoinRequest()) {
        oprot.writeI32(struct.approveJoinRequest.getValue());
      }
      if (struct.isSetCreatePost()) {
        oprot.writeI32(struct.createPost.getValue());
      }
      if (struct.isSetCreateOpenSquareChat()) {
        oprot.writeI32(struct.createOpenSquareChat.getValue());
      }
      if (struct.isSetDeleteSquareChatOrPost()) {
        oprot.writeI32(struct.deleteSquareChatOrPost.getValue());
      }
      if (struct.isSetRemoveSquareMember()) {
        oprot.writeI32(struct.removeSquareMember.getValue());
      }
      if (struct.isSetGrantRole()) {
        oprot.writeI32(struct.grantRole.getValue());
      }
      if (struct.isSetEnableInvitationTicket()) {
        oprot.writeI32(struct.enableInvitationTicket.getValue());
      }
      if (struct.isSetRevision()) {
        oprot.writeI64(struct.revision);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SquareAuthority struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.squareMid = iprot.readString();
        struct.setSquareMidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.updateSquareProfile = SquareMemberRole.findByValue(iprot.readI32());
        struct.setUpdateSquareProfileIsSet(true);
      }
      if (incoming.get(2)) {
        struct.inviteNewMember = SquareMemberRole.findByValue(iprot.readI32());
        struct.setInviteNewMemberIsSet(true);
      }
      if (incoming.get(3)) {
        struct.approveJoinRequest = SquareMemberRole.findByValue(iprot.readI32());
        struct.setApproveJoinRequestIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createPost = SquareMemberRole.findByValue(iprot.readI32());
        struct.setCreatePostIsSet(true);
      }
      if (incoming.get(5)) {
        struct.createOpenSquareChat = SquareMemberRole.findByValue(iprot.readI32());
        struct.setCreateOpenSquareChatIsSet(true);
      }
      if (incoming.get(6)) {
        struct.deleteSquareChatOrPost = SquareMemberRole.findByValue(iprot.readI32());
        struct.setDeleteSquareChatOrPostIsSet(true);
      }
      if (incoming.get(7)) {
        struct.removeSquareMember = SquareMemberRole.findByValue(iprot.readI32());
        struct.setRemoveSquareMemberIsSet(true);
      }
      if (incoming.get(8)) {
        struct.grantRole = SquareMemberRole.findByValue(iprot.readI32());
        struct.setGrantRoleIsSet(true);
      }
      if (incoming.get(9)) {
        struct.enableInvitationTicket = SquareMemberRole.findByValue(iprot.readI32());
        struct.setEnableInvitationTicketIsSet(true);
      }
      if (incoming.get(10)) {
        struct.revision = iprot.readI64();
        struct.setRevisionIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

