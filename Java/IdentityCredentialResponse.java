/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-17")
public class IdentityCredentialResponse implements org.apache.thrift.TBase<IdentityCredentialResponse, IdentityCredentialResponse._Fields>, java.io.Serializable, Cloneable, Comparable<IdentityCredentialResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("IdentityCredentialResponse");

  private static final org.apache.thrift.protocol.TField META_DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("metaData", org.apache.thrift.protocol.TType.MAP, (short)1);
  private static final org.apache.thrift.protocol.TField RESPONSE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("responseType", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField CONFIRMATION_VERIFIER_FIELD_DESC = new org.apache.thrift.protocol.TField("confirmationVerifier", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField TIMEOUT_IN_SECONDS_FIELD_DESC = new org.apache.thrift.protocol.TField("timeoutInSeconds", org.apache.thrift.protocol.TType.I64, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new IdentityCredentialResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new IdentityCredentialResponseTupleSchemeFactory();

  public java.util.Map<java.lang.String,java.lang.String> metaData; // required
  /**
   * 
   * @see IdentityResponseType
   */
  public IdentityResponseType responseType; // required
  public java.lang.String confirmationVerifier; // required
  public long timeoutInSeconds; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    META_DATA((short)1, "metaData"),
    /**
     * 
     * @see IdentityResponseType
     */
    RESPONSE_TYPE((short)2, "responseType"),
    CONFIRMATION_VERIFIER((short)3, "confirmationVerifier"),
    TIMEOUT_IN_SECONDS((short)4, "timeoutInSeconds");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // META_DATA
          return META_DATA;
        case 2: // RESPONSE_TYPE
          return RESPONSE_TYPE;
        case 3: // CONFIRMATION_VERIFIER
          return CONFIRMATION_VERIFIER;
        case 4: // TIMEOUT_IN_SECONDS
          return TIMEOUT_IN_SECONDS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TIMEOUTINSECONDS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.META_DATA, new org.apache.thrift.meta_data.FieldMetaData("metaData", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.RESPONSE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("responseType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, IdentityResponseType.class)));
    tmpMap.put(_Fields.CONFIRMATION_VERIFIER, new org.apache.thrift.meta_data.FieldMetaData("confirmationVerifier", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIMEOUT_IN_SECONDS, new org.apache.thrift.meta_data.FieldMetaData("timeoutInSeconds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(IdentityCredentialResponse.class, metaDataMap);
  }

  public IdentityCredentialResponse() {
  }

  public IdentityCredentialResponse(
    java.util.Map<java.lang.String,java.lang.String> metaData,
    IdentityResponseType responseType,
    java.lang.String confirmationVerifier,
    long timeoutInSeconds)
  {
    this();
    this.metaData = metaData;
    this.responseType = responseType;
    this.confirmationVerifier = confirmationVerifier;
    this.timeoutInSeconds = timeoutInSeconds;
    setTimeoutInSecondsIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public IdentityCredentialResponse(IdentityCredentialResponse other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetMetaData()) {
      java.util.Map<java.lang.String,java.lang.String> __this__metaData = new java.util.HashMap<java.lang.String,java.lang.String>(other.metaData);
      this.metaData = __this__metaData;
    }
    if (other.isSetResponseType()) {
      this.responseType = other.responseType;
    }
    if (other.isSetConfirmationVerifier()) {
      this.confirmationVerifier = other.confirmationVerifier;
    }
    this.timeoutInSeconds = other.timeoutInSeconds;
  }

  public IdentityCredentialResponse deepCopy() {
    return new IdentityCredentialResponse(this);
  }

  @Override
  public void clear() {
    this.metaData = null;
    this.responseType = null;
    this.confirmationVerifier = null;
    setTimeoutInSecondsIsSet(false);
    this.timeoutInSeconds = 0;
  }

  public int getMetaDataSize() {
    return (this.metaData == null) ? 0 : this.metaData.size();
  }

  public void putToMetaData(java.lang.String key, java.lang.String val) {
    if (this.metaData == null) {
      this.metaData = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.metaData.put(key, val);
  }

  public java.util.Map<java.lang.String,java.lang.String> getMetaData() {
    return this.metaData;
  }

  public IdentityCredentialResponse setMetaData(java.util.Map<java.lang.String,java.lang.String> metaData) {
    this.metaData = metaData;
    return this;
  }

  public void unsetMetaData() {
    this.metaData = null;
  }

  /** Returns true if field metaData is set (has been assigned a value) and false otherwise */
  public boolean isSetMetaData() {
    return this.metaData != null;
  }

  public void setMetaDataIsSet(boolean value) {
    if (!value) {
      this.metaData = null;
    }
  }

  /**
   * 
   * @see IdentityResponseType
   */
  public IdentityResponseType getResponseType() {
    return this.responseType;
  }

  /**
   * 
   * @see IdentityResponseType
   */
  public IdentityCredentialResponse setResponseType(IdentityResponseType responseType) {
    this.responseType = responseType;
    return this;
  }

  public void unsetResponseType() {
    this.responseType = null;
  }

  /** Returns true if field responseType is set (has been assigned a value) and false otherwise */
  public boolean isSetResponseType() {
    return this.responseType != null;
  }

  public void setResponseTypeIsSet(boolean value) {
    if (!value) {
      this.responseType = null;
    }
  }

  public java.lang.String getConfirmationVerifier() {
    return this.confirmationVerifier;
  }

  public IdentityCredentialResponse setConfirmationVerifier(java.lang.String confirmationVerifier) {
    this.confirmationVerifier = confirmationVerifier;
    return this;
  }

  public void unsetConfirmationVerifier() {
    this.confirmationVerifier = null;
  }

  /** Returns true if field confirmationVerifier is set (has been assigned a value) and false otherwise */
  public boolean isSetConfirmationVerifier() {
    return this.confirmationVerifier != null;
  }

  public void setConfirmationVerifierIsSet(boolean value) {
    if (!value) {
      this.confirmationVerifier = null;
    }
  }

  public long getTimeoutInSeconds() {
    return this.timeoutInSeconds;
  }

  public IdentityCredentialResponse setTimeoutInSeconds(long timeoutInSeconds) {
    this.timeoutInSeconds = timeoutInSeconds;
    setTimeoutInSecondsIsSet(true);
    return this;
  }

  public void unsetTimeoutInSeconds() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TIMEOUTINSECONDS_ISSET_ID);
  }

  /** Returns true if field timeoutInSeconds is set (has been assigned a value) and false otherwise */
  public boolean isSetTimeoutInSeconds() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TIMEOUTINSECONDS_ISSET_ID);
  }

  public void setTimeoutInSecondsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TIMEOUTINSECONDS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case META_DATA:
      if (value == null) {
        unsetMetaData();
      } else {
        setMetaData((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    case RESPONSE_TYPE:
      if (value == null) {
        unsetResponseType();
      } else {
        setResponseType((IdentityResponseType)value);
      }
      break;

    case CONFIRMATION_VERIFIER:
      if (value == null) {
        unsetConfirmationVerifier();
      } else {
        setConfirmationVerifier((java.lang.String)value);
      }
      break;

    case TIMEOUT_IN_SECONDS:
      if (value == null) {
        unsetTimeoutInSeconds();
      } else {
        setTimeoutInSeconds((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case META_DATA:
      return getMetaData();

    case RESPONSE_TYPE:
      return getResponseType();

    case CONFIRMATION_VERIFIER:
      return getConfirmationVerifier();

    case TIMEOUT_IN_SECONDS:
      return getTimeoutInSeconds();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case META_DATA:
      return isSetMetaData();
    case RESPONSE_TYPE:
      return isSetResponseType();
    case CONFIRMATION_VERIFIER:
      return isSetConfirmationVerifier();
    case TIMEOUT_IN_SECONDS:
      return isSetTimeoutInSeconds();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof IdentityCredentialResponse)
      return this.equals((IdentityCredentialResponse)that);
    return false;
  }

  public boolean equals(IdentityCredentialResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_metaData = true && this.isSetMetaData();
    boolean that_present_metaData = true && that.isSetMetaData();
    if (this_present_metaData || that_present_metaData) {
      if (!(this_present_metaData && that_present_metaData))
        return false;
      if (!this.metaData.equals(that.metaData))
        return false;
    }

    boolean this_present_responseType = true && this.isSetResponseType();
    boolean that_present_responseType = true && that.isSetResponseType();
    if (this_present_responseType || that_present_responseType) {
      if (!(this_present_responseType && that_present_responseType))
        return false;
      if (!this.responseType.equals(that.responseType))
        return false;
    }

    boolean this_present_confirmationVerifier = true && this.isSetConfirmationVerifier();
    boolean that_present_confirmationVerifier = true && that.isSetConfirmationVerifier();
    if (this_present_confirmationVerifier || that_present_confirmationVerifier) {
      if (!(this_present_confirmationVerifier && that_present_confirmationVerifier))
        return false;
      if (!this.confirmationVerifier.equals(that.confirmationVerifier))
        return false;
    }

    boolean this_present_timeoutInSeconds = true;
    boolean that_present_timeoutInSeconds = true;
    if (this_present_timeoutInSeconds || that_present_timeoutInSeconds) {
      if (!(this_present_timeoutInSeconds && that_present_timeoutInSeconds))
        return false;
      if (this.timeoutInSeconds != that.timeoutInSeconds)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetMetaData()) ? 131071 : 524287);
    if (isSetMetaData())
      hashCode = hashCode * 8191 + metaData.hashCode();

    hashCode = hashCode * 8191 + ((isSetResponseType()) ? 131071 : 524287);
    if (isSetResponseType())
      hashCode = hashCode * 8191 + responseType.getValue();

    hashCode = hashCode * 8191 + ((isSetConfirmationVerifier()) ? 131071 : 524287);
    if (isSetConfirmationVerifier())
      hashCode = hashCode * 8191 + confirmationVerifier.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(timeoutInSeconds);

    return hashCode;
  }

  @Override
  public int compareTo(IdentityCredentialResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetMetaData()).compareTo(other.isSetMetaData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMetaData()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.metaData, other.metaData);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetResponseType()).compareTo(other.isSetResponseType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponseType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseType, other.responseType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetConfirmationVerifier()).compareTo(other.isSetConfirmationVerifier());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConfirmationVerifier()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.confirmationVerifier, other.confirmationVerifier);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTimeoutInSeconds()).compareTo(other.isSetTimeoutInSeconds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimeoutInSeconds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeoutInSeconds, other.timeoutInSeconds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("IdentityCredentialResponse(");
    boolean first = true;

    sb.append("metaData:");
    if (this.metaData == null) {
      sb.append("null");
    } else {
      sb.append(this.metaData);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("responseType:");
    if (this.responseType == null) {
      sb.append("null");
    } else {
      sb.append(this.responseType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("confirmationVerifier:");
    if (this.confirmationVerifier == null) {
      sb.append("null");
    } else {
      sb.append(this.confirmationVerifier);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("timeoutInSeconds:");
    sb.append(this.timeoutInSeconds);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class IdentityCredentialResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public IdentityCredentialResponseStandardScheme getScheme() {
      return new IdentityCredentialResponseStandardScheme();
    }
  }

  private static class IdentityCredentialResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<IdentityCredentialResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, IdentityCredentialResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // META_DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map36 = iprot.readMapBegin();
                struct.metaData = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map36.size);
                java.lang.String _key37;
                java.lang.String _val38;
                for (int _i39 = 0; _i39 < _map36.size; ++_i39)
                {
                  _key37 = iprot.readString();
                  _val38 = iprot.readString();
                  struct.metaData.put(_key37, _val38);
                }
                iprot.readMapEnd();
              }
              struct.setMetaDataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // RESPONSE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.responseType = IdentityResponseType.findByValue(iprot.readI32());
              struct.setResponseTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CONFIRMATION_VERIFIER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.confirmationVerifier = iprot.readString();
              struct.setConfirmationVerifierIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TIMEOUT_IN_SECONDS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.timeoutInSeconds = iprot.readI64();
              struct.setTimeoutInSecondsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, IdentityCredentialResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.metaData != null) {
        oprot.writeFieldBegin(META_DATA_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.metaData.size()));
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter40 : struct.metaData.entrySet())
          {
            oprot.writeString(_iter40.getKey());
            oprot.writeString(_iter40.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.responseType != null) {
        oprot.writeFieldBegin(RESPONSE_TYPE_FIELD_DESC);
        oprot.writeI32(struct.responseType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.confirmationVerifier != null) {
        oprot.writeFieldBegin(CONFIRMATION_VERIFIER_FIELD_DESC);
        oprot.writeString(struct.confirmationVerifier);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TIMEOUT_IN_SECONDS_FIELD_DESC);
      oprot.writeI64(struct.timeoutInSeconds);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class IdentityCredentialResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public IdentityCredentialResponseTupleScheme getScheme() {
      return new IdentityCredentialResponseTupleScheme();
    }
  }

  private static class IdentityCredentialResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<IdentityCredentialResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, IdentityCredentialResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetMetaData()) {
        optionals.set(0);
      }
      if (struct.isSetResponseType()) {
        optionals.set(1);
      }
      if (struct.isSetConfirmationVerifier()) {
        optionals.set(2);
      }
      if (struct.isSetTimeoutInSeconds()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetMetaData()) {
        {
          oprot.writeI32(struct.metaData.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter41 : struct.metaData.entrySet())
          {
            oprot.writeString(_iter41.getKey());
            oprot.writeString(_iter41.getValue());
          }
        }
      }
      if (struct.isSetResponseType()) {
        oprot.writeI32(struct.responseType.getValue());
      }
      if (struct.isSetConfirmationVerifier()) {
        oprot.writeString(struct.confirmationVerifier);
      }
      if (struct.isSetTimeoutInSeconds()) {
        oprot.writeI64(struct.timeoutInSeconds);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, IdentityCredentialResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TMap _map42 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.metaData = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map42.size);
          java.lang.String _key43;
          java.lang.String _val44;
          for (int _i45 = 0; _i45 < _map42.size; ++_i45)
          {
            _key43 = iprot.readString();
            _val44 = iprot.readString();
            struct.metaData.put(_key43, _val44);
          }
        }
        struct.setMetaDataIsSet(true);
      }
      if (incoming.get(1)) {
        struct.responseType = IdentityResponseType.findByValue(iprot.readI32());
        struct.setResponseTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.confirmationVerifier = iprot.readString();
        struct.setConfirmationVerifierIsSet(true);
      }
      if (incoming.get(3)) {
        struct.timeoutInSeconds = iprot.readI64();
        struct.setTimeoutInSecondsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

