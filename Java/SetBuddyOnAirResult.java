/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.0)", date = "2020-03-23")
public class SetBuddyOnAirResult implements org.apache.thrift.TBase<SetBuddyOnAirResult, SetBuddyOnAirResult._Fields>, java.io.Serializable, Cloneable, Comparable<SetBuddyOnAirResult> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SetBuddyOnAirResult");

  private static final org.apache.thrift.protocol.TField REQUEST_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("requestId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("state", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField EVENT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("eventNo", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField RECEIVER_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("receiverCount", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField SUCCESS_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("successCount", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField FAIL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("failCount", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField CANCEL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("cancelCount", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField UNREGISTER_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("unregisterCount", org.apache.thrift.protocol.TType.I64, (short)15);
  private static final org.apache.thrift.protocol.TField TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("timestamp", org.apache.thrift.protocol.TType.I64, (short)21);
  private static final org.apache.thrift.protocol.TField MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("message", org.apache.thrift.protocol.TType.STRING, (short)22);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SetBuddyOnAirResultStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SetBuddyOnAirResultTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String requestId; // required
  /**
   * 
   * @see BuddyResultState
   */
  public @org.apache.thrift.annotation.Nullable BuddyResultState state; // required
  public int eventNo; // required
  public long receiverCount; // required
  public long successCount; // required
  public long failCount; // required
  public long cancelCount; // required
  public long unregisterCount; // required
  public long timestamp; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String message; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    REQUEST_ID((short)1, "requestId"),
    /**
     * 
     * @see BuddyResultState
     */
    STATE((short)2, "state"),
    EVENT_NO((short)3, "eventNo"),
    RECEIVER_COUNT((short)11, "receiverCount"),
    SUCCESS_COUNT((short)12, "successCount"),
    FAIL_COUNT((short)13, "failCount"),
    CANCEL_COUNT((short)14, "cancelCount"),
    UNREGISTER_COUNT((short)15, "unregisterCount"),
    TIMESTAMP((short)21, "timestamp"),
    MESSAGE((short)22, "message");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // REQUEST_ID
          return REQUEST_ID;
        case 2: // STATE
          return STATE;
        case 3: // EVENT_NO
          return EVENT_NO;
        case 11: // RECEIVER_COUNT
          return RECEIVER_COUNT;
        case 12: // SUCCESS_COUNT
          return SUCCESS_COUNT;
        case 13: // FAIL_COUNT
          return FAIL_COUNT;
        case 14: // CANCEL_COUNT
          return CANCEL_COUNT;
        case 15: // UNREGISTER_COUNT
          return UNREGISTER_COUNT;
        case 21: // TIMESTAMP
          return TIMESTAMP;
        case 22: // MESSAGE
          return MESSAGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __EVENTNO_ISSET_ID = 0;
  private static final int __RECEIVERCOUNT_ISSET_ID = 1;
  private static final int __SUCCESSCOUNT_ISSET_ID = 2;
  private static final int __FAILCOUNT_ISSET_ID = 3;
  private static final int __CANCELCOUNT_ISSET_ID = 4;
  private static final int __UNREGISTERCOUNT_ISSET_ID = 5;
  private static final int __TIMESTAMP_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.REQUEST_ID, new org.apache.thrift.meta_data.FieldMetaData("requestId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATE, new org.apache.thrift.meta_data.FieldMetaData("state", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, BuddyResultState.class)));
    tmpMap.put(_Fields.EVENT_NO, new org.apache.thrift.meta_data.FieldMetaData("eventNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECEIVER_COUNT, new org.apache.thrift.meta_data.FieldMetaData("receiverCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SUCCESS_COUNT, new org.apache.thrift.meta_data.FieldMetaData("successCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FAIL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("failCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CANCEL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("cancelCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.UNREGISTER_COUNT, new org.apache.thrift.meta_data.FieldMetaData("unregisterCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("timestamp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("message", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SetBuddyOnAirResult.class, metaDataMap);
  }

  public SetBuddyOnAirResult() {
  }

  public SetBuddyOnAirResult(
    java.lang.String requestId,
    BuddyResultState state,
    int eventNo,
    long receiverCount,
    long successCount,
    long failCount,
    long cancelCount,
    long unregisterCount,
    long timestamp,
    java.lang.String message)
  {
    this();
    this.requestId = requestId;
    this.state = state;
    this.eventNo = eventNo;
    setEventNoIsSet(true);
    this.receiverCount = receiverCount;
    setReceiverCountIsSet(true);
    this.successCount = successCount;
    setSuccessCountIsSet(true);
    this.failCount = failCount;
    setFailCountIsSet(true);
    this.cancelCount = cancelCount;
    setCancelCountIsSet(true);
    this.unregisterCount = unregisterCount;
    setUnregisterCountIsSet(true);
    this.timestamp = timestamp;
    setTimestampIsSet(true);
    this.message = message;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SetBuddyOnAirResult(SetBuddyOnAirResult other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetRequestId()) {
      this.requestId = other.requestId;
    }
    if (other.isSetState()) {
      this.state = other.state;
    }
    this.eventNo = other.eventNo;
    this.receiverCount = other.receiverCount;
    this.successCount = other.successCount;
    this.failCount = other.failCount;
    this.cancelCount = other.cancelCount;
    this.unregisterCount = other.unregisterCount;
    this.timestamp = other.timestamp;
    if (other.isSetMessage()) {
      this.message = other.message;
    }
  }

  public SetBuddyOnAirResult deepCopy() {
    return new SetBuddyOnAirResult(this);
  }

  @Override
  public void clear() {
    this.requestId = null;
    this.state = null;
    setEventNoIsSet(false);
    this.eventNo = 0;
    setReceiverCountIsSet(false);
    this.receiverCount = 0;
    setSuccessCountIsSet(false);
    this.successCount = 0;
    setFailCountIsSet(false);
    this.failCount = 0;
    setCancelCountIsSet(false);
    this.cancelCount = 0;
    setUnregisterCountIsSet(false);
    this.unregisterCount = 0;
    setTimestampIsSet(false);
    this.timestamp = 0;
    this.message = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getRequestId() {
    return this.requestId;
  }

  public SetBuddyOnAirResult setRequestId(@org.apache.thrift.annotation.Nullable java.lang.String requestId) {
    this.requestId = requestId;
    return this;
  }

  public void unsetRequestId() {
    this.requestId = null;
  }

  /** Returns true if field requestId is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestId() {
    return this.requestId != null;
  }

  public void setRequestIdIsSet(boolean value) {
    if (!value) {
      this.requestId = null;
    }
  }

  /**
   * 
   * @see BuddyResultState
   */
  @org.apache.thrift.annotation.Nullable
  public BuddyResultState getState() {
    return this.state;
  }

  /**
   * 
   * @see BuddyResultState
   */
  public SetBuddyOnAirResult setState(@org.apache.thrift.annotation.Nullable BuddyResultState state) {
    this.state = state;
    return this;
  }

  public void unsetState() {
    this.state = null;
  }

  /** Returns true if field state is set (has been assigned a value) and false otherwise */
  public boolean isSetState() {
    return this.state != null;
  }

  public void setStateIsSet(boolean value) {
    if (!value) {
      this.state = null;
    }
  }

  public int getEventNo() {
    return this.eventNo;
  }

  public SetBuddyOnAirResult setEventNo(int eventNo) {
    this.eventNo = eventNo;
    setEventNoIsSet(true);
    return this;
  }

  public void unsetEventNo() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __EVENTNO_ISSET_ID);
  }

  /** Returns true if field eventNo is set (has been assigned a value) and false otherwise */
  public boolean isSetEventNo() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __EVENTNO_ISSET_ID);
  }

  public void setEventNoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __EVENTNO_ISSET_ID, value);
  }

  public long getReceiverCount() {
    return this.receiverCount;
  }

  public SetBuddyOnAirResult setReceiverCount(long receiverCount) {
    this.receiverCount = receiverCount;
    setReceiverCountIsSet(true);
    return this;
  }

  public void unsetReceiverCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RECEIVERCOUNT_ISSET_ID);
  }

  /** Returns true if field receiverCount is set (has been assigned a value) and false otherwise */
  public boolean isSetReceiverCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RECEIVERCOUNT_ISSET_ID);
  }

  public void setReceiverCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RECEIVERCOUNT_ISSET_ID, value);
  }

  public long getSuccessCount() {
    return this.successCount;
  }

  public SetBuddyOnAirResult setSuccessCount(long successCount) {
    this.successCount = successCount;
    setSuccessCountIsSet(true);
    return this;
  }

  public void unsetSuccessCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SUCCESSCOUNT_ISSET_ID);
  }

  /** Returns true if field successCount is set (has been assigned a value) and false otherwise */
  public boolean isSetSuccessCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SUCCESSCOUNT_ISSET_ID);
  }

  public void setSuccessCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SUCCESSCOUNT_ISSET_ID, value);
  }

  public long getFailCount() {
    return this.failCount;
  }

  public SetBuddyOnAirResult setFailCount(long failCount) {
    this.failCount = failCount;
    setFailCountIsSet(true);
    return this;
  }

  public void unsetFailCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FAILCOUNT_ISSET_ID);
  }

  /** Returns true if field failCount is set (has been assigned a value) and false otherwise */
  public boolean isSetFailCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FAILCOUNT_ISSET_ID);
  }

  public void setFailCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FAILCOUNT_ISSET_ID, value);
  }

  public long getCancelCount() {
    return this.cancelCount;
  }

  public SetBuddyOnAirResult setCancelCount(long cancelCount) {
    this.cancelCount = cancelCount;
    setCancelCountIsSet(true);
    return this;
  }

  public void unsetCancelCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CANCELCOUNT_ISSET_ID);
  }

  /** Returns true if field cancelCount is set (has been assigned a value) and false otherwise */
  public boolean isSetCancelCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CANCELCOUNT_ISSET_ID);
  }

  public void setCancelCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CANCELCOUNT_ISSET_ID, value);
  }

  public long getUnregisterCount() {
    return this.unregisterCount;
  }

  public SetBuddyOnAirResult setUnregisterCount(long unregisterCount) {
    this.unregisterCount = unregisterCount;
    setUnregisterCountIsSet(true);
    return this;
  }

  public void unsetUnregisterCount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UNREGISTERCOUNT_ISSET_ID);
  }

  /** Returns true if field unregisterCount is set (has been assigned a value) and false otherwise */
  public boolean isSetUnregisterCount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UNREGISTERCOUNT_ISSET_ID);
  }

  public void setUnregisterCountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UNREGISTERCOUNT_ISSET_ID, value);
  }

  public long getTimestamp() {
    return this.timestamp;
  }

  public SetBuddyOnAirResult setTimestamp(long timestamp) {
    this.timestamp = timestamp;
    setTimestampIsSet(true);
    return this;
  }

  public void unsetTimestamp() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TIMESTAMP_ISSET_ID);
  }

  /** Returns true if field timestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetTimestamp() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TIMESTAMP_ISSET_ID);
  }

  public void setTimestampIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TIMESTAMP_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getMessage() {
    return this.message;
  }

  public SetBuddyOnAirResult setMessage(@org.apache.thrift.annotation.Nullable java.lang.String message) {
    this.message = message;
    return this;
  }

  public void unsetMessage() {
    this.message = null;
  }

  /** Returns true if field message is set (has been assigned a value) and false otherwise */
  public boolean isSetMessage() {
    return this.message != null;
  }

  public void setMessageIsSet(boolean value) {
    if (!value) {
      this.message = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case REQUEST_ID:
      if (value == null) {
        unsetRequestId();
      } else {
        setRequestId((java.lang.String)value);
      }
      break;

    case STATE:
      if (value == null) {
        unsetState();
      } else {
        setState((BuddyResultState)value);
      }
      break;

    case EVENT_NO:
      if (value == null) {
        unsetEventNo();
      } else {
        setEventNo((java.lang.Integer)value);
      }
      break;

    case RECEIVER_COUNT:
      if (value == null) {
        unsetReceiverCount();
      } else {
        setReceiverCount((java.lang.Long)value);
      }
      break;

    case SUCCESS_COUNT:
      if (value == null) {
        unsetSuccessCount();
      } else {
        setSuccessCount((java.lang.Long)value);
      }
      break;

    case FAIL_COUNT:
      if (value == null) {
        unsetFailCount();
      } else {
        setFailCount((java.lang.Long)value);
      }
      break;

    case CANCEL_COUNT:
      if (value == null) {
        unsetCancelCount();
      } else {
        setCancelCount((java.lang.Long)value);
      }
      break;

    case UNREGISTER_COUNT:
      if (value == null) {
        unsetUnregisterCount();
      } else {
        setUnregisterCount((java.lang.Long)value);
      }
      break;

    case TIMESTAMP:
      if (value == null) {
        unsetTimestamp();
      } else {
        setTimestamp((java.lang.Long)value);
      }
      break;

    case MESSAGE:
      if (value == null) {
        unsetMessage();
      } else {
        setMessage((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case REQUEST_ID:
      return getRequestId();

    case STATE:
      return getState();

    case EVENT_NO:
      return getEventNo();

    case RECEIVER_COUNT:
      return getReceiverCount();

    case SUCCESS_COUNT:
      return getSuccessCount();

    case FAIL_COUNT:
      return getFailCount();

    case CANCEL_COUNT:
      return getCancelCount();

    case UNREGISTER_COUNT:
      return getUnregisterCount();

    case TIMESTAMP:
      return getTimestamp();

    case MESSAGE:
      return getMessage();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case REQUEST_ID:
      return isSetRequestId();
    case STATE:
      return isSetState();
    case EVENT_NO:
      return isSetEventNo();
    case RECEIVER_COUNT:
      return isSetReceiverCount();
    case SUCCESS_COUNT:
      return isSetSuccessCount();
    case FAIL_COUNT:
      return isSetFailCount();
    case CANCEL_COUNT:
      return isSetCancelCount();
    case UNREGISTER_COUNT:
      return isSetUnregisterCount();
    case TIMESTAMP:
      return isSetTimestamp();
    case MESSAGE:
      return isSetMessage();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof SetBuddyOnAirResult)
      return this.equals((SetBuddyOnAirResult)that);
    return false;
  }

  public boolean equals(SetBuddyOnAirResult that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_requestId = true && this.isSetRequestId();
    boolean that_present_requestId = true && that.isSetRequestId();
    if (this_present_requestId || that_present_requestId) {
      if (!(this_present_requestId && that_present_requestId))
        return false;
      if (!this.requestId.equals(that.requestId))
        return false;
    }

    boolean this_present_state = true && this.isSetState();
    boolean that_present_state = true && that.isSetState();
    if (this_present_state || that_present_state) {
      if (!(this_present_state && that_present_state))
        return false;
      if (!this.state.equals(that.state))
        return false;
    }

    boolean this_present_eventNo = true;
    boolean that_present_eventNo = true;
    if (this_present_eventNo || that_present_eventNo) {
      if (!(this_present_eventNo && that_present_eventNo))
        return false;
      if (this.eventNo != that.eventNo)
        return false;
    }

    boolean this_present_receiverCount = true;
    boolean that_present_receiverCount = true;
    if (this_present_receiverCount || that_present_receiverCount) {
      if (!(this_present_receiverCount && that_present_receiverCount))
        return false;
      if (this.receiverCount != that.receiverCount)
        return false;
    }

    boolean this_present_successCount = true;
    boolean that_present_successCount = true;
    if (this_present_successCount || that_present_successCount) {
      if (!(this_present_successCount && that_present_successCount))
        return false;
      if (this.successCount != that.successCount)
        return false;
    }

    boolean this_present_failCount = true;
    boolean that_present_failCount = true;
    if (this_present_failCount || that_present_failCount) {
      if (!(this_present_failCount && that_present_failCount))
        return false;
      if (this.failCount != that.failCount)
        return false;
    }

    boolean this_present_cancelCount = true;
    boolean that_present_cancelCount = true;
    if (this_present_cancelCount || that_present_cancelCount) {
      if (!(this_present_cancelCount && that_present_cancelCount))
        return false;
      if (this.cancelCount != that.cancelCount)
        return false;
    }

    boolean this_present_unregisterCount = true;
    boolean that_present_unregisterCount = true;
    if (this_present_unregisterCount || that_present_unregisterCount) {
      if (!(this_present_unregisterCount && that_present_unregisterCount))
        return false;
      if (this.unregisterCount != that.unregisterCount)
        return false;
    }

    boolean this_present_timestamp = true;
    boolean that_present_timestamp = true;
    if (this_present_timestamp || that_present_timestamp) {
      if (!(this_present_timestamp && that_present_timestamp))
        return false;
      if (this.timestamp != that.timestamp)
        return false;
    }

    boolean this_present_message = true && this.isSetMessage();
    boolean that_present_message = true && that.isSetMessage();
    if (this_present_message || that_present_message) {
      if (!(this_present_message && that_present_message))
        return false;
      if (!this.message.equals(that.message))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetRequestId()) ? 131071 : 524287);
    if (isSetRequestId())
      hashCode = hashCode * 8191 + requestId.hashCode();

    hashCode = hashCode * 8191 + ((isSetState()) ? 131071 : 524287);
    if (isSetState())
      hashCode = hashCode * 8191 + state.getValue();

    hashCode = hashCode * 8191 + eventNo;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(receiverCount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(successCount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(failCount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(cancelCount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(unregisterCount);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(timestamp);

    hashCode = hashCode * 8191 + ((isSetMessage()) ? 131071 : 524287);
    if (isSetMessage())
      hashCode = hashCode * 8191 + message.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SetBuddyOnAirResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetRequestId(), other.isSetRequestId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestId, other.requestId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetState(), other.isSetState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.state, other.state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetEventNo(), other.isSetEventNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEventNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.eventNo, other.eventNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetReceiverCount(), other.isSetReceiverCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReceiverCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.receiverCount, other.receiverCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSuccessCount(), other.isSetSuccessCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSuccessCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.successCount, other.successCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetFailCount(), other.isSetFailCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFailCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.failCount, other.failCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCancelCount(), other.isSetCancelCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCancelCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cancelCount, other.cancelCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetUnregisterCount(), other.isSetUnregisterCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnregisterCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.unregisterCount, other.unregisterCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTimestamp(), other.isSetTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timestamp, other.timestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetMessage(), other.isSetMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.message, other.message);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SetBuddyOnAirResult(");
    boolean first = true;

    sb.append("requestId:");
    if (this.requestId == null) {
      sb.append("null");
    } else {
      sb.append(this.requestId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("state:");
    if (this.state == null) {
      sb.append("null");
    } else {
      sb.append(this.state);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("eventNo:");
    sb.append(this.eventNo);
    first = false;
    if (!first) sb.append(", ");
    sb.append("receiverCount:");
    sb.append(this.receiverCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("successCount:");
    sb.append(this.successCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("failCount:");
    sb.append(this.failCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cancelCount:");
    sb.append(this.cancelCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("unregisterCount:");
    sb.append(this.unregisterCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("timestamp:");
    sb.append(this.timestamp);
    first = false;
    if (!first) sb.append(", ");
    sb.append("message:");
    if (this.message == null) {
      sb.append("null");
    } else {
      sb.append(this.message);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SetBuddyOnAirResultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SetBuddyOnAirResultStandardScheme getScheme() {
      return new SetBuddyOnAirResultStandardScheme();
    }
  }

  private static class SetBuddyOnAirResultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SetBuddyOnAirResult> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SetBuddyOnAirResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // REQUEST_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestId = iprot.readString();
              struct.setRequestIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.state = BuddyResultState.findByValue(iprot.readI32());
              struct.setStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // EVENT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.eventNo = iprot.readI32();
              struct.setEventNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // RECEIVER_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.receiverCount = iprot.readI64();
              struct.setReceiverCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SUCCESS_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.successCount = iprot.readI64();
              struct.setSuccessCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // FAIL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.failCount = iprot.readI64();
              struct.setFailCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CANCEL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.cancelCount = iprot.readI64();
              struct.setCancelCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // UNREGISTER_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.unregisterCount = iprot.readI64();
              struct.setUnregisterCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.timestamp = iprot.readI64();
              struct.setTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.message = iprot.readString();
              struct.setMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SetBuddyOnAirResult struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.requestId != null) {
        oprot.writeFieldBegin(REQUEST_ID_FIELD_DESC);
        oprot.writeString(struct.requestId);
        oprot.writeFieldEnd();
      }
      if (struct.state != null) {
        oprot.writeFieldBegin(STATE_FIELD_DESC);
        oprot.writeI32(struct.state.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(EVENT_NO_FIELD_DESC);
      oprot.writeI32(struct.eventNo);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RECEIVER_COUNT_FIELD_DESC);
      oprot.writeI64(struct.receiverCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SUCCESS_COUNT_FIELD_DESC);
      oprot.writeI64(struct.successCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FAIL_COUNT_FIELD_DESC);
      oprot.writeI64(struct.failCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CANCEL_COUNT_FIELD_DESC);
      oprot.writeI64(struct.cancelCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UNREGISTER_COUNT_FIELD_DESC);
      oprot.writeI64(struct.unregisterCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TIMESTAMP_FIELD_DESC);
      oprot.writeI64(struct.timestamp);
      oprot.writeFieldEnd();
      if (struct.message != null) {
        oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
        oprot.writeString(struct.message);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SetBuddyOnAirResultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SetBuddyOnAirResultTupleScheme getScheme() {
      return new SetBuddyOnAirResultTupleScheme();
    }
  }

  private static class SetBuddyOnAirResultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SetBuddyOnAirResult> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SetBuddyOnAirResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetRequestId()) {
        optionals.set(0);
      }
      if (struct.isSetState()) {
        optionals.set(1);
      }
      if (struct.isSetEventNo()) {
        optionals.set(2);
      }
      if (struct.isSetReceiverCount()) {
        optionals.set(3);
      }
      if (struct.isSetSuccessCount()) {
        optionals.set(4);
      }
      if (struct.isSetFailCount()) {
        optionals.set(5);
      }
      if (struct.isSetCancelCount()) {
        optionals.set(6);
      }
      if (struct.isSetUnregisterCount()) {
        optionals.set(7);
      }
      if (struct.isSetTimestamp()) {
        optionals.set(8);
      }
      if (struct.isSetMessage()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetRequestId()) {
        oprot.writeString(struct.requestId);
      }
      if (struct.isSetState()) {
        oprot.writeI32(struct.state.getValue());
      }
      if (struct.isSetEventNo()) {
        oprot.writeI32(struct.eventNo);
      }
      if (struct.isSetReceiverCount()) {
        oprot.writeI64(struct.receiverCount);
      }
      if (struct.isSetSuccessCount()) {
        oprot.writeI64(struct.successCount);
      }
      if (struct.isSetFailCount()) {
        oprot.writeI64(struct.failCount);
      }
      if (struct.isSetCancelCount()) {
        oprot.writeI64(struct.cancelCount);
      }
      if (struct.isSetUnregisterCount()) {
        oprot.writeI64(struct.unregisterCount);
      }
      if (struct.isSetTimestamp()) {
        oprot.writeI64(struct.timestamp);
      }
      if (struct.isSetMessage()) {
        oprot.writeString(struct.message);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SetBuddyOnAirResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.requestId = iprot.readString();
        struct.setRequestIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.state = BuddyResultState.findByValue(iprot.readI32());
        struct.setStateIsSet(true);
      }
      if (incoming.get(2)) {
        struct.eventNo = iprot.readI32();
        struct.setEventNoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.receiverCount = iprot.readI64();
        struct.setReceiverCountIsSet(true);
      }
      if (incoming.get(4)) {
        struct.successCount = iprot.readI64();
        struct.setSuccessCountIsSet(true);
      }
      if (incoming.get(5)) {
        struct.failCount = iprot.readI64();
        struct.setFailCountIsSet(true);
      }
      if (incoming.get(6)) {
        struct.cancelCount = iprot.readI64();
        struct.setCancelCountIsSet(true);
      }
      if (incoming.get(7)) {
        struct.unregisterCount = iprot.readI64();
        struct.setUnregisterCountIsSet(true);
      }
      if (incoming.get(8)) {
        struct.timestamp = iprot.readI64();
        struct.setTimestampIsSet(true);
      }
      if (incoming.get(9)) {
        struct.message = iprot.readString();
        struct.setMessageIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

