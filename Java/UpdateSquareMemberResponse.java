/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.0)", date = "2020-03-23")
public class UpdateSquareMemberResponse implements org.apache.thrift.TBase<UpdateSquareMemberResponse, UpdateSquareMemberResponse._Fields>, java.io.Serializable, Cloneable, Comparable<UpdateSquareMemberResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UpdateSquareMemberResponse");

  private static final org.apache.thrift.protocol.TField UPDATED_ATTRS_FIELD_DESC = new org.apache.thrift.protocol.TField("updatedAttrs", org.apache.thrift.protocol.TType.SET, (short)1);
  private static final org.apache.thrift.protocol.TField SQUARE_MEMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("squareMember", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField UPDATED_PREFERENCE_ATTRS_FIELD_DESC = new org.apache.thrift.protocol.TField("updatedPreferenceAttrs", org.apache.thrift.protocol.TType.SET, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UpdateSquareMemberResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UpdateSquareMemberResponseTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.Set<SquareMemberAttribute> updatedAttrs; // required
  public @org.apache.thrift.annotation.Nullable SquareMember squareMember; // required
  public @org.apache.thrift.annotation.Nullable java.util.Set<SquarePreferenceAttribute> updatedPreferenceAttrs; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UPDATED_ATTRS((short)1, "updatedAttrs"),
    SQUARE_MEMBER((short)2, "squareMember"),
    UPDATED_PREFERENCE_ATTRS((short)3, "updatedPreferenceAttrs");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UPDATED_ATTRS
          return UPDATED_ATTRS;
        case 2: // SQUARE_MEMBER
          return SQUARE_MEMBER;
        case 3: // UPDATED_PREFERENCE_ATTRS
          return UPDATED_PREFERENCE_ATTRS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UPDATED_ATTRS, new org.apache.thrift.meta_data.FieldMetaData("updatedAttrs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberAttribute.class))));
    tmpMap.put(_Fields.SQUARE_MEMBER, new org.apache.thrift.meta_data.FieldMetaData("squareMember", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareMember.class)));
    tmpMap.put(_Fields.UPDATED_PREFERENCE_ATTRS, new org.apache.thrift.meta_data.FieldMetaData("updatedPreferenceAttrs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquarePreferenceAttribute.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UpdateSquareMemberResponse.class, metaDataMap);
  }

  public UpdateSquareMemberResponse() {
  }

  public UpdateSquareMemberResponse(
    java.util.Set<SquareMemberAttribute> updatedAttrs,
    SquareMember squareMember,
    java.util.Set<SquarePreferenceAttribute> updatedPreferenceAttrs)
  {
    this();
    this.updatedAttrs = updatedAttrs;
    this.squareMember = squareMember;
    this.updatedPreferenceAttrs = updatedPreferenceAttrs;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UpdateSquareMemberResponse(UpdateSquareMemberResponse other) {
    if (other.isSetUpdatedAttrs()) {
      java.util.Set<SquareMemberAttribute> __this__updatedAttrs = java.util.EnumSet.noneOf(SquareMemberAttribute.class);
      for (SquareMemberAttribute other_element : other.updatedAttrs) {
        __this__updatedAttrs.add(other_element);
      }
      this.updatedAttrs = __this__updatedAttrs;
    }
    if (other.isSetSquareMember()) {
      this.squareMember = new SquareMember(other.squareMember);
    }
    if (other.isSetUpdatedPreferenceAttrs()) {
      java.util.Set<SquarePreferenceAttribute> __this__updatedPreferenceAttrs = java.util.EnumSet.noneOf(SquarePreferenceAttribute.class);
      for (SquarePreferenceAttribute other_element : other.updatedPreferenceAttrs) {
        __this__updatedPreferenceAttrs.add(other_element);
      }
      this.updatedPreferenceAttrs = __this__updatedPreferenceAttrs;
    }
  }

  public UpdateSquareMemberResponse deepCopy() {
    return new UpdateSquareMemberResponse(this);
  }

  @Override
  public void clear() {
    this.updatedAttrs = null;
    this.squareMember = null;
    this.updatedPreferenceAttrs = null;
  }

  public int getUpdatedAttrsSize() {
    return (this.updatedAttrs == null) ? 0 : this.updatedAttrs.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<SquareMemberAttribute> getUpdatedAttrsIterator() {
    return (this.updatedAttrs == null) ? null : this.updatedAttrs.iterator();
  }

  public void addToUpdatedAttrs(SquareMemberAttribute elem) {
    if (this.updatedAttrs == null) {
      this.updatedAttrs = java.util.EnumSet.noneOf(SquareMemberAttribute.class);
    }
    this.updatedAttrs.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Set<SquareMemberAttribute> getUpdatedAttrs() {
    return this.updatedAttrs;
  }

  public UpdateSquareMemberResponse setUpdatedAttrs(@org.apache.thrift.annotation.Nullable java.util.Set<SquareMemberAttribute> updatedAttrs) {
    this.updatedAttrs = updatedAttrs;
    return this;
  }

  public void unsetUpdatedAttrs() {
    this.updatedAttrs = null;
  }

  /** Returns true if field updatedAttrs is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatedAttrs() {
    return this.updatedAttrs != null;
  }

  public void setUpdatedAttrsIsSet(boolean value) {
    if (!value) {
      this.updatedAttrs = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public SquareMember getSquareMember() {
    return this.squareMember;
  }

  public UpdateSquareMemberResponse setSquareMember(@org.apache.thrift.annotation.Nullable SquareMember squareMember) {
    this.squareMember = squareMember;
    return this;
  }

  public void unsetSquareMember() {
    this.squareMember = null;
  }

  /** Returns true if field squareMember is set (has been assigned a value) and false otherwise */
  public boolean isSetSquareMember() {
    return this.squareMember != null;
  }

  public void setSquareMemberIsSet(boolean value) {
    if (!value) {
      this.squareMember = null;
    }
  }

  public int getUpdatedPreferenceAttrsSize() {
    return (this.updatedPreferenceAttrs == null) ? 0 : this.updatedPreferenceAttrs.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<SquarePreferenceAttribute> getUpdatedPreferenceAttrsIterator() {
    return (this.updatedPreferenceAttrs == null) ? null : this.updatedPreferenceAttrs.iterator();
  }

  public void addToUpdatedPreferenceAttrs(SquarePreferenceAttribute elem) {
    if (this.updatedPreferenceAttrs == null) {
      this.updatedPreferenceAttrs = java.util.EnumSet.noneOf(SquarePreferenceAttribute.class);
    }
    this.updatedPreferenceAttrs.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Set<SquarePreferenceAttribute> getUpdatedPreferenceAttrs() {
    return this.updatedPreferenceAttrs;
  }

  public UpdateSquareMemberResponse setUpdatedPreferenceAttrs(@org.apache.thrift.annotation.Nullable java.util.Set<SquarePreferenceAttribute> updatedPreferenceAttrs) {
    this.updatedPreferenceAttrs = updatedPreferenceAttrs;
    return this;
  }

  public void unsetUpdatedPreferenceAttrs() {
    this.updatedPreferenceAttrs = null;
  }

  /** Returns true if field updatedPreferenceAttrs is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatedPreferenceAttrs() {
    return this.updatedPreferenceAttrs != null;
  }

  public void setUpdatedPreferenceAttrsIsSet(boolean value) {
    if (!value) {
      this.updatedPreferenceAttrs = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case UPDATED_ATTRS:
      if (value == null) {
        unsetUpdatedAttrs();
      } else {
        setUpdatedAttrs((java.util.Set<SquareMemberAttribute>)value);
      }
      break;

    case SQUARE_MEMBER:
      if (value == null) {
        unsetSquareMember();
      } else {
        setSquareMember((SquareMember)value);
      }
      break;

    case UPDATED_PREFERENCE_ATTRS:
      if (value == null) {
        unsetUpdatedPreferenceAttrs();
      } else {
        setUpdatedPreferenceAttrs((java.util.Set<SquarePreferenceAttribute>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case UPDATED_ATTRS:
      return getUpdatedAttrs();

    case SQUARE_MEMBER:
      return getSquareMember();

    case UPDATED_PREFERENCE_ATTRS:
      return getUpdatedPreferenceAttrs();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case UPDATED_ATTRS:
      return isSetUpdatedAttrs();
    case SQUARE_MEMBER:
      return isSetSquareMember();
    case UPDATED_PREFERENCE_ATTRS:
      return isSetUpdatedPreferenceAttrs();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof UpdateSquareMemberResponse)
      return this.equals((UpdateSquareMemberResponse)that);
    return false;
  }

  public boolean equals(UpdateSquareMemberResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_updatedAttrs = true && this.isSetUpdatedAttrs();
    boolean that_present_updatedAttrs = true && that.isSetUpdatedAttrs();
    if (this_present_updatedAttrs || that_present_updatedAttrs) {
      if (!(this_present_updatedAttrs && that_present_updatedAttrs))
        return false;
      if (!this.updatedAttrs.equals(that.updatedAttrs))
        return false;
    }

    boolean this_present_squareMember = true && this.isSetSquareMember();
    boolean that_present_squareMember = true && that.isSetSquareMember();
    if (this_present_squareMember || that_present_squareMember) {
      if (!(this_present_squareMember && that_present_squareMember))
        return false;
      if (!this.squareMember.equals(that.squareMember))
        return false;
    }

    boolean this_present_updatedPreferenceAttrs = true && this.isSetUpdatedPreferenceAttrs();
    boolean that_present_updatedPreferenceAttrs = true && that.isSetUpdatedPreferenceAttrs();
    if (this_present_updatedPreferenceAttrs || that_present_updatedPreferenceAttrs) {
      if (!(this_present_updatedPreferenceAttrs && that_present_updatedPreferenceAttrs))
        return false;
      if (!this.updatedPreferenceAttrs.equals(that.updatedPreferenceAttrs))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetUpdatedAttrs()) ? 131071 : 524287);
    if (isSetUpdatedAttrs())
      hashCode = hashCode * 8191 + updatedAttrs.hashCode();

    hashCode = hashCode * 8191 + ((isSetSquareMember()) ? 131071 : 524287);
    if (isSetSquareMember())
      hashCode = hashCode * 8191 + squareMember.hashCode();

    hashCode = hashCode * 8191 + ((isSetUpdatedPreferenceAttrs()) ? 131071 : 524287);
    if (isSetUpdatedPreferenceAttrs())
      hashCode = hashCode * 8191 + updatedPreferenceAttrs.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(UpdateSquareMemberResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetUpdatedAttrs(), other.isSetUpdatedAttrs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatedAttrs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatedAttrs, other.updatedAttrs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSquareMember(), other.isSetSquareMember());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSquareMember()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.squareMember, other.squareMember);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetUpdatedPreferenceAttrs(), other.isSetUpdatedPreferenceAttrs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatedPreferenceAttrs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatedPreferenceAttrs, other.updatedPreferenceAttrs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("UpdateSquareMemberResponse(");
    boolean first = true;

    sb.append("updatedAttrs:");
    if (this.updatedAttrs == null) {
      sb.append("null");
    } else {
      sb.append(this.updatedAttrs);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("squareMember:");
    if (this.squareMember == null) {
      sb.append("null");
    } else {
      sb.append(this.squareMember);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updatedPreferenceAttrs:");
    if (this.updatedPreferenceAttrs == null) {
      sb.append("null");
    } else {
      sb.append(this.updatedPreferenceAttrs);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (squareMember != null) {
      squareMember.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UpdateSquareMemberResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UpdateSquareMemberResponseStandardScheme getScheme() {
      return new UpdateSquareMemberResponseStandardScheme();
    }
  }

  private static class UpdateSquareMemberResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<UpdateSquareMemberResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UpdateSquareMemberResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UPDATED_ATTRS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set850 = iprot.readSetBegin();
                struct.updatedAttrs = java.util.EnumSet.noneOf(SquareMemberAttribute.class);
                @org.apache.thrift.annotation.Nullable SquareMemberAttribute _elem851;
                for (int _i852 = 0; _i852 < _set850.size; ++_i852)
                {
                  _elem851 = SquareMemberAttribute.findByValue(iprot.readI32());
                  if (_elem851 != null)
                  {
                    struct.updatedAttrs.add(_elem851);
                  }
                }
                iprot.readSetEnd();
              }
              struct.setUpdatedAttrsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SQUARE_MEMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.squareMember = new SquareMember();
              struct.squareMember.read(iprot);
              struct.setSquareMemberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // UPDATED_PREFERENCE_ATTRS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set853 = iprot.readSetBegin();
                struct.updatedPreferenceAttrs = java.util.EnumSet.noneOf(SquarePreferenceAttribute.class);
                @org.apache.thrift.annotation.Nullable SquarePreferenceAttribute _elem854;
                for (int _i855 = 0; _i855 < _set853.size; ++_i855)
                {
                  _elem854 = SquarePreferenceAttribute.findByValue(iprot.readI32());
                  if (_elem854 != null)
                  {
                    struct.updatedPreferenceAttrs.add(_elem854);
                  }
                }
                iprot.readSetEnd();
              }
              struct.setUpdatedPreferenceAttrsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UpdateSquareMemberResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.updatedAttrs != null) {
        oprot.writeFieldBegin(UPDATED_ATTRS_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.updatedAttrs.size()));
          for (SquareMemberAttribute _iter856 : struct.updatedAttrs)
          {
            oprot.writeI32(_iter856.getValue());
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.squareMember != null) {
        oprot.writeFieldBegin(SQUARE_MEMBER_FIELD_DESC);
        struct.squareMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.updatedPreferenceAttrs != null) {
        oprot.writeFieldBegin(UPDATED_PREFERENCE_ATTRS_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.updatedPreferenceAttrs.size()));
          for (SquarePreferenceAttribute _iter857 : struct.updatedPreferenceAttrs)
          {
            oprot.writeI32(_iter857.getValue());
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UpdateSquareMemberResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UpdateSquareMemberResponseTupleScheme getScheme() {
      return new UpdateSquareMemberResponseTupleScheme();
    }
  }

  private static class UpdateSquareMemberResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<UpdateSquareMemberResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UpdateSquareMemberResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetUpdatedAttrs()) {
        optionals.set(0);
      }
      if (struct.isSetSquareMember()) {
        optionals.set(1);
      }
      if (struct.isSetUpdatedPreferenceAttrs()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetUpdatedAttrs()) {
        {
          oprot.writeI32(struct.updatedAttrs.size());
          for (SquareMemberAttribute _iter858 : struct.updatedAttrs)
          {
            oprot.writeI32(_iter858.getValue());
          }
        }
      }
      if (struct.isSetSquareMember()) {
        struct.squareMember.write(oprot);
      }
      if (struct.isSetUpdatedPreferenceAttrs()) {
        {
          oprot.writeI32(struct.updatedPreferenceAttrs.size());
          for (SquarePreferenceAttribute _iter859 : struct.updatedPreferenceAttrs)
          {
            oprot.writeI32(_iter859.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UpdateSquareMemberResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TSet _set860 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.updatedAttrs = java.util.EnumSet.noneOf(SquareMemberAttribute.class);
          @org.apache.thrift.annotation.Nullable SquareMemberAttribute _elem861;
          for (int _i862 = 0; _i862 < _set860.size; ++_i862)
          {
            _elem861 = SquareMemberAttribute.findByValue(iprot.readI32());
            if (_elem861 != null)
            {
              struct.updatedAttrs.add(_elem861);
            }
          }
        }
        struct.setUpdatedAttrsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.squareMember = new SquareMember();
        struct.squareMember.read(iprot);
        struct.setSquareMemberIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TSet _set863 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.updatedPreferenceAttrs = java.util.EnumSet.noneOf(SquarePreferenceAttribute.class);
          @org.apache.thrift.annotation.Nullable SquarePreferenceAttribute _elem864;
          for (int _i865 = 0; _i865 < _set863.size; ++_i865)
          {
            _elem864 = SquarePreferenceAttribute.findByValue(iprot.readI32());
            if (_elem864 != null)
            {
              struct.updatedPreferenceAttrs.add(_elem864);
            }
          }
        }
        struct.setUpdatedPreferenceAttrsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

