/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-17")
public class SquareMember implements org.apache.thrift.TBase<SquareMember, SquareMember._Fields>, java.io.Serializable, Cloneable, Comparable<SquareMember> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SquareMember");

  private static final org.apache.thrift.protocol.TField SQUARE_MEMBER_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("squareMemberMid", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SQUARE_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("squareMid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DISPLAY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("displayName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PROFILE_IMAGE_OBS_HASH_FIELD_DESC = new org.apache.thrift.protocol.TField("profileImageObsHash", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ABLE_TO_RECEIVE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("ableToReceiveMessage", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField MEMBERSHIP_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("membershipState", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField ROLE_FIELD_DESC = new org.apache.thrift.protocol.TField("role", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField REVISION_FIELD_DESC = new org.apache.thrift.protocol.TField("revision", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField PREFERENCE_FIELD_DESC = new org.apache.thrift.protocol.TField("preference", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField JOIN_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("joinMessage", org.apache.thrift.protocol.TType.STRING, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SquareMemberStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SquareMemberTupleSchemeFactory();

  public java.lang.String squareMemberMid; // required
  public java.lang.String squareMid; // required
  public java.lang.String displayName; // required
  public java.lang.String profileImageObsHash; // required
  public boolean ableToReceiveMessage; // required
  /**
   * 
   * @see SquareMembershipState
   */
  public SquareMembershipState membershipState; // required
  /**
   * 
   * @see SquareMemberRole
   */
  public SquareMemberRole role; // required
  public long revision; // required
  public SquarePreference preference; // required
  public java.lang.String joinMessage; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SQUARE_MEMBER_MID((short)1, "squareMemberMid"),
    SQUARE_MID((short)2, "squareMid"),
    DISPLAY_NAME((short)3, "displayName"),
    PROFILE_IMAGE_OBS_HASH((short)4, "profileImageObsHash"),
    ABLE_TO_RECEIVE_MESSAGE((short)5, "ableToReceiveMessage"),
    /**
     * 
     * @see SquareMembershipState
     */
    MEMBERSHIP_STATE((short)7, "membershipState"),
    /**
     * 
     * @see SquareMemberRole
     */
    ROLE((short)8, "role"),
    REVISION((short)9, "revision"),
    PREFERENCE((short)10, "preference"),
    JOIN_MESSAGE((short)11, "joinMessage");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SQUARE_MEMBER_MID
          return SQUARE_MEMBER_MID;
        case 2: // SQUARE_MID
          return SQUARE_MID;
        case 3: // DISPLAY_NAME
          return DISPLAY_NAME;
        case 4: // PROFILE_IMAGE_OBS_HASH
          return PROFILE_IMAGE_OBS_HASH;
        case 5: // ABLE_TO_RECEIVE_MESSAGE
          return ABLE_TO_RECEIVE_MESSAGE;
        case 7: // MEMBERSHIP_STATE
          return MEMBERSHIP_STATE;
        case 8: // ROLE
          return ROLE;
        case 9: // REVISION
          return REVISION;
        case 10: // PREFERENCE
          return PREFERENCE;
        case 11: // JOIN_MESSAGE
          return JOIN_MESSAGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ABLETORECEIVEMESSAGE_ISSET_ID = 0;
  private static final int __REVISION_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SQUARE_MEMBER_MID, new org.apache.thrift.meta_data.FieldMetaData("squareMemberMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SQUARE_MID, new org.apache.thrift.meta_data.FieldMetaData("squareMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISPLAY_NAME, new org.apache.thrift.meta_data.FieldMetaData("displayName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROFILE_IMAGE_OBS_HASH, new org.apache.thrift.meta_data.FieldMetaData("profileImageObsHash", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ABLE_TO_RECEIVE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("ableToReceiveMessage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MEMBERSHIP_STATE, new org.apache.thrift.meta_data.FieldMetaData("membershipState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMembershipState.class)));
    tmpMap.put(_Fields.ROLE, new org.apache.thrift.meta_data.FieldMetaData("role", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class)));
    tmpMap.put(_Fields.REVISION, new org.apache.thrift.meta_data.FieldMetaData("revision", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PREFERENCE, new org.apache.thrift.meta_data.FieldMetaData("preference", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquarePreference.class)));
    tmpMap.put(_Fields.JOIN_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("joinMessage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SquareMember.class, metaDataMap);
  }

  public SquareMember() {
  }

  public SquareMember(
    java.lang.String squareMemberMid,
    java.lang.String squareMid,
    java.lang.String displayName,
    java.lang.String profileImageObsHash,
    boolean ableToReceiveMessage,
    SquareMembershipState membershipState,
    SquareMemberRole role,
    long revision,
    SquarePreference preference,
    java.lang.String joinMessage)
  {
    this();
    this.squareMemberMid = squareMemberMid;
    this.squareMid = squareMid;
    this.displayName = displayName;
    this.profileImageObsHash = profileImageObsHash;
    this.ableToReceiveMessage = ableToReceiveMessage;
    setAbleToReceiveMessageIsSet(true);
    this.membershipState = membershipState;
    this.role = role;
    this.revision = revision;
    setRevisionIsSet(true);
    this.preference = preference;
    this.joinMessage = joinMessage;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SquareMember(SquareMember other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetSquareMemberMid()) {
      this.squareMemberMid = other.squareMemberMid;
    }
    if (other.isSetSquareMid()) {
      this.squareMid = other.squareMid;
    }
    if (other.isSetDisplayName()) {
      this.displayName = other.displayName;
    }
    if (other.isSetProfileImageObsHash()) {
      this.profileImageObsHash = other.profileImageObsHash;
    }
    this.ableToReceiveMessage = other.ableToReceiveMessage;
    if (other.isSetMembershipState()) {
      this.membershipState = other.membershipState;
    }
    if (other.isSetRole()) {
      this.role = other.role;
    }
    this.revision = other.revision;
    if (other.isSetPreference()) {
      this.preference = new SquarePreference(other.preference);
    }
    if (other.isSetJoinMessage()) {
      this.joinMessage = other.joinMessage;
    }
  }

  public SquareMember deepCopy() {
    return new SquareMember(this);
  }

  @Override
  public void clear() {
    this.squareMemberMid = null;
    this.squareMid = null;
    this.displayName = null;
    this.profileImageObsHash = null;
    setAbleToReceiveMessageIsSet(false);
    this.ableToReceiveMessage = false;
    this.membershipState = null;
    this.role = null;
    setRevisionIsSet(false);
    this.revision = 0;
    this.preference = null;
    this.joinMessage = null;
  }

  public java.lang.String getSquareMemberMid() {
    return this.squareMemberMid;
  }

  public SquareMember setSquareMemberMid(java.lang.String squareMemberMid) {
    this.squareMemberMid = squareMemberMid;
    return this;
  }

  public void unsetSquareMemberMid() {
    this.squareMemberMid = null;
  }

  /** Returns true if field squareMemberMid is set (has been assigned a value) and false otherwise */
  public boolean isSetSquareMemberMid() {
    return this.squareMemberMid != null;
  }

  public void setSquareMemberMidIsSet(boolean value) {
    if (!value) {
      this.squareMemberMid = null;
    }
  }

  public java.lang.String getSquareMid() {
    return this.squareMid;
  }

  public SquareMember setSquareMid(java.lang.String squareMid) {
    this.squareMid = squareMid;
    return this;
  }

  public void unsetSquareMid() {
    this.squareMid = null;
  }

  /** Returns true if field squareMid is set (has been assigned a value) and false otherwise */
  public boolean isSetSquareMid() {
    return this.squareMid != null;
  }

  public void setSquareMidIsSet(boolean value) {
    if (!value) {
      this.squareMid = null;
    }
  }

  public java.lang.String getDisplayName() {
    return this.displayName;
  }

  public SquareMember setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  public void unsetDisplayName() {
    this.displayName = null;
  }

  /** Returns true if field displayName is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayName() {
    return this.displayName != null;
  }

  public void setDisplayNameIsSet(boolean value) {
    if (!value) {
      this.displayName = null;
    }
  }

  public java.lang.String getProfileImageObsHash() {
    return this.profileImageObsHash;
  }

  public SquareMember setProfileImageObsHash(java.lang.String profileImageObsHash) {
    this.profileImageObsHash = profileImageObsHash;
    return this;
  }

  public void unsetProfileImageObsHash() {
    this.profileImageObsHash = null;
  }

  /** Returns true if field profileImageObsHash is set (has been assigned a value) and false otherwise */
  public boolean isSetProfileImageObsHash() {
    return this.profileImageObsHash != null;
  }

  public void setProfileImageObsHashIsSet(boolean value) {
    if (!value) {
      this.profileImageObsHash = null;
    }
  }

  public boolean isAbleToReceiveMessage() {
    return this.ableToReceiveMessage;
  }

  public SquareMember setAbleToReceiveMessage(boolean ableToReceiveMessage) {
    this.ableToReceiveMessage = ableToReceiveMessage;
    setAbleToReceiveMessageIsSet(true);
    return this;
  }

  public void unsetAbleToReceiveMessage() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ABLETORECEIVEMESSAGE_ISSET_ID);
  }

  /** Returns true if field ableToReceiveMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetAbleToReceiveMessage() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ABLETORECEIVEMESSAGE_ISSET_ID);
  }

  public void setAbleToReceiveMessageIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ABLETORECEIVEMESSAGE_ISSET_ID, value);
  }

  /**
   * 
   * @see SquareMembershipState
   */
  public SquareMembershipState getMembershipState() {
    return this.membershipState;
  }

  /**
   * 
   * @see SquareMembershipState
   */
  public SquareMember setMembershipState(SquareMembershipState membershipState) {
    this.membershipState = membershipState;
    return this;
  }

  public void unsetMembershipState() {
    this.membershipState = null;
  }

  /** Returns true if field membershipState is set (has been assigned a value) and false otherwise */
  public boolean isSetMembershipState() {
    return this.membershipState != null;
  }

  public void setMembershipStateIsSet(boolean value) {
    if (!value) {
      this.membershipState = null;
    }
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareMemberRole getRole() {
    return this.role;
  }

  /**
   * 
   * @see SquareMemberRole
   */
  public SquareMember setRole(SquareMemberRole role) {
    this.role = role;
    return this;
  }

  public void unsetRole() {
    this.role = null;
  }

  /** Returns true if field role is set (has been assigned a value) and false otherwise */
  public boolean isSetRole() {
    return this.role != null;
  }

  public void setRoleIsSet(boolean value) {
    if (!value) {
      this.role = null;
    }
  }

  public long getRevision() {
    return this.revision;
  }

  public SquareMember setRevision(long revision) {
    this.revision = revision;
    setRevisionIsSet(true);
    return this;
  }

  public void unsetRevision() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REVISION_ISSET_ID);
  }

  /** Returns true if field revision is set (has been assigned a value) and false otherwise */
  public boolean isSetRevision() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REVISION_ISSET_ID);
  }

  public void setRevisionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REVISION_ISSET_ID, value);
  }

  public SquarePreference getPreference() {
    return this.preference;
  }

  public SquareMember setPreference(SquarePreference preference) {
    this.preference = preference;
    return this;
  }

  public void unsetPreference() {
    this.preference = null;
  }

  /** Returns true if field preference is set (has been assigned a value) and false otherwise */
  public boolean isSetPreference() {
    return this.preference != null;
  }

  public void setPreferenceIsSet(boolean value) {
    if (!value) {
      this.preference = null;
    }
  }

  public java.lang.String getJoinMessage() {
    return this.joinMessage;
  }

  public SquareMember setJoinMessage(java.lang.String joinMessage) {
    this.joinMessage = joinMessage;
    return this;
  }

  public void unsetJoinMessage() {
    this.joinMessage = null;
  }

  /** Returns true if field joinMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetJoinMessage() {
    return this.joinMessage != null;
  }

  public void setJoinMessageIsSet(boolean value) {
    if (!value) {
      this.joinMessage = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case SQUARE_MEMBER_MID:
      if (value == null) {
        unsetSquareMemberMid();
      } else {
        setSquareMemberMid((java.lang.String)value);
      }
      break;

    case SQUARE_MID:
      if (value == null) {
        unsetSquareMid();
      } else {
        setSquareMid((java.lang.String)value);
      }
      break;

    case DISPLAY_NAME:
      if (value == null) {
        unsetDisplayName();
      } else {
        setDisplayName((java.lang.String)value);
      }
      break;

    case PROFILE_IMAGE_OBS_HASH:
      if (value == null) {
        unsetProfileImageObsHash();
      } else {
        setProfileImageObsHash((java.lang.String)value);
      }
      break;

    case ABLE_TO_RECEIVE_MESSAGE:
      if (value == null) {
        unsetAbleToReceiveMessage();
      } else {
        setAbleToReceiveMessage((java.lang.Boolean)value);
      }
      break;

    case MEMBERSHIP_STATE:
      if (value == null) {
        unsetMembershipState();
      } else {
        setMembershipState((SquareMembershipState)value);
      }
      break;

    case ROLE:
      if (value == null) {
        unsetRole();
      } else {
        setRole((SquareMemberRole)value);
      }
      break;

    case REVISION:
      if (value == null) {
        unsetRevision();
      } else {
        setRevision((java.lang.Long)value);
      }
      break;

    case PREFERENCE:
      if (value == null) {
        unsetPreference();
      } else {
        setPreference((SquarePreference)value);
      }
      break;

    case JOIN_MESSAGE:
      if (value == null) {
        unsetJoinMessage();
      } else {
        setJoinMessage((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SQUARE_MEMBER_MID:
      return getSquareMemberMid();

    case SQUARE_MID:
      return getSquareMid();

    case DISPLAY_NAME:
      return getDisplayName();

    case PROFILE_IMAGE_OBS_HASH:
      return getProfileImageObsHash();

    case ABLE_TO_RECEIVE_MESSAGE:
      return isAbleToReceiveMessage();

    case MEMBERSHIP_STATE:
      return getMembershipState();

    case ROLE:
      return getRole();

    case REVISION:
      return getRevision();

    case PREFERENCE:
      return getPreference();

    case JOIN_MESSAGE:
      return getJoinMessage();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SQUARE_MEMBER_MID:
      return isSetSquareMemberMid();
    case SQUARE_MID:
      return isSetSquareMid();
    case DISPLAY_NAME:
      return isSetDisplayName();
    case PROFILE_IMAGE_OBS_HASH:
      return isSetProfileImageObsHash();
    case ABLE_TO_RECEIVE_MESSAGE:
      return isSetAbleToReceiveMessage();
    case MEMBERSHIP_STATE:
      return isSetMembershipState();
    case ROLE:
      return isSetRole();
    case REVISION:
      return isSetRevision();
    case PREFERENCE:
      return isSetPreference();
    case JOIN_MESSAGE:
      return isSetJoinMessage();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SquareMember)
      return this.equals((SquareMember)that);
    return false;
  }

  public boolean equals(SquareMember that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_squareMemberMid = true && this.isSetSquareMemberMid();
    boolean that_present_squareMemberMid = true && that.isSetSquareMemberMid();
    if (this_present_squareMemberMid || that_present_squareMemberMid) {
      if (!(this_present_squareMemberMid && that_present_squareMemberMid))
        return false;
      if (!this.squareMemberMid.equals(that.squareMemberMid))
        return false;
    }

    boolean this_present_squareMid = true && this.isSetSquareMid();
    boolean that_present_squareMid = true && that.isSetSquareMid();
    if (this_present_squareMid || that_present_squareMid) {
      if (!(this_present_squareMid && that_present_squareMid))
        return false;
      if (!this.squareMid.equals(that.squareMid))
        return false;
    }

    boolean this_present_displayName = true && this.isSetDisplayName();
    boolean that_present_displayName = true && that.isSetDisplayName();
    if (this_present_displayName || that_present_displayName) {
      if (!(this_present_displayName && that_present_displayName))
        return false;
      if (!this.displayName.equals(that.displayName))
        return false;
    }

    boolean this_present_profileImageObsHash = true && this.isSetProfileImageObsHash();
    boolean that_present_profileImageObsHash = true && that.isSetProfileImageObsHash();
    if (this_present_profileImageObsHash || that_present_profileImageObsHash) {
      if (!(this_present_profileImageObsHash && that_present_profileImageObsHash))
        return false;
      if (!this.profileImageObsHash.equals(that.profileImageObsHash))
        return false;
    }

    boolean this_present_ableToReceiveMessage = true;
    boolean that_present_ableToReceiveMessage = true;
    if (this_present_ableToReceiveMessage || that_present_ableToReceiveMessage) {
      if (!(this_present_ableToReceiveMessage && that_present_ableToReceiveMessage))
        return false;
      if (this.ableToReceiveMessage != that.ableToReceiveMessage)
        return false;
    }

    boolean this_present_membershipState = true && this.isSetMembershipState();
    boolean that_present_membershipState = true && that.isSetMembershipState();
    if (this_present_membershipState || that_present_membershipState) {
      if (!(this_present_membershipState && that_present_membershipState))
        return false;
      if (!this.membershipState.equals(that.membershipState))
        return false;
    }

    boolean this_present_role = true && this.isSetRole();
    boolean that_present_role = true && that.isSetRole();
    if (this_present_role || that_present_role) {
      if (!(this_present_role && that_present_role))
        return false;
      if (!this.role.equals(that.role))
        return false;
    }

    boolean this_present_revision = true;
    boolean that_present_revision = true;
    if (this_present_revision || that_present_revision) {
      if (!(this_present_revision && that_present_revision))
        return false;
      if (this.revision != that.revision)
        return false;
    }

    boolean this_present_preference = true && this.isSetPreference();
    boolean that_present_preference = true && that.isSetPreference();
    if (this_present_preference || that_present_preference) {
      if (!(this_present_preference && that_present_preference))
        return false;
      if (!this.preference.equals(that.preference))
        return false;
    }

    boolean this_present_joinMessage = true && this.isSetJoinMessage();
    boolean that_present_joinMessage = true && that.isSetJoinMessage();
    if (this_present_joinMessage || that_present_joinMessage) {
      if (!(this_present_joinMessage && that_present_joinMessage))
        return false;
      if (!this.joinMessage.equals(that.joinMessage))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSquareMemberMid()) ? 131071 : 524287);
    if (isSetSquareMemberMid())
      hashCode = hashCode * 8191 + squareMemberMid.hashCode();

    hashCode = hashCode * 8191 + ((isSetSquareMid()) ? 131071 : 524287);
    if (isSetSquareMid())
      hashCode = hashCode * 8191 + squareMid.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisplayName()) ? 131071 : 524287);
    if (isSetDisplayName())
      hashCode = hashCode * 8191 + displayName.hashCode();

    hashCode = hashCode * 8191 + ((isSetProfileImageObsHash()) ? 131071 : 524287);
    if (isSetProfileImageObsHash())
      hashCode = hashCode * 8191 + profileImageObsHash.hashCode();

    hashCode = hashCode * 8191 + ((ableToReceiveMessage) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetMembershipState()) ? 131071 : 524287);
    if (isSetMembershipState())
      hashCode = hashCode * 8191 + membershipState.getValue();

    hashCode = hashCode * 8191 + ((isSetRole()) ? 131071 : 524287);
    if (isSetRole())
      hashCode = hashCode * 8191 + role.getValue();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(revision);

    hashCode = hashCode * 8191 + ((isSetPreference()) ? 131071 : 524287);
    if (isSetPreference())
      hashCode = hashCode * 8191 + preference.hashCode();

    hashCode = hashCode * 8191 + ((isSetJoinMessage()) ? 131071 : 524287);
    if (isSetJoinMessage())
      hashCode = hashCode * 8191 + joinMessage.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SquareMember other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetSquareMemberMid()).compareTo(other.isSetSquareMemberMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSquareMemberMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.squareMemberMid, other.squareMemberMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSquareMid()).compareTo(other.isSetSquareMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSquareMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.squareMid, other.squareMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDisplayName()).compareTo(other.isSetDisplayName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayName, other.displayName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProfileImageObsHash()).compareTo(other.isSetProfileImageObsHash());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfileImageObsHash()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profileImageObsHash, other.profileImageObsHash);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAbleToReceiveMessage()).compareTo(other.isSetAbleToReceiveMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAbleToReceiveMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ableToReceiveMessage, other.ableToReceiveMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMembershipState()).compareTo(other.isSetMembershipState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMembershipState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.membershipState, other.membershipState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRole()).compareTo(other.isSetRole());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRole()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.role, other.role);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRevision()).compareTo(other.isSetRevision());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRevision()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.revision, other.revision);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPreference()).compareTo(other.isSetPreference());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPreference()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.preference, other.preference);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJoinMessage()).compareTo(other.isSetJoinMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJoinMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joinMessage, other.joinMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SquareMember(");
    boolean first = true;

    sb.append("squareMemberMid:");
    if (this.squareMemberMid == null) {
      sb.append("null");
    } else {
      sb.append(this.squareMemberMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("squareMid:");
    if (this.squareMid == null) {
      sb.append("null");
    } else {
      sb.append(this.squareMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayName:");
    if (this.displayName == null) {
      sb.append("null");
    } else {
      sb.append(this.displayName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("profileImageObsHash:");
    if (this.profileImageObsHash == null) {
      sb.append("null");
    } else {
      sb.append(this.profileImageObsHash);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ableToReceiveMessage:");
    sb.append(this.ableToReceiveMessage);
    first = false;
    if (!first) sb.append(", ");
    sb.append("membershipState:");
    if (this.membershipState == null) {
      sb.append("null");
    } else {
      sb.append(this.membershipState);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("role:");
    if (this.role == null) {
      sb.append("null");
    } else {
      sb.append(this.role);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("revision:");
    sb.append(this.revision);
    first = false;
    if (!first) sb.append(", ");
    sb.append("preference:");
    if (this.preference == null) {
      sb.append("null");
    } else {
      sb.append(this.preference);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("joinMessage:");
    if (this.joinMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.joinMessage);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (preference != null) {
      preference.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SquareMemberStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SquareMemberStandardScheme getScheme() {
      return new SquareMemberStandardScheme();
    }
  }

  private static class SquareMemberStandardScheme extends org.apache.thrift.scheme.StandardScheme<SquareMember> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SquareMember struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SQUARE_MEMBER_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.squareMemberMid = iprot.readString();
              struct.setSquareMemberMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SQUARE_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.squareMid = iprot.readString();
              struct.setSquareMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DISPLAY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.displayName = iprot.readString();
              struct.setDisplayNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROFILE_IMAGE_OBS_HASH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.profileImageObsHash = iprot.readString();
              struct.setProfileImageObsHashIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ABLE_TO_RECEIVE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.ableToReceiveMessage = iprot.readBool();
              struct.setAbleToReceiveMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MEMBERSHIP_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.membershipState = SquareMembershipState.findByValue(iprot.readI32());
              struct.setMembershipStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ROLE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.role = SquareMemberRole.findByValue(iprot.readI32());
              struct.setRoleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // REVISION
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.revision = iprot.readI64();
              struct.setRevisionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PREFERENCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.preference = new SquarePreference();
              struct.preference.read(iprot);
              struct.setPreferenceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // JOIN_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.joinMessage = iprot.readString();
              struct.setJoinMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SquareMember struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.squareMemberMid != null) {
        oprot.writeFieldBegin(SQUARE_MEMBER_MID_FIELD_DESC);
        oprot.writeString(struct.squareMemberMid);
        oprot.writeFieldEnd();
      }
      if (struct.squareMid != null) {
        oprot.writeFieldBegin(SQUARE_MID_FIELD_DESC);
        oprot.writeString(struct.squareMid);
        oprot.writeFieldEnd();
      }
      if (struct.displayName != null) {
        oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
        oprot.writeString(struct.displayName);
        oprot.writeFieldEnd();
      }
      if (struct.profileImageObsHash != null) {
        oprot.writeFieldBegin(PROFILE_IMAGE_OBS_HASH_FIELD_DESC);
        oprot.writeString(struct.profileImageObsHash);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ABLE_TO_RECEIVE_MESSAGE_FIELD_DESC);
      oprot.writeBool(struct.ableToReceiveMessage);
      oprot.writeFieldEnd();
      if (struct.membershipState != null) {
        oprot.writeFieldBegin(MEMBERSHIP_STATE_FIELD_DESC);
        oprot.writeI32(struct.membershipState.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.role != null) {
        oprot.writeFieldBegin(ROLE_FIELD_DESC);
        oprot.writeI32(struct.role.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REVISION_FIELD_DESC);
      oprot.writeI64(struct.revision);
      oprot.writeFieldEnd();
      if (struct.preference != null) {
        oprot.writeFieldBegin(PREFERENCE_FIELD_DESC);
        struct.preference.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.joinMessage != null) {
        oprot.writeFieldBegin(JOIN_MESSAGE_FIELD_DESC);
        oprot.writeString(struct.joinMessage);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SquareMemberTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SquareMemberTupleScheme getScheme() {
      return new SquareMemberTupleScheme();
    }
  }

  private static class SquareMemberTupleScheme extends org.apache.thrift.scheme.TupleScheme<SquareMember> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SquareMember struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSquareMemberMid()) {
        optionals.set(0);
      }
      if (struct.isSetSquareMid()) {
        optionals.set(1);
      }
      if (struct.isSetDisplayName()) {
        optionals.set(2);
      }
      if (struct.isSetProfileImageObsHash()) {
        optionals.set(3);
      }
      if (struct.isSetAbleToReceiveMessage()) {
        optionals.set(4);
      }
      if (struct.isSetMembershipState()) {
        optionals.set(5);
      }
      if (struct.isSetRole()) {
        optionals.set(6);
      }
      if (struct.isSetRevision()) {
        optionals.set(7);
      }
      if (struct.isSetPreference()) {
        optionals.set(8);
      }
      if (struct.isSetJoinMessage()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetSquareMemberMid()) {
        oprot.writeString(struct.squareMemberMid);
      }
      if (struct.isSetSquareMid()) {
        oprot.writeString(struct.squareMid);
      }
      if (struct.isSetDisplayName()) {
        oprot.writeString(struct.displayName);
      }
      if (struct.isSetProfileImageObsHash()) {
        oprot.writeString(struct.profileImageObsHash);
      }
      if (struct.isSetAbleToReceiveMessage()) {
        oprot.writeBool(struct.ableToReceiveMessage);
      }
      if (struct.isSetMembershipState()) {
        oprot.writeI32(struct.membershipState.getValue());
      }
      if (struct.isSetRole()) {
        oprot.writeI32(struct.role.getValue());
      }
      if (struct.isSetRevision()) {
        oprot.writeI64(struct.revision);
      }
      if (struct.isSetPreference()) {
        struct.preference.write(oprot);
      }
      if (struct.isSetJoinMessage()) {
        oprot.writeString(struct.joinMessage);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SquareMember struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.squareMemberMid = iprot.readString();
        struct.setSquareMemberMidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.squareMid = iprot.readString();
        struct.setSquareMidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.displayName = iprot.readString();
        struct.setDisplayNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.profileImageObsHash = iprot.readString();
        struct.setProfileImageObsHashIsSet(true);
      }
      if (incoming.get(4)) {
        struct.ableToReceiveMessage = iprot.readBool();
        struct.setAbleToReceiveMessageIsSet(true);
      }
      if (incoming.get(5)) {
        struct.membershipState = SquareMembershipState.findByValue(iprot.readI32());
        struct.setMembershipStateIsSet(true);
      }
      if (incoming.get(6)) {
        struct.role = SquareMemberRole.findByValue(iprot.readI32());
        struct.setRoleIsSet(true);
      }
      if (incoming.get(7)) {
        struct.revision = iprot.readI64();
        struct.setRevisionIsSet(true);
      }
      if (incoming.get(8)) {
        struct.preference = new SquarePreference();
        struct.preference.read(iprot);
        struct.setPreferenceIsSet(true);
      }
      if (incoming.get(9)) {
        struct.joinMessage = iprot.readString();
        struct.setJoinMessageIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

