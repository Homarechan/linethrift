/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.14.0)", date = "2020-03-23")
public class ChatRoomAnnouncementContents implements org.apache.thrift.TBase<ChatRoomAnnouncementContents, ChatRoomAnnouncementContents._Fields>, java.io.Serializable, Cloneable, Comparable<ChatRoomAnnouncementContents> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ChatRoomAnnouncementContents");

  private static final org.apache.thrift.protocol.TField DISPLAY_FIELDS_FIELD_DESC = new org.apache.thrift.protocol.TField("displayFields", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField TEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("text", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LINK_FIELD_DESC = new org.apache.thrift.protocol.TField("link", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField THUMBNAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("thumbnail", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ChatRoomAnnouncementContentsStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ChatRoomAnnouncementContentsTupleSchemeFactory();

  public int displayFields; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String text; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String link; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String thumbnail; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DISPLAY_FIELDS((short)1, "displayFields"),
    TEXT((short)2, "text"),
    LINK((short)3, "link"),
    THUMBNAIL((short)4, "thumbnail");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DISPLAY_FIELDS
          return DISPLAY_FIELDS;
        case 2: // TEXT
          return TEXT;
        case 3: // LINK
          return LINK;
        case 4: // THUMBNAIL
          return THUMBNAIL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DISPLAYFIELDS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DISPLAY_FIELDS, new org.apache.thrift.meta_data.FieldMetaData("displayFields", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TEXT, new org.apache.thrift.meta_data.FieldMetaData("text", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LINK, new org.apache.thrift.meta_data.FieldMetaData("link", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.THUMBNAIL, new org.apache.thrift.meta_data.FieldMetaData("thumbnail", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ChatRoomAnnouncementContents.class, metaDataMap);
  }

  public ChatRoomAnnouncementContents() {
  }

  public ChatRoomAnnouncementContents(
    int displayFields,
    java.lang.String text,
    java.lang.String link,
    java.lang.String thumbnail)
  {
    this();
    this.displayFields = displayFields;
    setDisplayFieldsIsSet(true);
    this.text = text;
    this.link = link;
    this.thumbnail = thumbnail;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ChatRoomAnnouncementContents(ChatRoomAnnouncementContents other) {
    __isset_bitfield = other.__isset_bitfield;
    this.displayFields = other.displayFields;
    if (other.isSetText()) {
      this.text = other.text;
    }
    if (other.isSetLink()) {
      this.link = other.link;
    }
    if (other.isSetThumbnail()) {
      this.thumbnail = other.thumbnail;
    }
  }

  public ChatRoomAnnouncementContents deepCopy() {
    return new ChatRoomAnnouncementContents(this);
  }

  @Override
  public void clear() {
    setDisplayFieldsIsSet(false);
    this.displayFields = 0;
    this.text = null;
    this.link = null;
    this.thumbnail = null;
  }

  public int getDisplayFields() {
    return this.displayFields;
  }

  public ChatRoomAnnouncementContents setDisplayFields(int displayFields) {
    this.displayFields = displayFields;
    setDisplayFieldsIsSet(true);
    return this;
  }

  public void unsetDisplayFields() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISPLAYFIELDS_ISSET_ID);
  }

  /** Returns true if field displayFields is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayFields() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISPLAYFIELDS_ISSET_ID);
  }

  public void setDisplayFieldsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISPLAYFIELDS_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getText() {
    return this.text;
  }

  public ChatRoomAnnouncementContents setText(@org.apache.thrift.annotation.Nullable java.lang.String text) {
    this.text = text;
    return this;
  }

  public void unsetText() {
    this.text = null;
  }

  /** Returns true if field text is set (has been assigned a value) and false otherwise */
  public boolean isSetText() {
    return this.text != null;
  }

  public void setTextIsSet(boolean value) {
    if (!value) {
      this.text = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getLink() {
    return this.link;
  }

  public ChatRoomAnnouncementContents setLink(@org.apache.thrift.annotation.Nullable java.lang.String link) {
    this.link = link;
    return this;
  }

  public void unsetLink() {
    this.link = null;
  }

  /** Returns true if field link is set (has been assigned a value) and false otherwise */
  public boolean isSetLink() {
    return this.link != null;
  }

  public void setLinkIsSet(boolean value) {
    if (!value) {
      this.link = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getThumbnail() {
    return this.thumbnail;
  }

  public ChatRoomAnnouncementContents setThumbnail(@org.apache.thrift.annotation.Nullable java.lang.String thumbnail) {
    this.thumbnail = thumbnail;
    return this;
  }

  public void unsetThumbnail() {
    this.thumbnail = null;
  }

  /** Returns true if field thumbnail is set (has been assigned a value) and false otherwise */
  public boolean isSetThumbnail() {
    return this.thumbnail != null;
  }

  public void setThumbnailIsSet(boolean value) {
    if (!value) {
      this.thumbnail = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case DISPLAY_FIELDS:
      if (value == null) {
        unsetDisplayFields();
      } else {
        setDisplayFields((java.lang.Integer)value);
      }
      break;

    case TEXT:
      if (value == null) {
        unsetText();
      } else {
        setText((java.lang.String)value);
      }
      break;

    case LINK:
      if (value == null) {
        unsetLink();
      } else {
        setLink((java.lang.String)value);
      }
      break;

    case THUMBNAIL:
      if (value == null) {
        unsetThumbnail();
      } else {
        setThumbnail((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case DISPLAY_FIELDS:
      return getDisplayFields();

    case TEXT:
      return getText();

    case LINK:
      return getLink();

    case THUMBNAIL:
      return getThumbnail();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case DISPLAY_FIELDS:
      return isSetDisplayFields();
    case TEXT:
      return isSetText();
    case LINK:
      return isSetLink();
    case THUMBNAIL:
      return isSetThumbnail();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof ChatRoomAnnouncementContents)
      return this.equals((ChatRoomAnnouncementContents)that);
    return false;
  }

  public boolean equals(ChatRoomAnnouncementContents that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_displayFields = true;
    boolean that_present_displayFields = true;
    if (this_present_displayFields || that_present_displayFields) {
      if (!(this_present_displayFields && that_present_displayFields))
        return false;
      if (this.displayFields != that.displayFields)
        return false;
    }

    boolean this_present_text = true && this.isSetText();
    boolean that_present_text = true && that.isSetText();
    if (this_present_text || that_present_text) {
      if (!(this_present_text && that_present_text))
        return false;
      if (!this.text.equals(that.text))
        return false;
    }

    boolean this_present_link = true && this.isSetLink();
    boolean that_present_link = true && that.isSetLink();
    if (this_present_link || that_present_link) {
      if (!(this_present_link && that_present_link))
        return false;
      if (!this.link.equals(that.link))
        return false;
    }

    boolean this_present_thumbnail = true && this.isSetThumbnail();
    boolean that_present_thumbnail = true && that.isSetThumbnail();
    if (this_present_thumbnail || that_present_thumbnail) {
      if (!(this_present_thumbnail && that_present_thumbnail))
        return false;
      if (!this.thumbnail.equals(that.thumbnail))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + displayFields;

    hashCode = hashCode * 8191 + ((isSetText()) ? 131071 : 524287);
    if (isSetText())
      hashCode = hashCode * 8191 + text.hashCode();

    hashCode = hashCode * 8191 + ((isSetLink()) ? 131071 : 524287);
    if (isSetLink())
      hashCode = hashCode * 8191 + link.hashCode();

    hashCode = hashCode * 8191 + ((isSetThumbnail()) ? 131071 : 524287);
    if (isSetThumbnail())
      hashCode = hashCode * 8191 + thumbnail.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(ChatRoomAnnouncementContents other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetDisplayFields(), other.isSetDisplayFields());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayFields()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayFields, other.displayFields);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetText(), other.isSetText());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetText()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.text, other.text);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetLink(), other.isSetLink());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLink()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.link, other.link);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetThumbnail(), other.isSetThumbnail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThumbnail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thumbnail, other.thumbnail);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("ChatRoomAnnouncementContents(");
    boolean first = true;

    sb.append("displayFields:");
    sb.append(this.displayFields);
    first = false;
    if (!first) sb.append(", ");
    sb.append("text:");
    if (this.text == null) {
      sb.append("null");
    } else {
      sb.append(this.text);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("link:");
    if (this.link == null) {
      sb.append("null");
    } else {
      sb.append(this.link);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thumbnail:");
    if (this.thumbnail == null) {
      sb.append("null");
    } else {
      sb.append(this.thumbnail);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ChatRoomAnnouncementContentsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ChatRoomAnnouncementContentsStandardScheme getScheme() {
      return new ChatRoomAnnouncementContentsStandardScheme();
    }
  }

  private static class ChatRoomAnnouncementContentsStandardScheme extends org.apache.thrift.scheme.StandardScheme<ChatRoomAnnouncementContents> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ChatRoomAnnouncementContents struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DISPLAY_FIELDS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.displayFields = iprot.readI32();
              struct.setDisplayFieldsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TEXT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.text = iprot.readString();
              struct.setTextIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LINK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.link = iprot.readString();
              struct.setLinkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // THUMBNAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thumbnail = iprot.readString();
              struct.setThumbnailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ChatRoomAnnouncementContents struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(DISPLAY_FIELDS_FIELD_DESC);
      oprot.writeI32(struct.displayFields);
      oprot.writeFieldEnd();
      if (struct.text != null) {
        oprot.writeFieldBegin(TEXT_FIELD_DESC);
        oprot.writeString(struct.text);
        oprot.writeFieldEnd();
      }
      if (struct.link != null) {
        oprot.writeFieldBegin(LINK_FIELD_DESC);
        oprot.writeString(struct.link);
        oprot.writeFieldEnd();
      }
      if (struct.thumbnail != null) {
        oprot.writeFieldBegin(THUMBNAIL_FIELD_DESC);
        oprot.writeString(struct.thumbnail);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ChatRoomAnnouncementContentsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ChatRoomAnnouncementContentsTupleScheme getScheme() {
      return new ChatRoomAnnouncementContentsTupleScheme();
    }
  }

  private static class ChatRoomAnnouncementContentsTupleScheme extends org.apache.thrift.scheme.TupleScheme<ChatRoomAnnouncementContents> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ChatRoomAnnouncementContents struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetDisplayFields()) {
        optionals.set(0);
      }
      if (struct.isSetText()) {
        optionals.set(1);
      }
      if (struct.isSetLink()) {
        optionals.set(2);
      }
      if (struct.isSetThumbnail()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetDisplayFields()) {
        oprot.writeI32(struct.displayFields);
      }
      if (struct.isSetText()) {
        oprot.writeString(struct.text);
      }
      if (struct.isSetLink()) {
        oprot.writeString(struct.link);
      }
      if (struct.isSetThumbnail()) {
        oprot.writeString(struct.thumbnail);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ChatRoomAnnouncementContents struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.displayFields = iprot.readI32();
        struct.setDisplayFieldsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.text = iprot.readString();
        struct.setTextIsSet(true);
      }
      if (incoming.get(2)) {
        struct.link = iprot.readString();
        struct.setLinkIsSet(true);
      }
      if (incoming.get(3)) {
        struct.thumbnail = iprot.readString();
        struct.setThumbnailIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

