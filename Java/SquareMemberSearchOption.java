/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2019-09-28")
public class SquareMemberSearchOption implements org.apache.thrift.TBase<SquareMemberSearchOption, SquareMemberSearchOption._Fields>, java.io.Serializable, Cloneable, Comparable<SquareMemberSearchOption> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SquareMemberSearchOption");

  private static final org.apache.thrift.protocol.TField MEMBERSHIP_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("membershipState", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField MEMBER_ROLES_FIELD_DESC = new org.apache.thrift.protocol.TField("memberRoles", org.apache.thrift.protocol.TType.SET, (short)2);
  private static final org.apache.thrift.protocol.TField DISPLAY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("displayName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ABLE_TO_RECEIVE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("ableToReceiveMessage", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ABLE_TO_RECEIVE_FRIEND_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("ableToReceiveFriendRequest", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField CHAT_MID_TO_EXCLUDE_MEMBERS_FIELD_DESC = new org.apache.thrift.protocol.TField("chatMidToExcludeMembers", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField INCLUDING_ME_FIELD_DESC = new org.apache.thrift.protocol.TField("includingMe", org.apache.thrift.protocol.TType.BOOL, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SquareMemberSearchOptionStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SquareMemberSearchOptionTupleSchemeFactory();

  /**
   * 
   * @see SquareMembershipState
   */
  public @org.apache.thrift.annotation.Nullable SquareMembershipState membershipState; // required
  public @org.apache.thrift.annotation.Nullable java.util.Set<SquareMemberRole> memberRoles; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String displayName; // required
  /**
   * 
   * @see BooleanState
   */
  public @org.apache.thrift.annotation.Nullable BooleanState ableToReceiveMessage; // required
  /**
   * 
   * @see BooleanState
   */
  public @org.apache.thrift.annotation.Nullable BooleanState ableToReceiveFriendRequest; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String chatMidToExcludeMembers; // required
  public boolean includingMe; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see SquareMembershipState
     */
    MEMBERSHIP_STATE((short)1, "membershipState"),
    MEMBER_ROLES((short)2, "memberRoles"),
    DISPLAY_NAME((short)3, "displayName"),
    /**
     * 
     * @see BooleanState
     */
    ABLE_TO_RECEIVE_MESSAGE((short)4, "ableToReceiveMessage"),
    /**
     * 
     * @see BooleanState
     */
    ABLE_TO_RECEIVE_FRIEND_REQUEST((short)5, "ableToReceiveFriendRequest"),
    CHAT_MID_TO_EXCLUDE_MEMBERS((short)6, "chatMidToExcludeMembers"),
    INCLUDING_ME((short)7, "includingMe");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MEMBERSHIP_STATE
          return MEMBERSHIP_STATE;
        case 2: // MEMBER_ROLES
          return MEMBER_ROLES;
        case 3: // DISPLAY_NAME
          return DISPLAY_NAME;
        case 4: // ABLE_TO_RECEIVE_MESSAGE
          return ABLE_TO_RECEIVE_MESSAGE;
        case 5: // ABLE_TO_RECEIVE_FRIEND_REQUEST
          return ABLE_TO_RECEIVE_FRIEND_REQUEST;
        case 6: // CHAT_MID_TO_EXCLUDE_MEMBERS
          return CHAT_MID_TO_EXCLUDE_MEMBERS;
        case 7: // INCLUDING_ME
          return INCLUDING_ME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __INCLUDINGME_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MEMBERSHIP_STATE, new org.apache.thrift.meta_data.FieldMetaData("membershipState", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMembershipState.class)));
    tmpMap.put(_Fields.MEMBER_ROLES, new org.apache.thrift.meta_data.FieldMetaData("memberRoles", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SquareMemberRole.class))));
    tmpMap.put(_Fields.DISPLAY_NAME, new org.apache.thrift.meta_data.FieldMetaData("displayName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ABLE_TO_RECEIVE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("ableToReceiveMessage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, BooleanState.class)));
    tmpMap.put(_Fields.ABLE_TO_RECEIVE_FRIEND_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("ableToReceiveFriendRequest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, BooleanState.class)));
    tmpMap.put(_Fields.CHAT_MID_TO_EXCLUDE_MEMBERS, new org.apache.thrift.meta_data.FieldMetaData("chatMidToExcludeMembers", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INCLUDING_ME, new org.apache.thrift.meta_data.FieldMetaData("includingMe", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SquareMemberSearchOption.class, metaDataMap);
  }

  public SquareMemberSearchOption() {
  }

  public SquareMemberSearchOption(
    SquareMembershipState membershipState,
    java.util.Set<SquareMemberRole> memberRoles,
    java.lang.String displayName,
    BooleanState ableToReceiveMessage,
    BooleanState ableToReceiveFriendRequest,
    java.lang.String chatMidToExcludeMembers,
    boolean includingMe)
  {
    this();
    this.membershipState = membershipState;
    this.memberRoles = memberRoles;
    this.displayName = displayName;
    this.ableToReceiveMessage = ableToReceiveMessage;
    this.ableToReceiveFriendRequest = ableToReceiveFriendRequest;
    this.chatMidToExcludeMembers = chatMidToExcludeMembers;
    this.includingMe = includingMe;
    setIncludingMeIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SquareMemberSearchOption(SquareMemberSearchOption other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetMembershipState()) {
      this.membershipState = other.membershipState;
    }
    if (other.isSetMemberRoles()) {
      java.util.Set<SquareMemberRole> __this__memberRoles = java.util.EnumSet.noneOf(SquareMemberRole.class);
      for (SquareMemberRole other_element : other.memberRoles) {
        __this__memberRoles.add(other_element);
      }
      this.memberRoles = __this__memberRoles;
    }
    if (other.isSetDisplayName()) {
      this.displayName = other.displayName;
    }
    if (other.isSetAbleToReceiveMessage()) {
      this.ableToReceiveMessage = other.ableToReceiveMessage;
    }
    if (other.isSetAbleToReceiveFriendRequest()) {
      this.ableToReceiveFriendRequest = other.ableToReceiveFriendRequest;
    }
    if (other.isSetChatMidToExcludeMembers()) {
      this.chatMidToExcludeMembers = other.chatMidToExcludeMembers;
    }
    this.includingMe = other.includingMe;
  }

  public SquareMemberSearchOption deepCopy() {
    return new SquareMemberSearchOption(this);
  }

  @Override
  public void clear() {
    this.membershipState = null;
    this.memberRoles = null;
    this.displayName = null;
    this.ableToReceiveMessage = null;
    this.ableToReceiveFriendRequest = null;
    this.chatMidToExcludeMembers = null;
    setIncludingMeIsSet(false);
    this.includingMe = false;
  }

  /**
   * 
   * @see SquareMembershipState
   */
  @org.apache.thrift.annotation.Nullable
  public SquareMembershipState getMembershipState() {
    return this.membershipState;
  }

  /**
   * 
   * @see SquareMembershipState
   */
  public SquareMemberSearchOption setMembershipState(@org.apache.thrift.annotation.Nullable SquareMembershipState membershipState) {
    this.membershipState = membershipState;
    return this;
  }

  public void unsetMembershipState() {
    this.membershipState = null;
  }

  /** Returns true if field membershipState is set (has been assigned a value) and false otherwise */
  public boolean isSetMembershipState() {
    return this.membershipState != null;
  }

  public void setMembershipStateIsSet(boolean value) {
    if (!value) {
      this.membershipState = null;
    }
  }

  public int getMemberRolesSize() {
    return (this.memberRoles == null) ? 0 : this.memberRoles.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<SquareMemberRole> getMemberRolesIterator() {
    return (this.memberRoles == null) ? null : this.memberRoles.iterator();
  }

  public void addToMemberRoles(SquareMemberRole elem) {
    if (this.memberRoles == null) {
      this.memberRoles = java.util.EnumSet.noneOf(SquareMemberRole.class);
    }
    this.memberRoles.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Set<SquareMemberRole> getMemberRoles() {
    return this.memberRoles;
  }

  public SquareMemberSearchOption setMemberRoles(@org.apache.thrift.annotation.Nullable java.util.Set<SquareMemberRole> memberRoles) {
    this.memberRoles = memberRoles;
    return this;
  }

  public void unsetMemberRoles() {
    this.memberRoles = null;
  }

  /** Returns true if field memberRoles is set (has been assigned a value) and false otherwise */
  public boolean isSetMemberRoles() {
    return this.memberRoles != null;
  }

  public void setMemberRolesIsSet(boolean value) {
    if (!value) {
      this.memberRoles = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDisplayName() {
    return this.displayName;
  }

  public SquareMemberSearchOption setDisplayName(@org.apache.thrift.annotation.Nullable java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  public void unsetDisplayName() {
    this.displayName = null;
  }

  /** Returns true if field displayName is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayName() {
    return this.displayName != null;
  }

  public void setDisplayNameIsSet(boolean value) {
    if (!value) {
      this.displayName = null;
    }
  }

  /**
   * 
   * @see BooleanState
   */
  @org.apache.thrift.annotation.Nullable
  public BooleanState getAbleToReceiveMessage() {
    return this.ableToReceiveMessage;
  }

  /**
   * 
   * @see BooleanState
   */
  public SquareMemberSearchOption setAbleToReceiveMessage(@org.apache.thrift.annotation.Nullable BooleanState ableToReceiveMessage) {
    this.ableToReceiveMessage = ableToReceiveMessage;
    return this;
  }

  public void unsetAbleToReceiveMessage() {
    this.ableToReceiveMessage = null;
  }

  /** Returns true if field ableToReceiveMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetAbleToReceiveMessage() {
    return this.ableToReceiveMessage != null;
  }

  public void setAbleToReceiveMessageIsSet(boolean value) {
    if (!value) {
      this.ableToReceiveMessage = null;
    }
  }

  /**
   * 
   * @see BooleanState
   */
  @org.apache.thrift.annotation.Nullable
  public BooleanState getAbleToReceiveFriendRequest() {
    return this.ableToReceiveFriendRequest;
  }

  /**
   * 
   * @see BooleanState
   */
  public SquareMemberSearchOption setAbleToReceiveFriendRequest(@org.apache.thrift.annotation.Nullable BooleanState ableToReceiveFriendRequest) {
    this.ableToReceiveFriendRequest = ableToReceiveFriendRequest;
    return this;
  }

  public void unsetAbleToReceiveFriendRequest() {
    this.ableToReceiveFriendRequest = null;
  }

  /** Returns true if field ableToReceiveFriendRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetAbleToReceiveFriendRequest() {
    return this.ableToReceiveFriendRequest != null;
  }

  public void setAbleToReceiveFriendRequestIsSet(boolean value) {
    if (!value) {
      this.ableToReceiveFriendRequest = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getChatMidToExcludeMembers() {
    return this.chatMidToExcludeMembers;
  }

  public SquareMemberSearchOption setChatMidToExcludeMembers(@org.apache.thrift.annotation.Nullable java.lang.String chatMidToExcludeMembers) {
    this.chatMidToExcludeMembers = chatMidToExcludeMembers;
    return this;
  }

  public void unsetChatMidToExcludeMembers() {
    this.chatMidToExcludeMembers = null;
  }

  /** Returns true if field chatMidToExcludeMembers is set (has been assigned a value) and false otherwise */
  public boolean isSetChatMidToExcludeMembers() {
    return this.chatMidToExcludeMembers != null;
  }

  public void setChatMidToExcludeMembersIsSet(boolean value) {
    if (!value) {
      this.chatMidToExcludeMembers = null;
    }
  }

  public boolean isIncludingMe() {
    return this.includingMe;
  }

  public SquareMemberSearchOption setIncludingMe(boolean includingMe) {
    this.includingMe = includingMe;
    setIncludingMeIsSet(true);
    return this;
  }

  public void unsetIncludingMe() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __INCLUDINGME_ISSET_ID);
  }

  /** Returns true if field includingMe is set (has been assigned a value) and false otherwise */
  public boolean isSetIncludingMe() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __INCLUDINGME_ISSET_ID);
  }

  public void setIncludingMeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __INCLUDINGME_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case MEMBERSHIP_STATE:
      if (value == null) {
        unsetMembershipState();
      } else {
        setMembershipState((SquareMembershipState)value);
      }
      break;

    case MEMBER_ROLES:
      if (value == null) {
        unsetMemberRoles();
      } else {
        setMemberRoles((java.util.Set<SquareMemberRole>)value);
      }
      break;

    case DISPLAY_NAME:
      if (value == null) {
        unsetDisplayName();
      } else {
        setDisplayName((java.lang.String)value);
      }
      break;

    case ABLE_TO_RECEIVE_MESSAGE:
      if (value == null) {
        unsetAbleToReceiveMessage();
      } else {
        setAbleToReceiveMessage((BooleanState)value);
      }
      break;

    case ABLE_TO_RECEIVE_FRIEND_REQUEST:
      if (value == null) {
        unsetAbleToReceiveFriendRequest();
      } else {
        setAbleToReceiveFriendRequest((BooleanState)value);
      }
      break;

    case CHAT_MID_TO_EXCLUDE_MEMBERS:
      if (value == null) {
        unsetChatMidToExcludeMembers();
      } else {
        setChatMidToExcludeMembers((java.lang.String)value);
      }
      break;

    case INCLUDING_ME:
      if (value == null) {
        unsetIncludingMe();
      } else {
        setIncludingMe((java.lang.Boolean)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case MEMBERSHIP_STATE:
      return getMembershipState();

    case MEMBER_ROLES:
      return getMemberRoles();

    case DISPLAY_NAME:
      return getDisplayName();

    case ABLE_TO_RECEIVE_MESSAGE:
      return getAbleToReceiveMessage();

    case ABLE_TO_RECEIVE_FRIEND_REQUEST:
      return getAbleToReceiveFriendRequest();

    case CHAT_MID_TO_EXCLUDE_MEMBERS:
      return getChatMidToExcludeMembers();

    case INCLUDING_ME:
      return isIncludingMe();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case MEMBERSHIP_STATE:
      return isSetMembershipState();
    case MEMBER_ROLES:
      return isSetMemberRoles();
    case DISPLAY_NAME:
      return isSetDisplayName();
    case ABLE_TO_RECEIVE_MESSAGE:
      return isSetAbleToReceiveMessage();
    case ABLE_TO_RECEIVE_FRIEND_REQUEST:
      return isSetAbleToReceiveFriendRequest();
    case CHAT_MID_TO_EXCLUDE_MEMBERS:
      return isSetChatMidToExcludeMembers();
    case INCLUDING_ME:
      return isSetIncludingMe();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SquareMemberSearchOption)
      return this.equals((SquareMemberSearchOption)that);
    return false;
  }

  public boolean equals(SquareMemberSearchOption that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_membershipState = true && this.isSetMembershipState();
    boolean that_present_membershipState = true && that.isSetMembershipState();
    if (this_present_membershipState || that_present_membershipState) {
      if (!(this_present_membershipState && that_present_membershipState))
        return false;
      if (!this.membershipState.equals(that.membershipState))
        return false;
    }

    boolean this_present_memberRoles = true && this.isSetMemberRoles();
    boolean that_present_memberRoles = true && that.isSetMemberRoles();
    if (this_present_memberRoles || that_present_memberRoles) {
      if (!(this_present_memberRoles && that_present_memberRoles))
        return false;
      if (!this.memberRoles.equals(that.memberRoles))
        return false;
    }

    boolean this_present_displayName = true && this.isSetDisplayName();
    boolean that_present_displayName = true && that.isSetDisplayName();
    if (this_present_displayName || that_present_displayName) {
      if (!(this_present_displayName && that_present_displayName))
        return false;
      if (!this.displayName.equals(that.displayName))
        return false;
    }

    boolean this_present_ableToReceiveMessage = true && this.isSetAbleToReceiveMessage();
    boolean that_present_ableToReceiveMessage = true && that.isSetAbleToReceiveMessage();
    if (this_present_ableToReceiveMessage || that_present_ableToReceiveMessage) {
      if (!(this_present_ableToReceiveMessage && that_present_ableToReceiveMessage))
        return false;
      if (!this.ableToReceiveMessage.equals(that.ableToReceiveMessage))
        return false;
    }

    boolean this_present_ableToReceiveFriendRequest = true && this.isSetAbleToReceiveFriendRequest();
    boolean that_present_ableToReceiveFriendRequest = true && that.isSetAbleToReceiveFriendRequest();
    if (this_present_ableToReceiveFriendRequest || that_present_ableToReceiveFriendRequest) {
      if (!(this_present_ableToReceiveFriendRequest && that_present_ableToReceiveFriendRequest))
        return false;
      if (!this.ableToReceiveFriendRequest.equals(that.ableToReceiveFriendRequest))
        return false;
    }

    boolean this_present_chatMidToExcludeMembers = true && this.isSetChatMidToExcludeMembers();
    boolean that_present_chatMidToExcludeMembers = true && that.isSetChatMidToExcludeMembers();
    if (this_present_chatMidToExcludeMembers || that_present_chatMidToExcludeMembers) {
      if (!(this_present_chatMidToExcludeMembers && that_present_chatMidToExcludeMembers))
        return false;
      if (!this.chatMidToExcludeMembers.equals(that.chatMidToExcludeMembers))
        return false;
    }

    boolean this_present_includingMe = true;
    boolean that_present_includingMe = true;
    if (this_present_includingMe || that_present_includingMe) {
      if (!(this_present_includingMe && that_present_includingMe))
        return false;
      if (this.includingMe != that.includingMe)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetMembershipState()) ? 131071 : 524287);
    if (isSetMembershipState())
      hashCode = hashCode * 8191 + membershipState.getValue();

    hashCode = hashCode * 8191 + ((isSetMemberRoles()) ? 131071 : 524287);
    if (isSetMemberRoles())
      hashCode = hashCode * 8191 + memberRoles.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisplayName()) ? 131071 : 524287);
    if (isSetDisplayName())
      hashCode = hashCode * 8191 + displayName.hashCode();

    hashCode = hashCode * 8191 + ((isSetAbleToReceiveMessage()) ? 131071 : 524287);
    if (isSetAbleToReceiveMessage())
      hashCode = hashCode * 8191 + ableToReceiveMessage.getValue();

    hashCode = hashCode * 8191 + ((isSetAbleToReceiveFriendRequest()) ? 131071 : 524287);
    if (isSetAbleToReceiveFriendRequest())
      hashCode = hashCode * 8191 + ableToReceiveFriendRequest.getValue();

    hashCode = hashCode * 8191 + ((isSetChatMidToExcludeMembers()) ? 131071 : 524287);
    if (isSetChatMidToExcludeMembers())
      hashCode = hashCode * 8191 + chatMidToExcludeMembers.hashCode();

    hashCode = hashCode * 8191 + ((includingMe) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(SquareMemberSearchOption other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetMembershipState()).compareTo(other.isSetMembershipState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMembershipState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.membershipState, other.membershipState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMemberRoles()).compareTo(other.isSetMemberRoles());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMemberRoles()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.memberRoles, other.memberRoles);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDisplayName()).compareTo(other.isSetDisplayName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayName, other.displayName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAbleToReceiveMessage()).compareTo(other.isSetAbleToReceiveMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAbleToReceiveMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ableToReceiveMessage, other.ableToReceiveMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAbleToReceiveFriendRequest()).compareTo(other.isSetAbleToReceiveFriendRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAbleToReceiveFriendRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ableToReceiveFriendRequest, other.ableToReceiveFriendRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetChatMidToExcludeMembers()).compareTo(other.isSetChatMidToExcludeMembers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChatMidToExcludeMembers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chatMidToExcludeMembers, other.chatMidToExcludeMembers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIncludingMe()).compareTo(other.isSetIncludingMe());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIncludingMe()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.includingMe, other.includingMe);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SquareMemberSearchOption(");
    boolean first = true;

    sb.append("membershipState:");
    if (this.membershipState == null) {
      sb.append("null");
    } else {
      sb.append(this.membershipState);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("memberRoles:");
    if (this.memberRoles == null) {
      sb.append("null");
    } else {
      sb.append(this.memberRoles);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayName:");
    if (this.displayName == null) {
      sb.append("null");
    } else {
      sb.append(this.displayName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ableToReceiveMessage:");
    if (this.ableToReceiveMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.ableToReceiveMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ableToReceiveFriendRequest:");
    if (this.ableToReceiveFriendRequest == null) {
      sb.append("null");
    } else {
      sb.append(this.ableToReceiveFriendRequest);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("chatMidToExcludeMembers:");
    if (this.chatMidToExcludeMembers == null) {
      sb.append("null");
    } else {
      sb.append(this.chatMidToExcludeMembers);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("includingMe:");
    sb.append(this.includingMe);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SquareMemberSearchOptionStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SquareMemberSearchOptionStandardScheme getScheme() {
      return new SquareMemberSearchOptionStandardScheme();
    }
  }

  private static class SquareMemberSearchOptionStandardScheme extends org.apache.thrift.scheme.StandardScheme<SquareMemberSearchOption> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SquareMemberSearchOption struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MEMBERSHIP_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.membershipState = SquareMembershipState.findByValue(iprot.readI32());
              struct.setMembershipStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MEMBER_ROLES
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set658 = iprot.readSetBegin();
                struct.memberRoles = java.util.EnumSet.noneOf(SquareMemberRole.class);
                @org.apache.thrift.annotation.Nullable SquareMemberRole _elem659;
                for (int _i660 = 0; _i660 < _set658.size; ++_i660)
                {
                  _elem659 = SquareMemberRole.findByValue(iprot.readI32());
                  if (_elem659 != null)
                  {
                    struct.memberRoles.add(_elem659);
                  }
                }
                iprot.readSetEnd();
              }
              struct.setMemberRolesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DISPLAY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.displayName = iprot.readString();
              struct.setDisplayNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ABLE_TO_RECEIVE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ableToReceiveMessage = BooleanState.findByValue(iprot.readI32());
              struct.setAbleToReceiveMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ABLE_TO_RECEIVE_FRIEND_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ableToReceiveFriendRequest = BooleanState.findByValue(iprot.readI32());
              struct.setAbleToReceiveFriendRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CHAT_MID_TO_EXCLUDE_MEMBERS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.chatMidToExcludeMembers = iprot.readString();
              struct.setChatMidToExcludeMembersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // INCLUDING_ME
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.includingMe = iprot.readBool();
              struct.setIncludingMeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SquareMemberSearchOption struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.membershipState != null) {
        oprot.writeFieldBegin(MEMBERSHIP_STATE_FIELD_DESC);
        oprot.writeI32(struct.membershipState.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.memberRoles != null) {
        oprot.writeFieldBegin(MEMBER_ROLES_FIELD_DESC);
        {
          oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.memberRoles.size()));
          for (SquareMemberRole _iter661 : struct.memberRoles)
          {
            oprot.writeI32(_iter661.getValue());
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.displayName != null) {
        oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
        oprot.writeString(struct.displayName);
        oprot.writeFieldEnd();
      }
      if (struct.ableToReceiveMessage != null) {
        oprot.writeFieldBegin(ABLE_TO_RECEIVE_MESSAGE_FIELD_DESC);
        oprot.writeI32(struct.ableToReceiveMessage.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.ableToReceiveFriendRequest != null) {
        oprot.writeFieldBegin(ABLE_TO_RECEIVE_FRIEND_REQUEST_FIELD_DESC);
        oprot.writeI32(struct.ableToReceiveFriendRequest.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.chatMidToExcludeMembers != null) {
        oprot.writeFieldBegin(CHAT_MID_TO_EXCLUDE_MEMBERS_FIELD_DESC);
        oprot.writeString(struct.chatMidToExcludeMembers);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(INCLUDING_ME_FIELD_DESC);
      oprot.writeBool(struct.includingMe);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SquareMemberSearchOptionTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SquareMemberSearchOptionTupleScheme getScheme() {
      return new SquareMemberSearchOptionTupleScheme();
    }
  }

  private static class SquareMemberSearchOptionTupleScheme extends org.apache.thrift.scheme.TupleScheme<SquareMemberSearchOption> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SquareMemberSearchOption struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetMembershipState()) {
        optionals.set(0);
      }
      if (struct.isSetMemberRoles()) {
        optionals.set(1);
      }
      if (struct.isSetDisplayName()) {
        optionals.set(2);
      }
      if (struct.isSetAbleToReceiveMessage()) {
        optionals.set(3);
      }
      if (struct.isSetAbleToReceiveFriendRequest()) {
        optionals.set(4);
      }
      if (struct.isSetChatMidToExcludeMembers()) {
        optionals.set(5);
      }
      if (struct.isSetIncludingMe()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetMembershipState()) {
        oprot.writeI32(struct.membershipState.getValue());
      }
      if (struct.isSetMemberRoles()) {
        {
          oprot.writeI32(struct.memberRoles.size());
          for (SquareMemberRole _iter662 : struct.memberRoles)
          {
            oprot.writeI32(_iter662.getValue());
          }
        }
      }
      if (struct.isSetDisplayName()) {
        oprot.writeString(struct.displayName);
      }
      if (struct.isSetAbleToReceiveMessage()) {
        oprot.writeI32(struct.ableToReceiveMessage.getValue());
      }
      if (struct.isSetAbleToReceiveFriendRequest()) {
        oprot.writeI32(struct.ableToReceiveFriendRequest.getValue());
      }
      if (struct.isSetChatMidToExcludeMembers()) {
        oprot.writeString(struct.chatMidToExcludeMembers);
      }
      if (struct.isSetIncludingMe()) {
        oprot.writeBool(struct.includingMe);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SquareMemberSearchOption struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.membershipState = SquareMembershipState.findByValue(iprot.readI32());
        struct.setMembershipStateIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TSet _set663 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.memberRoles = java.util.EnumSet.noneOf(SquareMemberRole.class);
          @org.apache.thrift.annotation.Nullable SquareMemberRole _elem664;
          for (int _i665 = 0; _i665 < _set663.size; ++_i665)
          {
            _elem664 = SquareMemberRole.findByValue(iprot.readI32());
            if (_elem664 != null)
            {
              struct.memberRoles.add(_elem664);
            }
          }
        }
        struct.setMemberRolesIsSet(true);
      }
      if (incoming.get(2)) {
        struct.displayName = iprot.readString();
        struct.setDisplayNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.ableToReceiveMessage = BooleanState.findByValue(iprot.readI32());
        struct.setAbleToReceiveMessageIsSet(true);
      }
      if (incoming.get(4)) {
        struct.ableToReceiveFriendRequest = BooleanState.findByValue(iprot.readI32());
        struct.setAbleToReceiveFriendRequestIsSet(true);
      }
      if (incoming.get(5)) {
        struct.chatMidToExcludeMembers = iprot.readString();
        struct.setChatMidToExcludeMembersIsSet(true);
      }
      if (incoming.get(6)) {
        struct.includingMe = iprot.readBool();
        struct.setIncludingMeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

