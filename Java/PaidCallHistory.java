/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2019-09-28")
public class PaidCallHistory implements org.apache.thrift.TBase<PaidCallHistory, PaidCallHistory._Fields>, java.io.Serializable, Cloneable, Comparable<PaidCallHistory> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PaidCallHistory");

  private static final org.apache.thrift.protocol.TField SEQ_FIELD_DESC = new org.apache.thrift.protocol.TField("seq", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField DIALED_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("dialedNumber", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CALLED_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("calledNumber", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField TO_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("toMid", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField TO_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("toName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SETUP_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("setupTime", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField DURATION_FIELD_DESC = new org.apache.thrift.protocol.TField("duration", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField TERMINATE_FIELD_DESC = new org.apache.thrift.protocol.TField("terminate", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField PRODUCT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("productType", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField CHARGE_FIELD_DESC = new org.apache.thrift.protocol.TField("charge", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField UNIT_FIELD_DESC = new org.apache.thrift.protocol.TField("unit", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("result", org.apache.thrift.protocol.TType.STRING, (short)15);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new PaidCallHistoryStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new PaidCallHistoryTupleSchemeFactory();

  public long seq; // required
  /**
   * 
   * @see PaidCallType
   */
  public @org.apache.thrift.annotation.Nullable PaidCallType type; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String dialedNumber; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String calledNumber; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String toMid; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String toName; // required
  public long setupTime; // required
  public long startTime; // required
  public long endTime; // required
  public long duration; // required
  public int terminate; // required
  /**
   * 
   * @see PaidCallProductType
   */
  public @org.apache.thrift.annotation.Nullable PaidCallProductType productType; // required
  public int charge; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String unit; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String result; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SEQ((short)1, "seq"),
    /**
     * 
     * @see PaidCallType
     */
    TYPE((short)2, "type"),
    DIALED_NUMBER((short)3, "dialedNumber"),
    CALLED_NUMBER((short)4, "calledNumber"),
    TO_MID((short)5, "toMid"),
    TO_NAME((short)6, "toName"),
    SETUP_TIME((short)7, "setupTime"),
    START_TIME((short)8, "startTime"),
    END_TIME((short)9, "endTime"),
    DURATION((short)10, "duration"),
    TERMINATE((short)11, "terminate"),
    /**
     * 
     * @see PaidCallProductType
     */
    PRODUCT_TYPE((short)12, "productType"),
    CHARGE((short)13, "charge"),
    UNIT((short)14, "unit"),
    RESULT((short)15, "result");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SEQ
          return SEQ;
        case 2: // TYPE
          return TYPE;
        case 3: // DIALED_NUMBER
          return DIALED_NUMBER;
        case 4: // CALLED_NUMBER
          return CALLED_NUMBER;
        case 5: // TO_MID
          return TO_MID;
        case 6: // TO_NAME
          return TO_NAME;
        case 7: // SETUP_TIME
          return SETUP_TIME;
        case 8: // START_TIME
          return START_TIME;
        case 9: // END_TIME
          return END_TIME;
        case 10: // DURATION
          return DURATION;
        case 11: // TERMINATE
          return TERMINATE;
        case 12: // PRODUCT_TYPE
          return PRODUCT_TYPE;
        case 13: // CHARGE
          return CHARGE;
        case 14: // UNIT
          return UNIT;
        case 15: // RESULT
          return RESULT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SEQ_ISSET_ID = 0;
  private static final int __SETUPTIME_ISSET_ID = 1;
  private static final int __STARTTIME_ISSET_ID = 2;
  private static final int __ENDTIME_ISSET_ID = 3;
  private static final int __DURATION_ISSET_ID = 4;
  private static final int __TERMINATE_ISSET_ID = 5;
  private static final int __CHARGE_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SEQ, new org.apache.thrift.meta_data.FieldMetaData("seq", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, PaidCallType.class)));
    tmpMap.put(_Fields.DIALED_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("dialedNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CALLED_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("calledNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TO_MID, new org.apache.thrift.meta_data.FieldMetaData("toMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TO_NAME, new org.apache.thrift.meta_data.FieldMetaData("toName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETUP_TIME, new org.apache.thrift.meta_data.FieldMetaData("setupTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DURATION, new org.apache.thrift.meta_data.FieldMetaData("duration", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TERMINATE, new org.apache.thrift.meta_data.FieldMetaData("terminate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRODUCT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("productType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, PaidCallProductType.class)));
    tmpMap.put(_Fields.CHARGE, new org.apache.thrift.meta_data.FieldMetaData("charge", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UNIT, new org.apache.thrift.meta_data.FieldMetaData("unit", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT, new org.apache.thrift.meta_data.FieldMetaData("result", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PaidCallHistory.class, metaDataMap);
  }

  public PaidCallHistory() {
  }

  public PaidCallHistory(
    long seq,
    PaidCallType type,
    java.lang.String dialedNumber,
    java.lang.String calledNumber,
    java.lang.String toMid,
    java.lang.String toName,
    long setupTime,
    long startTime,
    long endTime,
    long duration,
    int terminate,
    PaidCallProductType productType,
    int charge,
    java.lang.String unit,
    java.lang.String result)
  {
    this();
    this.seq = seq;
    setSeqIsSet(true);
    this.type = type;
    this.dialedNumber = dialedNumber;
    this.calledNumber = calledNumber;
    this.toMid = toMid;
    this.toName = toName;
    this.setupTime = setupTime;
    setSetupTimeIsSet(true);
    this.startTime = startTime;
    setStartTimeIsSet(true);
    this.endTime = endTime;
    setEndTimeIsSet(true);
    this.duration = duration;
    setDurationIsSet(true);
    this.terminate = terminate;
    setTerminateIsSet(true);
    this.productType = productType;
    this.charge = charge;
    setChargeIsSet(true);
    this.unit = unit;
    this.result = result;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PaidCallHistory(PaidCallHistory other) {
    __isset_bitfield = other.__isset_bitfield;
    this.seq = other.seq;
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetDialedNumber()) {
      this.dialedNumber = other.dialedNumber;
    }
    if (other.isSetCalledNumber()) {
      this.calledNumber = other.calledNumber;
    }
    if (other.isSetToMid()) {
      this.toMid = other.toMid;
    }
    if (other.isSetToName()) {
      this.toName = other.toName;
    }
    this.setupTime = other.setupTime;
    this.startTime = other.startTime;
    this.endTime = other.endTime;
    this.duration = other.duration;
    this.terminate = other.terminate;
    if (other.isSetProductType()) {
      this.productType = other.productType;
    }
    this.charge = other.charge;
    if (other.isSetUnit()) {
      this.unit = other.unit;
    }
    if (other.isSetResult()) {
      this.result = other.result;
    }
  }

  public PaidCallHistory deepCopy() {
    return new PaidCallHistory(this);
  }

  @Override
  public void clear() {
    setSeqIsSet(false);
    this.seq = 0;
    this.type = null;
    this.dialedNumber = null;
    this.calledNumber = null;
    this.toMid = null;
    this.toName = null;
    setSetupTimeIsSet(false);
    this.setupTime = 0;
    setStartTimeIsSet(false);
    this.startTime = 0;
    setEndTimeIsSet(false);
    this.endTime = 0;
    setDurationIsSet(false);
    this.duration = 0;
    setTerminateIsSet(false);
    this.terminate = 0;
    this.productType = null;
    setChargeIsSet(false);
    this.charge = 0;
    this.unit = null;
    this.result = null;
  }

  public long getSeq() {
    return this.seq;
  }

  public PaidCallHistory setSeq(long seq) {
    this.seq = seq;
    setSeqIsSet(true);
    return this;
  }

  public void unsetSeq() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SEQ_ISSET_ID);
  }

  /** Returns true if field seq is set (has been assigned a value) and false otherwise */
  public boolean isSetSeq() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SEQ_ISSET_ID);
  }

  public void setSeqIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SEQ_ISSET_ID, value);
  }

  /**
   * 
   * @see PaidCallType
   */
  @org.apache.thrift.annotation.Nullable
  public PaidCallType getType() {
    return this.type;
  }

  /**
   * 
   * @see PaidCallType
   */
  public PaidCallHistory setType(@org.apache.thrift.annotation.Nullable PaidCallType type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDialedNumber() {
    return this.dialedNumber;
  }

  public PaidCallHistory setDialedNumber(@org.apache.thrift.annotation.Nullable java.lang.String dialedNumber) {
    this.dialedNumber = dialedNumber;
    return this;
  }

  public void unsetDialedNumber() {
    this.dialedNumber = null;
  }

  /** Returns true if field dialedNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetDialedNumber() {
    return this.dialedNumber != null;
  }

  public void setDialedNumberIsSet(boolean value) {
    if (!value) {
      this.dialedNumber = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getCalledNumber() {
    return this.calledNumber;
  }

  public PaidCallHistory setCalledNumber(@org.apache.thrift.annotation.Nullable java.lang.String calledNumber) {
    this.calledNumber = calledNumber;
    return this;
  }

  public void unsetCalledNumber() {
    this.calledNumber = null;
  }

  /** Returns true if field calledNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetCalledNumber() {
    return this.calledNumber != null;
  }

  public void setCalledNumberIsSet(boolean value) {
    if (!value) {
      this.calledNumber = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getToMid() {
    return this.toMid;
  }

  public PaidCallHistory setToMid(@org.apache.thrift.annotation.Nullable java.lang.String toMid) {
    this.toMid = toMid;
    return this;
  }

  public void unsetToMid() {
    this.toMid = null;
  }

  /** Returns true if field toMid is set (has been assigned a value) and false otherwise */
  public boolean isSetToMid() {
    return this.toMid != null;
  }

  public void setToMidIsSet(boolean value) {
    if (!value) {
      this.toMid = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getToName() {
    return this.toName;
  }

  public PaidCallHistory setToName(@org.apache.thrift.annotation.Nullable java.lang.String toName) {
    this.toName = toName;
    return this;
  }

  public void unsetToName() {
    this.toName = null;
  }

  /** Returns true if field toName is set (has been assigned a value) and false otherwise */
  public boolean isSetToName() {
    return this.toName != null;
  }

  public void setToNameIsSet(boolean value) {
    if (!value) {
      this.toName = null;
    }
  }

  public long getSetupTime() {
    return this.setupTime;
  }

  public PaidCallHistory setSetupTime(long setupTime) {
    this.setupTime = setupTime;
    setSetupTimeIsSet(true);
    return this;
  }

  public void unsetSetupTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SETUPTIME_ISSET_ID);
  }

  /** Returns true if field setupTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSetupTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SETUPTIME_ISSET_ID);
  }

  public void setSetupTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SETUPTIME_ISSET_ID, value);
  }

  public long getStartTime() {
    return this.startTime;
  }

  public PaidCallHistory setStartTime(long startTime) {
    this.startTime = startTime;
    setStartTimeIsSet(true);
    return this;
  }

  public void unsetStartTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTTIME_ISSET_ID);
  }

  public void setStartTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTTIME_ISSET_ID, value);
  }

  public long getEndTime() {
    return this.endTime;
  }

  public PaidCallHistory setEndTime(long endTime) {
    this.endTime = endTime;
    setEndTimeIsSet(true);
    return this;
  }

  public void unsetEndTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDTIME_ISSET_ID);
  }

  public void setEndTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDTIME_ISSET_ID, value);
  }

  public long getDuration() {
    return this.duration;
  }

  public PaidCallHistory setDuration(long duration) {
    this.duration = duration;
    setDurationIsSet(true);
    return this;
  }

  public void unsetDuration() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DURATION_ISSET_ID);
  }

  /** Returns true if field duration is set (has been assigned a value) and false otherwise */
  public boolean isSetDuration() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DURATION_ISSET_ID);
  }

  public void setDurationIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DURATION_ISSET_ID, value);
  }

  public int getTerminate() {
    return this.terminate;
  }

  public PaidCallHistory setTerminate(int terminate) {
    this.terminate = terminate;
    setTerminateIsSet(true);
    return this;
  }

  public void unsetTerminate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TERMINATE_ISSET_ID);
  }

  /** Returns true if field terminate is set (has been assigned a value) and false otherwise */
  public boolean isSetTerminate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TERMINATE_ISSET_ID);
  }

  public void setTerminateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TERMINATE_ISSET_ID, value);
  }

  /**
   * 
   * @see PaidCallProductType
   */
  @org.apache.thrift.annotation.Nullable
  public PaidCallProductType getProductType() {
    return this.productType;
  }

  /**
   * 
   * @see PaidCallProductType
   */
  public PaidCallHistory setProductType(@org.apache.thrift.annotation.Nullable PaidCallProductType productType) {
    this.productType = productType;
    return this;
  }

  public void unsetProductType() {
    this.productType = null;
  }

  /** Returns true if field productType is set (has been assigned a value) and false otherwise */
  public boolean isSetProductType() {
    return this.productType != null;
  }

  public void setProductTypeIsSet(boolean value) {
    if (!value) {
      this.productType = null;
    }
  }

  public int getCharge() {
    return this.charge;
  }

  public PaidCallHistory setCharge(int charge) {
    this.charge = charge;
    setChargeIsSet(true);
    return this;
  }

  public void unsetCharge() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHARGE_ISSET_ID);
  }

  /** Returns true if field charge is set (has been assigned a value) and false otherwise */
  public boolean isSetCharge() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHARGE_ISSET_ID);
  }

  public void setChargeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHARGE_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getUnit() {
    return this.unit;
  }

  public PaidCallHistory setUnit(@org.apache.thrift.annotation.Nullable java.lang.String unit) {
    this.unit = unit;
    return this;
  }

  public void unsetUnit() {
    this.unit = null;
  }

  /** Returns true if field unit is set (has been assigned a value) and false otherwise */
  public boolean isSetUnit() {
    return this.unit != null;
  }

  public void setUnitIsSet(boolean value) {
    if (!value) {
      this.unit = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getResult() {
    return this.result;
  }

  public PaidCallHistory setResult(@org.apache.thrift.annotation.Nullable java.lang.String result) {
    this.result = result;
    return this;
  }

  public void unsetResult() {
    this.result = null;
  }

  /** Returns true if field result is set (has been assigned a value) and false otherwise */
  public boolean isSetResult() {
    return this.result != null;
  }

  public void setResultIsSet(boolean value) {
    if (!value) {
      this.result = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SEQ:
      if (value == null) {
        unsetSeq();
      } else {
        setSeq((java.lang.Long)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((PaidCallType)value);
      }
      break;

    case DIALED_NUMBER:
      if (value == null) {
        unsetDialedNumber();
      } else {
        setDialedNumber((java.lang.String)value);
      }
      break;

    case CALLED_NUMBER:
      if (value == null) {
        unsetCalledNumber();
      } else {
        setCalledNumber((java.lang.String)value);
      }
      break;

    case TO_MID:
      if (value == null) {
        unsetToMid();
      } else {
        setToMid((java.lang.String)value);
      }
      break;

    case TO_NAME:
      if (value == null) {
        unsetToName();
      } else {
        setToName((java.lang.String)value);
      }
      break;

    case SETUP_TIME:
      if (value == null) {
        unsetSetupTime();
      } else {
        setSetupTime((java.lang.Long)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((java.lang.Long)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((java.lang.Long)value);
      }
      break;

    case DURATION:
      if (value == null) {
        unsetDuration();
      } else {
        setDuration((java.lang.Long)value);
      }
      break;

    case TERMINATE:
      if (value == null) {
        unsetTerminate();
      } else {
        setTerminate((java.lang.Integer)value);
      }
      break;

    case PRODUCT_TYPE:
      if (value == null) {
        unsetProductType();
      } else {
        setProductType((PaidCallProductType)value);
      }
      break;

    case CHARGE:
      if (value == null) {
        unsetCharge();
      } else {
        setCharge((java.lang.Integer)value);
      }
      break;

    case UNIT:
      if (value == null) {
        unsetUnit();
      } else {
        setUnit((java.lang.String)value);
      }
      break;

    case RESULT:
      if (value == null) {
        unsetResult();
      } else {
        setResult((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SEQ:
      return getSeq();

    case TYPE:
      return getType();

    case DIALED_NUMBER:
      return getDialedNumber();

    case CALLED_NUMBER:
      return getCalledNumber();

    case TO_MID:
      return getToMid();

    case TO_NAME:
      return getToName();

    case SETUP_TIME:
      return getSetupTime();

    case START_TIME:
      return getStartTime();

    case END_TIME:
      return getEndTime();

    case DURATION:
      return getDuration();

    case TERMINATE:
      return getTerminate();

    case PRODUCT_TYPE:
      return getProductType();

    case CHARGE:
      return getCharge();

    case UNIT:
      return getUnit();

    case RESULT:
      return getResult();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SEQ:
      return isSetSeq();
    case TYPE:
      return isSetType();
    case DIALED_NUMBER:
      return isSetDialedNumber();
    case CALLED_NUMBER:
      return isSetCalledNumber();
    case TO_MID:
      return isSetToMid();
    case TO_NAME:
      return isSetToName();
    case SETUP_TIME:
      return isSetSetupTime();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case DURATION:
      return isSetDuration();
    case TERMINATE:
      return isSetTerminate();
    case PRODUCT_TYPE:
      return isSetProductType();
    case CHARGE:
      return isSetCharge();
    case UNIT:
      return isSetUnit();
    case RESULT:
      return isSetResult();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof PaidCallHistory)
      return this.equals((PaidCallHistory)that);
    return false;
  }

  public boolean equals(PaidCallHistory that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_seq = true;
    boolean that_present_seq = true;
    if (this_present_seq || that_present_seq) {
      if (!(this_present_seq && that_present_seq))
        return false;
      if (this.seq != that.seq)
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_dialedNumber = true && this.isSetDialedNumber();
    boolean that_present_dialedNumber = true && that.isSetDialedNumber();
    if (this_present_dialedNumber || that_present_dialedNumber) {
      if (!(this_present_dialedNumber && that_present_dialedNumber))
        return false;
      if (!this.dialedNumber.equals(that.dialedNumber))
        return false;
    }

    boolean this_present_calledNumber = true && this.isSetCalledNumber();
    boolean that_present_calledNumber = true && that.isSetCalledNumber();
    if (this_present_calledNumber || that_present_calledNumber) {
      if (!(this_present_calledNumber && that_present_calledNumber))
        return false;
      if (!this.calledNumber.equals(that.calledNumber))
        return false;
    }

    boolean this_present_toMid = true && this.isSetToMid();
    boolean that_present_toMid = true && that.isSetToMid();
    if (this_present_toMid || that_present_toMid) {
      if (!(this_present_toMid && that_present_toMid))
        return false;
      if (!this.toMid.equals(that.toMid))
        return false;
    }

    boolean this_present_toName = true && this.isSetToName();
    boolean that_present_toName = true && that.isSetToName();
    if (this_present_toName || that_present_toName) {
      if (!(this_present_toName && that_present_toName))
        return false;
      if (!this.toName.equals(that.toName))
        return false;
    }

    boolean this_present_setupTime = true;
    boolean that_present_setupTime = true;
    if (this_present_setupTime || that_present_setupTime) {
      if (!(this_present_setupTime && that_present_setupTime))
        return false;
      if (this.setupTime != that.setupTime)
        return false;
    }

    boolean this_present_startTime = true;
    boolean that_present_startTime = true;
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (this.startTime != that.startTime)
        return false;
    }

    boolean this_present_endTime = true;
    boolean that_present_endTime = true;
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (this.endTime != that.endTime)
        return false;
    }

    boolean this_present_duration = true;
    boolean that_present_duration = true;
    if (this_present_duration || that_present_duration) {
      if (!(this_present_duration && that_present_duration))
        return false;
      if (this.duration != that.duration)
        return false;
    }

    boolean this_present_terminate = true;
    boolean that_present_terminate = true;
    if (this_present_terminate || that_present_terminate) {
      if (!(this_present_terminate && that_present_terminate))
        return false;
      if (this.terminate != that.terminate)
        return false;
    }

    boolean this_present_productType = true && this.isSetProductType();
    boolean that_present_productType = true && that.isSetProductType();
    if (this_present_productType || that_present_productType) {
      if (!(this_present_productType && that_present_productType))
        return false;
      if (!this.productType.equals(that.productType))
        return false;
    }

    boolean this_present_charge = true;
    boolean that_present_charge = true;
    if (this_present_charge || that_present_charge) {
      if (!(this_present_charge && that_present_charge))
        return false;
      if (this.charge != that.charge)
        return false;
    }

    boolean this_present_unit = true && this.isSetUnit();
    boolean that_present_unit = true && that.isSetUnit();
    if (this_present_unit || that_present_unit) {
      if (!(this_present_unit && that_present_unit))
        return false;
      if (!this.unit.equals(that.unit))
        return false;
    }

    boolean this_present_result = true && this.isSetResult();
    boolean that_present_result = true && that.isSetResult();
    if (this_present_result || that_present_result) {
      if (!(this_present_result && that_present_result))
        return false;
      if (!this.result.equals(that.result))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(seq);

    hashCode = hashCode * 8191 + ((isSetType()) ? 131071 : 524287);
    if (isSetType())
      hashCode = hashCode * 8191 + type.getValue();

    hashCode = hashCode * 8191 + ((isSetDialedNumber()) ? 131071 : 524287);
    if (isSetDialedNumber())
      hashCode = hashCode * 8191 + dialedNumber.hashCode();

    hashCode = hashCode * 8191 + ((isSetCalledNumber()) ? 131071 : 524287);
    if (isSetCalledNumber())
      hashCode = hashCode * 8191 + calledNumber.hashCode();

    hashCode = hashCode * 8191 + ((isSetToMid()) ? 131071 : 524287);
    if (isSetToMid())
      hashCode = hashCode * 8191 + toMid.hashCode();

    hashCode = hashCode * 8191 + ((isSetToName()) ? 131071 : 524287);
    if (isSetToName())
      hashCode = hashCode * 8191 + toName.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(setupTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(duration);

    hashCode = hashCode * 8191 + terminate;

    hashCode = hashCode * 8191 + ((isSetProductType()) ? 131071 : 524287);
    if (isSetProductType())
      hashCode = hashCode * 8191 + productType.getValue();

    hashCode = hashCode * 8191 + charge;

    hashCode = hashCode * 8191 + ((isSetUnit()) ? 131071 : 524287);
    if (isSetUnit())
      hashCode = hashCode * 8191 + unit.hashCode();

    hashCode = hashCode * 8191 + ((isSetResult()) ? 131071 : 524287);
    if (isSetResult())
      hashCode = hashCode * 8191 + result.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(PaidCallHistory other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetSeq()).compareTo(other.isSetSeq());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSeq()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.seq, other.seq);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDialedNumber()).compareTo(other.isSetDialedNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDialedNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dialedNumber, other.dialedNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCalledNumber()).compareTo(other.isSetCalledNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCalledNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.calledNumber, other.calledNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetToMid()).compareTo(other.isSetToMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.toMid, other.toMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetToName()).compareTo(other.isSetToName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.toName, other.toName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSetupTime()).compareTo(other.isSetSetupTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSetupTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.setupTime, other.setupTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDuration()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTerminate()).compareTo(other.isSetTerminate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTerminate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.terminate, other.terminate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProductType()).compareTo(other.isSetProductType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productType, other.productType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCharge()).compareTo(other.isSetCharge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCharge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.charge, other.charge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUnit()).compareTo(other.isSetUnit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.unit, other.unit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetResult()).compareTo(other.isSetResult());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result, other.result);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("PaidCallHistory(");
    boolean first = true;

    sb.append("seq:");
    sb.append(this.seq);
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dialedNumber:");
    if (this.dialedNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.dialedNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("calledNumber:");
    if (this.calledNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.calledNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("toMid:");
    if (this.toMid == null) {
      sb.append("null");
    } else {
      sb.append(this.toMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("toName:");
    if (this.toName == null) {
      sb.append("null");
    } else {
      sb.append(this.toName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("setupTime:");
    sb.append(this.setupTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    sb.append(this.startTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    sb.append(this.endTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("duration:");
    sb.append(this.duration);
    first = false;
    if (!first) sb.append(", ");
    sb.append("terminate:");
    sb.append(this.terminate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("productType:");
    if (this.productType == null) {
      sb.append("null");
    } else {
      sb.append(this.productType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("charge:");
    sb.append(this.charge);
    first = false;
    if (!first) sb.append(", ");
    sb.append("unit:");
    if (this.unit == null) {
      sb.append("null");
    } else {
      sb.append(this.unit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("result:");
    if (this.result == null) {
      sb.append("null");
    } else {
      sb.append(this.result);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PaidCallHistoryStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PaidCallHistoryStandardScheme getScheme() {
      return new PaidCallHistoryStandardScheme();
    }
  }

  private static class PaidCallHistoryStandardScheme extends org.apache.thrift.scheme.StandardScheme<PaidCallHistory> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PaidCallHistory struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SEQ
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.seq = iprot.readI64();
              struct.setSeqIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = PaidCallType.findByValue(iprot.readI32());
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DIALED_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dialedNumber = iprot.readString();
              struct.setDialedNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CALLED_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.calledNumber = iprot.readString();
              struct.setCalledNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TO_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.toMid = iprot.readString();
              struct.setToMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TO_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.toName = iprot.readString();
              struct.setToNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SETUP_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.setupTime = iprot.readI64();
              struct.setSetupTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startTime = iprot.readI64();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endTime = iprot.readI64();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DURATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.duration = iprot.readI64();
              struct.setDurationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TERMINATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.terminate = iprot.readI32();
              struct.setTerminateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PRODUCT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productType = PaidCallProductType.findByValue(iprot.readI32());
              struct.setProductTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CHARGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.charge = iprot.readI32();
              struct.setChargeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // UNIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.unit = iprot.readString();
              struct.setUnitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // RESULT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.result = iprot.readString();
              struct.setResultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PaidCallHistory struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(SEQ_FIELD_DESC);
      oprot.writeI64(struct.seq);
      oprot.writeFieldEnd();
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeI32(struct.type.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.dialedNumber != null) {
        oprot.writeFieldBegin(DIALED_NUMBER_FIELD_DESC);
        oprot.writeString(struct.dialedNumber);
        oprot.writeFieldEnd();
      }
      if (struct.calledNumber != null) {
        oprot.writeFieldBegin(CALLED_NUMBER_FIELD_DESC);
        oprot.writeString(struct.calledNumber);
        oprot.writeFieldEnd();
      }
      if (struct.toMid != null) {
        oprot.writeFieldBegin(TO_MID_FIELD_DESC);
        oprot.writeString(struct.toMid);
        oprot.writeFieldEnd();
      }
      if (struct.toName != null) {
        oprot.writeFieldBegin(TO_NAME_FIELD_DESC);
        oprot.writeString(struct.toName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SETUP_TIME_FIELD_DESC);
      oprot.writeI64(struct.setupTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(START_TIME_FIELD_DESC);
      oprot.writeI64(struct.startTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_FIELD_DESC);
      oprot.writeI64(struct.endTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DURATION_FIELD_DESC);
      oprot.writeI64(struct.duration);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TERMINATE_FIELD_DESC);
      oprot.writeI32(struct.terminate);
      oprot.writeFieldEnd();
      if (struct.productType != null) {
        oprot.writeFieldBegin(PRODUCT_TYPE_FIELD_DESC);
        oprot.writeI32(struct.productType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CHARGE_FIELD_DESC);
      oprot.writeI32(struct.charge);
      oprot.writeFieldEnd();
      if (struct.unit != null) {
        oprot.writeFieldBegin(UNIT_FIELD_DESC);
        oprot.writeString(struct.unit);
        oprot.writeFieldEnd();
      }
      if (struct.result != null) {
        oprot.writeFieldBegin(RESULT_FIELD_DESC);
        oprot.writeString(struct.result);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PaidCallHistoryTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public PaidCallHistoryTupleScheme getScheme() {
      return new PaidCallHistoryTupleScheme();
    }
  }

  private static class PaidCallHistoryTupleScheme extends org.apache.thrift.scheme.TupleScheme<PaidCallHistory> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PaidCallHistory struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSeq()) {
        optionals.set(0);
      }
      if (struct.isSetType()) {
        optionals.set(1);
      }
      if (struct.isSetDialedNumber()) {
        optionals.set(2);
      }
      if (struct.isSetCalledNumber()) {
        optionals.set(3);
      }
      if (struct.isSetToMid()) {
        optionals.set(4);
      }
      if (struct.isSetToName()) {
        optionals.set(5);
      }
      if (struct.isSetSetupTime()) {
        optionals.set(6);
      }
      if (struct.isSetStartTime()) {
        optionals.set(7);
      }
      if (struct.isSetEndTime()) {
        optionals.set(8);
      }
      if (struct.isSetDuration()) {
        optionals.set(9);
      }
      if (struct.isSetTerminate()) {
        optionals.set(10);
      }
      if (struct.isSetProductType()) {
        optionals.set(11);
      }
      if (struct.isSetCharge()) {
        optionals.set(12);
      }
      if (struct.isSetUnit()) {
        optionals.set(13);
      }
      if (struct.isSetResult()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetSeq()) {
        oprot.writeI64(struct.seq);
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type.getValue());
      }
      if (struct.isSetDialedNumber()) {
        oprot.writeString(struct.dialedNumber);
      }
      if (struct.isSetCalledNumber()) {
        oprot.writeString(struct.calledNumber);
      }
      if (struct.isSetToMid()) {
        oprot.writeString(struct.toMid);
      }
      if (struct.isSetToName()) {
        oprot.writeString(struct.toName);
      }
      if (struct.isSetSetupTime()) {
        oprot.writeI64(struct.setupTime);
      }
      if (struct.isSetStartTime()) {
        oprot.writeI64(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeI64(struct.endTime);
      }
      if (struct.isSetDuration()) {
        oprot.writeI64(struct.duration);
      }
      if (struct.isSetTerminate()) {
        oprot.writeI32(struct.terminate);
      }
      if (struct.isSetProductType()) {
        oprot.writeI32(struct.productType.getValue());
      }
      if (struct.isSetCharge()) {
        oprot.writeI32(struct.charge);
      }
      if (struct.isSetUnit()) {
        oprot.writeString(struct.unit);
      }
      if (struct.isSetResult()) {
        oprot.writeString(struct.result);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PaidCallHistory struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.seq = iprot.readI64();
        struct.setSeqIsSet(true);
      }
      if (incoming.get(1)) {
        struct.type = PaidCallType.findByValue(iprot.readI32());
        struct.setTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dialedNumber = iprot.readString();
        struct.setDialedNumberIsSet(true);
      }
      if (incoming.get(3)) {
        struct.calledNumber = iprot.readString();
        struct.setCalledNumberIsSet(true);
      }
      if (incoming.get(4)) {
        struct.toMid = iprot.readString();
        struct.setToMidIsSet(true);
      }
      if (incoming.get(5)) {
        struct.toName = iprot.readString();
        struct.setToNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.setupTime = iprot.readI64();
        struct.setSetupTimeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.startTime = iprot.readI64();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.endTime = iprot.readI64();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.duration = iprot.readI64();
        struct.setDurationIsSet(true);
      }
      if (incoming.get(10)) {
        struct.terminate = iprot.readI32();
        struct.setTerminateIsSet(true);
      }
      if (incoming.get(11)) {
        struct.productType = PaidCallProductType.findByValue(iprot.readI32());
        struct.setProductTypeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.charge = iprot.readI32();
        struct.setChargeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.unit = iprot.readString();
        struct.setUnitIsSet(true);
      }
      if (incoming.get(14)) {
        struct.result = iprot.readString();
        struct.setResultIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

