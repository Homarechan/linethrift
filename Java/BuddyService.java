/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2020-04-18")
public class BuddyService {

  public interface Iface {

    public java.util.List<BuddySearchResult> findBuddyContactsByQuery(java.lang.String language, java.lang.String country, java.lang.String query, int fromIndex, int count, BuddySearchRequestSource requestSource) throws TalkException, org.apache.thrift.TException;

    public java.util.List<Contact> getBuddyContacts(java.lang.String language, java.lang.String country, java.lang.String classification, int fromIndex, int count) throws TalkException, org.apache.thrift.TException;

    public BuddyDetail getBuddyDetail(java.lang.String buddyMid) throws TalkException, org.apache.thrift.TException;

    public BuddyOnAir getBuddyOnAir(java.lang.String buddyMid) throws TalkException, org.apache.thrift.TException;

    public java.util.List<java.lang.String> getCountriesHavingBuddy() throws TalkException, org.apache.thrift.TException;

    public java.util.Map<java.lang.String,java.lang.Long> getNewlyReleasedBuddyIds(java.lang.String country) throws TalkException, org.apache.thrift.TException;

    public BuddyBanner getPopularBuddyBanner(java.lang.String language, java.lang.String country, ApplicationType applicationType, java.lang.String resourceSpecification) throws TalkException, org.apache.thrift.TException;

    public java.util.List<BuddyList> getPopularBuddyLists(java.lang.String language, java.lang.String country) throws TalkException, org.apache.thrift.TException;

    public java.util.List<Contact> getPromotedBuddyContacts(java.lang.String language, java.lang.String country) throws TalkException, org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void findBuddyContactsByQuery(java.lang.String language, java.lang.String country, java.lang.String query, int fromIndex, int count, BuddySearchRequestSource requestSource, org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddySearchResult>> resultHandler) throws org.apache.thrift.TException;

    public void getBuddyContacts(java.lang.String language, java.lang.String country, java.lang.String classification, int fromIndex, int count, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>> resultHandler) throws org.apache.thrift.TException;

    public void getBuddyDetail(java.lang.String buddyMid, org.apache.thrift.async.AsyncMethodCallback<BuddyDetail> resultHandler) throws org.apache.thrift.TException;

    public void getBuddyOnAir(java.lang.String buddyMid, org.apache.thrift.async.AsyncMethodCallback<BuddyOnAir> resultHandler) throws org.apache.thrift.TException;

    public void getCountriesHavingBuddy(org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>> resultHandler) throws org.apache.thrift.TException;

    public void getNewlyReleasedBuddyIds(java.lang.String country, org.apache.thrift.async.AsyncMethodCallback<java.util.Map<java.lang.String,java.lang.Long>> resultHandler) throws org.apache.thrift.TException;

    public void getPopularBuddyBanner(java.lang.String language, java.lang.String country, ApplicationType applicationType, java.lang.String resourceSpecification, org.apache.thrift.async.AsyncMethodCallback<BuddyBanner> resultHandler) throws org.apache.thrift.TException;

    public void getPopularBuddyLists(java.lang.String language, java.lang.String country, org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddyList>> resultHandler) throws org.apache.thrift.TException;

    public void getPromotedBuddyContacts(java.lang.String language, java.lang.String country, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public java.util.List<BuddySearchResult> findBuddyContactsByQuery(java.lang.String language, java.lang.String country, java.lang.String query, int fromIndex, int count, BuddySearchRequestSource requestSource) throws TalkException, org.apache.thrift.TException
    {
      send_findBuddyContactsByQuery(language, country, query, fromIndex, count, requestSource);
      return recv_findBuddyContactsByQuery();
    }

    public void send_findBuddyContactsByQuery(java.lang.String language, java.lang.String country, java.lang.String query, int fromIndex, int count, BuddySearchRequestSource requestSource) throws org.apache.thrift.TException
    {
      findBuddyContactsByQuery_args args = new findBuddyContactsByQuery_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.setQuery(query);
      args.setFromIndex(fromIndex);
      args.setCount(count);
      args.setRequestSource(requestSource);
      sendBase("findBuddyContactsByQuery", args);
    }

    public java.util.List<BuddySearchResult> recv_findBuddyContactsByQuery() throws TalkException, org.apache.thrift.TException
    {
      findBuddyContactsByQuery_result result = new findBuddyContactsByQuery_result();
      receiveBase(result, "findBuddyContactsByQuery");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findBuddyContactsByQuery failed: unknown result");
    }

    public java.util.List<Contact> getBuddyContacts(java.lang.String language, java.lang.String country, java.lang.String classification, int fromIndex, int count) throws TalkException, org.apache.thrift.TException
    {
      send_getBuddyContacts(language, country, classification, fromIndex, count);
      return recv_getBuddyContacts();
    }

    public void send_getBuddyContacts(java.lang.String language, java.lang.String country, java.lang.String classification, int fromIndex, int count) throws org.apache.thrift.TException
    {
      getBuddyContacts_args args = new getBuddyContacts_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.setClassification(classification);
      args.setFromIndex(fromIndex);
      args.setCount(count);
      sendBase("getBuddyContacts", args);
    }

    public java.util.List<Contact> recv_getBuddyContacts() throws TalkException, org.apache.thrift.TException
    {
      getBuddyContacts_result result = new getBuddyContacts_result();
      receiveBase(result, "getBuddyContacts");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getBuddyContacts failed: unknown result");
    }

    public BuddyDetail getBuddyDetail(java.lang.String buddyMid) throws TalkException, org.apache.thrift.TException
    {
      send_getBuddyDetail(buddyMid);
      return recv_getBuddyDetail();
    }

    public void send_getBuddyDetail(java.lang.String buddyMid) throws org.apache.thrift.TException
    {
      getBuddyDetail_args args = new getBuddyDetail_args();
      args.setBuddyMid(buddyMid);
      sendBase("getBuddyDetail", args);
    }

    public BuddyDetail recv_getBuddyDetail() throws TalkException, org.apache.thrift.TException
    {
      getBuddyDetail_result result = new getBuddyDetail_result();
      receiveBase(result, "getBuddyDetail");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getBuddyDetail failed: unknown result");
    }

    public BuddyOnAir getBuddyOnAir(java.lang.String buddyMid) throws TalkException, org.apache.thrift.TException
    {
      send_getBuddyOnAir(buddyMid);
      return recv_getBuddyOnAir();
    }

    public void send_getBuddyOnAir(java.lang.String buddyMid) throws org.apache.thrift.TException
    {
      getBuddyOnAir_args args = new getBuddyOnAir_args();
      args.setBuddyMid(buddyMid);
      sendBase("getBuddyOnAir", args);
    }

    public BuddyOnAir recv_getBuddyOnAir() throws TalkException, org.apache.thrift.TException
    {
      getBuddyOnAir_result result = new getBuddyOnAir_result();
      receiveBase(result, "getBuddyOnAir");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getBuddyOnAir failed: unknown result");
    }

    public java.util.List<java.lang.String> getCountriesHavingBuddy() throws TalkException, org.apache.thrift.TException
    {
      send_getCountriesHavingBuddy();
      return recv_getCountriesHavingBuddy();
    }

    public void send_getCountriesHavingBuddy() throws org.apache.thrift.TException
    {
      getCountriesHavingBuddy_args args = new getCountriesHavingBuddy_args();
      sendBase("getCountriesHavingBuddy", args);
    }

    public java.util.List<java.lang.String> recv_getCountriesHavingBuddy() throws TalkException, org.apache.thrift.TException
    {
      getCountriesHavingBuddy_result result = new getCountriesHavingBuddy_result();
      receiveBase(result, "getCountriesHavingBuddy");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getCountriesHavingBuddy failed: unknown result");
    }

    public java.util.Map<java.lang.String,java.lang.Long> getNewlyReleasedBuddyIds(java.lang.String country) throws TalkException, org.apache.thrift.TException
    {
      send_getNewlyReleasedBuddyIds(country);
      return recv_getNewlyReleasedBuddyIds();
    }

    public void send_getNewlyReleasedBuddyIds(java.lang.String country) throws org.apache.thrift.TException
    {
      getNewlyReleasedBuddyIds_args args = new getNewlyReleasedBuddyIds_args();
      args.setCountry(country);
      sendBase("getNewlyReleasedBuddyIds", args);
    }

    public java.util.Map<java.lang.String,java.lang.Long> recv_getNewlyReleasedBuddyIds() throws TalkException, org.apache.thrift.TException
    {
      getNewlyReleasedBuddyIds_result result = new getNewlyReleasedBuddyIds_result();
      receiveBase(result, "getNewlyReleasedBuddyIds");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getNewlyReleasedBuddyIds failed: unknown result");
    }

    public BuddyBanner getPopularBuddyBanner(java.lang.String language, java.lang.String country, ApplicationType applicationType, java.lang.String resourceSpecification) throws TalkException, org.apache.thrift.TException
    {
      send_getPopularBuddyBanner(language, country, applicationType, resourceSpecification);
      return recv_getPopularBuddyBanner();
    }

    public void send_getPopularBuddyBanner(java.lang.String language, java.lang.String country, ApplicationType applicationType, java.lang.String resourceSpecification) throws org.apache.thrift.TException
    {
      getPopularBuddyBanner_args args = new getPopularBuddyBanner_args();
      args.setLanguage(language);
      args.setCountry(country);
      args.setApplicationType(applicationType);
      args.setResourceSpecification(resourceSpecification);
      sendBase("getPopularBuddyBanner", args);
    }

    public BuddyBanner recv_getPopularBuddyBanner() throws TalkException, org.apache.thrift.TException
    {
      getPopularBuddyBanner_result result = new getPopularBuddyBanner_result();
      receiveBase(result, "getPopularBuddyBanner");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getPopularBuddyBanner failed: unknown result");
    }

    public java.util.List<BuddyList> getPopularBuddyLists(java.lang.String language, java.lang.String country) throws TalkException, org.apache.thrift.TException
    {
      send_getPopularBuddyLists(language, country);
      return recv_getPopularBuddyLists();
    }

    public void send_getPopularBuddyLists(java.lang.String language, java.lang.String country) throws org.apache.thrift.TException
    {
      getPopularBuddyLists_args args = new getPopularBuddyLists_args();
      args.setLanguage(language);
      args.setCountry(country);
      sendBase("getPopularBuddyLists", args);
    }

    public java.util.List<BuddyList> recv_getPopularBuddyLists() throws TalkException, org.apache.thrift.TException
    {
      getPopularBuddyLists_result result = new getPopularBuddyLists_result();
      receiveBase(result, "getPopularBuddyLists");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getPopularBuddyLists failed: unknown result");
    }

    public java.util.List<Contact> getPromotedBuddyContacts(java.lang.String language, java.lang.String country) throws TalkException, org.apache.thrift.TException
    {
      send_getPromotedBuddyContacts(language, country);
      return recv_getPromotedBuddyContacts();
    }

    public void send_getPromotedBuddyContacts(java.lang.String language, java.lang.String country) throws org.apache.thrift.TException
    {
      getPromotedBuddyContacts_args args = new getPromotedBuddyContacts_args();
      args.setLanguage(language);
      args.setCountry(country);
      sendBase("getPromotedBuddyContacts", args);
    }

    public java.util.List<Contact> recv_getPromotedBuddyContacts() throws TalkException, org.apache.thrift.TException
    {
      getPromotedBuddyContacts_result result = new getPromotedBuddyContacts_result();
      receiveBase(result, "getPromotedBuddyContacts");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.e != null) {
        throw result.e;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getPromotedBuddyContacts failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void findBuddyContactsByQuery(java.lang.String language, java.lang.String country, java.lang.String query, int fromIndex, int count, BuddySearchRequestSource requestSource, org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddySearchResult>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findBuddyContactsByQuery_call method_call = new findBuddyContactsByQuery_call(language, country, query, fromIndex, count, requestSource, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findBuddyContactsByQuery_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<BuddySearchResult>> {
      private java.lang.String language;
      private java.lang.String country;
      private java.lang.String query;
      private int fromIndex;
      private int count;
      private BuddySearchRequestSource requestSource;
      public findBuddyContactsByQuery_call(java.lang.String language, java.lang.String country, java.lang.String query, int fromIndex, int count, BuddySearchRequestSource requestSource, org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddySearchResult>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.language = language;
        this.country = country;
        this.query = query;
        this.fromIndex = fromIndex;
        this.count = count;
        this.requestSource = requestSource;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findBuddyContactsByQuery", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findBuddyContactsByQuery_args args = new findBuddyContactsByQuery_args();
        args.setLanguage(language);
        args.setCountry(country);
        args.setQuery(query);
        args.setFromIndex(fromIndex);
        args.setCount(count);
        args.setRequestSource(requestSource);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<BuddySearchResult> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findBuddyContactsByQuery();
      }
    }

    public void getBuddyContacts(java.lang.String language, java.lang.String country, java.lang.String classification, int fromIndex, int count, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getBuddyContacts_call method_call = new getBuddyContacts_call(language, country, classification, fromIndex, count, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getBuddyContacts_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<Contact>> {
      private java.lang.String language;
      private java.lang.String country;
      private java.lang.String classification;
      private int fromIndex;
      private int count;
      public getBuddyContacts_call(java.lang.String language, java.lang.String country, java.lang.String classification, int fromIndex, int count, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.language = language;
        this.country = country;
        this.classification = classification;
        this.fromIndex = fromIndex;
        this.count = count;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getBuddyContacts", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getBuddyContacts_args args = new getBuddyContacts_args();
        args.setLanguage(language);
        args.setCountry(country);
        args.setClassification(classification);
        args.setFromIndex(fromIndex);
        args.setCount(count);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<Contact> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getBuddyContacts();
      }
    }

    public void getBuddyDetail(java.lang.String buddyMid, org.apache.thrift.async.AsyncMethodCallback<BuddyDetail> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getBuddyDetail_call method_call = new getBuddyDetail_call(buddyMid, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getBuddyDetail_call extends org.apache.thrift.async.TAsyncMethodCall<BuddyDetail> {
      private java.lang.String buddyMid;
      public getBuddyDetail_call(java.lang.String buddyMid, org.apache.thrift.async.AsyncMethodCallback<BuddyDetail> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.buddyMid = buddyMid;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getBuddyDetail", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getBuddyDetail_args args = new getBuddyDetail_args();
        args.setBuddyMid(buddyMid);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public BuddyDetail getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getBuddyDetail();
      }
    }

    public void getBuddyOnAir(java.lang.String buddyMid, org.apache.thrift.async.AsyncMethodCallback<BuddyOnAir> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getBuddyOnAir_call method_call = new getBuddyOnAir_call(buddyMid, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getBuddyOnAir_call extends org.apache.thrift.async.TAsyncMethodCall<BuddyOnAir> {
      private java.lang.String buddyMid;
      public getBuddyOnAir_call(java.lang.String buddyMid, org.apache.thrift.async.AsyncMethodCallback<BuddyOnAir> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.buddyMid = buddyMid;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getBuddyOnAir", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getBuddyOnAir_args args = new getBuddyOnAir_args();
        args.setBuddyMid(buddyMid);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public BuddyOnAir getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getBuddyOnAir();
      }
    }

    public void getCountriesHavingBuddy(org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getCountriesHavingBuddy_call method_call = new getCountriesHavingBuddy_call(resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getCountriesHavingBuddy_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<java.lang.String>> {
      public getCountriesHavingBuddy_call(org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getCountriesHavingBuddy", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getCountriesHavingBuddy_args args = new getCountriesHavingBuddy_args();
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<java.lang.String> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getCountriesHavingBuddy();
      }
    }

    public void getNewlyReleasedBuddyIds(java.lang.String country, org.apache.thrift.async.AsyncMethodCallback<java.util.Map<java.lang.String,java.lang.Long>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getNewlyReleasedBuddyIds_call method_call = new getNewlyReleasedBuddyIds_call(country, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getNewlyReleasedBuddyIds_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.Map<java.lang.String,java.lang.Long>> {
      private java.lang.String country;
      public getNewlyReleasedBuddyIds_call(java.lang.String country, org.apache.thrift.async.AsyncMethodCallback<java.util.Map<java.lang.String,java.lang.Long>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.country = country;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getNewlyReleasedBuddyIds", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getNewlyReleasedBuddyIds_args args = new getNewlyReleasedBuddyIds_args();
        args.setCountry(country);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.Map<java.lang.String,java.lang.Long> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getNewlyReleasedBuddyIds();
      }
    }

    public void getPopularBuddyBanner(java.lang.String language, java.lang.String country, ApplicationType applicationType, java.lang.String resourceSpecification, org.apache.thrift.async.AsyncMethodCallback<BuddyBanner> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getPopularBuddyBanner_call method_call = new getPopularBuddyBanner_call(language, country, applicationType, resourceSpecification, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getPopularBuddyBanner_call extends org.apache.thrift.async.TAsyncMethodCall<BuddyBanner> {
      private java.lang.String language;
      private java.lang.String country;
      private ApplicationType applicationType;
      private java.lang.String resourceSpecification;
      public getPopularBuddyBanner_call(java.lang.String language, java.lang.String country, ApplicationType applicationType, java.lang.String resourceSpecification, org.apache.thrift.async.AsyncMethodCallback<BuddyBanner> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.language = language;
        this.country = country;
        this.applicationType = applicationType;
        this.resourceSpecification = resourceSpecification;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getPopularBuddyBanner", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getPopularBuddyBanner_args args = new getPopularBuddyBanner_args();
        args.setLanguage(language);
        args.setCountry(country);
        args.setApplicationType(applicationType);
        args.setResourceSpecification(resourceSpecification);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public BuddyBanner getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getPopularBuddyBanner();
      }
    }

    public void getPopularBuddyLists(java.lang.String language, java.lang.String country, org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddyList>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getPopularBuddyLists_call method_call = new getPopularBuddyLists_call(language, country, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getPopularBuddyLists_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<BuddyList>> {
      private java.lang.String language;
      private java.lang.String country;
      public getPopularBuddyLists_call(java.lang.String language, java.lang.String country, org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddyList>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.language = language;
        this.country = country;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getPopularBuddyLists", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getPopularBuddyLists_args args = new getPopularBuddyLists_args();
        args.setLanguage(language);
        args.setCountry(country);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<BuddyList> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getPopularBuddyLists();
      }
    }

    public void getPromotedBuddyContacts(java.lang.String language, java.lang.String country, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getPromotedBuddyContacts_call method_call = new getPromotedBuddyContacts_call(language, country, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getPromotedBuddyContacts_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.List<Contact>> {
      private java.lang.String language;
      private java.lang.String country;
      public getPromotedBuddyContacts_call(java.lang.String language, java.lang.String country, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.language = language;
        this.country = country;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getPromotedBuddyContacts", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getPromotedBuddyContacts_args args = new getPromotedBuddyContacts_args();
        args.setLanguage(language);
        args.setCountry(country);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.List<Contact> getResult() throws TalkException, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getPromotedBuddyContacts();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("findBuddyContactsByQuery", new findBuddyContactsByQuery());
      processMap.put("getBuddyContacts", new getBuddyContacts());
      processMap.put("getBuddyDetail", new getBuddyDetail());
      processMap.put("getBuddyOnAir", new getBuddyOnAir());
      processMap.put("getCountriesHavingBuddy", new getCountriesHavingBuddy());
      processMap.put("getNewlyReleasedBuddyIds", new getNewlyReleasedBuddyIds());
      processMap.put("getPopularBuddyBanner", new getPopularBuddyBanner());
      processMap.put("getPopularBuddyLists", new getPopularBuddyLists());
      processMap.put("getPromotedBuddyContacts", new getPromotedBuddyContacts());
      return processMap;
    }

    public static class findBuddyContactsByQuery<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findBuddyContactsByQuery_args> {
      public findBuddyContactsByQuery() {
        super("findBuddyContactsByQuery");
      }

      public findBuddyContactsByQuery_args getEmptyArgsInstance() {
        return new findBuddyContactsByQuery_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public findBuddyContactsByQuery_result getResult(I iface, findBuddyContactsByQuery_args args) throws org.apache.thrift.TException {
        findBuddyContactsByQuery_result result = new findBuddyContactsByQuery_result();
        try {
          result.success = iface.findBuddyContactsByQuery(args.language, args.country, args.query, args.fromIndex, args.count, args.requestSource);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getBuddyContacts<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getBuddyContacts_args> {
      public getBuddyContacts() {
        super("getBuddyContacts");
      }

      public getBuddyContacts_args getEmptyArgsInstance() {
        return new getBuddyContacts_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getBuddyContacts_result getResult(I iface, getBuddyContacts_args args) throws org.apache.thrift.TException {
        getBuddyContacts_result result = new getBuddyContacts_result();
        try {
          result.success = iface.getBuddyContacts(args.language, args.country, args.classification, args.fromIndex, args.count);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getBuddyDetail<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getBuddyDetail_args> {
      public getBuddyDetail() {
        super("getBuddyDetail");
      }

      public getBuddyDetail_args getEmptyArgsInstance() {
        return new getBuddyDetail_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getBuddyDetail_result getResult(I iface, getBuddyDetail_args args) throws org.apache.thrift.TException {
        getBuddyDetail_result result = new getBuddyDetail_result();
        try {
          result.success = iface.getBuddyDetail(args.buddyMid);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getBuddyOnAir<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getBuddyOnAir_args> {
      public getBuddyOnAir() {
        super("getBuddyOnAir");
      }

      public getBuddyOnAir_args getEmptyArgsInstance() {
        return new getBuddyOnAir_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getBuddyOnAir_result getResult(I iface, getBuddyOnAir_args args) throws org.apache.thrift.TException {
        getBuddyOnAir_result result = new getBuddyOnAir_result();
        try {
          result.success = iface.getBuddyOnAir(args.buddyMid);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getCountriesHavingBuddy<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getCountriesHavingBuddy_args> {
      public getCountriesHavingBuddy() {
        super("getCountriesHavingBuddy");
      }

      public getCountriesHavingBuddy_args getEmptyArgsInstance() {
        return new getCountriesHavingBuddy_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getCountriesHavingBuddy_result getResult(I iface, getCountriesHavingBuddy_args args) throws org.apache.thrift.TException {
        getCountriesHavingBuddy_result result = new getCountriesHavingBuddy_result();
        try {
          result.success = iface.getCountriesHavingBuddy();
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getNewlyReleasedBuddyIds<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getNewlyReleasedBuddyIds_args> {
      public getNewlyReleasedBuddyIds() {
        super("getNewlyReleasedBuddyIds");
      }

      public getNewlyReleasedBuddyIds_args getEmptyArgsInstance() {
        return new getNewlyReleasedBuddyIds_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getNewlyReleasedBuddyIds_result getResult(I iface, getNewlyReleasedBuddyIds_args args) throws org.apache.thrift.TException {
        getNewlyReleasedBuddyIds_result result = new getNewlyReleasedBuddyIds_result();
        try {
          result.success = iface.getNewlyReleasedBuddyIds(args.country);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getPopularBuddyBanner<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getPopularBuddyBanner_args> {
      public getPopularBuddyBanner() {
        super("getPopularBuddyBanner");
      }

      public getPopularBuddyBanner_args getEmptyArgsInstance() {
        return new getPopularBuddyBanner_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getPopularBuddyBanner_result getResult(I iface, getPopularBuddyBanner_args args) throws org.apache.thrift.TException {
        getPopularBuddyBanner_result result = new getPopularBuddyBanner_result();
        try {
          result.success = iface.getPopularBuddyBanner(args.language, args.country, args.applicationType, args.resourceSpecification);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getPopularBuddyLists<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getPopularBuddyLists_args> {
      public getPopularBuddyLists() {
        super("getPopularBuddyLists");
      }

      public getPopularBuddyLists_args getEmptyArgsInstance() {
        return new getPopularBuddyLists_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getPopularBuddyLists_result getResult(I iface, getPopularBuddyLists_args args) throws org.apache.thrift.TException {
        getPopularBuddyLists_result result = new getPopularBuddyLists_result();
        try {
          result.success = iface.getPopularBuddyLists(args.language, args.country);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

    public static class getPromotedBuddyContacts<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getPromotedBuddyContacts_args> {
      public getPromotedBuddyContacts() {
        super("getPromotedBuddyContacts");
      }

      public getPromotedBuddyContacts_args getEmptyArgsInstance() {
        return new getPromotedBuddyContacts_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getPromotedBuddyContacts_result getResult(I iface, getPromotedBuddyContacts_args args) throws org.apache.thrift.TException {
        getPromotedBuddyContacts_result result = new getPromotedBuddyContacts_result();
        try {
          result.success = iface.getPromotedBuddyContacts(args.language, args.country);
        } catch (TalkException e) {
          result.e = e;
        }
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("findBuddyContactsByQuery", new findBuddyContactsByQuery());
      processMap.put("getBuddyContacts", new getBuddyContacts());
      processMap.put("getBuddyDetail", new getBuddyDetail());
      processMap.put("getBuddyOnAir", new getBuddyOnAir());
      processMap.put("getCountriesHavingBuddy", new getCountriesHavingBuddy());
      processMap.put("getNewlyReleasedBuddyIds", new getNewlyReleasedBuddyIds());
      processMap.put("getPopularBuddyBanner", new getPopularBuddyBanner());
      processMap.put("getPopularBuddyLists", new getPopularBuddyLists());
      processMap.put("getPromotedBuddyContacts", new getPromotedBuddyContacts());
      return processMap;
    }

    public static class findBuddyContactsByQuery<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findBuddyContactsByQuery_args, java.util.List<BuddySearchResult>> {
      public findBuddyContactsByQuery() {
        super("findBuddyContactsByQuery");
      }

      public findBuddyContactsByQuery_args getEmptyArgsInstance() {
        return new findBuddyContactsByQuery_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddySearchResult>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddySearchResult>>() { 
          public void onComplete(java.util.List<BuddySearchResult> o) {
            findBuddyContactsByQuery_result result = new findBuddyContactsByQuery_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            findBuddyContactsByQuery_result result = new findBuddyContactsByQuery_result();
            if (e instanceof TalkException) {
              result.e = (TalkException) e;
              result.setEIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findBuddyContactsByQuery_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddySearchResult>> resultHandler) throws org.apache.thrift.TException {
        iface.findBuddyContactsByQuery(args.language, args.country, args.query, args.fromIndex, args.count, args.requestSource,resultHandler);
      }
    }

    public static class getBuddyContacts<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getBuddyContacts_args, java.util.List<Contact>> {
      public getBuddyContacts() {
        super("getBuddyContacts");
      }

      public getBuddyContacts_args getEmptyArgsInstance() {
        return new getBuddyContacts_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>>() { 
          public void onComplete(java.util.List<Contact> o) {
            getBuddyContacts_result result = new getBuddyContacts_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getBuddyContacts_result result = new getBuddyContacts_result();
            if (e instanceof TalkException) {
              result.e = (TalkException) e;
              result.setEIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getBuddyContacts_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>> resultHandler) throws org.apache.thrift.TException {
        iface.getBuddyContacts(args.language, args.country, args.classification, args.fromIndex, args.count,resultHandler);
      }
    }

    public static class getBuddyDetail<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getBuddyDetail_args, BuddyDetail> {
      public getBuddyDetail() {
        super("getBuddyDetail");
      }

      public getBuddyDetail_args getEmptyArgsInstance() {
        return new getBuddyDetail_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<BuddyDetail> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<BuddyDetail>() { 
          public void onComplete(BuddyDetail o) {
            getBuddyDetail_result result = new getBuddyDetail_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getBuddyDetail_result result = new getBuddyDetail_result();
            if (e instanceof TalkException) {
              result.e = (TalkException) e;
              result.setEIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getBuddyDetail_args args, org.apache.thrift.async.AsyncMethodCallback<BuddyDetail> resultHandler) throws org.apache.thrift.TException {
        iface.getBuddyDetail(args.buddyMid,resultHandler);
      }
    }

    public static class getBuddyOnAir<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getBuddyOnAir_args, BuddyOnAir> {
      public getBuddyOnAir() {
        super("getBuddyOnAir");
      }

      public getBuddyOnAir_args getEmptyArgsInstance() {
        return new getBuddyOnAir_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<BuddyOnAir> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<BuddyOnAir>() { 
          public void onComplete(BuddyOnAir o) {
            getBuddyOnAir_result result = new getBuddyOnAir_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getBuddyOnAir_result result = new getBuddyOnAir_result();
            if (e instanceof TalkException) {
              result.e = (TalkException) e;
              result.setEIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getBuddyOnAir_args args, org.apache.thrift.async.AsyncMethodCallback<BuddyOnAir> resultHandler) throws org.apache.thrift.TException {
        iface.getBuddyOnAir(args.buddyMid,resultHandler);
      }
    }

    public static class getCountriesHavingBuddy<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getCountriesHavingBuddy_args, java.util.List<java.lang.String>> {
      public getCountriesHavingBuddy() {
        super("getCountriesHavingBuddy");
      }

      public getCountriesHavingBuddy_args getEmptyArgsInstance() {
        return new getCountriesHavingBuddy_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>>() { 
          public void onComplete(java.util.List<java.lang.String> o) {
            getCountriesHavingBuddy_result result = new getCountriesHavingBuddy_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getCountriesHavingBuddy_result result = new getCountriesHavingBuddy_result();
            if (e instanceof TalkException) {
              result.e = (TalkException) e;
              result.setEIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getCountriesHavingBuddy_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<java.lang.String>> resultHandler) throws org.apache.thrift.TException {
        iface.getCountriesHavingBuddy(resultHandler);
      }
    }

    public static class getNewlyReleasedBuddyIds<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getNewlyReleasedBuddyIds_args, java.util.Map<java.lang.String,java.lang.Long>> {
      public getNewlyReleasedBuddyIds() {
        super("getNewlyReleasedBuddyIds");
      }

      public getNewlyReleasedBuddyIds_args getEmptyArgsInstance() {
        return new getNewlyReleasedBuddyIds_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.Map<java.lang.String,java.lang.Long>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.Map<java.lang.String,java.lang.Long>>() { 
          public void onComplete(java.util.Map<java.lang.String,java.lang.Long> o) {
            getNewlyReleasedBuddyIds_result result = new getNewlyReleasedBuddyIds_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getNewlyReleasedBuddyIds_result result = new getNewlyReleasedBuddyIds_result();
            if (e instanceof TalkException) {
              result.e = (TalkException) e;
              result.setEIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getNewlyReleasedBuddyIds_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.Map<java.lang.String,java.lang.Long>> resultHandler) throws org.apache.thrift.TException {
        iface.getNewlyReleasedBuddyIds(args.country,resultHandler);
      }
    }

    public static class getPopularBuddyBanner<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getPopularBuddyBanner_args, BuddyBanner> {
      public getPopularBuddyBanner() {
        super("getPopularBuddyBanner");
      }

      public getPopularBuddyBanner_args getEmptyArgsInstance() {
        return new getPopularBuddyBanner_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<BuddyBanner> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<BuddyBanner>() { 
          public void onComplete(BuddyBanner o) {
            getPopularBuddyBanner_result result = new getPopularBuddyBanner_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getPopularBuddyBanner_result result = new getPopularBuddyBanner_result();
            if (e instanceof TalkException) {
              result.e = (TalkException) e;
              result.setEIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getPopularBuddyBanner_args args, org.apache.thrift.async.AsyncMethodCallback<BuddyBanner> resultHandler) throws org.apache.thrift.TException {
        iface.getPopularBuddyBanner(args.language, args.country, args.applicationType, args.resourceSpecification,resultHandler);
      }
    }

    public static class getPopularBuddyLists<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getPopularBuddyLists_args, java.util.List<BuddyList>> {
      public getPopularBuddyLists() {
        super("getPopularBuddyLists");
      }

      public getPopularBuddyLists_args getEmptyArgsInstance() {
        return new getPopularBuddyLists_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddyList>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddyList>>() { 
          public void onComplete(java.util.List<BuddyList> o) {
            getPopularBuddyLists_result result = new getPopularBuddyLists_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getPopularBuddyLists_result result = new getPopularBuddyLists_result();
            if (e instanceof TalkException) {
              result.e = (TalkException) e;
              result.setEIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getPopularBuddyLists_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<BuddyList>> resultHandler) throws org.apache.thrift.TException {
        iface.getPopularBuddyLists(args.language, args.country,resultHandler);
      }
    }

    public static class getPromotedBuddyContacts<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getPromotedBuddyContacts_args, java.util.List<Contact>> {
      public getPromotedBuddyContacts() {
        super("getPromotedBuddyContacts");
      }

      public getPromotedBuddyContacts_args getEmptyArgsInstance() {
        return new getPromotedBuddyContacts_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>>() { 
          public void onComplete(java.util.List<Contact> o) {
            getPromotedBuddyContacts_result result = new getPromotedBuddyContacts_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getPromotedBuddyContacts_result result = new getPromotedBuddyContacts_result();
            if (e instanceof TalkException) {
              result.e = (TalkException) e;
              result.setEIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getPromotedBuddyContacts_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.List<Contact>> resultHandler) throws org.apache.thrift.TException {
        iface.getPromotedBuddyContacts(args.language, args.country,resultHandler);
      }
    }

  }

  public static class findBuddyContactsByQuery_args implements org.apache.thrift.TBase<findBuddyContactsByQuery_args, findBuddyContactsByQuery_args._Fields>, java.io.Serializable, Cloneable, Comparable<findBuddyContactsByQuery_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findBuddyContactsByQuery_args");

    private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField QUERY_FIELD_DESC = new org.apache.thrift.protocol.TField("query", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField FROM_INDEX_FIELD_DESC = new org.apache.thrift.protocol.TField("fromIndex", org.apache.thrift.protocol.TType.I32, (short)5);
    private static final org.apache.thrift.protocol.TField COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("count", org.apache.thrift.protocol.TType.I32, (short)6);
    private static final org.apache.thrift.protocol.TField REQUEST_SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("requestSource", org.apache.thrift.protocol.TType.I32, (short)7);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new findBuddyContactsByQuery_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new findBuddyContactsByQuery_argsTupleSchemeFactory();

    public java.lang.String language; // required
    public java.lang.String country; // required
    public java.lang.String query; // required
    public int fromIndex; // required
    public int count; // required
    /**
     * 
     * @see BuddySearchRequestSource
     */
    public BuddySearchRequestSource requestSource; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      LANGUAGE((short)2, "language"),
      COUNTRY((short)3, "country"),
      QUERY((short)4, "query"),
      FROM_INDEX((short)5, "fromIndex"),
      COUNT((short)6, "count"),
      /**
       * 
       * @see BuddySearchRequestSource
       */
      REQUEST_SOURCE((short)7, "requestSource");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 2: // LANGUAGE
            return LANGUAGE;
          case 3: // COUNTRY
            return COUNTRY;
          case 4: // QUERY
            return QUERY;
          case 5: // FROM_INDEX
            return FROM_INDEX;
          case 6: // COUNT
            return COUNT;
          case 7: // REQUEST_SOURCE
            return REQUEST_SOURCE;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __FROMINDEX_ISSET_ID = 0;
    private static final int __COUNT_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.QUERY, new org.apache.thrift.meta_data.FieldMetaData("query", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.FROM_INDEX, new org.apache.thrift.meta_data.FieldMetaData("fromIndex", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.COUNT, new org.apache.thrift.meta_data.FieldMetaData("count", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.REQUEST_SOURCE, new org.apache.thrift.meta_data.FieldMetaData("requestSource", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, BuddySearchRequestSource.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findBuddyContactsByQuery_args.class, metaDataMap);
    }

    public findBuddyContactsByQuery_args() {
    }

    public findBuddyContactsByQuery_args(
      java.lang.String language,
      java.lang.String country,
      java.lang.String query,
      int fromIndex,
      int count,
      BuddySearchRequestSource requestSource)
    {
      this();
      this.language = language;
      this.country = country;
      this.query = query;
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
      this.count = count;
      setCountIsSet(true);
      this.requestSource = requestSource;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findBuddyContactsByQuery_args(findBuddyContactsByQuery_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
      if (other.isSetQuery()) {
        this.query = other.query;
      }
      this.fromIndex = other.fromIndex;
      this.count = other.count;
      if (other.isSetRequestSource()) {
        this.requestSource = other.requestSource;
      }
    }

    public findBuddyContactsByQuery_args deepCopy() {
      return new findBuddyContactsByQuery_args(this);
    }

    @Override
    public void clear() {
      this.language = null;
      this.country = null;
      this.query = null;
      setFromIndexIsSet(false);
      this.fromIndex = 0;
      setCountIsSet(false);
      this.count = 0;
      this.requestSource = null;
    }

    public java.lang.String getLanguage() {
      return this.language;
    }

    public findBuddyContactsByQuery_args setLanguage(java.lang.String language) {
      this.language = language;
      return this;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public java.lang.String getCountry() {
      return this.country;
    }

    public findBuddyContactsByQuery_args setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public java.lang.String getQuery() {
      return this.query;
    }

    public findBuddyContactsByQuery_args setQuery(java.lang.String query) {
      this.query = query;
      return this;
    }

    public void unsetQuery() {
      this.query = null;
    }

    /** Returns true if field query is set (has been assigned a value) and false otherwise */
    public boolean isSetQuery() {
      return this.query != null;
    }

    public void setQueryIsSet(boolean value) {
      if (!value) {
        this.query = null;
      }
    }

    public int getFromIndex() {
      return this.fromIndex;
    }

    public findBuddyContactsByQuery_args setFromIndex(int fromIndex) {
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
      return this;
    }

    public void unsetFromIndex() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FROMINDEX_ISSET_ID);
    }

    /** Returns true if field fromIndex is set (has been assigned a value) and false otherwise */
    public boolean isSetFromIndex() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FROMINDEX_ISSET_ID);
    }

    public void setFromIndexIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FROMINDEX_ISSET_ID, value);
    }

    public int getCount() {
      return this.count;
    }

    public findBuddyContactsByQuery_args setCount(int count) {
      this.count = count;
      setCountIsSet(true);
      return this;
    }

    public void unsetCount() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COUNT_ISSET_ID);
    }

    /** Returns true if field count is set (has been assigned a value) and false otherwise */
    public boolean isSetCount() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COUNT_ISSET_ID);
    }

    public void setCountIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COUNT_ISSET_ID, value);
    }

    /**
     * 
     * @see BuddySearchRequestSource
     */
    public BuddySearchRequestSource getRequestSource() {
      return this.requestSource;
    }

    /**
     * 
     * @see BuddySearchRequestSource
     */
    public findBuddyContactsByQuery_args setRequestSource(BuddySearchRequestSource requestSource) {
      this.requestSource = requestSource;
      return this;
    }

    public void unsetRequestSource() {
      this.requestSource = null;
    }

    /** Returns true if field requestSource is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestSource() {
      return this.requestSource != null;
    }

    public void setRequestSourceIsSet(boolean value) {
      if (!value) {
        this.requestSource = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case LANGUAGE:
        if (value == null) {
          unsetLanguage();
        } else {
          setLanguage((java.lang.String)value);
        }
        break;

      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((java.lang.String)value);
        }
        break;

      case QUERY:
        if (value == null) {
          unsetQuery();
        } else {
          setQuery((java.lang.String)value);
        }
        break;

      case FROM_INDEX:
        if (value == null) {
          unsetFromIndex();
        } else {
          setFromIndex((java.lang.Integer)value);
        }
        break;

      case COUNT:
        if (value == null) {
          unsetCount();
        } else {
          setCount((java.lang.Integer)value);
        }
        break;

      case REQUEST_SOURCE:
        if (value == null) {
          unsetRequestSource();
        } else {
          setRequestSource((BuddySearchRequestSource)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case LANGUAGE:
        return getLanguage();

      case COUNTRY:
        return getCountry();

      case QUERY:
        return getQuery();

      case FROM_INDEX:
        return getFromIndex();

      case COUNT:
        return getCount();

      case REQUEST_SOURCE:
        return getRequestSource();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case LANGUAGE:
        return isSetLanguage();
      case COUNTRY:
        return isSetCountry();
      case QUERY:
        return isSetQuery();
      case FROM_INDEX:
        return isSetFromIndex();
      case COUNT:
        return isSetCount();
      case REQUEST_SOURCE:
        return isSetRequestSource();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof findBuddyContactsByQuery_args)
        return this.equals((findBuddyContactsByQuery_args)that);
      return false;
    }

    public boolean equals(findBuddyContactsByQuery_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      boolean this_present_query = true && this.isSetQuery();
      boolean that_present_query = true && that.isSetQuery();
      if (this_present_query || that_present_query) {
        if (!(this_present_query && that_present_query))
          return false;
        if (!this.query.equals(that.query))
          return false;
      }

      boolean this_present_fromIndex = true;
      boolean that_present_fromIndex = true;
      if (this_present_fromIndex || that_present_fromIndex) {
        if (!(this_present_fromIndex && that_present_fromIndex))
          return false;
        if (this.fromIndex != that.fromIndex)
          return false;
      }

      boolean this_present_count = true;
      boolean that_present_count = true;
      if (this_present_count || that_present_count) {
        if (!(this_present_count && that_present_count))
          return false;
        if (this.count != that.count)
          return false;
      }

      boolean this_present_requestSource = true && this.isSetRequestSource();
      boolean that_present_requestSource = true && that.isSetRequestSource();
      if (this_present_requestSource || that_present_requestSource) {
        if (!(this_present_requestSource && that_present_requestSource))
          return false;
        if (!this.requestSource.equals(that.requestSource))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetLanguage()) ? 131071 : 524287);
      if (isSetLanguage())
        hashCode = hashCode * 8191 + language.hashCode();

      hashCode = hashCode * 8191 + ((isSetCountry()) ? 131071 : 524287);
      if (isSetCountry())
        hashCode = hashCode * 8191 + country.hashCode();

      hashCode = hashCode * 8191 + ((isSetQuery()) ? 131071 : 524287);
      if (isSetQuery())
        hashCode = hashCode * 8191 + query.hashCode();

      hashCode = hashCode * 8191 + fromIndex;

      hashCode = hashCode * 8191 + count;

      hashCode = hashCode * 8191 + ((isSetRequestSource()) ? 131071 : 524287);
      if (isSetRequestSource())
        hashCode = hashCode * 8191 + requestSource.getValue();

      return hashCode;
    }

    @Override
    public int compareTo(findBuddyContactsByQuery_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetQuery()).compareTo(other.isSetQuery());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQuery()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.query, other.query);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetFromIndex()).compareTo(other.isSetFromIndex());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFromIndex()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromIndex, other.fromIndex);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCount()).compareTo(other.isSetCount());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCount()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.count, other.count);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetRequestSource()).compareTo(other.isSetRequestSource());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestSource()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestSource, other.requestSource);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("findBuddyContactsByQuery_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("query:");
      if (this.query == null) {
        sb.append("null");
      } else {
        sb.append(this.query);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("fromIndex:");
      sb.append(this.fromIndex);
      first = false;
      if (!first) sb.append(", ");
      sb.append("count:");
      sb.append(this.count);
      first = false;
      if (!first) sb.append(", ");
      sb.append("requestSource:");
      if (this.requestSource == null) {
        sb.append("null");
      } else {
        sb.append(this.requestSource);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findBuddyContactsByQuery_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public findBuddyContactsByQuery_argsStandardScheme getScheme() {
        return new findBuddyContactsByQuery_argsStandardScheme();
      }
    }

    private static class findBuddyContactsByQuery_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<findBuddyContactsByQuery_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findBuddyContactsByQuery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 2: // LANGUAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.language = iprot.readString();
                struct.setLanguageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // QUERY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.query = iprot.readString();
                struct.setQueryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // FROM_INDEX
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.fromIndex = iprot.readI32();
                struct.setFromIndexIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // COUNT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.count = iprot.readI32();
                struct.setCountIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 7: // REQUEST_SOURCE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.requestSource = BuddySearchRequestSource.findByValue(iprot.readI32());
                struct.setRequestSourceIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findBuddyContactsByQuery_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.language != null) {
          oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.language);
          oprot.writeFieldEnd();
        }
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        if (struct.query != null) {
          oprot.writeFieldBegin(QUERY_FIELD_DESC);
          oprot.writeString(struct.query);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(FROM_INDEX_FIELD_DESC);
        oprot.writeI32(struct.fromIndex);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(COUNT_FIELD_DESC);
        oprot.writeI32(struct.count);
        oprot.writeFieldEnd();
        if (struct.requestSource != null) {
          oprot.writeFieldBegin(REQUEST_SOURCE_FIELD_DESC);
          oprot.writeI32(struct.requestSource.getValue());
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findBuddyContactsByQuery_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public findBuddyContactsByQuery_argsTupleScheme getScheme() {
        return new findBuddyContactsByQuery_argsTupleScheme();
      }
    }

    private static class findBuddyContactsByQuery_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<findBuddyContactsByQuery_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findBuddyContactsByQuery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetLanguage()) {
          optionals.set(0);
        }
        if (struct.isSetCountry()) {
          optionals.set(1);
        }
        if (struct.isSetQuery()) {
          optionals.set(2);
        }
        if (struct.isSetFromIndex()) {
          optionals.set(3);
        }
        if (struct.isSetCount()) {
          optionals.set(4);
        }
        if (struct.isSetRequestSource()) {
          optionals.set(5);
        }
        oprot.writeBitSet(optionals, 6);
        if (struct.isSetLanguage()) {
          oprot.writeString(struct.language);
        }
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
        if (struct.isSetQuery()) {
          oprot.writeString(struct.query);
        }
        if (struct.isSetFromIndex()) {
          oprot.writeI32(struct.fromIndex);
        }
        if (struct.isSetCount()) {
          oprot.writeI32(struct.count);
        }
        if (struct.isSetRequestSource()) {
          oprot.writeI32(struct.requestSource.getValue());
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findBuddyContactsByQuery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(6);
        if (incoming.get(0)) {
          struct.language = iprot.readString();
          struct.setLanguageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
        if (incoming.get(2)) {
          struct.query = iprot.readString();
          struct.setQueryIsSet(true);
        }
        if (incoming.get(3)) {
          struct.fromIndex = iprot.readI32();
          struct.setFromIndexIsSet(true);
        }
        if (incoming.get(4)) {
          struct.count = iprot.readI32();
          struct.setCountIsSet(true);
        }
        if (incoming.get(5)) {
          struct.requestSource = BuddySearchRequestSource.findByValue(iprot.readI32());
          struct.setRequestSourceIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class findBuddyContactsByQuery_result implements org.apache.thrift.TBase<findBuddyContactsByQuery_result, findBuddyContactsByQuery_result._Fields>, java.io.Serializable, Cloneable, Comparable<findBuddyContactsByQuery_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findBuddyContactsByQuery_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new findBuddyContactsByQuery_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new findBuddyContactsByQuery_resultTupleSchemeFactory();

    public java.util.List<BuddySearchResult> success; // required
    public TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuddySearchResult.class))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TalkException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findBuddyContactsByQuery_result.class, metaDataMap);
    }

    public findBuddyContactsByQuery_result() {
    }

    public findBuddyContactsByQuery_result(
      java.util.List<BuddySearchResult> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findBuddyContactsByQuery_result(findBuddyContactsByQuery_result other) {
      if (other.isSetSuccess()) {
        java.util.List<BuddySearchResult> __this__success = new java.util.ArrayList<BuddySearchResult>(other.success.size());
        for (BuddySearchResult other_element : other.success) {
          __this__success.add(new BuddySearchResult(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public findBuddyContactsByQuery_result deepCopy() {
      return new findBuddyContactsByQuery_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<BuddySearchResult> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(BuddySearchResult elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<BuddySearchResult>();
      }
      this.success.add(elem);
    }

    public java.util.List<BuddySearchResult> getSuccess() {
      return this.success;
    }

    public findBuddyContactsByQuery_result setSuccess(java.util.List<BuddySearchResult> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public findBuddyContactsByQuery_result setE(TalkException e) {
      this.e = e;
      return this;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<BuddySearchResult>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof findBuddyContactsByQuery_result)
        return this.equals((findBuddyContactsByQuery_result)that);
      return false;
    }

    public boolean equals(findBuddyContactsByQuery_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
      if (isSetE())
        hashCode = hashCode * 8191 + e.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(findBuddyContactsByQuery_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("findBuddyContactsByQuery_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findBuddyContactsByQuery_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public findBuddyContactsByQuery_resultStandardScheme getScheme() {
        return new findBuddyContactsByQuery_resultStandardScheme();
      }
    }

    private static class findBuddyContactsByQuery_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<findBuddyContactsByQuery_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findBuddyContactsByQuery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list1270 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<BuddySearchResult>(_list1270.size);
                  BuddySearchResult _elem1271;
                  for (int _i1272 = 0; _i1272 < _list1270.size; ++_i1272)
                  {
                    _elem1271 = new BuddySearchResult();
                    _elem1271.read(iprot);
                    struct.success.add(_elem1271);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findBuddyContactsByQuery_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (BuddySearchResult _iter1273 : struct.success)
            {
              _iter1273.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findBuddyContactsByQuery_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public findBuddyContactsByQuery_resultTupleScheme getScheme() {
        return new findBuddyContactsByQuery_resultTupleScheme();
      }
    }

    private static class findBuddyContactsByQuery_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<findBuddyContactsByQuery_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findBuddyContactsByQuery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (BuddySearchResult _iter1274 : struct.success)
            {
              _iter1274.write(oprot);
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findBuddyContactsByQuery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list1275 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<BuddySearchResult>(_list1275.size);
            BuddySearchResult _elem1276;
            for (int _i1277 = 0; _i1277 < _list1275.size; ++_i1277)
            {
              _elem1276 = new BuddySearchResult();
              _elem1276.read(iprot);
              struct.success.add(_elem1276);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getBuddyContacts_args implements org.apache.thrift.TBase<getBuddyContacts_args, getBuddyContacts_args._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyContacts_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyContacts_args");

    private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField CLASSIFICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("classification", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField FROM_INDEX_FIELD_DESC = new org.apache.thrift.protocol.TField("fromIndex", org.apache.thrift.protocol.TType.I32, (short)5);
    private static final org.apache.thrift.protocol.TField COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("count", org.apache.thrift.protocol.TType.I32, (short)6);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getBuddyContacts_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getBuddyContacts_argsTupleSchemeFactory();

    public java.lang.String language; // required
    public java.lang.String country; // required
    public java.lang.String classification; // required
    public int fromIndex; // required
    public int count; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      LANGUAGE((short)2, "language"),
      COUNTRY((short)3, "country"),
      CLASSIFICATION((short)4, "classification"),
      FROM_INDEX((short)5, "fromIndex"),
      COUNT((short)6, "count");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 2: // LANGUAGE
            return LANGUAGE;
          case 3: // COUNTRY
            return COUNTRY;
          case 4: // CLASSIFICATION
            return CLASSIFICATION;
          case 5: // FROM_INDEX
            return FROM_INDEX;
          case 6: // COUNT
            return COUNT;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __FROMINDEX_ISSET_ID = 0;
    private static final int __COUNT_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CLASSIFICATION, new org.apache.thrift.meta_data.FieldMetaData("classification", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.FROM_INDEX, new org.apache.thrift.meta_data.FieldMetaData("fromIndex", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.COUNT, new org.apache.thrift.meta_data.FieldMetaData("count", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyContacts_args.class, metaDataMap);
    }

    public getBuddyContacts_args() {
    }

    public getBuddyContacts_args(
      java.lang.String language,
      java.lang.String country,
      java.lang.String classification,
      int fromIndex,
      int count)
    {
      this();
      this.language = language;
      this.country = country;
      this.classification = classification;
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
      this.count = count;
      setCountIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyContacts_args(getBuddyContacts_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
      if (other.isSetClassification()) {
        this.classification = other.classification;
      }
      this.fromIndex = other.fromIndex;
      this.count = other.count;
    }

    public getBuddyContacts_args deepCopy() {
      return new getBuddyContacts_args(this);
    }

    @Override
    public void clear() {
      this.language = null;
      this.country = null;
      this.classification = null;
      setFromIndexIsSet(false);
      this.fromIndex = 0;
      setCountIsSet(false);
      this.count = 0;
    }

    public java.lang.String getLanguage() {
      return this.language;
    }

    public getBuddyContacts_args setLanguage(java.lang.String language) {
      this.language = language;
      return this;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public java.lang.String getCountry() {
      return this.country;
    }

    public getBuddyContacts_args setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public java.lang.String getClassification() {
      return this.classification;
    }

    public getBuddyContacts_args setClassification(java.lang.String classification) {
      this.classification = classification;
      return this;
    }

    public void unsetClassification() {
      this.classification = null;
    }

    /** Returns true if field classification is set (has been assigned a value) and false otherwise */
    public boolean isSetClassification() {
      return this.classification != null;
    }

    public void setClassificationIsSet(boolean value) {
      if (!value) {
        this.classification = null;
      }
    }

    public int getFromIndex() {
      return this.fromIndex;
    }

    public getBuddyContacts_args setFromIndex(int fromIndex) {
      this.fromIndex = fromIndex;
      setFromIndexIsSet(true);
      return this;
    }

    public void unsetFromIndex() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FROMINDEX_ISSET_ID);
    }

    /** Returns true if field fromIndex is set (has been assigned a value) and false otherwise */
    public boolean isSetFromIndex() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FROMINDEX_ISSET_ID);
    }

    public void setFromIndexIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FROMINDEX_ISSET_ID, value);
    }

    public int getCount() {
      return this.count;
    }

    public getBuddyContacts_args setCount(int count) {
      this.count = count;
      setCountIsSet(true);
      return this;
    }

    public void unsetCount() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COUNT_ISSET_ID);
    }

    /** Returns true if field count is set (has been assigned a value) and false otherwise */
    public boolean isSetCount() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COUNT_ISSET_ID);
    }

    public void setCountIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COUNT_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case LANGUAGE:
        if (value == null) {
          unsetLanguage();
        } else {
          setLanguage((java.lang.String)value);
        }
        break;

      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((java.lang.String)value);
        }
        break;

      case CLASSIFICATION:
        if (value == null) {
          unsetClassification();
        } else {
          setClassification((java.lang.String)value);
        }
        break;

      case FROM_INDEX:
        if (value == null) {
          unsetFromIndex();
        } else {
          setFromIndex((java.lang.Integer)value);
        }
        break;

      case COUNT:
        if (value == null) {
          unsetCount();
        } else {
          setCount((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case LANGUAGE:
        return getLanguage();

      case COUNTRY:
        return getCountry();

      case CLASSIFICATION:
        return getClassification();

      case FROM_INDEX:
        return getFromIndex();

      case COUNT:
        return getCount();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case LANGUAGE:
        return isSetLanguage();
      case COUNTRY:
        return isSetCountry();
      case CLASSIFICATION:
        return isSetClassification();
      case FROM_INDEX:
        return isSetFromIndex();
      case COUNT:
        return isSetCount();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyContacts_args)
        return this.equals((getBuddyContacts_args)that);
      return false;
    }

    public boolean equals(getBuddyContacts_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      boolean this_present_classification = true && this.isSetClassification();
      boolean that_present_classification = true && that.isSetClassification();
      if (this_present_classification || that_present_classification) {
        if (!(this_present_classification && that_present_classification))
          return false;
        if (!this.classification.equals(that.classification))
          return false;
      }

      boolean this_present_fromIndex = true;
      boolean that_present_fromIndex = true;
      if (this_present_fromIndex || that_present_fromIndex) {
        if (!(this_present_fromIndex && that_present_fromIndex))
          return false;
        if (this.fromIndex != that.fromIndex)
          return false;
      }

      boolean this_present_count = true;
      boolean that_present_count = true;
      if (this_present_count || that_present_count) {
        if (!(this_present_count && that_present_count))
          return false;
        if (this.count != that.count)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetLanguage()) ? 131071 : 524287);
      if (isSetLanguage())
        hashCode = hashCode * 8191 + language.hashCode();

      hashCode = hashCode * 8191 + ((isSetCountry()) ? 131071 : 524287);
      if (isSetCountry())
        hashCode = hashCode * 8191 + country.hashCode();

      hashCode = hashCode * 8191 + ((isSetClassification()) ? 131071 : 524287);
      if (isSetClassification())
        hashCode = hashCode * 8191 + classification.hashCode();

      hashCode = hashCode * 8191 + fromIndex;

      hashCode = hashCode * 8191 + count;

      return hashCode;
    }

    @Override
    public int compareTo(getBuddyContacts_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetClassification()).compareTo(other.isSetClassification());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClassification()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.classification, other.classification);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetFromIndex()).compareTo(other.isSetFromIndex());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetFromIndex()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromIndex, other.fromIndex);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCount()).compareTo(other.isSetCount());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCount()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.count, other.count);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getBuddyContacts_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("classification:");
      if (this.classification == null) {
        sb.append("null");
      } else {
        sb.append(this.classification);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("fromIndex:");
      sb.append(this.fromIndex);
      first = false;
      if (!first) sb.append(", ");
      sb.append("count:");
      sb.append(this.count);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyContacts_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyContacts_argsStandardScheme getScheme() {
        return new getBuddyContacts_argsStandardScheme();
      }
    }

    private static class getBuddyContacts_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getBuddyContacts_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyContacts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 2: // LANGUAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.language = iprot.readString();
                struct.setLanguageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // CLASSIFICATION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.classification = iprot.readString();
                struct.setClassificationIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // FROM_INDEX
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.fromIndex = iprot.readI32();
                struct.setFromIndexIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // COUNT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.count = iprot.readI32();
                struct.setCountIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyContacts_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.language != null) {
          oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.language);
          oprot.writeFieldEnd();
        }
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        if (struct.classification != null) {
          oprot.writeFieldBegin(CLASSIFICATION_FIELD_DESC);
          oprot.writeString(struct.classification);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(FROM_INDEX_FIELD_DESC);
        oprot.writeI32(struct.fromIndex);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(COUNT_FIELD_DESC);
        oprot.writeI32(struct.count);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyContacts_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyContacts_argsTupleScheme getScheme() {
        return new getBuddyContacts_argsTupleScheme();
      }
    }

    private static class getBuddyContacts_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getBuddyContacts_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyContacts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetLanguage()) {
          optionals.set(0);
        }
        if (struct.isSetCountry()) {
          optionals.set(1);
        }
        if (struct.isSetClassification()) {
          optionals.set(2);
        }
        if (struct.isSetFromIndex()) {
          optionals.set(3);
        }
        if (struct.isSetCount()) {
          optionals.set(4);
        }
        oprot.writeBitSet(optionals, 5);
        if (struct.isSetLanguage()) {
          oprot.writeString(struct.language);
        }
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
        if (struct.isSetClassification()) {
          oprot.writeString(struct.classification);
        }
        if (struct.isSetFromIndex()) {
          oprot.writeI32(struct.fromIndex);
        }
        if (struct.isSetCount()) {
          oprot.writeI32(struct.count);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyContacts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(5);
        if (incoming.get(0)) {
          struct.language = iprot.readString();
          struct.setLanguageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
        if (incoming.get(2)) {
          struct.classification = iprot.readString();
          struct.setClassificationIsSet(true);
        }
        if (incoming.get(3)) {
          struct.fromIndex = iprot.readI32();
          struct.setFromIndexIsSet(true);
        }
        if (incoming.get(4)) {
          struct.count = iprot.readI32();
          struct.setCountIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getBuddyContacts_result implements org.apache.thrift.TBase<getBuddyContacts_result, getBuddyContacts_result._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyContacts_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyContacts_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getBuddyContacts_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getBuddyContacts_resultTupleSchemeFactory();

    public java.util.List<Contact> success; // required
    public TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Contact.class))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TalkException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyContacts_result.class, metaDataMap);
    }

    public getBuddyContacts_result() {
    }

    public getBuddyContacts_result(
      java.util.List<Contact> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyContacts_result(getBuddyContacts_result other) {
      if (other.isSetSuccess()) {
        java.util.List<Contact> __this__success = new java.util.ArrayList<Contact>(other.success.size());
        for (Contact other_element : other.success) {
          __this__success.add(new Contact(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getBuddyContacts_result deepCopy() {
      return new getBuddyContacts_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<Contact> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(Contact elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<Contact>();
      }
      this.success.add(elem);
    }

    public java.util.List<Contact> getSuccess() {
      return this.success;
    }

    public getBuddyContacts_result setSuccess(java.util.List<Contact> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public getBuddyContacts_result setE(TalkException e) {
      this.e = e;
      return this;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<Contact>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyContacts_result)
        return this.equals((getBuddyContacts_result)that);
      return false;
    }

    public boolean equals(getBuddyContacts_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
      if (isSetE())
        hashCode = hashCode * 8191 + e.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getBuddyContacts_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getBuddyContacts_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyContacts_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyContacts_resultStandardScheme getScheme() {
        return new getBuddyContacts_resultStandardScheme();
      }
    }

    private static class getBuddyContacts_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getBuddyContacts_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyContacts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list1278 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<Contact>(_list1278.size);
                  Contact _elem1279;
                  for (int _i1280 = 0; _i1280 < _list1278.size; ++_i1280)
                  {
                    _elem1279 = new Contact();
                    _elem1279.read(iprot);
                    struct.success.add(_elem1279);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyContacts_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (Contact _iter1281 : struct.success)
            {
              _iter1281.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyContacts_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyContacts_resultTupleScheme getScheme() {
        return new getBuddyContacts_resultTupleScheme();
      }
    }

    private static class getBuddyContacts_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getBuddyContacts_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyContacts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Contact _iter1282 : struct.success)
            {
              _iter1282.write(oprot);
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyContacts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list1283 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<Contact>(_list1283.size);
            Contact _elem1284;
            for (int _i1285 = 0; _i1285 < _list1283.size; ++_i1285)
            {
              _elem1284 = new Contact();
              _elem1284.read(iprot);
              struct.success.add(_elem1284);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getBuddyDetail_args implements org.apache.thrift.TBase<getBuddyDetail_args, getBuddyDetail_args._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyDetail_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyDetail_args");

    private static final org.apache.thrift.protocol.TField BUDDY_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("buddyMid", org.apache.thrift.protocol.TType.STRING, (short)4);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getBuddyDetail_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getBuddyDetail_argsTupleSchemeFactory();

    public java.lang.String buddyMid; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      BUDDY_MID((short)4, "buddyMid");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 4: // BUDDY_MID
            return BUDDY_MID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.BUDDY_MID, new org.apache.thrift.meta_data.FieldMetaData("buddyMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyDetail_args.class, metaDataMap);
    }

    public getBuddyDetail_args() {
    }

    public getBuddyDetail_args(
      java.lang.String buddyMid)
    {
      this();
      this.buddyMid = buddyMid;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyDetail_args(getBuddyDetail_args other) {
      if (other.isSetBuddyMid()) {
        this.buddyMid = other.buddyMid;
      }
    }

    public getBuddyDetail_args deepCopy() {
      return new getBuddyDetail_args(this);
    }

    @Override
    public void clear() {
      this.buddyMid = null;
    }

    public java.lang.String getBuddyMid() {
      return this.buddyMid;
    }

    public getBuddyDetail_args setBuddyMid(java.lang.String buddyMid) {
      this.buddyMid = buddyMid;
      return this;
    }

    public void unsetBuddyMid() {
      this.buddyMid = null;
    }

    /** Returns true if field buddyMid is set (has been assigned a value) and false otherwise */
    public boolean isSetBuddyMid() {
      return this.buddyMid != null;
    }

    public void setBuddyMidIsSet(boolean value) {
      if (!value) {
        this.buddyMid = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case BUDDY_MID:
        if (value == null) {
          unsetBuddyMid();
        } else {
          setBuddyMid((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case BUDDY_MID:
        return getBuddyMid();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case BUDDY_MID:
        return isSetBuddyMid();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyDetail_args)
        return this.equals((getBuddyDetail_args)that);
      return false;
    }

    public boolean equals(getBuddyDetail_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_buddyMid = true && this.isSetBuddyMid();
      boolean that_present_buddyMid = true && that.isSetBuddyMid();
      if (this_present_buddyMid || that_present_buddyMid) {
        if (!(this_present_buddyMid && that_present_buddyMid))
          return false;
        if (!this.buddyMid.equals(that.buddyMid))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetBuddyMid()) ? 131071 : 524287);
      if (isSetBuddyMid())
        hashCode = hashCode * 8191 + buddyMid.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getBuddyDetail_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetBuddyMid()).compareTo(other.isSetBuddyMid());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBuddyMid()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buddyMid, other.buddyMid);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getBuddyDetail_args(");
      boolean first = true;

      sb.append("buddyMid:");
      if (this.buddyMid == null) {
        sb.append("null");
      } else {
        sb.append(this.buddyMid);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyDetail_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyDetail_argsStandardScheme getScheme() {
        return new getBuddyDetail_argsStandardScheme();
      }
    }

    private static class getBuddyDetail_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getBuddyDetail_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyDetail_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 4: // BUDDY_MID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.buddyMid = iprot.readString();
                struct.setBuddyMidIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyDetail_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.buddyMid != null) {
          oprot.writeFieldBegin(BUDDY_MID_FIELD_DESC);
          oprot.writeString(struct.buddyMid);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyDetail_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyDetail_argsTupleScheme getScheme() {
        return new getBuddyDetail_argsTupleScheme();
      }
    }

    private static class getBuddyDetail_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getBuddyDetail_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyDetail_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetBuddyMid()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetBuddyMid()) {
          oprot.writeString(struct.buddyMid);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyDetail_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.buddyMid = iprot.readString();
          struct.setBuddyMidIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getBuddyDetail_result implements org.apache.thrift.TBase<getBuddyDetail_result, getBuddyDetail_result._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyDetail_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyDetail_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getBuddyDetail_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getBuddyDetail_resultTupleSchemeFactory();

    public BuddyDetail success; // required
    public TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuddyDetail.class)));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TalkException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyDetail_result.class, metaDataMap);
    }

    public getBuddyDetail_result() {
    }

    public getBuddyDetail_result(
      BuddyDetail success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyDetail_result(getBuddyDetail_result other) {
      if (other.isSetSuccess()) {
        this.success = new BuddyDetail(other.success);
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getBuddyDetail_result deepCopy() {
      return new getBuddyDetail_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public BuddyDetail getSuccess() {
      return this.success;
    }

    public getBuddyDetail_result setSuccess(BuddyDetail success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public getBuddyDetail_result setE(TalkException e) {
      this.e = e;
      return this;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((BuddyDetail)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyDetail_result)
        return this.equals((getBuddyDetail_result)that);
      return false;
    }

    public boolean equals(getBuddyDetail_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
      if (isSetE())
        hashCode = hashCode * 8191 + e.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getBuddyDetail_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getBuddyDetail_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyDetail_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyDetail_resultStandardScheme getScheme() {
        return new getBuddyDetail_resultStandardScheme();
      }
    }

    private static class getBuddyDetail_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getBuddyDetail_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyDetail_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new BuddyDetail();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyDetail_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyDetail_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyDetail_resultTupleScheme getScheme() {
        return new getBuddyDetail_resultTupleScheme();
      }
    }

    private static class getBuddyDetail_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getBuddyDetail_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyDetail_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyDetail_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new BuddyDetail();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getBuddyOnAir_args implements org.apache.thrift.TBase<getBuddyOnAir_args, getBuddyOnAir_args._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyOnAir_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyOnAir_args");

    private static final org.apache.thrift.protocol.TField BUDDY_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("buddyMid", org.apache.thrift.protocol.TType.STRING, (short)4);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getBuddyOnAir_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getBuddyOnAir_argsTupleSchemeFactory();

    public java.lang.String buddyMid; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      BUDDY_MID((short)4, "buddyMid");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 4: // BUDDY_MID
            return BUDDY_MID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.BUDDY_MID, new org.apache.thrift.meta_data.FieldMetaData("buddyMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyOnAir_args.class, metaDataMap);
    }

    public getBuddyOnAir_args() {
    }

    public getBuddyOnAir_args(
      java.lang.String buddyMid)
    {
      this();
      this.buddyMid = buddyMid;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyOnAir_args(getBuddyOnAir_args other) {
      if (other.isSetBuddyMid()) {
        this.buddyMid = other.buddyMid;
      }
    }

    public getBuddyOnAir_args deepCopy() {
      return new getBuddyOnAir_args(this);
    }

    @Override
    public void clear() {
      this.buddyMid = null;
    }

    public java.lang.String getBuddyMid() {
      return this.buddyMid;
    }

    public getBuddyOnAir_args setBuddyMid(java.lang.String buddyMid) {
      this.buddyMid = buddyMid;
      return this;
    }

    public void unsetBuddyMid() {
      this.buddyMid = null;
    }

    /** Returns true if field buddyMid is set (has been assigned a value) and false otherwise */
    public boolean isSetBuddyMid() {
      return this.buddyMid != null;
    }

    public void setBuddyMidIsSet(boolean value) {
      if (!value) {
        this.buddyMid = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case BUDDY_MID:
        if (value == null) {
          unsetBuddyMid();
        } else {
          setBuddyMid((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case BUDDY_MID:
        return getBuddyMid();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case BUDDY_MID:
        return isSetBuddyMid();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyOnAir_args)
        return this.equals((getBuddyOnAir_args)that);
      return false;
    }

    public boolean equals(getBuddyOnAir_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_buddyMid = true && this.isSetBuddyMid();
      boolean that_present_buddyMid = true && that.isSetBuddyMid();
      if (this_present_buddyMid || that_present_buddyMid) {
        if (!(this_present_buddyMid && that_present_buddyMid))
          return false;
        if (!this.buddyMid.equals(that.buddyMid))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetBuddyMid()) ? 131071 : 524287);
      if (isSetBuddyMid())
        hashCode = hashCode * 8191 + buddyMid.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getBuddyOnAir_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetBuddyMid()).compareTo(other.isSetBuddyMid());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetBuddyMid()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buddyMid, other.buddyMid);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getBuddyOnAir_args(");
      boolean first = true;

      sb.append("buddyMid:");
      if (this.buddyMid == null) {
        sb.append("null");
      } else {
        sb.append(this.buddyMid);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyOnAir_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyOnAir_argsStandardScheme getScheme() {
        return new getBuddyOnAir_argsStandardScheme();
      }
    }

    private static class getBuddyOnAir_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getBuddyOnAir_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyOnAir_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 4: // BUDDY_MID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.buddyMid = iprot.readString();
                struct.setBuddyMidIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyOnAir_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.buddyMid != null) {
          oprot.writeFieldBegin(BUDDY_MID_FIELD_DESC);
          oprot.writeString(struct.buddyMid);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyOnAir_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyOnAir_argsTupleScheme getScheme() {
        return new getBuddyOnAir_argsTupleScheme();
      }
    }

    private static class getBuddyOnAir_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getBuddyOnAir_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyOnAir_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetBuddyMid()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetBuddyMid()) {
          oprot.writeString(struct.buddyMid);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyOnAir_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.buddyMid = iprot.readString();
          struct.setBuddyMidIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getBuddyOnAir_result implements org.apache.thrift.TBase<getBuddyOnAir_result, getBuddyOnAir_result._Fields>, java.io.Serializable, Cloneable, Comparable<getBuddyOnAir_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getBuddyOnAir_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getBuddyOnAir_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getBuddyOnAir_resultTupleSchemeFactory();

    public BuddyOnAir success; // required
    public TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuddyOnAir.class)));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TalkException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getBuddyOnAir_result.class, metaDataMap);
    }

    public getBuddyOnAir_result() {
    }

    public getBuddyOnAir_result(
      BuddyOnAir success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getBuddyOnAir_result(getBuddyOnAir_result other) {
      if (other.isSetSuccess()) {
        this.success = new BuddyOnAir(other.success);
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getBuddyOnAir_result deepCopy() {
      return new getBuddyOnAir_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public BuddyOnAir getSuccess() {
      return this.success;
    }

    public getBuddyOnAir_result setSuccess(BuddyOnAir success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public getBuddyOnAir_result setE(TalkException e) {
      this.e = e;
      return this;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((BuddyOnAir)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getBuddyOnAir_result)
        return this.equals((getBuddyOnAir_result)that);
      return false;
    }

    public boolean equals(getBuddyOnAir_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
      if (isSetE())
        hashCode = hashCode * 8191 + e.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getBuddyOnAir_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getBuddyOnAir_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getBuddyOnAir_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyOnAir_resultStandardScheme getScheme() {
        return new getBuddyOnAir_resultStandardScheme();
      }
    }

    private static class getBuddyOnAir_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getBuddyOnAir_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getBuddyOnAir_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new BuddyOnAir();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getBuddyOnAir_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getBuddyOnAir_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getBuddyOnAir_resultTupleScheme getScheme() {
        return new getBuddyOnAir_resultTupleScheme();
      }
    }

    private static class getBuddyOnAir_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getBuddyOnAir_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getBuddyOnAir_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getBuddyOnAir_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new BuddyOnAir();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getCountriesHavingBuddy_args implements org.apache.thrift.TBase<getCountriesHavingBuddy_args, getCountriesHavingBuddy_args._Fields>, java.io.Serializable, Cloneable, Comparable<getCountriesHavingBuddy_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getCountriesHavingBuddy_args");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getCountriesHavingBuddy_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getCountriesHavingBuddy_argsTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getCountriesHavingBuddy_args.class, metaDataMap);
    }

    public getCountriesHavingBuddy_args() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getCountriesHavingBuddy_args(getCountriesHavingBuddy_args other) {
    }

    public getCountriesHavingBuddy_args deepCopy() {
      return new getCountriesHavingBuddy_args(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getCountriesHavingBuddy_args)
        return this.equals((getCountriesHavingBuddy_args)that);
      return false;
    }

    public boolean equals(getCountriesHavingBuddy_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(getCountriesHavingBuddy_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getCountriesHavingBuddy_args(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getCountriesHavingBuddy_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getCountriesHavingBuddy_argsStandardScheme getScheme() {
        return new getCountriesHavingBuddy_argsStandardScheme();
      }
    }

    private static class getCountriesHavingBuddy_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getCountriesHavingBuddy_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getCountriesHavingBuddy_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getCountriesHavingBuddy_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getCountriesHavingBuddy_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getCountriesHavingBuddy_argsTupleScheme getScheme() {
        return new getCountriesHavingBuddy_argsTupleScheme();
      }
    }

    private static class getCountriesHavingBuddy_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getCountriesHavingBuddy_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getCountriesHavingBuddy_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getCountriesHavingBuddy_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getCountriesHavingBuddy_result implements org.apache.thrift.TBase<getCountriesHavingBuddy_result, getCountriesHavingBuddy_result._Fields>, java.io.Serializable, Cloneable, Comparable<getCountriesHavingBuddy_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getCountriesHavingBuddy_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getCountriesHavingBuddy_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getCountriesHavingBuddy_resultTupleSchemeFactory();

    public java.util.List<java.lang.String> success; // required
    public TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TalkException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getCountriesHavingBuddy_result.class, metaDataMap);
    }

    public getCountriesHavingBuddy_result() {
    }

    public getCountriesHavingBuddy_result(
      java.util.List<java.lang.String> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getCountriesHavingBuddy_result(getCountriesHavingBuddy_result other) {
      if (other.isSetSuccess()) {
        java.util.List<java.lang.String> __this__success = new java.util.ArrayList<java.lang.String>(other.success);
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getCountriesHavingBuddy_result deepCopy() {
      return new getCountriesHavingBuddy_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<java.lang.String> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(java.lang.String elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<java.lang.String>();
      }
      this.success.add(elem);
    }

    public java.util.List<java.lang.String> getSuccess() {
      return this.success;
    }

    public getCountriesHavingBuddy_result setSuccess(java.util.List<java.lang.String> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public getCountriesHavingBuddy_result setE(TalkException e) {
      this.e = e;
      return this;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<java.lang.String>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getCountriesHavingBuddy_result)
        return this.equals((getCountriesHavingBuddy_result)that);
      return false;
    }

    public boolean equals(getCountriesHavingBuddy_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
      if (isSetE())
        hashCode = hashCode * 8191 + e.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getCountriesHavingBuddy_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getCountriesHavingBuddy_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getCountriesHavingBuddy_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getCountriesHavingBuddy_resultStandardScheme getScheme() {
        return new getCountriesHavingBuddy_resultStandardScheme();
      }
    }

    private static class getCountriesHavingBuddy_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getCountriesHavingBuddy_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getCountriesHavingBuddy_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list1286 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<java.lang.String>(_list1286.size);
                  java.lang.String _elem1287;
                  for (int _i1288 = 0; _i1288 < _list1286.size; ++_i1288)
                  {
                    _elem1287 = iprot.readString();
                    struct.success.add(_elem1287);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getCountriesHavingBuddy_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.success.size()));
            for (java.lang.String _iter1289 : struct.success)
            {
              oprot.writeString(_iter1289);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getCountriesHavingBuddy_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getCountriesHavingBuddy_resultTupleScheme getScheme() {
        return new getCountriesHavingBuddy_resultTupleScheme();
      }
    }

    private static class getCountriesHavingBuddy_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getCountriesHavingBuddy_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getCountriesHavingBuddy_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (java.lang.String _iter1290 : struct.success)
            {
              oprot.writeString(_iter1290);
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getCountriesHavingBuddy_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list1291 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
            struct.success = new java.util.ArrayList<java.lang.String>(_list1291.size);
            java.lang.String _elem1292;
            for (int _i1293 = 0; _i1293 < _list1291.size; ++_i1293)
            {
              _elem1292 = iprot.readString();
              struct.success.add(_elem1292);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getNewlyReleasedBuddyIds_args implements org.apache.thrift.TBase<getNewlyReleasedBuddyIds_args, getNewlyReleasedBuddyIds_args._Fields>, java.io.Serializable, Cloneable, Comparable<getNewlyReleasedBuddyIds_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getNewlyReleasedBuddyIds_args");

    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getNewlyReleasedBuddyIds_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getNewlyReleasedBuddyIds_argsTupleSchemeFactory();

    public java.lang.String country; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      COUNTRY((short)3, "country");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 3: // COUNTRY
            return COUNTRY;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getNewlyReleasedBuddyIds_args.class, metaDataMap);
    }

    public getNewlyReleasedBuddyIds_args() {
    }

    public getNewlyReleasedBuddyIds_args(
      java.lang.String country)
    {
      this();
      this.country = country;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getNewlyReleasedBuddyIds_args(getNewlyReleasedBuddyIds_args other) {
      if (other.isSetCountry()) {
        this.country = other.country;
      }
    }

    public getNewlyReleasedBuddyIds_args deepCopy() {
      return new getNewlyReleasedBuddyIds_args(this);
    }

    @Override
    public void clear() {
      this.country = null;
    }

    public java.lang.String getCountry() {
      return this.country;
    }

    public getNewlyReleasedBuddyIds_args setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case COUNTRY:
        return getCountry();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case COUNTRY:
        return isSetCountry();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getNewlyReleasedBuddyIds_args)
        return this.equals((getNewlyReleasedBuddyIds_args)that);
      return false;
    }

    public boolean equals(getNewlyReleasedBuddyIds_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetCountry()) ? 131071 : 524287);
      if (isSetCountry())
        hashCode = hashCode * 8191 + country.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getNewlyReleasedBuddyIds_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getNewlyReleasedBuddyIds_args(");
      boolean first = true;

      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getNewlyReleasedBuddyIds_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getNewlyReleasedBuddyIds_argsStandardScheme getScheme() {
        return new getNewlyReleasedBuddyIds_argsStandardScheme();
      }
    }

    private static class getNewlyReleasedBuddyIds_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getNewlyReleasedBuddyIds_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getNewlyReleasedBuddyIds_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getNewlyReleasedBuddyIds_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getNewlyReleasedBuddyIds_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getNewlyReleasedBuddyIds_argsTupleScheme getScheme() {
        return new getNewlyReleasedBuddyIds_argsTupleScheme();
      }
    }

    private static class getNewlyReleasedBuddyIds_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getNewlyReleasedBuddyIds_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getNewlyReleasedBuddyIds_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetCountry()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getNewlyReleasedBuddyIds_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getNewlyReleasedBuddyIds_result implements org.apache.thrift.TBase<getNewlyReleasedBuddyIds_result, getNewlyReleasedBuddyIds_result._Fields>, java.io.Serializable, Cloneable, Comparable<getNewlyReleasedBuddyIds_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getNewlyReleasedBuddyIds_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.MAP, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getNewlyReleasedBuddyIds_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getNewlyReleasedBuddyIds_resultTupleSchemeFactory();

    public java.util.Map<java.lang.String,java.lang.Long> success; // required
    public TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TalkException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getNewlyReleasedBuddyIds_result.class, metaDataMap);
    }

    public getNewlyReleasedBuddyIds_result() {
    }

    public getNewlyReleasedBuddyIds_result(
      java.util.Map<java.lang.String,java.lang.Long> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getNewlyReleasedBuddyIds_result(getNewlyReleasedBuddyIds_result other) {
      if (other.isSetSuccess()) {
        java.util.Map<java.lang.String,java.lang.Long> __this__success = new java.util.HashMap<java.lang.String,java.lang.Long>(other.success);
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getNewlyReleasedBuddyIds_result deepCopy() {
      return new getNewlyReleasedBuddyIds_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public void putToSuccess(java.lang.String key, long val) {
      if (this.success == null) {
        this.success = new java.util.HashMap<java.lang.String,java.lang.Long>();
      }
      this.success.put(key, val);
    }

    public java.util.Map<java.lang.String,java.lang.Long> getSuccess() {
      return this.success;
    }

    public getNewlyReleasedBuddyIds_result setSuccess(java.util.Map<java.lang.String,java.lang.Long> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public getNewlyReleasedBuddyIds_result setE(TalkException e) {
      this.e = e;
      return this;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.Map<java.lang.String,java.lang.Long>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getNewlyReleasedBuddyIds_result)
        return this.equals((getNewlyReleasedBuddyIds_result)that);
      return false;
    }

    public boolean equals(getNewlyReleasedBuddyIds_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
      if (isSetE())
        hashCode = hashCode * 8191 + e.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getNewlyReleasedBuddyIds_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getNewlyReleasedBuddyIds_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getNewlyReleasedBuddyIds_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getNewlyReleasedBuddyIds_resultStandardScheme getScheme() {
        return new getNewlyReleasedBuddyIds_resultStandardScheme();
      }
    }

    private static class getNewlyReleasedBuddyIds_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getNewlyReleasedBuddyIds_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getNewlyReleasedBuddyIds_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
                {
                  org.apache.thrift.protocol.TMap _map1294 = iprot.readMapBegin();
                  struct.success = new java.util.HashMap<java.lang.String,java.lang.Long>(2*_map1294.size);
                  java.lang.String _key1295;
                  long _val1296;
                  for (int _i1297 = 0; _i1297 < _map1294.size; ++_i1297)
                  {
                    _key1295 = iprot.readString();
                    _val1296 = iprot.readI64();
                    struct.success.put(_key1295, _val1296);
                  }
                  iprot.readMapEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getNewlyReleasedBuddyIds_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I64, struct.success.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.Long> _iter1298 : struct.success.entrySet())
            {
              oprot.writeString(_iter1298.getKey());
              oprot.writeI64(_iter1298.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getNewlyReleasedBuddyIds_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getNewlyReleasedBuddyIds_resultTupleScheme getScheme() {
        return new getNewlyReleasedBuddyIds_resultTupleScheme();
      }
    }

    private static class getNewlyReleasedBuddyIds_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getNewlyReleasedBuddyIds_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getNewlyReleasedBuddyIds_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (java.util.Map.Entry<java.lang.String, java.lang.Long> _iter1299 : struct.success.entrySet())
            {
              oprot.writeString(_iter1299.getKey());
              oprot.writeI64(_iter1299.getValue());
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getNewlyReleasedBuddyIds_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TMap _map1300 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I64, iprot.readI32());
            struct.success = new java.util.HashMap<java.lang.String,java.lang.Long>(2*_map1300.size);
            java.lang.String _key1301;
            long _val1302;
            for (int _i1303 = 0; _i1303 < _map1300.size; ++_i1303)
            {
              _key1301 = iprot.readString();
              _val1302 = iprot.readI64();
              struct.success.put(_key1301, _val1302);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getPopularBuddyBanner_args implements org.apache.thrift.TBase<getPopularBuddyBanner_args, getPopularBuddyBanner_args._Fields>, java.io.Serializable, Cloneable, Comparable<getPopularBuddyBanner_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPopularBuddyBanner_args");

    private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField APPLICATION_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationType", org.apache.thrift.protocol.TType.I32, (short)4);
    private static final org.apache.thrift.protocol.TField RESOURCE_SPECIFICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("resourceSpecification", org.apache.thrift.protocol.TType.STRING, (short)5);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getPopularBuddyBanner_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getPopularBuddyBanner_argsTupleSchemeFactory();

    public java.lang.String language; // required
    public java.lang.String country; // required
    /**
     * 
     * @see ApplicationType
     */
    public ApplicationType applicationType; // required
    public java.lang.String resourceSpecification; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      LANGUAGE((short)2, "language"),
      COUNTRY((short)3, "country"),
      /**
       * 
       * @see ApplicationType
       */
      APPLICATION_TYPE((short)4, "applicationType"),
      RESOURCE_SPECIFICATION((short)5, "resourceSpecification");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 2: // LANGUAGE
            return LANGUAGE;
          case 3: // COUNTRY
            return COUNTRY;
          case 4: // APPLICATION_TYPE
            return APPLICATION_TYPE;
          case 5: // RESOURCE_SPECIFICATION
            return RESOURCE_SPECIFICATION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.APPLICATION_TYPE, new org.apache.thrift.meta_data.FieldMetaData("applicationType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ApplicationType.class)));
      tmpMap.put(_Fields.RESOURCE_SPECIFICATION, new org.apache.thrift.meta_data.FieldMetaData("resourceSpecification", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPopularBuddyBanner_args.class, metaDataMap);
    }

    public getPopularBuddyBanner_args() {
    }

    public getPopularBuddyBanner_args(
      java.lang.String language,
      java.lang.String country,
      ApplicationType applicationType,
      java.lang.String resourceSpecification)
    {
      this();
      this.language = language;
      this.country = country;
      this.applicationType = applicationType;
      this.resourceSpecification = resourceSpecification;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyBanner_args(getPopularBuddyBanner_args other) {
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
      if (other.isSetApplicationType()) {
        this.applicationType = other.applicationType;
      }
      if (other.isSetResourceSpecification()) {
        this.resourceSpecification = other.resourceSpecification;
      }
    }

    public getPopularBuddyBanner_args deepCopy() {
      return new getPopularBuddyBanner_args(this);
    }

    @Override
    public void clear() {
      this.language = null;
      this.country = null;
      this.applicationType = null;
      this.resourceSpecification = null;
    }

    public java.lang.String getLanguage() {
      return this.language;
    }

    public getPopularBuddyBanner_args setLanguage(java.lang.String language) {
      this.language = language;
      return this;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public java.lang.String getCountry() {
      return this.country;
    }

    public getPopularBuddyBanner_args setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    /**
     * 
     * @see ApplicationType
     */
    public ApplicationType getApplicationType() {
      return this.applicationType;
    }

    /**
     * 
     * @see ApplicationType
     */
    public getPopularBuddyBanner_args setApplicationType(ApplicationType applicationType) {
      this.applicationType = applicationType;
      return this;
    }

    public void unsetApplicationType() {
      this.applicationType = null;
    }

    /** Returns true if field applicationType is set (has been assigned a value) and false otherwise */
    public boolean isSetApplicationType() {
      return this.applicationType != null;
    }

    public void setApplicationTypeIsSet(boolean value) {
      if (!value) {
        this.applicationType = null;
      }
    }

    public java.lang.String getResourceSpecification() {
      return this.resourceSpecification;
    }

    public getPopularBuddyBanner_args setResourceSpecification(java.lang.String resourceSpecification) {
      this.resourceSpecification = resourceSpecification;
      return this;
    }

    public void unsetResourceSpecification() {
      this.resourceSpecification = null;
    }

    /** Returns true if field resourceSpecification is set (has been assigned a value) and false otherwise */
    public boolean isSetResourceSpecification() {
      return this.resourceSpecification != null;
    }

    public void setResourceSpecificationIsSet(boolean value) {
      if (!value) {
        this.resourceSpecification = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case LANGUAGE:
        if (value == null) {
          unsetLanguage();
        } else {
          setLanguage((java.lang.String)value);
        }
        break;

      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((java.lang.String)value);
        }
        break;

      case APPLICATION_TYPE:
        if (value == null) {
          unsetApplicationType();
        } else {
          setApplicationType((ApplicationType)value);
        }
        break;

      case RESOURCE_SPECIFICATION:
        if (value == null) {
          unsetResourceSpecification();
        } else {
          setResourceSpecification((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case LANGUAGE:
        return getLanguage();

      case COUNTRY:
        return getCountry();

      case APPLICATION_TYPE:
        return getApplicationType();

      case RESOURCE_SPECIFICATION:
        return getResourceSpecification();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case LANGUAGE:
        return isSetLanguage();
      case COUNTRY:
        return isSetCountry();
      case APPLICATION_TYPE:
        return isSetApplicationType();
      case RESOURCE_SPECIFICATION:
        return isSetResourceSpecification();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyBanner_args)
        return this.equals((getPopularBuddyBanner_args)that);
      return false;
    }

    public boolean equals(getPopularBuddyBanner_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      boolean this_present_applicationType = true && this.isSetApplicationType();
      boolean that_present_applicationType = true && that.isSetApplicationType();
      if (this_present_applicationType || that_present_applicationType) {
        if (!(this_present_applicationType && that_present_applicationType))
          return false;
        if (!this.applicationType.equals(that.applicationType))
          return false;
      }

      boolean this_present_resourceSpecification = true && this.isSetResourceSpecification();
      boolean that_present_resourceSpecification = true && that.isSetResourceSpecification();
      if (this_present_resourceSpecification || that_present_resourceSpecification) {
        if (!(this_present_resourceSpecification && that_present_resourceSpecification))
          return false;
        if (!this.resourceSpecification.equals(that.resourceSpecification))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetLanguage()) ? 131071 : 524287);
      if (isSetLanguage())
        hashCode = hashCode * 8191 + language.hashCode();

      hashCode = hashCode * 8191 + ((isSetCountry()) ? 131071 : 524287);
      if (isSetCountry())
        hashCode = hashCode * 8191 + country.hashCode();

      hashCode = hashCode * 8191 + ((isSetApplicationType()) ? 131071 : 524287);
      if (isSetApplicationType())
        hashCode = hashCode * 8191 + applicationType.getValue();

      hashCode = hashCode * 8191 + ((isSetResourceSpecification()) ? 131071 : 524287);
      if (isSetResourceSpecification())
        hashCode = hashCode * 8191 + resourceSpecification.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getPopularBuddyBanner_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetApplicationType()).compareTo(other.isSetApplicationType());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetApplicationType()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationType, other.applicationType);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetResourceSpecification()).compareTo(other.isSetResourceSpecification());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetResourceSpecification()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resourceSpecification, other.resourceSpecification);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getPopularBuddyBanner_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("applicationType:");
      if (this.applicationType == null) {
        sb.append("null");
      } else {
        sb.append(this.applicationType);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("resourceSpecification:");
      if (this.resourceSpecification == null) {
        sb.append("null");
      } else {
        sb.append(this.resourceSpecification);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPopularBuddyBanner_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPopularBuddyBanner_argsStandardScheme getScheme() {
        return new getPopularBuddyBanner_argsStandardScheme();
      }
    }

    private static class getPopularBuddyBanner_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getPopularBuddyBanner_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPopularBuddyBanner_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 2: // LANGUAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.language = iprot.readString();
                struct.setLanguageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // APPLICATION_TYPE
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.applicationType = ApplicationType.findByValue(iprot.readI32());
                struct.setApplicationTypeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // RESOURCE_SPECIFICATION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.resourceSpecification = iprot.readString();
                struct.setResourceSpecificationIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPopularBuddyBanner_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.language != null) {
          oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.language);
          oprot.writeFieldEnd();
        }
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        if (struct.applicationType != null) {
          oprot.writeFieldBegin(APPLICATION_TYPE_FIELD_DESC);
          oprot.writeI32(struct.applicationType.getValue());
          oprot.writeFieldEnd();
        }
        if (struct.resourceSpecification != null) {
          oprot.writeFieldBegin(RESOURCE_SPECIFICATION_FIELD_DESC);
          oprot.writeString(struct.resourceSpecification);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPopularBuddyBanner_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPopularBuddyBanner_argsTupleScheme getScheme() {
        return new getPopularBuddyBanner_argsTupleScheme();
      }
    }

    private static class getPopularBuddyBanner_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getPopularBuddyBanner_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyBanner_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetLanguage()) {
          optionals.set(0);
        }
        if (struct.isSetCountry()) {
          optionals.set(1);
        }
        if (struct.isSetApplicationType()) {
          optionals.set(2);
        }
        if (struct.isSetResourceSpecification()) {
          optionals.set(3);
        }
        oprot.writeBitSet(optionals, 4);
        if (struct.isSetLanguage()) {
          oprot.writeString(struct.language);
        }
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
        if (struct.isSetApplicationType()) {
          oprot.writeI32(struct.applicationType.getValue());
        }
        if (struct.isSetResourceSpecification()) {
          oprot.writeString(struct.resourceSpecification);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyBanner_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(4);
        if (incoming.get(0)) {
          struct.language = iprot.readString();
          struct.setLanguageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
        if (incoming.get(2)) {
          struct.applicationType = ApplicationType.findByValue(iprot.readI32());
          struct.setApplicationTypeIsSet(true);
        }
        if (incoming.get(3)) {
          struct.resourceSpecification = iprot.readString();
          struct.setResourceSpecificationIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getPopularBuddyBanner_result implements org.apache.thrift.TBase<getPopularBuddyBanner_result, getPopularBuddyBanner_result._Fields>, java.io.Serializable, Cloneable, Comparable<getPopularBuddyBanner_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPopularBuddyBanner_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getPopularBuddyBanner_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getPopularBuddyBanner_resultTupleSchemeFactory();

    public BuddyBanner success; // required
    public TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuddyBanner.class)));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TalkException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPopularBuddyBanner_result.class, metaDataMap);
    }

    public getPopularBuddyBanner_result() {
    }

    public getPopularBuddyBanner_result(
      BuddyBanner success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyBanner_result(getPopularBuddyBanner_result other) {
      if (other.isSetSuccess()) {
        this.success = new BuddyBanner(other.success);
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getPopularBuddyBanner_result deepCopy() {
      return new getPopularBuddyBanner_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public BuddyBanner getSuccess() {
      return this.success;
    }

    public getPopularBuddyBanner_result setSuccess(BuddyBanner success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public getPopularBuddyBanner_result setE(TalkException e) {
      this.e = e;
      return this;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((BuddyBanner)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyBanner_result)
        return this.equals((getPopularBuddyBanner_result)that);
      return false;
    }

    public boolean equals(getPopularBuddyBanner_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
      if (isSetE())
        hashCode = hashCode * 8191 + e.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getPopularBuddyBanner_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getPopularBuddyBanner_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPopularBuddyBanner_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPopularBuddyBanner_resultStandardScheme getScheme() {
        return new getPopularBuddyBanner_resultStandardScheme();
      }
    }

    private static class getPopularBuddyBanner_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getPopularBuddyBanner_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPopularBuddyBanner_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new BuddyBanner();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPopularBuddyBanner_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPopularBuddyBanner_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPopularBuddyBanner_resultTupleScheme getScheme() {
        return new getPopularBuddyBanner_resultTupleScheme();
      }
    }

    private static class getPopularBuddyBanner_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getPopularBuddyBanner_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyBanner_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyBanner_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new BuddyBanner();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getPopularBuddyLists_args implements org.apache.thrift.TBase<getPopularBuddyLists_args, getPopularBuddyLists_args._Fields>, java.io.Serializable, Cloneable, Comparable<getPopularBuddyLists_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPopularBuddyLists_args");

    private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getPopularBuddyLists_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getPopularBuddyLists_argsTupleSchemeFactory();

    public java.lang.String language; // required
    public java.lang.String country; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      LANGUAGE((short)2, "language"),
      COUNTRY((short)3, "country");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 2: // LANGUAGE
            return LANGUAGE;
          case 3: // COUNTRY
            return COUNTRY;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPopularBuddyLists_args.class, metaDataMap);
    }

    public getPopularBuddyLists_args() {
    }

    public getPopularBuddyLists_args(
      java.lang.String language,
      java.lang.String country)
    {
      this();
      this.language = language;
      this.country = country;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyLists_args(getPopularBuddyLists_args other) {
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
    }

    public getPopularBuddyLists_args deepCopy() {
      return new getPopularBuddyLists_args(this);
    }

    @Override
    public void clear() {
      this.language = null;
      this.country = null;
    }

    public java.lang.String getLanguage() {
      return this.language;
    }

    public getPopularBuddyLists_args setLanguage(java.lang.String language) {
      this.language = language;
      return this;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public java.lang.String getCountry() {
      return this.country;
    }

    public getPopularBuddyLists_args setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case LANGUAGE:
        if (value == null) {
          unsetLanguage();
        } else {
          setLanguage((java.lang.String)value);
        }
        break;

      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case LANGUAGE:
        return getLanguage();

      case COUNTRY:
        return getCountry();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case LANGUAGE:
        return isSetLanguage();
      case COUNTRY:
        return isSetCountry();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyLists_args)
        return this.equals((getPopularBuddyLists_args)that);
      return false;
    }

    public boolean equals(getPopularBuddyLists_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetLanguage()) ? 131071 : 524287);
      if (isSetLanguage())
        hashCode = hashCode * 8191 + language.hashCode();

      hashCode = hashCode * 8191 + ((isSetCountry()) ? 131071 : 524287);
      if (isSetCountry())
        hashCode = hashCode * 8191 + country.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getPopularBuddyLists_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getPopularBuddyLists_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPopularBuddyLists_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPopularBuddyLists_argsStandardScheme getScheme() {
        return new getPopularBuddyLists_argsStandardScheme();
      }
    }

    private static class getPopularBuddyLists_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getPopularBuddyLists_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPopularBuddyLists_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 2: // LANGUAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.language = iprot.readString();
                struct.setLanguageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPopularBuddyLists_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.language != null) {
          oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.language);
          oprot.writeFieldEnd();
        }
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPopularBuddyLists_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPopularBuddyLists_argsTupleScheme getScheme() {
        return new getPopularBuddyLists_argsTupleScheme();
      }
    }

    private static class getPopularBuddyLists_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getPopularBuddyLists_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyLists_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetLanguage()) {
          optionals.set(0);
        }
        if (struct.isSetCountry()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetLanguage()) {
          oprot.writeString(struct.language);
        }
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyLists_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.language = iprot.readString();
          struct.setLanguageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getPopularBuddyLists_result implements org.apache.thrift.TBase<getPopularBuddyLists_result, getPopularBuddyLists_result._Fields>, java.io.Serializable, Cloneable, Comparable<getPopularBuddyLists_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPopularBuddyLists_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getPopularBuddyLists_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getPopularBuddyLists_resultTupleSchemeFactory();

    public java.util.List<BuddyList> success; // required
    public TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BuddyList.class))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TalkException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPopularBuddyLists_result.class, metaDataMap);
    }

    public getPopularBuddyLists_result() {
    }

    public getPopularBuddyLists_result(
      java.util.List<BuddyList> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPopularBuddyLists_result(getPopularBuddyLists_result other) {
      if (other.isSetSuccess()) {
        java.util.List<BuddyList> __this__success = new java.util.ArrayList<BuddyList>(other.success.size());
        for (BuddyList other_element : other.success) {
          __this__success.add(new BuddyList(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getPopularBuddyLists_result deepCopy() {
      return new getPopularBuddyLists_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<BuddyList> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(BuddyList elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<BuddyList>();
      }
      this.success.add(elem);
    }

    public java.util.List<BuddyList> getSuccess() {
      return this.success;
    }

    public getPopularBuddyLists_result setSuccess(java.util.List<BuddyList> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public getPopularBuddyLists_result setE(TalkException e) {
      this.e = e;
      return this;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<BuddyList>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getPopularBuddyLists_result)
        return this.equals((getPopularBuddyLists_result)that);
      return false;
    }

    public boolean equals(getPopularBuddyLists_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
      if (isSetE())
        hashCode = hashCode * 8191 + e.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getPopularBuddyLists_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getPopularBuddyLists_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPopularBuddyLists_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPopularBuddyLists_resultStandardScheme getScheme() {
        return new getPopularBuddyLists_resultStandardScheme();
      }
    }

    private static class getPopularBuddyLists_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getPopularBuddyLists_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPopularBuddyLists_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list1304 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<BuddyList>(_list1304.size);
                  BuddyList _elem1305;
                  for (int _i1306 = 0; _i1306 < _list1304.size; ++_i1306)
                  {
                    _elem1305 = new BuddyList();
                    _elem1305.read(iprot);
                    struct.success.add(_elem1305);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPopularBuddyLists_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (BuddyList _iter1307 : struct.success)
            {
              _iter1307.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPopularBuddyLists_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPopularBuddyLists_resultTupleScheme getScheme() {
        return new getPopularBuddyLists_resultTupleScheme();
      }
    }

    private static class getPopularBuddyLists_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getPopularBuddyLists_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyLists_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (BuddyList _iter1308 : struct.success)
            {
              _iter1308.write(oprot);
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPopularBuddyLists_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list1309 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<BuddyList>(_list1309.size);
            BuddyList _elem1310;
            for (int _i1311 = 0; _i1311 < _list1309.size; ++_i1311)
            {
              _elem1310 = new BuddyList();
              _elem1310.read(iprot);
              struct.success.add(_elem1310);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getPromotedBuddyContacts_args implements org.apache.thrift.TBase<getPromotedBuddyContacts_args, getPromotedBuddyContacts_args._Fields>, java.io.Serializable, Cloneable, Comparable<getPromotedBuddyContacts_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPromotedBuddyContacts_args");

    private static final org.apache.thrift.protocol.TField LANGUAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("language", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getPromotedBuddyContacts_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getPromotedBuddyContacts_argsTupleSchemeFactory();

    public java.lang.String language; // required
    public java.lang.String country; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      LANGUAGE((short)2, "language"),
      COUNTRY((short)3, "country");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 2: // LANGUAGE
            return LANGUAGE;
          case 3: // COUNTRY
            return COUNTRY;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.LANGUAGE, new org.apache.thrift.meta_data.FieldMetaData("language", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPromotedBuddyContacts_args.class, metaDataMap);
    }

    public getPromotedBuddyContacts_args() {
    }

    public getPromotedBuddyContacts_args(
      java.lang.String language,
      java.lang.String country)
    {
      this();
      this.language = language;
      this.country = country;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPromotedBuddyContacts_args(getPromotedBuddyContacts_args other) {
      if (other.isSetLanguage()) {
        this.language = other.language;
      }
      if (other.isSetCountry()) {
        this.country = other.country;
      }
    }

    public getPromotedBuddyContacts_args deepCopy() {
      return new getPromotedBuddyContacts_args(this);
    }

    @Override
    public void clear() {
      this.language = null;
      this.country = null;
    }

    public java.lang.String getLanguage() {
      return this.language;
    }

    public getPromotedBuddyContacts_args setLanguage(java.lang.String language) {
      this.language = language;
      return this;
    }

    public void unsetLanguage() {
      this.language = null;
    }

    /** Returns true if field language is set (has been assigned a value) and false otherwise */
    public boolean isSetLanguage() {
      return this.language != null;
    }

    public void setLanguageIsSet(boolean value) {
      if (!value) {
        this.language = null;
      }
    }

    public java.lang.String getCountry() {
      return this.country;
    }

    public getPromotedBuddyContacts_args setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    public void unsetCountry() {
      this.country = null;
    }

    /** Returns true if field country is set (has been assigned a value) and false otherwise */
    public boolean isSetCountry() {
      return this.country != null;
    }

    public void setCountryIsSet(boolean value) {
      if (!value) {
        this.country = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case LANGUAGE:
        if (value == null) {
          unsetLanguage();
        } else {
          setLanguage((java.lang.String)value);
        }
        break;

      case COUNTRY:
        if (value == null) {
          unsetCountry();
        } else {
          setCountry((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case LANGUAGE:
        return getLanguage();

      case COUNTRY:
        return getCountry();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case LANGUAGE:
        return isSetLanguage();
      case COUNTRY:
        return isSetCountry();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getPromotedBuddyContacts_args)
        return this.equals((getPromotedBuddyContacts_args)that);
      return false;
    }

    public boolean equals(getPromotedBuddyContacts_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_language = true && this.isSetLanguage();
      boolean that_present_language = true && that.isSetLanguage();
      if (this_present_language || that_present_language) {
        if (!(this_present_language && that_present_language))
          return false;
        if (!this.language.equals(that.language))
          return false;
      }

      boolean this_present_country = true && this.isSetCountry();
      boolean that_present_country = true && that.isSetCountry();
      if (this_present_country || that_present_country) {
        if (!(this_present_country && that_present_country))
          return false;
        if (!this.country.equals(that.country))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetLanguage()) ? 131071 : 524287);
      if (isSetLanguage())
        hashCode = hashCode * 8191 + language.hashCode();

      hashCode = hashCode * 8191 + ((isSetCountry()) ? 131071 : 524287);
      if (isSetCountry())
        hashCode = hashCode * 8191 + country.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getPromotedBuddyContacts_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetLanguage()).compareTo(other.isSetLanguage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetLanguage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.language, other.language);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCountry()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getPromotedBuddyContacts_args(");
      boolean first = true;

      sb.append("language:");
      if (this.language == null) {
        sb.append("null");
      } else {
        sb.append(this.language);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("country:");
      if (this.country == null) {
        sb.append("null");
      } else {
        sb.append(this.country);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPromotedBuddyContacts_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPromotedBuddyContacts_argsStandardScheme getScheme() {
        return new getPromotedBuddyContacts_argsStandardScheme();
      }
    }

    private static class getPromotedBuddyContacts_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getPromotedBuddyContacts_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPromotedBuddyContacts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 2: // LANGUAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.language = iprot.readString();
                struct.setLanguageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // COUNTRY
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.country = iprot.readString();
                struct.setCountryIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPromotedBuddyContacts_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.language != null) {
          oprot.writeFieldBegin(LANGUAGE_FIELD_DESC);
          oprot.writeString(struct.language);
          oprot.writeFieldEnd();
        }
        if (struct.country != null) {
          oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
          oprot.writeString(struct.country);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPromotedBuddyContacts_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPromotedBuddyContacts_argsTupleScheme getScheme() {
        return new getPromotedBuddyContacts_argsTupleScheme();
      }
    }

    private static class getPromotedBuddyContacts_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getPromotedBuddyContacts_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPromotedBuddyContacts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetLanguage()) {
          optionals.set(0);
        }
        if (struct.isSetCountry()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetLanguage()) {
          oprot.writeString(struct.language);
        }
        if (struct.isSetCountry()) {
          oprot.writeString(struct.country);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPromotedBuddyContacts_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.language = iprot.readString();
          struct.setLanguageIsSet(true);
        }
        if (incoming.get(1)) {
          struct.country = iprot.readString();
          struct.setCountryIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getPromotedBuddyContacts_result implements org.apache.thrift.TBase<getPromotedBuddyContacts_result, getPromotedBuddyContacts_result._Fields>, java.io.Serializable, Cloneable, Comparable<getPromotedBuddyContacts_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getPromotedBuddyContacts_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
    private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getPromotedBuddyContacts_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getPromotedBuddyContacts_resultTupleSchemeFactory();

    public java.util.List<Contact> success; // required
    public TalkException e; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      E((short)1, "e");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // E
            return E;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Contact.class))));
      tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TalkException.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getPromotedBuddyContacts_result.class, metaDataMap);
    }

    public getPromotedBuddyContacts_result() {
    }

    public getPromotedBuddyContacts_result(
      java.util.List<Contact> success,
      TalkException e)
    {
      this();
      this.success = success;
      this.e = e;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getPromotedBuddyContacts_result(getPromotedBuddyContacts_result other) {
      if (other.isSetSuccess()) {
        java.util.List<Contact> __this__success = new java.util.ArrayList<Contact>(other.success.size());
        for (Contact other_element : other.success) {
          __this__success.add(new Contact(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetE()) {
        this.e = new TalkException(other.e);
      }
    }

    public getPromotedBuddyContacts_result deepCopy() {
      return new getPromotedBuddyContacts_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.e = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<Contact> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(Contact elem) {
      if (this.success == null) {
        this.success = new java.util.ArrayList<Contact>();
      }
      this.success.add(elem);
    }

    public java.util.List<Contact> getSuccess() {
      return this.success;
    }

    public getPromotedBuddyContacts_result setSuccess(java.util.List<Contact> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public TalkException getE() {
      return this.e;
    }

    public getPromotedBuddyContacts_result setE(TalkException e) {
      this.e = e;
      return this;
    }

    public void unsetE() {
      this.e = null;
    }

    /** Returns true if field e is set (has been assigned a value) and false otherwise */
    public boolean isSetE() {
      return this.e != null;
    }

    public void setEIsSet(boolean value) {
      if (!value) {
        this.e = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.List<Contact>)value);
        }
        break;

      case E:
        if (value == null) {
          unsetE();
        } else {
          setE((TalkException)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case E:
        return getE();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case E:
        return isSetE();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getPromotedBuddyContacts_result)
        return this.equals((getPromotedBuddyContacts_result)that);
      return false;
    }

    public boolean equals(getPromotedBuddyContacts_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_e = true && this.isSetE();
      boolean that_present_e = true && that.isSetE();
      if (this_present_e || that_present_e) {
        if (!(this_present_e && that_present_e))
          return false;
        if (!this.e.equals(that.e))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetE()) ? 131071 : 524287);
      if (isSetE())
        hashCode = hashCode * 8191 + e.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getPromotedBuddyContacts_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetE()).compareTo(other.isSetE());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetE()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.e, other.e);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getPromotedBuddyContacts_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("e:");
      if (this.e == null) {
        sb.append("null");
      } else {
        sb.append(this.e);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getPromotedBuddyContacts_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPromotedBuddyContacts_resultStandardScheme getScheme() {
        return new getPromotedBuddyContacts_resultStandardScheme();
      }
    }

    private static class getPromotedBuddyContacts_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getPromotedBuddyContacts_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getPromotedBuddyContacts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
                {
                  org.apache.thrift.protocol.TList _list1312 = iprot.readListBegin();
                  struct.success = new java.util.ArrayList<Contact>(_list1312.size);
                  Contact _elem1313;
                  for (int _i1314 = 0; _i1314 < _list1312.size; ++_i1314)
                  {
                    _elem1313 = new Contact();
                    _elem1313.read(iprot);
                    struct.success.add(_elem1313);
                  }
                  iprot.readListEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // E
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.e = new TalkException();
                struct.e.read(iprot);
                struct.setEIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getPromotedBuddyContacts_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (Contact _iter1315 : struct.success)
            {
              _iter1315.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.e != null) {
          oprot.writeFieldBegin(E_FIELD_DESC);
          struct.e.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getPromotedBuddyContacts_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getPromotedBuddyContacts_resultTupleScheme getScheme() {
        return new getPromotedBuddyContacts_resultTupleScheme();
      }
    }

    private static class getPromotedBuddyContacts_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getPromotedBuddyContacts_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getPromotedBuddyContacts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetE()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (Contact _iter1316 : struct.success)
            {
              _iter1316.write(oprot);
            }
          }
        }
        if (struct.isSetE()) {
          struct.e.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getPromotedBuddyContacts_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TList _list1317 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.ArrayList<Contact>(_list1317.size);
            Contact _elem1318;
            for (int _i1319 = 0; _i1319 < _list1317.size; ++_i1319)
            {
              _elem1318 = new Contact();
              _elem1318.read(iprot);
              struct.success.add(_elem1318);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.e = new TalkException();
          struct.e.read(iprot);
          struct.setEIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
