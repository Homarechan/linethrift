/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-17")
public class GetJoinedSquareChatsResponse implements org.apache.thrift.TBase<GetJoinedSquareChatsResponse, GetJoinedSquareChatsResponse._Fields>, java.io.Serializable, Cloneable, Comparable<GetJoinedSquareChatsResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GetJoinedSquareChatsResponse");

  private static final org.apache.thrift.protocol.TField CHATS_FIELD_DESC = new org.apache.thrift.protocol.TField("chats", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField CHAT_MEMBERS_FIELD_DESC = new org.apache.thrift.protocol.TField("chatMembers", org.apache.thrift.protocol.TType.MAP, (short)2);
  private static final org.apache.thrift.protocol.TField STATUSES_FIELD_DESC = new org.apache.thrift.protocol.TField("statuses", org.apache.thrift.protocol.TType.MAP, (short)3);
  private static final org.apache.thrift.protocol.TField CONTINUATION_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("continuationToken", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GetJoinedSquareChatsResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GetJoinedSquareChatsResponseTupleSchemeFactory();

  public java.util.List<SquareChat> chats; // required
  public java.util.Map<java.lang.String,SquareChatMember> chatMembers; // required
  public java.util.Map<java.lang.String,SquareChatStatus> statuses; // required
  public java.lang.String continuationToken; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CHATS((short)1, "chats"),
    CHAT_MEMBERS((short)2, "chatMembers"),
    STATUSES((short)3, "statuses"),
    CONTINUATION_TOKEN((short)4, "continuationToken");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CHATS
          return CHATS;
        case 2: // CHAT_MEMBERS
          return CHAT_MEMBERS;
        case 3: // STATUSES
          return STATUSES;
        case 4: // CONTINUATION_TOKEN
          return CONTINUATION_TOKEN;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CHATS, new org.apache.thrift.meta_data.FieldMetaData("chats", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareChat.class))));
    tmpMap.put(_Fields.CHAT_MEMBERS, new org.apache.thrift.meta_data.FieldMetaData("chatMembers", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareChatMember.class))));
    tmpMap.put(_Fields.STATUSES, new org.apache.thrift.meta_data.FieldMetaData("statuses", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareChatStatus.class))));
    tmpMap.put(_Fields.CONTINUATION_TOKEN, new org.apache.thrift.meta_data.FieldMetaData("continuationToken", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GetJoinedSquareChatsResponse.class, metaDataMap);
  }

  public GetJoinedSquareChatsResponse() {
  }

  public GetJoinedSquareChatsResponse(
    java.util.List<SquareChat> chats,
    java.util.Map<java.lang.String,SquareChatMember> chatMembers,
    java.util.Map<java.lang.String,SquareChatStatus> statuses,
    java.lang.String continuationToken)
  {
    this();
    this.chats = chats;
    this.chatMembers = chatMembers;
    this.statuses = statuses;
    this.continuationToken = continuationToken;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GetJoinedSquareChatsResponse(GetJoinedSquareChatsResponse other) {
    if (other.isSetChats()) {
      java.util.List<SquareChat> __this__chats = new java.util.ArrayList<SquareChat>(other.chats.size());
      for (SquareChat other_element : other.chats) {
        __this__chats.add(new SquareChat(other_element));
      }
      this.chats = __this__chats;
    }
    if (other.isSetChatMembers()) {
      java.util.Map<java.lang.String,SquareChatMember> __this__chatMembers = new java.util.HashMap<java.lang.String,SquareChatMember>(other.chatMembers.size());
      for (java.util.Map.Entry<java.lang.String, SquareChatMember> other_element : other.chatMembers.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        SquareChatMember other_element_value = other_element.getValue();

        java.lang.String __this__chatMembers_copy_key = other_element_key;

        SquareChatMember __this__chatMembers_copy_value = new SquareChatMember(other_element_value);

        __this__chatMembers.put(__this__chatMembers_copy_key, __this__chatMembers_copy_value);
      }
      this.chatMembers = __this__chatMembers;
    }
    if (other.isSetStatuses()) {
      java.util.Map<java.lang.String,SquareChatStatus> __this__statuses = new java.util.HashMap<java.lang.String,SquareChatStatus>(other.statuses.size());
      for (java.util.Map.Entry<java.lang.String, SquareChatStatus> other_element : other.statuses.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        SquareChatStatus other_element_value = other_element.getValue();

        java.lang.String __this__statuses_copy_key = other_element_key;

        SquareChatStatus __this__statuses_copy_value = new SquareChatStatus(other_element_value);

        __this__statuses.put(__this__statuses_copy_key, __this__statuses_copy_value);
      }
      this.statuses = __this__statuses;
    }
    if (other.isSetContinuationToken()) {
      this.continuationToken = other.continuationToken;
    }
  }

  public GetJoinedSquareChatsResponse deepCopy() {
    return new GetJoinedSquareChatsResponse(this);
  }

  @Override
  public void clear() {
    this.chats = null;
    this.chatMembers = null;
    this.statuses = null;
    this.continuationToken = null;
  }

  public int getChatsSize() {
    return (this.chats == null) ? 0 : this.chats.size();
  }

  public java.util.Iterator<SquareChat> getChatsIterator() {
    return (this.chats == null) ? null : this.chats.iterator();
  }

  public void addToChats(SquareChat elem) {
    if (this.chats == null) {
      this.chats = new java.util.ArrayList<SquareChat>();
    }
    this.chats.add(elem);
  }

  public java.util.List<SquareChat> getChats() {
    return this.chats;
  }

  public GetJoinedSquareChatsResponse setChats(java.util.List<SquareChat> chats) {
    this.chats = chats;
    return this;
  }

  public void unsetChats() {
    this.chats = null;
  }

  /** Returns true if field chats is set (has been assigned a value) and false otherwise */
  public boolean isSetChats() {
    return this.chats != null;
  }

  public void setChatsIsSet(boolean value) {
    if (!value) {
      this.chats = null;
    }
  }

  public int getChatMembersSize() {
    return (this.chatMembers == null) ? 0 : this.chatMembers.size();
  }

  public void putToChatMembers(java.lang.String key, SquareChatMember val) {
    if (this.chatMembers == null) {
      this.chatMembers = new java.util.HashMap<java.lang.String,SquareChatMember>();
    }
    this.chatMembers.put(key, val);
  }

  public java.util.Map<java.lang.String,SquareChatMember> getChatMembers() {
    return this.chatMembers;
  }

  public GetJoinedSquareChatsResponse setChatMembers(java.util.Map<java.lang.String,SquareChatMember> chatMembers) {
    this.chatMembers = chatMembers;
    return this;
  }

  public void unsetChatMembers() {
    this.chatMembers = null;
  }

  /** Returns true if field chatMembers is set (has been assigned a value) and false otherwise */
  public boolean isSetChatMembers() {
    return this.chatMembers != null;
  }

  public void setChatMembersIsSet(boolean value) {
    if (!value) {
      this.chatMembers = null;
    }
  }

  public int getStatusesSize() {
    return (this.statuses == null) ? 0 : this.statuses.size();
  }

  public void putToStatuses(java.lang.String key, SquareChatStatus val) {
    if (this.statuses == null) {
      this.statuses = new java.util.HashMap<java.lang.String,SquareChatStatus>();
    }
    this.statuses.put(key, val);
  }

  public java.util.Map<java.lang.String,SquareChatStatus> getStatuses() {
    return this.statuses;
  }

  public GetJoinedSquareChatsResponse setStatuses(java.util.Map<java.lang.String,SquareChatStatus> statuses) {
    this.statuses = statuses;
    return this;
  }

  public void unsetStatuses() {
    this.statuses = null;
  }

  /** Returns true if field statuses is set (has been assigned a value) and false otherwise */
  public boolean isSetStatuses() {
    return this.statuses != null;
  }

  public void setStatusesIsSet(boolean value) {
    if (!value) {
      this.statuses = null;
    }
  }

  public java.lang.String getContinuationToken() {
    return this.continuationToken;
  }

  public GetJoinedSquareChatsResponse setContinuationToken(java.lang.String continuationToken) {
    this.continuationToken = continuationToken;
    return this;
  }

  public void unsetContinuationToken() {
    this.continuationToken = null;
  }

  /** Returns true if field continuationToken is set (has been assigned a value) and false otherwise */
  public boolean isSetContinuationToken() {
    return this.continuationToken != null;
  }

  public void setContinuationTokenIsSet(boolean value) {
    if (!value) {
      this.continuationToken = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case CHATS:
      if (value == null) {
        unsetChats();
      } else {
        setChats((java.util.List<SquareChat>)value);
      }
      break;

    case CHAT_MEMBERS:
      if (value == null) {
        unsetChatMembers();
      } else {
        setChatMembers((java.util.Map<java.lang.String,SquareChatMember>)value);
      }
      break;

    case STATUSES:
      if (value == null) {
        unsetStatuses();
      } else {
        setStatuses((java.util.Map<java.lang.String,SquareChatStatus>)value);
      }
      break;

    case CONTINUATION_TOKEN:
      if (value == null) {
        unsetContinuationToken();
      } else {
        setContinuationToken((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case CHATS:
      return getChats();

    case CHAT_MEMBERS:
      return getChatMembers();

    case STATUSES:
      return getStatuses();

    case CONTINUATION_TOKEN:
      return getContinuationToken();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case CHATS:
      return isSetChats();
    case CHAT_MEMBERS:
      return isSetChatMembers();
    case STATUSES:
      return isSetStatuses();
    case CONTINUATION_TOKEN:
      return isSetContinuationToken();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof GetJoinedSquareChatsResponse)
      return this.equals((GetJoinedSquareChatsResponse)that);
    return false;
  }

  public boolean equals(GetJoinedSquareChatsResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_chats = true && this.isSetChats();
    boolean that_present_chats = true && that.isSetChats();
    if (this_present_chats || that_present_chats) {
      if (!(this_present_chats && that_present_chats))
        return false;
      if (!this.chats.equals(that.chats))
        return false;
    }

    boolean this_present_chatMembers = true && this.isSetChatMembers();
    boolean that_present_chatMembers = true && that.isSetChatMembers();
    if (this_present_chatMembers || that_present_chatMembers) {
      if (!(this_present_chatMembers && that_present_chatMembers))
        return false;
      if (!this.chatMembers.equals(that.chatMembers))
        return false;
    }

    boolean this_present_statuses = true && this.isSetStatuses();
    boolean that_present_statuses = true && that.isSetStatuses();
    if (this_present_statuses || that_present_statuses) {
      if (!(this_present_statuses && that_present_statuses))
        return false;
      if (!this.statuses.equals(that.statuses))
        return false;
    }

    boolean this_present_continuationToken = true && this.isSetContinuationToken();
    boolean that_present_continuationToken = true && that.isSetContinuationToken();
    if (this_present_continuationToken || that_present_continuationToken) {
      if (!(this_present_continuationToken && that_present_continuationToken))
        return false;
      if (!this.continuationToken.equals(that.continuationToken))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetChats()) ? 131071 : 524287);
    if (isSetChats())
      hashCode = hashCode * 8191 + chats.hashCode();

    hashCode = hashCode * 8191 + ((isSetChatMembers()) ? 131071 : 524287);
    if (isSetChatMembers())
      hashCode = hashCode * 8191 + chatMembers.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatuses()) ? 131071 : 524287);
    if (isSetStatuses())
      hashCode = hashCode * 8191 + statuses.hashCode();

    hashCode = hashCode * 8191 + ((isSetContinuationToken()) ? 131071 : 524287);
    if (isSetContinuationToken())
      hashCode = hashCode * 8191 + continuationToken.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(GetJoinedSquareChatsResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetChats()).compareTo(other.isSetChats());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChats()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chats, other.chats);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetChatMembers()).compareTo(other.isSetChatMembers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChatMembers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chatMembers, other.chatMembers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatuses()).compareTo(other.isSetStatuses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatuses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statuses, other.statuses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetContinuationToken()).compareTo(other.isSetContinuationToken());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContinuationToken()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.continuationToken, other.continuationToken);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("GetJoinedSquareChatsResponse(");
    boolean first = true;

    sb.append("chats:");
    if (this.chats == null) {
      sb.append("null");
    } else {
      sb.append(this.chats);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("chatMembers:");
    if (this.chatMembers == null) {
      sb.append("null");
    } else {
      sb.append(this.chatMembers);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("statuses:");
    if (this.statuses == null) {
      sb.append("null");
    } else {
      sb.append(this.statuses);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("continuationToken:");
    if (this.continuationToken == null) {
      sb.append("null");
    } else {
      sb.append(this.continuationToken);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GetJoinedSquareChatsResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public GetJoinedSquareChatsResponseStandardScheme getScheme() {
      return new GetJoinedSquareChatsResponseStandardScheme();
    }
  }

  private static class GetJoinedSquareChatsResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<GetJoinedSquareChatsResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GetJoinedSquareChatsResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CHATS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list1182 = iprot.readListBegin();
                struct.chats = new java.util.ArrayList<SquareChat>(_list1182.size);
                SquareChat _elem1183;
                for (int _i1184 = 0; _i1184 < _list1182.size; ++_i1184)
                {
                  _elem1183 = new SquareChat();
                  _elem1183.read(iprot);
                  struct.chats.add(_elem1183);
                }
                iprot.readListEnd();
              }
              struct.setChatsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CHAT_MEMBERS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map1185 = iprot.readMapBegin();
                struct.chatMembers = new java.util.HashMap<java.lang.String,SquareChatMember>(2*_map1185.size);
                java.lang.String _key1186;
                SquareChatMember _val1187;
                for (int _i1188 = 0; _i1188 < _map1185.size; ++_i1188)
                {
                  _key1186 = iprot.readString();
                  _val1187 = new SquareChatMember();
                  _val1187.read(iprot);
                  struct.chatMembers.put(_key1186, _val1187);
                }
                iprot.readMapEnd();
              }
              struct.setChatMembersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // STATUSES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map1189 = iprot.readMapBegin();
                struct.statuses = new java.util.HashMap<java.lang.String,SquareChatStatus>(2*_map1189.size);
                java.lang.String _key1190;
                SquareChatStatus _val1191;
                for (int _i1192 = 0; _i1192 < _map1189.size; ++_i1192)
                {
                  _key1190 = iprot.readString();
                  _val1191 = new SquareChatStatus();
                  _val1191.read(iprot);
                  struct.statuses.put(_key1190, _val1191);
                }
                iprot.readMapEnd();
              }
              struct.setStatusesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CONTINUATION_TOKEN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.continuationToken = iprot.readString();
              struct.setContinuationTokenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GetJoinedSquareChatsResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.chats != null) {
        oprot.writeFieldBegin(CHATS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.chats.size()));
          for (SquareChat _iter1193 : struct.chats)
          {
            _iter1193.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.chatMembers != null) {
        oprot.writeFieldBegin(CHAT_MEMBERS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.chatMembers.size()));
          for (java.util.Map.Entry<java.lang.String, SquareChatMember> _iter1194 : struct.chatMembers.entrySet())
          {
            oprot.writeString(_iter1194.getKey());
            _iter1194.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.statuses != null) {
        oprot.writeFieldBegin(STATUSES_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.statuses.size()));
          for (java.util.Map.Entry<java.lang.String, SquareChatStatus> _iter1195 : struct.statuses.entrySet())
          {
            oprot.writeString(_iter1195.getKey());
            _iter1195.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.continuationToken != null) {
        oprot.writeFieldBegin(CONTINUATION_TOKEN_FIELD_DESC);
        oprot.writeString(struct.continuationToken);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GetJoinedSquareChatsResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public GetJoinedSquareChatsResponseTupleScheme getScheme() {
      return new GetJoinedSquareChatsResponseTupleScheme();
    }
  }

  private static class GetJoinedSquareChatsResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<GetJoinedSquareChatsResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GetJoinedSquareChatsResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetChats()) {
        optionals.set(0);
      }
      if (struct.isSetChatMembers()) {
        optionals.set(1);
      }
      if (struct.isSetStatuses()) {
        optionals.set(2);
      }
      if (struct.isSetContinuationToken()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetChats()) {
        {
          oprot.writeI32(struct.chats.size());
          for (SquareChat _iter1196 : struct.chats)
          {
            _iter1196.write(oprot);
          }
        }
      }
      if (struct.isSetChatMembers()) {
        {
          oprot.writeI32(struct.chatMembers.size());
          for (java.util.Map.Entry<java.lang.String, SquareChatMember> _iter1197 : struct.chatMembers.entrySet())
          {
            oprot.writeString(_iter1197.getKey());
            _iter1197.getValue().write(oprot);
          }
        }
      }
      if (struct.isSetStatuses()) {
        {
          oprot.writeI32(struct.statuses.size());
          for (java.util.Map.Entry<java.lang.String, SquareChatStatus> _iter1198 : struct.statuses.entrySet())
          {
            oprot.writeString(_iter1198.getKey());
            _iter1198.getValue().write(oprot);
          }
        }
      }
      if (struct.isSetContinuationToken()) {
        oprot.writeString(struct.continuationToken);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GetJoinedSquareChatsResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list1199 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.chats = new java.util.ArrayList<SquareChat>(_list1199.size);
          SquareChat _elem1200;
          for (int _i1201 = 0; _i1201 < _list1199.size; ++_i1201)
          {
            _elem1200 = new SquareChat();
            _elem1200.read(iprot);
            struct.chats.add(_elem1200);
          }
        }
        struct.setChatsIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map1202 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.chatMembers = new java.util.HashMap<java.lang.String,SquareChatMember>(2*_map1202.size);
          java.lang.String _key1203;
          SquareChatMember _val1204;
          for (int _i1205 = 0; _i1205 < _map1202.size; ++_i1205)
          {
            _key1203 = iprot.readString();
            _val1204 = new SquareChatMember();
            _val1204.read(iprot);
            struct.chatMembers.put(_key1203, _val1204);
          }
        }
        struct.setChatMembersIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TMap _map1206 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.statuses = new java.util.HashMap<java.lang.String,SquareChatStatus>(2*_map1206.size);
          java.lang.String _key1207;
          SquareChatStatus _val1208;
          for (int _i1209 = 0; _i1209 < _map1206.size; ++_i1209)
          {
            _key1207 = iprot.readString();
            _val1208 = new SquareChatStatus();
            _val1208.read(iprot);
            struct.statuses.put(_key1207, _val1208);
          }
        }
        struct.setStatusesIsSet(true);
      }
      if (incoming.get(3)) {
        struct.continuationToken = iprot.readString();
        struct.setContinuationTokenIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

