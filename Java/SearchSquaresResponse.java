/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2019-09-28")
public class SearchSquaresResponse implements org.apache.thrift.TBase<SearchSquaresResponse, SearchSquaresResponse._Fields>, java.io.Serializable, Cloneable, Comparable<SearchSquaresResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SearchSquaresResponse");

  private static final org.apache.thrift.protocol.TField SQUARES_FIELD_DESC = new org.apache.thrift.protocol.TField("squares", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField SQUARE_STATUSES_FIELD_DESC = new org.apache.thrift.protocol.TField("squareStatuses", org.apache.thrift.protocol.TType.MAP, (short)2);
  private static final org.apache.thrift.protocol.TField MY_MEMBERSHIPS_FIELD_DESC = new org.apache.thrift.protocol.TField("myMemberships", org.apache.thrift.protocol.TType.MAP, (short)3);
  private static final org.apache.thrift.protocol.TField CONTINUATION_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("continuationToken", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField NOTE_STATUSES_FIELD_DESC = new org.apache.thrift.protocol.TField("noteStatuses", org.apache.thrift.protocol.TType.MAP, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SearchSquaresResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SearchSquaresResponseTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<Square> squares; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,SquareStatus> squareStatuses; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,SquareMember> myMemberships; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String continuationToken; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,NoteStatus> noteStatuses; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SQUARES((short)1, "squares"),
    SQUARE_STATUSES((short)2, "squareStatuses"),
    MY_MEMBERSHIPS((short)3, "myMemberships"),
    CONTINUATION_TOKEN((short)4, "continuationToken"),
    NOTE_STATUSES((short)5, "noteStatuses");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SQUARES
          return SQUARES;
        case 2: // SQUARE_STATUSES
          return SQUARE_STATUSES;
        case 3: // MY_MEMBERSHIPS
          return MY_MEMBERSHIPS;
        case 4: // CONTINUATION_TOKEN
          return CONTINUATION_TOKEN;
        case 5: // NOTE_STATUSES
          return NOTE_STATUSES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SQUARES, new org.apache.thrift.meta_data.FieldMetaData("squares", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Square.class))));
    tmpMap.put(_Fields.SQUARE_STATUSES, new org.apache.thrift.meta_data.FieldMetaData("squareStatuses", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareStatus.class))));
    tmpMap.put(_Fields.MY_MEMBERSHIPS, new org.apache.thrift.meta_data.FieldMetaData("myMemberships", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareMember.class))));
    tmpMap.put(_Fields.CONTINUATION_TOKEN, new org.apache.thrift.meta_data.FieldMetaData("continuationToken", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOTE_STATUSES, new org.apache.thrift.meta_data.FieldMetaData("noteStatuses", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, NoteStatus.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SearchSquaresResponse.class, metaDataMap);
  }

  public SearchSquaresResponse() {
  }

  public SearchSquaresResponse(
    java.util.List<Square> squares,
    java.util.Map<java.lang.String,SquareStatus> squareStatuses,
    java.util.Map<java.lang.String,SquareMember> myMemberships,
    java.lang.String continuationToken,
    java.util.Map<java.lang.String,NoteStatus> noteStatuses)
  {
    this();
    this.squares = squares;
    this.squareStatuses = squareStatuses;
    this.myMemberships = myMemberships;
    this.continuationToken = continuationToken;
    this.noteStatuses = noteStatuses;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SearchSquaresResponse(SearchSquaresResponse other) {
    if (other.isSetSquares()) {
      java.util.List<Square> __this__squares = new java.util.ArrayList<Square>(other.squares.size());
      for (Square other_element : other.squares) {
        __this__squares.add(new Square(other_element));
      }
      this.squares = __this__squares;
    }
    if (other.isSetSquareStatuses()) {
      java.util.Map<java.lang.String,SquareStatus> __this__squareStatuses = new java.util.HashMap<java.lang.String,SquareStatus>(other.squareStatuses.size());
      for (java.util.Map.Entry<java.lang.String, SquareStatus> other_element : other.squareStatuses.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        SquareStatus other_element_value = other_element.getValue();

        java.lang.String __this__squareStatuses_copy_key = other_element_key;

        SquareStatus __this__squareStatuses_copy_value = new SquareStatus(other_element_value);

        __this__squareStatuses.put(__this__squareStatuses_copy_key, __this__squareStatuses_copy_value);
      }
      this.squareStatuses = __this__squareStatuses;
    }
    if (other.isSetMyMemberships()) {
      java.util.Map<java.lang.String,SquareMember> __this__myMemberships = new java.util.HashMap<java.lang.String,SquareMember>(other.myMemberships.size());
      for (java.util.Map.Entry<java.lang.String, SquareMember> other_element : other.myMemberships.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        SquareMember other_element_value = other_element.getValue();

        java.lang.String __this__myMemberships_copy_key = other_element_key;

        SquareMember __this__myMemberships_copy_value = new SquareMember(other_element_value);

        __this__myMemberships.put(__this__myMemberships_copy_key, __this__myMemberships_copy_value);
      }
      this.myMemberships = __this__myMemberships;
    }
    if (other.isSetContinuationToken()) {
      this.continuationToken = other.continuationToken;
    }
    if (other.isSetNoteStatuses()) {
      java.util.Map<java.lang.String,NoteStatus> __this__noteStatuses = new java.util.HashMap<java.lang.String,NoteStatus>(other.noteStatuses.size());
      for (java.util.Map.Entry<java.lang.String, NoteStatus> other_element : other.noteStatuses.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        NoteStatus other_element_value = other_element.getValue();

        java.lang.String __this__noteStatuses_copy_key = other_element_key;

        NoteStatus __this__noteStatuses_copy_value = new NoteStatus(other_element_value);

        __this__noteStatuses.put(__this__noteStatuses_copy_key, __this__noteStatuses_copy_value);
      }
      this.noteStatuses = __this__noteStatuses;
    }
  }

  public SearchSquaresResponse deepCopy() {
    return new SearchSquaresResponse(this);
  }

  @Override
  public void clear() {
    this.squares = null;
    this.squareStatuses = null;
    this.myMemberships = null;
    this.continuationToken = null;
    this.noteStatuses = null;
  }

  public int getSquaresSize() {
    return (this.squares == null) ? 0 : this.squares.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<Square> getSquaresIterator() {
    return (this.squares == null) ? null : this.squares.iterator();
  }

  public void addToSquares(Square elem) {
    if (this.squares == null) {
      this.squares = new java.util.ArrayList<Square>();
    }
    this.squares.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<Square> getSquares() {
    return this.squares;
  }

  public SearchSquaresResponse setSquares(@org.apache.thrift.annotation.Nullable java.util.List<Square> squares) {
    this.squares = squares;
    return this;
  }

  public void unsetSquares() {
    this.squares = null;
  }

  /** Returns true if field squares is set (has been assigned a value) and false otherwise */
  public boolean isSetSquares() {
    return this.squares != null;
  }

  public void setSquaresIsSet(boolean value) {
    if (!value) {
      this.squares = null;
    }
  }

  public int getSquareStatusesSize() {
    return (this.squareStatuses == null) ? 0 : this.squareStatuses.size();
  }

  public void putToSquareStatuses(java.lang.String key, SquareStatus val) {
    if (this.squareStatuses == null) {
      this.squareStatuses = new java.util.HashMap<java.lang.String,SquareStatus>();
    }
    this.squareStatuses.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,SquareStatus> getSquareStatuses() {
    return this.squareStatuses;
  }

  public SearchSquaresResponse setSquareStatuses(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,SquareStatus> squareStatuses) {
    this.squareStatuses = squareStatuses;
    return this;
  }

  public void unsetSquareStatuses() {
    this.squareStatuses = null;
  }

  /** Returns true if field squareStatuses is set (has been assigned a value) and false otherwise */
  public boolean isSetSquareStatuses() {
    return this.squareStatuses != null;
  }

  public void setSquareStatusesIsSet(boolean value) {
    if (!value) {
      this.squareStatuses = null;
    }
  }

  public int getMyMembershipsSize() {
    return (this.myMemberships == null) ? 0 : this.myMemberships.size();
  }

  public void putToMyMemberships(java.lang.String key, SquareMember val) {
    if (this.myMemberships == null) {
      this.myMemberships = new java.util.HashMap<java.lang.String,SquareMember>();
    }
    this.myMemberships.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,SquareMember> getMyMemberships() {
    return this.myMemberships;
  }

  public SearchSquaresResponse setMyMemberships(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,SquareMember> myMemberships) {
    this.myMemberships = myMemberships;
    return this;
  }

  public void unsetMyMemberships() {
    this.myMemberships = null;
  }

  /** Returns true if field myMemberships is set (has been assigned a value) and false otherwise */
  public boolean isSetMyMemberships() {
    return this.myMemberships != null;
  }

  public void setMyMembershipsIsSet(boolean value) {
    if (!value) {
      this.myMemberships = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getContinuationToken() {
    return this.continuationToken;
  }

  public SearchSquaresResponse setContinuationToken(@org.apache.thrift.annotation.Nullable java.lang.String continuationToken) {
    this.continuationToken = continuationToken;
    return this;
  }

  public void unsetContinuationToken() {
    this.continuationToken = null;
  }

  /** Returns true if field continuationToken is set (has been assigned a value) and false otherwise */
  public boolean isSetContinuationToken() {
    return this.continuationToken != null;
  }

  public void setContinuationTokenIsSet(boolean value) {
    if (!value) {
      this.continuationToken = null;
    }
  }

  public int getNoteStatusesSize() {
    return (this.noteStatuses == null) ? 0 : this.noteStatuses.size();
  }

  public void putToNoteStatuses(java.lang.String key, NoteStatus val) {
    if (this.noteStatuses == null) {
      this.noteStatuses = new java.util.HashMap<java.lang.String,NoteStatus>();
    }
    this.noteStatuses.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,NoteStatus> getNoteStatuses() {
    return this.noteStatuses;
  }

  public SearchSquaresResponse setNoteStatuses(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,NoteStatus> noteStatuses) {
    this.noteStatuses = noteStatuses;
    return this;
  }

  public void unsetNoteStatuses() {
    this.noteStatuses = null;
  }

  /** Returns true if field noteStatuses is set (has been assigned a value) and false otherwise */
  public boolean isSetNoteStatuses() {
    return this.noteStatuses != null;
  }

  public void setNoteStatusesIsSet(boolean value) {
    if (!value) {
      this.noteStatuses = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SQUARES:
      if (value == null) {
        unsetSquares();
      } else {
        setSquares((java.util.List<Square>)value);
      }
      break;

    case SQUARE_STATUSES:
      if (value == null) {
        unsetSquareStatuses();
      } else {
        setSquareStatuses((java.util.Map<java.lang.String,SquareStatus>)value);
      }
      break;

    case MY_MEMBERSHIPS:
      if (value == null) {
        unsetMyMemberships();
      } else {
        setMyMemberships((java.util.Map<java.lang.String,SquareMember>)value);
      }
      break;

    case CONTINUATION_TOKEN:
      if (value == null) {
        unsetContinuationToken();
      } else {
        setContinuationToken((java.lang.String)value);
      }
      break;

    case NOTE_STATUSES:
      if (value == null) {
        unsetNoteStatuses();
      } else {
        setNoteStatuses((java.util.Map<java.lang.String,NoteStatus>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SQUARES:
      return getSquares();

    case SQUARE_STATUSES:
      return getSquareStatuses();

    case MY_MEMBERSHIPS:
      return getMyMemberships();

    case CONTINUATION_TOKEN:
      return getContinuationToken();

    case NOTE_STATUSES:
      return getNoteStatuses();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SQUARES:
      return isSetSquares();
    case SQUARE_STATUSES:
      return isSetSquareStatuses();
    case MY_MEMBERSHIPS:
      return isSetMyMemberships();
    case CONTINUATION_TOKEN:
      return isSetContinuationToken();
    case NOTE_STATUSES:
      return isSetNoteStatuses();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SearchSquaresResponse)
      return this.equals((SearchSquaresResponse)that);
    return false;
  }

  public boolean equals(SearchSquaresResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_squares = true && this.isSetSquares();
    boolean that_present_squares = true && that.isSetSquares();
    if (this_present_squares || that_present_squares) {
      if (!(this_present_squares && that_present_squares))
        return false;
      if (!this.squares.equals(that.squares))
        return false;
    }

    boolean this_present_squareStatuses = true && this.isSetSquareStatuses();
    boolean that_present_squareStatuses = true && that.isSetSquareStatuses();
    if (this_present_squareStatuses || that_present_squareStatuses) {
      if (!(this_present_squareStatuses && that_present_squareStatuses))
        return false;
      if (!this.squareStatuses.equals(that.squareStatuses))
        return false;
    }

    boolean this_present_myMemberships = true && this.isSetMyMemberships();
    boolean that_present_myMemberships = true && that.isSetMyMemberships();
    if (this_present_myMemberships || that_present_myMemberships) {
      if (!(this_present_myMemberships && that_present_myMemberships))
        return false;
      if (!this.myMemberships.equals(that.myMemberships))
        return false;
    }

    boolean this_present_continuationToken = true && this.isSetContinuationToken();
    boolean that_present_continuationToken = true && that.isSetContinuationToken();
    if (this_present_continuationToken || that_present_continuationToken) {
      if (!(this_present_continuationToken && that_present_continuationToken))
        return false;
      if (!this.continuationToken.equals(that.continuationToken))
        return false;
    }

    boolean this_present_noteStatuses = true && this.isSetNoteStatuses();
    boolean that_present_noteStatuses = true && that.isSetNoteStatuses();
    if (this_present_noteStatuses || that_present_noteStatuses) {
      if (!(this_present_noteStatuses && that_present_noteStatuses))
        return false;
      if (!this.noteStatuses.equals(that.noteStatuses))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSquares()) ? 131071 : 524287);
    if (isSetSquares())
      hashCode = hashCode * 8191 + squares.hashCode();

    hashCode = hashCode * 8191 + ((isSetSquareStatuses()) ? 131071 : 524287);
    if (isSetSquareStatuses())
      hashCode = hashCode * 8191 + squareStatuses.hashCode();

    hashCode = hashCode * 8191 + ((isSetMyMemberships()) ? 131071 : 524287);
    if (isSetMyMemberships())
      hashCode = hashCode * 8191 + myMemberships.hashCode();

    hashCode = hashCode * 8191 + ((isSetContinuationToken()) ? 131071 : 524287);
    if (isSetContinuationToken())
      hashCode = hashCode * 8191 + continuationToken.hashCode();

    hashCode = hashCode * 8191 + ((isSetNoteStatuses()) ? 131071 : 524287);
    if (isSetNoteStatuses())
      hashCode = hashCode * 8191 + noteStatuses.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SearchSquaresResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetSquares()).compareTo(other.isSetSquares());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSquares()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.squares, other.squares);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSquareStatuses()).compareTo(other.isSetSquareStatuses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSquareStatuses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.squareStatuses, other.squareStatuses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMyMemberships()).compareTo(other.isSetMyMemberships());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMyMemberships()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.myMemberships, other.myMemberships);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetContinuationToken()).compareTo(other.isSetContinuationToken());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContinuationToken()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.continuationToken, other.continuationToken);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNoteStatuses()).compareTo(other.isSetNoteStatuses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNoteStatuses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.noteStatuses, other.noteStatuses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SearchSquaresResponse(");
    boolean first = true;

    sb.append("squares:");
    if (this.squares == null) {
      sb.append("null");
    } else {
      sb.append(this.squares);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("squareStatuses:");
    if (this.squareStatuses == null) {
      sb.append("null");
    } else {
      sb.append(this.squareStatuses);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("myMemberships:");
    if (this.myMemberships == null) {
      sb.append("null");
    } else {
      sb.append(this.myMemberships);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("continuationToken:");
    if (this.continuationToken == null) {
      sb.append("null");
    } else {
      sb.append(this.continuationToken);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("noteStatuses:");
    if (this.noteStatuses == null) {
      sb.append("null");
    } else {
      sb.append(this.noteStatuses);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SearchSquaresResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SearchSquaresResponseStandardScheme getScheme() {
      return new SearchSquaresResponseStandardScheme();
    }
  }

  private static class SearchSquaresResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<SearchSquaresResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SearchSquaresResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SQUARES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list780 = iprot.readListBegin();
                struct.squares = new java.util.ArrayList<Square>(_list780.size);
                @org.apache.thrift.annotation.Nullable Square _elem781;
                for (int _i782 = 0; _i782 < _list780.size; ++_i782)
                {
                  _elem781 = new Square();
                  _elem781.read(iprot);
                  struct.squares.add(_elem781);
                }
                iprot.readListEnd();
              }
              struct.setSquaresIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SQUARE_STATUSES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map783 = iprot.readMapBegin();
                struct.squareStatuses = new java.util.HashMap<java.lang.String,SquareStatus>(2*_map783.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key784;
                @org.apache.thrift.annotation.Nullable SquareStatus _val785;
                for (int _i786 = 0; _i786 < _map783.size; ++_i786)
                {
                  _key784 = iprot.readString();
                  _val785 = new SquareStatus();
                  _val785.read(iprot);
                  struct.squareStatuses.put(_key784, _val785);
                }
                iprot.readMapEnd();
              }
              struct.setSquareStatusesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MY_MEMBERSHIPS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map787 = iprot.readMapBegin();
                struct.myMemberships = new java.util.HashMap<java.lang.String,SquareMember>(2*_map787.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key788;
                @org.apache.thrift.annotation.Nullable SquareMember _val789;
                for (int _i790 = 0; _i790 < _map787.size; ++_i790)
                {
                  _key788 = iprot.readString();
                  _val789 = new SquareMember();
                  _val789.read(iprot);
                  struct.myMemberships.put(_key788, _val789);
                }
                iprot.readMapEnd();
              }
              struct.setMyMembershipsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CONTINUATION_TOKEN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.continuationToken = iprot.readString();
              struct.setContinuationTokenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NOTE_STATUSES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map791 = iprot.readMapBegin();
                struct.noteStatuses = new java.util.HashMap<java.lang.String,NoteStatus>(2*_map791.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key792;
                @org.apache.thrift.annotation.Nullable NoteStatus _val793;
                for (int _i794 = 0; _i794 < _map791.size; ++_i794)
                {
                  _key792 = iprot.readString();
                  _val793 = new NoteStatus();
                  _val793.read(iprot);
                  struct.noteStatuses.put(_key792, _val793);
                }
                iprot.readMapEnd();
              }
              struct.setNoteStatusesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SearchSquaresResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.squares != null) {
        oprot.writeFieldBegin(SQUARES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.squares.size()));
          for (Square _iter795 : struct.squares)
          {
            _iter795.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.squareStatuses != null) {
        oprot.writeFieldBegin(SQUARE_STATUSES_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.squareStatuses.size()));
          for (java.util.Map.Entry<java.lang.String, SquareStatus> _iter796 : struct.squareStatuses.entrySet())
          {
            oprot.writeString(_iter796.getKey());
            _iter796.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.myMemberships != null) {
        oprot.writeFieldBegin(MY_MEMBERSHIPS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.myMemberships.size()));
          for (java.util.Map.Entry<java.lang.String, SquareMember> _iter797 : struct.myMemberships.entrySet())
          {
            oprot.writeString(_iter797.getKey());
            _iter797.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.continuationToken != null) {
        oprot.writeFieldBegin(CONTINUATION_TOKEN_FIELD_DESC);
        oprot.writeString(struct.continuationToken);
        oprot.writeFieldEnd();
      }
      if (struct.noteStatuses != null) {
        oprot.writeFieldBegin(NOTE_STATUSES_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, struct.noteStatuses.size()));
          for (java.util.Map.Entry<java.lang.String, NoteStatus> _iter798 : struct.noteStatuses.entrySet())
          {
            oprot.writeString(_iter798.getKey());
            _iter798.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SearchSquaresResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SearchSquaresResponseTupleScheme getScheme() {
      return new SearchSquaresResponseTupleScheme();
    }
  }

  private static class SearchSquaresResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<SearchSquaresResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SearchSquaresResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSquares()) {
        optionals.set(0);
      }
      if (struct.isSetSquareStatuses()) {
        optionals.set(1);
      }
      if (struct.isSetMyMemberships()) {
        optionals.set(2);
      }
      if (struct.isSetContinuationToken()) {
        optionals.set(3);
      }
      if (struct.isSetNoteStatuses()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetSquares()) {
        {
          oprot.writeI32(struct.squares.size());
          for (Square _iter799 : struct.squares)
          {
            _iter799.write(oprot);
          }
        }
      }
      if (struct.isSetSquareStatuses()) {
        {
          oprot.writeI32(struct.squareStatuses.size());
          for (java.util.Map.Entry<java.lang.String, SquareStatus> _iter800 : struct.squareStatuses.entrySet())
          {
            oprot.writeString(_iter800.getKey());
            _iter800.getValue().write(oprot);
          }
        }
      }
      if (struct.isSetMyMemberships()) {
        {
          oprot.writeI32(struct.myMemberships.size());
          for (java.util.Map.Entry<java.lang.String, SquareMember> _iter801 : struct.myMemberships.entrySet())
          {
            oprot.writeString(_iter801.getKey());
            _iter801.getValue().write(oprot);
          }
        }
      }
      if (struct.isSetContinuationToken()) {
        oprot.writeString(struct.continuationToken);
      }
      if (struct.isSetNoteStatuses()) {
        {
          oprot.writeI32(struct.noteStatuses.size());
          for (java.util.Map.Entry<java.lang.String, NoteStatus> _iter802 : struct.noteStatuses.entrySet())
          {
            oprot.writeString(_iter802.getKey());
            _iter802.getValue().write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SearchSquaresResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list803 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.squares = new java.util.ArrayList<Square>(_list803.size);
          @org.apache.thrift.annotation.Nullable Square _elem804;
          for (int _i805 = 0; _i805 < _list803.size; ++_i805)
          {
            _elem804 = new Square();
            _elem804.read(iprot);
            struct.squares.add(_elem804);
          }
        }
        struct.setSquaresIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map806 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.squareStatuses = new java.util.HashMap<java.lang.String,SquareStatus>(2*_map806.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key807;
          @org.apache.thrift.annotation.Nullable SquareStatus _val808;
          for (int _i809 = 0; _i809 < _map806.size; ++_i809)
          {
            _key807 = iprot.readString();
            _val808 = new SquareStatus();
            _val808.read(iprot);
            struct.squareStatuses.put(_key807, _val808);
          }
        }
        struct.setSquareStatusesIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TMap _map810 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.myMemberships = new java.util.HashMap<java.lang.String,SquareMember>(2*_map810.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key811;
          @org.apache.thrift.annotation.Nullable SquareMember _val812;
          for (int _i813 = 0; _i813 < _map810.size; ++_i813)
          {
            _key811 = iprot.readString();
            _val812 = new SquareMember();
            _val812.read(iprot);
            struct.myMemberships.put(_key811, _val812);
          }
        }
        struct.setMyMembershipsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.continuationToken = iprot.readString();
        struct.setContinuationTokenIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TMap _map814 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.noteStatuses = new java.util.HashMap<java.lang.String,NoteStatus>(2*_map814.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key815;
          @org.apache.thrift.annotation.Nullable NoteStatus _val816;
          for (int _i817 = 0; _i817 < _map814.size; ++_i817)
          {
            _key815 = iprot.readString();
            _val816 = new NoteStatus();
            _val816.read(iprot);
            struct.noteStatuses.put(_key815, _val816);
          }
        }
        struct.setNoteStatusesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

