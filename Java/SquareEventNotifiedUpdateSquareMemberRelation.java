/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-17")
public class SquareEventNotifiedUpdateSquareMemberRelation implements org.apache.thrift.TBase<SquareEventNotifiedUpdateSquareMemberRelation, SquareEventNotifiedUpdateSquareMemberRelation._Fields>, java.io.Serializable, Cloneable, Comparable<SquareEventNotifiedUpdateSquareMemberRelation> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SquareEventNotifiedUpdateSquareMemberRelation");

  private static final org.apache.thrift.protocol.TField SQUARE_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("squareMid", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MY_MEMBER_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("myMemberMid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TARGET_SQUARE_MEMBER_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("targetSquareMemberMid", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField SQUARE_MEMBER_RELATION_FIELD_DESC = new org.apache.thrift.protocol.TField("squareMemberRelation", org.apache.thrift.protocol.TType.STRUCT, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SquareEventNotifiedUpdateSquareMemberRelationStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SquareEventNotifiedUpdateSquareMemberRelationTupleSchemeFactory();

  public java.lang.String squareMid; // required
  public java.lang.String myMemberMid; // required
  public java.lang.String targetSquareMemberMid; // required
  public SquareMemberRelation squareMemberRelation; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SQUARE_MID((short)1, "squareMid"),
    MY_MEMBER_MID((short)2, "myMemberMid"),
    TARGET_SQUARE_MEMBER_MID((short)3, "targetSquareMemberMid"),
    SQUARE_MEMBER_RELATION((short)4, "squareMemberRelation");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SQUARE_MID
          return SQUARE_MID;
        case 2: // MY_MEMBER_MID
          return MY_MEMBER_MID;
        case 3: // TARGET_SQUARE_MEMBER_MID
          return TARGET_SQUARE_MEMBER_MID;
        case 4: // SQUARE_MEMBER_RELATION
          return SQUARE_MEMBER_RELATION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SQUARE_MID, new org.apache.thrift.meta_data.FieldMetaData("squareMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MY_MEMBER_MID, new org.apache.thrift.meta_data.FieldMetaData("myMemberMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TARGET_SQUARE_MEMBER_MID, new org.apache.thrift.meta_data.FieldMetaData("targetSquareMemberMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SQUARE_MEMBER_RELATION, new org.apache.thrift.meta_data.FieldMetaData("squareMemberRelation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareMemberRelation.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SquareEventNotifiedUpdateSquareMemberRelation.class, metaDataMap);
  }

  public SquareEventNotifiedUpdateSquareMemberRelation() {
  }

  public SquareEventNotifiedUpdateSquareMemberRelation(
    java.lang.String squareMid,
    java.lang.String myMemberMid,
    java.lang.String targetSquareMemberMid,
    SquareMemberRelation squareMemberRelation)
  {
    this();
    this.squareMid = squareMid;
    this.myMemberMid = myMemberMid;
    this.targetSquareMemberMid = targetSquareMemberMid;
    this.squareMemberRelation = squareMemberRelation;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SquareEventNotifiedUpdateSquareMemberRelation(SquareEventNotifiedUpdateSquareMemberRelation other) {
    if (other.isSetSquareMid()) {
      this.squareMid = other.squareMid;
    }
    if (other.isSetMyMemberMid()) {
      this.myMemberMid = other.myMemberMid;
    }
    if (other.isSetTargetSquareMemberMid()) {
      this.targetSquareMemberMid = other.targetSquareMemberMid;
    }
    if (other.isSetSquareMemberRelation()) {
      this.squareMemberRelation = new SquareMemberRelation(other.squareMemberRelation);
    }
  }

  public SquareEventNotifiedUpdateSquareMemberRelation deepCopy() {
    return new SquareEventNotifiedUpdateSquareMemberRelation(this);
  }

  @Override
  public void clear() {
    this.squareMid = null;
    this.myMemberMid = null;
    this.targetSquareMemberMid = null;
    this.squareMemberRelation = null;
  }

  public java.lang.String getSquareMid() {
    return this.squareMid;
  }

  public SquareEventNotifiedUpdateSquareMemberRelation setSquareMid(java.lang.String squareMid) {
    this.squareMid = squareMid;
    return this;
  }

  public void unsetSquareMid() {
    this.squareMid = null;
  }

  /** Returns true if field squareMid is set (has been assigned a value) and false otherwise */
  public boolean isSetSquareMid() {
    return this.squareMid != null;
  }

  public void setSquareMidIsSet(boolean value) {
    if (!value) {
      this.squareMid = null;
    }
  }

  public java.lang.String getMyMemberMid() {
    return this.myMemberMid;
  }

  public SquareEventNotifiedUpdateSquareMemberRelation setMyMemberMid(java.lang.String myMemberMid) {
    this.myMemberMid = myMemberMid;
    return this;
  }

  public void unsetMyMemberMid() {
    this.myMemberMid = null;
  }

  /** Returns true if field myMemberMid is set (has been assigned a value) and false otherwise */
  public boolean isSetMyMemberMid() {
    return this.myMemberMid != null;
  }

  public void setMyMemberMidIsSet(boolean value) {
    if (!value) {
      this.myMemberMid = null;
    }
  }

  public java.lang.String getTargetSquareMemberMid() {
    return this.targetSquareMemberMid;
  }

  public SquareEventNotifiedUpdateSquareMemberRelation setTargetSquareMemberMid(java.lang.String targetSquareMemberMid) {
    this.targetSquareMemberMid = targetSquareMemberMid;
    return this;
  }

  public void unsetTargetSquareMemberMid() {
    this.targetSquareMemberMid = null;
  }

  /** Returns true if field targetSquareMemberMid is set (has been assigned a value) and false otherwise */
  public boolean isSetTargetSquareMemberMid() {
    return this.targetSquareMemberMid != null;
  }

  public void setTargetSquareMemberMidIsSet(boolean value) {
    if (!value) {
      this.targetSquareMemberMid = null;
    }
  }

  public SquareMemberRelation getSquareMemberRelation() {
    return this.squareMemberRelation;
  }

  public SquareEventNotifiedUpdateSquareMemberRelation setSquareMemberRelation(SquareMemberRelation squareMemberRelation) {
    this.squareMemberRelation = squareMemberRelation;
    return this;
  }

  public void unsetSquareMemberRelation() {
    this.squareMemberRelation = null;
  }

  /** Returns true if field squareMemberRelation is set (has been assigned a value) and false otherwise */
  public boolean isSetSquareMemberRelation() {
    return this.squareMemberRelation != null;
  }

  public void setSquareMemberRelationIsSet(boolean value) {
    if (!value) {
      this.squareMemberRelation = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case SQUARE_MID:
      if (value == null) {
        unsetSquareMid();
      } else {
        setSquareMid((java.lang.String)value);
      }
      break;

    case MY_MEMBER_MID:
      if (value == null) {
        unsetMyMemberMid();
      } else {
        setMyMemberMid((java.lang.String)value);
      }
      break;

    case TARGET_SQUARE_MEMBER_MID:
      if (value == null) {
        unsetTargetSquareMemberMid();
      } else {
        setTargetSquareMemberMid((java.lang.String)value);
      }
      break;

    case SQUARE_MEMBER_RELATION:
      if (value == null) {
        unsetSquareMemberRelation();
      } else {
        setSquareMemberRelation((SquareMemberRelation)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SQUARE_MID:
      return getSquareMid();

    case MY_MEMBER_MID:
      return getMyMemberMid();

    case TARGET_SQUARE_MEMBER_MID:
      return getTargetSquareMemberMid();

    case SQUARE_MEMBER_RELATION:
      return getSquareMemberRelation();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SQUARE_MID:
      return isSetSquareMid();
    case MY_MEMBER_MID:
      return isSetMyMemberMid();
    case TARGET_SQUARE_MEMBER_MID:
      return isSetTargetSquareMemberMid();
    case SQUARE_MEMBER_RELATION:
      return isSetSquareMemberRelation();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SquareEventNotifiedUpdateSquareMemberRelation)
      return this.equals((SquareEventNotifiedUpdateSquareMemberRelation)that);
    return false;
  }

  public boolean equals(SquareEventNotifiedUpdateSquareMemberRelation that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_squareMid = true && this.isSetSquareMid();
    boolean that_present_squareMid = true && that.isSetSquareMid();
    if (this_present_squareMid || that_present_squareMid) {
      if (!(this_present_squareMid && that_present_squareMid))
        return false;
      if (!this.squareMid.equals(that.squareMid))
        return false;
    }

    boolean this_present_myMemberMid = true && this.isSetMyMemberMid();
    boolean that_present_myMemberMid = true && that.isSetMyMemberMid();
    if (this_present_myMemberMid || that_present_myMemberMid) {
      if (!(this_present_myMemberMid && that_present_myMemberMid))
        return false;
      if (!this.myMemberMid.equals(that.myMemberMid))
        return false;
    }

    boolean this_present_targetSquareMemberMid = true && this.isSetTargetSquareMemberMid();
    boolean that_present_targetSquareMemberMid = true && that.isSetTargetSquareMemberMid();
    if (this_present_targetSquareMemberMid || that_present_targetSquareMemberMid) {
      if (!(this_present_targetSquareMemberMid && that_present_targetSquareMemberMid))
        return false;
      if (!this.targetSquareMemberMid.equals(that.targetSquareMemberMid))
        return false;
    }

    boolean this_present_squareMemberRelation = true && this.isSetSquareMemberRelation();
    boolean that_present_squareMemberRelation = true && that.isSetSquareMemberRelation();
    if (this_present_squareMemberRelation || that_present_squareMemberRelation) {
      if (!(this_present_squareMemberRelation && that_present_squareMemberRelation))
        return false;
      if (!this.squareMemberRelation.equals(that.squareMemberRelation))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSquareMid()) ? 131071 : 524287);
    if (isSetSquareMid())
      hashCode = hashCode * 8191 + squareMid.hashCode();

    hashCode = hashCode * 8191 + ((isSetMyMemberMid()) ? 131071 : 524287);
    if (isSetMyMemberMid())
      hashCode = hashCode * 8191 + myMemberMid.hashCode();

    hashCode = hashCode * 8191 + ((isSetTargetSquareMemberMid()) ? 131071 : 524287);
    if (isSetTargetSquareMemberMid())
      hashCode = hashCode * 8191 + targetSquareMemberMid.hashCode();

    hashCode = hashCode * 8191 + ((isSetSquareMemberRelation()) ? 131071 : 524287);
    if (isSetSquareMemberRelation())
      hashCode = hashCode * 8191 + squareMemberRelation.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SquareEventNotifiedUpdateSquareMemberRelation other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetSquareMid()).compareTo(other.isSetSquareMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSquareMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.squareMid, other.squareMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMyMemberMid()).compareTo(other.isSetMyMemberMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMyMemberMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.myMemberMid, other.myMemberMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTargetSquareMemberMid()).compareTo(other.isSetTargetSquareMemberMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTargetSquareMemberMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.targetSquareMemberMid, other.targetSquareMemberMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSquareMemberRelation()).compareTo(other.isSetSquareMemberRelation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSquareMemberRelation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.squareMemberRelation, other.squareMemberRelation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SquareEventNotifiedUpdateSquareMemberRelation(");
    boolean first = true;

    sb.append("squareMid:");
    if (this.squareMid == null) {
      sb.append("null");
    } else {
      sb.append(this.squareMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("myMemberMid:");
    if (this.myMemberMid == null) {
      sb.append("null");
    } else {
      sb.append(this.myMemberMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("targetSquareMemberMid:");
    if (this.targetSquareMemberMid == null) {
      sb.append("null");
    } else {
      sb.append(this.targetSquareMemberMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("squareMemberRelation:");
    if (this.squareMemberRelation == null) {
      sb.append("null");
    } else {
      sb.append(this.squareMemberRelation);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (squareMemberRelation != null) {
      squareMemberRelation.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SquareEventNotifiedUpdateSquareMemberRelationStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SquareEventNotifiedUpdateSquareMemberRelationStandardScheme getScheme() {
      return new SquareEventNotifiedUpdateSquareMemberRelationStandardScheme();
    }
  }

  private static class SquareEventNotifiedUpdateSquareMemberRelationStandardScheme extends org.apache.thrift.scheme.StandardScheme<SquareEventNotifiedUpdateSquareMemberRelation> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SquareEventNotifiedUpdateSquareMemberRelation struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SQUARE_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.squareMid = iprot.readString();
              struct.setSquareMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MY_MEMBER_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.myMemberMid = iprot.readString();
              struct.setMyMemberMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TARGET_SQUARE_MEMBER_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.targetSquareMemberMid = iprot.readString();
              struct.setTargetSquareMemberMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SQUARE_MEMBER_RELATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.squareMemberRelation = new SquareMemberRelation();
              struct.squareMemberRelation.read(iprot);
              struct.setSquareMemberRelationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SquareEventNotifiedUpdateSquareMemberRelation struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.squareMid != null) {
        oprot.writeFieldBegin(SQUARE_MID_FIELD_DESC);
        oprot.writeString(struct.squareMid);
        oprot.writeFieldEnd();
      }
      if (struct.myMemberMid != null) {
        oprot.writeFieldBegin(MY_MEMBER_MID_FIELD_DESC);
        oprot.writeString(struct.myMemberMid);
        oprot.writeFieldEnd();
      }
      if (struct.targetSquareMemberMid != null) {
        oprot.writeFieldBegin(TARGET_SQUARE_MEMBER_MID_FIELD_DESC);
        oprot.writeString(struct.targetSquareMemberMid);
        oprot.writeFieldEnd();
      }
      if (struct.squareMemberRelation != null) {
        oprot.writeFieldBegin(SQUARE_MEMBER_RELATION_FIELD_DESC);
        struct.squareMemberRelation.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SquareEventNotifiedUpdateSquareMemberRelationTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SquareEventNotifiedUpdateSquareMemberRelationTupleScheme getScheme() {
      return new SquareEventNotifiedUpdateSquareMemberRelationTupleScheme();
    }
  }

  private static class SquareEventNotifiedUpdateSquareMemberRelationTupleScheme extends org.apache.thrift.scheme.TupleScheme<SquareEventNotifiedUpdateSquareMemberRelation> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SquareEventNotifiedUpdateSquareMemberRelation struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSquareMid()) {
        optionals.set(0);
      }
      if (struct.isSetMyMemberMid()) {
        optionals.set(1);
      }
      if (struct.isSetTargetSquareMemberMid()) {
        optionals.set(2);
      }
      if (struct.isSetSquareMemberRelation()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetSquareMid()) {
        oprot.writeString(struct.squareMid);
      }
      if (struct.isSetMyMemberMid()) {
        oprot.writeString(struct.myMemberMid);
      }
      if (struct.isSetTargetSquareMemberMid()) {
        oprot.writeString(struct.targetSquareMemberMid);
      }
      if (struct.isSetSquareMemberRelation()) {
        struct.squareMemberRelation.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SquareEventNotifiedUpdateSquareMemberRelation struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.squareMid = iprot.readString();
        struct.setSquareMidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.myMemberMid = iprot.readString();
        struct.setMyMemberMidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.targetSquareMemberMid = iprot.readString();
        struct.setTargetSquareMemberMidIsSet(true);
      }
      if (incoming.get(3)) {
        struct.squareMemberRelation = new SquareMemberRelation();
        struct.squareMemberRelation.read(iprot);
        struct.setSquareMemberRelationIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

