/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-17")
public class TextMessageAnnouncementContents implements org.apache.thrift.TBase<TextMessageAnnouncementContents, TextMessageAnnouncementContents._Fields>, java.io.Serializable, Cloneable, Comparable<TextMessageAnnouncementContents> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TextMessageAnnouncementContents");

  private static final org.apache.thrift.protocol.TField MESSAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("messageId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("text", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SENDER_SQUARE_MEMBER_MID_FIELD_DESC = new org.apache.thrift.protocol.TField("senderSquareMemberMid", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CREATED_AT_FIELD_DESC = new org.apache.thrift.protocol.TField("createdAt", org.apache.thrift.protocol.TType.I64, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TextMessageAnnouncementContentsStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TextMessageAnnouncementContentsTupleSchemeFactory();

  public java.lang.String messageId; // required
  public java.lang.String text; // required
  public java.lang.String senderSquareMemberMid; // required
  public long createdAt; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MESSAGE_ID((short)1, "messageId"),
    TEXT((short)2, "text"),
    SENDER_SQUARE_MEMBER_MID((short)3, "senderSquareMemberMid"),
    CREATED_AT((short)4, "createdAt");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MESSAGE_ID
          return MESSAGE_ID;
        case 2: // TEXT
          return TEXT;
        case 3: // SENDER_SQUARE_MEMBER_MID
          return SENDER_SQUARE_MEMBER_MID;
        case 4: // CREATED_AT
          return CREATED_AT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATEDAT_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MESSAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("messageId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TEXT, new org.apache.thrift.meta_data.FieldMetaData("text", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SENDER_SQUARE_MEMBER_MID, new org.apache.thrift.meta_data.FieldMetaData("senderSquareMemberMid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATED_AT, new org.apache.thrift.meta_data.FieldMetaData("createdAt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TextMessageAnnouncementContents.class, metaDataMap);
  }

  public TextMessageAnnouncementContents() {
  }

  public TextMessageAnnouncementContents(
    java.lang.String messageId,
    java.lang.String text,
    java.lang.String senderSquareMemberMid,
    long createdAt)
  {
    this();
    this.messageId = messageId;
    this.text = text;
    this.senderSquareMemberMid = senderSquareMemberMid;
    this.createdAt = createdAt;
    setCreatedAtIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TextMessageAnnouncementContents(TextMessageAnnouncementContents other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetMessageId()) {
      this.messageId = other.messageId;
    }
    if (other.isSetText()) {
      this.text = other.text;
    }
    if (other.isSetSenderSquareMemberMid()) {
      this.senderSquareMemberMid = other.senderSquareMemberMid;
    }
    this.createdAt = other.createdAt;
  }

  public TextMessageAnnouncementContents deepCopy() {
    return new TextMessageAnnouncementContents(this);
  }

  @Override
  public void clear() {
    this.messageId = null;
    this.text = null;
    this.senderSquareMemberMid = null;
    setCreatedAtIsSet(false);
    this.createdAt = 0;
  }

  public java.lang.String getMessageId() {
    return this.messageId;
  }

  public TextMessageAnnouncementContents setMessageId(java.lang.String messageId) {
    this.messageId = messageId;
    return this;
  }

  public void unsetMessageId() {
    this.messageId = null;
  }

  /** Returns true if field messageId is set (has been assigned a value) and false otherwise */
  public boolean isSetMessageId() {
    return this.messageId != null;
  }

  public void setMessageIdIsSet(boolean value) {
    if (!value) {
      this.messageId = null;
    }
  }

  public java.lang.String getText() {
    return this.text;
  }

  public TextMessageAnnouncementContents setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  public void unsetText() {
    this.text = null;
  }

  /** Returns true if field text is set (has been assigned a value) and false otherwise */
  public boolean isSetText() {
    return this.text != null;
  }

  public void setTextIsSet(boolean value) {
    if (!value) {
      this.text = null;
    }
  }

  public java.lang.String getSenderSquareMemberMid() {
    return this.senderSquareMemberMid;
  }

  public TextMessageAnnouncementContents setSenderSquareMemberMid(java.lang.String senderSquareMemberMid) {
    this.senderSquareMemberMid = senderSquareMemberMid;
    return this;
  }

  public void unsetSenderSquareMemberMid() {
    this.senderSquareMemberMid = null;
  }

  /** Returns true if field senderSquareMemberMid is set (has been assigned a value) and false otherwise */
  public boolean isSetSenderSquareMemberMid() {
    return this.senderSquareMemberMid != null;
  }

  public void setSenderSquareMemberMidIsSet(boolean value) {
    if (!value) {
      this.senderSquareMemberMid = null;
    }
  }

  public long getCreatedAt() {
    return this.createdAt;
  }

  public TextMessageAnnouncementContents setCreatedAt(long createdAt) {
    this.createdAt = createdAt;
    setCreatedAtIsSet(true);
    return this;
  }

  public void unsetCreatedAt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATEDAT_ISSET_ID);
  }

  /** Returns true if field createdAt is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatedAt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATEDAT_ISSET_ID);
  }

  public void setCreatedAtIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATEDAT_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case MESSAGE_ID:
      if (value == null) {
        unsetMessageId();
      } else {
        setMessageId((java.lang.String)value);
      }
      break;

    case TEXT:
      if (value == null) {
        unsetText();
      } else {
        setText((java.lang.String)value);
      }
      break;

    case SENDER_SQUARE_MEMBER_MID:
      if (value == null) {
        unsetSenderSquareMemberMid();
      } else {
        setSenderSquareMemberMid((java.lang.String)value);
      }
      break;

    case CREATED_AT:
      if (value == null) {
        unsetCreatedAt();
      } else {
        setCreatedAt((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case MESSAGE_ID:
      return getMessageId();

    case TEXT:
      return getText();

    case SENDER_SQUARE_MEMBER_MID:
      return getSenderSquareMemberMid();

    case CREATED_AT:
      return getCreatedAt();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case MESSAGE_ID:
      return isSetMessageId();
    case TEXT:
      return isSetText();
    case SENDER_SQUARE_MEMBER_MID:
      return isSetSenderSquareMemberMid();
    case CREATED_AT:
      return isSetCreatedAt();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof TextMessageAnnouncementContents)
      return this.equals((TextMessageAnnouncementContents)that);
    return false;
  }

  public boolean equals(TextMessageAnnouncementContents that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_messageId = true && this.isSetMessageId();
    boolean that_present_messageId = true && that.isSetMessageId();
    if (this_present_messageId || that_present_messageId) {
      if (!(this_present_messageId && that_present_messageId))
        return false;
      if (!this.messageId.equals(that.messageId))
        return false;
    }

    boolean this_present_text = true && this.isSetText();
    boolean that_present_text = true && that.isSetText();
    if (this_present_text || that_present_text) {
      if (!(this_present_text && that_present_text))
        return false;
      if (!this.text.equals(that.text))
        return false;
    }

    boolean this_present_senderSquareMemberMid = true && this.isSetSenderSquareMemberMid();
    boolean that_present_senderSquareMemberMid = true && that.isSetSenderSquareMemberMid();
    if (this_present_senderSquareMemberMid || that_present_senderSquareMemberMid) {
      if (!(this_present_senderSquareMemberMid && that_present_senderSquareMemberMid))
        return false;
      if (!this.senderSquareMemberMid.equals(that.senderSquareMemberMid))
        return false;
    }

    boolean this_present_createdAt = true;
    boolean that_present_createdAt = true;
    if (this_present_createdAt || that_present_createdAt) {
      if (!(this_present_createdAt && that_present_createdAt))
        return false;
      if (this.createdAt != that.createdAt)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetMessageId()) ? 131071 : 524287);
    if (isSetMessageId())
      hashCode = hashCode * 8191 + messageId.hashCode();

    hashCode = hashCode * 8191 + ((isSetText()) ? 131071 : 524287);
    if (isSetText())
      hashCode = hashCode * 8191 + text.hashCode();

    hashCode = hashCode * 8191 + ((isSetSenderSquareMemberMid()) ? 131071 : 524287);
    if (isSetSenderSquareMemberMid())
      hashCode = hashCode * 8191 + senderSquareMemberMid.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createdAt);

    return hashCode;
  }

  @Override
  public int compareTo(TextMessageAnnouncementContents other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetMessageId()).compareTo(other.isSetMessageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.messageId, other.messageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetText()).compareTo(other.isSetText());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetText()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.text, other.text);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSenderSquareMemberMid()).compareTo(other.isSetSenderSquareMemberMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSenderSquareMemberMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.senderSquareMemberMid, other.senderSquareMemberMid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreatedAt()).compareTo(other.isSetCreatedAt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatedAt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createdAt, other.createdAt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TextMessageAnnouncementContents(");
    boolean first = true;

    sb.append("messageId:");
    if (this.messageId == null) {
      sb.append("null");
    } else {
      sb.append(this.messageId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("text:");
    if (this.text == null) {
      sb.append("null");
    } else {
      sb.append(this.text);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("senderSquareMemberMid:");
    if (this.senderSquareMemberMid == null) {
      sb.append("null");
    } else {
      sb.append(this.senderSquareMemberMid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createdAt:");
    sb.append(this.createdAt);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TextMessageAnnouncementContentsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TextMessageAnnouncementContentsStandardScheme getScheme() {
      return new TextMessageAnnouncementContentsStandardScheme();
    }
  }

  private static class TextMessageAnnouncementContentsStandardScheme extends org.apache.thrift.scheme.StandardScheme<TextMessageAnnouncementContents> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TextMessageAnnouncementContents struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MESSAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.messageId = iprot.readString();
              struct.setMessageIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TEXT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.text = iprot.readString();
              struct.setTextIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SENDER_SQUARE_MEMBER_MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.senderSquareMemberMid = iprot.readString();
              struct.setSenderSquareMemberMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATED_AT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createdAt = iprot.readI64();
              struct.setCreatedAtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TextMessageAnnouncementContents struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.messageId != null) {
        oprot.writeFieldBegin(MESSAGE_ID_FIELD_DESC);
        oprot.writeString(struct.messageId);
        oprot.writeFieldEnd();
      }
      if (struct.text != null) {
        oprot.writeFieldBegin(TEXT_FIELD_DESC);
        oprot.writeString(struct.text);
        oprot.writeFieldEnd();
      }
      if (struct.senderSquareMemberMid != null) {
        oprot.writeFieldBegin(SENDER_SQUARE_MEMBER_MID_FIELD_DESC);
        oprot.writeString(struct.senderSquareMemberMid);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATED_AT_FIELD_DESC);
      oprot.writeI64(struct.createdAt);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TextMessageAnnouncementContentsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TextMessageAnnouncementContentsTupleScheme getScheme() {
      return new TextMessageAnnouncementContentsTupleScheme();
    }
  }

  private static class TextMessageAnnouncementContentsTupleScheme extends org.apache.thrift.scheme.TupleScheme<TextMessageAnnouncementContents> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TextMessageAnnouncementContents struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetMessageId()) {
        optionals.set(0);
      }
      if (struct.isSetText()) {
        optionals.set(1);
      }
      if (struct.isSetSenderSquareMemberMid()) {
        optionals.set(2);
      }
      if (struct.isSetCreatedAt()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetMessageId()) {
        oprot.writeString(struct.messageId);
      }
      if (struct.isSetText()) {
        oprot.writeString(struct.text);
      }
      if (struct.isSetSenderSquareMemberMid()) {
        oprot.writeString(struct.senderSquareMemberMid);
      }
      if (struct.isSetCreatedAt()) {
        oprot.writeI64(struct.createdAt);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TextMessageAnnouncementContents struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.messageId = iprot.readString();
        struct.setMessageIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.text = iprot.readString();
        struct.setTextIsSet(true);
      }
      if (incoming.get(2)) {
        struct.senderSquareMemberMid = iprot.readString();
        struct.setSenderSquareMemberMidIsSet(true);
      }
      if (incoming.get(3)) {
        struct.createdAt = iprot.readI64();
        struct.setCreatedAtIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

