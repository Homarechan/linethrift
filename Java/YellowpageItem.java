/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-17")
public class YellowpageItem implements org.apache.thrift.TBase<YellowpageItem, YellowpageItem._Fields>, java.io.Serializable, Cloneable, Comparable<YellowpageItem> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("YellowpageItem");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField MID_FIELD_DESC = new org.apache.thrift.protocol.TField("mid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("address", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField LATITUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("latitude", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField LONGITUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("longitude", org.apache.thrift.protocol.TType.DOUBLE, (short)6);
  private static final org.apache.thrift.protocol.TField DISTANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("distance", org.apache.thrift.protocol.TType.DOUBLE, (short)7);
  private static final org.apache.thrift.protocol.TField CAN_FREE_CALL_FIELD_DESC = new org.apache.thrift.protocol.TField("canFreeCall", org.apache.thrift.protocol.TType.BOOL, (short)8);
  private static final org.apache.thrift.protocol.TField K_FIELD_DESC = new org.apache.thrift.protocol.TField("k", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField PHONE_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("phoneNumber", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField CAT_FIELD_DESC = new org.apache.thrift.protocol.TField("cat", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField CATEGORY_ICON_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryIcon", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField ADDITIONAL_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("additionalInfo", org.apache.thrift.protocol.TType.LIST, (short)13);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new YellowpageItemStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new YellowpageItemTupleSchemeFactory();

  public java.lang.String id; // required
  public java.lang.String mid; // required
  public java.lang.String name; // required
  public java.lang.String address; // required
  public double latitude; // required
  public double longitude; // required
  public double distance; // required
  public boolean canFreeCall; // required
  public int k; // required
  public java.lang.String phoneNumber; // required
  public int cat; // required
  public int categoryIcon; // required
  public java.util.List<AdditionalInfoItem> additionalInfo; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    MID((short)2, "mid"),
    NAME((short)3, "name"),
    ADDRESS((short)4, "address"),
    LATITUDE((short)5, "latitude"),
    LONGITUDE((short)6, "longitude"),
    DISTANCE((short)7, "distance"),
    CAN_FREE_CALL((short)8, "canFreeCall"),
    K((short)9, "k"),
    PHONE_NUMBER((short)10, "phoneNumber"),
    CAT((short)11, "cat"),
    CATEGORY_ICON((short)12, "categoryIcon"),
    ADDITIONAL_INFO((short)13, "additionalInfo");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // MID
          return MID;
        case 3: // NAME
          return NAME;
        case 4: // ADDRESS
          return ADDRESS;
        case 5: // LATITUDE
          return LATITUDE;
        case 6: // LONGITUDE
          return LONGITUDE;
        case 7: // DISTANCE
          return DISTANCE;
        case 8: // CAN_FREE_CALL
          return CAN_FREE_CALL;
        case 9: // K
          return K;
        case 10: // PHONE_NUMBER
          return PHONE_NUMBER;
        case 11: // CAT
          return CAT;
        case 12: // CATEGORY_ICON
          return CATEGORY_ICON;
        case 13: // ADDITIONAL_INFO
          return ADDITIONAL_INFO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __LATITUDE_ISSET_ID = 0;
  private static final int __LONGITUDE_ISSET_ID = 1;
  private static final int __DISTANCE_ISSET_ID = 2;
  private static final int __CANFREECALL_ISSET_ID = 3;
  private static final int __K_ISSET_ID = 4;
  private static final int __CAT_ISSET_ID = 5;
  private static final int __CATEGORYICON_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MID, new org.apache.thrift.meta_data.FieldMetaData("mid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("address", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LATITUDE, new org.apache.thrift.meta_data.FieldMetaData("latitude", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LONGITUDE, new org.apache.thrift.meta_data.FieldMetaData("longitude", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DISTANCE, new org.apache.thrift.meta_data.FieldMetaData("distance", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CAN_FREE_CALL, new org.apache.thrift.meta_data.FieldMetaData("canFreeCall", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.K, new org.apache.thrift.meta_data.FieldMetaData("k", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PHONE_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("phoneNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CAT, new org.apache.thrift.meta_data.FieldMetaData("cat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CATEGORY_ICON, new org.apache.thrift.meta_data.FieldMetaData("categoryIcon", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ADDITIONAL_INFO, new org.apache.thrift.meta_data.FieldMetaData("additionalInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AdditionalInfoItem.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(YellowpageItem.class, metaDataMap);
  }

  public YellowpageItem() {
  }

  public YellowpageItem(
    java.lang.String id,
    java.lang.String mid,
    java.lang.String name,
    java.lang.String address,
    double latitude,
    double longitude,
    double distance,
    boolean canFreeCall,
    int k,
    java.lang.String phoneNumber,
    int cat,
    int categoryIcon,
    java.util.List<AdditionalInfoItem> additionalInfo)
  {
    this();
    this.id = id;
    this.mid = mid;
    this.name = name;
    this.address = address;
    this.latitude = latitude;
    setLatitudeIsSet(true);
    this.longitude = longitude;
    setLongitudeIsSet(true);
    this.distance = distance;
    setDistanceIsSet(true);
    this.canFreeCall = canFreeCall;
    setCanFreeCallIsSet(true);
    this.k = k;
    setKIsSet(true);
    this.phoneNumber = phoneNumber;
    this.cat = cat;
    setCatIsSet(true);
    this.categoryIcon = categoryIcon;
    setCategoryIconIsSet(true);
    this.additionalInfo = additionalInfo;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public YellowpageItem(YellowpageItem other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetMid()) {
      this.mid = other.mid;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetAddress()) {
      this.address = other.address;
    }
    this.latitude = other.latitude;
    this.longitude = other.longitude;
    this.distance = other.distance;
    this.canFreeCall = other.canFreeCall;
    this.k = other.k;
    if (other.isSetPhoneNumber()) {
      this.phoneNumber = other.phoneNumber;
    }
    this.cat = other.cat;
    this.categoryIcon = other.categoryIcon;
    if (other.isSetAdditionalInfo()) {
      java.util.List<AdditionalInfoItem> __this__additionalInfo = new java.util.ArrayList<AdditionalInfoItem>(other.additionalInfo.size());
      for (AdditionalInfoItem other_element : other.additionalInfo) {
        __this__additionalInfo.add(new AdditionalInfoItem(other_element));
      }
      this.additionalInfo = __this__additionalInfo;
    }
  }

  public YellowpageItem deepCopy() {
    return new YellowpageItem(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.mid = null;
    this.name = null;
    this.address = null;
    setLatitudeIsSet(false);
    this.latitude = 0.0;
    setLongitudeIsSet(false);
    this.longitude = 0.0;
    setDistanceIsSet(false);
    this.distance = 0.0;
    setCanFreeCallIsSet(false);
    this.canFreeCall = false;
    setKIsSet(false);
    this.k = 0;
    this.phoneNumber = null;
    setCatIsSet(false);
    this.cat = 0;
    setCategoryIconIsSet(false);
    this.categoryIcon = 0;
    this.additionalInfo = null;
  }

  public java.lang.String getId() {
    return this.id;
  }

  public YellowpageItem setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public java.lang.String getMid() {
    return this.mid;
  }

  public YellowpageItem setMid(java.lang.String mid) {
    this.mid = mid;
    return this;
  }

  public void unsetMid() {
    this.mid = null;
  }

  /** Returns true if field mid is set (has been assigned a value) and false otherwise */
  public boolean isSetMid() {
    return this.mid != null;
  }

  public void setMidIsSet(boolean value) {
    if (!value) {
      this.mid = null;
    }
  }

  public java.lang.String getName() {
    return this.name;
  }

  public YellowpageItem setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public java.lang.String getAddress() {
    return this.address;
  }

  public YellowpageItem setAddress(java.lang.String address) {
    this.address = address;
    return this;
  }

  public void unsetAddress() {
    this.address = null;
  }

  /** Returns true if field address is set (has been assigned a value) and false otherwise */
  public boolean isSetAddress() {
    return this.address != null;
  }

  public void setAddressIsSet(boolean value) {
    if (!value) {
      this.address = null;
    }
  }

  public double getLatitude() {
    return this.latitude;
  }

  public YellowpageItem setLatitude(double latitude) {
    this.latitude = latitude;
    setLatitudeIsSet(true);
    return this;
  }

  public void unsetLatitude() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LATITUDE_ISSET_ID);
  }

  /** Returns true if field latitude is set (has been assigned a value) and false otherwise */
  public boolean isSetLatitude() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LATITUDE_ISSET_ID);
  }

  public void setLatitudeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LATITUDE_ISSET_ID, value);
  }

  public double getLongitude() {
    return this.longitude;
  }

  public YellowpageItem setLongitude(double longitude) {
    this.longitude = longitude;
    setLongitudeIsSet(true);
    return this;
  }

  public void unsetLongitude() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LONGITUDE_ISSET_ID);
  }

  /** Returns true if field longitude is set (has been assigned a value) and false otherwise */
  public boolean isSetLongitude() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LONGITUDE_ISSET_ID);
  }

  public void setLongitudeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LONGITUDE_ISSET_ID, value);
  }

  public double getDistance() {
    return this.distance;
  }

  public YellowpageItem setDistance(double distance) {
    this.distance = distance;
    setDistanceIsSet(true);
    return this;
  }

  public void unsetDistance() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DISTANCE_ISSET_ID);
  }

  /** Returns true if field distance is set (has been assigned a value) and false otherwise */
  public boolean isSetDistance() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DISTANCE_ISSET_ID);
  }

  public void setDistanceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DISTANCE_ISSET_ID, value);
  }

  public boolean isCanFreeCall() {
    return this.canFreeCall;
  }

  public YellowpageItem setCanFreeCall(boolean canFreeCall) {
    this.canFreeCall = canFreeCall;
    setCanFreeCallIsSet(true);
    return this;
  }

  public void unsetCanFreeCall() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CANFREECALL_ISSET_ID);
  }

  /** Returns true if field canFreeCall is set (has been assigned a value) and false otherwise */
  public boolean isSetCanFreeCall() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CANFREECALL_ISSET_ID);
  }

  public void setCanFreeCallIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CANFREECALL_ISSET_ID, value);
  }

  public int getK() {
    return this.k;
  }

  public YellowpageItem setK(int k) {
    this.k = k;
    setKIsSet(true);
    return this;
  }

  public void unsetK() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __K_ISSET_ID);
  }

  /** Returns true if field k is set (has been assigned a value) and false otherwise */
  public boolean isSetK() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __K_ISSET_ID);
  }

  public void setKIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __K_ISSET_ID, value);
  }

  public java.lang.String getPhoneNumber() {
    return this.phoneNumber;
  }

  public YellowpageItem setPhoneNumber(java.lang.String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  public void unsetPhoneNumber() {
    this.phoneNumber = null;
  }

  /** Returns true if field phoneNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetPhoneNumber() {
    return this.phoneNumber != null;
  }

  public void setPhoneNumberIsSet(boolean value) {
    if (!value) {
      this.phoneNumber = null;
    }
  }

  public int getCat() {
    return this.cat;
  }

  public YellowpageItem setCat(int cat) {
    this.cat = cat;
    setCatIsSet(true);
    return this;
  }

  public void unsetCat() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CAT_ISSET_ID);
  }

  /** Returns true if field cat is set (has been assigned a value) and false otherwise */
  public boolean isSetCat() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CAT_ISSET_ID);
  }

  public void setCatIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CAT_ISSET_ID, value);
  }

  public int getCategoryIcon() {
    return this.categoryIcon;
  }

  public YellowpageItem setCategoryIcon(int categoryIcon) {
    this.categoryIcon = categoryIcon;
    setCategoryIconIsSet(true);
    return this;
  }

  public void unsetCategoryIcon() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CATEGORYICON_ISSET_ID);
  }

  /** Returns true if field categoryIcon is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryIcon() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CATEGORYICON_ISSET_ID);
  }

  public void setCategoryIconIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CATEGORYICON_ISSET_ID, value);
  }

  public int getAdditionalInfoSize() {
    return (this.additionalInfo == null) ? 0 : this.additionalInfo.size();
  }

  public java.util.Iterator<AdditionalInfoItem> getAdditionalInfoIterator() {
    return (this.additionalInfo == null) ? null : this.additionalInfo.iterator();
  }

  public void addToAdditionalInfo(AdditionalInfoItem elem) {
    if (this.additionalInfo == null) {
      this.additionalInfo = new java.util.ArrayList<AdditionalInfoItem>();
    }
    this.additionalInfo.add(elem);
  }

  public java.util.List<AdditionalInfoItem> getAdditionalInfo() {
    return this.additionalInfo;
  }

  public YellowpageItem setAdditionalInfo(java.util.List<AdditionalInfoItem> additionalInfo) {
    this.additionalInfo = additionalInfo;
    return this;
  }

  public void unsetAdditionalInfo() {
    this.additionalInfo = null;
  }

  /** Returns true if field additionalInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetAdditionalInfo() {
    return this.additionalInfo != null;
  }

  public void setAdditionalInfoIsSet(boolean value) {
    if (!value) {
      this.additionalInfo = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.String)value);
      }
      break;

    case MID:
      if (value == null) {
        unsetMid();
      } else {
        setMid((java.lang.String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case ADDRESS:
      if (value == null) {
        unsetAddress();
      } else {
        setAddress((java.lang.String)value);
      }
      break;

    case LATITUDE:
      if (value == null) {
        unsetLatitude();
      } else {
        setLatitude((java.lang.Double)value);
      }
      break;

    case LONGITUDE:
      if (value == null) {
        unsetLongitude();
      } else {
        setLongitude((java.lang.Double)value);
      }
      break;

    case DISTANCE:
      if (value == null) {
        unsetDistance();
      } else {
        setDistance((java.lang.Double)value);
      }
      break;

    case CAN_FREE_CALL:
      if (value == null) {
        unsetCanFreeCall();
      } else {
        setCanFreeCall((java.lang.Boolean)value);
      }
      break;

    case K:
      if (value == null) {
        unsetK();
      } else {
        setK((java.lang.Integer)value);
      }
      break;

    case PHONE_NUMBER:
      if (value == null) {
        unsetPhoneNumber();
      } else {
        setPhoneNumber((java.lang.String)value);
      }
      break;

    case CAT:
      if (value == null) {
        unsetCat();
      } else {
        setCat((java.lang.Integer)value);
      }
      break;

    case CATEGORY_ICON:
      if (value == null) {
        unsetCategoryIcon();
      } else {
        setCategoryIcon((java.lang.Integer)value);
      }
      break;

    case ADDITIONAL_INFO:
      if (value == null) {
        unsetAdditionalInfo();
      } else {
        setAdditionalInfo((java.util.List<AdditionalInfoItem>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case MID:
      return getMid();

    case NAME:
      return getName();

    case ADDRESS:
      return getAddress();

    case LATITUDE:
      return getLatitude();

    case LONGITUDE:
      return getLongitude();

    case DISTANCE:
      return getDistance();

    case CAN_FREE_CALL:
      return isCanFreeCall();

    case K:
      return getK();

    case PHONE_NUMBER:
      return getPhoneNumber();

    case CAT:
      return getCat();

    case CATEGORY_ICON:
      return getCategoryIcon();

    case ADDITIONAL_INFO:
      return getAdditionalInfo();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case MID:
      return isSetMid();
    case NAME:
      return isSetName();
    case ADDRESS:
      return isSetAddress();
    case LATITUDE:
      return isSetLatitude();
    case LONGITUDE:
      return isSetLongitude();
    case DISTANCE:
      return isSetDistance();
    case CAN_FREE_CALL:
      return isSetCanFreeCall();
    case K:
      return isSetK();
    case PHONE_NUMBER:
      return isSetPhoneNumber();
    case CAT:
      return isSetCat();
    case CATEGORY_ICON:
      return isSetCategoryIcon();
    case ADDITIONAL_INFO:
      return isSetAdditionalInfo();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof YellowpageItem)
      return this.equals((YellowpageItem)that);
    return false;
  }

  public boolean equals(YellowpageItem that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_mid = true && this.isSetMid();
    boolean that_present_mid = true && that.isSetMid();
    if (this_present_mid || that_present_mid) {
      if (!(this_present_mid && that_present_mid))
        return false;
      if (!this.mid.equals(that.mid))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_address = true && this.isSetAddress();
    boolean that_present_address = true && that.isSetAddress();
    if (this_present_address || that_present_address) {
      if (!(this_present_address && that_present_address))
        return false;
      if (!this.address.equals(that.address))
        return false;
    }

    boolean this_present_latitude = true;
    boolean that_present_latitude = true;
    if (this_present_latitude || that_present_latitude) {
      if (!(this_present_latitude && that_present_latitude))
        return false;
      if (this.latitude != that.latitude)
        return false;
    }

    boolean this_present_longitude = true;
    boolean that_present_longitude = true;
    if (this_present_longitude || that_present_longitude) {
      if (!(this_present_longitude && that_present_longitude))
        return false;
      if (this.longitude != that.longitude)
        return false;
    }

    boolean this_present_distance = true;
    boolean that_present_distance = true;
    if (this_present_distance || that_present_distance) {
      if (!(this_present_distance && that_present_distance))
        return false;
      if (this.distance != that.distance)
        return false;
    }

    boolean this_present_canFreeCall = true;
    boolean that_present_canFreeCall = true;
    if (this_present_canFreeCall || that_present_canFreeCall) {
      if (!(this_present_canFreeCall && that_present_canFreeCall))
        return false;
      if (this.canFreeCall != that.canFreeCall)
        return false;
    }

    boolean this_present_k = true;
    boolean that_present_k = true;
    if (this_present_k || that_present_k) {
      if (!(this_present_k && that_present_k))
        return false;
      if (this.k != that.k)
        return false;
    }

    boolean this_present_phoneNumber = true && this.isSetPhoneNumber();
    boolean that_present_phoneNumber = true && that.isSetPhoneNumber();
    if (this_present_phoneNumber || that_present_phoneNumber) {
      if (!(this_present_phoneNumber && that_present_phoneNumber))
        return false;
      if (!this.phoneNumber.equals(that.phoneNumber))
        return false;
    }

    boolean this_present_cat = true;
    boolean that_present_cat = true;
    if (this_present_cat || that_present_cat) {
      if (!(this_present_cat && that_present_cat))
        return false;
      if (this.cat != that.cat)
        return false;
    }

    boolean this_present_categoryIcon = true;
    boolean that_present_categoryIcon = true;
    if (this_present_categoryIcon || that_present_categoryIcon) {
      if (!(this_present_categoryIcon && that_present_categoryIcon))
        return false;
      if (this.categoryIcon != that.categoryIcon)
        return false;
    }

    boolean this_present_additionalInfo = true && this.isSetAdditionalInfo();
    boolean that_present_additionalInfo = true && that.isSetAdditionalInfo();
    if (this_present_additionalInfo || that_present_additionalInfo) {
      if (!(this_present_additionalInfo && that_present_additionalInfo))
        return false;
      if (!this.additionalInfo.equals(that.additionalInfo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + id.hashCode();

    hashCode = hashCode * 8191 + ((isSetMid()) ? 131071 : 524287);
    if (isSetMid())
      hashCode = hashCode * 8191 + mid.hashCode();

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + ((isSetAddress()) ? 131071 : 524287);
    if (isSetAddress())
      hashCode = hashCode * 8191 + address.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(latitude);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(longitude);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(distance);

    hashCode = hashCode * 8191 + ((canFreeCall) ? 131071 : 524287);

    hashCode = hashCode * 8191 + k;

    hashCode = hashCode * 8191 + ((isSetPhoneNumber()) ? 131071 : 524287);
    if (isSetPhoneNumber())
      hashCode = hashCode * 8191 + phoneNumber.hashCode();

    hashCode = hashCode * 8191 + cat;

    hashCode = hashCode * 8191 + categoryIcon;

    hashCode = hashCode * 8191 + ((isSetAdditionalInfo()) ? 131071 : 524287);
    if (isSetAdditionalInfo())
      hashCode = hashCode * 8191 + additionalInfo.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(YellowpageItem other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMid()).compareTo(other.isSetMid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mid, other.mid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAddress()).compareTo(other.isSetAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.address, other.address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLatitude()).compareTo(other.isSetLatitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatitude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latitude, other.latitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLongitude()).compareTo(other.isSetLongitude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLongitude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.longitude, other.longitude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDistance()).compareTo(other.isSetDistance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.distance, other.distance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCanFreeCall()).compareTo(other.isSetCanFreeCall());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCanFreeCall()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.canFreeCall, other.canFreeCall);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetK()).compareTo(other.isSetK());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetK()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.k, other.k);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPhoneNumber()).compareTo(other.isSetPhoneNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhoneNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phoneNumber, other.phoneNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCat()).compareTo(other.isSetCat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cat, other.cat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCategoryIcon()).compareTo(other.isSetCategoryIcon());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryIcon()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryIcon, other.categoryIcon);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAdditionalInfo()).compareTo(other.isSetAdditionalInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdditionalInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.additionalInfo, other.additionalInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("YellowpageItem(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mid:");
    if (this.mid == null) {
      sb.append("null");
    } else {
      sb.append(this.mid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("address:");
    if (this.address == null) {
      sb.append("null");
    } else {
      sb.append(this.address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("latitude:");
    sb.append(this.latitude);
    first = false;
    if (!first) sb.append(", ");
    sb.append("longitude:");
    sb.append(this.longitude);
    first = false;
    if (!first) sb.append(", ");
    sb.append("distance:");
    sb.append(this.distance);
    first = false;
    if (!first) sb.append(", ");
    sb.append("canFreeCall:");
    sb.append(this.canFreeCall);
    first = false;
    if (!first) sb.append(", ");
    sb.append("k:");
    sb.append(this.k);
    first = false;
    if (!first) sb.append(", ");
    sb.append("phoneNumber:");
    if (this.phoneNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.phoneNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cat:");
    sb.append(this.cat);
    first = false;
    if (!first) sb.append(", ");
    sb.append("categoryIcon:");
    sb.append(this.categoryIcon);
    first = false;
    if (!first) sb.append(", ");
    sb.append("additionalInfo:");
    if (this.additionalInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.additionalInfo);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class YellowpageItemStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public YellowpageItemStandardScheme getScheme() {
      return new YellowpageItemStandardScheme();
    }
  }

  private static class YellowpageItemStandardScheme extends org.apache.thrift.scheme.StandardScheme<YellowpageItem> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, YellowpageItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // MID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mid = iprot.readString();
              struct.setMidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.address = iprot.readString();
              struct.setAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LATITUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.latitude = iprot.readDouble();
              struct.setLatitudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // LONGITUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.longitude = iprot.readDouble();
              struct.setLongitudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DISTANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.distance = iprot.readDouble();
              struct.setDistanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CAN_FREE_CALL
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.canFreeCall = iprot.readBool();
              struct.setCanFreeCallIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // K
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.k = iprot.readI32();
              struct.setKIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PHONE_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phoneNumber = iprot.readString();
              struct.setPhoneNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CAT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cat = iprot.readI32();
              struct.setCatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CATEGORY_ICON
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.categoryIcon = iprot.readI32();
              struct.setCategoryIconIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ADDITIONAL_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list92 = iprot.readListBegin();
                struct.additionalInfo = new java.util.ArrayList<AdditionalInfoItem>(_list92.size);
                AdditionalInfoItem _elem93;
                for (int _i94 = 0; _i94 < _list92.size; ++_i94)
                {
                  _elem93 = new AdditionalInfoItem();
                  _elem93.read(iprot);
                  struct.additionalInfo.add(_elem93);
                }
                iprot.readListEnd();
              }
              struct.setAdditionalInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, YellowpageItem struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.mid != null) {
        oprot.writeFieldBegin(MID_FIELD_DESC);
        oprot.writeString(struct.mid);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.address != null) {
        oprot.writeFieldBegin(ADDRESS_FIELD_DESC);
        oprot.writeString(struct.address);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LATITUDE_FIELD_DESC);
      oprot.writeDouble(struct.latitude);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LONGITUDE_FIELD_DESC);
      oprot.writeDouble(struct.longitude);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DISTANCE_FIELD_DESC);
      oprot.writeDouble(struct.distance);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CAN_FREE_CALL_FIELD_DESC);
      oprot.writeBool(struct.canFreeCall);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(K_FIELD_DESC);
      oprot.writeI32(struct.k);
      oprot.writeFieldEnd();
      if (struct.phoneNumber != null) {
        oprot.writeFieldBegin(PHONE_NUMBER_FIELD_DESC);
        oprot.writeString(struct.phoneNumber);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CAT_FIELD_DESC);
      oprot.writeI32(struct.cat);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CATEGORY_ICON_FIELD_DESC);
      oprot.writeI32(struct.categoryIcon);
      oprot.writeFieldEnd();
      if (struct.additionalInfo != null) {
        oprot.writeFieldBegin(ADDITIONAL_INFO_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.additionalInfo.size()));
          for (AdditionalInfoItem _iter95 : struct.additionalInfo)
          {
            _iter95.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class YellowpageItemTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public YellowpageItemTupleScheme getScheme() {
      return new YellowpageItemTupleScheme();
    }
  }

  private static class YellowpageItemTupleScheme extends org.apache.thrift.scheme.TupleScheme<YellowpageItem> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, YellowpageItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetMid()) {
        optionals.set(1);
      }
      if (struct.isSetName()) {
        optionals.set(2);
      }
      if (struct.isSetAddress()) {
        optionals.set(3);
      }
      if (struct.isSetLatitude()) {
        optionals.set(4);
      }
      if (struct.isSetLongitude()) {
        optionals.set(5);
      }
      if (struct.isSetDistance()) {
        optionals.set(6);
      }
      if (struct.isSetCanFreeCall()) {
        optionals.set(7);
      }
      if (struct.isSetK()) {
        optionals.set(8);
      }
      if (struct.isSetPhoneNumber()) {
        optionals.set(9);
      }
      if (struct.isSetCat()) {
        optionals.set(10);
      }
      if (struct.isSetCategoryIcon()) {
        optionals.set(11);
      }
      if (struct.isSetAdditionalInfo()) {
        optionals.set(12);
      }
      oprot.writeBitSet(optionals, 13);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetMid()) {
        oprot.writeString(struct.mid);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetAddress()) {
        oprot.writeString(struct.address);
      }
      if (struct.isSetLatitude()) {
        oprot.writeDouble(struct.latitude);
      }
      if (struct.isSetLongitude()) {
        oprot.writeDouble(struct.longitude);
      }
      if (struct.isSetDistance()) {
        oprot.writeDouble(struct.distance);
      }
      if (struct.isSetCanFreeCall()) {
        oprot.writeBool(struct.canFreeCall);
      }
      if (struct.isSetK()) {
        oprot.writeI32(struct.k);
      }
      if (struct.isSetPhoneNumber()) {
        oprot.writeString(struct.phoneNumber);
      }
      if (struct.isSetCat()) {
        oprot.writeI32(struct.cat);
      }
      if (struct.isSetCategoryIcon()) {
        oprot.writeI32(struct.categoryIcon);
      }
      if (struct.isSetAdditionalInfo()) {
        {
          oprot.writeI32(struct.additionalInfo.size());
          for (AdditionalInfoItem _iter96 : struct.additionalInfo)
          {
            _iter96.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, YellowpageItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(13);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.mid = iprot.readString();
        struct.setMidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.address = iprot.readString();
        struct.setAddressIsSet(true);
      }
      if (incoming.get(4)) {
        struct.latitude = iprot.readDouble();
        struct.setLatitudeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.longitude = iprot.readDouble();
        struct.setLongitudeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.distance = iprot.readDouble();
        struct.setDistanceIsSet(true);
      }
      if (incoming.get(7)) {
        struct.canFreeCall = iprot.readBool();
        struct.setCanFreeCallIsSet(true);
      }
      if (incoming.get(8)) {
        struct.k = iprot.readI32();
        struct.setKIsSet(true);
      }
      if (incoming.get(9)) {
        struct.phoneNumber = iprot.readString();
        struct.setPhoneNumberIsSet(true);
      }
      if (incoming.get(10)) {
        struct.cat = iprot.readI32();
        struct.setCatIsSet(true);
      }
      if (incoming.get(11)) {
        struct.categoryIcon = iprot.readI32();
        struct.setCategoryIconIsSet(true);
      }
      if (incoming.get(12)) {
        {
          org.apache.thrift.protocol.TList _list97 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.additionalInfo = new java.util.ArrayList<AdditionalInfoItem>(_list97.size);
          AdditionalInfoItem _elem98;
          for (int _i99 = 0; _i99 < _list97.size; ++_i99)
          {
            _elem98 = new AdditionalInfoItem();
            _elem98.read(iprot);
            struct.additionalInfo.add(_elem98);
          }
        }
        struct.setAdditionalInfoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

