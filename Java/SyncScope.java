/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-17")
public class SyncScope implements org.apache.thrift.TBase<SyncScope, SyncScope._Fields>, java.io.Serializable, Cloneable, Comparable<SyncScope> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SyncScope");

  private static final org.apache.thrift.protocol.TField SYNC_PROFILE_FIELD_DESC = new org.apache.thrift.protocol.TField("syncProfile", org.apache.thrift.protocol.TType.BOOL, (short)1);
  private static final org.apache.thrift.protocol.TField SYNC_SETTINGS_FIELD_DESC = new org.apache.thrift.protocol.TField("syncSettings", org.apache.thrift.protocol.TType.BOOL, (short)2);
  private static final org.apache.thrift.protocol.TField SYNC_STICKER_FIELD_DESC = new org.apache.thrift.protocol.TField("syncSticker", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField SYNC_THEME_SHOP_FIELD_DESC = new org.apache.thrift.protocol.TField("syncThemeShop", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField CONTACT_FIELD_DESC = new org.apache.thrift.protocol.TField("contact", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField GROUP_FIELD_DESC = new org.apache.thrift.protocol.TField("group", org.apache.thrift.protocol.TType.STRUCT, (short)11);
  private static final org.apache.thrift.protocol.TField ROOM_FIELD_DESC = new org.apache.thrift.protocol.TField("room", org.apache.thrift.protocol.TType.STRUCT, (short)12);
  private static final org.apache.thrift.protocol.TField CHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("chat", org.apache.thrift.protocol.TType.STRUCT, (short)13);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SyncScopeStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SyncScopeTupleSchemeFactory();

  public boolean syncProfile; // required
  public boolean syncSettings; // required
  public boolean syncSticker; // required
  public boolean syncThemeShop; // required
  public SyncRelations contact; // required
  public SyncRelations group; // required
  public SyncRelations room; // required
  public SyncRelations chat; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SYNC_PROFILE((short)1, "syncProfile"),
    SYNC_SETTINGS((short)2, "syncSettings"),
    SYNC_STICKER((short)3, "syncSticker"),
    SYNC_THEME_SHOP((short)4, "syncThemeShop"),
    CONTACT((short)10, "contact"),
    GROUP((short)11, "group"),
    ROOM((short)12, "room"),
    CHAT((short)13, "chat");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SYNC_PROFILE
          return SYNC_PROFILE;
        case 2: // SYNC_SETTINGS
          return SYNC_SETTINGS;
        case 3: // SYNC_STICKER
          return SYNC_STICKER;
        case 4: // SYNC_THEME_SHOP
          return SYNC_THEME_SHOP;
        case 10: // CONTACT
          return CONTACT;
        case 11: // GROUP
          return GROUP;
        case 12: // ROOM
          return ROOM;
        case 13: // CHAT
          return CHAT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SYNCPROFILE_ISSET_ID = 0;
  private static final int __SYNCSETTINGS_ISSET_ID = 1;
  private static final int __SYNCSTICKER_ISSET_ID = 2;
  private static final int __SYNCTHEMESHOP_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SYNC_PROFILE, new org.apache.thrift.meta_data.FieldMetaData("syncProfile", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.SYNC_SETTINGS, new org.apache.thrift.meta_data.FieldMetaData("syncSettings", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.SYNC_STICKER, new org.apache.thrift.meta_data.FieldMetaData("syncSticker", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.SYNC_THEME_SHOP, new org.apache.thrift.meta_data.FieldMetaData("syncThemeShop", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CONTACT, new org.apache.thrift.meta_data.FieldMetaData("contact", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SyncRelations.class)));
    tmpMap.put(_Fields.GROUP, new org.apache.thrift.meta_data.FieldMetaData("group", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SyncRelations.class)));
    tmpMap.put(_Fields.ROOM, new org.apache.thrift.meta_data.FieldMetaData("room", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SyncRelations.class)));
    tmpMap.put(_Fields.CHAT, new org.apache.thrift.meta_data.FieldMetaData("chat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SyncRelations.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SyncScope.class, metaDataMap);
  }

  public SyncScope() {
  }

  public SyncScope(
    boolean syncProfile,
    boolean syncSettings,
    boolean syncSticker,
    boolean syncThemeShop,
    SyncRelations contact,
    SyncRelations group,
    SyncRelations room,
    SyncRelations chat)
  {
    this();
    this.syncProfile = syncProfile;
    setSyncProfileIsSet(true);
    this.syncSettings = syncSettings;
    setSyncSettingsIsSet(true);
    this.syncSticker = syncSticker;
    setSyncStickerIsSet(true);
    this.syncThemeShop = syncThemeShop;
    setSyncThemeShopIsSet(true);
    this.contact = contact;
    this.group = group;
    this.room = room;
    this.chat = chat;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SyncScope(SyncScope other) {
    __isset_bitfield = other.__isset_bitfield;
    this.syncProfile = other.syncProfile;
    this.syncSettings = other.syncSettings;
    this.syncSticker = other.syncSticker;
    this.syncThemeShop = other.syncThemeShop;
    if (other.isSetContact()) {
      this.contact = new SyncRelations(other.contact);
    }
    if (other.isSetGroup()) {
      this.group = new SyncRelations(other.group);
    }
    if (other.isSetRoom()) {
      this.room = new SyncRelations(other.room);
    }
    if (other.isSetChat()) {
      this.chat = new SyncRelations(other.chat);
    }
  }

  public SyncScope deepCopy() {
    return new SyncScope(this);
  }

  @Override
  public void clear() {
    setSyncProfileIsSet(false);
    this.syncProfile = false;
    setSyncSettingsIsSet(false);
    this.syncSettings = false;
    setSyncStickerIsSet(false);
    this.syncSticker = false;
    setSyncThemeShopIsSet(false);
    this.syncThemeShop = false;
    this.contact = null;
    this.group = null;
    this.room = null;
    this.chat = null;
  }

  public boolean isSyncProfile() {
    return this.syncProfile;
  }

  public SyncScope setSyncProfile(boolean syncProfile) {
    this.syncProfile = syncProfile;
    setSyncProfileIsSet(true);
    return this;
  }

  public void unsetSyncProfile() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYNCPROFILE_ISSET_ID);
  }

  /** Returns true if field syncProfile is set (has been assigned a value) and false otherwise */
  public boolean isSetSyncProfile() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYNCPROFILE_ISSET_ID);
  }

  public void setSyncProfileIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYNCPROFILE_ISSET_ID, value);
  }

  public boolean isSyncSettings() {
    return this.syncSettings;
  }

  public SyncScope setSyncSettings(boolean syncSettings) {
    this.syncSettings = syncSettings;
    setSyncSettingsIsSet(true);
    return this;
  }

  public void unsetSyncSettings() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYNCSETTINGS_ISSET_ID);
  }

  /** Returns true if field syncSettings is set (has been assigned a value) and false otherwise */
  public boolean isSetSyncSettings() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYNCSETTINGS_ISSET_ID);
  }

  public void setSyncSettingsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYNCSETTINGS_ISSET_ID, value);
  }

  public boolean isSyncSticker() {
    return this.syncSticker;
  }

  public SyncScope setSyncSticker(boolean syncSticker) {
    this.syncSticker = syncSticker;
    setSyncStickerIsSet(true);
    return this;
  }

  public void unsetSyncSticker() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYNCSTICKER_ISSET_ID);
  }

  /** Returns true if field syncSticker is set (has been assigned a value) and false otherwise */
  public boolean isSetSyncSticker() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYNCSTICKER_ISSET_ID);
  }

  public void setSyncStickerIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYNCSTICKER_ISSET_ID, value);
  }

  public boolean isSyncThemeShop() {
    return this.syncThemeShop;
  }

  public SyncScope setSyncThemeShop(boolean syncThemeShop) {
    this.syncThemeShop = syncThemeShop;
    setSyncThemeShopIsSet(true);
    return this;
  }

  public void unsetSyncThemeShop() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SYNCTHEMESHOP_ISSET_ID);
  }

  /** Returns true if field syncThemeShop is set (has been assigned a value) and false otherwise */
  public boolean isSetSyncThemeShop() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SYNCTHEMESHOP_ISSET_ID);
  }

  public void setSyncThemeShopIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SYNCTHEMESHOP_ISSET_ID, value);
  }

  public SyncRelations getContact() {
    return this.contact;
  }

  public SyncScope setContact(SyncRelations contact) {
    this.contact = contact;
    return this;
  }

  public void unsetContact() {
    this.contact = null;
  }

  /** Returns true if field contact is set (has been assigned a value) and false otherwise */
  public boolean isSetContact() {
    return this.contact != null;
  }

  public void setContactIsSet(boolean value) {
    if (!value) {
      this.contact = null;
    }
  }

  public SyncRelations getGroup() {
    return this.group;
  }

  public SyncScope setGroup(SyncRelations group) {
    this.group = group;
    return this;
  }

  public void unsetGroup() {
    this.group = null;
  }

  /** Returns true if field group is set (has been assigned a value) and false otherwise */
  public boolean isSetGroup() {
    return this.group != null;
  }

  public void setGroupIsSet(boolean value) {
    if (!value) {
      this.group = null;
    }
  }

  public SyncRelations getRoom() {
    return this.room;
  }

  public SyncScope setRoom(SyncRelations room) {
    this.room = room;
    return this;
  }

  public void unsetRoom() {
    this.room = null;
  }

  /** Returns true if field room is set (has been assigned a value) and false otherwise */
  public boolean isSetRoom() {
    return this.room != null;
  }

  public void setRoomIsSet(boolean value) {
    if (!value) {
      this.room = null;
    }
  }

  public SyncRelations getChat() {
    return this.chat;
  }

  public SyncScope setChat(SyncRelations chat) {
    this.chat = chat;
    return this;
  }

  public void unsetChat() {
    this.chat = null;
  }

  /** Returns true if field chat is set (has been assigned a value) and false otherwise */
  public boolean isSetChat() {
    return this.chat != null;
  }

  public void setChatIsSet(boolean value) {
    if (!value) {
      this.chat = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case SYNC_PROFILE:
      if (value == null) {
        unsetSyncProfile();
      } else {
        setSyncProfile((java.lang.Boolean)value);
      }
      break;

    case SYNC_SETTINGS:
      if (value == null) {
        unsetSyncSettings();
      } else {
        setSyncSettings((java.lang.Boolean)value);
      }
      break;

    case SYNC_STICKER:
      if (value == null) {
        unsetSyncSticker();
      } else {
        setSyncSticker((java.lang.Boolean)value);
      }
      break;

    case SYNC_THEME_SHOP:
      if (value == null) {
        unsetSyncThemeShop();
      } else {
        setSyncThemeShop((java.lang.Boolean)value);
      }
      break;

    case CONTACT:
      if (value == null) {
        unsetContact();
      } else {
        setContact((SyncRelations)value);
      }
      break;

    case GROUP:
      if (value == null) {
        unsetGroup();
      } else {
        setGroup((SyncRelations)value);
      }
      break;

    case ROOM:
      if (value == null) {
        unsetRoom();
      } else {
        setRoom((SyncRelations)value);
      }
      break;

    case CHAT:
      if (value == null) {
        unsetChat();
      } else {
        setChat((SyncRelations)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SYNC_PROFILE:
      return isSyncProfile();

    case SYNC_SETTINGS:
      return isSyncSettings();

    case SYNC_STICKER:
      return isSyncSticker();

    case SYNC_THEME_SHOP:
      return isSyncThemeShop();

    case CONTACT:
      return getContact();

    case GROUP:
      return getGroup();

    case ROOM:
      return getRoom();

    case CHAT:
      return getChat();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SYNC_PROFILE:
      return isSetSyncProfile();
    case SYNC_SETTINGS:
      return isSetSyncSettings();
    case SYNC_STICKER:
      return isSetSyncSticker();
    case SYNC_THEME_SHOP:
      return isSetSyncThemeShop();
    case CONTACT:
      return isSetContact();
    case GROUP:
      return isSetGroup();
    case ROOM:
      return isSetRoom();
    case CHAT:
      return isSetChat();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SyncScope)
      return this.equals((SyncScope)that);
    return false;
  }

  public boolean equals(SyncScope that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_syncProfile = true;
    boolean that_present_syncProfile = true;
    if (this_present_syncProfile || that_present_syncProfile) {
      if (!(this_present_syncProfile && that_present_syncProfile))
        return false;
      if (this.syncProfile != that.syncProfile)
        return false;
    }

    boolean this_present_syncSettings = true;
    boolean that_present_syncSettings = true;
    if (this_present_syncSettings || that_present_syncSettings) {
      if (!(this_present_syncSettings && that_present_syncSettings))
        return false;
      if (this.syncSettings != that.syncSettings)
        return false;
    }

    boolean this_present_syncSticker = true;
    boolean that_present_syncSticker = true;
    if (this_present_syncSticker || that_present_syncSticker) {
      if (!(this_present_syncSticker && that_present_syncSticker))
        return false;
      if (this.syncSticker != that.syncSticker)
        return false;
    }

    boolean this_present_syncThemeShop = true;
    boolean that_present_syncThemeShop = true;
    if (this_present_syncThemeShop || that_present_syncThemeShop) {
      if (!(this_present_syncThemeShop && that_present_syncThemeShop))
        return false;
      if (this.syncThemeShop != that.syncThemeShop)
        return false;
    }

    boolean this_present_contact = true && this.isSetContact();
    boolean that_present_contact = true && that.isSetContact();
    if (this_present_contact || that_present_contact) {
      if (!(this_present_contact && that_present_contact))
        return false;
      if (!this.contact.equals(that.contact))
        return false;
    }

    boolean this_present_group = true && this.isSetGroup();
    boolean that_present_group = true && that.isSetGroup();
    if (this_present_group || that_present_group) {
      if (!(this_present_group && that_present_group))
        return false;
      if (!this.group.equals(that.group))
        return false;
    }

    boolean this_present_room = true && this.isSetRoom();
    boolean that_present_room = true && that.isSetRoom();
    if (this_present_room || that_present_room) {
      if (!(this_present_room && that_present_room))
        return false;
      if (!this.room.equals(that.room))
        return false;
    }

    boolean this_present_chat = true && this.isSetChat();
    boolean that_present_chat = true && that.isSetChat();
    if (this_present_chat || that_present_chat) {
      if (!(this_present_chat && that_present_chat))
        return false;
      if (!this.chat.equals(that.chat))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((syncProfile) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((syncSettings) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((syncSticker) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((syncThemeShop) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetContact()) ? 131071 : 524287);
    if (isSetContact())
      hashCode = hashCode * 8191 + contact.hashCode();

    hashCode = hashCode * 8191 + ((isSetGroup()) ? 131071 : 524287);
    if (isSetGroup())
      hashCode = hashCode * 8191 + group.hashCode();

    hashCode = hashCode * 8191 + ((isSetRoom()) ? 131071 : 524287);
    if (isSetRoom())
      hashCode = hashCode * 8191 + room.hashCode();

    hashCode = hashCode * 8191 + ((isSetChat()) ? 131071 : 524287);
    if (isSetChat())
      hashCode = hashCode * 8191 + chat.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SyncScope other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetSyncProfile()).compareTo(other.isSetSyncProfile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSyncProfile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.syncProfile, other.syncProfile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSyncSettings()).compareTo(other.isSetSyncSettings());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSyncSettings()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.syncSettings, other.syncSettings);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSyncSticker()).compareTo(other.isSetSyncSticker());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSyncSticker()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.syncSticker, other.syncSticker);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSyncThemeShop()).compareTo(other.isSetSyncThemeShop());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSyncThemeShop()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.syncThemeShop, other.syncThemeShop);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetContact()).compareTo(other.isSetContact());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContact()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contact, other.contact);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetGroup()).compareTo(other.isSetGroup());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroup()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.group, other.group);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRoom()).compareTo(other.isSetRoom());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoom()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.room, other.room);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetChat()).compareTo(other.isSetChat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chat, other.chat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SyncScope(");
    boolean first = true;

    sb.append("syncProfile:");
    sb.append(this.syncProfile);
    first = false;
    if (!first) sb.append(", ");
    sb.append("syncSettings:");
    sb.append(this.syncSettings);
    first = false;
    if (!first) sb.append(", ");
    sb.append("syncSticker:");
    sb.append(this.syncSticker);
    first = false;
    if (!first) sb.append(", ");
    sb.append("syncThemeShop:");
    sb.append(this.syncThemeShop);
    first = false;
    if (!first) sb.append(", ");
    sb.append("contact:");
    if (this.contact == null) {
      sb.append("null");
    } else {
      sb.append(this.contact);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("group:");
    if (this.group == null) {
      sb.append("null");
    } else {
      sb.append(this.group);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("room:");
    if (this.room == null) {
      sb.append("null");
    } else {
      sb.append(this.room);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("chat:");
    if (this.chat == null) {
      sb.append("null");
    } else {
      sb.append(this.chat);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (contact != null) {
      contact.validate();
    }
    if (group != null) {
      group.validate();
    }
    if (room != null) {
      room.validate();
    }
    if (chat != null) {
      chat.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SyncScopeStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SyncScopeStandardScheme getScheme() {
      return new SyncScopeStandardScheme();
    }
  }

  private static class SyncScopeStandardScheme extends org.apache.thrift.scheme.StandardScheme<SyncScope> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SyncScope struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SYNC_PROFILE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.syncProfile = iprot.readBool();
              struct.setSyncProfileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SYNC_SETTINGS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.syncSettings = iprot.readBool();
              struct.setSyncSettingsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SYNC_STICKER
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.syncSticker = iprot.readBool();
              struct.setSyncStickerIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SYNC_THEME_SHOP
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.syncThemeShop = iprot.readBool();
              struct.setSyncThemeShopIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CONTACT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.contact = new SyncRelations();
              struct.contact.read(iprot);
              struct.setContactIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // GROUP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.group = new SyncRelations();
              struct.group.read(iprot);
              struct.setGroupIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ROOM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.room = new SyncRelations();
              struct.room.read(iprot);
              struct.setRoomIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CHAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.chat = new SyncRelations();
              struct.chat.read(iprot);
              struct.setChatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SyncScope struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(SYNC_PROFILE_FIELD_DESC);
      oprot.writeBool(struct.syncProfile);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SYNC_SETTINGS_FIELD_DESC);
      oprot.writeBool(struct.syncSettings);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SYNC_STICKER_FIELD_DESC);
      oprot.writeBool(struct.syncSticker);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SYNC_THEME_SHOP_FIELD_DESC);
      oprot.writeBool(struct.syncThemeShop);
      oprot.writeFieldEnd();
      if (struct.contact != null) {
        oprot.writeFieldBegin(CONTACT_FIELD_DESC);
        struct.contact.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.group != null) {
        oprot.writeFieldBegin(GROUP_FIELD_DESC);
        struct.group.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.room != null) {
        oprot.writeFieldBegin(ROOM_FIELD_DESC);
        struct.room.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.chat != null) {
        oprot.writeFieldBegin(CHAT_FIELD_DESC);
        struct.chat.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SyncScopeTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SyncScopeTupleScheme getScheme() {
      return new SyncScopeTupleScheme();
    }
  }

  private static class SyncScopeTupleScheme extends org.apache.thrift.scheme.TupleScheme<SyncScope> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SyncScope struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSyncProfile()) {
        optionals.set(0);
      }
      if (struct.isSetSyncSettings()) {
        optionals.set(1);
      }
      if (struct.isSetSyncSticker()) {
        optionals.set(2);
      }
      if (struct.isSetSyncThemeShop()) {
        optionals.set(3);
      }
      if (struct.isSetContact()) {
        optionals.set(4);
      }
      if (struct.isSetGroup()) {
        optionals.set(5);
      }
      if (struct.isSetRoom()) {
        optionals.set(6);
      }
      if (struct.isSetChat()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetSyncProfile()) {
        oprot.writeBool(struct.syncProfile);
      }
      if (struct.isSetSyncSettings()) {
        oprot.writeBool(struct.syncSettings);
      }
      if (struct.isSetSyncSticker()) {
        oprot.writeBool(struct.syncSticker);
      }
      if (struct.isSetSyncThemeShop()) {
        oprot.writeBool(struct.syncThemeShop);
      }
      if (struct.isSetContact()) {
        struct.contact.write(oprot);
      }
      if (struct.isSetGroup()) {
        struct.group.write(oprot);
      }
      if (struct.isSetRoom()) {
        struct.room.write(oprot);
      }
      if (struct.isSetChat()) {
        struct.chat.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SyncScope struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.syncProfile = iprot.readBool();
        struct.setSyncProfileIsSet(true);
      }
      if (incoming.get(1)) {
        struct.syncSettings = iprot.readBool();
        struct.setSyncSettingsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.syncSticker = iprot.readBool();
        struct.setSyncStickerIsSet(true);
      }
      if (incoming.get(3)) {
        struct.syncThemeShop = iprot.readBool();
        struct.setSyncThemeShopIsSet(true);
      }
      if (incoming.get(4)) {
        struct.contact = new SyncRelations();
        struct.contact.read(iprot);
        struct.setContactIsSet(true);
      }
      if (incoming.get(5)) {
        struct.group = new SyncRelations();
        struct.group.read(iprot);
        struct.setGroupIsSet(true);
      }
      if (incoming.get(6)) {
        struct.room = new SyncRelations();
        struct.room.read(iprot);
        struct.setRoomIsSet(true);
      }
      if (incoming.get(7)) {
        struct.chat = new SyncRelations();
        struct.chat.read(iprot);
        struct.setChatIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

