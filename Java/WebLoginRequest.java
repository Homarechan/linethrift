/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-17")
public class WebLoginRequest implements org.apache.thrift.TBase<WebLoginRequest, WebLoginRequest._Fields>, java.io.Serializable, Cloneable, Comparable<WebLoginRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WebLoginRequest");

  private static final org.apache.thrift.protocol.TField HOOKED_FULL_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("hookedFullUrl", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SESSION_STRING_FIELD_DESC = new org.apache.thrift.protocol.TField("sessionString", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField FROM_IAB_FIELD_DESC = new org.apache.thrift.protocol.TField("fromIAB", org.apache.thrift.protocol.TType.BOOL, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WebLoginRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WebLoginRequestTupleSchemeFactory();

  public java.lang.String hookedFullUrl; // required
  public java.lang.String sessionString; // required
  public boolean fromIAB; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    HOOKED_FULL_URL((short)1, "hookedFullUrl"),
    SESSION_STRING((short)2, "sessionString"),
    FROM_IAB((short)3, "fromIAB");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // HOOKED_FULL_URL
          return HOOKED_FULL_URL;
        case 2: // SESSION_STRING
          return SESSION_STRING;
        case 3: // FROM_IAB
          return FROM_IAB;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __FROMIAB_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.HOOKED_FULL_URL, new org.apache.thrift.meta_data.FieldMetaData("hookedFullUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SESSION_STRING, new org.apache.thrift.meta_data.FieldMetaData("sessionString", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FROM_IAB, new org.apache.thrift.meta_data.FieldMetaData("fromIAB", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WebLoginRequest.class, metaDataMap);
  }

  public WebLoginRequest() {
  }

  public WebLoginRequest(
    java.lang.String hookedFullUrl,
    java.lang.String sessionString,
    boolean fromIAB)
  {
    this();
    this.hookedFullUrl = hookedFullUrl;
    this.sessionString = sessionString;
    this.fromIAB = fromIAB;
    setFromIABIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WebLoginRequest(WebLoginRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetHookedFullUrl()) {
      this.hookedFullUrl = other.hookedFullUrl;
    }
    if (other.isSetSessionString()) {
      this.sessionString = other.sessionString;
    }
    this.fromIAB = other.fromIAB;
  }

  public WebLoginRequest deepCopy() {
    return new WebLoginRequest(this);
  }

  @Override
  public void clear() {
    this.hookedFullUrl = null;
    this.sessionString = null;
    setFromIABIsSet(false);
    this.fromIAB = false;
  }

  public java.lang.String getHookedFullUrl() {
    return this.hookedFullUrl;
  }

  public WebLoginRequest setHookedFullUrl(java.lang.String hookedFullUrl) {
    this.hookedFullUrl = hookedFullUrl;
    return this;
  }

  public void unsetHookedFullUrl() {
    this.hookedFullUrl = null;
  }

  /** Returns true if field hookedFullUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetHookedFullUrl() {
    return this.hookedFullUrl != null;
  }

  public void setHookedFullUrlIsSet(boolean value) {
    if (!value) {
      this.hookedFullUrl = null;
    }
  }

  public java.lang.String getSessionString() {
    return this.sessionString;
  }

  public WebLoginRequest setSessionString(java.lang.String sessionString) {
    this.sessionString = sessionString;
    return this;
  }

  public void unsetSessionString() {
    this.sessionString = null;
  }

  /** Returns true if field sessionString is set (has been assigned a value) and false otherwise */
  public boolean isSetSessionString() {
    return this.sessionString != null;
  }

  public void setSessionStringIsSet(boolean value) {
    if (!value) {
      this.sessionString = null;
    }
  }

  public boolean isFromIAB() {
    return this.fromIAB;
  }

  public WebLoginRequest setFromIAB(boolean fromIAB) {
    this.fromIAB = fromIAB;
    setFromIABIsSet(true);
    return this;
  }

  public void unsetFromIAB() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FROMIAB_ISSET_ID);
  }

  /** Returns true if field fromIAB is set (has been assigned a value) and false otherwise */
  public boolean isSetFromIAB() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FROMIAB_ISSET_ID);
  }

  public void setFromIABIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FROMIAB_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case HOOKED_FULL_URL:
      if (value == null) {
        unsetHookedFullUrl();
      } else {
        setHookedFullUrl((java.lang.String)value);
      }
      break;

    case SESSION_STRING:
      if (value == null) {
        unsetSessionString();
      } else {
        setSessionString((java.lang.String)value);
      }
      break;

    case FROM_IAB:
      if (value == null) {
        unsetFromIAB();
      } else {
        setFromIAB((java.lang.Boolean)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case HOOKED_FULL_URL:
      return getHookedFullUrl();

    case SESSION_STRING:
      return getSessionString();

    case FROM_IAB:
      return isFromIAB();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case HOOKED_FULL_URL:
      return isSetHookedFullUrl();
    case SESSION_STRING:
      return isSetSessionString();
    case FROM_IAB:
      return isSetFromIAB();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof WebLoginRequest)
      return this.equals((WebLoginRequest)that);
    return false;
  }

  public boolean equals(WebLoginRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_hookedFullUrl = true && this.isSetHookedFullUrl();
    boolean that_present_hookedFullUrl = true && that.isSetHookedFullUrl();
    if (this_present_hookedFullUrl || that_present_hookedFullUrl) {
      if (!(this_present_hookedFullUrl && that_present_hookedFullUrl))
        return false;
      if (!this.hookedFullUrl.equals(that.hookedFullUrl))
        return false;
    }

    boolean this_present_sessionString = true && this.isSetSessionString();
    boolean that_present_sessionString = true && that.isSetSessionString();
    if (this_present_sessionString || that_present_sessionString) {
      if (!(this_present_sessionString && that_present_sessionString))
        return false;
      if (!this.sessionString.equals(that.sessionString))
        return false;
    }

    boolean this_present_fromIAB = true;
    boolean that_present_fromIAB = true;
    if (this_present_fromIAB || that_present_fromIAB) {
      if (!(this_present_fromIAB && that_present_fromIAB))
        return false;
      if (this.fromIAB != that.fromIAB)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetHookedFullUrl()) ? 131071 : 524287);
    if (isSetHookedFullUrl())
      hashCode = hashCode * 8191 + hookedFullUrl.hashCode();

    hashCode = hashCode * 8191 + ((isSetSessionString()) ? 131071 : 524287);
    if (isSetSessionString())
      hashCode = hashCode * 8191 + sessionString.hashCode();

    hashCode = hashCode * 8191 + ((fromIAB) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(WebLoginRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetHookedFullUrl()).compareTo(other.isSetHookedFullUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHookedFullUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hookedFullUrl, other.hookedFullUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSessionString()).compareTo(other.isSetSessionString());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSessionString()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sessionString, other.sessionString);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFromIAB()).compareTo(other.isSetFromIAB());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFromIAB()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fromIAB, other.fromIAB);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("WebLoginRequest(");
    boolean first = true;

    sb.append("hookedFullUrl:");
    if (this.hookedFullUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.hookedFullUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sessionString:");
    if (this.sessionString == null) {
      sb.append("null");
    } else {
      sb.append(this.sessionString);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fromIAB:");
    sb.append(this.fromIAB);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WebLoginRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WebLoginRequestStandardScheme getScheme() {
      return new WebLoginRequestStandardScheme();
    }
  }

  private static class WebLoginRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<WebLoginRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, WebLoginRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // HOOKED_FULL_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.hookedFullUrl = iprot.readString();
              struct.setHookedFullUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SESSION_STRING
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sessionString = iprot.readString();
              struct.setSessionStringIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FROM_IAB
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.fromIAB = iprot.readBool();
              struct.setFromIABIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, WebLoginRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.hookedFullUrl != null) {
        oprot.writeFieldBegin(HOOKED_FULL_URL_FIELD_DESC);
        oprot.writeString(struct.hookedFullUrl);
        oprot.writeFieldEnd();
      }
      if (struct.sessionString != null) {
        oprot.writeFieldBegin(SESSION_STRING_FIELD_DESC);
        oprot.writeString(struct.sessionString);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FROM_IAB_FIELD_DESC);
      oprot.writeBool(struct.fromIAB);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WebLoginRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WebLoginRequestTupleScheme getScheme() {
      return new WebLoginRequestTupleScheme();
    }
  }

  private static class WebLoginRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<WebLoginRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, WebLoginRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetHookedFullUrl()) {
        optionals.set(0);
      }
      if (struct.isSetSessionString()) {
        optionals.set(1);
      }
      if (struct.isSetFromIAB()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetHookedFullUrl()) {
        oprot.writeString(struct.hookedFullUrl);
      }
      if (struct.isSetSessionString()) {
        oprot.writeString(struct.sessionString);
      }
      if (struct.isSetFromIAB()) {
        oprot.writeBool(struct.fromIAB);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, WebLoginRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.hookedFullUrl = iprot.readString();
        struct.setHookedFullUrlIsSet(true);
      }
      if (incoming.get(1)) {
        struct.sessionString = iprot.readString();
        struct.setSessionStringIsSet(true);
      }
      if (incoming.get(2)) {
        struct.fromIAB = iprot.readBool();
        struct.setFromIABIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

