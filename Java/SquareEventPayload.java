/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-11-17")
public class SquareEventPayload implements org.apache.thrift.TBase<SquareEventPayload, SquareEventPayload._Fields>, java.io.Serializable, Cloneable, Comparable<SquareEventPayload> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SquareEventPayload");

  private static final org.apache.thrift.protocol.TField RECEIVE_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("receiveMessage", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField SEND_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("sendMessage", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField NOTIFIED_JOIN_SQUARE_CHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedJoinSquareChat", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField NOTIFIED_INVITE_INTO_SQUARE_CHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedInviteIntoSquareChat", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField NOTIFIED_LEAVE_SQUARE_CHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedLeaveSquareChat", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField NOTIFIED_DESTROY_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedDestroyMessage", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField NOTIFIED_MARK_AS_READ_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedMarkAsRead", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareMemberProfile", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField NOTIFIED_KICKOUT_FROM_SQUARE_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedKickoutFromSquare", org.apache.thrift.protocol.TType.STRUCT, (short)20);
  private static final org.apache.thrift.protocol.TField NOTIFIED_SHUTDOWN_SQUARE_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedShutdownSquare", org.apache.thrift.protocol.TType.STRUCT, (short)19);
  private static final org.apache.thrift.protocol.TField NOTIFIED_DELETE_SQUARE_CHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedDeleteSquareChat", org.apache.thrift.protocol.TType.STRUCT, (short)21);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareChatProfileName", org.apache.thrift.protocol.TType.STRUCT, (short)31);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareChatProfileImage", org.apache.thrift.protocol.TType.STRUCT, (short)32);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareStatus", org.apache.thrift.protocol.TType.STRUCT, (short)14);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_CHAT_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareChatStatus", org.apache.thrift.protocol.TType.STRUCT, (short)15);
  private static final org.apache.thrift.protocol.TField NOTIFIED_CREATE_SQUARE_MEMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedCreateSquareMember", org.apache.thrift.protocol.TType.STRUCT, (short)16);
  private static final org.apache.thrift.protocol.TField NOTIFIED_CREATE_SQUARE_CHAT_MEMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedCreateSquareChatMember", org.apache.thrift.protocol.TType.STRUCT, (short)17);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareMemberRelation", org.apache.thrift.protocol.TType.STRUCT, (short)18);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquare", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_MEMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareMember", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_CHAT_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareChat", org.apache.thrift.protocol.TType.STRUCT, (short)11);
  private static final org.apache.thrift.protocol.TField NOTIFICATION_JOIN_REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("notificationJoinRequest", org.apache.thrift.protocol.TType.STRUCT, (short)22);
  private static final org.apache.thrift.protocol.TField NOTIFICATION_JOINED_FIELD_DESC = new org.apache.thrift.protocol.TField("notificationJoined", org.apache.thrift.protocol.TType.STRUCT, (short)23);
  private static final org.apache.thrift.protocol.TField NOTIFICATION_PROMOTE_COADMIN_FIELD_DESC = new org.apache.thrift.protocol.TField("notificationPromoteCoadmin", org.apache.thrift.protocol.TType.STRUCT, (short)24);
  private static final org.apache.thrift.protocol.TField NOTIFICATION_PROMOTE_ADMIN_FIELD_DESC = new org.apache.thrift.protocol.TField("notificationPromoteAdmin", org.apache.thrift.protocol.TType.STRUCT, (short)25);
  private static final org.apache.thrift.protocol.TField NOTIFICATION_DEMOTE_MEMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("notificationDemoteMember", org.apache.thrift.protocol.TType.STRUCT, (short)26);
  private static final org.apache.thrift.protocol.TField NOTIFICATION_KICKED_OUT_FIELD_DESC = new org.apache.thrift.protocol.TField("notificationKickedOut", org.apache.thrift.protocol.TType.STRUCT, (short)27);
  private static final org.apache.thrift.protocol.TField NOTIFICATION_SQUARE_DELETE_FIELD_DESC = new org.apache.thrift.protocol.TField("notificationSquareDelete", org.apache.thrift.protocol.TType.STRUCT, (short)28);
  private static final org.apache.thrift.protocol.TField NOTIFICATION_SQUARE_CHAT_DELETE_FIELD_DESC = new org.apache.thrift.protocol.TField("notificationSquareChatDelete", org.apache.thrift.protocol.TType.STRUCT, (short)29);
  private static final org.apache.thrift.protocol.TField NOTIFICATION_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("notificationMessage", org.apache.thrift.protocol.TType.STRUCT, (short)30);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareChatMember", org.apache.thrift.protocol.TType.STRUCT, (short)12);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_AUTHORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareAuthority", org.apache.thrift.protocol.TType.STRUCT, (short)13);
  private static final org.apache.thrift.protocol.TField NOTIFIED_UPDATE_SQUARE_FEATURE_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("notifiedUpdateSquareFeatureSet", org.apache.thrift.protocol.TType.STRUCT, (short)33);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SquareEventPayloadStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SquareEventPayloadTupleSchemeFactory();

  public SquareEventReceiveMessage receiveMessage; // required
  public SquareEventSendMessage sendMessage; // required
  public SquareEventNotifiedJoinSquareChat notifiedJoinSquareChat; // required
  public SquareEventNotifiedInviteIntoSquareChat notifiedInviteIntoSquareChat; // required
  public SquareEventNotifiedLeaveSquareChat notifiedLeaveSquareChat; // required
  public SquareEventNotifiedDestroyMessage notifiedDestroyMessage; // required
  public SquareEventNotifiedMarkAsRead notifiedMarkAsRead; // required
  public SquareEventNotifiedUpdateSquareMemberProfile notifiedUpdateSquareMemberProfile; // required
  public SquareEventNotifiedKickoutFromSquare notifiedKickoutFromSquare; // required
  public SquareEventNotifiedShutdownSquare notifiedShutdownSquare; // required
  public SquareEventNotifiedDeleteSquareChat notifiedDeleteSquareChat; // required
  public SquareEventNotifiedUpdateSquareChatProfileName notifiedUpdateSquareChatProfileName; // required
  public SquareEventNotifiedUpdateSquareChatProfileImage notifiedUpdateSquareChatProfileImage; // required
  public SquareEventNotifiedUpdateSquareStatus notifiedUpdateSquareStatus; // required
  public SquareEventNotifiedUpdateSquareChatStatus notifiedUpdateSquareChatStatus; // required
  public SquareEventNotifiedCreateSquareMember notifiedCreateSquareMember; // required
  public SquareEventNotifiedCreateSquareChatMember notifiedCreateSquareChatMember; // required
  public SquareEventNotifiedUpdateSquareMemberRelation notifiedUpdateSquareMemberRelation; // required
  public SquareEventNotifiedUpdateSquare notifiedUpdateSquare; // required
  public SquareEventNotifiedUpdateSquareMember notifiedUpdateSquareMember; // required
  public SquareEventNotifiedUpdateSquareChat notifiedUpdateSquareChat; // required
  public SquareEventNotificationJoinRequest notificationJoinRequest; // required
  public SquareEventNotificationMemberUpdate notificationJoined; // required
  public SquareEventNotificationMemberUpdate notificationPromoteCoadmin; // required
  public SquareEventNotificationMemberUpdate notificationPromoteAdmin; // required
  public SquareEventNotificationMemberUpdate notificationDemoteMember; // required
  public SquareEventNotificationMemberUpdate notificationKickedOut; // required
  public SquareEventNotificationSquareDelete notificationSquareDelete; // required
  public SquareEventNotificationSquareChatDelete notificationSquareChatDelete; // required
  public SquareEventNotificationMessage notificationMessage; // required
  public SquareEventNotifiedUpdateSquareChatMember notifiedUpdateSquareChatMember; // required
  public SquareEventNotifiedUpdateSquareAuthority notifiedUpdateSquareAuthority; // required
  public SquareEventNotifiedUpdateSquareFeatureSet notifiedUpdateSquareFeatureSet; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RECEIVE_MESSAGE((short)1, "receiveMessage"),
    SEND_MESSAGE((short)2, "sendMessage"),
    NOTIFIED_JOIN_SQUARE_CHAT((short)3, "notifiedJoinSquareChat"),
    NOTIFIED_INVITE_INTO_SQUARE_CHAT((short)4, "notifiedInviteIntoSquareChat"),
    NOTIFIED_LEAVE_SQUARE_CHAT((short)5, "notifiedLeaveSquareChat"),
    NOTIFIED_DESTROY_MESSAGE((short)6, "notifiedDestroyMessage"),
    NOTIFIED_MARK_AS_READ((short)7, "notifiedMarkAsRead"),
    NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE((short)8, "notifiedUpdateSquareMemberProfile"),
    NOTIFIED_KICKOUT_FROM_SQUARE((short)20, "notifiedKickoutFromSquare"),
    NOTIFIED_SHUTDOWN_SQUARE((short)19, "notifiedShutdownSquare"),
    NOTIFIED_DELETE_SQUARE_CHAT((short)21, "notifiedDeleteSquareChat"),
    NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME((short)31, "notifiedUpdateSquareChatProfileName"),
    NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE((short)32, "notifiedUpdateSquareChatProfileImage"),
    NOTIFIED_UPDATE_SQUARE_STATUS((short)14, "notifiedUpdateSquareStatus"),
    NOTIFIED_UPDATE_SQUARE_CHAT_STATUS((short)15, "notifiedUpdateSquareChatStatus"),
    NOTIFIED_CREATE_SQUARE_MEMBER((short)16, "notifiedCreateSquareMember"),
    NOTIFIED_CREATE_SQUARE_CHAT_MEMBER((short)17, "notifiedCreateSquareChatMember"),
    NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION((short)18, "notifiedUpdateSquareMemberRelation"),
    NOTIFIED_UPDATE_SQUARE((short)9, "notifiedUpdateSquare"),
    NOTIFIED_UPDATE_SQUARE_MEMBER((short)10, "notifiedUpdateSquareMember"),
    NOTIFIED_UPDATE_SQUARE_CHAT((short)11, "notifiedUpdateSquareChat"),
    NOTIFICATION_JOIN_REQUEST((short)22, "notificationJoinRequest"),
    NOTIFICATION_JOINED((short)23, "notificationJoined"),
    NOTIFICATION_PROMOTE_COADMIN((short)24, "notificationPromoteCoadmin"),
    NOTIFICATION_PROMOTE_ADMIN((short)25, "notificationPromoteAdmin"),
    NOTIFICATION_DEMOTE_MEMBER((short)26, "notificationDemoteMember"),
    NOTIFICATION_KICKED_OUT((short)27, "notificationKickedOut"),
    NOTIFICATION_SQUARE_DELETE((short)28, "notificationSquareDelete"),
    NOTIFICATION_SQUARE_CHAT_DELETE((short)29, "notificationSquareChatDelete"),
    NOTIFICATION_MESSAGE((short)30, "notificationMessage"),
    NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER((short)12, "notifiedUpdateSquareChatMember"),
    NOTIFIED_UPDATE_SQUARE_AUTHORITY((short)13, "notifiedUpdateSquareAuthority"),
    NOTIFIED_UPDATE_SQUARE_FEATURE_SET((short)33, "notifiedUpdateSquareFeatureSet");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RECEIVE_MESSAGE
          return RECEIVE_MESSAGE;
        case 2: // SEND_MESSAGE
          return SEND_MESSAGE;
        case 3: // NOTIFIED_JOIN_SQUARE_CHAT
          return NOTIFIED_JOIN_SQUARE_CHAT;
        case 4: // NOTIFIED_INVITE_INTO_SQUARE_CHAT
          return NOTIFIED_INVITE_INTO_SQUARE_CHAT;
        case 5: // NOTIFIED_LEAVE_SQUARE_CHAT
          return NOTIFIED_LEAVE_SQUARE_CHAT;
        case 6: // NOTIFIED_DESTROY_MESSAGE
          return NOTIFIED_DESTROY_MESSAGE;
        case 7: // NOTIFIED_MARK_AS_READ
          return NOTIFIED_MARK_AS_READ;
        case 8: // NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE
          return NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE;
        case 20: // NOTIFIED_KICKOUT_FROM_SQUARE
          return NOTIFIED_KICKOUT_FROM_SQUARE;
        case 19: // NOTIFIED_SHUTDOWN_SQUARE
          return NOTIFIED_SHUTDOWN_SQUARE;
        case 21: // NOTIFIED_DELETE_SQUARE_CHAT
          return NOTIFIED_DELETE_SQUARE_CHAT;
        case 31: // NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME
          return NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME;
        case 32: // NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE
          return NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE;
        case 14: // NOTIFIED_UPDATE_SQUARE_STATUS
          return NOTIFIED_UPDATE_SQUARE_STATUS;
        case 15: // NOTIFIED_UPDATE_SQUARE_CHAT_STATUS
          return NOTIFIED_UPDATE_SQUARE_CHAT_STATUS;
        case 16: // NOTIFIED_CREATE_SQUARE_MEMBER
          return NOTIFIED_CREATE_SQUARE_MEMBER;
        case 17: // NOTIFIED_CREATE_SQUARE_CHAT_MEMBER
          return NOTIFIED_CREATE_SQUARE_CHAT_MEMBER;
        case 18: // NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION
          return NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION;
        case 9: // NOTIFIED_UPDATE_SQUARE
          return NOTIFIED_UPDATE_SQUARE;
        case 10: // NOTIFIED_UPDATE_SQUARE_MEMBER
          return NOTIFIED_UPDATE_SQUARE_MEMBER;
        case 11: // NOTIFIED_UPDATE_SQUARE_CHAT
          return NOTIFIED_UPDATE_SQUARE_CHAT;
        case 22: // NOTIFICATION_JOIN_REQUEST
          return NOTIFICATION_JOIN_REQUEST;
        case 23: // NOTIFICATION_JOINED
          return NOTIFICATION_JOINED;
        case 24: // NOTIFICATION_PROMOTE_COADMIN
          return NOTIFICATION_PROMOTE_COADMIN;
        case 25: // NOTIFICATION_PROMOTE_ADMIN
          return NOTIFICATION_PROMOTE_ADMIN;
        case 26: // NOTIFICATION_DEMOTE_MEMBER
          return NOTIFICATION_DEMOTE_MEMBER;
        case 27: // NOTIFICATION_KICKED_OUT
          return NOTIFICATION_KICKED_OUT;
        case 28: // NOTIFICATION_SQUARE_DELETE
          return NOTIFICATION_SQUARE_DELETE;
        case 29: // NOTIFICATION_SQUARE_CHAT_DELETE
          return NOTIFICATION_SQUARE_CHAT_DELETE;
        case 30: // NOTIFICATION_MESSAGE
          return NOTIFICATION_MESSAGE;
        case 12: // NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER
          return NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER;
        case 13: // NOTIFIED_UPDATE_SQUARE_AUTHORITY
          return NOTIFIED_UPDATE_SQUARE_AUTHORITY;
        case 33: // NOTIFIED_UPDATE_SQUARE_FEATURE_SET
          return NOTIFIED_UPDATE_SQUARE_FEATURE_SET;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RECEIVE_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("receiveMessage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventReceiveMessage.class)));
    tmpMap.put(_Fields.SEND_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("sendMessage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventSendMessage.class)));
    tmpMap.put(_Fields.NOTIFIED_JOIN_SQUARE_CHAT, new org.apache.thrift.meta_data.FieldMetaData("notifiedJoinSquareChat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedJoinSquareChat.class)));
    tmpMap.put(_Fields.NOTIFIED_INVITE_INTO_SQUARE_CHAT, new org.apache.thrift.meta_data.FieldMetaData("notifiedInviteIntoSquareChat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedInviteIntoSquareChat.class)));
    tmpMap.put(_Fields.NOTIFIED_LEAVE_SQUARE_CHAT, new org.apache.thrift.meta_data.FieldMetaData("notifiedLeaveSquareChat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedLeaveSquareChat.class)));
    tmpMap.put(_Fields.NOTIFIED_DESTROY_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("notifiedDestroyMessage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedDestroyMessage.class)));
    tmpMap.put(_Fields.NOTIFIED_MARK_AS_READ, new org.apache.thrift.meta_data.FieldMetaData("notifiedMarkAsRead", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedMarkAsRead.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareMemberProfile", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareMemberProfile.class)));
    tmpMap.put(_Fields.NOTIFIED_KICKOUT_FROM_SQUARE, new org.apache.thrift.meta_data.FieldMetaData("notifiedKickoutFromSquare", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedKickoutFromSquare.class)));
    tmpMap.put(_Fields.NOTIFIED_SHUTDOWN_SQUARE, new org.apache.thrift.meta_data.FieldMetaData("notifiedShutdownSquare", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedShutdownSquare.class)));
    tmpMap.put(_Fields.NOTIFIED_DELETE_SQUARE_CHAT, new org.apache.thrift.meta_data.FieldMetaData("notifiedDeleteSquareChat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedDeleteSquareChat.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareChatProfileName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareChatProfileName.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareChatProfileImage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareChatProfileImage.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareStatus.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_CHAT_STATUS, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareChatStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareChatStatus.class)));
    tmpMap.put(_Fields.NOTIFIED_CREATE_SQUARE_MEMBER, new org.apache.thrift.meta_data.FieldMetaData("notifiedCreateSquareMember", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedCreateSquareMember.class)));
    tmpMap.put(_Fields.NOTIFIED_CREATE_SQUARE_CHAT_MEMBER, new org.apache.thrift.meta_data.FieldMetaData("notifiedCreateSquareChatMember", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedCreateSquareChatMember.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareMemberRelation", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareMemberRelation.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquare", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquare.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_MEMBER, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareMember", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareMember.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_CHAT, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareChat", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareChat.class)));
    tmpMap.put(_Fields.NOTIFICATION_JOIN_REQUEST, new org.apache.thrift.meta_data.FieldMetaData("notificationJoinRequest", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotificationJoinRequest.class)));
    tmpMap.put(_Fields.NOTIFICATION_JOINED, new org.apache.thrift.meta_data.FieldMetaData("notificationJoined", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotificationMemberUpdate.class)));
    tmpMap.put(_Fields.NOTIFICATION_PROMOTE_COADMIN, new org.apache.thrift.meta_data.FieldMetaData("notificationPromoteCoadmin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotificationMemberUpdate.class)));
    tmpMap.put(_Fields.NOTIFICATION_PROMOTE_ADMIN, new org.apache.thrift.meta_data.FieldMetaData("notificationPromoteAdmin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotificationMemberUpdate.class)));
    tmpMap.put(_Fields.NOTIFICATION_DEMOTE_MEMBER, new org.apache.thrift.meta_data.FieldMetaData("notificationDemoteMember", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotificationMemberUpdate.class)));
    tmpMap.put(_Fields.NOTIFICATION_KICKED_OUT, new org.apache.thrift.meta_data.FieldMetaData("notificationKickedOut", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotificationMemberUpdate.class)));
    tmpMap.put(_Fields.NOTIFICATION_SQUARE_DELETE, new org.apache.thrift.meta_data.FieldMetaData("notificationSquareDelete", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotificationSquareDelete.class)));
    tmpMap.put(_Fields.NOTIFICATION_SQUARE_CHAT_DELETE, new org.apache.thrift.meta_data.FieldMetaData("notificationSquareChatDelete", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotificationSquareChatDelete.class)));
    tmpMap.put(_Fields.NOTIFICATION_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("notificationMessage", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotificationMessage.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareChatMember", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareChatMember.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_AUTHORITY, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareAuthority", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareAuthority.class)));
    tmpMap.put(_Fields.NOTIFIED_UPDATE_SQUARE_FEATURE_SET, new org.apache.thrift.meta_data.FieldMetaData("notifiedUpdateSquareFeatureSet", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SquareEventNotifiedUpdateSquareFeatureSet.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SquareEventPayload.class, metaDataMap);
  }

  public SquareEventPayload() {
  }

  public SquareEventPayload(
    SquareEventReceiveMessage receiveMessage,
    SquareEventSendMessage sendMessage,
    SquareEventNotifiedJoinSquareChat notifiedJoinSquareChat,
    SquareEventNotifiedInviteIntoSquareChat notifiedInviteIntoSquareChat,
    SquareEventNotifiedLeaveSquareChat notifiedLeaveSquareChat,
    SquareEventNotifiedDestroyMessage notifiedDestroyMessage,
    SquareEventNotifiedMarkAsRead notifiedMarkAsRead,
    SquareEventNotifiedUpdateSquareMemberProfile notifiedUpdateSquareMemberProfile,
    SquareEventNotifiedKickoutFromSquare notifiedKickoutFromSquare,
    SquareEventNotifiedShutdownSquare notifiedShutdownSquare,
    SquareEventNotifiedDeleteSquareChat notifiedDeleteSquareChat,
    SquareEventNotifiedUpdateSquareChatProfileName notifiedUpdateSquareChatProfileName,
    SquareEventNotifiedUpdateSquareChatProfileImage notifiedUpdateSquareChatProfileImage,
    SquareEventNotifiedUpdateSquareStatus notifiedUpdateSquareStatus,
    SquareEventNotifiedUpdateSquareChatStatus notifiedUpdateSquareChatStatus,
    SquareEventNotifiedCreateSquareMember notifiedCreateSquareMember,
    SquareEventNotifiedCreateSquareChatMember notifiedCreateSquareChatMember,
    SquareEventNotifiedUpdateSquareMemberRelation notifiedUpdateSquareMemberRelation,
    SquareEventNotifiedUpdateSquare notifiedUpdateSquare,
    SquareEventNotifiedUpdateSquareMember notifiedUpdateSquareMember,
    SquareEventNotifiedUpdateSquareChat notifiedUpdateSquareChat,
    SquareEventNotificationJoinRequest notificationJoinRequest,
    SquareEventNotificationMemberUpdate notificationJoined,
    SquareEventNotificationMemberUpdate notificationPromoteCoadmin,
    SquareEventNotificationMemberUpdate notificationPromoteAdmin,
    SquareEventNotificationMemberUpdate notificationDemoteMember,
    SquareEventNotificationMemberUpdate notificationKickedOut,
    SquareEventNotificationSquareDelete notificationSquareDelete,
    SquareEventNotificationSquareChatDelete notificationSquareChatDelete,
    SquareEventNotificationMessage notificationMessage,
    SquareEventNotifiedUpdateSquareChatMember notifiedUpdateSquareChatMember,
    SquareEventNotifiedUpdateSquareAuthority notifiedUpdateSquareAuthority,
    SquareEventNotifiedUpdateSquareFeatureSet notifiedUpdateSquareFeatureSet)
  {
    this();
    this.receiveMessage = receiveMessage;
    this.sendMessage = sendMessage;
    this.notifiedJoinSquareChat = notifiedJoinSquareChat;
    this.notifiedInviteIntoSquareChat = notifiedInviteIntoSquareChat;
    this.notifiedLeaveSquareChat = notifiedLeaveSquareChat;
    this.notifiedDestroyMessage = notifiedDestroyMessage;
    this.notifiedMarkAsRead = notifiedMarkAsRead;
    this.notifiedUpdateSquareMemberProfile = notifiedUpdateSquareMemberProfile;
    this.notifiedKickoutFromSquare = notifiedKickoutFromSquare;
    this.notifiedShutdownSquare = notifiedShutdownSquare;
    this.notifiedDeleteSquareChat = notifiedDeleteSquareChat;
    this.notifiedUpdateSquareChatProfileName = notifiedUpdateSquareChatProfileName;
    this.notifiedUpdateSquareChatProfileImage = notifiedUpdateSquareChatProfileImage;
    this.notifiedUpdateSquareStatus = notifiedUpdateSquareStatus;
    this.notifiedUpdateSquareChatStatus = notifiedUpdateSquareChatStatus;
    this.notifiedCreateSquareMember = notifiedCreateSquareMember;
    this.notifiedCreateSquareChatMember = notifiedCreateSquareChatMember;
    this.notifiedUpdateSquareMemberRelation = notifiedUpdateSquareMemberRelation;
    this.notifiedUpdateSquare = notifiedUpdateSquare;
    this.notifiedUpdateSquareMember = notifiedUpdateSquareMember;
    this.notifiedUpdateSquareChat = notifiedUpdateSquareChat;
    this.notificationJoinRequest = notificationJoinRequest;
    this.notificationJoined = notificationJoined;
    this.notificationPromoteCoadmin = notificationPromoteCoadmin;
    this.notificationPromoteAdmin = notificationPromoteAdmin;
    this.notificationDemoteMember = notificationDemoteMember;
    this.notificationKickedOut = notificationKickedOut;
    this.notificationSquareDelete = notificationSquareDelete;
    this.notificationSquareChatDelete = notificationSquareChatDelete;
    this.notificationMessage = notificationMessage;
    this.notifiedUpdateSquareChatMember = notifiedUpdateSquareChatMember;
    this.notifiedUpdateSquareAuthority = notifiedUpdateSquareAuthority;
    this.notifiedUpdateSquareFeatureSet = notifiedUpdateSquareFeatureSet;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SquareEventPayload(SquareEventPayload other) {
    if (other.isSetReceiveMessage()) {
      this.receiveMessage = new SquareEventReceiveMessage(other.receiveMessage);
    }
    if (other.isSetSendMessage()) {
      this.sendMessage = new SquareEventSendMessage(other.sendMessage);
    }
    if (other.isSetNotifiedJoinSquareChat()) {
      this.notifiedJoinSquareChat = new SquareEventNotifiedJoinSquareChat(other.notifiedJoinSquareChat);
    }
    if (other.isSetNotifiedInviteIntoSquareChat()) {
      this.notifiedInviteIntoSquareChat = new SquareEventNotifiedInviteIntoSquareChat(other.notifiedInviteIntoSquareChat);
    }
    if (other.isSetNotifiedLeaveSquareChat()) {
      this.notifiedLeaveSquareChat = new SquareEventNotifiedLeaveSquareChat(other.notifiedLeaveSquareChat);
    }
    if (other.isSetNotifiedDestroyMessage()) {
      this.notifiedDestroyMessage = new SquareEventNotifiedDestroyMessage(other.notifiedDestroyMessage);
    }
    if (other.isSetNotifiedMarkAsRead()) {
      this.notifiedMarkAsRead = new SquareEventNotifiedMarkAsRead(other.notifiedMarkAsRead);
    }
    if (other.isSetNotifiedUpdateSquareMemberProfile()) {
      this.notifiedUpdateSquareMemberProfile = new SquareEventNotifiedUpdateSquareMemberProfile(other.notifiedUpdateSquareMemberProfile);
    }
    if (other.isSetNotifiedKickoutFromSquare()) {
      this.notifiedKickoutFromSquare = new SquareEventNotifiedKickoutFromSquare(other.notifiedKickoutFromSquare);
    }
    if (other.isSetNotifiedShutdownSquare()) {
      this.notifiedShutdownSquare = new SquareEventNotifiedShutdownSquare(other.notifiedShutdownSquare);
    }
    if (other.isSetNotifiedDeleteSquareChat()) {
      this.notifiedDeleteSquareChat = new SquareEventNotifiedDeleteSquareChat(other.notifiedDeleteSquareChat);
    }
    if (other.isSetNotifiedUpdateSquareChatProfileName()) {
      this.notifiedUpdateSquareChatProfileName = new SquareEventNotifiedUpdateSquareChatProfileName(other.notifiedUpdateSquareChatProfileName);
    }
    if (other.isSetNotifiedUpdateSquareChatProfileImage()) {
      this.notifiedUpdateSquareChatProfileImage = new SquareEventNotifiedUpdateSquareChatProfileImage(other.notifiedUpdateSquareChatProfileImage);
    }
    if (other.isSetNotifiedUpdateSquareStatus()) {
      this.notifiedUpdateSquareStatus = new SquareEventNotifiedUpdateSquareStatus(other.notifiedUpdateSquareStatus);
    }
    if (other.isSetNotifiedUpdateSquareChatStatus()) {
      this.notifiedUpdateSquareChatStatus = new SquareEventNotifiedUpdateSquareChatStatus(other.notifiedUpdateSquareChatStatus);
    }
    if (other.isSetNotifiedCreateSquareMember()) {
      this.notifiedCreateSquareMember = new SquareEventNotifiedCreateSquareMember(other.notifiedCreateSquareMember);
    }
    if (other.isSetNotifiedCreateSquareChatMember()) {
      this.notifiedCreateSquareChatMember = new SquareEventNotifiedCreateSquareChatMember(other.notifiedCreateSquareChatMember);
    }
    if (other.isSetNotifiedUpdateSquareMemberRelation()) {
      this.notifiedUpdateSquareMemberRelation = new SquareEventNotifiedUpdateSquareMemberRelation(other.notifiedUpdateSquareMemberRelation);
    }
    if (other.isSetNotifiedUpdateSquare()) {
      this.notifiedUpdateSquare = new SquareEventNotifiedUpdateSquare(other.notifiedUpdateSquare);
    }
    if (other.isSetNotifiedUpdateSquareMember()) {
      this.notifiedUpdateSquareMember = new SquareEventNotifiedUpdateSquareMember(other.notifiedUpdateSquareMember);
    }
    if (other.isSetNotifiedUpdateSquareChat()) {
      this.notifiedUpdateSquareChat = new SquareEventNotifiedUpdateSquareChat(other.notifiedUpdateSquareChat);
    }
    if (other.isSetNotificationJoinRequest()) {
      this.notificationJoinRequest = new SquareEventNotificationJoinRequest(other.notificationJoinRequest);
    }
    if (other.isSetNotificationJoined()) {
      this.notificationJoined = new SquareEventNotificationMemberUpdate(other.notificationJoined);
    }
    if (other.isSetNotificationPromoteCoadmin()) {
      this.notificationPromoteCoadmin = new SquareEventNotificationMemberUpdate(other.notificationPromoteCoadmin);
    }
    if (other.isSetNotificationPromoteAdmin()) {
      this.notificationPromoteAdmin = new SquareEventNotificationMemberUpdate(other.notificationPromoteAdmin);
    }
    if (other.isSetNotificationDemoteMember()) {
      this.notificationDemoteMember = new SquareEventNotificationMemberUpdate(other.notificationDemoteMember);
    }
    if (other.isSetNotificationKickedOut()) {
      this.notificationKickedOut = new SquareEventNotificationMemberUpdate(other.notificationKickedOut);
    }
    if (other.isSetNotificationSquareDelete()) {
      this.notificationSquareDelete = new SquareEventNotificationSquareDelete(other.notificationSquareDelete);
    }
    if (other.isSetNotificationSquareChatDelete()) {
      this.notificationSquareChatDelete = new SquareEventNotificationSquareChatDelete(other.notificationSquareChatDelete);
    }
    if (other.isSetNotificationMessage()) {
      this.notificationMessage = new SquareEventNotificationMessage(other.notificationMessage);
    }
    if (other.isSetNotifiedUpdateSquareChatMember()) {
      this.notifiedUpdateSquareChatMember = new SquareEventNotifiedUpdateSquareChatMember(other.notifiedUpdateSquareChatMember);
    }
    if (other.isSetNotifiedUpdateSquareAuthority()) {
      this.notifiedUpdateSquareAuthority = new SquareEventNotifiedUpdateSquareAuthority(other.notifiedUpdateSquareAuthority);
    }
    if (other.isSetNotifiedUpdateSquareFeatureSet()) {
      this.notifiedUpdateSquareFeatureSet = new SquareEventNotifiedUpdateSquareFeatureSet(other.notifiedUpdateSquareFeatureSet);
    }
  }

  public SquareEventPayload deepCopy() {
    return new SquareEventPayload(this);
  }

  @Override
  public void clear() {
    this.receiveMessage = null;
    this.sendMessage = null;
    this.notifiedJoinSquareChat = null;
    this.notifiedInviteIntoSquareChat = null;
    this.notifiedLeaveSquareChat = null;
    this.notifiedDestroyMessage = null;
    this.notifiedMarkAsRead = null;
    this.notifiedUpdateSquareMemberProfile = null;
    this.notifiedKickoutFromSquare = null;
    this.notifiedShutdownSquare = null;
    this.notifiedDeleteSquareChat = null;
    this.notifiedUpdateSquareChatProfileName = null;
    this.notifiedUpdateSquareChatProfileImage = null;
    this.notifiedUpdateSquareStatus = null;
    this.notifiedUpdateSquareChatStatus = null;
    this.notifiedCreateSquareMember = null;
    this.notifiedCreateSquareChatMember = null;
    this.notifiedUpdateSquareMemberRelation = null;
    this.notifiedUpdateSquare = null;
    this.notifiedUpdateSquareMember = null;
    this.notifiedUpdateSquareChat = null;
    this.notificationJoinRequest = null;
    this.notificationJoined = null;
    this.notificationPromoteCoadmin = null;
    this.notificationPromoteAdmin = null;
    this.notificationDemoteMember = null;
    this.notificationKickedOut = null;
    this.notificationSquareDelete = null;
    this.notificationSquareChatDelete = null;
    this.notificationMessage = null;
    this.notifiedUpdateSquareChatMember = null;
    this.notifiedUpdateSquareAuthority = null;
    this.notifiedUpdateSquareFeatureSet = null;
  }

  public SquareEventReceiveMessage getReceiveMessage() {
    return this.receiveMessage;
  }

  public SquareEventPayload setReceiveMessage(SquareEventReceiveMessage receiveMessage) {
    this.receiveMessage = receiveMessage;
    return this;
  }

  public void unsetReceiveMessage() {
    this.receiveMessage = null;
  }

  /** Returns true if field receiveMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetReceiveMessage() {
    return this.receiveMessage != null;
  }

  public void setReceiveMessageIsSet(boolean value) {
    if (!value) {
      this.receiveMessage = null;
    }
  }

  public SquareEventSendMessage getSendMessage() {
    return this.sendMessage;
  }

  public SquareEventPayload setSendMessage(SquareEventSendMessage sendMessage) {
    this.sendMessage = sendMessage;
    return this;
  }

  public void unsetSendMessage() {
    this.sendMessage = null;
  }

  /** Returns true if field sendMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetSendMessage() {
    return this.sendMessage != null;
  }

  public void setSendMessageIsSet(boolean value) {
    if (!value) {
      this.sendMessage = null;
    }
  }

  public SquareEventNotifiedJoinSquareChat getNotifiedJoinSquareChat() {
    return this.notifiedJoinSquareChat;
  }

  public SquareEventPayload setNotifiedJoinSquareChat(SquareEventNotifiedJoinSquareChat notifiedJoinSquareChat) {
    this.notifiedJoinSquareChat = notifiedJoinSquareChat;
    return this;
  }

  public void unsetNotifiedJoinSquareChat() {
    this.notifiedJoinSquareChat = null;
  }

  /** Returns true if field notifiedJoinSquareChat is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedJoinSquareChat() {
    return this.notifiedJoinSquareChat != null;
  }

  public void setNotifiedJoinSquareChatIsSet(boolean value) {
    if (!value) {
      this.notifiedJoinSquareChat = null;
    }
  }

  public SquareEventNotifiedInviteIntoSquareChat getNotifiedInviteIntoSquareChat() {
    return this.notifiedInviteIntoSquareChat;
  }

  public SquareEventPayload setNotifiedInviteIntoSquareChat(SquareEventNotifiedInviteIntoSquareChat notifiedInviteIntoSquareChat) {
    this.notifiedInviteIntoSquareChat = notifiedInviteIntoSquareChat;
    return this;
  }

  public void unsetNotifiedInviteIntoSquareChat() {
    this.notifiedInviteIntoSquareChat = null;
  }

  /** Returns true if field notifiedInviteIntoSquareChat is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedInviteIntoSquareChat() {
    return this.notifiedInviteIntoSquareChat != null;
  }

  public void setNotifiedInviteIntoSquareChatIsSet(boolean value) {
    if (!value) {
      this.notifiedInviteIntoSquareChat = null;
    }
  }

  public SquareEventNotifiedLeaveSquareChat getNotifiedLeaveSquareChat() {
    return this.notifiedLeaveSquareChat;
  }

  public SquareEventPayload setNotifiedLeaveSquareChat(SquareEventNotifiedLeaveSquareChat notifiedLeaveSquareChat) {
    this.notifiedLeaveSquareChat = notifiedLeaveSquareChat;
    return this;
  }

  public void unsetNotifiedLeaveSquareChat() {
    this.notifiedLeaveSquareChat = null;
  }

  /** Returns true if field notifiedLeaveSquareChat is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedLeaveSquareChat() {
    return this.notifiedLeaveSquareChat != null;
  }

  public void setNotifiedLeaveSquareChatIsSet(boolean value) {
    if (!value) {
      this.notifiedLeaveSquareChat = null;
    }
  }

  public SquareEventNotifiedDestroyMessage getNotifiedDestroyMessage() {
    return this.notifiedDestroyMessage;
  }

  public SquareEventPayload setNotifiedDestroyMessage(SquareEventNotifiedDestroyMessage notifiedDestroyMessage) {
    this.notifiedDestroyMessage = notifiedDestroyMessage;
    return this;
  }

  public void unsetNotifiedDestroyMessage() {
    this.notifiedDestroyMessage = null;
  }

  /** Returns true if field notifiedDestroyMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedDestroyMessage() {
    return this.notifiedDestroyMessage != null;
  }

  public void setNotifiedDestroyMessageIsSet(boolean value) {
    if (!value) {
      this.notifiedDestroyMessage = null;
    }
  }

  public SquareEventNotifiedMarkAsRead getNotifiedMarkAsRead() {
    return this.notifiedMarkAsRead;
  }

  public SquareEventPayload setNotifiedMarkAsRead(SquareEventNotifiedMarkAsRead notifiedMarkAsRead) {
    this.notifiedMarkAsRead = notifiedMarkAsRead;
    return this;
  }

  public void unsetNotifiedMarkAsRead() {
    this.notifiedMarkAsRead = null;
  }

  /** Returns true if field notifiedMarkAsRead is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedMarkAsRead() {
    return this.notifiedMarkAsRead != null;
  }

  public void setNotifiedMarkAsReadIsSet(boolean value) {
    if (!value) {
      this.notifiedMarkAsRead = null;
    }
  }

  public SquareEventNotifiedUpdateSquareMemberProfile getNotifiedUpdateSquareMemberProfile() {
    return this.notifiedUpdateSquareMemberProfile;
  }

  public SquareEventPayload setNotifiedUpdateSquareMemberProfile(SquareEventNotifiedUpdateSquareMemberProfile notifiedUpdateSquareMemberProfile) {
    this.notifiedUpdateSquareMemberProfile = notifiedUpdateSquareMemberProfile;
    return this;
  }

  public void unsetNotifiedUpdateSquareMemberProfile() {
    this.notifiedUpdateSquareMemberProfile = null;
  }

  /** Returns true if field notifiedUpdateSquareMemberProfile is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareMemberProfile() {
    return this.notifiedUpdateSquareMemberProfile != null;
  }

  public void setNotifiedUpdateSquareMemberProfileIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareMemberProfile = null;
    }
  }

  public SquareEventNotifiedKickoutFromSquare getNotifiedKickoutFromSquare() {
    return this.notifiedKickoutFromSquare;
  }

  public SquareEventPayload setNotifiedKickoutFromSquare(SquareEventNotifiedKickoutFromSquare notifiedKickoutFromSquare) {
    this.notifiedKickoutFromSquare = notifiedKickoutFromSquare;
    return this;
  }

  public void unsetNotifiedKickoutFromSquare() {
    this.notifiedKickoutFromSquare = null;
  }

  /** Returns true if field notifiedKickoutFromSquare is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedKickoutFromSquare() {
    return this.notifiedKickoutFromSquare != null;
  }

  public void setNotifiedKickoutFromSquareIsSet(boolean value) {
    if (!value) {
      this.notifiedKickoutFromSquare = null;
    }
  }

  public SquareEventNotifiedShutdownSquare getNotifiedShutdownSquare() {
    return this.notifiedShutdownSquare;
  }

  public SquareEventPayload setNotifiedShutdownSquare(SquareEventNotifiedShutdownSquare notifiedShutdownSquare) {
    this.notifiedShutdownSquare = notifiedShutdownSquare;
    return this;
  }

  public void unsetNotifiedShutdownSquare() {
    this.notifiedShutdownSquare = null;
  }

  /** Returns true if field notifiedShutdownSquare is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedShutdownSquare() {
    return this.notifiedShutdownSquare != null;
  }

  public void setNotifiedShutdownSquareIsSet(boolean value) {
    if (!value) {
      this.notifiedShutdownSquare = null;
    }
  }

  public SquareEventNotifiedDeleteSquareChat getNotifiedDeleteSquareChat() {
    return this.notifiedDeleteSquareChat;
  }

  public SquareEventPayload setNotifiedDeleteSquareChat(SquareEventNotifiedDeleteSquareChat notifiedDeleteSquareChat) {
    this.notifiedDeleteSquareChat = notifiedDeleteSquareChat;
    return this;
  }

  public void unsetNotifiedDeleteSquareChat() {
    this.notifiedDeleteSquareChat = null;
  }

  /** Returns true if field notifiedDeleteSquareChat is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedDeleteSquareChat() {
    return this.notifiedDeleteSquareChat != null;
  }

  public void setNotifiedDeleteSquareChatIsSet(boolean value) {
    if (!value) {
      this.notifiedDeleteSquareChat = null;
    }
  }

  public SquareEventNotifiedUpdateSquareChatProfileName getNotifiedUpdateSquareChatProfileName() {
    return this.notifiedUpdateSquareChatProfileName;
  }

  public SquareEventPayload setNotifiedUpdateSquareChatProfileName(SquareEventNotifiedUpdateSquareChatProfileName notifiedUpdateSquareChatProfileName) {
    this.notifiedUpdateSquareChatProfileName = notifiedUpdateSquareChatProfileName;
    return this;
  }

  public void unsetNotifiedUpdateSquareChatProfileName() {
    this.notifiedUpdateSquareChatProfileName = null;
  }

  /** Returns true if field notifiedUpdateSquareChatProfileName is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareChatProfileName() {
    return this.notifiedUpdateSquareChatProfileName != null;
  }

  public void setNotifiedUpdateSquareChatProfileNameIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareChatProfileName = null;
    }
  }

  public SquareEventNotifiedUpdateSquareChatProfileImage getNotifiedUpdateSquareChatProfileImage() {
    return this.notifiedUpdateSquareChatProfileImage;
  }

  public SquareEventPayload setNotifiedUpdateSquareChatProfileImage(SquareEventNotifiedUpdateSquareChatProfileImage notifiedUpdateSquareChatProfileImage) {
    this.notifiedUpdateSquareChatProfileImage = notifiedUpdateSquareChatProfileImage;
    return this;
  }

  public void unsetNotifiedUpdateSquareChatProfileImage() {
    this.notifiedUpdateSquareChatProfileImage = null;
  }

  /** Returns true if field notifiedUpdateSquareChatProfileImage is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareChatProfileImage() {
    return this.notifiedUpdateSquareChatProfileImage != null;
  }

  public void setNotifiedUpdateSquareChatProfileImageIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareChatProfileImage = null;
    }
  }

  public SquareEventNotifiedUpdateSquareStatus getNotifiedUpdateSquareStatus() {
    return this.notifiedUpdateSquareStatus;
  }

  public SquareEventPayload setNotifiedUpdateSquareStatus(SquareEventNotifiedUpdateSquareStatus notifiedUpdateSquareStatus) {
    this.notifiedUpdateSquareStatus = notifiedUpdateSquareStatus;
    return this;
  }

  public void unsetNotifiedUpdateSquareStatus() {
    this.notifiedUpdateSquareStatus = null;
  }

  /** Returns true if field notifiedUpdateSquareStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareStatus() {
    return this.notifiedUpdateSquareStatus != null;
  }

  public void setNotifiedUpdateSquareStatusIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareStatus = null;
    }
  }

  public SquareEventNotifiedUpdateSquareChatStatus getNotifiedUpdateSquareChatStatus() {
    return this.notifiedUpdateSquareChatStatus;
  }

  public SquareEventPayload setNotifiedUpdateSquareChatStatus(SquareEventNotifiedUpdateSquareChatStatus notifiedUpdateSquareChatStatus) {
    this.notifiedUpdateSquareChatStatus = notifiedUpdateSquareChatStatus;
    return this;
  }

  public void unsetNotifiedUpdateSquareChatStatus() {
    this.notifiedUpdateSquareChatStatus = null;
  }

  /** Returns true if field notifiedUpdateSquareChatStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareChatStatus() {
    return this.notifiedUpdateSquareChatStatus != null;
  }

  public void setNotifiedUpdateSquareChatStatusIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareChatStatus = null;
    }
  }

  public SquareEventNotifiedCreateSquareMember getNotifiedCreateSquareMember() {
    return this.notifiedCreateSquareMember;
  }

  public SquareEventPayload setNotifiedCreateSquareMember(SquareEventNotifiedCreateSquareMember notifiedCreateSquareMember) {
    this.notifiedCreateSquareMember = notifiedCreateSquareMember;
    return this;
  }

  public void unsetNotifiedCreateSquareMember() {
    this.notifiedCreateSquareMember = null;
  }

  /** Returns true if field notifiedCreateSquareMember is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedCreateSquareMember() {
    return this.notifiedCreateSquareMember != null;
  }

  public void setNotifiedCreateSquareMemberIsSet(boolean value) {
    if (!value) {
      this.notifiedCreateSquareMember = null;
    }
  }

  public SquareEventNotifiedCreateSquareChatMember getNotifiedCreateSquareChatMember() {
    return this.notifiedCreateSquareChatMember;
  }

  public SquareEventPayload setNotifiedCreateSquareChatMember(SquareEventNotifiedCreateSquareChatMember notifiedCreateSquareChatMember) {
    this.notifiedCreateSquareChatMember = notifiedCreateSquareChatMember;
    return this;
  }

  public void unsetNotifiedCreateSquareChatMember() {
    this.notifiedCreateSquareChatMember = null;
  }

  /** Returns true if field notifiedCreateSquareChatMember is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedCreateSquareChatMember() {
    return this.notifiedCreateSquareChatMember != null;
  }

  public void setNotifiedCreateSquareChatMemberIsSet(boolean value) {
    if (!value) {
      this.notifiedCreateSquareChatMember = null;
    }
  }

  public SquareEventNotifiedUpdateSquareMemberRelation getNotifiedUpdateSquareMemberRelation() {
    return this.notifiedUpdateSquareMemberRelation;
  }

  public SquareEventPayload setNotifiedUpdateSquareMemberRelation(SquareEventNotifiedUpdateSquareMemberRelation notifiedUpdateSquareMemberRelation) {
    this.notifiedUpdateSquareMemberRelation = notifiedUpdateSquareMemberRelation;
    return this;
  }

  public void unsetNotifiedUpdateSquareMemberRelation() {
    this.notifiedUpdateSquareMemberRelation = null;
  }

  /** Returns true if field notifiedUpdateSquareMemberRelation is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareMemberRelation() {
    return this.notifiedUpdateSquareMemberRelation != null;
  }

  public void setNotifiedUpdateSquareMemberRelationIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareMemberRelation = null;
    }
  }

  public SquareEventNotifiedUpdateSquare getNotifiedUpdateSquare() {
    return this.notifiedUpdateSquare;
  }

  public SquareEventPayload setNotifiedUpdateSquare(SquareEventNotifiedUpdateSquare notifiedUpdateSquare) {
    this.notifiedUpdateSquare = notifiedUpdateSquare;
    return this;
  }

  public void unsetNotifiedUpdateSquare() {
    this.notifiedUpdateSquare = null;
  }

  /** Returns true if field notifiedUpdateSquare is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquare() {
    return this.notifiedUpdateSquare != null;
  }

  public void setNotifiedUpdateSquareIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquare = null;
    }
  }

  public SquareEventNotifiedUpdateSquareMember getNotifiedUpdateSquareMember() {
    return this.notifiedUpdateSquareMember;
  }

  public SquareEventPayload setNotifiedUpdateSquareMember(SquareEventNotifiedUpdateSquareMember notifiedUpdateSquareMember) {
    this.notifiedUpdateSquareMember = notifiedUpdateSquareMember;
    return this;
  }

  public void unsetNotifiedUpdateSquareMember() {
    this.notifiedUpdateSquareMember = null;
  }

  /** Returns true if field notifiedUpdateSquareMember is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareMember() {
    return this.notifiedUpdateSquareMember != null;
  }

  public void setNotifiedUpdateSquareMemberIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareMember = null;
    }
  }

  public SquareEventNotifiedUpdateSquareChat getNotifiedUpdateSquareChat() {
    return this.notifiedUpdateSquareChat;
  }

  public SquareEventPayload setNotifiedUpdateSquareChat(SquareEventNotifiedUpdateSquareChat notifiedUpdateSquareChat) {
    this.notifiedUpdateSquareChat = notifiedUpdateSquareChat;
    return this;
  }

  public void unsetNotifiedUpdateSquareChat() {
    this.notifiedUpdateSquareChat = null;
  }

  /** Returns true if field notifiedUpdateSquareChat is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareChat() {
    return this.notifiedUpdateSquareChat != null;
  }

  public void setNotifiedUpdateSquareChatIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareChat = null;
    }
  }

  public SquareEventNotificationJoinRequest getNotificationJoinRequest() {
    return this.notificationJoinRequest;
  }

  public SquareEventPayload setNotificationJoinRequest(SquareEventNotificationJoinRequest notificationJoinRequest) {
    this.notificationJoinRequest = notificationJoinRequest;
    return this;
  }

  public void unsetNotificationJoinRequest() {
    this.notificationJoinRequest = null;
  }

  /** Returns true if field notificationJoinRequest is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationJoinRequest() {
    return this.notificationJoinRequest != null;
  }

  public void setNotificationJoinRequestIsSet(boolean value) {
    if (!value) {
      this.notificationJoinRequest = null;
    }
  }

  public SquareEventNotificationMemberUpdate getNotificationJoined() {
    return this.notificationJoined;
  }

  public SquareEventPayload setNotificationJoined(SquareEventNotificationMemberUpdate notificationJoined) {
    this.notificationJoined = notificationJoined;
    return this;
  }

  public void unsetNotificationJoined() {
    this.notificationJoined = null;
  }

  /** Returns true if field notificationJoined is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationJoined() {
    return this.notificationJoined != null;
  }

  public void setNotificationJoinedIsSet(boolean value) {
    if (!value) {
      this.notificationJoined = null;
    }
  }

  public SquareEventNotificationMemberUpdate getNotificationPromoteCoadmin() {
    return this.notificationPromoteCoadmin;
  }

  public SquareEventPayload setNotificationPromoteCoadmin(SquareEventNotificationMemberUpdate notificationPromoteCoadmin) {
    this.notificationPromoteCoadmin = notificationPromoteCoadmin;
    return this;
  }

  public void unsetNotificationPromoteCoadmin() {
    this.notificationPromoteCoadmin = null;
  }

  /** Returns true if field notificationPromoteCoadmin is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationPromoteCoadmin() {
    return this.notificationPromoteCoadmin != null;
  }

  public void setNotificationPromoteCoadminIsSet(boolean value) {
    if (!value) {
      this.notificationPromoteCoadmin = null;
    }
  }

  public SquareEventNotificationMemberUpdate getNotificationPromoteAdmin() {
    return this.notificationPromoteAdmin;
  }

  public SquareEventPayload setNotificationPromoteAdmin(SquareEventNotificationMemberUpdate notificationPromoteAdmin) {
    this.notificationPromoteAdmin = notificationPromoteAdmin;
    return this;
  }

  public void unsetNotificationPromoteAdmin() {
    this.notificationPromoteAdmin = null;
  }

  /** Returns true if field notificationPromoteAdmin is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationPromoteAdmin() {
    return this.notificationPromoteAdmin != null;
  }

  public void setNotificationPromoteAdminIsSet(boolean value) {
    if (!value) {
      this.notificationPromoteAdmin = null;
    }
  }

  public SquareEventNotificationMemberUpdate getNotificationDemoteMember() {
    return this.notificationDemoteMember;
  }

  public SquareEventPayload setNotificationDemoteMember(SquareEventNotificationMemberUpdate notificationDemoteMember) {
    this.notificationDemoteMember = notificationDemoteMember;
    return this;
  }

  public void unsetNotificationDemoteMember() {
    this.notificationDemoteMember = null;
  }

  /** Returns true if field notificationDemoteMember is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationDemoteMember() {
    return this.notificationDemoteMember != null;
  }

  public void setNotificationDemoteMemberIsSet(boolean value) {
    if (!value) {
      this.notificationDemoteMember = null;
    }
  }

  public SquareEventNotificationMemberUpdate getNotificationKickedOut() {
    return this.notificationKickedOut;
  }

  public SquareEventPayload setNotificationKickedOut(SquareEventNotificationMemberUpdate notificationKickedOut) {
    this.notificationKickedOut = notificationKickedOut;
    return this;
  }

  public void unsetNotificationKickedOut() {
    this.notificationKickedOut = null;
  }

  /** Returns true if field notificationKickedOut is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationKickedOut() {
    return this.notificationKickedOut != null;
  }

  public void setNotificationKickedOutIsSet(boolean value) {
    if (!value) {
      this.notificationKickedOut = null;
    }
  }

  public SquareEventNotificationSquareDelete getNotificationSquareDelete() {
    return this.notificationSquareDelete;
  }

  public SquareEventPayload setNotificationSquareDelete(SquareEventNotificationSquareDelete notificationSquareDelete) {
    this.notificationSquareDelete = notificationSquareDelete;
    return this;
  }

  public void unsetNotificationSquareDelete() {
    this.notificationSquareDelete = null;
  }

  /** Returns true if field notificationSquareDelete is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationSquareDelete() {
    return this.notificationSquareDelete != null;
  }

  public void setNotificationSquareDeleteIsSet(boolean value) {
    if (!value) {
      this.notificationSquareDelete = null;
    }
  }

  public SquareEventNotificationSquareChatDelete getNotificationSquareChatDelete() {
    return this.notificationSquareChatDelete;
  }

  public SquareEventPayload setNotificationSquareChatDelete(SquareEventNotificationSquareChatDelete notificationSquareChatDelete) {
    this.notificationSquareChatDelete = notificationSquareChatDelete;
    return this;
  }

  public void unsetNotificationSquareChatDelete() {
    this.notificationSquareChatDelete = null;
  }

  /** Returns true if field notificationSquareChatDelete is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationSquareChatDelete() {
    return this.notificationSquareChatDelete != null;
  }

  public void setNotificationSquareChatDeleteIsSet(boolean value) {
    if (!value) {
      this.notificationSquareChatDelete = null;
    }
  }

  public SquareEventNotificationMessage getNotificationMessage() {
    return this.notificationMessage;
  }

  public SquareEventPayload setNotificationMessage(SquareEventNotificationMessage notificationMessage) {
    this.notificationMessage = notificationMessage;
    return this;
  }

  public void unsetNotificationMessage() {
    this.notificationMessage = null;
  }

  /** Returns true if field notificationMessage is set (has been assigned a value) and false otherwise */
  public boolean isSetNotificationMessage() {
    return this.notificationMessage != null;
  }

  public void setNotificationMessageIsSet(boolean value) {
    if (!value) {
      this.notificationMessage = null;
    }
  }

  public SquareEventNotifiedUpdateSquareChatMember getNotifiedUpdateSquareChatMember() {
    return this.notifiedUpdateSquareChatMember;
  }

  public SquareEventPayload setNotifiedUpdateSquareChatMember(SquareEventNotifiedUpdateSquareChatMember notifiedUpdateSquareChatMember) {
    this.notifiedUpdateSquareChatMember = notifiedUpdateSquareChatMember;
    return this;
  }

  public void unsetNotifiedUpdateSquareChatMember() {
    this.notifiedUpdateSquareChatMember = null;
  }

  /** Returns true if field notifiedUpdateSquareChatMember is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareChatMember() {
    return this.notifiedUpdateSquareChatMember != null;
  }

  public void setNotifiedUpdateSquareChatMemberIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareChatMember = null;
    }
  }

  public SquareEventNotifiedUpdateSquareAuthority getNotifiedUpdateSquareAuthority() {
    return this.notifiedUpdateSquareAuthority;
  }

  public SquareEventPayload setNotifiedUpdateSquareAuthority(SquareEventNotifiedUpdateSquareAuthority notifiedUpdateSquareAuthority) {
    this.notifiedUpdateSquareAuthority = notifiedUpdateSquareAuthority;
    return this;
  }

  public void unsetNotifiedUpdateSquareAuthority() {
    this.notifiedUpdateSquareAuthority = null;
  }

  /** Returns true if field notifiedUpdateSquareAuthority is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareAuthority() {
    return this.notifiedUpdateSquareAuthority != null;
  }

  public void setNotifiedUpdateSquareAuthorityIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareAuthority = null;
    }
  }

  public SquareEventNotifiedUpdateSquareFeatureSet getNotifiedUpdateSquareFeatureSet() {
    return this.notifiedUpdateSquareFeatureSet;
  }

  public SquareEventPayload setNotifiedUpdateSquareFeatureSet(SquareEventNotifiedUpdateSquareFeatureSet notifiedUpdateSquareFeatureSet) {
    this.notifiedUpdateSquareFeatureSet = notifiedUpdateSquareFeatureSet;
    return this;
  }

  public void unsetNotifiedUpdateSquareFeatureSet() {
    this.notifiedUpdateSquareFeatureSet = null;
  }

  /** Returns true if field notifiedUpdateSquareFeatureSet is set (has been assigned a value) and false otherwise */
  public boolean isSetNotifiedUpdateSquareFeatureSet() {
    return this.notifiedUpdateSquareFeatureSet != null;
  }

  public void setNotifiedUpdateSquareFeatureSetIsSet(boolean value) {
    if (!value) {
      this.notifiedUpdateSquareFeatureSet = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case RECEIVE_MESSAGE:
      if (value == null) {
        unsetReceiveMessage();
      } else {
        setReceiveMessage((SquareEventReceiveMessage)value);
      }
      break;

    case SEND_MESSAGE:
      if (value == null) {
        unsetSendMessage();
      } else {
        setSendMessage((SquareEventSendMessage)value);
      }
      break;

    case NOTIFIED_JOIN_SQUARE_CHAT:
      if (value == null) {
        unsetNotifiedJoinSquareChat();
      } else {
        setNotifiedJoinSquareChat((SquareEventNotifiedJoinSquareChat)value);
      }
      break;

    case NOTIFIED_INVITE_INTO_SQUARE_CHAT:
      if (value == null) {
        unsetNotifiedInviteIntoSquareChat();
      } else {
        setNotifiedInviteIntoSquareChat((SquareEventNotifiedInviteIntoSquareChat)value);
      }
      break;

    case NOTIFIED_LEAVE_SQUARE_CHAT:
      if (value == null) {
        unsetNotifiedLeaveSquareChat();
      } else {
        setNotifiedLeaveSquareChat((SquareEventNotifiedLeaveSquareChat)value);
      }
      break;

    case NOTIFIED_DESTROY_MESSAGE:
      if (value == null) {
        unsetNotifiedDestroyMessage();
      } else {
        setNotifiedDestroyMessage((SquareEventNotifiedDestroyMessage)value);
      }
      break;

    case NOTIFIED_MARK_AS_READ:
      if (value == null) {
        unsetNotifiedMarkAsRead();
      } else {
        setNotifiedMarkAsRead((SquareEventNotifiedMarkAsRead)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE:
      if (value == null) {
        unsetNotifiedUpdateSquareMemberProfile();
      } else {
        setNotifiedUpdateSquareMemberProfile((SquareEventNotifiedUpdateSquareMemberProfile)value);
      }
      break;

    case NOTIFIED_KICKOUT_FROM_SQUARE:
      if (value == null) {
        unsetNotifiedKickoutFromSquare();
      } else {
        setNotifiedKickoutFromSquare((SquareEventNotifiedKickoutFromSquare)value);
      }
      break;

    case NOTIFIED_SHUTDOWN_SQUARE:
      if (value == null) {
        unsetNotifiedShutdownSquare();
      } else {
        setNotifiedShutdownSquare((SquareEventNotifiedShutdownSquare)value);
      }
      break;

    case NOTIFIED_DELETE_SQUARE_CHAT:
      if (value == null) {
        unsetNotifiedDeleteSquareChat();
      } else {
        setNotifiedDeleteSquareChat((SquareEventNotifiedDeleteSquareChat)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME:
      if (value == null) {
        unsetNotifiedUpdateSquareChatProfileName();
      } else {
        setNotifiedUpdateSquareChatProfileName((SquareEventNotifiedUpdateSquareChatProfileName)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE:
      if (value == null) {
        unsetNotifiedUpdateSquareChatProfileImage();
      } else {
        setNotifiedUpdateSquareChatProfileImage((SquareEventNotifiedUpdateSquareChatProfileImage)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_STATUS:
      if (value == null) {
        unsetNotifiedUpdateSquareStatus();
      } else {
        setNotifiedUpdateSquareStatus((SquareEventNotifiedUpdateSquareStatus)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_CHAT_STATUS:
      if (value == null) {
        unsetNotifiedUpdateSquareChatStatus();
      } else {
        setNotifiedUpdateSquareChatStatus((SquareEventNotifiedUpdateSquareChatStatus)value);
      }
      break;

    case NOTIFIED_CREATE_SQUARE_MEMBER:
      if (value == null) {
        unsetNotifiedCreateSquareMember();
      } else {
        setNotifiedCreateSquareMember((SquareEventNotifiedCreateSquareMember)value);
      }
      break;

    case NOTIFIED_CREATE_SQUARE_CHAT_MEMBER:
      if (value == null) {
        unsetNotifiedCreateSquareChatMember();
      } else {
        setNotifiedCreateSquareChatMember((SquareEventNotifiedCreateSquareChatMember)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION:
      if (value == null) {
        unsetNotifiedUpdateSquareMemberRelation();
      } else {
        setNotifiedUpdateSquareMemberRelation((SquareEventNotifiedUpdateSquareMemberRelation)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE:
      if (value == null) {
        unsetNotifiedUpdateSquare();
      } else {
        setNotifiedUpdateSquare((SquareEventNotifiedUpdateSquare)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_MEMBER:
      if (value == null) {
        unsetNotifiedUpdateSquareMember();
      } else {
        setNotifiedUpdateSquareMember((SquareEventNotifiedUpdateSquareMember)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_CHAT:
      if (value == null) {
        unsetNotifiedUpdateSquareChat();
      } else {
        setNotifiedUpdateSquareChat((SquareEventNotifiedUpdateSquareChat)value);
      }
      break;

    case NOTIFICATION_JOIN_REQUEST:
      if (value == null) {
        unsetNotificationJoinRequest();
      } else {
        setNotificationJoinRequest((SquareEventNotificationJoinRequest)value);
      }
      break;

    case NOTIFICATION_JOINED:
      if (value == null) {
        unsetNotificationJoined();
      } else {
        setNotificationJoined((SquareEventNotificationMemberUpdate)value);
      }
      break;

    case NOTIFICATION_PROMOTE_COADMIN:
      if (value == null) {
        unsetNotificationPromoteCoadmin();
      } else {
        setNotificationPromoteCoadmin((SquareEventNotificationMemberUpdate)value);
      }
      break;

    case NOTIFICATION_PROMOTE_ADMIN:
      if (value == null) {
        unsetNotificationPromoteAdmin();
      } else {
        setNotificationPromoteAdmin((SquareEventNotificationMemberUpdate)value);
      }
      break;

    case NOTIFICATION_DEMOTE_MEMBER:
      if (value == null) {
        unsetNotificationDemoteMember();
      } else {
        setNotificationDemoteMember((SquareEventNotificationMemberUpdate)value);
      }
      break;

    case NOTIFICATION_KICKED_OUT:
      if (value == null) {
        unsetNotificationKickedOut();
      } else {
        setNotificationKickedOut((SquareEventNotificationMemberUpdate)value);
      }
      break;

    case NOTIFICATION_SQUARE_DELETE:
      if (value == null) {
        unsetNotificationSquareDelete();
      } else {
        setNotificationSquareDelete((SquareEventNotificationSquareDelete)value);
      }
      break;

    case NOTIFICATION_SQUARE_CHAT_DELETE:
      if (value == null) {
        unsetNotificationSquareChatDelete();
      } else {
        setNotificationSquareChatDelete((SquareEventNotificationSquareChatDelete)value);
      }
      break;

    case NOTIFICATION_MESSAGE:
      if (value == null) {
        unsetNotificationMessage();
      } else {
        setNotificationMessage((SquareEventNotificationMessage)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER:
      if (value == null) {
        unsetNotifiedUpdateSquareChatMember();
      } else {
        setNotifiedUpdateSquareChatMember((SquareEventNotifiedUpdateSquareChatMember)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_AUTHORITY:
      if (value == null) {
        unsetNotifiedUpdateSquareAuthority();
      } else {
        setNotifiedUpdateSquareAuthority((SquareEventNotifiedUpdateSquareAuthority)value);
      }
      break;

    case NOTIFIED_UPDATE_SQUARE_FEATURE_SET:
      if (value == null) {
        unsetNotifiedUpdateSquareFeatureSet();
      } else {
        setNotifiedUpdateSquareFeatureSet((SquareEventNotifiedUpdateSquareFeatureSet)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case RECEIVE_MESSAGE:
      return getReceiveMessage();

    case SEND_MESSAGE:
      return getSendMessage();

    case NOTIFIED_JOIN_SQUARE_CHAT:
      return getNotifiedJoinSquareChat();

    case NOTIFIED_INVITE_INTO_SQUARE_CHAT:
      return getNotifiedInviteIntoSquareChat();

    case NOTIFIED_LEAVE_SQUARE_CHAT:
      return getNotifiedLeaveSquareChat();

    case NOTIFIED_DESTROY_MESSAGE:
      return getNotifiedDestroyMessage();

    case NOTIFIED_MARK_AS_READ:
      return getNotifiedMarkAsRead();

    case NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE:
      return getNotifiedUpdateSquareMemberProfile();

    case NOTIFIED_KICKOUT_FROM_SQUARE:
      return getNotifiedKickoutFromSquare();

    case NOTIFIED_SHUTDOWN_SQUARE:
      return getNotifiedShutdownSquare();

    case NOTIFIED_DELETE_SQUARE_CHAT:
      return getNotifiedDeleteSquareChat();

    case NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME:
      return getNotifiedUpdateSquareChatProfileName();

    case NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE:
      return getNotifiedUpdateSquareChatProfileImage();

    case NOTIFIED_UPDATE_SQUARE_STATUS:
      return getNotifiedUpdateSquareStatus();

    case NOTIFIED_UPDATE_SQUARE_CHAT_STATUS:
      return getNotifiedUpdateSquareChatStatus();

    case NOTIFIED_CREATE_SQUARE_MEMBER:
      return getNotifiedCreateSquareMember();

    case NOTIFIED_CREATE_SQUARE_CHAT_MEMBER:
      return getNotifiedCreateSquareChatMember();

    case NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION:
      return getNotifiedUpdateSquareMemberRelation();

    case NOTIFIED_UPDATE_SQUARE:
      return getNotifiedUpdateSquare();

    case NOTIFIED_UPDATE_SQUARE_MEMBER:
      return getNotifiedUpdateSquareMember();

    case NOTIFIED_UPDATE_SQUARE_CHAT:
      return getNotifiedUpdateSquareChat();

    case NOTIFICATION_JOIN_REQUEST:
      return getNotificationJoinRequest();

    case NOTIFICATION_JOINED:
      return getNotificationJoined();

    case NOTIFICATION_PROMOTE_COADMIN:
      return getNotificationPromoteCoadmin();

    case NOTIFICATION_PROMOTE_ADMIN:
      return getNotificationPromoteAdmin();

    case NOTIFICATION_DEMOTE_MEMBER:
      return getNotificationDemoteMember();

    case NOTIFICATION_KICKED_OUT:
      return getNotificationKickedOut();

    case NOTIFICATION_SQUARE_DELETE:
      return getNotificationSquareDelete();

    case NOTIFICATION_SQUARE_CHAT_DELETE:
      return getNotificationSquareChatDelete();

    case NOTIFICATION_MESSAGE:
      return getNotificationMessage();

    case NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER:
      return getNotifiedUpdateSquareChatMember();

    case NOTIFIED_UPDATE_SQUARE_AUTHORITY:
      return getNotifiedUpdateSquareAuthority();

    case NOTIFIED_UPDATE_SQUARE_FEATURE_SET:
      return getNotifiedUpdateSquareFeatureSet();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case RECEIVE_MESSAGE:
      return isSetReceiveMessage();
    case SEND_MESSAGE:
      return isSetSendMessage();
    case NOTIFIED_JOIN_SQUARE_CHAT:
      return isSetNotifiedJoinSquareChat();
    case NOTIFIED_INVITE_INTO_SQUARE_CHAT:
      return isSetNotifiedInviteIntoSquareChat();
    case NOTIFIED_LEAVE_SQUARE_CHAT:
      return isSetNotifiedLeaveSquareChat();
    case NOTIFIED_DESTROY_MESSAGE:
      return isSetNotifiedDestroyMessage();
    case NOTIFIED_MARK_AS_READ:
      return isSetNotifiedMarkAsRead();
    case NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE:
      return isSetNotifiedUpdateSquareMemberProfile();
    case NOTIFIED_KICKOUT_FROM_SQUARE:
      return isSetNotifiedKickoutFromSquare();
    case NOTIFIED_SHUTDOWN_SQUARE:
      return isSetNotifiedShutdownSquare();
    case NOTIFIED_DELETE_SQUARE_CHAT:
      return isSetNotifiedDeleteSquareChat();
    case NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME:
      return isSetNotifiedUpdateSquareChatProfileName();
    case NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE:
      return isSetNotifiedUpdateSquareChatProfileImage();
    case NOTIFIED_UPDATE_SQUARE_STATUS:
      return isSetNotifiedUpdateSquareStatus();
    case NOTIFIED_UPDATE_SQUARE_CHAT_STATUS:
      return isSetNotifiedUpdateSquareChatStatus();
    case NOTIFIED_CREATE_SQUARE_MEMBER:
      return isSetNotifiedCreateSquareMember();
    case NOTIFIED_CREATE_SQUARE_CHAT_MEMBER:
      return isSetNotifiedCreateSquareChatMember();
    case NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION:
      return isSetNotifiedUpdateSquareMemberRelation();
    case NOTIFIED_UPDATE_SQUARE:
      return isSetNotifiedUpdateSquare();
    case NOTIFIED_UPDATE_SQUARE_MEMBER:
      return isSetNotifiedUpdateSquareMember();
    case NOTIFIED_UPDATE_SQUARE_CHAT:
      return isSetNotifiedUpdateSquareChat();
    case NOTIFICATION_JOIN_REQUEST:
      return isSetNotificationJoinRequest();
    case NOTIFICATION_JOINED:
      return isSetNotificationJoined();
    case NOTIFICATION_PROMOTE_COADMIN:
      return isSetNotificationPromoteCoadmin();
    case NOTIFICATION_PROMOTE_ADMIN:
      return isSetNotificationPromoteAdmin();
    case NOTIFICATION_DEMOTE_MEMBER:
      return isSetNotificationDemoteMember();
    case NOTIFICATION_KICKED_OUT:
      return isSetNotificationKickedOut();
    case NOTIFICATION_SQUARE_DELETE:
      return isSetNotificationSquareDelete();
    case NOTIFICATION_SQUARE_CHAT_DELETE:
      return isSetNotificationSquareChatDelete();
    case NOTIFICATION_MESSAGE:
      return isSetNotificationMessage();
    case NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER:
      return isSetNotifiedUpdateSquareChatMember();
    case NOTIFIED_UPDATE_SQUARE_AUTHORITY:
      return isSetNotifiedUpdateSquareAuthority();
    case NOTIFIED_UPDATE_SQUARE_FEATURE_SET:
      return isSetNotifiedUpdateSquareFeatureSet();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SquareEventPayload)
      return this.equals((SquareEventPayload)that);
    return false;
  }

  public boolean equals(SquareEventPayload that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_receiveMessage = true && this.isSetReceiveMessage();
    boolean that_present_receiveMessage = true && that.isSetReceiveMessage();
    if (this_present_receiveMessage || that_present_receiveMessage) {
      if (!(this_present_receiveMessage && that_present_receiveMessage))
        return false;
      if (!this.receiveMessage.equals(that.receiveMessage))
        return false;
    }

    boolean this_present_sendMessage = true && this.isSetSendMessage();
    boolean that_present_sendMessage = true && that.isSetSendMessage();
    if (this_present_sendMessage || that_present_sendMessage) {
      if (!(this_present_sendMessage && that_present_sendMessage))
        return false;
      if (!this.sendMessage.equals(that.sendMessage))
        return false;
    }

    boolean this_present_notifiedJoinSquareChat = true && this.isSetNotifiedJoinSquareChat();
    boolean that_present_notifiedJoinSquareChat = true && that.isSetNotifiedJoinSquareChat();
    if (this_present_notifiedJoinSquareChat || that_present_notifiedJoinSquareChat) {
      if (!(this_present_notifiedJoinSquareChat && that_present_notifiedJoinSquareChat))
        return false;
      if (!this.notifiedJoinSquareChat.equals(that.notifiedJoinSquareChat))
        return false;
    }

    boolean this_present_notifiedInviteIntoSquareChat = true && this.isSetNotifiedInviteIntoSquareChat();
    boolean that_present_notifiedInviteIntoSquareChat = true && that.isSetNotifiedInviteIntoSquareChat();
    if (this_present_notifiedInviteIntoSquareChat || that_present_notifiedInviteIntoSquareChat) {
      if (!(this_present_notifiedInviteIntoSquareChat && that_present_notifiedInviteIntoSquareChat))
        return false;
      if (!this.notifiedInviteIntoSquareChat.equals(that.notifiedInviteIntoSquareChat))
        return false;
    }

    boolean this_present_notifiedLeaveSquareChat = true && this.isSetNotifiedLeaveSquareChat();
    boolean that_present_notifiedLeaveSquareChat = true && that.isSetNotifiedLeaveSquareChat();
    if (this_present_notifiedLeaveSquareChat || that_present_notifiedLeaveSquareChat) {
      if (!(this_present_notifiedLeaveSquareChat && that_present_notifiedLeaveSquareChat))
        return false;
      if (!this.notifiedLeaveSquareChat.equals(that.notifiedLeaveSquareChat))
        return false;
    }

    boolean this_present_notifiedDestroyMessage = true && this.isSetNotifiedDestroyMessage();
    boolean that_present_notifiedDestroyMessage = true && that.isSetNotifiedDestroyMessage();
    if (this_present_notifiedDestroyMessage || that_present_notifiedDestroyMessage) {
      if (!(this_present_notifiedDestroyMessage && that_present_notifiedDestroyMessage))
        return false;
      if (!this.notifiedDestroyMessage.equals(that.notifiedDestroyMessage))
        return false;
    }

    boolean this_present_notifiedMarkAsRead = true && this.isSetNotifiedMarkAsRead();
    boolean that_present_notifiedMarkAsRead = true && that.isSetNotifiedMarkAsRead();
    if (this_present_notifiedMarkAsRead || that_present_notifiedMarkAsRead) {
      if (!(this_present_notifiedMarkAsRead && that_present_notifiedMarkAsRead))
        return false;
      if (!this.notifiedMarkAsRead.equals(that.notifiedMarkAsRead))
        return false;
    }

    boolean this_present_notifiedUpdateSquareMemberProfile = true && this.isSetNotifiedUpdateSquareMemberProfile();
    boolean that_present_notifiedUpdateSquareMemberProfile = true && that.isSetNotifiedUpdateSquareMemberProfile();
    if (this_present_notifiedUpdateSquareMemberProfile || that_present_notifiedUpdateSquareMemberProfile) {
      if (!(this_present_notifiedUpdateSquareMemberProfile && that_present_notifiedUpdateSquareMemberProfile))
        return false;
      if (!this.notifiedUpdateSquareMemberProfile.equals(that.notifiedUpdateSquareMemberProfile))
        return false;
    }

    boolean this_present_notifiedKickoutFromSquare = true && this.isSetNotifiedKickoutFromSquare();
    boolean that_present_notifiedKickoutFromSquare = true && that.isSetNotifiedKickoutFromSquare();
    if (this_present_notifiedKickoutFromSquare || that_present_notifiedKickoutFromSquare) {
      if (!(this_present_notifiedKickoutFromSquare && that_present_notifiedKickoutFromSquare))
        return false;
      if (!this.notifiedKickoutFromSquare.equals(that.notifiedKickoutFromSquare))
        return false;
    }

    boolean this_present_notifiedShutdownSquare = true && this.isSetNotifiedShutdownSquare();
    boolean that_present_notifiedShutdownSquare = true && that.isSetNotifiedShutdownSquare();
    if (this_present_notifiedShutdownSquare || that_present_notifiedShutdownSquare) {
      if (!(this_present_notifiedShutdownSquare && that_present_notifiedShutdownSquare))
        return false;
      if (!this.notifiedShutdownSquare.equals(that.notifiedShutdownSquare))
        return false;
    }

    boolean this_present_notifiedDeleteSquareChat = true && this.isSetNotifiedDeleteSquareChat();
    boolean that_present_notifiedDeleteSquareChat = true && that.isSetNotifiedDeleteSquareChat();
    if (this_present_notifiedDeleteSquareChat || that_present_notifiedDeleteSquareChat) {
      if (!(this_present_notifiedDeleteSquareChat && that_present_notifiedDeleteSquareChat))
        return false;
      if (!this.notifiedDeleteSquareChat.equals(that.notifiedDeleteSquareChat))
        return false;
    }

    boolean this_present_notifiedUpdateSquareChatProfileName = true && this.isSetNotifiedUpdateSquareChatProfileName();
    boolean that_present_notifiedUpdateSquareChatProfileName = true && that.isSetNotifiedUpdateSquareChatProfileName();
    if (this_present_notifiedUpdateSquareChatProfileName || that_present_notifiedUpdateSquareChatProfileName) {
      if (!(this_present_notifiedUpdateSquareChatProfileName && that_present_notifiedUpdateSquareChatProfileName))
        return false;
      if (!this.notifiedUpdateSquareChatProfileName.equals(that.notifiedUpdateSquareChatProfileName))
        return false;
    }

    boolean this_present_notifiedUpdateSquareChatProfileImage = true && this.isSetNotifiedUpdateSquareChatProfileImage();
    boolean that_present_notifiedUpdateSquareChatProfileImage = true && that.isSetNotifiedUpdateSquareChatProfileImage();
    if (this_present_notifiedUpdateSquareChatProfileImage || that_present_notifiedUpdateSquareChatProfileImage) {
      if (!(this_present_notifiedUpdateSquareChatProfileImage && that_present_notifiedUpdateSquareChatProfileImage))
        return false;
      if (!this.notifiedUpdateSquareChatProfileImage.equals(that.notifiedUpdateSquareChatProfileImage))
        return false;
    }

    boolean this_present_notifiedUpdateSquareStatus = true && this.isSetNotifiedUpdateSquareStatus();
    boolean that_present_notifiedUpdateSquareStatus = true && that.isSetNotifiedUpdateSquareStatus();
    if (this_present_notifiedUpdateSquareStatus || that_present_notifiedUpdateSquareStatus) {
      if (!(this_present_notifiedUpdateSquareStatus && that_present_notifiedUpdateSquareStatus))
        return false;
      if (!this.notifiedUpdateSquareStatus.equals(that.notifiedUpdateSquareStatus))
        return false;
    }

    boolean this_present_notifiedUpdateSquareChatStatus = true && this.isSetNotifiedUpdateSquareChatStatus();
    boolean that_present_notifiedUpdateSquareChatStatus = true && that.isSetNotifiedUpdateSquareChatStatus();
    if (this_present_notifiedUpdateSquareChatStatus || that_present_notifiedUpdateSquareChatStatus) {
      if (!(this_present_notifiedUpdateSquareChatStatus && that_present_notifiedUpdateSquareChatStatus))
        return false;
      if (!this.notifiedUpdateSquareChatStatus.equals(that.notifiedUpdateSquareChatStatus))
        return false;
    }

    boolean this_present_notifiedCreateSquareMember = true && this.isSetNotifiedCreateSquareMember();
    boolean that_present_notifiedCreateSquareMember = true && that.isSetNotifiedCreateSquareMember();
    if (this_present_notifiedCreateSquareMember || that_present_notifiedCreateSquareMember) {
      if (!(this_present_notifiedCreateSquareMember && that_present_notifiedCreateSquareMember))
        return false;
      if (!this.notifiedCreateSquareMember.equals(that.notifiedCreateSquareMember))
        return false;
    }

    boolean this_present_notifiedCreateSquareChatMember = true && this.isSetNotifiedCreateSquareChatMember();
    boolean that_present_notifiedCreateSquareChatMember = true && that.isSetNotifiedCreateSquareChatMember();
    if (this_present_notifiedCreateSquareChatMember || that_present_notifiedCreateSquareChatMember) {
      if (!(this_present_notifiedCreateSquareChatMember && that_present_notifiedCreateSquareChatMember))
        return false;
      if (!this.notifiedCreateSquareChatMember.equals(that.notifiedCreateSquareChatMember))
        return false;
    }

    boolean this_present_notifiedUpdateSquareMemberRelation = true && this.isSetNotifiedUpdateSquareMemberRelation();
    boolean that_present_notifiedUpdateSquareMemberRelation = true && that.isSetNotifiedUpdateSquareMemberRelation();
    if (this_present_notifiedUpdateSquareMemberRelation || that_present_notifiedUpdateSquareMemberRelation) {
      if (!(this_present_notifiedUpdateSquareMemberRelation && that_present_notifiedUpdateSquareMemberRelation))
        return false;
      if (!this.notifiedUpdateSquareMemberRelation.equals(that.notifiedUpdateSquareMemberRelation))
        return false;
    }

    boolean this_present_notifiedUpdateSquare = true && this.isSetNotifiedUpdateSquare();
    boolean that_present_notifiedUpdateSquare = true && that.isSetNotifiedUpdateSquare();
    if (this_present_notifiedUpdateSquare || that_present_notifiedUpdateSquare) {
      if (!(this_present_notifiedUpdateSquare && that_present_notifiedUpdateSquare))
        return false;
      if (!this.notifiedUpdateSquare.equals(that.notifiedUpdateSquare))
        return false;
    }

    boolean this_present_notifiedUpdateSquareMember = true && this.isSetNotifiedUpdateSquareMember();
    boolean that_present_notifiedUpdateSquareMember = true && that.isSetNotifiedUpdateSquareMember();
    if (this_present_notifiedUpdateSquareMember || that_present_notifiedUpdateSquareMember) {
      if (!(this_present_notifiedUpdateSquareMember && that_present_notifiedUpdateSquareMember))
        return false;
      if (!this.notifiedUpdateSquareMember.equals(that.notifiedUpdateSquareMember))
        return false;
    }

    boolean this_present_notifiedUpdateSquareChat = true && this.isSetNotifiedUpdateSquareChat();
    boolean that_present_notifiedUpdateSquareChat = true && that.isSetNotifiedUpdateSquareChat();
    if (this_present_notifiedUpdateSquareChat || that_present_notifiedUpdateSquareChat) {
      if (!(this_present_notifiedUpdateSquareChat && that_present_notifiedUpdateSquareChat))
        return false;
      if (!this.notifiedUpdateSquareChat.equals(that.notifiedUpdateSquareChat))
        return false;
    }

    boolean this_present_notificationJoinRequest = true && this.isSetNotificationJoinRequest();
    boolean that_present_notificationJoinRequest = true && that.isSetNotificationJoinRequest();
    if (this_present_notificationJoinRequest || that_present_notificationJoinRequest) {
      if (!(this_present_notificationJoinRequest && that_present_notificationJoinRequest))
        return false;
      if (!this.notificationJoinRequest.equals(that.notificationJoinRequest))
        return false;
    }

    boolean this_present_notificationJoined = true && this.isSetNotificationJoined();
    boolean that_present_notificationJoined = true && that.isSetNotificationJoined();
    if (this_present_notificationJoined || that_present_notificationJoined) {
      if (!(this_present_notificationJoined && that_present_notificationJoined))
        return false;
      if (!this.notificationJoined.equals(that.notificationJoined))
        return false;
    }

    boolean this_present_notificationPromoteCoadmin = true && this.isSetNotificationPromoteCoadmin();
    boolean that_present_notificationPromoteCoadmin = true && that.isSetNotificationPromoteCoadmin();
    if (this_present_notificationPromoteCoadmin || that_present_notificationPromoteCoadmin) {
      if (!(this_present_notificationPromoteCoadmin && that_present_notificationPromoteCoadmin))
        return false;
      if (!this.notificationPromoteCoadmin.equals(that.notificationPromoteCoadmin))
        return false;
    }

    boolean this_present_notificationPromoteAdmin = true && this.isSetNotificationPromoteAdmin();
    boolean that_present_notificationPromoteAdmin = true && that.isSetNotificationPromoteAdmin();
    if (this_present_notificationPromoteAdmin || that_present_notificationPromoteAdmin) {
      if (!(this_present_notificationPromoteAdmin && that_present_notificationPromoteAdmin))
        return false;
      if (!this.notificationPromoteAdmin.equals(that.notificationPromoteAdmin))
        return false;
    }

    boolean this_present_notificationDemoteMember = true && this.isSetNotificationDemoteMember();
    boolean that_present_notificationDemoteMember = true && that.isSetNotificationDemoteMember();
    if (this_present_notificationDemoteMember || that_present_notificationDemoteMember) {
      if (!(this_present_notificationDemoteMember && that_present_notificationDemoteMember))
        return false;
      if (!this.notificationDemoteMember.equals(that.notificationDemoteMember))
        return false;
    }

    boolean this_present_notificationKickedOut = true && this.isSetNotificationKickedOut();
    boolean that_present_notificationKickedOut = true && that.isSetNotificationKickedOut();
    if (this_present_notificationKickedOut || that_present_notificationKickedOut) {
      if (!(this_present_notificationKickedOut && that_present_notificationKickedOut))
        return false;
      if (!this.notificationKickedOut.equals(that.notificationKickedOut))
        return false;
    }

    boolean this_present_notificationSquareDelete = true && this.isSetNotificationSquareDelete();
    boolean that_present_notificationSquareDelete = true && that.isSetNotificationSquareDelete();
    if (this_present_notificationSquareDelete || that_present_notificationSquareDelete) {
      if (!(this_present_notificationSquareDelete && that_present_notificationSquareDelete))
        return false;
      if (!this.notificationSquareDelete.equals(that.notificationSquareDelete))
        return false;
    }

    boolean this_present_notificationSquareChatDelete = true && this.isSetNotificationSquareChatDelete();
    boolean that_present_notificationSquareChatDelete = true && that.isSetNotificationSquareChatDelete();
    if (this_present_notificationSquareChatDelete || that_present_notificationSquareChatDelete) {
      if (!(this_present_notificationSquareChatDelete && that_present_notificationSquareChatDelete))
        return false;
      if (!this.notificationSquareChatDelete.equals(that.notificationSquareChatDelete))
        return false;
    }

    boolean this_present_notificationMessage = true && this.isSetNotificationMessage();
    boolean that_present_notificationMessage = true && that.isSetNotificationMessage();
    if (this_present_notificationMessage || that_present_notificationMessage) {
      if (!(this_present_notificationMessage && that_present_notificationMessage))
        return false;
      if (!this.notificationMessage.equals(that.notificationMessage))
        return false;
    }

    boolean this_present_notifiedUpdateSquareChatMember = true && this.isSetNotifiedUpdateSquareChatMember();
    boolean that_present_notifiedUpdateSquareChatMember = true && that.isSetNotifiedUpdateSquareChatMember();
    if (this_present_notifiedUpdateSquareChatMember || that_present_notifiedUpdateSquareChatMember) {
      if (!(this_present_notifiedUpdateSquareChatMember && that_present_notifiedUpdateSquareChatMember))
        return false;
      if (!this.notifiedUpdateSquareChatMember.equals(that.notifiedUpdateSquareChatMember))
        return false;
    }

    boolean this_present_notifiedUpdateSquareAuthority = true && this.isSetNotifiedUpdateSquareAuthority();
    boolean that_present_notifiedUpdateSquareAuthority = true && that.isSetNotifiedUpdateSquareAuthority();
    if (this_present_notifiedUpdateSquareAuthority || that_present_notifiedUpdateSquareAuthority) {
      if (!(this_present_notifiedUpdateSquareAuthority && that_present_notifiedUpdateSquareAuthority))
        return false;
      if (!this.notifiedUpdateSquareAuthority.equals(that.notifiedUpdateSquareAuthority))
        return false;
    }

    boolean this_present_notifiedUpdateSquareFeatureSet = true && this.isSetNotifiedUpdateSquareFeatureSet();
    boolean that_present_notifiedUpdateSquareFeatureSet = true && that.isSetNotifiedUpdateSquareFeatureSet();
    if (this_present_notifiedUpdateSquareFeatureSet || that_present_notifiedUpdateSquareFeatureSet) {
      if (!(this_present_notifiedUpdateSquareFeatureSet && that_present_notifiedUpdateSquareFeatureSet))
        return false;
      if (!this.notifiedUpdateSquareFeatureSet.equals(that.notifiedUpdateSquareFeatureSet))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetReceiveMessage()) ? 131071 : 524287);
    if (isSetReceiveMessage())
      hashCode = hashCode * 8191 + receiveMessage.hashCode();

    hashCode = hashCode * 8191 + ((isSetSendMessage()) ? 131071 : 524287);
    if (isSetSendMessage())
      hashCode = hashCode * 8191 + sendMessage.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedJoinSquareChat()) ? 131071 : 524287);
    if (isSetNotifiedJoinSquareChat())
      hashCode = hashCode * 8191 + notifiedJoinSquareChat.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedInviteIntoSquareChat()) ? 131071 : 524287);
    if (isSetNotifiedInviteIntoSquareChat())
      hashCode = hashCode * 8191 + notifiedInviteIntoSquareChat.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedLeaveSquareChat()) ? 131071 : 524287);
    if (isSetNotifiedLeaveSquareChat())
      hashCode = hashCode * 8191 + notifiedLeaveSquareChat.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedDestroyMessage()) ? 131071 : 524287);
    if (isSetNotifiedDestroyMessage())
      hashCode = hashCode * 8191 + notifiedDestroyMessage.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedMarkAsRead()) ? 131071 : 524287);
    if (isSetNotifiedMarkAsRead())
      hashCode = hashCode * 8191 + notifiedMarkAsRead.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareMemberProfile()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareMemberProfile())
      hashCode = hashCode * 8191 + notifiedUpdateSquareMemberProfile.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedKickoutFromSquare()) ? 131071 : 524287);
    if (isSetNotifiedKickoutFromSquare())
      hashCode = hashCode * 8191 + notifiedKickoutFromSquare.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedShutdownSquare()) ? 131071 : 524287);
    if (isSetNotifiedShutdownSquare())
      hashCode = hashCode * 8191 + notifiedShutdownSquare.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedDeleteSquareChat()) ? 131071 : 524287);
    if (isSetNotifiedDeleteSquareChat())
      hashCode = hashCode * 8191 + notifiedDeleteSquareChat.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareChatProfileName()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareChatProfileName())
      hashCode = hashCode * 8191 + notifiedUpdateSquareChatProfileName.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareChatProfileImage()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareChatProfileImage())
      hashCode = hashCode * 8191 + notifiedUpdateSquareChatProfileImage.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareStatus()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareStatus())
      hashCode = hashCode * 8191 + notifiedUpdateSquareStatus.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareChatStatus()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareChatStatus())
      hashCode = hashCode * 8191 + notifiedUpdateSquareChatStatus.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedCreateSquareMember()) ? 131071 : 524287);
    if (isSetNotifiedCreateSquareMember())
      hashCode = hashCode * 8191 + notifiedCreateSquareMember.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedCreateSquareChatMember()) ? 131071 : 524287);
    if (isSetNotifiedCreateSquareChatMember())
      hashCode = hashCode * 8191 + notifiedCreateSquareChatMember.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareMemberRelation()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareMemberRelation())
      hashCode = hashCode * 8191 + notifiedUpdateSquareMemberRelation.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquare()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquare())
      hashCode = hashCode * 8191 + notifiedUpdateSquare.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareMember()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareMember())
      hashCode = hashCode * 8191 + notifiedUpdateSquareMember.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareChat()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareChat())
      hashCode = hashCode * 8191 + notifiedUpdateSquareChat.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotificationJoinRequest()) ? 131071 : 524287);
    if (isSetNotificationJoinRequest())
      hashCode = hashCode * 8191 + notificationJoinRequest.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotificationJoined()) ? 131071 : 524287);
    if (isSetNotificationJoined())
      hashCode = hashCode * 8191 + notificationJoined.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotificationPromoteCoadmin()) ? 131071 : 524287);
    if (isSetNotificationPromoteCoadmin())
      hashCode = hashCode * 8191 + notificationPromoteCoadmin.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotificationPromoteAdmin()) ? 131071 : 524287);
    if (isSetNotificationPromoteAdmin())
      hashCode = hashCode * 8191 + notificationPromoteAdmin.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotificationDemoteMember()) ? 131071 : 524287);
    if (isSetNotificationDemoteMember())
      hashCode = hashCode * 8191 + notificationDemoteMember.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotificationKickedOut()) ? 131071 : 524287);
    if (isSetNotificationKickedOut())
      hashCode = hashCode * 8191 + notificationKickedOut.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotificationSquareDelete()) ? 131071 : 524287);
    if (isSetNotificationSquareDelete())
      hashCode = hashCode * 8191 + notificationSquareDelete.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotificationSquareChatDelete()) ? 131071 : 524287);
    if (isSetNotificationSquareChatDelete())
      hashCode = hashCode * 8191 + notificationSquareChatDelete.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotificationMessage()) ? 131071 : 524287);
    if (isSetNotificationMessage())
      hashCode = hashCode * 8191 + notificationMessage.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareChatMember()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareChatMember())
      hashCode = hashCode * 8191 + notifiedUpdateSquareChatMember.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareAuthority()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareAuthority())
      hashCode = hashCode * 8191 + notifiedUpdateSquareAuthority.hashCode();

    hashCode = hashCode * 8191 + ((isSetNotifiedUpdateSquareFeatureSet()) ? 131071 : 524287);
    if (isSetNotifiedUpdateSquareFeatureSet())
      hashCode = hashCode * 8191 + notifiedUpdateSquareFeatureSet.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SquareEventPayload other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetReceiveMessage()).compareTo(other.isSetReceiveMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReceiveMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.receiveMessage, other.receiveMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSendMessage()).compareTo(other.isSetSendMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSendMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sendMessage, other.sendMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedJoinSquareChat()).compareTo(other.isSetNotifiedJoinSquareChat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedJoinSquareChat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedJoinSquareChat, other.notifiedJoinSquareChat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedInviteIntoSquareChat()).compareTo(other.isSetNotifiedInviteIntoSquareChat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedInviteIntoSquareChat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedInviteIntoSquareChat, other.notifiedInviteIntoSquareChat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedLeaveSquareChat()).compareTo(other.isSetNotifiedLeaveSquareChat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedLeaveSquareChat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedLeaveSquareChat, other.notifiedLeaveSquareChat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedDestroyMessage()).compareTo(other.isSetNotifiedDestroyMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedDestroyMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedDestroyMessage, other.notifiedDestroyMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedMarkAsRead()).compareTo(other.isSetNotifiedMarkAsRead());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedMarkAsRead()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedMarkAsRead, other.notifiedMarkAsRead);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareMemberProfile()).compareTo(other.isSetNotifiedUpdateSquareMemberProfile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareMemberProfile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareMemberProfile, other.notifiedUpdateSquareMemberProfile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedKickoutFromSquare()).compareTo(other.isSetNotifiedKickoutFromSquare());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedKickoutFromSquare()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedKickoutFromSquare, other.notifiedKickoutFromSquare);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedShutdownSquare()).compareTo(other.isSetNotifiedShutdownSquare());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedShutdownSquare()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedShutdownSquare, other.notifiedShutdownSquare);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedDeleteSquareChat()).compareTo(other.isSetNotifiedDeleteSquareChat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedDeleteSquareChat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedDeleteSquareChat, other.notifiedDeleteSquareChat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareChatProfileName()).compareTo(other.isSetNotifiedUpdateSquareChatProfileName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareChatProfileName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareChatProfileName, other.notifiedUpdateSquareChatProfileName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareChatProfileImage()).compareTo(other.isSetNotifiedUpdateSquareChatProfileImage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareChatProfileImage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareChatProfileImage, other.notifiedUpdateSquareChatProfileImage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareStatus()).compareTo(other.isSetNotifiedUpdateSquareStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareStatus, other.notifiedUpdateSquareStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareChatStatus()).compareTo(other.isSetNotifiedUpdateSquareChatStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareChatStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareChatStatus, other.notifiedUpdateSquareChatStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedCreateSquareMember()).compareTo(other.isSetNotifiedCreateSquareMember());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedCreateSquareMember()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedCreateSquareMember, other.notifiedCreateSquareMember);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedCreateSquareChatMember()).compareTo(other.isSetNotifiedCreateSquareChatMember());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedCreateSquareChatMember()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedCreateSquareChatMember, other.notifiedCreateSquareChatMember);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareMemberRelation()).compareTo(other.isSetNotifiedUpdateSquareMemberRelation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareMemberRelation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareMemberRelation, other.notifiedUpdateSquareMemberRelation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquare()).compareTo(other.isSetNotifiedUpdateSquare());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquare()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquare, other.notifiedUpdateSquare);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareMember()).compareTo(other.isSetNotifiedUpdateSquareMember());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareMember()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareMember, other.notifiedUpdateSquareMember);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareChat()).compareTo(other.isSetNotifiedUpdateSquareChat());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareChat()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareChat, other.notifiedUpdateSquareChat);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotificationJoinRequest()).compareTo(other.isSetNotificationJoinRequest());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationJoinRequest()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notificationJoinRequest, other.notificationJoinRequest);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotificationJoined()).compareTo(other.isSetNotificationJoined());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationJoined()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notificationJoined, other.notificationJoined);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotificationPromoteCoadmin()).compareTo(other.isSetNotificationPromoteCoadmin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationPromoteCoadmin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notificationPromoteCoadmin, other.notificationPromoteCoadmin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotificationPromoteAdmin()).compareTo(other.isSetNotificationPromoteAdmin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationPromoteAdmin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notificationPromoteAdmin, other.notificationPromoteAdmin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotificationDemoteMember()).compareTo(other.isSetNotificationDemoteMember());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationDemoteMember()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notificationDemoteMember, other.notificationDemoteMember);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotificationKickedOut()).compareTo(other.isSetNotificationKickedOut());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationKickedOut()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notificationKickedOut, other.notificationKickedOut);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotificationSquareDelete()).compareTo(other.isSetNotificationSquareDelete());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationSquareDelete()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notificationSquareDelete, other.notificationSquareDelete);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotificationSquareChatDelete()).compareTo(other.isSetNotificationSquareChatDelete());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationSquareChatDelete()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notificationSquareChatDelete, other.notificationSquareChatDelete);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotificationMessage()).compareTo(other.isSetNotificationMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotificationMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notificationMessage, other.notificationMessage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareChatMember()).compareTo(other.isSetNotifiedUpdateSquareChatMember());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareChatMember()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareChatMember, other.notifiedUpdateSquareChatMember);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareAuthority()).compareTo(other.isSetNotifiedUpdateSquareAuthority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareAuthority()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareAuthority, other.notifiedUpdateSquareAuthority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNotifiedUpdateSquareFeatureSet()).compareTo(other.isSetNotifiedUpdateSquareFeatureSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNotifiedUpdateSquareFeatureSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.notifiedUpdateSquareFeatureSet, other.notifiedUpdateSquareFeatureSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SquareEventPayload(");
    boolean first = true;

    sb.append("receiveMessage:");
    if (this.receiveMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.receiveMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sendMessage:");
    if (this.sendMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.sendMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedJoinSquareChat:");
    if (this.notifiedJoinSquareChat == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedJoinSquareChat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedInviteIntoSquareChat:");
    if (this.notifiedInviteIntoSquareChat == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedInviteIntoSquareChat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedLeaveSquareChat:");
    if (this.notifiedLeaveSquareChat == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedLeaveSquareChat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedDestroyMessage:");
    if (this.notifiedDestroyMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedDestroyMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedMarkAsRead:");
    if (this.notifiedMarkAsRead == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedMarkAsRead);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareMemberProfile:");
    if (this.notifiedUpdateSquareMemberProfile == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareMemberProfile);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedKickoutFromSquare:");
    if (this.notifiedKickoutFromSquare == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedKickoutFromSquare);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedShutdownSquare:");
    if (this.notifiedShutdownSquare == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedShutdownSquare);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedDeleteSquareChat:");
    if (this.notifiedDeleteSquareChat == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedDeleteSquareChat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareChatProfileName:");
    if (this.notifiedUpdateSquareChatProfileName == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareChatProfileName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareChatProfileImage:");
    if (this.notifiedUpdateSquareChatProfileImage == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareChatProfileImage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareStatus:");
    if (this.notifiedUpdateSquareStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareChatStatus:");
    if (this.notifiedUpdateSquareChatStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareChatStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedCreateSquareMember:");
    if (this.notifiedCreateSquareMember == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedCreateSquareMember);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedCreateSquareChatMember:");
    if (this.notifiedCreateSquareChatMember == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedCreateSquareChatMember);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareMemberRelation:");
    if (this.notifiedUpdateSquareMemberRelation == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareMemberRelation);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquare:");
    if (this.notifiedUpdateSquare == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquare);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareMember:");
    if (this.notifiedUpdateSquareMember == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareMember);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareChat:");
    if (this.notifiedUpdateSquareChat == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareChat);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationJoinRequest:");
    if (this.notificationJoinRequest == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationJoinRequest);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationJoined:");
    if (this.notificationJoined == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationJoined);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationPromoteCoadmin:");
    if (this.notificationPromoteCoadmin == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationPromoteCoadmin);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationPromoteAdmin:");
    if (this.notificationPromoteAdmin == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationPromoteAdmin);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationDemoteMember:");
    if (this.notificationDemoteMember == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationDemoteMember);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationKickedOut:");
    if (this.notificationKickedOut == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationKickedOut);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationSquareDelete:");
    if (this.notificationSquareDelete == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationSquareDelete);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationSquareChatDelete:");
    if (this.notificationSquareChatDelete == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationSquareChatDelete);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notificationMessage:");
    if (this.notificationMessage == null) {
      sb.append("null");
    } else {
      sb.append(this.notificationMessage);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareChatMember:");
    if (this.notifiedUpdateSquareChatMember == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareChatMember);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareAuthority:");
    if (this.notifiedUpdateSquareAuthority == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareAuthority);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("notifiedUpdateSquareFeatureSet:");
    if (this.notifiedUpdateSquareFeatureSet == null) {
      sb.append("null");
    } else {
      sb.append(this.notifiedUpdateSquareFeatureSet);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (receiveMessage != null) {
      receiveMessage.validate();
    }
    if (sendMessage != null) {
      sendMessage.validate();
    }
    if (notifiedJoinSquareChat != null) {
      notifiedJoinSquareChat.validate();
    }
    if (notifiedInviteIntoSquareChat != null) {
      notifiedInviteIntoSquareChat.validate();
    }
    if (notifiedLeaveSquareChat != null) {
      notifiedLeaveSquareChat.validate();
    }
    if (notifiedDestroyMessage != null) {
      notifiedDestroyMessage.validate();
    }
    if (notifiedMarkAsRead != null) {
      notifiedMarkAsRead.validate();
    }
    if (notifiedUpdateSquareMemberProfile != null) {
      notifiedUpdateSquareMemberProfile.validate();
    }
    if (notifiedKickoutFromSquare != null) {
      notifiedKickoutFromSquare.validate();
    }
    if (notifiedShutdownSquare != null) {
      notifiedShutdownSquare.validate();
    }
    if (notifiedDeleteSquareChat != null) {
      notifiedDeleteSquareChat.validate();
    }
    if (notifiedUpdateSquareChatProfileName != null) {
      notifiedUpdateSquareChatProfileName.validate();
    }
    if (notifiedUpdateSquareChatProfileImage != null) {
      notifiedUpdateSquareChatProfileImage.validate();
    }
    if (notifiedUpdateSquareStatus != null) {
      notifiedUpdateSquareStatus.validate();
    }
    if (notifiedUpdateSquareChatStatus != null) {
      notifiedUpdateSquareChatStatus.validate();
    }
    if (notifiedCreateSquareMember != null) {
      notifiedCreateSquareMember.validate();
    }
    if (notifiedCreateSquareChatMember != null) {
      notifiedCreateSquareChatMember.validate();
    }
    if (notifiedUpdateSquareMemberRelation != null) {
      notifiedUpdateSquareMemberRelation.validate();
    }
    if (notifiedUpdateSquare != null) {
      notifiedUpdateSquare.validate();
    }
    if (notifiedUpdateSquareMember != null) {
      notifiedUpdateSquareMember.validate();
    }
    if (notifiedUpdateSquareChat != null) {
      notifiedUpdateSquareChat.validate();
    }
    if (notificationJoinRequest != null) {
      notificationJoinRequest.validate();
    }
    if (notificationJoined != null) {
      notificationJoined.validate();
    }
    if (notificationPromoteCoadmin != null) {
      notificationPromoteCoadmin.validate();
    }
    if (notificationPromoteAdmin != null) {
      notificationPromoteAdmin.validate();
    }
    if (notificationDemoteMember != null) {
      notificationDemoteMember.validate();
    }
    if (notificationKickedOut != null) {
      notificationKickedOut.validate();
    }
    if (notificationSquareDelete != null) {
      notificationSquareDelete.validate();
    }
    if (notificationSquareChatDelete != null) {
      notificationSquareChatDelete.validate();
    }
    if (notificationMessage != null) {
      notificationMessage.validate();
    }
    if (notifiedUpdateSquareChatMember != null) {
      notifiedUpdateSquareChatMember.validate();
    }
    if (notifiedUpdateSquareAuthority != null) {
      notifiedUpdateSquareAuthority.validate();
    }
    if (notifiedUpdateSquareFeatureSet != null) {
      notifiedUpdateSquareFeatureSet.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SquareEventPayloadStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SquareEventPayloadStandardScheme getScheme() {
      return new SquareEventPayloadStandardScheme();
    }
  }

  private static class SquareEventPayloadStandardScheme extends org.apache.thrift.scheme.StandardScheme<SquareEventPayload> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SquareEventPayload struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RECEIVE_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.receiveMessage = new SquareEventReceiveMessage();
              struct.receiveMessage.read(iprot);
              struct.setReceiveMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SEND_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.sendMessage = new SquareEventSendMessage();
              struct.sendMessage.read(iprot);
              struct.setSendMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NOTIFIED_JOIN_SQUARE_CHAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedJoinSquareChat = new SquareEventNotifiedJoinSquareChat();
              struct.notifiedJoinSquareChat.read(iprot);
              struct.setNotifiedJoinSquareChatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NOTIFIED_INVITE_INTO_SQUARE_CHAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedInviteIntoSquareChat = new SquareEventNotifiedInviteIntoSquareChat();
              struct.notifiedInviteIntoSquareChat.read(iprot);
              struct.setNotifiedInviteIntoSquareChatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NOTIFIED_LEAVE_SQUARE_CHAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedLeaveSquareChat = new SquareEventNotifiedLeaveSquareChat();
              struct.notifiedLeaveSquareChat.read(iprot);
              struct.setNotifiedLeaveSquareChatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NOTIFIED_DESTROY_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedDestroyMessage = new SquareEventNotifiedDestroyMessage();
              struct.notifiedDestroyMessage.read(iprot);
              struct.setNotifiedDestroyMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NOTIFIED_MARK_AS_READ
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedMarkAsRead = new SquareEventNotifiedMarkAsRead();
              struct.notifiedMarkAsRead.read(iprot);
              struct.setNotifiedMarkAsReadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareMemberProfile = new SquareEventNotifiedUpdateSquareMemberProfile();
              struct.notifiedUpdateSquareMemberProfile.read(iprot);
              struct.setNotifiedUpdateSquareMemberProfileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // NOTIFIED_KICKOUT_FROM_SQUARE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedKickoutFromSquare = new SquareEventNotifiedKickoutFromSquare();
              struct.notifiedKickoutFromSquare.read(iprot);
              struct.setNotifiedKickoutFromSquareIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // NOTIFIED_SHUTDOWN_SQUARE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedShutdownSquare = new SquareEventNotifiedShutdownSquare();
              struct.notifiedShutdownSquare.read(iprot);
              struct.setNotifiedShutdownSquareIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // NOTIFIED_DELETE_SQUARE_CHAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedDeleteSquareChat = new SquareEventNotifiedDeleteSquareChat();
              struct.notifiedDeleteSquareChat.read(iprot);
              struct.setNotifiedDeleteSquareChatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareChatProfileName = new SquareEventNotifiedUpdateSquareChatProfileName();
              struct.notifiedUpdateSquareChatProfileName.read(iprot);
              struct.setNotifiedUpdateSquareChatProfileNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareChatProfileImage = new SquareEventNotifiedUpdateSquareChatProfileImage();
              struct.notifiedUpdateSquareChatProfileImage.read(iprot);
              struct.setNotifiedUpdateSquareChatProfileImageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // NOTIFIED_UPDATE_SQUARE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareStatus = new SquareEventNotifiedUpdateSquareStatus();
              struct.notifiedUpdateSquareStatus.read(iprot);
              struct.setNotifiedUpdateSquareStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // NOTIFIED_UPDATE_SQUARE_CHAT_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareChatStatus = new SquareEventNotifiedUpdateSquareChatStatus();
              struct.notifiedUpdateSquareChatStatus.read(iprot);
              struct.setNotifiedUpdateSquareChatStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // NOTIFIED_CREATE_SQUARE_MEMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedCreateSquareMember = new SquareEventNotifiedCreateSquareMember();
              struct.notifiedCreateSquareMember.read(iprot);
              struct.setNotifiedCreateSquareMemberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // NOTIFIED_CREATE_SQUARE_CHAT_MEMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedCreateSquareChatMember = new SquareEventNotifiedCreateSquareChatMember();
              struct.notifiedCreateSquareChatMember.read(iprot);
              struct.setNotifiedCreateSquareChatMemberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareMemberRelation = new SquareEventNotifiedUpdateSquareMemberRelation();
              struct.notifiedUpdateSquareMemberRelation.read(iprot);
              struct.setNotifiedUpdateSquareMemberRelationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // NOTIFIED_UPDATE_SQUARE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquare = new SquareEventNotifiedUpdateSquare();
              struct.notifiedUpdateSquare.read(iprot);
              struct.setNotifiedUpdateSquareIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // NOTIFIED_UPDATE_SQUARE_MEMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareMember = new SquareEventNotifiedUpdateSquareMember();
              struct.notifiedUpdateSquareMember.read(iprot);
              struct.setNotifiedUpdateSquareMemberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // NOTIFIED_UPDATE_SQUARE_CHAT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareChat = new SquareEventNotifiedUpdateSquareChat();
              struct.notifiedUpdateSquareChat.read(iprot);
              struct.setNotifiedUpdateSquareChatIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // NOTIFICATION_JOIN_REQUEST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notificationJoinRequest = new SquareEventNotificationJoinRequest();
              struct.notificationJoinRequest.read(iprot);
              struct.setNotificationJoinRequestIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // NOTIFICATION_JOINED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notificationJoined = new SquareEventNotificationMemberUpdate();
              struct.notificationJoined.read(iprot);
              struct.setNotificationJoinedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // NOTIFICATION_PROMOTE_COADMIN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notificationPromoteCoadmin = new SquareEventNotificationMemberUpdate();
              struct.notificationPromoteCoadmin.read(iprot);
              struct.setNotificationPromoteCoadminIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // NOTIFICATION_PROMOTE_ADMIN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notificationPromoteAdmin = new SquareEventNotificationMemberUpdate();
              struct.notificationPromoteAdmin.read(iprot);
              struct.setNotificationPromoteAdminIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // NOTIFICATION_DEMOTE_MEMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notificationDemoteMember = new SquareEventNotificationMemberUpdate();
              struct.notificationDemoteMember.read(iprot);
              struct.setNotificationDemoteMemberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // NOTIFICATION_KICKED_OUT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notificationKickedOut = new SquareEventNotificationMemberUpdate();
              struct.notificationKickedOut.read(iprot);
              struct.setNotificationKickedOutIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // NOTIFICATION_SQUARE_DELETE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notificationSquareDelete = new SquareEventNotificationSquareDelete();
              struct.notificationSquareDelete.read(iprot);
              struct.setNotificationSquareDeleteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // NOTIFICATION_SQUARE_CHAT_DELETE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notificationSquareChatDelete = new SquareEventNotificationSquareChatDelete();
              struct.notificationSquareChatDelete.read(iprot);
              struct.setNotificationSquareChatDeleteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // NOTIFICATION_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notificationMessage = new SquareEventNotificationMessage();
              struct.notificationMessage.read(iprot);
              struct.setNotificationMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareChatMember = new SquareEventNotifiedUpdateSquareChatMember();
              struct.notifiedUpdateSquareChatMember.read(iprot);
              struct.setNotifiedUpdateSquareChatMemberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // NOTIFIED_UPDATE_SQUARE_AUTHORITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareAuthority = new SquareEventNotifiedUpdateSquareAuthority();
              struct.notifiedUpdateSquareAuthority.read(iprot);
              struct.setNotifiedUpdateSquareAuthorityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // NOTIFIED_UPDATE_SQUARE_FEATURE_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.notifiedUpdateSquareFeatureSet = new SquareEventNotifiedUpdateSquareFeatureSet();
              struct.notifiedUpdateSquareFeatureSet.read(iprot);
              struct.setNotifiedUpdateSquareFeatureSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SquareEventPayload struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.receiveMessage != null) {
        oprot.writeFieldBegin(RECEIVE_MESSAGE_FIELD_DESC);
        struct.receiveMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.sendMessage != null) {
        oprot.writeFieldBegin(SEND_MESSAGE_FIELD_DESC);
        struct.sendMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedJoinSquareChat != null) {
        oprot.writeFieldBegin(NOTIFIED_JOIN_SQUARE_CHAT_FIELD_DESC);
        struct.notifiedJoinSquareChat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedInviteIntoSquareChat != null) {
        oprot.writeFieldBegin(NOTIFIED_INVITE_INTO_SQUARE_CHAT_FIELD_DESC);
        struct.notifiedInviteIntoSquareChat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedLeaveSquareChat != null) {
        oprot.writeFieldBegin(NOTIFIED_LEAVE_SQUARE_CHAT_FIELD_DESC);
        struct.notifiedLeaveSquareChat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedDestroyMessage != null) {
        oprot.writeFieldBegin(NOTIFIED_DESTROY_MESSAGE_FIELD_DESC);
        struct.notifiedDestroyMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedMarkAsRead != null) {
        oprot.writeFieldBegin(NOTIFIED_MARK_AS_READ_FIELD_DESC);
        struct.notifiedMarkAsRead.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareMemberProfile != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE_FIELD_DESC);
        struct.notifiedUpdateSquareMemberProfile.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquare != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_FIELD_DESC);
        struct.notifiedUpdateSquare.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareMember != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_MEMBER_FIELD_DESC);
        struct.notifiedUpdateSquareMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareChat != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_CHAT_FIELD_DESC);
        struct.notifiedUpdateSquareChat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareChatMember != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER_FIELD_DESC);
        struct.notifiedUpdateSquareChatMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareAuthority != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_AUTHORITY_FIELD_DESC);
        struct.notifiedUpdateSquareAuthority.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareStatus != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_STATUS_FIELD_DESC);
        struct.notifiedUpdateSquareStatus.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareChatStatus != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_CHAT_STATUS_FIELD_DESC);
        struct.notifiedUpdateSquareChatStatus.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedCreateSquareMember != null) {
        oprot.writeFieldBegin(NOTIFIED_CREATE_SQUARE_MEMBER_FIELD_DESC);
        struct.notifiedCreateSquareMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedCreateSquareChatMember != null) {
        oprot.writeFieldBegin(NOTIFIED_CREATE_SQUARE_CHAT_MEMBER_FIELD_DESC);
        struct.notifiedCreateSquareChatMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareMemberRelation != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION_FIELD_DESC);
        struct.notifiedUpdateSquareMemberRelation.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedShutdownSquare != null) {
        oprot.writeFieldBegin(NOTIFIED_SHUTDOWN_SQUARE_FIELD_DESC);
        struct.notifiedShutdownSquare.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedKickoutFromSquare != null) {
        oprot.writeFieldBegin(NOTIFIED_KICKOUT_FROM_SQUARE_FIELD_DESC);
        struct.notifiedKickoutFromSquare.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedDeleteSquareChat != null) {
        oprot.writeFieldBegin(NOTIFIED_DELETE_SQUARE_CHAT_FIELD_DESC);
        struct.notifiedDeleteSquareChat.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notificationJoinRequest != null) {
        oprot.writeFieldBegin(NOTIFICATION_JOIN_REQUEST_FIELD_DESC);
        struct.notificationJoinRequest.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notificationJoined != null) {
        oprot.writeFieldBegin(NOTIFICATION_JOINED_FIELD_DESC);
        struct.notificationJoined.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notificationPromoteCoadmin != null) {
        oprot.writeFieldBegin(NOTIFICATION_PROMOTE_COADMIN_FIELD_DESC);
        struct.notificationPromoteCoadmin.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notificationPromoteAdmin != null) {
        oprot.writeFieldBegin(NOTIFICATION_PROMOTE_ADMIN_FIELD_DESC);
        struct.notificationPromoteAdmin.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notificationDemoteMember != null) {
        oprot.writeFieldBegin(NOTIFICATION_DEMOTE_MEMBER_FIELD_DESC);
        struct.notificationDemoteMember.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notificationKickedOut != null) {
        oprot.writeFieldBegin(NOTIFICATION_KICKED_OUT_FIELD_DESC);
        struct.notificationKickedOut.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notificationSquareDelete != null) {
        oprot.writeFieldBegin(NOTIFICATION_SQUARE_DELETE_FIELD_DESC);
        struct.notificationSquareDelete.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notificationSquareChatDelete != null) {
        oprot.writeFieldBegin(NOTIFICATION_SQUARE_CHAT_DELETE_FIELD_DESC);
        struct.notificationSquareChatDelete.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notificationMessage != null) {
        oprot.writeFieldBegin(NOTIFICATION_MESSAGE_FIELD_DESC);
        struct.notificationMessage.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareChatProfileName != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME_FIELD_DESC);
        struct.notifiedUpdateSquareChatProfileName.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareChatProfileImage != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE_FIELD_DESC);
        struct.notifiedUpdateSquareChatProfileImage.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.notifiedUpdateSquareFeatureSet != null) {
        oprot.writeFieldBegin(NOTIFIED_UPDATE_SQUARE_FEATURE_SET_FIELD_DESC);
        struct.notifiedUpdateSquareFeatureSet.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SquareEventPayloadTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SquareEventPayloadTupleScheme getScheme() {
      return new SquareEventPayloadTupleScheme();
    }
  }

  private static class SquareEventPayloadTupleScheme extends org.apache.thrift.scheme.TupleScheme<SquareEventPayload> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SquareEventPayload struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetReceiveMessage()) {
        optionals.set(0);
      }
      if (struct.isSetSendMessage()) {
        optionals.set(1);
      }
      if (struct.isSetNotifiedJoinSquareChat()) {
        optionals.set(2);
      }
      if (struct.isSetNotifiedInviteIntoSquareChat()) {
        optionals.set(3);
      }
      if (struct.isSetNotifiedLeaveSquareChat()) {
        optionals.set(4);
      }
      if (struct.isSetNotifiedDestroyMessage()) {
        optionals.set(5);
      }
      if (struct.isSetNotifiedMarkAsRead()) {
        optionals.set(6);
      }
      if (struct.isSetNotifiedUpdateSquareMemberProfile()) {
        optionals.set(7);
      }
      if (struct.isSetNotifiedKickoutFromSquare()) {
        optionals.set(8);
      }
      if (struct.isSetNotifiedShutdownSquare()) {
        optionals.set(9);
      }
      if (struct.isSetNotifiedDeleteSquareChat()) {
        optionals.set(10);
      }
      if (struct.isSetNotifiedUpdateSquareChatProfileName()) {
        optionals.set(11);
      }
      if (struct.isSetNotifiedUpdateSquareChatProfileImage()) {
        optionals.set(12);
      }
      if (struct.isSetNotifiedUpdateSquareStatus()) {
        optionals.set(13);
      }
      if (struct.isSetNotifiedUpdateSquareChatStatus()) {
        optionals.set(14);
      }
      if (struct.isSetNotifiedCreateSquareMember()) {
        optionals.set(15);
      }
      if (struct.isSetNotifiedCreateSquareChatMember()) {
        optionals.set(16);
      }
      if (struct.isSetNotifiedUpdateSquareMemberRelation()) {
        optionals.set(17);
      }
      if (struct.isSetNotifiedUpdateSquare()) {
        optionals.set(18);
      }
      if (struct.isSetNotifiedUpdateSquareMember()) {
        optionals.set(19);
      }
      if (struct.isSetNotifiedUpdateSquareChat()) {
        optionals.set(20);
      }
      if (struct.isSetNotificationJoinRequest()) {
        optionals.set(21);
      }
      if (struct.isSetNotificationJoined()) {
        optionals.set(22);
      }
      if (struct.isSetNotificationPromoteCoadmin()) {
        optionals.set(23);
      }
      if (struct.isSetNotificationPromoteAdmin()) {
        optionals.set(24);
      }
      if (struct.isSetNotificationDemoteMember()) {
        optionals.set(25);
      }
      if (struct.isSetNotificationKickedOut()) {
        optionals.set(26);
      }
      if (struct.isSetNotificationSquareDelete()) {
        optionals.set(27);
      }
      if (struct.isSetNotificationSquareChatDelete()) {
        optionals.set(28);
      }
      if (struct.isSetNotificationMessage()) {
        optionals.set(29);
      }
      if (struct.isSetNotifiedUpdateSquareChatMember()) {
        optionals.set(30);
      }
      if (struct.isSetNotifiedUpdateSquareAuthority()) {
        optionals.set(31);
      }
      if (struct.isSetNotifiedUpdateSquareFeatureSet()) {
        optionals.set(32);
      }
      oprot.writeBitSet(optionals, 33);
      if (struct.isSetReceiveMessage()) {
        struct.receiveMessage.write(oprot);
      }
      if (struct.isSetSendMessage()) {
        struct.sendMessage.write(oprot);
      }
      if (struct.isSetNotifiedJoinSquareChat()) {
        struct.notifiedJoinSquareChat.write(oprot);
      }
      if (struct.isSetNotifiedInviteIntoSquareChat()) {
        struct.notifiedInviteIntoSquareChat.write(oprot);
      }
      if (struct.isSetNotifiedLeaveSquareChat()) {
        struct.notifiedLeaveSquareChat.write(oprot);
      }
      if (struct.isSetNotifiedDestroyMessage()) {
        struct.notifiedDestroyMessage.write(oprot);
      }
      if (struct.isSetNotifiedMarkAsRead()) {
        struct.notifiedMarkAsRead.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareMemberProfile()) {
        struct.notifiedUpdateSquareMemberProfile.write(oprot);
      }
      if (struct.isSetNotifiedKickoutFromSquare()) {
        struct.notifiedKickoutFromSquare.write(oprot);
      }
      if (struct.isSetNotifiedShutdownSquare()) {
        struct.notifiedShutdownSquare.write(oprot);
      }
      if (struct.isSetNotifiedDeleteSquareChat()) {
        struct.notifiedDeleteSquareChat.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareChatProfileName()) {
        struct.notifiedUpdateSquareChatProfileName.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareChatProfileImage()) {
        struct.notifiedUpdateSquareChatProfileImage.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareStatus()) {
        struct.notifiedUpdateSquareStatus.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareChatStatus()) {
        struct.notifiedUpdateSquareChatStatus.write(oprot);
      }
      if (struct.isSetNotifiedCreateSquareMember()) {
        struct.notifiedCreateSquareMember.write(oprot);
      }
      if (struct.isSetNotifiedCreateSquareChatMember()) {
        struct.notifiedCreateSquareChatMember.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareMemberRelation()) {
        struct.notifiedUpdateSquareMemberRelation.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquare()) {
        struct.notifiedUpdateSquare.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareMember()) {
        struct.notifiedUpdateSquareMember.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareChat()) {
        struct.notifiedUpdateSquareChat.write(oprot);
      }
      if (struct.isSetNotificationJoinRequest()) {
        struct.notificationJoinRequest.write(oprot);
      }
      if (struct.isSetNotificationJoined()) {
        struct.notificationJoined.write(oprot);
      }
      if (struct.isSetNotificationPromoteCoadmin()) {
        struct.notificationPromoteCoadmin.write(oprot);
      }
      if (struct.isSetNotificationPromoteAdmin()) {
        struct.notificationPromoteAdmin.write(oprot);
      }
      if (struct.isSetNotificationDemoteMember()) {
        struct.notificationDemoteMember.write(oprot);
      }
      if (struct.isSetNotificationKickedOut()) {
        struct.notificationKickedOut.write(oprot);
      }
      if (struct.isSetNotificationSquareDelete()) {
        struct.notificationSquareDelete.write(oprot);
      }
      if (struct.isSetNotificationSquareChatDelete()) {
        struct.notificationSquareChatDelete.write(oprot);
      }
      if (struct.isSetNotificationMessage()) {
        struct.notificationMessage.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareChatMember()) {
        struct.notifiedUpdateSquareChatMember.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareAuthority()) {
        struct.notifiedUpdateSquareAuthority.write(oprot);
      }
      if (struct.isSetNotifiedUpdateSquareFeatureSet()) {
        struct.notifiedUpdateSquareFeatureSet.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SquareEventPayload struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(33);
      if (incoming.get(0)) {
        struct.receiveMessage = new SquareEventReceiveMessage();
        struct.receiveMessage.read(iprot);
        struct.setReceiveMessageIsSet(true);
      }
      if (incoming.get(1)) {
        struct.sendMessage = new SquareEventSendMessage();
        struct.sendMessage.read(iprot);
        struct.setSendMessageIsSet(true);
      }
      if (incoming.get(2)) {
        struct.notifiedJoinSquareChat = new SquareEventNotifiedJoinSquareChat();
        struct.notifiedJoinSquareChat.read(iprot);
        struct.setNotifiedJoinSquareChatIsSet(true);
      }
      if (incoming.get(3)) {
        struct.notifiedInviteIntoSquareChat = new SquareEventNotifiedInviteIntoSquareChat();
        struct.notifiedInviteIntoSquareChat.read(iprot);
        struct.setNotifiedInviteIntoSquareChatIsSet(true);
      }
      if (incoming.get(4)) {
        struct.notifiedLeaveSquareChat = new SquareEventNotifiedLeaveSquareChat();
        struct.notifiedLeaveSquareChat.read(iprot);
        struct.setNotifiedLeaveSquareChatIsSet(true);
      }
      if (incoming.get(5)) {
        struct.notifiedDestroyMessage = new SquareEventNotifiedDestroyMessage();
        struct.notifiedDestroyMessage.read(iprot);
        struct.setNotifiedDestroyMessageIsSet(true);
      }
      if (incoming.get(6)) {
        struct.notifiedMarkAsRead = new SquareEventNotifiedMarkAsRead();
        struct.notifiedMarkAsRead.read(iprot);
        struct.setNotifiedMarkAsReadIsSet(true);
      }
      if (incoming.get(7)) {
        struct.notifiedUpdateSquareMemberProfile = new SquareEventNotifiedUpdateSquareMemberProfile();
        struct.notifiedUpdateSquareMemberProfile.read(iprot);
        struct.setNotifiedUpdateSquareMemberProfileIsSet(true);
      }
      if (incoming.get(8)) {
        struct.notifiedKickoutFromSquare = new SquareEventNotifiedKickoutFromSquare();
        struct.notifiedKickoutFromSquare.read(iprot);
        struct.setNotifiedKickoutFromSquareIsSet(true);
      }
      if (incoming.get(9)) {
        struct.notifiedShutdownSquare = new SquareEventNotifiedShutdownSquare();
        struct.notifiedShutdownSquare.read(iprot);
        struct.setNotifiedShutdownSquareIsSet(true);
      }
      if (incoming.get(10)) {
        struct.notifiedDeleteSquareChat = new SquareEventNotifiedDeleteSquareChat();
        struct.notifiedDeleteSquareChat.read(iprot);
        struct.setNotifiedDeleteSquareChatIsSet(true);
      }
      if (incoming.get(11)) {
        struct.notifiedUpdateSquareChatProfileName = new SquareEventNotifiedUpdateSquareChatProfileName();
        struct.notifiedUpdateSquareChatProfileName.read(iprot);
        struct.setNotifiedUpdateSquareChatProfileNameIsSet(true);
      }
      if (incoming.get(12)) {
        struct.notifiedUpdateSquareChatProfileImage = new SquareEventNotifiedUpdateSquareChatProfileImage();
        struct.notifiedUpdateSquareChatProfileImage.read(iprot);
        struct.setNotifiedUpdateSquareChatProfileImageIsSet(true);
      }
      if (incoming.get(13)) {
        struct.notifiedUpdateSquareStatus = new SquareEventNotifiedUpdateSquareStatus();
        struct.notifiedUpdateSquareStatus.read(iprot);
        struct.setNotifiedUpdateSquareStatusIsSet(true);
      }
      if (incoming.get(14)) {
        struct.notifiedUpdateSquareChatStatus = new SquareEventNotifiedUpdateSquareChatStatus();
        struct.notifiedUpdateSquareChatStatus.read(iprot);
        struct.setNotifiedUpdateSquareChatStatusIsSet(true);
      }
      if (incoming.get(15)) {
        struct.notifiedCreateSquareMember = new SquareEventNotifiedCreateSquareMember();
        struct.notifiedCreateSquareMember.read(iprot);
        struct.setNotifiedCreateSquareMemberIsSet(true);
      }
      if (incoming.get(16)) {
        struct.notifiedCreateSquareChatMember = new SquareEventNotifiedCreateSquareChatMember();
        struct.notifiedCreateSquareChatMember.read(iprot);
        struct.setNotifiedCreateSquareChatMemberIsSet(true);
      }
      if (incoming.get(17)) {
        struct.notifiedUpdateSquareMemberRelation = new SquareEventNotifiedUpdateSquareMemberRelation();
        struct.notifiedUpdateSquareMemberRelation.read(iprot);
        struct.setNotifiedUpdateSquareMemberRelationIsSet(true);
      }
      if (incoming.get(18)) {
        struct.notifiedUpdateSquare = new SquareEventNotifiedUpdateSquare();
        struct.notifiedUpdateSquare.read(iprot);
        struct.setNotifiedUpdateSquareIsSet(true);
      }
      if (incoming.get(19)) {
        struct.notifiedUpdateSquareMember = new SquareEventNotifiedUpdateSquareMember();
        struct.notifiedUpdateSquareMember.read(iprot);
        struct.setNotifiedUpdateSquareMemberIsSet(true);
      }
      if (incoming.get(20)) {
        struct.notifiedUpdateSquareChat = new SquareEventNotifiedUpdateSquareChat();
        struct.notifiedUpdateSquareChat.read(iprot);
        struct.setNotifiedUpdateSquareChatIsSet(true);
      }
      if (incoming.get(21)) {
        struct.notificationJoinRequest = new SquareEventNotificationJoinRequest();
        struct.notificationJoinRequest.read(iprot);
        struct.setNotificationJoinRequestIsSet(true);
      }
      if (incoming.get(22)) {
        struct.notificationJoined = new SquareEventNotificationMemberUpdate();
        struct.notificationJoined.read(iprot);
        struct.setNotificationJoinedIsSet(true);
      }
      if (incoming.get(23)) {
        struct.notificationPromoteCoadmin = new SquareEventNotificationMemberUpdate();
        struct.notificationPromoteCoadmin.read(iprot);
        struct.setNotificationPromoteCoadminIsSet(true);
      }
      if (incoming.get(24)) {
        struct.notificationPromoteAdmin = new SquareEventNotificationMemberUpdate();
        struct.notificationPromoteAdmin.read(iprot);
        struct.setNotificationPromoteAdminIsSet(true);
      }
      if (incoming.get(25)) {
        struct.notificationDemoteMember = new SquareEventNotificationMemberUpdate();
        struct.notificationDemoteMember.read(iprot);
        struct.setNotificationDemoteMemberIsSet(true);
      }
      if (incoming.get(26)) {
        struct.notificationKickedOut = new SquareEventNotificationMemberUpdate();
        struct.notificationKickedOut.read(iprot);
        struct.setNotificationKickedOutIsSet(true);
      }
      if (incoming.get(27)) {
        struct.notificationSquareDelete = new SquareEventNotificationSquareDelete();
        struct.notificationSquareDelete.read(iprot);
        struct.setNotificationSquareDeleteIsSet(true);
      }
      if (incoming.get(28)) {
        struct.notificationSquareChatDelete = new SquareEventNotificationSquareChatDelete();
        struct.notificationSquareChatDelete.read(iprot);
        struct.setNotificationSquareChatDeleteIsSet(true);
      }
      if (incoming.get(29)) {
        struct.notificationMessage = new SquareEventNotificationMessage();
        struct.notificationMessage.read(iprot);
        struct.setNotificationMessageIsSet(true);
      }
      if (incoming.get(30)) {
        struct.notifiedUpdateSquareChatMember = new SquareEventNotifiedUpdateSquareChatMember();
        struct.notifiedUpdateSquareChatMember.read(iprot);
        struct.setNotifiedUpdateSquareChatMemberIsSet(true);
      }
      if (incoming.get(31)) {
        struct.notifiedUpdateSquareAuthority = new SquareEventNotifiedUpdateSquareAuthority();
        struct.notifiedUpdateSquareAuthority.read(iprot);
        struct.setNotifiedUpdateSquareAuthorityIsSet(true);
      }
      if (incoming.get(32)) {
        struct.notifiedUpdateSquareFeatureSet = new SquareEventNotifiedUpdateSquareFeatureSet();
        struct.notifiedUpdateSquareFeatureSet.read(iprot);
        struct.setNotifiedUpdateSquareFeatureSetIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

