%%
%% Autogenerated by Thrift Compiler (0.14.0)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(call_service_thrift).
-behaviour(thrift_service).


-include("call_service_thrift.hrl").

-export([struct_info/1, function_info/2, function_names/0]).

struct_info(_) -> erlang:error(function_clause).
%%% interface
% getUserStatus(This, Mid)
function_info('getUserStatus', params_type) ->
  {struct, [{1, string}]}
;
function_info('getUserStatus', reply_type) ->
  i32;
function_info('getUserStatus', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% updateProfileAttributeForChannel(This, ProfileAttribute, Value)
function_info('updateProfileAttributeForChannel', params_type) ->
  {struct, [{2, i32},
          {3, string}]}
;
function_info('updateProfileAttributeForChannel', reply_type) ->
  {struct, []};
function_info('updateProfileAttributeForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% updateExtendedProfileAttribute(This, Attr, ExtendedProfile)
function_info('updateExtendedProfileAttribute', params_type) ->
  {struct, [{1, i32},
          {2, {struct, {'line_types', 'ExtendedProfile'}}}]}
;
function_info('updateExtendedProfileAttribute', reply_type) ->
  {struct, []};
function_info('updateExtendedProfileAttribute', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getAllSimpleChannelContacts(This, StatusSticonFallbackDisabled)
function_info('getAllSimpleChannelContacts', params_type) ->
  {struct, [{1, bool}]}
;
function_info('getAllSimpleChannelContacts', reply_type) ->
  {list, {struct, {'line_types', 'SimpleChannelContact'}}};
function_info('getAllSimpleChannelContacts', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getUserIdentities(This)
function_info('getUserIdentities', params_type) ->
  {struct, []}
;
function_info('getUserIdentities', reply_type) ->
  {map, i32, string};
function_info('getUserIdentities', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% markPaidCallAd(This, DialedNumber, Language, DisableCallerId)
function_info('markPaidCallAd', params_type) ->
  {struct, [{2, string},
          {3, string},
          {4, bool}]}
;
function_info('markPaidCallAd', reply_type) ->
  {struct, {'line_types', 'PaidCallDialing'}};
function_info('markPaidCallAd', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% isGroupMember(This, GroupId)
function_info('isGroupMember', params_type) ->
  {struct, [{1, string}]}
;
function_info('isGroupMember', reply_type) ->
  bool;
function_info('isGroupMember', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getPhoneInfoFromPhoneNumber(This, Region, PhoneNumber)
function_info('getPhoneInfoFromPhoneNumber', params_type) ->
  {struct, [{1, string},
          {2, string}]}
;
function_info('getPhoneInfoFromPhoneNumber', reply_type) ->
  {struct, {'line_types', 'PhoneInfoForChannel'}};
function_info('getPhoneInfoFromPhoneNumber', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% redeemPaidCallVoucher(This, Serial, Language)
function_info('redeemPaidCallVoucher', params_type) ->
  {struct, [{2, string},
          {3, string}]}
;
function_info('redeemPaidCallVoucher', reply_type) ->
  {struct, {'line_types', 'PaidCallRedeemResult'}};
function_info('redeemPaidCallVoucher', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getPreferredDisplayName(This, Mids)
function_info('getPreferredDisplayName', params_type) ->
  {struct, [{1, {list, string}}]}
;
function_info('getPreferredDisplayName', reply_type) ->
  {map, string, string};
function_info('getPreferredDisplayName', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getContactsForChannel(This, Ids)
function_info('getContactsForChannel', params_type) ->
  {struct, [{2, {list, string}}]}
;
function_info('getContactsForChannel', reply_type) ->
  {list, {struct, {'line_types', 'Contact'}}};
function_info('getContactsForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getCallCreditProducts(This, AppStoreCode, PgCode, Country, Language)
function_info('getCallCreditProducts', params_type) ->
  {struct, [{2, i32},
          {3, i32},
          {4, string},
          {5, string}]}
;
function_info('getCallCreditProducts', reply_type) ->
  {list, {struct, {'line_types', 'CoinProductItem'}}};
function_info('getCallCreditProducts', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getCompactContacts(This, LastModifiedTimestamp)
function_info('getCompactContacts', params_type) ->
  {struct, [{2, i64}]}
;
function_info('getCompactContacts', reply_type) ->
  {list, {struct, {'line_types', 'CompactContact'}}};
function_info('getCompactContacts', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% notifyNotiCenterEvent(This, Event)
function_info('notifyNotiCenterEvent', params_type) ->
  {struct, [{1, {struct, {'line_types', 'NotiCenterEventData'}}}]}
;
function_info('notifyNotiCenterEvent', reply_type) ->
  {struct, []};
function_info('notifyNotiCenterEvent', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% isInContact(This, Mid)
function_info('isInContact', params_type) ->
  {struct, [{2, string}]}
;
function_info('isInContact', reply_type) ->
  bool;
function_info('isInContact', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% lookupGroupMembers(This, GroupId, Mids)
function_info('lookupGroupMembers', params_type) ->
  {struct, [{1, string},
          {2, {list, string}}]}
;
function_info('lookupGroupMembers', reply_type) ->
  {list, {struct, {'line_types', 'SimpleChannelContact'}}};
function_info('lookupGroupMembers', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getRoomInformation(This, RoomMid)
function_info('getRoomInformation', params_type) ->
  {struct, [{1, string}]}
;
function_info('getRoomInformation', reply_type) ->
  {struct, {'line_types', 'Room'}};
function_info('getRoomInformation', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getGroupCall(This, ChatMid)
function_info('getGroupCall', params_type) ->
  {struct, [{2, string}]}
;
function_info('getGroupCall', reply_type) ->
  {struct, {'line_types', 'GroupCall'}};
function_info('getGroupCall', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% isAllowSecondaryDeviceLogin(This)
function_info('isAllowSecondaryDeviceLogin', params_type) ->
  {struct, []}
;
function_info('isAllowSecondaryDeviceLogin', reply_type) ->
  bool;
function_info('isAllowSecondaryDeviceLogin', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getPrimaryClientForChannel(This)
function_info('getPrimaryClientForChannel', params_type) ->
  {struct, []}
;
function_info('getPrimaryClientForChannel', reply_type) ->
  {struct, {'line_types', 'SimpleChannelClient'}};
function_info('getPrimaryClientForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% createRoomWithBuddy(This, ReqSeq, BuddyMid, ContactIds)
function_info('createRoomWithBuddy', params_type) ->
  {struct, [{1, i32},
          {2, string},
          {3, {list, string}}]}
;
function_info('createRoomWithBuddy', reply_type) ->
  {struct, {'line_types', 'Room'}};
function_info('createRoomWithBuddy', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getDisplayName(This, Mid)
function_info('getDisplayName', params_type) ->
  {struct, [{2, string}]}
;
function_info('getDisplayName', reply_type) ->
  string;
function_info('getDisplayName', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getPaidCallMetadata(This, Language)
function_info('getPaidCallMetadata', params_type) ->
  {struct, [{2, string}]}
;
function_info('getPaidCallMetadata', reply_type) ->
  {struct, {'line_types', 'PaidCallMetadataResult'}};
function_info('getPaidCallMetadata', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getMid(This)
function_info('getMid', params_type) ->
  {struct, []}
;
function_info('getMid', reply_type) ->
  string;
function_info('getMid', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getUserCountryForBilling(This, Country, RemoteIp)
function_info('getUserCountryForBilling', params_type) ->
  {struct, [{2, string},
          {3, string}]}
;
function_info('getUserCountryForBilling', reply_type) ->
  string;
function_info('getUserCountryForBilling', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getFavoriteGroupIdsForChannel(This)
function_info('getFavoriteGroupIdsForChannel', params_type) ->
  {struct, []}
;
function_info('getFavoriteGroupIdsForChannel', reply_type) ->
  {list, string};
function_info('getFavoriteGroupIdsForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getPaidCallHistory(This, Start, Size, Language)
function_info('getPaidCallHistory', params_type) ->
  {struct, [{2, i64},
          {3, i32},
          {4, string}]}
;
function_info('getPaidCallHistory', reply_type) ->
  {struct, {'line_types', 'PaidCallHistoryResult'}};
function_info('getPaidCallHistory', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% sendPinCodeOperation(This, Verifier)
function_info('sendPinCodeOperation', params_type) ->
  {struct, [{1, string}]}
;
function_info('sendPinCodeOperation', reply_type) ->
  {struct, []};
function_info('sendPinCodeOperation', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% inviteIntoGroupCall(This, ChatMid, MemberMids, MediaType)
function_info('inviteIntoGroupCall', params_type) ->
  {struct, [{2, string},
          {3, {list, string}},
          {4, i32}]}
;
function_info('inviteIntoGroupCall', reply_type) ->
  {struct, []};
function_info('inviteIntoGroupCall', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getFriendMids(This)
function_info('getFriendMids', params_type) ->
  {struct, []}
;
function_info('getFriendMids', reply_type) ->
  {list, string};
function_info('getFriendMids', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getMetaProfile(This)
function_info('getMetaProfile', params_type) ->
  {struct, []}
;
function_info('getMetaProfile', reply_type) ->
  {struct, {'line_types', 'MetaProfile'}};
function_info('getMetaProfile', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% sendMessageForChannel(This, Message)
function_info('sendMessageForChannel', params_type) ->
  {struct, [{2, {struct, {'line_types', 'Message'}}}]}
;
function_info('sendMessageForChannel', reply_type) ->
  {struct, {'line_types', 'Message'}};
function_info('sendMessageForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% activeBuddySubscriberCount(This)
function_info('activeBuddySubscriberCount', params_type) ->
  {struct, []}
;
function_info('activeBuddySubscriberCount', reply_type) ->
  i64;
function_info('activeBuddySubscriberCount', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getCallCreditPurchaseHistory(This, Request)
function_info('getCallCreditPurchaseHistory', params_type) ->
  {struct, [{2, {struct, {'line_types', 'CoinHistoryCondition'}}}]}
;
function_info('getCallCreditPurchaseHistory', reply_type) ->
  {struct, {'line_types', 'CoinHistoryResult'}};
function_info('getCallCreditPurchaseHistory', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% isRoomMember(This, RoomId)
function_info('isRoomMember', params_type) ->
  {struct, [{1, string}]}
;
function_info('isRoomMember', reply_type) ->
  bool;
function_info('isRoomMember', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% sendSystemOAMessage(This, Message)
function_info('sendSystemOAMessage', params_type) ->
  {struct, [{1, {struct, {'line_types', 'Message'}}}]}
;
function_info('sendSystemOAMessage', reply_type) ->
  {struct, {'line_types', 'Message'}};
function_info('sendSystemOAMessage', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% acquirePaidCallRoute(This, PaidCallType, DialedNumber, Language, NetworkCode, DisableCallerId, Referer, AdSessionId)
function_info('acquirePaidCallRoute', params_type) ->
  {struct, [{2, i32},
          {3, string},
          {4, string},
          {5, string},
          {6, bool},
          {7, string},
          {8, string}]}
;
function_info('acquirePaidCallRoute', reply_type) ->
  {struct, {'line_types', 'PaidCallResponse'}};
function_info('acquirePaidCallRoute', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getGroupsForChannel(This, GroupIds)
function_info('getGroupsForChannel', params_type) ->
  {struct, [{1, {list, string}}]}
;
function_info('getGroupsForChannel', reply_type) ->
  {list, {struct, {'line_types', 'Group'}}};
function_info('getGroupsForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getUserCreateTime(This)
function_info('getUserCreateTime', params_type) ->
  {struct, []}
;
function_info('getUserCreateTime', reply_type) ->
  i64;
function_info('getUserCreateTime', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% registerChannelCP(This, CpId, RegisterPassword)
function_info('registerChannelCP', params_type) ->
  {struct, [{2, string},
          {3, string}]}
;
function_info('registerChannelCP', reply_type) ->
  string;
function_info('registerChannelCP', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% reserveCallCreditPurchase(This, Request)
function_info('reserveCallCreditPurchase', params_type) ->
  {struct, [{2, {struct, {'line_types', 'CoinPurchaseReservation'}}}]}
;
function_info('reserveCallCreditPurchase', reply_type) ->
  {struct, {'line_types', 'PaymentReservationResult'}};
function_info('reserveCallCreditPurchase', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% acquirePaidCallCurrencyExchangeRate(This, Language)
function_info('acquirePaidCallCurrencyExchangeRate', params_type) ->
  {struct, [{2, string}]}
;
function_info('acquirePaidCallCurrencyExchangeRate', reply_type) ->
  {list, {struct, {'line_types', 'PaidCallCurrencyExchangeRate'}}};
function_info('acquirePaidCallCurrencyExchangeRate', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getRoomMemberMidsForAppPlatform(This, RoomId)
function_info('getRoomMemberMidsForAppPlatform', params_type) ->
  {struct, [{1, string}]}
;
function_info('getRoomMemberMidsForAppPlatform', reply_type) ->
  {list, string};
function_info('getRoomMemberMidsForAppPlatform', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getPaidCallBalanceList(This, Language)
function_info('getPaidCallBalanceList', params_type) ->
  {struct, [{2, string}]}
;
function_info('getPaidCallBalanceList', reply_type) ->
  {list, {struct, {'line_types', 'PaidCallBalance'}}};
function_info('getPaidCallBalanceList', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getPersonalInfos(This, RequiredPersonalInfos)
function_info('getPersonalInfos', params_type) ->
  {struct, [{1, {set, i32}}]}
;
function_info('getPersonalInfos', reply_type) ->
  {map, i32, string};
function_info('getPersonalInfos', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getPrimaryClientsForChannel(This, UserMids)
function_info('getPrimaryClientsForChannel', params_type) ->
  {struct, [{1, {list, string}}]}
;
function_info('getPrimaryClientsForChannel', reply_type) ->
  {list, {struct, {'line_types', 'SimpleChannelClient'}}};
function_info('getPrimaryClientsForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% addBuddyToContact(This, BuddyMid)
function_info('addBuddyToContact', params_type) ->
  {struct, [{1, string}]}
;
function_info('addBuddyToContact', reply_type) ->
  {struct, {'line_types', 'ContactTransition'}};
function_info('addBuddyToContact', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getGroupMemberMidsForAppPlatform(This, GroupId)
function_info('getGroupMemberMidsForAppPlatform', params_type) ->
  {struct, [{1, string}]}
;
function_info('getGroupMemberMidsForAppPlatform', reply_type) ->
  {list, string};
function_info('getGroupMemberMidsForAppPlatform', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getUserLanguage(This)
function_info('getUserLanguage', params_type) ->
  {struct, []}
;
function_info('getUserLanguage', reply_type) ->
  string;
function_info('getUserLanguage', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% lookupPaidCall(This, DialedNumber, Language, Referer)
function_info('lookupPaidCall', params_type) ->
  {struct, [{2, string},
          {3, string},
          {4, string}]}
;
function_info('lookupPaidCall', reply_type) ->
  {struct, {'line_types', 'PaidCallResponse'}};
function_info('lookupPaidCall', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getExtendedProfile(This)
function_info('getExtendedProfile', params_type) ->
  {struct, []}
;
function_info('getExtendedProfile', reply_type) ->
  {struct, {'line_types', 'ExtendedProfile'}};
function_info('getExtendedProfile', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getReverseCompactContacts(This, Ids)
function_info('getReverseCompactContacts', params_type) ->
  {struct, [{1, {list, string}}]}
;
function_info('getReverseCompactContacts', reply_type) ->
  {map, string, {struct, {'line_types', 'CompactContact'}}};
function_info('getReverseCompactContacts', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getPaidCallAdStatus(This)
function_info('getPaidCallAdStatus', params_type) ->
  {struct, []}
;
function_info('getPaidCallAdStatus', reply_type) ->
  {struct, {'line_types', 'PaidCallAdResult'}};
function_info('getPaidCallAdStatus', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% findContactByUseridWithoutAbuseBlockForChannel(This, Userid)
function_info('findContactByUseridWithoutAbuseBlockForChannel', params_type) ->
  {struct, [{2, string}]}
;
function_info('findContactByUseridWithoutAbuseBlockForChannel', reply_type) ->
  {struct, {'line_types', 'Contact'}};
function_info('findContactByUseridWithoutAbuseBlockForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getGroupMemberMids(This, GroupId)
function_info('getGroupMemberMids', params_type) ->
  {struct, [{1, string}]}
;
function_info('getGroupMemberMids', reply_type) ->
  {list, string};
function_info('getGroupMemberMids', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% sendMessageWithoutRelationship(This, Message)
function_info('sendMessageWithoutRelationship', params_type) ->
  {struct, [{2, {struct, {'line_types', 'Message'}}}]}
;
function_info('sendMessageWithoutRelationship', reply_type) ->
  {struct, {'line_types', 'Message'}};
function_info('sendMessageWithoutRelationship', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% displayBuddySubscriberCountInBulk(This, Mids)
function_info('displayBuddySubscriberCountInBulk', params_type) ->
  {struct, [{1, {list, string}}]}
;
function_info('displayBuddySubscriberCountInBulk', reply_type) ->
  {map, string, i64};
function_info('displayBuddySubscriberCountInBulk', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% lookupRoomMembers(This, RoomId, Mids)
function_info('lookupRoomMembers', params_type) ->
  {struct, [{1, string},
          {2, {list, string}}]}
;
function_info('lookupRoomMembers', reply_type) ->
  {list, {struct, {'line_types', 'SimpleChannelContact'}}};
function_info('lookupRoomMembers', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getFavoriteMidsForChannel(This)
function_info('getFavoriteMidsForChannel', params_type) ->
  {struct, []}
;
function_info('getFavoriteMidsForChannel', reply_type) ->
  {list, string};
function_info('getFavoriteMidsForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getAllContactIdsForChannel(This)
function_info('getAllContactIdsForChannel', params_type) ->
  {struct, []}
;
function_info('getAllContactIdsForChannel', reply_type) ->
  {list, string};
function_info('getAllContactIdsForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% displayBuddySubscriberCount(This)
function_info('displayBuddySubscriberCount', params_type) ->
  {struct, []}
;
function_info('displayBuddySubscriberCount', reply_type) ->
  i64;
function_info('displayBuddySubscriberCount', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getProfileForChannel(This)
function_info('getProfileForChannel', params_type) ->
  {struct, []}
;
function_info('getProfileForChannel', reply_type) ->
  {struct, {'line_types', 'Profile'}};
function_info('getProfileForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getUserTickets(This, UserMids)
function_info('getUserTickets', params_type) ->
  {struct, [{1, {list, string}}]}
;
function_info('getUserTickets', reply_type) ->
  {list, {struct, {'line_types', 'UserTicketResponse'}}};
function_info('getUserTickets', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getOAFriendMids(This)
function_info('getOAFriendMids', params_type) ->
  {struct, []}
;
function_info('getOAFriendMids', reply_type) ->
  {list, string};
function_info('getOAFriendMids', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% searchPaidCallUserRate(This, CountryCode, Language)
function_info('searchPaidCallUserRate', params_type) ->
  {struct, [{2, string},
          {3, string}]}
;
function_info('searchPaidCallUserRate', reply_type) ->
  {list, {struct, {'line_types', 'PaidCallUserRate'}}};
function_info('searchPaidCallUserRate', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getJoinedGroupIdsForChannel(This)
function_info('getJoinedGroupIdsForChannel', params_type) ->
  {struct, []}
;
function_info('getJoinedGroupIdsForChannel', reply_type) ->
  {list, string};
function_info('getJoinedGroupIdsForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% acquireGroupCallRoute(This, ChatMid, MediaType)
function_info('acquireGroupCallRoute', params_type) ->
  {struct, [{2, string},
          {3, i32}]}
;
function_info('acquireGroupCallRoute', reply_type) ->
  {struct, {'line_types', 'GroupCallRoute'}};
function_info('acquireGroupCallRoute', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getUserMidsWhoAddedMe(This)
function_info('getUserMidsWhoAddedMe', params_type) ->
  {struct, []}
;
function_info('getUserMidsWhoAddedMe', reply_type) ->
  {list, string};
function_info('getUserMidsWhoAddedMe', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getIdentityCredential(This)
function_info('getIdentityCredential', params_type) ->
  {struct, []}
;
function_info('getIdentityCredential', reply_type) ->
  {struct, {'line_types', 'IdentityCredential'}};
function_info('getIdentityCredential', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% addOperationForChannel(This, OpType, Param1, Param2, Param3)
function_info('addOperationForChannel', params_type) ->
  {struct, [{1, i32},
          {2, string},
          {3, string},
          {4, string}]}
;
function_info('addOperationForChannel', reply_type) ->
  {struct, []};
function_info('addOperationForChannel', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getSimpleChannelContacts(This, Ids, StatusSticonFallbackDisabled)
function_info('getSimpleChannelContacts', params_type) ->
  {struct, [{1, {list, string}},
          {2, bool}]}
;
function_info('getSimpleChannelContacts', reply_type) ->
  {list, {struct, {'line_types', 'SimpleChannelContact'}}};
function_info('getSimpleChannelContacts', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% getUserLastSentMessageTimeStamp(This, Mid)
function_info('getUserLastSentMessageTimeStamp', params_type) ->
  {struct, [{1, string}]}
;
function_info('getUserLastSentMessageTimeStamp', reply_type) ->
  i64;
function_info('getUserLastSentMessageTimeStamp', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
function_info(_Func, _Info) -> erlang:error(function_clause).

function_names() -> 
  ['getUserStatus', 'updateProfileAttributeForChannel', 'updateExtendedProfileAttribute', 'getAllSimpleChannelContacts', 'getUserIdentities', 'markPaidCallAd', 'isGroupMember', 'getPhoneInfoFromPhoneNumber', 'redeemPaidCallVoucher', 'getPreferredDisplayName', 'getContactsForChannel', 'getCallCreditProducts', 'getCompactContacts', 'notifyNotiCenterEvent', 'isInContact', 'lookupGroupMembers', 'getRoomInformation', 'getGroupCall', 'isAllowSecondaryDeviceLogin', 'getPrimaryClientForChannel', 'createRoomWithBuddy', 'getDisplayName', 'getPaidCallMetadata', 'getMid', 'getUserCountryForBilling', 'getFavoriteGroupIdsForChannel', 'getPaidCallHistory', 'sendPinCodeOperation', 'inviteIntoGroupCall', 'getFriendMids', 'getMetaProfile', 'sendMessageForChannel', 'activeBuddySubscriberCount', 'getCallCreditPurchaseHistory', 'isRoomMember', 'sendSystemOAMessage', 'acquirePaidCallRoute', 'getGroupsForChannel', 'getUserCreateTime', 'registerChannelCP', 'reserveCallCreditPurchase', 'acquirePaidCallCurrencyExchangeRate', 'getRoomMemberMidsForAppPlatform', 'getPaidCallBalanceList', 'getPersonalInfos', 'getPrimaryClientsForChannel', 'addBuddyToContact', 'getGroupMemberMidsForAppPlatform', 'getUserLanguage', 'lookupPaidCall', 'getExtendedProfile', 'getReverseCompactContacts', 'getPaidCallAdStatus', 'findContactByUseridWithoutAbuseBlockForChannel', 'getGroupMemberMids', 'sendMessageWithoutRelationship', 'displayBuddySubscriberCountInBulk', 'lookupRoomMembers', 'getFavoriteMidsForChannel', 'getAllContactIdsForChannel', 'displayBuddySubscriberCount', 'getProfileForChannel', 'getUserTickets', 'getOAFriendMids', 'searchPaidCallUserRate', 'getJoinedGroupIdsForChannel', 'acquireGroupCallRoute', 'getUserMidsWhoAddedMe', 'getIdentityCredential', 'addOperationForChannel', 'getSimpleChannelContacts', 'getUserLastSentMessageTimeStamp'].

