%%
%% Autogenerated by Thrift Compiler (0.13.0)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(account_supervisor_service_thrift).
-behaviour(thrift_service).


-include("account_supervisor_service_thrift.hrl").

-export([struct_info/1, function_info/2, function_names/0]).

struct_info(_) -> erlang:error(function_clause).
%%% interface
% getRSAKey(This)
function_info('getRSAKey', params_type) ->
  {struct, []}
;
function_info('getRSAKey', reply_type) ->
  {struct, {'line_types', 'RSAKey'}};
function_info('getRSAKey', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% notifyEmailConfirmationResult(This, ParameterMap)
function_info('notifyEmailConfirmationResult', params_type) ->
  {struct, [{2, {map, string, string}}]}
;
function_info('notifyEmailConfirmationResult', reply_type) ->
  {struct, []};
function_info('notifyEmailConfirmationResult', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% registerVirtualAccount(This, Locale, EncryptedVirtualUserId, EncryptedPassword)
function_info('registerVirtualAccount', params_type) ->
  {struct, [{2, string},
          {3, string},
          {4, string}]}
;
function_info('registerVirtualAccount', reply_type) ->
  string;
function_info('registerVirtualAccount', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% requestVirtualAccountPasswordChange(This, VirtualMid, EncryptedVirtualUserId, EncryptedOldPassword, EncryptedNewPassword)
function_info('requestVirtualAccountPasswordChange', params_type) ->
  {struct, [{2, string},
          {3, string},
          {4, string},
          {5, string}]}
;
function_info('requestVirtualAccountPasswordChange', reply_type) ->
  {struct, []};
function_info('requestVirtualAccountPasswordChange', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% requestVirtualAccountPasswordSet(This, VirtualMid, EncryptedVirtualUserId, EncryptedNewPassword)
function_info('requestVirtualAccountPasswordSet', params_type) ->
  {struct, [{2, string},
          {3, string},
          {4, string}]}
;
function_info('requestVirtualAccountPasswordSet', reply_type) ->
  {struct, []};
function_info('requestVirtualAccountPasswordSet', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
% unregisterVirtualAccount(This, VirtualMid)
function_info('unregisterVirtualAccount', params_type) ->
  {struct, [{2, string}]}
;
function_info('unregisterVirtualAccount', reply_type) ->
  {struct, []};
function_info('unregisterVirtualAccount', exceptions) ->
  {struct, [{1, {struct, {'line_types', 'TalkException'}}}]}
;
function_info(_Func, _Info) -> erlang:error(function_clause).

function_names() -> 
  ['getRSAKey', 'notifyEmailConfirmationResult', 'registerVirtualAccount', 'requestVirtualAccountPasswordChange', 'requestVirtualAccountPasswordSet', 'unregisterVirtualAccount'].

