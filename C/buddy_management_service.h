/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef BUDDY_MANAGEMENT_SERVICE_H
#define BUDDY_MANAGEMENT_SERVICE_H

#include <thrift/c_glib/processor/thrift_dispatch_processor.h>

#include "line_types.h"

/* BuddyManagementService service interface */
typedef struct _BuddyManagementServiceIf BuddyManagementServiceIf;  /* dummy object */

struct _BuddyManagementServiceIfInterface
{
  GTypeInterface parent;

  gboolean (*add_buddy_member) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
  gboolean (*add_buddy_members) (BuddyManagementServiceIf *iface, const gchar * requestId, const GPtrArray * userMids, TalkException ** e, GError **error);
  gboolean (*block_buddy_member) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * mid, TalkException ** e, GError **error);
  gboolean (*commit_send_messages_to_all) (BuddyManagementServiceIf *iface, GPtrArray ** _return, const GPtrArray * requestIdList, TalkException ** e, GError **error);
  gboolean (*commit_send_messages_to_mids) (BuddyManagementServiceIf *iface, GPtrArray ** _return, const GPtrArray * requestIdList, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*contains_buddy_member) (BuddyManagementServiceIf *iface, gboolean* _return, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
  gboolean (*download_message_content) (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, const gchar * messageId, TalkException ** e, GError **error);
  gboolean (*download_message_content_preview) (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, const gchar * messageId, TalkException ** e, GError **error);
  gboolean (*download_profile_image) (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, TalkException ** e, GError **error);
  gboolean (*download_profile_image_preview) (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, TalkException ** e, GError **error);
  gboolean (*get_active_member_count_by_buddy_mid) (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*get_active_member_mids_by_buddy_mid) (BuddyManagementServiceIf *iface, GPtrArray ** _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*get_all_buddy_members) (BuddyManagementServiceIf *iface, GPtrArray ** _return, TalkException ** e, GError **error);
  gboolean (*get_blocked_buddy_members) (BuddyManagementServiceIf *iface, GPtrArray ** _return, TalkException ** e, GError **error);
  gboolean (*get_blocker_count_by_buddy_mid) (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*get_buddy_detail_by_mid) (BuddyManagementServiceIf *iface, BuddyDetail ** _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*get_buddy_profile) (BuddyManagementServiceIf *iface, BuddyProfile ** _return, TalkException ** e, GError **error);
  gboolean (*get_contact_ticket) (BuddyManagementServiceIf *iface, Ticket ** _return, TalkException ** e, GError **error);
  gboolean (*get_member_count_by_buddy_mid) (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*get_send_buddy_message_result) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * sendBuddyMessageRequestId, TalkException ** e, GError **error);
  gboolean (*get_set_buddy_on_air_result) (BuddyManagementServiceIf *iface, SetBuddyOnAirResult ** _return, const gchar * setBuddyOnAirRequestId, TalkException ** e, GError **error);
  gboolean (*get_update_buddy_profile_result) (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * updateBuddyProfileRequestId, TalkException ** e, GError **error);
  gboolean (*is_buddy_on_air_by_mid) (BuddyManagementServiceIf *iface, gboolean* _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*link_and_send_buddy_content_message_to_all_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const gchar * sourceContentId, TalkException ** e, GError **error);
  gboolean (*link_and_send_buddy_content_message_to_mids) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const gchar * sourceContentId, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*notify_buddy_blocked) (BuddyManagementServiceIf *iface, const gchar * buddyMid, const gchar * blockerMid, TalkException ** e, GError **error);
  gboolean (*notify_buddy_unblocked) (BuddyManagementServiceIf *iface, const gchar * buddyMid, const gchar * blockerMid, TalkException ** e, GError **error);
  gboolean (*register_buddy) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMeessage, const GByteArray * picture, const GHashTable * settings, TalkException ** e, GError **error);
  gboolean (*register_buddy_admin) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMessage, const GByteArray * picture, TalkException ** e, GError **error);
  gboolean (*reissue_contact_ticket) (BuddyManagementServiceIf *iface, gchar ** _return, const gint64 expirationTime, const gint32 maxUseCount, TalkException ** e, GError **error);
  gboolean (*remove_buddy_member) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
  gboolean (*remove_buddy_members) (BuddyManagementServiceIf *iface, const gchar * requestId, const GPtrArray * userMids, TalkException ** e, GError **error);
  gboolean (*send_buddy_content_message_to_all) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, TalkException ** e, GError **error);
  gboolean (*send_buddy_content_message_to_all_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, TalkException ** e, GError **error);
  gboolean (*send_buddy_content_message_to_mids) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*send_buddy_content_message_to_mids_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*send_buddy_message_to_all) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, TalkException ** e, GError **error);
  gboolean (*send_buddy_message_to_all_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, TalkException ** e, GError **error);
  gboolean (*send_buddy_message_to_mids) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*send_buddy_message_to_mids_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*send_individual_event_to_all_async) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * buddyMid, const NotificationStatus notificationStatus, TalkException ** e, GError **error);
  gboolean (*set_buddy_on_air) (BuddyManagementServiceIf *iface, SetBuddyOnAirResult ** _return, const gchar * requestId, const gboolean onAir, TalkException ** e, GError **error);
  gboolean (*set_buddy_on_air_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const gboolean onAir, TalkException ** e, GError **error);
  gboolean (*store_message) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const BuddyMessageRequest * messageRequest, TalkException ** e, GError **error);
  gboolean (*unblock_buddy_member) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * mid, TalkException ** e, GError **error);
  gboolean (*unregister_buddy) (BuddyManagementServiceIf *iface, const gchar * requestId, TalkException ** e, GError **error);
  gboolean (*unregister_buddy_admin) (BuddyManagementServiceIf *iface, const gchar * requestId, TalkException ** e, GError **error);
  gboolean (*update_buddy_admin_profile_attribute) (BuddyManagementServiceIf *iface, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
  gboolean (*update_buddy_admin_profile_image) (BuddyManagementServiceIf *iface, const gchar * requestId, const GByteArray * picture, TalkException ** e, GError **error);
  gboolean (*update_buddy_profile_attributes) (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
  gboolean (*update_buddy_profile_attributes_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
  gboolean (*update_buddy_profile_image) (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * requestId, const GByteArray * image, TalkException ** e, GError **error);
  gboolean (*update_buddy_profile_image_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const GByteArray * image, TalkException ** e, GError **error);
  gboolean (*update_buddy_search_id) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * searchId, TalkException ** e, GError **error);
  gboolean (*update_buddy_settings) (BuddyManagementServiceIf *iface, const GHashTable * settings, TalkException ** e, GError **error);
  gboolean (*upload_buddy_content) (BuddyManagementServiceIf *iface, gchar ** _return, const ContentType contentType, const GByteArray * content, TalkException ** e, GError **error);
};
typedef struct _BuddyManagementServiceIfInterface BuddyManagementServiceIfInterface;

GType buddy_management_service_if_get_type (void);
#define TYPE_BUDDY_MANAGEMENT_SERVICE_IF (buddy_management_service_if_get_type())
#define BUDDY_MANAGEMENT_SERVICE_IF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_IF, BuddyManagementServiceIf))
#define IS_BUDDY_MANAGEMENT_SERVICE_IF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_IF))
#define BUDDY_MANAGEMENT_SERVICE_IF_GET_INTERFACE(inst) (G_TYPE_INSTANCE_GET_INTERFACE ((inst), TYPE_BUDDY_MANAGEMENT_SERVICE_IF, BuddyManagementServiceIfInterface))

gboolean buddy_management_service_if_add_buddy_member (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_add_buddy_members (BuddyManagementServiceIf *iface, const gchar * requestId, const GPtrArray * userMids, TalkException ** e, GError **error);
gboolean buddy_management_service_if_block_buddy_member (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * mid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_commit_send_messages_to_all (BuddyManagementServiceIf *iface, GPtrArray ** _return, const GPtrArray * requestIdList, TalkException ** e, GError **error);
gboolean buddy_management_service_if_commit_send_messages_to_mids (BuddyManagementServiceIf *iface, GPtrArray ** _return, const GPtrArray * requestIdList, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_if_contains_buddy_member (BuddyManagementServiceIf *iface, gboolean* _return, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_download_message_content (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, const gchar * messageId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_download_message_content_preview (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, const gchar * messageId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_download_profile_image (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_download_profile_image_preview (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_active_member_count_by_buddy_mid (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_active_member_mids_by_buddy_mid (BuddyManagementServiceIf *iface, GPtrArray ** _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_all_buddy_members (BuddyManagementServiceIf *iface, GPtrArray ** _return, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_blocked_buddy_members (BuddyManagementServiceIf *iface, GPtrArray ** _return, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_blocker_count_by_buddy_mid (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_buddy_detail_by_mid (BuddyManagementServiceIf *iface, BuddyDetail ** _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_buddy_profile (BuddyManagementServiceIf *iface, BuddyProfile ** _return, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_contact_ticket (BuddyManagementServiceIf *iface, Ticket ** _return, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_member_count_by_buddy_mid (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_send_buddy_message_result (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * sendBuddyMessageRequestId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_set_buddy_on_air_result (BuddyManagementServiceIf *iface, SetBuddyOnAirResult ** _return, const gchar * setBuddyOnAirRequestId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_get_update_buddy_profile_result (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * updateBuddyProfileRequestId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_is_buddy_on_air_by_mid (BuddyManagementServiceIf *iface, gboolean* _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_link_and_send_buddy_content_message_to_all_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const gchar * sourceContentId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_link_and_send_buddy_content_message_to_mids (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const gchar * sourceContentId, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_if_notify_buddy_blocked (BuddyManagementServiceIf *iface, const gchar * buddyMid, const gchar * blockerMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_notify_buddy_unblocked (BuddyManagementServiceIf *iface, const gchar * buddyMid, const gchar * blockerMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_register_buddy (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMeessage, const GByteArray * picture, const GHashTable * settings, TalkException ** e, GError **error);
gboolean buddy_management_service_if_register_buddy_admin (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMessage, const GByteArray * picture, TalkException ** e, GError **error);
gboolean buddy_management_service_if_reissue_contact_ticket (BuddyManagementServiceIf *iface, gchar ** _return, const gint64 expirationTime, const gint32 maxUseCount, TalkException ** e, GError **error);
gboolean buddy_management_service_if_remove_buddy_member (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_remove_buddy_members (BuddyManagementServiceIf *iface, const gchar * requestId, const GPtrArray * userMids, TalkException ** e, GError **error);
gboolean buddy_management_service_if_send_buddy_content_message_to_all (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, TalkException ** e, GError **error);
gboolean buddy_management_service_if_send_buddy_content_message_to_all_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, TalkException ** e, GError **error);
gboolean buddy_management_service_if_send_buddy_content_message_to_mids (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_if_send_buddy_content_message_to_mids_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_if_send_buddy_message_to_all (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, TalkException ** e, GError **error);
gboolean buddy_management_service_if_send_buddy_message_to_all_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, TalkException ** e, GError **error);
gboolean buddy_management_service_if_send_buddy_message_to_mids (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_if_send_buddy_message_to_mids_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_if_send_individual_event_to_all_async (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * buddyMid, const NotificationStatus notificationStatus, TalkException ** e, GError **error);
gboolean buddy_management_service_if_set_buddy_on_air (BuddyManagementServiceIf *iface, SetBuddyOnAirResult ** _return, const gchar * requestId, const gboolean onAir, TalkException ** e, GError **error);
gboolean buddy_management_service_if_set_buddy_on_air_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const gboolean onAir, TalkException ** e, GError **error);
gboolean buddy_management_service_if_store_message (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const BuddyMessageRequest * messageRequest, TalkException ** e, GError **error);
gboolean buddy_management_service_if_unblock_buddy_member (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * mid, TalkException ** e, GError **error);
gboolean buddy_management_service_if_unregister_buddy (BuddyManagementServiceIf *iface, const gchar * requestId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_unregister_buddy_admin (BuddyManagementServiceIf *iface, const gchar * requestId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_update_buddy_admin_profile_attribute (BuddyManagementServiceIf *iface, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
gboolean buddy_management_service_if_update_buddy_admin_profile_image (BuddyManagementServiceIf *iface, const gchar * requestId, const GByteArray * picture, TalkException ** e, GError **error);
gboolean buddy_management_service_if_update_buddy_profile_attributes (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
gboolean buddy_management_service_if_update_buddy_profile_attributes_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
gboolean buddy_management_service_if_update_buddy_profile_image (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * requestId, const GByteArray * image, TalkException ** e, GError **error);
gboolean buddy_management_service_if_update_buddy_profile_image_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const GByteArray * image, TalkException ** e, GError **error);
gboolean buddy_management_service_if_update_buddy_search_id (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * searchId, TalkException ** e, GError **error);
gboolean buddy_management_service_if_update_buddy_settings (BuddyManagementServiceIf *iface, const GHashTable * settings, TalkException ** e, GError **error);
gboolean buddy_management_service_if_upload_buddy_content (BuddyManagementServiceIf *iface, gchar ** _return, const ContentType contentType, const GByteArray * content, TalkException ** e, GError **error);

/* BuddyManagementService service client */
struct _BuddyManagementServiceClient
{
  GObject parent;

  ThriftProtocol *input_protocol;
  ThriftProtocol *output_protocol;
};
typedef struct _BuddyManagementServiceClient BuddyManagementServiceClient;

struct _BuddyManagementServiceClientClass
{
  GObjectClass parent;
};
typedef struct _BuddyManagementServiceClientClass BuddyManagementServiceClientClass;

GType buddy_management_service_client_get_type (void);
#define TYPE_BUDDY_MANAGEMENT_SERVICE_CLIENT (buddy_management_service_client_get_type())
#define BUDDY_MANAGEMENT_SERVICE_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_CLIENT, BuddyManagementServiceClient))
#define BUDDY_MANAGEMENT_SERVICE_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), TYPE_BUDDY_MANAGEMENT_SERVICE_CLIENT, BuddyManagementServiceClientClass))
#define BUDDY_MANAGEMENT_SERVICE_IS_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_CLIENT))
#define BUDDY_MANAGEMENT_SERVICE_IS_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BUDDY_MANAGEMENT_SERVICE_CLIENT))
#define BUDDY_MANAGEMENT_SERVICE_CLIENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_CLIENT, BuddyManagementServiceClientClass))

gboolean buddy_management_service_client_add_buddy_member (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * userMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_add_buddy_member (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * userMid, GError ** error);
gboolean buddy_management_service_client_recv_add_buddy_member (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_add_buddy_members (BuddyManagementServiceIf * iface, const gchar * requestId, const GPtrArray * userMids, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_add_buddy_members (BuddyManagementServiceIf * iface, const gchar * requestId, const GPtrArray * userMids, GError ** error);
gboolean buddy_management_service_client_recv_add_buddy_members (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_block_buddy_member (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * mid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_block_buddy_member (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * mid, GError ** error);
gboolean buddy_management_service_client_recv_block_buddy_member (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_commit_send_messages_to_all (BuddyManagementServiceIf * iface, GPtrArray ** _return, const GPtrArray * requestIdList, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_commit_send_messages_to_all (BuddyManagementServiceIf * iface, const GPtrArray * requestIdList, GError ** error);
gboolean buddy_management_service_client_recv_commit_send_messages_to_all (BuddyManagementServiceIf * iface, GPtrArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_commit_send_messages_to_mids (BuddyManagementServiceIf * iface, GPtrArray ** _return, const GPtrArray * requestIdList, const GPtrArray * mids, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_commit_send_messages_to_mids (BuddyManagementServiceIf * iface, const GPtrArray * requestIdList, const GPtrArray * mids, GError ** error);
gboolean buddy_management_service_client_recv_commit_send_messages_to_mids (BuddyManagementServiceIf * iface, GPtrArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_contains_buddy_member (BuddyManagementServiceIf * iface, gboolean* _return, const gchar * requestId, const gchar * userMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_contains_buddy_member (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * userMid, GError ** error);
gboolean buddy_management_service_client_recv_contains_buddy_member (BuddyManagementServiceIf * iface, gboolean* _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_download_message_content (BuddyManagementServiceIf * iface, GByteArray ** _return, const gchar * requestId, const gchar * messageId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_download_message_content (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * messageId, GError ** error);
gboolean buddy_management_service_client_recv_download_message_content (BuddyManagementServiceIf * iface, GByteArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_download_message_content_preview (BuddyManagementServiceIf * iface, GByteArray ** _return, const gchar * requestId, const gchar * messageId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_download_message_content_preview (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * messageId, GError ** error);
gboolean buddy_management_service_client_recv_download_message_content_preview (BuddyManagementServiceIf * iface, GByteArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_download_profile_image (BuddyManagementServiceIf * iface, GByteArray ** _return, const gchar * requestId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_download_profile_image (BuddyManagementServiceIf * iface, const gchar * requestId, GError ** error);
gboolean buddy_management_service_client_recv_download_profile_image (BuddyManagementServiceIf * iface, GByteArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_download_profile_image_preview (BuddyManagementServiceIf * iface, GByteArray ** _return, const gchar * requestId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_download_profile_image_preview (BuddyManagementServiceIf * iface, const gchar * requestId, GError ** error);
gboolean buddy_management_service_client_recv_download_profile_image_preview (BuddyManagementServiceIf * iface, GByteArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_active_member_count_by_buddy_mid (BuddyManagementServiceIf * iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_active_member_count_by_buddy_mid (BuddyManagementServiceIf * iface, const gchar * buddyMid, GError ** error);
gboolean buddy_management_service_client_recv_get_active_member_count_by_buddy_mid (BuddyManagementServiceIf * iface, gint64* _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_active_member_mids_by_buddy_mid (BuddyManagementServiceIf * iface, GPtrArray ** _return, const gchar * buddyMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_active_member_mids_by_buddy_mid (BuddyManagementServiceIf * iface, const gchar * buddyMid, GError ** error);
gboolean buddy_management_service_client_recv_get_active_member_mids_by_buddy_mid (BuddyManagementServiceIf * iface, GPtrArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_all_buddy_members (BuddyManagementServiceIf * iface, GPtrArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_all_buddy_members (BuddyManagementServiceIf * iface, GError ** error);
gboolean buddy_management_service_client_recv_get_all_buddy_members (BuddyManagementServiceIf * iface, GPtrArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_blocked_buddy_members (BuddyManagementServiceIf * iface, GPtrArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_blocked_buddy_members (BuddyManagementServiceIf * iface, GError ** error);
gboolean buddy_management_service_client_recv_get_blocked_buddy_members (BuddyManagementServiceIf * iface, GPtrArray ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_blocker_count_by_buddy_mid (BuddyManagementServiceIf * iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_blocker_count_by_buddy_mid (BuddyManagementServiceIf * iface, const gchar * buddyMid, GError ** error);
gboolean buddy_management_service_client_recv_get_blocker_count_by_buddy_mid (BuddyManagementServiceIf * iface, gint64* _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_buddy_detail_by_mid (BuddyManagementServiceIf * iface, BuddyDetail ** _return, const gchar * buddyMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_buddy_detail_by_mid (BuddyManagementServiceIf * iface, const gchar * buddyMid, GError ** error);
gboolean buddy_management_service_client_recv_get_buddy_detail_by_mid (BuddyManagementServiceIf * iface, BuddyDetail ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_buddy_profile (BuddyManagementServiceIf * iface, BuddyProfile ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_buddy_profile (BuddyManagementServiceIf * iface, GError ** error);
gboolean buddy_management_service_client_recv_get_buddy_profile (BuddyManagementServiceIf * iface, BuddyProfile ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_contact_ticket (BuddyManagementServiceIf * iface, Ticket ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_contact_ticket (BuddyManagementServiceIf * iface, GError ** error);
gboolean buddy_management_service_client_recv_get_contact_ticket (BuddyManagementServiceIf * iface, Ticket ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_member_count_by_buddy_mid (BuddyManagementServiceIf * iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_member_count_by_buddy_mid (BuddyManagementServiceIf * iface, const gchar * buddyMid, GError ** error);
gboolean buddy_management_service_client_recv_get_member_count_by_buddy_mid (BuddyManagementServiceIf * iface, gint64* _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_send_buddy_message_result (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, const gchar * sendBuddyMessageRequestId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_send_buddy_message_result (BuddyManagementServiceIf * iface, const gchar * sendBuddyMessageRequestId, GError ** error);
gboolean buddy_management_service_client_recv_get_send_buddy_message_result (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_set_buddy_on_air_result (BuddyManagementServiceIf * iface, SetBuddyOnAirResult ** _return, const gchar * setBuddyOnAirRequestId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_set_buddy_on_air_result (BuddyManagementServiceIf * iface, const gchar * setBuddyOnAirRequestId, GError ** error);
gboolean buddy_management_service_client_recv_get_set_buddy_on_air_result (BuddyManagementServiceIf * iface, SetBuddyOnAirResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_get_update_buddy_profile_result (BuddyManagementServiceIf * iface, UpdateBuddyProfileResult ** _return, const gchar * updateBuddyProfileRequestId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_get_update_buddy_profile_result (BuddyManagementServiceIf * iface, const gchar * updateBuddyProfileRequestId, GError ** error);
gboolean buddy_management_service_client_recv_get_update_buddy_profile_result (BuddyManagementServiceIf * iface, UpdateBuddyProfileResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_is_buddy_on_air_by_mid (BuddyManagementServiceIf * iface, gboolean* _return, const gchar * buddyMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_is_buddy_on_air_by_mid (BuddyManagementServiceIf * iface, const gchar * buddyMid, GError ** error);
gboolean buddy_management_service_client_recv_is_buddy_on_air_by_mid (BuddyManagementServiceIf * iface, gboolean* _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_link_and_send_buddy_content_message_to_all_async (BuddyManagementServiceIf * iface, gchar ** _return, const gchar * requestId, const Message * msg, const gchar * sourceContentId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_link_and_send_buddy_content_message_to_all_async (BuddyManagementServiceIf * iface, const gchar * requestId, const Message * msg, const gchar * sourceContentId, GError ** error);
gboolean buddy_management_service_client_recv_link_and_send_buddy_content_message_to_all_async (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_link_and_send_buddy_content_message_to_mids (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const gchar * sourceContentId, const GPtrArray * mids, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_link_and_send_buddy_content_message_to_mids (BuddyManagementServiceIf * iface, const gchar * requestId, const Message * msg, const gchar * sourceContentId, const GPtrArray * mids, GError ** error);
gboolean buddy_management_service_client_recv_link_and_send_buddy_content_message_to_mids (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_notify_buddy_blocked (BuddyManagementServiceIf * iface, const gchar * buddyMid, const gchar * blockerMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_notify_buddy_blocked (BuddyManagementServiceIf * iface, const gchar * buddyMid, const gchar * blockerMid, GError ** error);
gboolean buddy_management_service_client_recv_notify_buddy_blocked (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_notify_buddy_unblocked (BuddyManagementServiceIf * iface, const gchar * buddyMid, const gchar * blockerMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_notify_buddy_unblocked (BuddyManagementServiceIf * iface, const gchar * buddyMid, const gchar * blockerMid, GError ** error);
gboolean buddy_management_service_client_recv_notify_buddy_unblocked (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_register_buddy (BuddyManagementServiceIf * iface, gchar ** _return, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMeessage, const GByteArray * picture, const GHashTable * settings, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_register_buddy (BuddyManagementServiceIf * iface, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMeessage, const GByteArray * picture, const GHashTable * settings, GError ** error);
gboolean buddy_management_service_client_recv_register_buddy (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_register_buddy_admin (BuddyManagementServiceIf * iface, gchar ** _return, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMessage, const GByteArray * picture, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_register_buddy_admin (BuddyManagementServiceIf * iface, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMessage, const GByteArray * picture, GError ** error);
gboolean buddy_management_service_client_recv_register_buddy_admin (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_reissue_contact_ticket (BuddyManagementServiceIf * iface, gchar ** _return, const gint64 expirationTime, const gint32 maxUseCount, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_reissue_contact_ticket (BuddyManagementServiceIf * iface, const gint64 expirationTime, const gint32 maxUseCount, GError ** error);
gboolean buddy_management_service_client_recv_reissue_contact_ticket (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_remove_buddy_member (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * userMid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_remove_buddy_member (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * userMid, GError ** error);
gboolean buddy_management_service_client_recv_remove_buddy_member (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_remove_buddy_members (BuddyManagementServiceIf * iface, const gchar * requestId, const GPtrArray * userMids, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_remove_buddy_members (BuddyManagementServiceIf * iface, const gchar * requestId, const GPtrArray * userMids, GError ** error);
gboolean buddy_management_service_client_recv_remove_buddy_members (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_buddy_content_message_to_all (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_send_buddy_content_message_to_all (BuddyManagementServiceIf * iface, const gchar * requestId, const Message * msg, const GByteArray * content, GError ** error);
gboolean buddy_management_service_client_recv_send_buddy_content_message_to_all (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_buddy_content_message_to_all_async (BuddyManagementServiceIf * iface, gchar ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_send_buddy_content_message_to_all_async (BuddyManagementServiceIf * iface, const gchar * requestId, const Message * msg, const GByteArray * content, GError ** error);
gboolean buddy_management_service_client_recv_send_buddy_content_message_to_all_async (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_buddy_content_message_to_mids (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_send_buddy_content_message_to_mids (BuddyManagementServiceIf * iface, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, GError ** error);
gboolean buddy_management_service_client_recv_send_buddy_content_message_to_mids (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_buddy_content_message_to_mids_async (BuddyManagementServiceIf * iface, gchar ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_send_buddy_content_message_to_mids_async (BuddyManagementServiceIf * iface, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, GError ** error);
gboolean buddy_management_service_client_recv_send_buddy_content_message_to_mids_async (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_buddy_message_to_all (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_send_buddy_message_to_all (BuddyManagementServiceIf * iface, const gchar * requestId, const Message * msg, GError ** error);
gboolean buddy_management_service_client_recv_send_buddy_message_to_all (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_buddy_message_to_all_async (BuddyManagementServiceIf * iface, gchar ** _return, const gchar * requestId, const Message * msg, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_send_buddy_message_to_all_async (BuddyManagementServiceIf * iface, const gchar * requestId, const Message * msg, GError ** error);
gboolean buddy_management_service_client_recv_send_buddy_message_to_all_async (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_buddy_message_to_mids (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GPtrArray * mids, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_send_buddy_message_to_mids (BuddyManagementServiceIf * iface, const gchar * requestId, const Message * msg, const GPtrArray * mids, GError ** error);
gboolean buddy_management_service_client_recv_send_buddy_message_to_mids (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_buddy_message_to_mids_async (BuddyManagementServiceIf * iface, gchar ** _return, const gchar * requestId, const Message * msg, const GPtrArray * mids, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_send_buddy_message_to_mids_async (BuddyManagementServiceIf * iface, const gchar * requestId, const Message * msg, const GPtrArray * mids, GError ** error);
gboolean buddy_management_service_client_recv_send_buddy_message_to_mids_async (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_individual_event_to_all_async (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * buddyMid, const NotificationStatus notificationStatus, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_send_individual_event_to_all_async (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * buddyMid, const NotificationStatus notificationStatus, GError ** error);
gboolean buddy_management_service_client_recv_send_individual_event_to_all_async (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_set_buddy_on_air (BuddyManagementServiceIf * iface, SetBuddyOnAirResult ** _return, const gchar * requestId, const gboolean onAir, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_set_buddy_on_air (BuddyManagementServiceIf * iface, const gchar * requestId, const gboolean onAir, GError ** error);
gboolean buddy_management_service_client_recv_set_buddy_on_air (BuddyManagementServiceIf * iface, SetBuddyOnAirResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_set_buddy_on_air_async (BuddyManagementServiceIf * iface, gchar ** _return, const gchar * requestId, const gboolean onAir, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_set_buddy_on_air_async (BuddyManagementServiceIf * iface, const gchar * requestId, const gboolean onAir, GError ** error);
gboolean buddy_management_service_client_recv_set_buddy_on_air_async (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_store_message (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, const gchar * requestId, const BuddyMessageRequest * messageRequest, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_store_message (BuddyManagementServiceIf * iface, const gchar * requestId, const BuddyMessageRequest * messageRequest, GError ** error);
gboolean buddy_management_service_client_recv_store_message (BuddyManagementServiceIf * iface, SendBuddyMessageResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_unblock_buddy_member (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * mid, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_unblock_buddy_member (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * mid, GError ** error);
gboolean buddy_management_service_client_recv_unblock_buddy_member (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_unregister_buddy (BuddyManagementServiceIf * iface, const gchar * requestId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_unregister_buddy (BuddyManagementServiceIf * iface, const gchar * requestId, GError ** error);
gboolean buddy_management_service_client_recv_unregister_buddy (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_unregister_buddy_admin (BuddyManagementServiceIf * iface, const gchar * requestId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_unregister_buddy_admin (BuddyManagementServiceIf * iface, const gchar * requestId, GError ** error);
gboolean buddy_management_service_client_recv_unregister_buddy_admin (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_update_buddy_admin_profile_attribute (BuddyManagementServiceIf * iface, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_update_buddy_admin_profile_attribute (BuddyManagementServiceIf * iface, const gchar * requestId, const GHashTable * attributes, GError ** error);
gboolean buddy_management_service_client_recv_update_buddy_admin_profile_attribute (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_update_buddy_admin_profile_image (BuddyManagementServiceIf * iface, const gchar * requestId, const GByteArray * picture, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_update_buddy_admin_profile_image (BuddyManagementServiceIf * iface, const gchar * requestId, const GByteArray * picture, GError ** error);
gboolean buddy_management_service_client_recv_update_buddy_admin_profile_image (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_update_buddy_profile_attributes (BuddyManagementServiceIf * iface, UpdateBuddyProfileResult ** _return, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_update_buddy_profile_attributes (BuddyManagementServiceIf * iface, const gchar * requestId, const GHashTable * attributes, GError ** error);
gboolean buddy_management_service_client_recv_update_buddy_profile_attributes (BuddyManagementServiceIf * iface, UpdateBuddyProfileResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_update_buddy_profile_attributes_async (BuddyManagementServiceIf * iface, gchar ** _return, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_update_buddy_profile_attributes_async (BuddyManagementServiceIf * iface, const gchar * requestId, const GHashTable * attributes, GError ** error);
gboolean buddy_management_service_client_recv_update_buddy_profile_attributes_async (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_update_buddy_profile_image (BuddyManagementServiceIf * iface, UpdateBuddyProfileResult ** _return, const gchar * requestId, const GByteArray * image, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_update_buddy_profile_image (BuddyManagementServiceIf * iface, const gchar * requestId, const GByteArray * image, GError ** error);
gboolean buddy_management_service_client_recv_update_buddy_profile_image (BuddyManagementServiceIf * iface, UpdateBuddyProfileResult ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_update_buddy_profile_image_async (BuddyManagementServiceIf * iface, gchar ** _return, const gchar * requestId, const GByteArray * image, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_update_buddy_profile_image_async (BuddyManagementServiceIf * iface, const gchar * requestId, const GByteArray * image, GError ** error);
gboolean buddy_management_service_client_recv_update_buddy_profile_image_async (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_update_buddy_search_id (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * searchId, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_update_buddy_search_id (BuddyManagementServiceIf * iface, const gchar * requestId, const gchar * searchId, GError ** error);
gboolean buddy_management_service_client_recv_update_buddy_search_id (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_update_buddy_settings (BuddyManagementServiceIf * iface, const GHashTable * settings, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_update_buddy_settings (BuddyManagementServiceIf * iface, const GHashTable * settings, GError ** error);
gboolean buddy_management_service_client_recv_update_buddy_settings (BuddyManagementServiceIf * iface, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_upload_buddy_content (BuddyManagementServiceIf * iface, gchar ** _return, const ContentType contentType, const GByteArray * content, TalkException ** e, GError ** error);
gboolean buddy_management_service_client_send_upload_buddy_content (BuddyManagementServiceIf * iface, const ContentType contentType, const GByteArray * content, GError ** error);
gboolean buddy_management_service_client_recv_upload_buddy_content (BuddyManagementServiceIf * iface, gchar ** _return, TalkException ** e, GError ** error);
void buddy_management_service_client_set_property (GObject *object, guint property_id, const GValue *value, GParamSpec *pspec);
void buddy_management_service_client_get_property (GObject *object, guint property_id, GValue *value, GParamSpec *pspec);

/* BuddyManagementService handler (abstract base class) */
struct _BuddyManagementServiceHandler
{
  GObject parent;
};
typedef struct _BuddyManagementServiceHandler BuddyManagementServiceHandler;

struct _BuddyManagementServiceHandlerClass
{
  GObjectClass parent;

  gboolean (*add_buddy_member) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
  gboolean (*add_buddy_members) (BuddyManagementServiceIf *iface, const gchar * requestId, const GPtrArray * userMids, TalkException ** e, GError **error);
  gboolean (*block_buddy_member) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * mid, TalkException ** e, GError **error);
  gboolean (*commit_send_messages_to_all) (BuddyManagementServiceIf *iface, GPtrArray ** _return, const GPtrArray * requestIdList, TalkException ** e, GError **error);
  gboolean (*commit_send_messages_to_mids) (BuddyManagementServiceIf *iface, GPtrArray ** _return, const GPtrArray * requestIdList, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*contains_buddy_member) (BuddyManagementServiceIf *iface, gboolean* _return, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
  gboolean (*download_message_content) (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, const gchar * messageId, TalkException ** e, GError **error);
  gboolean (*download_message_content_preview) (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, const gchar * messageId, TalkException ** e, GError **error);
  gboolean (*download_profile_image) (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, TalkException ** e, GError **error);
  gboolean (*download_profile_image_preview) (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, TalkException ** e, GError **error);
  gboolean (*get_active_member_count_by_buddy_mid) (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*get_active_member_mids_by_buddy_mid) (BuddyManagementServiceIf *iface, GPtrArray ** _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*get_all_buddy_members) (BuddyManagementServiceIf *iface, GPtrArray ** _return, TalkException ** e, GError **error);
  gboolean (*get_blocked_buddy_members) (BuddyManagementServiceIf *iface, GPtrArray ** _return, TalkException ** e, GError **error);
  gboolean (*get_blocker_count_by_buddy_mid) (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*get_buddy_detail_by_mid) (BuddyManagementServiceIf *iface, BuddyDetail ** _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*get_buddy_profile) (BuddyManagementServiceIf *iface, BuddyProfile ** _return, TalkException ** e, GError **error);
  gboolean (*get_contact_ticket) (BuddyManagementServiceIf *iface, Ticket ** _return, TalkException ** e, GError **error);
  gboolean (*get_member_count_by_buddy_mid) (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*get_send_buddy_message_result) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * sendBuddyMessageRequestId, TalkException ** e, GError **error);
  gboolean (*get_set_buddy_on_air_result) (BuddyManagementServiceIf *iface, SetBuddyOnAirResult ** _return, const gchar * setBuddyOnAirRequestId, TalkException ** e, GError **error);
  gboolean (*get_update_buddy_profile_result) (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * updateBuddyProfileRequestId, TalkException ** e, GError **error);
  gboolean (*is_buddy_on_air_by_mid) (BuddyManagementServiceIf *iface, gboolean* _return, const gchar * buddyMid, TalkException ** e, GError **error);
  gboolean (*link_and_send_buddy_content_message_to_all_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const gchar * sourceContentId, TalkException ** e, GError **error);
  gboolean (*link_and_send_buddy_content_message_to_mids) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const gchar * sourceContentId, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*notify_buddy_blocked) (BuddyManagementServiceIf *iface, const gchar * buddyMid, const gchar * blockerMid, TalkException ** e, GError **error);
  gboolean (*notify_buddy_unblocked) (BuddyManagementServiceIf *iface, const gchar * buddyMid, const gchar * blockerMid, TalkException ** e, GError **error);
  gboolean (*register_buddy) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMeessage, const GByteArray * picture, const GHashTable * settings, TalkException ** e, GError **error);
  gboolean (*register_buddy_admin) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMessage, const GByteArray * picture, TalkException ** e, GError **error);
  gboolean (*reissue_contact_ticket) (BuddyManagementServiceIf *iface, gchar ** _return, const gint64 expirationTime, const gint32 maxUseCount, TalkException ** e, GError **error);
  gboolean (*remove_buddy_member) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
  gboolean (*remove_buddy_members) (BuddyManagementServiceIf *iface, const gchar * requestId, const GPtrArray * userMids, TalkException ** e, GError **error);
  gboolean (*send_buddy_content_message_to_all) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, TalkException ** e, GError **error);
  gboolean (*send_buddy_content_message_to_all_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, TalkException ** e, GError **error);
  gboolean (*send_buddy_content_message_to_mids) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*send_buddy_content_message_to_mids_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*send_buddy_message_to_all) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, TalkException ** e, GError **error);
  gboolean (*send_buddy_message_to_all_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, TalkException ** e, GError **error);
  gboolean (*send_buddy_message_to_mids) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*send_buddy_message_to_mids_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GPtrArray * mids, TalkException ** e, GError **error);
  gboolean (*send_individual_event_to_all_async) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * buddyMid, const NotificationStatus notificationStatus, TalkException ** e, GError **error);
  gboolean (*set_buddy_on_air) (BuddyManagementServiceIf *iface, SetBuddyOnAirResult ** _return, const gchar * requestId, const gboolean onAir, TalkException ** e, GError **error);
  gboolean (*set_buddy_on_air_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const gboolean onAir, TalkException ** e, GError **error);
  gboolean (*store_message) (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const BuddyMessageRequest * messageRequest, TalkException ** e, GError **error);
  gboolean (*unblock_buddy_member) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * mid, TalkException ** e, GError **error);
  gboolean (*unregister_buddy) (BuddyManagementServiceIf *iface, const gchar * requestId, TalkException ** e, GError **error);
  gboolean (*unregister_buddy_admin) (BuddyManagementServiceIf *iface, const gchar * requestId, TalkException ** e, GError **error);
  gboolean (*update_buddy_admin_profile_attribute) (BuddyManagementServiceIf *iface, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
  gboolean (*update_buddy_admin_profile_image) (BuddyManagementServiceIf *iface, const gchar * requestId, const GByteArray * picture, TalkException ** e, GError **error);
  gboolean (*update_buddy_profile_attributes) (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
  gboolean (*update_buddy_profile_attributes_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
  gboolean (*update_buddy_profile_image) (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * requestId, const GByteArray * image, TalkException ** e, GError **error);
  gboolean (*update_buddy_profile_image_async) (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const GByteArray * image, TalkException ** e, GError **error);
  gboolean (*update_buddy_search_id) (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * searchId, TalkException ** e, GError **error);
  gboolean (*update_buddy_settings) (BuddyManagementServiceIf *iface, const GHashTable * settings, TalkException ** e, GError **error);
  gboolean (*upload_buddy_content) (BuddyManagementServiceIf *iface, gchar ** _return, const ContentType contentType, const GByteArray * content, TalkException ** e, GError **error);
};
typedef struct _BuddyManagementServiceHandlerClass BuddyManagementServiceHandlerClass;

GType buddy_management_service_handler_get_type (void);
#define TYPE_BUDDY_MANAGEMENT_SERVICE_HANDLER (buddy_management_service_handler_get_type())
#define BUDDY_MANAGEMENT_SERVICE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_HANDLER, BuddyManagementServiceHandler))
#define IS_BUDDY_MANAGEMENT_SERVICE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_HANDLER))
#define BUDDY_MANAGEMENT_SERVICE_HANDLER_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), TYPE_BUDDY_MANAGEMENT_SERVICE_HANDLER, BuddyManagementServiceHandlerClass))
#define IS_BUDDY_MANAGEMENT_SERVICE_HANDLER_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BUDDY_MANAGEMENT_SERVICE_HANDLER))
#define BUDDY_MANAGEMENT_SERVICE_HANDLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_HANDLER, BuddyManagementServiceHandlerClass))

gboolean buddy_management_service_handler_add_buddy_member (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_add_buddy_members (BuddyManagementServiceIf *iface, const gchar * requestId, const GPtrArray * userMids, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_block_buddy_member (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * mid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_commit_send_messages_to_all (BuddyManagementServiceIf *iface, GPtrArray ** _return, const GPtrArray * requestIdList, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_commit_send_messages_to_mids (BuddyManagementServiceIf *iface, GPtrArray ** _return, const GPtrArray * requestIdList, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_contains_buddy_member (BuddyManagementServiceIf *iface, gboolean* _return, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_download_message_content (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, const gchar * messageId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_download_message_content_preview (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, const gchar * messageId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_download_profile_image (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_download_profile_image_preview (BuddyManagementServiceIf *iface, GByteArray ** _return, const gchar * requestId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_active_member_count_by_buddy_mid (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_active_member_mids_by_buddy_mid (BuddyManagementServiceIf *iface, GPtrArray ** _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_all_buddy_members (BuddyManagementServiceIf *iface, GPtrArray ** _return, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_blocked_buddy_members (BuddyManagementServiceIf *iface, GPtrArray ** _return, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_blocker_count_by_buddy_mid (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_buddy_detail_by_mid (BuddyManagementServiceIf *iface, BuddyDetail ** _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_buddy_profile (BuddyManagementServiceIf *iface, BuddyProfile ** _return, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_contact_ticket (BuddyManagementServiceIf *iface, Ticket ** _return, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_member_count_by_buddy_mid (BuddyManagementServiceIf *iface, gint64* _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_send_buddy_message_result (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * sendBuddyMessageRequestId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_set_buddy_on_air_result (BuddyManagementServiceIf *iface, SetBuddyOnAirResult ** _return, const gchar * setBuddyOnAirRequestId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_get_update_buddy_profile_result (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * updateBuddyProfileRequestId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_is_buddy_on_air_by_mid (BuddyManagementServiceIf *iface, gboolean* _return, const gchar * buddyMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_link_and_send_buddy_content_message_to_all_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const gchar * sourceContentId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_link_and_send_buddy_content_message_to_mids (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const gchar * sourceContentId, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_notify_buddy_blocked (BuddyManagementServiceIf *iface, const gchar * buddyMid, const gchar * blockerMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_notify_buddy_unblocked (BuddyManagementServiceIf *iface, const gchar * buddyMid, const gchar * blockerMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_register_buddy (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMeessage, const GByteArray * picture, const GHashTable * settings, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_register_buddy_admin (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * buddyId, const gchar * searchId, const gchar * displayName, const gchar * statusMessage, const GByteArray * picture, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_reissue_contact_ticket (BuddyManagementServiceIf *iface, gchar ** _return, const gint64 expirationTime, const gint32 maxUseCount, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_remove_buddy_member (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * userMid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_remove_buddy_members (BuddyManagementServiceIf *iface, const gchar * requestId, const GPtrArray * userMids, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_send_buddy_content_message_to_all (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_send_buddy_content_message_to_all_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_send_buddy_content_message_to_mids (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_send_buddy_content_message_to_mids_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GByteArray * content, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_send_buddy_message_to_all (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_send_buddy_message_to_all_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_send_buddy_message_to_mids (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const Message * msg, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_send_buddy_message_to_mids_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const Message * msg, const GPtrArray * mids, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_send_individual_event_to_all_async (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * buddyMid, const NotificationStatus notificationStatus, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_set_buddy_on_air (BuddyManagementServiceIf *iface, SetBuddyOnAirResult ** _return, const gchar * requestId, const gboolean onAir, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_set_buddy_on_air_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const gboolean onAir, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_store_message (BuddyManagementServiceIf *iface, SendBuddyMessageResult ** _return, const gchar * requestId, const BuddyMessageRequest * messageRequest, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_unblock_buddy_member (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * mid, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_unregister_buddy (BuddyManagementServiceIf *iface, const gchar * requestId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_unregister_buddy_admin (BuddyManagementServiceIf *iface, const gchar * requestId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_update_buddy_admin_profile_attribute (BuddyManagementServiceIf *iface, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_update_buddy_admin_profile_image (BuddyManagementServiceIf *iface, const gchar * requestId, const GByteArray * picture, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_update_buddy_profile_attributes (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_update_buddy_profile_attributes_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const GHashTable * attributes, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_update_buddy_profile_image (BuddyManagementServiceIf *iface, UpdateBuddyProfileResult ** _return, const gchar * requestId, const GByteArray * image, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_update_buddy_profile_image_async (BuddyManagementServiceIf *iface, gchar ** _return, const gchar * requestId, const GByteArray * image, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_update_buddy_search_id (BuddyManagementServiceIf *iface, const gchar * requestId, const gchar * searchId, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_update_buddy_settings (BuddyManagementServiceIf *iface, const GHashTable * settings, TalkException ** e, GError **error);
gboolean buddy_management_service_handler_upload_buddy_content (BuddyManagementServiceIf *iface, gchar ** _return, const ContentType contentType, const GByteArray * content, TalkException ** e, GError **error);

/* BuddyManagementService processor */
struct _BuddyManagementServiceProcessor
{
  ThriftDispatchProcessor parent;

  /* protected */
  BuddyManagementServiceHandler *handler;
  GHashTable *process_map;
};
typedef struct _BuddyManagementServiceProcessor BuddyManagementServiceProcessor;

struct _BuddyManagementServiceProcessorClass
{
  ThriftDispatchProcessorClass parent;

  /* protected */
  gboolean (*dispatch_call) (ThriftDispatchProcessor *processor,
                             ThriftProtocol *in,
                             ThriftProtocol *out,
                             gchar *fname,
                             gint32 seqid,
                             GError **error);
};
typedef struct _BuddyManagementServiceProcessorClass BuddyManagementServiceProcessorClass;

GType buddy_management_service_processor_get_type (void);
#define TYPE_BUDDY_MANAGEMENT_SERVICE_PROCESSOR (buddy_management_service_processor_get_type())
#define BUDDY_MANAGEMENT_SERVICE_PROCESSOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_PROCESSOR, BuddyManagementServiceProcessor))
#define IS_BUDDY_MANAGEMENT_SERVICE_PROCESSOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_PROCESSOR))
#define BUDDY_MANAGEMENT_SERVICE_PROCESSOR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), TYPE_BUDDY_MANAGEMENT_SERVICE_PROCESSOR, BuddyManagementServiceProcessorClass))
#define IS_BUDDY_MANAGEMENT_SERVICE_PROCESSOR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BUDDY_MANAGEMENT_SERVICE_PROCESSOR))
#define BUDDY_MANAGEMENT_SERVICE_PROCESSOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BUDDY_MANAGEMENT_SERVICE_PROCESSOR, BuddyManagementServiceProcessorClass))

#endif /* BUDDY_MANAGEMENT_SERVICE_H */
