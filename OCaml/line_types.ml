(*
 Autogenerated by Thrift Compiler (0.11.0)

 DO NOT EDIT UNLESS YOU ARE SURE YOU KNOW WHAT YOU ARE DOING
*)

open Thrift
module ApplicationType = 
struct
  type t = 
    | IOS
    | IOS_RC
    | IOS_BETA
    | IOS_ALPHA
    | ANDROID
    | ANDROID_RC
    | ANDROID_BETA
    | ANDROID_ALPHA
    | WAP
    | WAP_RC
    | WAP_BETA
    | WAP_ALPHA
    | BOT
    | BOT_RC
    | BOT_BETA
    | BOT_ALPHA
    | WEB
    | WEB_RC
    | WEB_BETA
    | WEB_ALPHA
    | DESKTOPWIN
    | DESKTOPWIN_RC
    | DESKTOPWIN_BETA
    | DESKTOPWIN_ALPHA
    | DESKTOPMAC
    | DESKTOPMAC_RC
    | DESKTOPMAC_BETA
    | DESKTOPMAC_ALPHA
    | CHANNELGW
    | CHANNELGW_RC
    | CHANNELGW_BETA
    | CHANNELGW_ALPHA
    | CHANNELCP
    | CHANNELCP_RC
    | CHANNELCP_BETA
    | CHANNELCP_ALPHA
    | WINPHONE
    | WINPHONE_RC
    | WINPHONE_BETA
    | WINPHONE_ALPHA
    | BLACKBERRY
    | BLACKBERRY_RC
    | BLACKBERRY_BETA
    | BLACKBERRY_ALPHA
    | WINMETRO
    | WINMETRO_RC
    | WINMETRO_BETA
    | WINMETRO_ALPHA
    | S40
    | S40_RC
    | S40_BETA
    | S40_ALPHA
    | CHRONO
    | CHRONO_RC
    | CHRONO_BETA
    | CHRONO_ALPHA
    | TIZEN
    | TIZEN_RC
    | TIZEN_BETA
    | TIZEN_ALPHA
    | VIRTUAL
    | FIREFOXOS
    | FIREFOXOS_RC
    | FIREFOXOS_BETA
    | FIREFOXOS_ALPHA
    | IOSIPAD
    | IOSIPAD_RC
    | IOSIPAD_BETA
    | IOSIPAD_ALPHA
    | BIZIOS
    | BIZIOS_RC
    | BIZIOS_BETA
    | BIZIOS_ALPHA
    | BIZANDROID
    | BIZANDROID_RC
    | BIZANDROID_BETA
    | BIZANDROID_ALPHA
    | BIZBOT
    | BIZBOT_RC
    | BIZBOT_BETA
    | BIZBOT_ALPHA
    | CHROMEOS
    | CHROMEOS_RC
    | CHROMEOS_BETA
    | CHROMEOS_ALPHA
    | ANDROIDLITE
    | ANDROIDLITE_RC
    | ANDROIDLITE_BETA
    | ANDROIDLITE_ALPHA
    | WIN10
    | WIN10_RC
    | WIN10_BETA
    | WIN10_ALPHA
    | BIZWEB
    | BIZWEB_RC
    | BIZWEB_BETA
    | BIZWEB_ALPHA
    | DUMMYPRIMARY
    | DUMMYPRIMARY_RC
    | DUMMYPRIMARY_BETA
    | DUMMYPRIMARY_ALPHA
    | SQUARE
    | SQUARE_RC
    | SQUARE_BETA
    | SQUARE_ALPHA
    | INTERNAL
    | INTERNAL_RC
    | INTERNAL_BETA
    | INTERNAL_ALPHA
    | CLOVAFRIENDS
    | CLOVAFRIENDS_RC
    | CLOVAFRIENDS_BETA
    | CLOVAFRIENDS_ALPHA
  let to_i = function
    | IOS -> 16l
    | IOS_RC -> 17l
    | IOS_BETA -> 18l
    | IOS_ALPHA -> 19l
    | ANDROID -> 32l
    | ANDROID_RC -> 33l
    | ANDROID_BETA -> 34l
    | ANDROID_ALPHA -> 35l
    | WAP -> 48l
    | WAP_RC -> 49l
    | WAP_BETA -> 50l
    | WAP_ALPHA -> 51l
    | BOT -> 64l
    | BOT_RC -> 65l
    | BOT_BETA -> 66l
    | BOT_ALPHA -> 67l
    | WEB -> 80l
    | WEB_RC -> 81l
    | WEB_BETA -> 82l
    | WEB_ALPHA -> 83l
    | DESKTOPWIN -> 96l
    | DESKTOPWIN_RC -> 97l
    | DESKTOPWIN_BETA -> 98l
    | DESKTOPWIN_ALPHA -> 99l
    | DESKTOPMAC -> 112l
    | DESKTOPMAC_RC -> 113l
    | DESKTOPMAC_BETA -> 114l
    | DESKTOPMAC_ALPHA -> 115l
    | CHANNELGW -> 128l
    | CHANNELGW_RC -> 129l
    | CHANNELGW_BETA -> 130l
    | CHANNELGW_ALPHA -> 131l
    | CHANNELCP -> 144l
    | CHANNELCP_RC -> 145l
    | CHANNELCP_BETA -> 146l
    | CHANNELCP_ALPHA -> 147l
    | WINPHONE -> 160l
    | WINPHONE_RC -> 161l
    | WINPHONE_BETA -> 162l
    | WINPHONE_ALPHA -> 163l
    | BLACKBERRY -> 176l
    | BLACKBERRY_RC -> 177l
    | BLACKBERRY_BETA -> 178l
    | BLACKBERRY_ALPHA -> 179l
    | WINMETRO -> 192l
    | WINMETRO_RC -> 193l
    | WINMETRO_BETA -> 194l
    | WINMETRO_ALPHA -> 195l
    | S40 -> 208l
    | S40_RC -> 209l
    | S40_BETA -> 210l
    | S40_ALPHA -> 211l
    | CHRONO -> 224l
    | CHRONO_RC -> 225l
    | CHRONO_BETA -> 226l
    | CHRONO_ALPHA -> 227l
    | TIZEN -> 256l
    | TIZEN_RC -> 257l
    | TIZEN_BETA -> 258l
    | TIZEN_ALPHA -> 259l
    | VIRTUAL -> 272l
    | FIREFOXOS -> 288l
    | FIREFOXOS_RC -> 289l
    | FIREFOXOS_BETA -> 290l
    | FIREFOXOS_ALPHA -> 291l
    | IOSIPAD -> 304l
    | IOSIPAD_RC -> 305l
    | IOSIPAD_BETA -> 306l
    | IOSIPAD_ALPHA -> 307l
    | BIZIOS -> 320l
    | BIZIOS_RC -> 321l
    | BIZIOS_BETA -> 322l
    | BIZIOS_ALPHA -> 323l
    | BIZANDROID -> 336l
    | BIZANDROID_RC -> 337l
    | BIZANDROID_BETA -> 338l
    | BIZANDROID_ALPHA -> 339l
    | BIZBOT -> 352l
    | BIZBOT_RC -> 353l
    | BIZBOT_BETA -> 354l
    | BIZBOT_ALPHA -> 355l
    | CHROMEOS -> 368l
    | CHROMEOS_RC -> 369l
    | CHROMEOS_BETA -> 370l
    | CHROMEOS_ALPHA -> 371l
    | ANDROIDLITE -> 384l
    | ANDROIDLITE_RC -> 385l
    | ANDROIDLITE_BETA -> 386l
    | ANDROIDLITE_ALPHA -> 387l
    | WIN10 -> 400l
    | WIN10_RC -> 401l
    | WIN10_BETA -> 402l
    | WIN10_ALPHA -> 403l
    | BIZWEB -> 416l
    | BIZWEB_RC -> 417l
    | BIZWEB_BETA -> 418l
    | BIZWEB_ALPHA -> 419l
    | DUMMYPRIMARY -> 432l
    | DUMMYPRIMARY_RC -> 433l
    | DUMMYPRIMARY_BETA -> 434l
    | DUMMYPRIMARY_ALPHA -> 435l
    | SQUARE -> 448l
    | SQUARE_RC -> 449l
    | SQUARE_BETA -> 450l
    | SQUARE_ALPHA -> 451l
    | INTERNAL -> 464l
    | INTERNAL_RC -> 465l
    | INTERNAL_BETA -> 466l
    | INTERNAL_ALPHA -> 467l
    | CLOVAFRIENDS -> 480l
    | CLOVAFRIENDS_RC -> 481l
    | CLOVAFRIENDS_BETA -> 482l
    | CLOVAFRIENDS_ALPHA -> 483l
  let of_i = function
    | 16l -> IOS
    | 17l -> IOS_RC
    | 18l -> IOS_BETA
    | 19l -> IOS_ALPHA
    | 32l -> ANDROID
    | 33l -> ANDROID_RC
    | 34l -> ANDROID_BETA
    | 35l -> ANDROID_ALPHA
    | 48l -> WAP
    | 49l -> WAP_RC
    | 50l -> WAP_BETA
    | 51l -> WAP_ALPHA
    | 64l -> BOT
    | 65l -> BOT_RC
    | 66l -> BOT_BETA
    | 67l -> BOT_ALPHA
    | 80l -> WEB
    | 81l -> WEB_RC
    | 82l -> WEB_BETA
    | 83l -> WEB_ALPHA
    | 96l -> DESKTOPWIN
    | 97l -> DESKTOPWIN_RC
    | 98l -> DESKTOPWIN_BETA
    | 99l -> DESKTOPWIN_ALPHA
    | 112l -> DESKTOPMAC
    | 113l -> DESKTOPMAC_RC
    | 114l -> DESKTOPMAC_BETA
    | 115l -> DESKTOPMAC_ALPHA
    | 128l -> CHANNELGW
    | 129l -> CHANNELGW_RC
    | 130l -> CHANNELGW_BETA
    | 131l -> CHANNELGW_ALPHA
    | 144l -> CHANNELCP
    | 145l -> CHANNELCP_RC
    | 146l -> CHANNELCP_BETA
    | 147l -> CHANNELCP_ALPHA
    | 160l -> WINPHONE
    | 161l -> WINPHONE_RC
    | 162l -> WINPHONE_BETA
    | 163l -> WINPHONE_ALPHA
    | 176l -> BLACKBERRY
    | 177l -> BLACKBERRY_RC
    | 178l -> BLACKBERRY_BETA
    | 179l -> BLACKBERRY_ALPHA
    | 192l -> WINMETRO
    | 193l -> WINMETRO_RC
    | 194l -> WINMETRO_BETA
    | 195l -> WINMETRO_ALPHA
    | 208l -> S40
    | 209l -> S40_RC
    | 210l -> S40_BETA
    | 211l -> S40_ALPHA
    | 224l -> CHRONO
    | 225l -> CHRONO_RC
    | 226l -> CHRONO_BETA
    | 227l -> CHRONO_ALPHA
    | 256l -> TIZEN
    | 257l -> TIZEN_RC
    | 258l -> TIZEN_BETA
    | 259l -> TIZEN_ALPHA
    | 272l -> VIRTUAL
    | 288l -> FIREFOXOS
    | 289l -> FIREFOXOS_RC
    | 290l -> FIREFOXOS_BETA
    | 291l -> FIREFOXOS_ALPHA
    | 304l -> IOSIPAD
    | 305l -> IOSIPAD_RC
    | 306l -> IOSIPAD_BETA
    | 307l -> IOSIPAD_ALPHA
    | 320l -> BIZIOS
    | 321l -> BIZIOS_RC
    | 322l -> BIZIOS_BETA
    | 323l -> BIZIOS_ALPHA
    | 336l -> BIZANDROID
    | 337l -> BIZANDROID_RC
    | 338l -> BIZANDROID_BETA
    | 339l -> BIZANDROID_ALPHA
    | 352l -> BIZBOT
    | 353l -> BIZBOT_RC
    | 354l -> BIZBOT_BETA
    | 355l -> BIZBOT_ALPHA
    | 368l -> CHROMEOS
    | 369l -> CHROMEOS_RC
    | 370l -> CHROMEOS_BETA
    | 371l -> CHROMEOS_ALPHA
    | 384l -> ANDROIDLITE
    | 385l -> ANDROIDLITE_RC
    | 386l -> ANDROIDLITE_BETA
    | 387l -> ANDROIDLITE_ALPHA
    | 400l -> WIN10
    | 401l -> WIN10_RC
    | 402l -> WIN10_BETA
    | 403l -> WIN10_ALPHA
    | 416l -> BIZWEB
    | 417l -> BIZWEB_RC
    | 418l -> BIZWEB_BETA
    | 419l -> BIZWEB_ALPHA
    | 432l -> DUMMYPRIMARY
    | 433l -> DUMMYPRIMARY_RC
    | 434l -> DUMMYPRIMARY_BETA
    | 435l -> DUMMYPRIMARY_ALPHA
    | 448l -> SQUARE
    | 449l -> SQUARE_RC
    | 450l -> SQUARE_BETA
    | 451l -> SQUARE_ALPHA
    | 464l -> INTERNAL
    | 465l -> INTERNAL_RC
    | 466l -> INTERNAL_BETA
    | 467l -> INTERNAL_ALPHA
    | 480l -> CLOVAFRIENDS
    | 481l -> CLOVAFRIENDS_RC
    | 482l -> CLOVAFRIENDS_BETA
    | 483l -> CLOVAFRIENDS_ALPHA
    | _ -> raise Thrift_error
end
module ExtendedProfileAttribute = 
struct
  type t = 
  let to_i = function
  let of_i = function
    | _ -> raise Thrift_error
end
module PrivacyLevelType = 
struct
  type t = 
    | PUBLIC
    | PRIVATE
  let to_i = function
    | PUBLIC -> 0l
    | PRIVATE -> 1l
  let of_i = function
    | 0l -> PUBLIC
    | 1l -> PRIVATE
    | _ -> raise Thrift_error
end
module PaidCallerIdStatus = 
struct
  type t = 
    | NOT_SPECIFIED
    | VALID
    | VERIFICATION_REQUIRED
    | NOT_PERMITTED
    | LIMIT_EXCEEDED
    | LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED
  let to_i = function
    | NOT_SPECIFIED -> 0l
    | VALID -> 1l
    | VERIFICATION_REQUIRED -> 2l
    | NOT_PERMITTED -> 3l
    | LIMIT_EXCEEDED -> 4l
    | LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED -> 5l
  let of_i = function
    | 0l -> NOT_SPECIFIED
    | 1l -> VALID
    | 2l -> VERIFICATION_REQUIRED
    | 3l -> NOT_PERMITTED
    | 4l -> LIMIT_EXCEEDED
    | 5l -> LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED
    | _ -> raise Thrift_error
end
module PaidCallProductType = 
struct
  type t = 
    | COIN
    | CREDIT
    | MONTHLY
  let to_i = function
    | COIN -> 0l
    | CREDIT -> 1l
    | MONTHLY -> 2l
  let of_i = function
    | 0l -> COIN
    | 1l -> CREDIT
    | 2l -> MONTHLY
    | _ -> raise Thrift_error
end
module PaidCallType = 
struct
  type t = 
    | OUT
    | IN
    | TOLLFREE
    | RECORD
    | AD
    | CS
  let to_i = function
    | OUT -> 0l
    | IN -> 1l
    | TOLLFREE -> 2l
    | RECORD -> 3l
    | AD -> 4l
    | CS -> 5l
  let of_i = function
    | 0l -> OUT
    | 1l -> IN
    | 2l -> TOLLFREE
    | 3l -> RECORD
    | 4l -> AD
    | 5l -> CS
    | _ -> raise Thrift_error
end
module BotType = 
struct
  type t = 
    | RESERVED
    | OFFICIAL
    | LINE_AT_0
    | LINE_AT
  let to_i = function
    | RESERVED -> 0l
    | OFFICIAL -> 1l
    | LINE_AT_0 -> 2l
    | LINE_AT -> 3l
  let of_i = function
    | 0l -> RESERVED
    | 1l -> OFFICIAL
    | 2l -> LINE_AT_0
    | 3l -> LINE_AT
    | _ -> raise Thrift_error
end
module BuddyOnAirLabel = 
struct
  type t = 
    | ON_AIR
    | LIVE
  let to_i = function
    | ON_AIR -> 0l
    | LIVE -> 1l
  let of_i = function
    | 0l -> ON_AIR
    | 1l -> LIVE
    | _ -> raise Thrift_error
end
module BuddyBannerLinkType = 
struct
  type t = 
    | BUDDY_BANNER_LINK_HIDDEN
    | BUDDY_BANNER_LINK_MID
    | BUDDY_BANNER_LINK_URL
  let to_i = function
    | BUDDY_BANNER_LINK_HIDDEN -> 0l
    | BUDDY_BANNER_LINK_MID -> 1l
    | BUDDY_BANNER_LINK_URL -> 2l
  let of_i = function
    | 0l -> BUDDY_BANNER_LINK_HIDDEN
    | 1l -> BUDDY_BANNER_LINK_MID
    | 2l -> BUDDY_BANNER_LINK_URL
    | _ -> raise Thrift_error
end
module BuddyOnAirType = 
struct
  type t = 
    | NORMAL
    | LIVE
    | VOIP
  let to_i = function
    | NORMAL -> 0l
    | LIVE -> 1l
    | VOIP -> 2l
  let of_i = function
    | 0l -> NORMAL
    | 1l -> LIVE
    | 2l -> VOIP
    | _ -> raise Thrift_error
end
module Diff = 
struct
  type t = 
    | ADDED
    | UPDATED
    | REMOVED
  let to_i = function
    | ADDED -> 0l
    | UPDATED -> 1l
    | REMOVED -> 2l
  let of_i = function
    | 0l -> ADDED
    | 1l -> UPDATED
    | 2l -> REMOVED
    | _ -> raise Thrift_error
end
module ReportType = 
struct
  type t = 
    | ADVERTISING
    | GENDER_HARASSMENT
    | HARASSMENT
    | OTHER
  let to_i = function
    | ADVERTISING -> 1l
    | GENDER_HARASSMENT -> 2l
    | HARASSMENT -> 3l
    | OTHER -> 4l
  let of_i = function
    | 1l -> ADVERTISING
    | 2l -> GENDER_HARASSMENT
    | 3l -> HARASSMENT
    | 4l -> OTHER
    | _ -> raise Thrift_error
end
module SyncTriggerReason = 
struct
  type t = 
    | OTHER
    | REVISION_GAP_TOO_LARGE
    | OPERATION_EXPIRED
  let to_i = function
    | OTHER -> 0l
    | REVISION_GAP_TOO_LARGE -> 1l
    | OPERATION_EXPIRED -> 2l
  let of_i = function
    | 0l -> OTHER
    | 1l -> REVISION_GAP_TOO_LARGE
    | 2l -> OPERATION_EXPIRED
    | _ -> raise Thrift_error
end
module ReportCategory = 
struct
  type t = 
    | PUSH_NORMAL_PLAIN
    | PUSH_NORMAL_E2EE
    | PUSH_VOIP_PLAIN
    | PUSH_VOIP_E2EE
  let to_i = function
    | PUSH_NORMAL_PLAIN -> 0l
    | PUSH_NORMAL_E2EE -> 1l
    | PUSH_VOIP_PLAIN -> 2l
    | PUSH_VOIP_E2EE -> 3l
  let of_i = function
    | 0l -> PUSH_NORMAL_PLAIN
    | 1l -> PUSH_NORMAL_E2EE
    | 2l -> PUSH_VOIP_PLAIN
    | 3l -> PUSH_VOIP_E2EE
    | _ -> raise Thrift_error
end
module BuddyResultState = 
struct
  type t = 
    | ACCEPTED
    | SUCCEEDED
    | FAILED
    | CANCELLED
    | NOTIFY_FAILED
    | STORING
    | UPLOADING
    | NOTIFYING
    | REMOVING_SUBSCRIPTION
    | UNREGISTERING_ACCOUNT
    | NOTIFYING_LEAVE_CHAT
  let to_i = function
    | ACCEPTED -> 1l
    | SUCCEEDED -> 2l
    | FAILED -> 3l
    | CANCELLED -> 4l
    | NOTIFY_FAILED -> 5l
    | STORING -> 11l
    | UPLOADING -> 21l
    | NOTIFYING -> 31l
    | REMOVING_SUBSCRIPTION -> 41l
    | UNREGISTERING_ACCOUNT -> 42l
    | NOTIFYING_LEAVE_CHAT -> 43l
  let of_i = function
    | 1l -> ACCEPTED
    | 2l -> SUCCEEDED
    | 3l -> FAILED
    | 4l -> CANCELLED
    | 5l -> NOTIFY_FAILED
    | 11l -> STORING
    | 21l -> UPLOADING
    | 31l -> NOTIFYING
    | 41l -> REMOVING_SUBSCRIPTION
    | 42l -> UNREGISTERING_ACCOUNT
    | 43l -> NOTIFYING_LEAVE_CHAT
    | _ -> raise Thrift_error
end
module BuddySearchRequestSource = 
struct
  type t = 
    | NA
    | FRIEND_VIEW
    | OFFICIAL_ACCOUNT_VIEW
  let to_i = function
    | NA -> 0l
    | FRIEND_VIEW -> 1l
    | OFFICIAL_ACCOUNT_VIEW -> 2l
  let of_i = function
    | 0l -> NA
    | 1l -> FRIEND_VIEW
    | 2l -> OFFICIAL_ACCOUNT_VIEW
    | _ -> raise Thrift_error
end
module CarrierCode = 
struct
  type t = 
    | NOT_SPECIFIED
    | JP_DOCOMO
    | JP_AU
    | JP_SOFTBANK
    | JP_DOCOMO_LINE
    | KR_SKT
    | KR_KT
    | KR_LGT
  let to_i = function
    | NOT_SPECIFIED -> 0l
    | JP_DOCOMO -> 1l
    | JP_AU -> 2l
    | JP_SOFTBANK -> 3l
    | JP_DOCOMO_LINE -> 4l
    | KR_SKT -> 17l
    | KR_KT -> 18l
    | KR_LGT -> 19l
  let of_i = function
    | 0l -> NOT_SPECIFIED
    | 1l -> JP_DOCOMO
    | 2l -> JP_AU
    | 3l -> JP_SOFTBANK
    | 4l -> JP_DOCOMO_LINE
    | 17l -> KR_SKT
    | 18l -> KR_KT
    | 19l -> KR_LGT
    | _ -> raise Thrift_error
end
module ChannelConfiguration = 
struct
  type t = 
    | MESSAGE
    | MESSAGE_NOTIFICATION
    | NOTIFICATION_CENTER
  let to_i = function
    | MESSAGE -> 0l
    | MESSAGE_NOTIFICATION -> 1l
    | NOTIFICATION_CENTER -> 2l
  let of_i = function
    | 0l -> MESSAGE
    | 1l -> MESSAGE_NOTIFICATION
    | 2l -> NOTIFICATION_CENTER
    | _ -> raise Thrift_error
end
module ChannelPermission = 
struct
  type t = 
    | PROFILE
    | FRIENDS
    | GROUP
  let to_i = function
    | PROFILE -> 0l
    | FRIENDS -> 1l
    | GROUP -> 2l
  let of_i = function
    | 0l -> PROFILE
    | 1l -> FRIENDS
    | 2l -> GROUP
    | _ -> raise Thrift_error
end
module ChannelFeatureLicense = 
struct
  type t = 
    | BLE_LCS_API_USABLE
    | PROHIBIT_MINIMIZE_CHANNEL_BROWSER
    | ALLOW_IOS_WEBKIT
  let to_i = function
    | BLE_LCS_API_USABLE -> 26l
    | PROHIBIT_MINIMIZE_CHANNEL_BROWSER -> 27l
    | ALLOW_IOS_WEBKIT -> 28l
  let of_i = function
    | 26l -> BLE_LCS_API_USABLE
    | 27l -> PROHIBIT_MINIMIZE_CHANNEL_BROWSER
    | 28l -> ALLOW_IOS_WEBKIT
    | _ -> raise Thrift_error
end
module ChannelErrorCode = 
struct
  type t = 
    | ILLEGAL_ARGUMENT
    | INTERNAL_ERROR
    | CONNECTION_ERROR
    | AUTHENTICATIONI_FAILED
    | NEED_PERMISSION_APPROVAL
    | COIN_NOT_USABLE
    | WEBVIEW_NOT_ALLOWED
  let to_i = function
    | ILLEGAL_ARGUMENT -> 0l
    | INTERNAL_ERROR -> 1l
    | CONNECTION_ERROR -> 2l
    | AUTHENTICATIONI_FAILED -> 3l
    | NEED_PERMISSION_APPROVAL -> 4l
    | COIN_NOT_USABLE -> 5l
    | WEBVIEW_NOT_ALLOWED -> 6l
  let of_i = function
    | 0l -> ILLEGAL_ARGUMENT
    | 1l -> INTERNAL_ERROR
    | 2l -> CONNECTION_ERROR
    | 3l -> AUTHENTICATIONI_FAILED
    | 4l -> NEED_PERMISSION_APPROVAL
    | 5l -> COIN_NOT_USABLE
    | 6l -> WEBVIEW_NOT_ALLOWED
    | _ -> raise Thrift_error
end
module ChannelSyncType = 
struct
  type t = 
    | SYNC
    | REMOVE
    | REMOVE_ALL
  let to_i = function
    | SYNC -> 0l
    | REMOVE -> 1l
    | REMOVE_ALL -> 2l
  let of_i = function
    | 0l -> SYNC
    | 1l -> REMOVE
    | 2l -> REMOVE_ALL
    | _ -> raise Thrift_error
end
module LoginType = 
struct
  type t = 
    | ID_CREDENTIAL
    | QRCODE
    | ID_CREDENTIAL_WITH_E2EE
  let to_i = function
    | ID_CREDENTIAL -> 0l
    | QRCODE -> 1l
    | ID_CREDENTIAL_WITH_E2EE -> 2l
  let of_i = function
    | 0l -> ID_CREDENTIAL
    | 1l -> QRCODE
    | 2l -> ID_CREDENTIAL_WITH_E2EE
    | _ -> raise Thrift_error
end
module ContactAttribute = 
struct
  type t = 
    | CONTACT_ATTRIBUTE_CAPABLE_VOICE_CALL
    | CONTACT_ATTRIBUTE_CAPABLE_VIDEO_CALL
    | CONTACT_ATTRIBUTE_CAPABLE_MY_HOME
    | CONTACT_ATTRIBUTE_CAPABLE_BUDDY
  let to_i = function
    | CONTACT_ATTRIBUTE_CAPABLE_VOICE_CALL -> 1l
    | CONTACT_ATTRIBUTE_CAPABLE_VIDEO_CALL -> 2l
    | CONTACT_ATTRIBUTE_CAPABLE_MY_HOME -> 16l
    | CONTACT_ATTRIBUTE_CAPABLE_BUDDY -> 32l
  let of_i = function
    | 1l -> CONTACT_ATTRIBUTE_CAPABLE_VOICE_CALL
    | 2l -> CONTACT_ATTRIBUTE_CAPABLE_VIDEO_CALL
    | 16l -> CONTACT_ATTRIBUTE_CAPABLE_MY_HOME
    | 32l -> CONTACT_ATTRIBUTE_CAPABLE_BUDDY
    | _ -> raise Thrift_error
end
module ContactCategory = 
struct
  type t = 
    | NORMAL
    | RECOMMEND
  let to_i = function
    | NORMAL -> 0l
    | RECOMMEND -> 1l
  let of_i = function
    | 0l -> NORMAL
    | 1l -> RECOMMEND
    | _ -> raise Thrift_error
end
module ContactRelation = 
struct
  type t = 
    | ONEWAY
    | BOTH
    | NOT_REGISTERED
  let to_i = function
    | ONEWAY -> 0l
    | BOTH -> 1l
    | NOT_REGISTERED -> 2l
  let of_i = function
    | 0l -> ONEWAY
    | 1l -> BOTH
    | 2l -> NOT_REGISTERED
    | _ -> raise Thrift_error
end
module AsymmetricKeyAlgorithm = 
struct
  type t = 
    | ASYMMETRIC_KEY_ALGORITHM_RSA
    | ASYMMETRIC_KEY_ALGORITHM_ECDH
  let to_i = function
    | ASYMMETRIC_KEY_ALGORITHM_RSA -> 1l
    | ASYMMETRIC_KEY_ALGORITHM_ECDH -> 2l
  let of_i = function
    | 1l -> ASYMMETRIC_KEY_ALGORITHM_RSA
    | 2l -> ASYMMETRIC_KEY_ALGORITHM_ECDH
    | _ -> raise Thrift_error
end
module ContactSetting = 
struct
  type t = 
    | CONTACT_SETTING_NOTIFICATION_DISABLE
    | CONTACT_SETTING_DISPLAY_NAME_OVERRIDE
    | CONTACT_SETTING_CONTACT_HIDE
    | CONTACT_SETTING_FAVORITE
    | CONTACT_SETTING_DELETE
  let to_i = function
    | CONTACT_SETTING_NOTIFICATION_DISABLE -> 1l
    | CONTACT_SETTING_DISPLAY_NAME_OVERRIDE -> 2l
    | CONTACT_SETTING_CONTACT_HIDE -> 4l
    | CONTACT_SETTING_FAVORITE -> 8l
    | CONTACT_SETTING_DELETE -> 16l
  let of_i = function
    | 1l -> CONTACT_SETTING_NOTIFICATION_DISABLE
    | 2l -> CONTACT_SETTING_DISPLAY_NAME_OVERRIDE
    | 4l -> CONTACT_SETTING_CONTACT_HIDE
    | 8l -> CONTACT_SETTING_FAVORITE
    | 16l -> CONTACT_SETTING_DELETE
    | _ -> raise Thrift_error
end
module ContactStatus = 
struct
  type t = 
    | UNSPECIFIED
    | FRIEND
    | FRIEND_BLOCKED
    | RECOMMEND
    | RECOMMEND_BLOCKED
    | DELETED
    | DELETED_BLOCKED
  let to_i = function
    | UNSPECIFIED -> 0l
    | FRIEND -> 1l
    | FRIEND_BLOCKED -> 2l
    | RECOMMEND -> 3l
    | RECOMMEND_BLOCKED -> 4l
    | DELETED -> 5l
    | DELETED_BLOCKED -> 6l
  let of_i = function
    | 0l -> UNSPECIFIED
    | 1l -> FRIEND
    | 2l -> FRIEND_BLOCKED
    | 3l -> RECOMMEND
    | 4l -> RECOMMEND_BLOCKED
    | 5l -> DELETED
    | 6l -> DELETED_BLOCKED
    | _ -> raise Thrift_error
end
module ContactType = 
struct
  type t = 
    | MID
    | PHONE
    | EMAIL
    | USERID
    | PROXIMITY
    | GROUP
    | USER
    | QRCODE
    | PROMOTION_BOT
    | CONTACT_MESSAGE
    | FRIEND_REQUEST
    | REPAIR
    | FACEBOOK
    | SINA
    | RENREN
    | FEIXIN
    | BBM
    | BEACON
  let to_i = function
    | MID -> 0l
    | PHONE -> 1l
    | EMAIL -> 2l
    | USERID -> 3l
    | PROXIMITY -> 4l
    | GROUP -> 5l
    | USER -> 6l
    | QRCODE -> 7l
    | PROMOTION_BOT -> 8l
    | CONTACT_MESSAGE -> 9l
    | FRIEND_REQUEST -> 10l
    | REPAIR -> 128l
    | FACEBOOK -> 2305l
    | SINA -> 2306l
    | RENREN -> 2307l
    | FEIXIN -> 2308l
    | BBM -> 2309l
    | BEACON -> 11l
  let of_i = function
    | 0l -> MID
    | 1l -> PHONE
    | 2l -> EMAIL
    | 3l -> USERID
    | 4l -> PROXIMITY
    | 5l -> GROUP
    | 6l -> USER
    | 7l -> QRCODE
    | 8l -> PROMOTION_BOT
    | 9l -> CONTACT_MESSAGE
    | 10l -> FRIEND_REQUEST
    | 128l -> REPAIR
    | 2305l -> FACEBOOK
    | 2306l -> SINA
    | 2307l -> RENREN
    | 2308l -> FEIXIN
    | 2309l -> BBM
    | 11l -> BEACON
    | _ -> raise Thrift_error
end
module GroupPreferenceAttribute = 
struct
  type t = 
    | INVITATION_TICKET
    | FAVORITE_TIMESTAMP
  let to_i = function
    | INVITATION_TICKET -> 1l
    | FAVORITE_TIMESTAMP -> 2l
  let of_i = function
    | 1l -> INVITATION_TICKET
    | 2l -> FAVORITE_TIMESTAMP
    | _ -> raise Thrift_error
end
module ContentType = 
struct
  type t = 
    | NONE
    | IMAGE
    | VIDEO
    | AUDIO
    | HTML
    | PDF
    | CALL
    | STICKER
    | PRESENCE
    | GIFT
    | GROUPBOARD
    | APPLINK
    | LINK
    | CONTACT
    | FILE
    | LOCATION
    | POSTNOTIFICATION
    | RICH
    | CHATEVENT
    | MUSIC
    | PAYMENT
    | EXTIMAGE
  let to_i = function
    | NONE -> 0l
    | IMAGE -> 1l
    | VIDEO -> 2l
    | AUDIO -> 3l
    | HTML -> 4l
    | PDF -> 5l
    | CALL -> 6l
    | STICKER -> 7l
    | PRESENCE -> 8l
    | GIFT -> 9l
    | GROUPBOARD -> 10l
    | APPLINK -> 11l
    | LINK -> 12l
    | CONTACT -> 13l
    | FILE -> 14l
    | LOCATION -> 15l
    | POSTNOTIFICATION -> 16l
    | RICH -> 17l
    | CHATEVENT -> 18l
    | MUSIC -> 19l
    | PAYMENT -> 20l
    | EXTIMAGE -> 21l
  let of_i = function
    | 0l -> NONE
    | 1l -> IMAGE
    | 2l -> VIDEO
    | 3l -> AUDIO
    | 4l -> HTML
    | 5l -> PDF
    | 6l -> CALL
    | 7l -> STICKER
    | 8l -> PRESENCE
    | 9l -> GIFT
    | 10l -> GROUPBOARD
    | 11l -> APPLINK
    | 12l -> LINK
    | 13l -> CONTACT
    | 14l -> FILE
    | 15l -> LOCATION
    | 16l -> POSTNOTIFICATION
    | 17l -> RICH
    | 18l -> CHATEVENT
    | 19l -> MUSIC
    | 20l -> PAYMENT
    | 21l -> EXTIMAGE
    | _ -> raise Thrift_error
end
module MessageRelationType = 
struct
  type t = 
    | FORWARD
    | AUTO_REPLY
    | SUBORDINATE
  let to_i = function
    | FORWARD -> 0l
    | AUTO_REPLY -> 1l
    | SUBORDINATE -> 2l
  let of_i = function
    | 0l -> FORWARD
    | 1l -> AUTO_REPLY
    | 2l -> SUBORDINATE
    | _ -> raise Thrift_error
end
module CustomMode = 
struct
  type t = 
    | PROMOTION_FRIENDS_INVITE
    | CAPABILITY_SERVER_SIDE_SMS
    | LINE_CLIENT_ANALYTICS_CONFIGURATION
  let to_i = function
    | PROMOTION_FRIENDS_INVITE -> 1l
    | CAPABILITY_SERVER_SIDE_SMS -> 2l
    | LINE_CLIENT_ANALYTICS_CONFIGURATION -> 3l
  let of_i = function
    | 1l -> PROMOTION_FRIENDS_INVITE
    | 2l -> CAPABILITY_SERVER_SIDE_SMS
    | 3l -> LINE_CLIENT_ANALYTICS_CONFIGURATION
    | _ -> raise Thrift_error
end
module RoomAttribute = 
struct
  type t = 
    | ALL
    | NOTIFICATION_SETTING
  let to_i = function
    | ALL -> 255l
    | NOTIFICATION_SETTING -> 1l
  let of_i = function
    | 255l -> ALL
    | 1l -> NOTIFICATION_SETTING
    | _ -> raise Thrift_error
end
module UserStatus = 
struct
  type t = 
    | NORMAL
    | UNBOUND
    | UNREGISTERED
  let to_i = function
    | NORMAL -> 0l
    | UNBOUND -> 1l
    | UNREGISTERED -> 2l
  let of_i = function
    | 0l -> NORMAL
    | 1l -> UNBOUND
    | 2l -> UNREGISTERED
    | _ -> raise Thrift_error
end
module EmailConfirmationStatus = 
struct
  type t = 
    | NOT_SPECIFIED
    | NOT_YET
    | DONE
    | NEED_ENFORCED_INPUT
  let to_i = function
    | NOT_SPECIFIED -> 0l
    | NOT_YET -> 1l
    | DONE -> 3l
    | NEED_ENFORCED_INPUT -> 4l
  let of_i = function
    | 0l -> NOT_SPECIFIED
    | 1l -> NOT_YET
    | 3l -> DONE
    | 4l -> NEED_ENFORCED_INPUT
    | _ -> raise Thrift_error
end
module AccountMigrationPincodeType = 
struct
  type t = 
    | NOT_APPLICABLE
    | NOT_SET
    | SET
    | NEED_ENFORCED_INPUT
  let to_i = function
    | NOT_APPLICABLE -> 0l
    | NOT_SET -> 1l
    | SET -> 2l
    | NEED_ENFORCED_INPUT -> 3l
  let of_i = function
    | 0l -> NOT_APPLICABLE
    | 1l -> NOT_SET
    | 2l -> SET
    | 3l -> NEED_ENFORCED_INPUT
    | _ -> raise Thrift_error
end
module AccountMigrationCheckType = 
struct
  type t = 
    | SKIP
    | PINCODE
    | SECURITY_CENTER
  let to_i = function
    | SKIP -> 0l
    | PINCODE -> 1l
    | SECURITY_CENTER -> 2l
  let of_i = function
    | 0l -> SKIP
    | 1l -> PINCODE
    | 2l -> SECURITY_CENTER
    | _ -> raise Thrift_error
end
module SecurityCenterSettingsType = 
struct
  type t = 
    | NOT_APPLICABLE
    | NOT_SET
    | SET
    | NEED_ENFORCED_INPUT
  let to_i = function
    | NOT_APPLICABLE -> 0l
    | NOT_SET -> 1l
    | SET -> 2l
    | NEED_ENFORCED_INPUT -> 3l
  let of_i = function
    | 0l -> NOT_APPLICABLE
    | 1l -> NOT_SET
    | 2l -> SET
    | 3l -> NEED_ENFORCED_INPUT
    | _ -> raise Thrift_error
end
module EmailConfirmationType = 
struct
  type t = 
    | SERVER_SIDE_EMAIL
    | CLIENT_SIDE_EMAIL
  let to_i = function
    | SERVER_SIDE_EMAIL -> 0l
    | CLIENT_SIDE_EMAIL -> 1l
  let of_i = function
    | 0l -> SERVER_SIDE_EMAIL
    | 1l -> CLIENT_SIDE_EMAIL
    | _ -> raise Thrift_error
end
module SquareChatAnnouncementType = 
struct
  type t = 
    | TEXT_MESSAGE
  let to_i = function
    | TEXT_MESSAGE -> 0l
  let of_i = function
    | 0l -> TEXT_MESSAGE
    | _ -> raise Thrift_error
end
module SquareChatAttribute = 
struct
  type t = 
    | NAME
    | SQUARE_CHAT_IMAGE
    | STATE
  let to_i = function
    | NAME -> 2l
    | SQUARE_CHAT_IMAGE -> 3l
    | STATE -> 4l
  let of_i = function
    | 2l -> NAME
    | 3l -> SQUARE_CHAT_IMAGE
    | 4l -> STATE
    | _ -> raise Thrift_error
end
module SquareMemberAttribute = 
struct
  type t = 
    | DISPLAY_NAME
    | PROFILE_IMAGE
    | ABLE_TO_RECEIVE_MESSAGE
    | MEMBERSHIP_STATE
    | ROLE
    | PREFERENCE
  let to_i = function
    | DISPLAY_NAME -> 1l
    | PROFILE_IMAGE -> 2l
    | ABLE_TO_RECEIVE_MESSAGE -> 3l
    | MEMBERSHIP_STATE -> 5l
    | ROLE -> 6l
    | PREFERENCE -> 7l
  let of_i = function
    | 1l -> DISPLAY_NAME
    | 2l -> PROFILE_IMAGE
    | 3l -> ABLE_TO_RECEIVE_MESSAGE
    | 5l -> MEMBERSHIP_STATE
    | 6l -> ROLE
    | 7l -> PREFERENCE
    | _ -> raise Thrift_error
end
module SquareMemberRelationAttribute = 
struct
  type t = 
    | BLOCKED
  let to_i = function
    | BLOCKED -> 1l
  let of_i = function
    | 1l -> BLOCKED
    | _ -> raise Thrift_error
end
module SquarePreferenceAttribute = 
struct
  type t = 
    | FAVORITE
    | NOTI_FOR_NEW_JOIN_REQUEST
  let to_i = function
    | FAVORITE -> 1l
    | NOTI_FOR_NEW_JOIN_REQUEST -> 2l
  let of_i = function
    | 1l -> FAVORITE
    | 2l -> NOTI_FOR_NEW_JOIN_REQUEST
    | _ -> raise Thrift_error
end
module SquareState = 
struct
  type t = 
    | ALIVE
    | DELETED
    | SUSPENDED
  let to_i = function
    | ALIVE -> 0l
    | DELETED -> 1l
    | SUSPENDED -> 2l
  let of_i = function
    | 0l -> ALIVE
    | 1l -> DELETED
    | 2l -> SUSPENDED
    | _ -> raise Thrift_error
end
module CommitMessageResultCode = 
struct
  type t = 
    | DELIVERED
    | DELIVERY_SKIPPED
    | DELIVERY_RESTRICTED
  let to_i = function
    | DELIVERED -> 0l
    | DELIVERY_SKIPPED -> 1l
    | DELIVERY_RESTRICTED -> 2l
  let of_i = function
    | 0l -> DELIVERED
    | 1l -> DELIVERY_SKIPPED
    | 2l -> DELIVERY_RESTRICTED
    | _ -> raise Thrift_error
end
module ErrorCode = 
struct
  type t = 
    | ILLEGAL_ARGUMENT
    | AUTHENTICATION_FAILED
    | DB_FAILED
    | INVALID_STATE
    | EXCESSIVE_ACCESS
    | NOT_FOUND
    | INVALID_MID
    | NOT_A_MEMBER
    | INVALID_LENGTH
    | NOT_AVAILABLE_USER
    | NOT_AUTHORIZED_DEVICE
    | NOT_AUTHORIZED_SESSION
    | INCOMPATIBLE_APP_VERSION
    | NOT_READY
    | NOT_AVAILABLE_SESSION
    | SYSTEM_ERROR
    | NO_AVAILABLE_VERIFICATION_METHOD
    | NOT_AUTHENTICATED
    | INVALID_IDENTITY_CREDENTIAL
    | NOT_AVAILABLE_IDENTITY_IDENTIFIER
    | INTERNAL_ERROR
    | NO_SUCH_IDENTITY_IDENFIER
    | DEACTIVATED_ACCOUNT_BOUND_TO_THIS_IDENTITY
    | ILLEGAL_IDENTITY_CREDENTIAL
    | UNKNOWN_CHANNEL
    | NO_SUCH_MESSAGE_BOX
    | NOT_AVAILABLE_MESSAGE_BOX
    | CHANNEL_DOES_NOT_MATCH
    | NOT_YOUR_MESSAGE
    | MESSAGE_DEFINED_ERROR
    | USER_CANNOT_ACCEPT_PRESENTS
    | USER_NOT_STICKER_OWNER
    | MAINTENANCE_ERROR
    | ACCOUNT_NOT_MATCHED
    | ABUSE_BLOCK
    | NOT_FRIEND
    | NOT_ALLOWED_CALL
    | BLOCK_FRIEND
    | INCOMPATIBLE_VOIP_VERSION
    | INVALID_SNS_ACCESS_TOKEN
    | EXTERNAL_SERVICE_NOT_AVAILABLE
    | NOT_ALLOWED_ADD_CONTACT
    | NOT_CERTIFICATED
    | NOT_ALLOWED_SECONDARY_DEVICE
    | INVALID_PIN_CODE
    | NOT_FOUND_IDENTITY_CREDENTIAL
    | EXCEED_FILE_MAX_SIZE
    | EXCEED_DAILY_QUOTA
    | NOT_SUPPORT_SEND_FILE
    | MUST_UPGRADE
    | NOT_AVAILABLE_PIN_CODE_SESSION
    | EXPIRED_REVISION
    | NOT_YET_PHONE_NUMBER
    | BAD_CALL_NUMBER
    | UNAVAILABLE_CALL_NUMBER
    | NOT_SUPPORT_CALL_SERVICE
    | CONGESTION_CONTROL
    | NO_BALANCE
    | NOT_PERMITTED_CALLER_ID
    | NO_CALLER_ID_LIMIT_EXCEEDED
    | CALLER_ID_VERIFICATION_REQUIRED
    | NO_CALLER_ID_LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED
    | MESSAGE_NOT_FOUND
    | INVALID_ACCOUNT_MIGRATION_PINCODE_FORMAT
    | ACCOUNT_MIGRATION_PINCODE_NOT_MATCHED
    | ACCOUNT_MIGRATION_PINCODE_BLOCKED
    | INVALID_PASSWORD_FORMAT
    | FEATURE_RESTRICTED
    | MESSAGE_NOT_DESTRUCTIBLE
    | PAID_CALL_REDEEM_FAILED
    | PREVENTED_JOIN_BY_TICKET
    | SEND_MESSAGE_NOT_PERMITTED_FROM_LINE_AT
    | SEND_MESSAGE_NOT_PERMITTED_WHILE_AUTO_REPLY
    | SECURITY_CENTER_NOT_VERIFIED
    | SECURITY_CENTER_BLOCKED_BY_SETTING
    | SECURITY_CENTER_BLOCKED
    | TALK_PROXY_EXCEPTION
    | E2EE_INVALID_PROTOCOL
    | E2EE_RETRY_ENCRYPT
    | E2EE_UPDATE_SENDER_KEY
    | E2EE_UPDATE_RECEIVER_KEY
    | E2EE_INVALID_ARGUMENT
    | E2EE_INVALID_VERSION
    | E2EE_SENDER_DISABLED
    | E2EE_RECEIVER_DISABLED
    | E2EE_SENDER_NOT_ALLOWED
    | E2EE_RECEIVER_NOT_ALLOWED
    | E2EE_RESEND_FAIL
    | E2EE_RESEND_OK
    | HITOKOTO_BACKUP_NO_AVAILABLE_DATA
    | E2EE_UPDATE_PRIMARY_DEVICE
    | SUCCESS
    | CANCEL
    | E2EE_PRIMARY_NOT_SUPPORT
    | E2EE_RETRY_PLAIN
    | E2EE_RECREATE_GROUP_KEY
    | E2EE_GROUP_TOO_MANY_MEMBERS
    | SERVER_BUSY
    | NOT_ALLOWED_ADD_FOLLOW
    | INCOMING_FRIEND_REQUEST_LIMIT
    | OUTGOING_FRIEND_REQUEST_LIMIT
    | OUTGOING_FRIEND_REQUEST_QUOTA
    | DUPLICATED
    | BANNED
  let to_i = function
    | ILLEGAL_ARGUMENT -> 0l
    | AUTHENTICATION_FAILED -> 1l
    | DB_FAILED -> 2l
    | INVALID_STATE -> 3l
    | EXCESSIVE_ACCESS -> 4l
    | NOT_FOUND -> 5l
    | INVALID_MID -> 9l
    | NOT_A_MEMBER -> 10l
    | INVALID_LENGTH -> 6l
    | NOT_AVAILABLE_USER -> 7l
    | NOT_AUTHORIZED_DEVICE -> 8l
    | NOT_AUTHORIZED_SESSION -> 14l
    | INCOMPATIBLE_APP_VERSION -> 11l
    | NOT_READY -> 12l
    | NOT_AVAILABLE_SESSION -> 13l
    | SYSTEM_ERROR -> 15l
    | NO_AVAILABLE_VERIFICATION_METHOD -> 16l
    | NOT_AUTHENTICATED -> 17l
    | INVALID_IDENTITY_CREDENTIAL -> 18l
    | NOT_AVAILABLE_IDENTITY_IDENTIFIER -> 19l
    | INTERNAL_ERROR -> 20l
    | NO_SUCH_IDENTITY_IDENFIER -> 21l
    | DEACTIVATED_ACCOUNT_BOUND_TO_THIS_IDENTITY -> 22l
    | ILLEGAL_IDENTITY_CREDENTIAL -> 23l
    | UNKNOWN_CHANNEL -> 24l
    | NO_SUCH_MESSAGE_BOX -> 25l
    | NOT_AVAILABLE_MESSAGE_BOX -> 26l
    | CHANNEL_DOES_NOT_MATCH -> 27l
    | NOT_YOUR_MESSAGE -> 28l
    | MESSAGE_DEFINED_ERROR -> 29l
    | USER_CANNOT_ACCEPT_PRESENTS -> 30l
    | USER_NOT_STICKER_OWNER -> 32l
    | MAINTENANCE_ERROR -> 33l
    | ACCOUNT_NOT_MATCHED -> 34l
    | ABUSE_BLOCK -> 35l
    | NOT_FRIEND -> 36l
    | NOT_ALLOWED_CALL -> 37l
    | BLOCK_FRIEND -> 38l
    | INCOMPATIBLE_VOIP_VERSION -> 39l
    | INVALID_SNS_ACCESS_TOKEN -> 40l
    | EXTERNAL_SERVICE_NOT_AVAILABLE -> 41l
    | NOT_ALLOWED_ADD_CONTACT -> 42l
    | NOT_CERTIFICATED -> 43l
    | NOT_ALLOWED_SECONDARY_DEVICE -> 44l
    | INVALID_PIN_CODE -> 45l
    | NOT_FOUND_IDENTITY_CREDENTIAL -> 46l
    | EXCEED_FILE_MAX_SIZE -> 47l
    | EXCEED_DAILY_QUOTA -> 48l
    | NOT_SUPPORT_SEND_FILE -> 49l
    | MUST_UPGRADE -> 50l
    | NOT_AVAILABLE_PIN_CODE_SESSION -> 51l
    | EXPIRED_REVISION -> 52l
    | NOT_YET_PHONE_NUMBER -> 54l
    | BAD_CALL_NUMBER -> 55l
    | UNAVAILABLE_CALL_NUMBER -> 56l
    | NOT_SUPPORT_CALL_SERVICE -> 57l
    | CONGESTION_CONTROL -> 58l
    | NO_BALANCE -> 59l
    | NOT_PERMITTED_CALLER_ID -> 60l
    | NO_CALLER_ID_LIMIT_EXCEEDED -> 61l
    | CALLER_ID_VERIFICATION_REQUIRED -> 62l
    | NO_CALLER_ID_LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED -> 63l
    | MESSAGE_NOT_FOUND -> 64l
    | INVALID_ACCOUNT_MIGRATION_PINCODE_FORMAT -> 65l
    | ACCOUNT_MIGRATION_PINCODE_NOT_MATCHED -> 66l
    | ACCOUNT_MIGRATION_PINCODE_BLOCKED -> 67l
    | INVALID_PASSWORD_FORMAT -> 69l
    | FEATURE_RESTRICTED -> 70l
    | MESSAGE_NOT_DESTRUCTIBLE -> 71l
    | PAID_CALL_REDEEM_FAILED -> 72l
    | PREVENTED_JOIN_BY_TICKET -> 73l
    | SEND_MESSAGE_NOT_PERMITTED_FROM_LINE_AT -> 75l
    | SEND_MESSAGE_NOT_PERMITTED_WHILE_AUTO_REPLY -> 76l
    | SECURITY_CENTER_NOT_VERIFIED -> 77l
    | SECURITY_CENTER_BLOCKED_BY_SETTING -> 78l
    | SECURITY_CENTER_BLOCKED -> 79l
    | TALK_PROXY_EXCEPTION -> 80l
    | E2EE_INVALID_PROTOCOL -> 81l
    | E2EE_RETRY_ENCRYPT -> 82l
    | E2EE_UPDATE_SENDER_KEY -> 83l
    | E2EE_UPDATE_RECEIVER_KEY -> 84l
    | E2EE_INVALID_ARGUMENT -> 85l
    | E2EE_INVALID_VERSION -> 86l
    | E2EE_SENDER_DISABLED -> 87l
    | E2EE_RECEIVER_DISABLED -> 88l
    | E2EE_SENDER_NOT_ALLOWED -> 89l
    | E2EE_RECEIVER_NOT_ALLOWED -> 90l
    | E2EE_RESEND_FAIL -> 91l
    | E2EE_RESEND_OK -> 92l
    | HITOKOTO_BACKUP_NO_AVAILABLE_DATA -> 93l
    | E2EE_UPDATE_PRIMARY_DEVICE -> 94l
    | SUCCESS -> 95l
    | CANCEL -> 96l
    | E2EE_PRIMARY_NOT_SUPPORT -> 97l
    | E2EE_RETRY_PLAIN -> 98l
    | E2EE_RECREATE_GROUP_KEY -> 99l
    | E2EE_GROUP_TOO_MANY_MEMBERS -> 100l
    | SERVER_BUSY -> 101l
    | NOT_ALLOWED_ADD_FOLLOW -> 102l
    | INCOMING_FRIEND_REQUEST_LIMIT -> 103l
    | OUTGOING_FRIEND_REQUEST_LIMIT -> 104l
    | OUTGOING_FRIEND_REQUEST_QUOTA -> 105l
    | DUPLICATED -> 106l
    | BANNED -> 107l
  let of_i = function
    | 0l -> ILLEGAL_ARGUMENT
    | 1l -> AUTHENTICATION_FAILED
    | 2l -> DB_FAILED
    | 3l -> INVALID_STATE
    | 4l -> EXCESSIVE_ACCESS
    | 5l -> NOT_FOUND
    | 9l -> INVALID_MID
    | 10l -> NOT_A_MEMBER
    | 6l -> INVALID_LENGTH
    | 7l -> NOT_AVAILABLE_USER
    | 8l -> NOT_AUTHORIZED_DEVICE
    | 14l -> NOT_AUTHORIZED_SESSION
    | 11l -> INCOMPATIBLE_APP_VERSION
    | 12l -> NOT_READY
    | 13l -> NOT_AVAILABLE_SESSION
    | 15l -> SYSTEM_ERROR
    | 16l -> NO_AVAILABLE_VERIFICATION_METHOD
    | 17l -> NOT_AUTHENTICATED
    | 18l -> INVALID_IDENTITY_CREDENTIAL
    | 19l -> NOT_AVAILABLE_IDENTITY_IDENTIFIER
    | 20l -> INTERNAL_ERROR
    | 21l -> NO_SUCH_IDENTITY_IDENFIER
    | 22l -> DEACTIVATED_ACCOUNT_BOUND_TO_THIS_IDENTITY
    | 23l -> ILLEGAL_IDENTITY_CREDENTIAL
    | 24l -> UNKNOWN_CHANNEL
    | 25l -> NO_SUCH_MESSAGE_BOX
    | 26l -> NOT_AVAILABLE_MESSAGE_BOX
    | 27l -> CHANNEL_DOES_NOT_MATCH
    | 28l -> NOT_YOUR_MESSAGE
    | 29l -> MESSAGE_DEFINED_ERROR
    | 30l -> USER_CANNOT_ACCEPT_PRESENTS
    | 32l -> USER_NOT_STICKER_OWNER
    | 33l -> MAINTENANCE_ERROR
    | 34l -> ACCOUNT_NOT_MATCHED
    | 35l -> ABUSE_BLOCK
    | 36l -> NOT_FRIEND
    | 37l -> NOT_ALLOWED_CALL
    | 38l -> BLOCK_FRIEND
    | 39l -> INCOMPATIBLE_VOIP_VERSION
    | 40l -> INVALID_SNS_ACCESS_TOKEN
    | 41l -> EXTERNAL_SERVICE_NOT_AVAILABLE
    | 42l -> NOT_ALLOWED_ADD_CONTACT
    | 43l -> NOT_CERTIFICATED
    | 44l -> NOT_ALLOWED_SECONDARY_DEVICE
    | 45l -> INVALID_PIN_CODE
    | 46l -> NOT_FOUND_IDENTITY_CREDENTIAL
    | 47l -> EXCEED_FILE_MAX_SIZE
    | 48l -> EXCEED_DAILY_QUOTA
    | 49l -> NOT_SUPPORT_SEND_FILE
    | 50l -> MUST_UPGRADE
    | 51l -> NOT_AVAILABLE_PIN_CODE_SESSION
    | 52l -> EXPIRED_REVISION
    | 54l -> NOT_YET_PHONE_NUMBER
    | 55l -> BAD_CALL_NUMBER
    | 56l -> UNAVAILABLE_CALL_NUMBER
    | 57l -> NOT_SUPPORT_CALL_SERVICE
    | 58l -> CONGESTION_CONTROL
    | 59l -> NO_BALANCE
    | 60l -> NOT_PERMITTED_CALLER_ID
    | 61l -> NO_CALLER_ID_LIMIT_EXCEEDED
    | 62l -> CALLER_ID_VERIFICATION_REQUIRED
    | 63l -> NO_CALLER_ID_LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED
    | 64l -> MESSAGE_NOT_FOUND
    | 65l -> INVALID_ACCOUNT_MIGRATION_PINCODE_FORMAT
    | 66l -> ACCOUNT_MIGRATION_PINCODE_NOT_MATCHED
    | 67l -> ACCOUNT_MIGRATION_PINCODE_BLOCKED
    | 69l -> INVALID_PASSWORD_FORMAT
    | 70l -> FEATURE_RESTRICTED
    | 71l -> MESSAGE_NOT_DESTRUCTIBLE
    | 72l -> PAID_CALL_REDEEM_FAILED
    | 73l -> PREVENTED_JOIN_BY_TICKET
    | 75l -> SEND_MESSAGE_NOT_PERMITTED_FROM_LINE_AT
    | 76l -> SEND_MESSAGE_NOT_PERMITTED_WHILE_AUTO_REPLY
    | 77l -> SECURITY_CENTER_NOT_VERIFIED
    | 78l -> SECURITY_CENTER_BLOCKED_BY_SETTING
    | 79l -> SECURITY_CENTER_BLOCKED
    | 80l -> TALK_PROXY_EXCEPTION
    | 81l -> E2EE_INVALID_PROTOCOL
    | 82l -> E2EE_RETRY_ENCRYPT
    | 83l -> E2EE_UPDATE_SENDER_KEY
    | 84l -> E2EE_UPDATE_RECEIVER_KEY
    | 85l -> E2EE_INVALID_ARGUMENT
    | 86l -> E2EE_INVALID_VERSION
    | 87l -> E2EE_SENDER_DISABLED
    | 88l -> E2EE_RECEIVER_DISABLED
    | 89l -> E2EE_SENDER_NOT_ALLOWED
    | 90l -> E2EE_RECEIVER_NOT_ALLOWED
    | 91l -> E2EE_RESEND_FAIL
    | 92l -> E2EE_RESEND_OK
    | 93l -> HITOKOTO_BACKUP_NO_AVAILABLE_DATA
    | 94l -> E2EE_UPDATE_PRIMARY_DEVICE
    | 95l -> SUCCESS
    | 96l -> CANCEL
    | 97l -> E2EE_PRIMARY_NOT_SUPPORT
    | 98l -> E2EE_RETRY_PLAIN
    | 99l -> E2EE_RECREATE_GROUP_KEY
    | 100l -> E2EE_GROUP_TOO_MANY_MEMBERS
    | 101l -> SERVER_BUSY
    | 102l -> NOT_ALLOWED_ADD_FOLLOW
    | 103l -> INCOMING_FRIEND_REQUEST_LIMIT
    | 104l -> OUTGOING_FRIEND_REQUEST_LIMIT
    | 105l -> OUTGOING_FRIEND_REQUEST_QUOTA
    | 106l -> DUPLICATED
    | 107l -> BANNED
    | _ -> raise Thrift_error
end
module FeatureType = 
struct
  type t = 
    | OBS_VIDEO
    | OBS_GENERAL
  let to_i = function
    | OBS_VIDEO -> 1l
    | OBS_GENERAL -> 2l
  let of_i = function
    | 1l -> OBS_VIDEO
    | 2l -> OBS_GENERAL
    | _ -> raise Thrift_error
end
module GroupAttribute = 
struct
  type t = 
    | NAME
    | PICTURE_STATUS
    | ALL
    | PREVENTED_JOIN_BY_TICKET
    | NOTIFICATION_SETTING
  let to_i = function
    | NAME -> 1l
    | PICTURE_STATUS -> 2l
    | ALL -> 255l
    | PREVENTED_JOIN_BY_TICKET -> 4l
    | NOTIFICATION_SETTING -> 8l
  let of_i = function
    | 1l -> NAME
    | 2l -> PICTURE_STATUS
    | 255l -> ALL
    | 4l -> PREVENTED_JOIN_BY_TICKET
    | 8l -> NOTIFICATION_SETTING
    | _ -> raise Thrift_error
end
module IdentityProvider = 
struct
  type t = 
    | UNKNOWN
    | LINE
    | NAVER_KR
    | LINE_PHONE
  let to_i = function
    | UNKNOWN -> 0l
    | LINE -> 1l
    | NAVER_KR -> 2l
    | LINE_PHONE -> 3l
  let of_i = function
    | 0l -> UNKNOWN
    | 1l -> LINE
    | 2l -> NAVER_KR
    | 3l -> LINE_PHONE
    | _ -> raise Thrift_error
end
module LoginResultType = 
struct
  type t = 
    | SUCCESS
    | REQUIRE_QRCODE
    | REQUIRE_DEVICE_CONFIRM
    | REQUIRE_SMS_CONFIRM
  let to_i = function
    | SUCCESS -> 1l
    | REQUIRE_QRCODE -> 2l
    | REQUIRE_DEVICE_CONFIRM -> 3l
    | REQUIRE_SMS_CONFIRM -> 4l
  let of_i = function
    | 1l -> SUCCESS
    | 2l -> REQUIRE_QRCODE
    | 3l -> REQUIRE_DEVICE_CONFIRM
    | 4l -> REQUIRE_SMS_CONFIRM
    | _ -> raise Thrift_error
end
module MessageOperationType = 
struct
  type t = 
    | SEND_MESSAGE
    | RECEIVE_MESSAGE
    | READ_MESSAGE
    | NOTIFIED_READ_MESSAGE
    | NOTIFIED_JOIN_CHAT
    | FAILED_SEND_MESSAGE
    | SEND_CONTENT
    | SEND_CONTENT_RECEIPT
    | SEND_CHAT_REMOVED
    | REMOVE_ALL_MESSAGES
  let to_i = function
    | SEND_MESSAGE -> 1l
    | RECEIVE_MESSAGE -> 2l
    | READ_MESSAGE -> 3l
    | NOTIFIED_READ_MESSAGE -> 4l
    | NOTIFIED_JOIN_CHAT -> 5l
    | FAILED_SEND_MESSAGE -> 6l
    | SEND_CONTENT -> 7l
    | SEND_CONTENT_RECEIPT -> 8l
    | SEND_CHAT_REMOVED -> 9l
    | REMOVE_ALL_MESSAGES -> 10l
  let of_i = function
    | 1l -> SEND_MESSAGE
    | 2l -> RECEIVE_MESSAGE
    | 3l -> READ_MESSAGE
    | 4l -> NOTIFIED_READ_MESSAGE
    | 5l -> NOTIFIED_JOIN_CHAT
    | 6l -> FAILED_SEND_MESSAGE
    | 7l -> SEND_CONTENT
    | 8l -> SEND_CONTENT_RECEIPT
    | 9l -> SEND_CHAT_REMOVED
    | 10l -> REMOVE_ALL_MESSAGES
    | _ -> raise Thrift_error
end
module MIDType = 
struct
  type t = 
    | USER
    | ROOM
    | GROUP
    | SQUARE
    | SQUARE_CHAT
    | SQUARE_MEMBER
    | BOT
  let to_i = function
    | USER -> 0l
    | ROOM -> 1l
    | GROUP -> 2l
    | SQUARE -> 3l
    | SQUARE_CHAT -> 4l
    | SQUARE_MEMBER -> 5l
    | BOT -> 6l
  let of_i = function
    | 0l -> USER
    | 1l -> ROOM
    | 2l -> GROUP
    | 3l -> SQUARE
    | 4l -> SQUARE_CHAT
    | 5l -> SQUARE_MEMBER
    | 6l -> BOT
    | _ -> raise Thrift_error
end
module ServiceCode = 
struct
  type t = 
    | UNKNOWN
    | TALK
    | SQUARE
  let to_i = function
    | UNKNOWN -> 0l
    | TALK -> 1l
    | SQUARE -> 2l
  let of_i = function
    | 0l -> UNKNOWN
    | 1l -> TALK
    | 2l -> SQUARE
    | _ -> raise Thrift_error
end
module FriendRequestDirection = 
struct
  type t = 
    | INCOMING
    | OUTGOING
  let to_i = function
    | INCOMING -> 1l
    | OUTGOING -> 2l
  let of_i = function
    | 1l -> INCOMING
    | 2l -> OUTGOING
    | _ -> raise Thrift_error
end
module FriendRequestMethod = 
struct
  type t = 
    | TIMELINE
    | NEARBY
    | SQUARE
  let to_i = function
    | TIMELINE -> 1l
    | NEARBY -> 2l
    | SQUARE -> 3l
  let of_i = function
    | 1l -> TIMELINE
    | 2l -> NEARBY
    | 3l -> SQUARE
    | _ -> raise Thrift_error
end
module FriendRequestStatus = 
struct
  type t = 
    | NONE
    | AVAILABLE
    | ALREADY_REQUESTED
    | UNAVAILABLE
  let to_i = function
    | NONE -> 0l
    | AVAILABLE -> 1l
    | ALREADY_REQUESTED -> 2l
    | UNAVAILABLE -> 3l
  let of_i = function
    | 0l -> NONE
    | 1l -> AVAILABLE
    | 2l -> ALREADY_REQUESTED
    | 3l -> UNAVAILABLE
    | _ -> raise Thrift_error
end
module ModificationType = 
struct
  type t = 
    | ADD
    | REMOVE
    | MODIFY
  let to_i = function
    | ADD -> 0l
    | REMOVE -> 1l
    | MODIFY -> 2l
  let of_i = function
    | 0l -> ADD
    | 1l -> REMOVE
    | 2l -> MODIFY
    | _ -> raise Thrift_error
end
module NotificationItemFetchMode = 
struct
  type t = 
    | ALL
    | APPEND
  let to_i = function
    | ALL -> 0l
    | APPEND -> 1l
  let of_i = function
    | 0l -> ALL
    | 1l -> APPEND
    | _ -> raise Thrift_error
end
module NotificationQueueType = 
struct
  type t = 
    | GLOBAL
    | MESSAGE
    | PRIMARY
  let to_i = function
    | GLOBAL -> 1l
    | MESSAGE -> 2l
    | PRIMARY -> 3l
  let of_i = function
    | 1l -> GLOBAL
    | 2l -> MESSAGE
    | 3l -> PRIMARY
    | _ -> raise Thrift_error
end
module GroupCallMediaType = 
struct
  type t = 
    | AUDIO
    | VIDEO
  let to_i = function
    | AUDIO -> 1l
    | VIDEO -> 2l
  let of_i = function
    | 1l -> AUDIO
    | 2l -> VIDEO
    | _ -> raise Thrift_error
end
module PersonalInfo = 
struct
  type t = 
    | EMAIL
    | PHONE
    | BIRTHDAY
    | RAW_BIRTHDAY
  let to_i = function
    | EMAIL -> 0l
    | PHONE -> 1l
    | BIRTHDAY -> 2l
    | RAW_BIRTHDAY -> 3l
  let of_i = function
    | 0l -> EMAIL
    | 1l -> PHONE
    | 2l -> BIRTHDAY
    | 3l -> RAW_BIRTHDAY
    | _ -> raise Thrift_error
end
module NotificationStatus = 
struct
  type t = 
    | NOTIFICATION_ITEM_EXIST
    | TIMELINE_ITEM_EXIST
    | NOTE_GROUP_NEW_ITEM_EXIST
    | TIMELINE_BUDDYGROUP_CHANGED
    | NOTE_ONE_TO_ONE_NEW_ITEM_EXIST
    | ALBUM_ITEM_EXIST
    | TIMELINE_ITEM_DELETED
    | OTOGROUP_ITEM_EXIST
    | GROUPHOME_NEW_ITEM_EXIST
    | GROUPHOME_HIDDEN_ITEM_CHANGED
    | NOTIFICATION_ITEM_CHANGED
    | BEAD_ITEM_HIDE
    | BEAD_ITEM_SHOW
  let to_i = function
    | NOTIFICATION_ITEM_EXIST -> 1l
    | TIMELINE_ITEM_EXIST -> 2l
    | NOTE_GROUP_NEW_ITEM_EXIST -> 4l
    | TIMELINE_BUDDYGROUP_CHANGED -> 8l
    | NOTE_ONE_TO_ONE_NEW_ITEM_EXIST -> 16l
    | ALBUM_ITEM_EXIST -> 32l
    | TIMELINE_ITEM_DELETED -> 64l
    | OTOGROUP_ITEM_EXIST -> 128l
    | GROUPHOME_NEW_ITEM_EXIST -> 256l
    | GROUPHOME_HIDDEN_ITEM_CHANGED -> 512l
    | NOTIFICATION_ITEM_CHANGED -> 1024l
    | BEAD_ITEM_HIDE -> 2048l
    | BEAD_ITEM_SHOW -> 4096l
  let of_i = function
    | 1l -> NOTIFICATION_ITEM_EXIST
    | 2l -> TIMELINE_ITEM_EXIST
    | 4l -> NOTE_GROUP_NEW_ITEM_EXIST
    | 8l -> TIMELINE_BUDDYGROUP_CHANGED
    | 16l -> NOTE_ONE_TO_ONE_NEW_ITEM_EXIST
    | 32l -> ALBUM_ITEM_EXIST
    | 64l -> TIMELINE_ITEM_DELETED
    | 128l -> OTOGROUP_ITEM_EXIST
    | 256l -> GROUPHOME_NEW_ITEM_EXIST
    | 512l -> GROUPHOME_HIDDEN_ITEM_CHANGED
    | 1024l -> NOTIFICATION_ITEM_CHANGED
    | 2048l -> BEAD_ITEM_HIDE
    | 4096l -> BEAD_ITEM_SHOW
    | _ -> raise Thrift_error
end
module NotificationType = 
struct
  type t = 
    | APPLE_APNS
    | GOOGLE_C2DM
    | NHN_NNI
    | SKT_AOM
    | MS_MPNS
    | RIM_BIS
    | GOOGLE_GCM
    | NOKIA_NNAPI
    | TIZEN
    | LINE_BOT
    | LINE_WAP
    | APPLE_APNS_VOIP
    | MS_WNS
    | GOOGLE_FCM
  let to_i = function
    | APPLE_APNS -> 1l
    | GOOGLE_C2DM -> 2l
    | NHN_NNI -> 3l
    | SKT_AOM -> 4l
    | MS_MPNS -> 5l
    | RIM_BIS -> 6l
    | GOOGLE_GCM -> 7l
    | NOKIA_NNAPI -> 8l
    | TIZEN -> 9l
    | LINE_BOT -> 17l
    | LINE_WAP -> 18l
    | APPLE_APNS_VOIP -> 19l
    | MS_WNS -> 20l
    | GOOGLE_FCM -> 21l
  let of_i = function
    | 1l -> APPLE_APNS
    | 2l -> GOOGLE_C2DM
    | 3l -> NHN_NNI
    | 4l -> SKT_AOM
    | 5l -> MS_MPNS
    | 6l -> RIM_BIS
    | 7l -> GOOGLE_GCM
    | 8l -> NOKIA_NNAPI
    | 9l -> TIZEN
    | 17l -> LINE_BOT
    | 18l -> LINE_WAP
    | 19l -> APPLE_APNS_VOIP
    | 20l -> MS_WNS
    | 21l -> GOOGLE_FCM
    | _ -> raise Thrift_error
end
module OpStatus = 
struct
  type t = 
    | NORMAL
    | ALERT_DISABLED
    | ALWAYS
  let to_i = function
    | NORMAL -> 0l
    | ALERT_DISABLED -> 1l
    | ALWAYS -> 2l
  let of_i = function
    | 0l -> NORMAL
    | 1l -> ALERT_DISABLED
    | 2l -> ALWAYS
    | _ -> raise Thrift_error
end
module OpType = 
struct
  type t = 
    | END_OF_OPERATION
    | UPDATE_PROFILE
    | UPDATE_SETTINGS
    | NOTIFIED_UPDATE_PROFILE
    | REGISTER_USERID
    | ADD_CONTACT
    | NOTIFIED_ADD_CONTACT
    | BLOCK_CONTACT
    | UNBLOCK_CONTACT
    | NOTIFIED_RECOMMEND_CONTACT
    | CREATE_GROUP
    | UPDATE_GROUP
    | NOTIFIED_UPDATE_GROUP
    | INVITE_INTO_GROUP
    | NOTIFIED_INVITE_INTO_GROUP
    | CANCEL_INVITATION_GROUP
    | NOTIFIED_CANCEL_INVITATION_GROUP
    | LEAVE_GROUP
    | NOTIFIED_LEAVE_GROUP
    | ACCEPT_GROUP_INVITATION
    | NOTIFIED_ACCEPT_GROUP_INVITATION
    | REJECT_GROUP_INVITATION
    | NOTIFIED_REJECT_GROUP_INVITATION
    | KICKOUT_FROM_GROUP
    | NOTIFIED_KICKOUT_FROM_GROUP
    | CREATE_ROOM
    | INVITE_INTO_ROOM
    | NOTIFIED_INVITE_INTO_ROOM
    | LEAVE_ROOM
    | NOTIFIED_LEAVE_ROOM
    | SEND_MESSAGE
    | RECEIVE_MESSAGE
    | SEND_MESSAGE_RECEIPT
    | RECEIVE_MESSAGE_RECEIPT
    | SEND_CONTENT_RECEIPT
    | RECEIVE_ANNOUNCEMENT
    | NOTIFIED_UNREGISTER_USER
    | INVITE_VIA_EMAIL
    | NOTIFIED_REGISTER_USER
    | NOTIFIED_REQUEST_RECOVERY
    | SEND_CHAT_CHECKED
    | SEND_CHAT_REMOVED
    | NOTIFIED_FORCE_SYNC
    | SEND_CONTENT
    | SEND_MESSAGE_MYHOME
    | NOTIFIED_UPDATE_CONTENT_PREVIEW
    | REMOVE_ALL_MESSAGES
    | NOTIFIED_UPDATE_PURCHASES
    | DUMMY
    | UPDATE_CONTACT
    | NOTIFIED_RECEIVED_CALL
    | CANCEL_CALL
    | NOTIFIED_REDIRECT
    | NOTIFIED_CHANNEL_SYNC
    | FAILED_SEND_MESSAGE
    | NOTIFIED_READ_MESSAGE
    | FAILED_EMAIL_CONFIRMATION
    | NOTIFIED_CHAT_CONTENT
    | NOTIFIED_PUSH_NOTICENTER_ITEM
    | NOTIFIED_JOIN_CHAT
    | NOTIFIED_LEAVE_CHAT
    | NOTIFIED_TYPING
    | FRIEND_REQUEST_ACCEPTED
    | DESTROY_MESSAGE
    | NOTIFIED_DESTROY_MESSAGE
    | UPDATE_PUBLICKEYCHAIN
    | NOTIFIED_UPDATE_PUBLICKEYCHAIN
    | NOTIFIED_BLOCK_CONTACT
    | NOTIFIED_UNBLOCK_CONTACT
    | UPDATE_GROUPPREFERENCE
    | NOTIFIED_PAYMENT_EVENT
    | REGISTER_E2EE_PUBLICKEY
    | NOTIFIED_E2EE_KEY_EXCHANGE_REQ
    | NOTIFIED_E2EE_KEY_EXCHANGE_RESP
    | NOTIFIED_E2EE_MESSAGE_RESEND_REQ
    | NOTIFIED_E2EE_MESSAGE_RESEND_RESP
    | NOTIFIED_E2EE_KEY_UPDATE
    | NOTIFIED_BUDDY_UPDATE_PROFILE
    | NOTIFIED_UPDATE_LINEAT_TABS
    | UPDATE_ROOM
    | NOTIFIED_BEACON_DETECTED
    | UPDATE_EXTENDED_PROFILE
    | ADD_FOLLOW
    | NOTIFIED_ADD_FOLLOW
    | DELETE_FOLLOW
    | NOTIFIED_DELETE_FOLLOW
    | UPDATE_TIMELINE_SETTINGS
    | NOTIFIED_FRIEND_REQUEST
    | UPDATE_RINGBACK_TONE
    | NOTIFIED_POSTBACK
    | RECEIVE_READ_WATERMARK
    | NOTIFIED_MESSAGE_DELIVERED
    | NOTIFIED_UPDATE_CHAT_BAR
    | NOTIFIED_CHATAPP_INSTALLED
    | NOTIFIED_CHATAPP_UPDATED
    | NOTIFIED_CHATAPP_NEW_MARK
    | NOTIFIED_CHATAPP_DELETED
    | NOTIFIED_CHATAPP_SYNC
    | NOTIFIED_UPDATE_MESSAGE
  let to_i = function
    | END_OF_OPERATION -> 0l
    | UPDATE_PROFILE -> 1l
    | UPDATE_SETTINGS -> 36l
    | NOTIFIED_UPDATE_PROFILE -> 2l
    | REGISTER_USERID -> 3l
    | ADD_CONTACT -> 4l
    | NOTIFIED_ADD_CONTACT -> 5l
    | BLOCK_CONTACT -> 6l
    | UNBLOCK_CONTACT -> 7l
    | NOTIFIED_RECOMMEND_CONTACT -> 8l
    | CREATE_GROUP -> 9l
    | UPDATE_GROUP -> 10l
    | NOTIFIED_UPDATE_GROUP -> 11l
    | INVITE_INTO_GROUP -> 12l
    | NOTIFIED_INVITE_INTO_GROUP -> 13l
    | CANCEL_INVITATION_GROUP -> 31l
    | NOTIFIED_CANCEL_INVITATION_GROUP -> 32l
    | LEAVE_GROUP -> 14l
    | NOTIFIED_LEAVE_GROUP -> 15l
    | ACCEPT_GROUP_INVITATION -> 16l
    | NOTIFIED_ACCEPT_GROUP_INVITATION -> 17l
    | REJECT_GROUP_INVITATION -> 34l
    | NOTIFIED_REJECT_GROUP_INVITATION -> 35l
    | KICKOUT_FROM_GROUP -> 18l
    | NOTIFIED_KICKOUT_FROM_GROUP -> 19l
    | CREATE_ROOM -> 20l
    | INVITE_INTO_ROOM -> 21l
    | NOTIFIED_INVITE_INTO_ROOM -> 22l
    | LEAVE_ROOM -> 23l
    | NOTIFIED_LEAVE_ROOM -> 24l
    | SEND_MESSAGE -> 25l
    | RECEIVE_MESSAGE -> 26l
    | SEND_MESSAGE_RECEIPT -> 27l
    | RECEIVE_MESSAGE_RECEIPT -> 28l
    | SEND_CONTENT_RECEIPT -> 29l
    | RECEIVE_ANNOUNCEMENT -> 30l
    | NOTIFIED_UNREGISTER_USER -> 33l
    | INVITE_VIA_EMAIL -> 38l
    | NOTIFIED_REGISTER_USER -> 37l
    | NOTIFIED_REQUEST_RECOVERY -> 39l
    | SEND_CHAT_CHECKED -> 40l
    | SEND_CHAT_REMOVED -> 41l
    | NOTIFIED_FORCE_SYNC -> 42l
    | SEND_CONTENT -> 43l
    | SEND_MESSAGE_MYHOME -> 44l
    | NOTIFIED_UPDATE_CONTENT_PREVIEW -> 45l
    | REMOVE_ALL_MESSAGES -> 46l
    | NOTIFIED_UPDATE_PURCHASES -> 47l
    | DUMMY -> 48l
    | UPDATE_CONTACT -> 49l
    | NOTIFIED_RECEIVED_CALL -> 50l
    | CANCEL_CALL -> 51l
    | NOTIFIED_REDIRECT -> 52l
    | NOTIFIED_CHANNEL_SYNC -> 53l
    | FAILED_SEND_MESSAGE -> 54l
    | NOTIFIED_READ_MESSAGE -> 55l
    | FAILED_EMAIL_CONFIRMATION -> 56l
    | NOTIFIED_CHAT_CONTENT -> 58l
    | NOTIFIED_PUSH_NOTICENTER_ITEM -> 59l
    | NOTIFIED_JOIN_CHAT -> 60l
    | NOTIFIED_LEAVE_CHAT -> 61l
    | NOTIFIED_TYPING -> 62l
    | FRIEND_REQUEST_ACCEPTED -> 63l
    | DESTROY_MESSAGE -> 64l
    | NOTIFIED_DESTROY_MESSAGE -> 65l
    | UPDATE_PUBLICKEYCHAIN -> 66l
    | NOTIFIED_UPDATE_PUBLICKEYCHAIN -> 67l
    | NOTIFIED_BLOCK_CONTACT -> 68l
    | NOTIFIED_UNBLOCK_CONTACT -> 69l
    | UPDATE_GROUPPREFERENCE -> 70l
    | NOTIFIED_PAYMENT_EVENT -> 71l
    | REGISTER_E2EE_PUBLICKEY -> 72l
    | NOTIFIED_E2EE_KEY_EXCHANGE_REQ -> 73l
    | NOTIFIED_E2EE_KEY_EXCHANGE_RESP -> 74l
    | NOTIFIED_E2EE_MESSAGE_RESEND_REQ -> 75l
    | NOTIFIED_E2EE_MESSAGE_RESEND_RESP -> 76l
    | NOTIFIED_E2EE_KEY_UPDATE -> 77l
    | NOTIFIED_BUDDY_UPDATE_PROFILE -> 78l
    | NOTIFIED_UPDATE_LINEAT_TABS -> 79l
    | UPDATE_ROOM -> 80l
    | NOTIFIED_BEACON_DETECTED -> 81l
    | UPDATE_EXTENDED_PROFILE -> 82l
    | ADD_FOLLOW -> 83l
    | NOTIFIED_ADD_FOLLOW -> 84l
    | DELETE_FOLLOW -> 85l
    | NOTIFIED_DELETE_FOLLOW -> 86l
    | UPDATE_TIMELINE_SETTINGS -> 87l
    | NOTIFIED_FRIEND_REQUEST -> 88l
    | UPDATE_RINGBACK_TONE -> 89l
    | NOTIFIED_POSTBACK -> 90l
    | RECEIVE_READ_WATERMARK -> 91l
    | NOTIFIED_MESSAGE_DELIVERED -> 92l
    | NOTIFIED_UPDATE_CHAT_BAR -> 93l
    | NOTIFIED_CHATAPP_INSTALLED -> 94l
    | NOTIFIED_CHATAPP_UPDATED -> 95l
    | NOTIFIED_CHATAPP_NEW_MARK -> 96l
    | NOTIFIED_CHATAPP_DELETED -> 97l
    | NOTIFIED_CHATAPP_SYNC -> 98l
    | NOTIFIED_UPDATE_MESSAGE -> 99l
  let of_i = function
    | 0l -> END_OF_OPERATION
    | 1l -> UPDATE_PROFILE
    | 36l -> UPDATE_SETTINGS
    | 2l -> NOTIFIED_UPDATE_PROFILE
    | 3l -> REGISTER_USERID
    | 4l -> ADD_CONTACT
    | 5l -> NOTIFIED_ADD_CONTACT
    | 6l -> BLOCK_CONTACT
    | 7l -> UNBLOCK_CONTACT
    | 8l -> NOTIFIED_RECOMMEND_CONTACT
    | 9l -> CREATE_GROUP
    | 10l -> UPDATE_GROUP
    | 11l -> NOTIFIED_UPDATE_GROUP
    | 12l -> INVITE_INTO_GROUP
    | 13l -> NOTIFIED_INVITE_INTO_GROUP
    | 31l -> CANCEL_INVITATION_GROUP
    | 32l -> NOTIFIED_CANCEL_INVITATION_GROUP
    | 14l -> LEAVE_GROUP
    | 15l -> NOTIFIED_LEAVE_GROUP
    | 16l -> ACCEPT_GROUP_INVITATION
    | 17l -> NOTIFIED_ACCEPT_GROUP_INVITATION
    | 34l -> REJECT_GROUP_INVITATION
    | 35l -> NOTIFIED_REJECT_GROUP_INVITATION
    | 18l -> KICKOUT_FROM_GROUP
    | 19l -> NOTIFIED_KICKOUT_FROM_GROUP
    | 20l -> CREATE_ROOM
    | 21l -> INVITE_INTO_ROOM
    | 22l -> NOTIFIED_INVITE_INTO_ROOM
    | 23l -> LEAVE_ROOM
    | 24l -> NOTIFIED_LEAVE_ROOM
    | 25l -> SEND_MESSAGE
    | 26l -> RECEIVE_MESSAGE
    | 27l -> SEND_MESSAGE_RECEIPT
    | 28l -> RECEIVE_MESSAGE_RECEIPT
    | 29l -> SEND_CONTENT_RECEIPT
    | 30l -> RECEIVE_ANNOUNCEMENT
    | 33l -> NOTIFIED_UNREGISTER_USER
    | 38l -> INVITE_VIA_EMAIL
    | 37l -> NOTIFIED_REGISTER_USER
    | 39l -> NOTIFIED_REQUEST_RECOVERY
    | 40l -> SEND_CHAT_CHECKED
    | 41l -> SEND_CHAT_REMOVED
    | 42l -> NOTIFIED_FORCE_SYNC
    | 43l -> SEND_CONTENT
    | 44l -> SEND_MESSAGE_MYHOME
    | 45l -> NOTIFIED_UPDATE_CONTENT_PREVIEW
    | 46l -> REMOVE_ALL_MESSAGES
    | 47l -> NOTIFIED_UPDATE_PURCHASES
    | 48l -> DUMMY
    | 49l -> UPDATE_CONTACT
    | 50l -> NOTIFIED_RECEIVED_CALL
    | 51l -> CANCEL_CALL
    | 52l -> NOTIFIED_REDIRECT
    | 53l -> NOTIFIED_CHANNEL_SYNC
    | 54l -> FAILED_SEND_MESSAGE
    | 55l -> NOTIFIED_READ_MESSAGE
    | 56l -> FAILED_EMAIL_CONFIRMATION
    | 58l -> NOTIFIED_CHAT_CONTENT
    | 59l -> NOTIFIED_PUSH_NOTICENTER_ITEM
    | 60l -> NOTIFIED_JOIN_CHAT
    | 61l -> NOTIFIED_LEAVE_CHAT
    | 62l -> NOTIFIED_TYPING
    | 63l -> FRIEND_REQUEST_ACCEPTED
    | 64l -> DESTROY_MESSAGE
    | 65l -> NOTIFIED_DESTROY_MESSAGE
    | 66l -> UPDATE_PUBLICKEYCHAIN
    | 67l -> NOTIFIED_UPDATE_PUBLICKEYCHAIN
    | 68l -> NOTIFIED_BLOCK_CONTACT
    | 69l -> NOTIFIED_UNBLOCK_CONTACT
    | 70l -> UPDATE_GROUPPREFERENCE
    | 71l -> NOTIFIED_PAYMENT_EVENT
    | 72l -> REGISTER_E2EE_PUBLICKEY
    | 73l -> NOTIFIED_E2EE_KEY_EXCHANGE_REQ
    | 74l -> NOTIFIED_E2EE_KEY_EXCHANGE_RESP
    | 75l -> NOTIFIED_E2EE_MESSAGE_RESEND_REQ
    | 76l -> NOTIFIED_E2EE_MESSAGE_RESEND_RESP
    | 77l -> NOTIFIED_E2EE_KEY_UPDATE
    | 78l -> NOTIFIED_BUDDY_UPDATE_PROFILE
    | 79l -> NOTIFIED_UPDATE_LINEAT_TABS
    | 80l -> UPDATE_ROOM
    | 81l -> NOTIFIED_BEACON_DETECTED
    | 82l -> UPDATE_EXTENDED_PROFILE
    | 83l -> ADD_FOLLOW
    | 84l -> NOTIFIED_ADD_FOLLOW
    | 85l -> DELETE_FOLLOW
    | 86l -> NOTIFIED_DELETE_FOLLOW
    | 87l -> UPDATE_TIMELINE_SETTINGS
    | 88l -> NOTIFIED_FRIEND_REQUEST
    | 89l -> UPDATE_RINGBACK_TONE
    | 90l -> NOTIFIED_POSTBACK
    | 91l -> RECEIVE_READ_WATERMARK
    | 92l -> NOTIFIED_MESSAGE_DELIVERED
    | 93l -> NOTIFIED_UPDATE_CHAT_BAR
    | 94l -> NOTIFIED_CHATAPP_INSTALLED
    | 95l -> NOTIFIED_CHATAPP_UPDATED
    | 96l -> NOTIFIED_CHATAPP_NEW_MARK
    | 97l -> NOTIFIED_CHATAPP_DELETED
    | 98l -> NOTIFIED_CHATAPP_SYNC
    | 99l -> NOTIFIED_UPDATE_MESSAGE
    | _ -> raise Thrift_error
end
module PayloadType = 
struct
  type t = 
    | PAYLOAD_BUY
    | PAYLOAD_CS
    | PAYLOAD_BONUS
    | PAYLOAD_EVENT
  let to_i = function
    | PAYLOAD_BUY -> 101l
    | PAYLOAD_CS -> 111l
    | PAYLOAD_BONUS -> 121l
    | PAYLOAD_EVENT -> 131l
  let of_i = function
    | 101l -> PAYLOAD_BUY
    | 111l -> PAYLOAD_CS
    | 121l -> PAYLOAD_BONUS
    | 131l -> PAYLOAD_EVENT
    | _ -> raise Thrift_error
end
module PaymentPgType = 
struct
  type t = 
    | PAYMENT_PG_NONE
    | PAYMENT_PG_AU
    | PAYMENT_PG_AL
  let to_i = function
    | PAYMENT_PG_NONE -> 0l
    | PAYMENT_PG_AU -> 1l
    | PAYMENT_PG_AL -> 2l
  let of_i = function
    | 0l -> PAYMENT_PG_NONE
    | 1l -> PAYMENT_PG_AU
    | 2l -> PAYMENT_PG_AL
    | _ -> raise Thrift_error
end
module PaymentType = 
struct
  type t = 
    | PAYMENT_APPLE
    | PAYMENT_GOOGLE
  let to_i = function
    | PAYMENT_APPLE -> 1l
    | PAYMENT_GOOGLE -> 2l
  let of_i = function
    | 1l -> PAYMENT_APPLE
    | 2l -> PAYMENT_GOOGLE
    | _ -> raise Thrift_error
end
module ProductBannerLinkType = 
struct
  type t = 
    | BANNER_LINK_NONE
    | BANNER_LINK_ITEM
    | BANNER_LINK_URL
    | BANNER_LINK_CATEGORY
  let to_i = function
    | BANNER_LINK_NONE -> 0l
    | BANNER_LINK_ITEM -> 1l
    | BANNER_LINK_URL -> 2l
    | BANNER_LINK_CATEGORY -> 3l
  let of_i = function
    | 0l -> BANNER_LINK_NONE
    | 1l -> BANNER_LINK_ITEM
    | 2l -> BANNER_LINK_URL
    | 3l -> BANNER_LINK_CATEGORY
    | _ -> raise Thrift_error
end
module ProductEventType = 
struct
  type t = 
    | NO_EVENT
    | CARRIER_ANY
    | BUDDY_ANY
    | INSTALL_IOS
    | INSTALL_ANDROID
    | MISSION_ANY
    | MUSTBUY_ANY
  let to_i = function
    | NO_EVENT -> 0l
    | CARRIER_ANY -> 65537l
    | BUDDY_ANY -> 131073l
    | INSTALL_IOS -> 196609l
    | INSTALL_ANDROID -> 196610l
    | MISSION_ANY -> 262145l
    | MUSTBUY_ANY -> 327681l
  let of_i = function
    | 0l -> NO_EVENT
    | 65537l -> CARRIER_ANY
    | 131073l -> BUDDY_ANY
    | 196609l -> INSTALL_IOS
    | 196610l -> INSTALL_ANDROID
    | 262145l -> MISSION_ANY
    | 327681l -> MUSTBUY_ANY
    | _ -> raise Thrift_error
end
module StickerResourceType = 
struct
  type t = 
    | STATIC
    | ANIMATION
    | SOUND
    | ANIMATION_SOUND
    | POPUP
    | POPUP_SOUND
  let to_i = function
    | STATIC -> 1l
    | ANIMATION -> 2l
    | SOUND -> 3l
    | ANIMATION_SOUND -> 4l
    | POPUP -> 5l
    | POPUP_SOUND -> 6l
  let of_i = function
    | 1l -> STATIC
    | 2l -> ANIMATION
    | 3l -> SOUND
    | 4l -> ANIMATION_SOUND
    | 5l -> POPUP
    | 6l -> POPUP_SOUND
    | _ -> raise Thrift_error
end
module PlaceSearchProvider = 
struct
  type t = 
    | GOOGLE
    | BAIDU
  let to_i = function
    | GOOGLE -> 0l
    | BAIDU -> 1l
  let of_i = function
    | 0l -> GOOGLE
    | 1l -> BAIDU
    | _ -> raise Thrift_error
end
module PointErrorCode = 
struct
  type t = 
    | REQUEST_DUPLICATION
    | INVALID_PARAMETER
    | NOT_ENOUGH_BALANCE
    | AUTHENTICATION_FAIL
    | API_ACCESS_FORBIDDEN
    | MEMBER_ACCOUNT_NOT_FOUND
    | SERVICE_ACCOUNT_NOT_FOUND
    | TRANSACTION_NOT_FOUND
    | ALREADY_REVERSED_TRANSACTION
    | MESSAGE_NOT_READABLE
    | HTTP_REQUEST_METHOD_NOT_SUPPORTED
    | HTTP_MEDIA_TYPE_NOT_SUPPORTED
    | NOT_ALLOWED_TO_DEPOSIT
    | NOT_ALLOWED_TO_PAY
    | TRANSACTION_ACCESS_FORBIDDEN
    | INVALID_SERVICE_CONFIGURATION
    | DCS_COMMUNICATION_FAIL
    | UPDATE_BALANCE_FAIL
    | SYSTEM_ERROR
    | SYSTEM_MAINTENANCE
  let to_i = function
    | REQUEST_DUPLICATION -> 3001l
    | INVALID_PARAMETER -> 3002l
    | NOT_ENOUGH_BALANCE -> 3003l
    | AUTHENTICATION_FAIL -> 3004l
    | API_ACCESS_FORBIDDEN -> 3005l
    | MEMBER_ACCOUNT_NOT_FOUND -> 3006l
    | SERVICE_ACCOUNT_NOT_FOUND -> 3007l
    | TRANSACTION_NOT_FOUND -> 3008l
    | ALREADY_REVERSED_TRANSACTION -> 3009l
    | MESSAGE_NOT_READABLE -> 3010l
    | HTTP_REQUEST_METHOD_NOT_SUPPORTED -> 3011l
    | HTTP_MEDIA_TYPE_NOT_SUPPORTED -> 3012l
    | NOT_ALLOWED_TO_DEPOSIT -> 3013l
    | NOT_ALLOWED_TO_PAY -> 3014l
    | TRANSACTION_ACCESS_FORBIDDEN -> 3015l
    | INVALID_SERVICE_CONFIGURATION -> 4001l
    | DCS_COMMUNICATION_FAIL -> 5004l
    | UPDATE_BALANCE_FAIL -> 5007l
    | SYSTEM_ERROR -> 5999l
    | SYSTEM_MAINTENANCE -> 5888l
  let of_i = function
    | 3001l -> REQUEST_DUPLICATION
    | 3002l -> INVALID_PARAMETER
    | 3003l -> NOT_ENOUGH_BALANCE
    | 3004l -> AUTHENTICATION_FAIL
    | 3005l -> API_ACCESS_FORBIDDEN
    | 3006l -> MEMBER_ACCOUNT_NOT_FOUND
    | 3007l -> SERVICE_ACCOUNT_NOT_FOUND
    | 3008l -> TRANSACTION_NOT_FOUND
    | 3009l -> ALREADY_REVERSED_TRANSACTION
    | 3010l -> MESSAGE_NOT_READABLE
    | 3011l -> HTTP_REQUEST_METHOD_NOT_SUPPORTED
    | 3012l -> HTTP_MEDIA_TYPE_NOT_SUPPORTED
    | 3013l -> NOT_ALLOWED_TO_DEPOSIT
    | 3014l -> NOT_ALLOWED_TO_PAY
    | 3015l -> TRANSACTION_ACCESS_FORBIDDEN
    | 4001l -> INVALID_SERVICE_CONFIGURATION
    | 5004l -> DCS_COMMUNICATION_FAIL
    | 5007l -> UPDATE_BALANCE_FAIL
    | 5999l -> SYSTEM_ERROR
    | 5888l -> SYSTEM_MAINTENANCE
    | _ -> raise Thrift_error
end
module ProfileAttribute = 
struct
  type t = 
    | ALL
    | EMAIL
    | DISPLAY_NAME
    | PHONETIC_NAME
    | PICTURE
    | STATUS_MESSAGE
    | ALLOW_SEARCH_BY_USERID
    | ALLOW_SEARCH_BY_EMAIL
    | BUDDY_STATUS
    | MUSIC_PROFILE
  let to_i = function
    | ALL -> 511l
    | EMAIL -> 1l
    | DISPLAY_NAME -> 2l
    | PHONETIC_NAME -> 4l
    | PICTURE -> 8l
    | STATUS_MESSAGE -> 16l
    | ALLOW_SEARCH_BY_USERID -> 32l
    | ALLOW_SEARCH_BY_EMAIL -> 64l
    | BUDDY_STATUS -> 128l
    | MUSIC_PROFILE -> 256l
  let of_i = function
    | 511l -> ALL
    | 1l -> EMAIL
    | 2l -> DISPLAY_NAME
    | 4l -> PHONETIC_NAME
    | 8l -> PICTURE
    | 16l -> STATUS_MESSAGE
    | 32l -> ALLOW_SEARCH_BY_USERID
    | 64l -> ALLOW_SEARCH_BY_EMAIL
    | 128l -> BUDDY_STATUS
    | 256l -> MUSIC_PROFILE
    | _ -> raise Thrift_error
end
module PublicType = 
struct
  type t = 
    | HIDDEN
    | PUBLIC
  let to_i = function
    | HIDDEN -> 0l
    | PUBLIC -> 1000l
  let of_i = function
    | 0l -> HIDDEN
    | 1000l -> PUBLIC
    | _ -> raise Thrift_error
end
module RedirectType = 
struct
  type t = 
    | NONE
    | EXPIRE_SECOND
  let to_i = function
    | NONE -> 0l
    | EXPIRE_SECOND -> 1l
  let of_i = function
    | 0l -> NONE
    | 1l -> EXPIRE_SECOND
    | _ -> raise Thrift_error
end
module RegistrationType = 
struct
  type t = 
    | PHONE
    | EMAIL_WAP
    | FACEBOOK
    | SINA
    | RENREN
    | FEIXIN
  let to_i = function
    | PHONE -> 0l
    | EMAIL_WAP -> 1l
    | FACEBOOK -> 2305l
    | SINA -> 2306l
    | RENREN -> 2307l
    | FEIXIN -> 2308l
  let of_i = function
    | 0l -> PHONE
    | 1l -> EMAIL_WAP
    | 2305l -> FACEBOOK
    | 2306l -> SINA
    | 2307l -> RENREN
    | 2308l -> FEIXIN
    | _ -> raise Thrift_error
end
module ChatRoomAnnouncementType = 
struct
  type t = 
    | MESSAGE
    | NOTE
  let to_i = function
    | MESSAGE -> 0l
    | NOTE -> 1l
  let of_i = function
    | 0l -> MESSAGE
    | 1l -> NOTE
    | _ -> raise Thrift_error
end
module SettingsAttribute = 
struct
  type t = 
    | ALL
    | NOTIFICATION_ENABLE
    | NOTIFICATION_MUTE_EXPIRATION
    | NOTIFICATION_NEW_MESSAGE
    | NOTIFICATION_GROUP_INVITATION
    | NOTIFICATION_SHOW_MESSAGE
    | NOTIFICATION_INCOMING_CALL
    | NOTIFICATION_SOUND_MESSAGE
    | NOTIFICATION_SOUND_GROUP
    | NOTIFICATION_DISABLED_WITH_SUB
    | NOTIFICATION_PAYMENT
    | PRIVACY_SYNC_CONTACTS
    | PRIVACY_SEARCH_BY_PHONE_NUMBER
    | PRIVACY_SEARCH_BY_USERID
    | PRIVACY_SEARCH_BY_EMAIL
    | PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN
    | PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME
    | PRIVACY_ALLOW_FRIEND_REQUEST
    | PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND
    | PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL
    | PRIVACY_AGREE_USE_PAIDCALL
    | CONTACT_MY_TICKET
    | IDENTITY_PROVIDER
    | IDENTITY_IDENTIFIER
    | SNS_ACCOUNT
    | PHONE_REGISTRATION
    | PREFERENCE_LOCALE
    | CUSTOM_MODE
    | EMAIL_CONFIRMATION_STATUS
    | ACCOUNT_MIGRATION_PINCODE
    | ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE
    | SECURITY_CENTER_SETTINGS
  let to_i = function
    | ALL -> 2147483647l
    | NOTIFICATION_ENABLE -> 1l
    | NOTIFICATION_MUTE_EXPIRATION -> 2l
    | NOTIFICATION_NEW_MESSAGE -> 4l
    | NOTIFICATION_GROUP_INVITATION -> 8l
    | NOTIFICATION_SHOW_MESSAGE -> 16l
    | NOTIFICATION_INCOMING_CALL -> 32l
    | NOTIFICATION_SOUND_MESSAGE -> 256l
    | NOTIFICATION_SOUND_GROUP -> 512l
    | NOTIFICATION_DISABLED_WITH_SUB -> 65536l
    | NOTIFICATION_PAYMENT -> 131072l
    | PRIVACY_SYNC_CONTACTS -> 64l
    | PRIVACY_SEARCH_BY_PHONE_NUMBER -> 128l
    | PRIVACY_SEARCH_BY_USERID -> 8192l
    | PRIVACY_SEARCH_BY_EMAIL -> 16384l
    | PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN -> 2097152l
    | PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME -> 8388608l
    | PRIVACY_ALLOW_FRIEND_REQUEST -> 1073741824l
    | PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND -> 33554432l
    | PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL -> 67108864l
    | PRIVACY_AGREE_USE_PAIDCALL -> 134217728l
    | CONTACT_MY_TICKET -> 1024l
    | IDENTITY_PROVIDER -> 2048l
    | IDENTITY_IDENTIFIER -> 4096l
    | SNS_ACCOUNT -> 524288l
    | PHONE_REGISTRATION -> 1048576l
    | PREFERENCE_LOCALE -> 32768l
    | CUSTOM_MODE -> 4194304l
    | EMAIL_CONFIRMATION_STATUS -> 16777216l
    | ACCOUNT_MIGRATION_PINCODE -> 268435456l
    | ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE -> 536870912l
    | SECURITY_CENTER_SETTINGS -> 262144l
  let of_i = function
    | 2147483647l -> ALL
    | 1l -> NOTIFICATION_ENABLE
    | 2l -> NOTIFICATION_MUTE_EXPIRATION
    | 4l -> NOTIFICATION_NEW_MESSAGE
    | 8l -> NOTIFICATION_GROUP_INVITATION
    | 16l -> NOTIFICATION_SHOW_MESSAGE
    | 32l -> NOTIFICATION_INCOMING_CALL
    | 256l -> NOTIFICATION_SOUND_MESSAGE
    | 512l -> NOTIFICATION_SOUND_GROUP
    | 65536l -> NOTIFICATION_DISABLED_WITH_SUB
    | 131072l -> NOTIFICATION_PAYMENT
    | 64l -> PRIVACY_SYNC_CONTACTS
    | 128l -> PRIVACY_SEARCH_BY_PHONE_NUMBER
    | 8192l -> PRIVACY_SEARCH_BY_USERID
    | 16384l -> PRIVACY_SEARCH_BY_EMAIL
    | 2097152l -> PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN
    | 8388608l -> PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME
    | 1073741824l -> PRIVACY_ALLOW_FRIEND_REQUEST
    | 33554432l -> PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND
    | 67108864l -> PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL
    | 134217728l -> PRIVACY_AGREE_USE_PAIDCALL
    | 1024l -> CONTACT_MY_TICKET
    | 2048l -> IDENTITY_PROVIDER
    | 4096l -> IDENTITY_IDENTIFIER
    | 524288l -> SNS_ACCOUNT
    | 1048576l -> PHONE_REGISTRATION
    | 32768l -> PREFERENCE_LOCALE
    | 4194304l -> CUSTOM_MODE
    | 16777216l -> EMAIL_CONFIRMATION_STATUS
    | 268435456l -> ACCOUNT_MIGRATION_PINCODE
    | 536870912l -> ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE
    | 262144l -> SECURITY_CENTER_SETTINGS
    | _ -> raise Thrift_error
end
module SettingsAttributeEx = 
struct
  type t = 
    | NOTIFICATION_ENABLE
    | NOTIFICATION_MUTE_EXPIRATION
    | NOTIFICATION_NEW_MESSAGE
    | NOTIFICATION_GROUP_INVITATION
    | NOTIFICATION_SHOW_MESSAGE
    | NOTIFICATION_INCOMING_CALL
    | NOTIFICATION_SOUND_MESSAGE
    | NOTIFICATION_SOUND_GROUP
    | NOTIFICATION_DISABLED_WITH_SUB
    | NOTIFICATION_PAYMENT
    | NOTIFICATION_MENTION
    | NOTIFICATION_THUMBNAIL
    | PRIVACY_SYNC_CONTACTS
    | PRIVACY_SEARCH_BY_PHONE_NUMBER
    | PRIVACY_SEARCH_BY_USERID
    | PRIVACY_SEARCH_BY_EMAIL
    | PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN
    | PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME
    | PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME
    | PRIVACY_ALLOW_FRIEND_REQUEST
    | PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND
    | PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL
    | PRIVACY_AGREE_USE_PAIDCALL
    | CONTACT_MY_TICKET
    | IDENTITY_PROVIDER
    | IDENTITY_IDENTIFIER
    | SNS_ACCOUNT
    | PHONE_REGISTRATION
    | PREFERENCE_LOCALE
    | CUSTOM_MODE
    | EMAIL_CONFIRMATION_STATUS
    | ACCOUNT_MIGRATION_PINCODE
    | ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE
    | SECURITY_CENTER_SETTINGS
    | E2EE_ENABLE
    | ENABLE_SOUND_TO_TEXT
    | HITOKOTO_BACKUP_REQUESTED
    | CONTACT_ALLOW_FOLLOWING
    | PRIVACY_ALLOW_NEARBY
    | AGREEMENT_NEARBY
    | AGREEMENT_SQUARE
    | ALLOW_UNREGISTRATION_SECONDARY_DEVICE
    | AGREEMENT_BOT_USE
    | AGREEMENT_SHAKE_FUNCTION
    | AGREEMENT_MOBILE_CONTACT_NAME
    | AGREEMENT_SOUND_TO_TEXT
  let to_i = function
    | NOTIFICATION_ENABLE -> 0l
    | NOTIFICATION_MUTE_EXPIRATION -> 1l
    | NOTIFICATION_NEW_MESSAGE -> 2l
    | NOTIFICATION_GROUP_INVITATION -> 3l
    | NOTIFICATION_SHOW_MESSAGE -> 4l
    | NOTIFICATION_INCOMING_CALL -> 5l
    | NOTIFICATION_SOUND_MESSAGE -> 8l
    | NOTIFICATION_SOUND_GROUP -> 9l
    | NOTIFICATION_DISABLED_WITH_SUB -> 16l
    | NOTIFICATION_PAYMENT -> 17l
    | NOTIFICATION_MENTION -> 40l
    | NOTIFICATION_THUMBNAIL -> 45l
    | PRIVACY_SYNC_CONTACTS -> 6l
    | PRIVACY_SEARCH_BY_PHONE_NUMBER -> 7l
    | PRIVACY_SEARCH_BY_USERID -> 13l
    | PRIVACY_SEARCH_BY_EMAIL -> 14l
    | PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN -> 21l
    | PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME -> 23l
    | PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME -> 35l
    | PRIVACY_ALLOW_FRIEND_REQUEST -> 30l
    | PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND -> 25l
    | PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL -> 26l
    | PRIVACY_AGREE_USE_PAIDCALL -> 27l
    | CONTACT_MY_TICKET -> 10l
    | IDENTITY_PROVIDER -> 11l
    | IDENTITY_IDENTIFIER -> 12l
    | SNS_ACCOUNT -> 19l
    | PHONE_REGISTRATION -> 20l
    | PREFERENCE_LOCALE -> 15l
    | CUSTOM_MODE -> 22l
    | EMAIL_CONFIRMATION_STATUS -> 24l
    | ACCOUNT_MIGRATION_PINCODE -> 28l
    | ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE -> 29l
    | SECURITY_CENTER_SETTINGS -> 18l
    | E2EE_ENABLE -> 33l
    | ENABLE_SOUND_TO_TEXT -> 47l
    | HITOKOTO_BACKUP_REQUESTED -> 34l
    | CONTACT_ALLOW_FOLLOWING -> 36l
    | PRIVACY_ALLOW_NEARBY -> 37l
    | AGREEMENT_NEARBY -> 38l
    | AGREEMENT_SQUARE -> 39l
    | ALLOW_UNREGISTRATION_SECONDARY_DEVICE -> 41l
    | AGREEMENT_BOT_USE -> 42l
    | AGREEMENT_SHAKE_FUNCTION -> 43l
    | AGREEMENT_MOBILE_CONTACT_NAME -> 44l
    | AGREEMENT_SOUND_TO_TEXT -> 46l
  let of_i = function
    | 0l -> NOTIFICATION_ENABLE
    | 1l -> NOTIFICATION_MUTE_EXPIRATION
    | 2l -> NOTIFICATION_NEW_MESSAGE
    | 3l -> NOTIFICATION_GROUP_INVITATION
    | 4l -> NOTIFICATION_SHOW_MESSAGE
    | 5l -> NOTIFICATION_INCOMING_CALL
    | 8l -> NOTIFICATION_SOUND_MESSAGE
    | 9l -> NOTIFICATION_SOUND_GROUP
    | 16l -> NOTIFICATION_DISABLED_WITH_SUB
    | 17l -> NOTIFICATION_PAYMENT
    | 40l -> NOTIFICATION_MENTION
    | 45l -> NOTIFICATION_THUMBNAIL
    | 6l -> PRIVACY_SYNC_CONTACTS
    | 7l -> PRIVACY_SEARCH_BY_PHONE_NUMBER
    | 13l -> PRIVACY_SEARCH_BY_USERID
    | 14l -> PRIVACY_SEARCH_BY_EMAIL
    | 21l -> PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN
    | 23l -> PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME
    | 35l -> PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME
    | 30l -> PRIVACY_ALLOW_FRIEND_REQUEST
    | 25l -> PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND
    | 26l -> PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL
    | 27l -> PRIVACY_AGREE_USE_PAIDCALL
    | 10l -> CONTACT_MY_TICKET
    | 11l -> IDENTITY_PROVIDER
    | 12l -> IDENTITY_IDENTIFIER
    | 19l -> SNS_ACCOUNT
    | 20l -> PHONE_REGISTRATION
    | 15l -> PREFERENCE_LOCALE
    | 22l -> CUSTOM_MODE
    | 24l -> EMAIL_CONFIRMATION_STATUS
    | 28l -> ACCOUNT_MIGRATION_PINCODE
    | 29l -> ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE
    | 18l -> SECURITY_CENTER_SETTINGS
    | 33l -> E2EE_ENABLE
    | 47l -> ENABLE_SOUND_TO_TEXT
    | 34l -> HITOKOTO_BACKUP_REQUESTED
    | 36l -> CONTACT_ALLOW_FOLLOWING
    | 37l -> PRIVACY_ALLOW_NEARBY
    | 38l -> AGREEMENT_NEARBY
    | 39l -> AGREEMENT_SQUARE
    | 41l -> ALLOW_UNREGISTRATION_SECONDARY_DEVICE
    | 42l -> AGREEMENT_BOT_USE
    | 43l -> AGREEMENT_SHAKE_FUNCTION
    | 44l -> AGREEMENT_MOBILE_CONTACT_NAME
    | 46l -> AGREEMENT_SOUND_TO_TEXT
    | _ -> raise Thrift_error
end
module SnsIdType = 
struct
  type t = 
    | FACEBOOK
    | SINA
    | RENREN
    | FEIXIN
    | BBM
  let to_i = function
    | FACEBOOK -> 1l
    | SINA -> 2l
    | RENREN -> 3l
    | FEIXIN -> 4l
    | BBM -> 5l
  let of_i = function
    | 1l -> FACEBOOK
    | 2l -> SINA
    | 3l -> RENREN
    | 4l -> FEIXIN
    | 5l -> BBM
    | _ -> raise Thrift_error
end
module SpammerReason = 
struct
  type t = 
    | OTHER
    | ADVERTISING
    | GENDER_HARASSMENT
    | HARASSMENT
  let to_i = function
    | OTHER -> 0l
    | ADVERTISING -> 1l
    | GENDER_HARASSMENT -> 2l
    | HARASSMENT -> 3l
  let of_i = function
    | 0l -> OTHER
    | 1l -> ADVERTISING
    | 2l -> GENDER_HARASSMENT
    | 3l -> HARASSMENT
    | _ -> raise Thrift_error
end
module SyncActionType = 
struct
  type t = 
    | SYNC
    | REPORT
  let to_i = function
    | SYNC -> 0l
    | REPORT -> 1l
  let of_i = function
    | 0l -> SYNC
    | 1l -> REPORT
    | _ -> raise Thrift_error
end
module SpotCategory = 
struct
  type t = 
    | UNKNOWN
    | GOURMET
    | BEAUTY
    | TRAVEL
    | SHOPPING
    | ENTERTAINMENT
    | SPORTS
    | TRANSPORT
    | LIFE
    | HOSPITAL
    | FINANCE
    | EDUCATION
    | OTHER
    | ALL
  let to_i = function
    | UNKNOWN -> 0l
    | GOURMET -> 1l
    | BEAUTY -> 2l
    | TRAVEL -> 3l
    | SHOPPING -> 4l
    | ENTERTAINMENT -> 5l
    | SPORTS -> 6l
    | TRANSPORT -> 7l
    | LIFE -> 8l
    | HOSPITAL -> 9l
    | FINANCE -> 10l
    | EDUCATION -> 11l
    | OTHER -> 12l
    | ALL -> 10000l
  let of_i = function
    | 0l -> UNKNOWN
    | 1l -> GOURMET
    | 2l -> BEAUTY
    | 3l -> TRAVEL
    | 4l -> SHOPPING
    | 5l -> ENTERTAINMENT
    | 6l -> SPORTS
    | 7l -> TRANSPORT
    | 8l -> LIFE
    | 9l -> HOSPITAL
    | 10l -> FINANCE
    | 11l -> EDUCATION
    | 12l -> OTHER
    | 10000l -> ALL
    | _ -> raise Thrift_error
end
module SyncCategory = 
struct
  type t = 
    | PROFILE
    | SETTINGS
    | OPS
    | CONTACT
    | RECOMMEND
    | BLOCK
    | GROUP
    | ROOM
    | NOTIFICATION
    | ADDRESS_BOOK
  let to_i = function
    | PROFILE -> 0l
    | SETTINGS -> 1l
    | OPS -> 2l
    | CONTACT -> 3l
    | RECOMMEND -> 4l
    | BLOCK -> 5l
    | GROUP -> 6l
    | ROOM -> 7l
    | NOTIFICATION -> 8l
    | ADDRESS_BOOK -> 9l
  let of_i = function
    | 0l -> PROFILE
    | 1l -> SETTINGS
    | 2l -> OPS
    | 3l -> CONTACT
    | 4l -> RECOMMEND
    | 5l -> BLOCK
    | 6l -> GROUP
    | 7l -> ROOM
    | 8l -> NOTIFICATION
    | 9l -> ADDRESS_BOOK
    | _ -> raise Thrift_error
end
module TMessageBoxStatus = 
struct
  type t = 
    | ACTIVATED
    | UNREAD
  let to_i = function
    | ACTIVATED -> 1l
    | UNREAD -> 2l
  let of_i = function
    | 1l -> ACTIVATED
    | 2l -> UNREAD
    | _ -> raise Thrift_error
end
module UniversalNotificationServiceErrorCode = 
struct
  type t = 
    | INTERNAL_ERROR
    | INVALID_KEY
    | ILLEGAL_ARGUMENT
    | TOO_MANY_REQUEST
    | AUTHENTICATION_FAILED
    | NO_WRITE_PERMISSION
  let to_i = function
    | INTERNAL_ERROR -> 0l
    | INVALID_KEY -> 1l
    | ILLEGAL_ARGUMENT -> 2l
    | TOO_MANY_REQUEST -> 3l
    | AUTHENTICATION_FAILED -> 4l
    | NO_WRITE_PERMISSION -> 5l
  let of_i = function
    | 0l -> INTERNAL_ERROR
    | 1l -> INVALID_KEY
    | 2l -> ILLEGAL_ARGUMENT
    | 3l -> TOO_MANY_REQUEST
    | 4l -> AUTHENTICATION_FAILED
    | 5l -> NO_WRITE_PERMISSION
    | _ -> raise Thrift_error
end
module UnregistrationReason = 
struct
  type t = 
    | UNREGISTRATION_REASON_UNREGISTER_USER
    | UNREGISTRATION_REASON_UNBIND_DEVICE
  let to_i = function
    | UNREGISTRATION_REASON_UNREGISTER_USER -> 1l
    | UNREGISTRATION_REASON_UNBIND_DEVICE -> 2l
  let of_i = function
    | 1l -> UNREGISTRATION_REASON_UNREGISTER_USER
    | 2l -> UNREGISTRATION_REASON_UNBIND_DEVICE
    | _ -> raise Thrift_error
end
module UserAgeType = 
struct
  type t = 
    | OVER
    | UNDER
    | UNDEFINED
  let to_i = function
    | OVER -> 1l
    | UNDER -> 2l
    | UNDEFINED -> 3l
  let of_i = function
    | 1l -> OVER
    | 2l -> UNDER
    | 3l -> UNDEFINED
    | _ -> raise Thrift_error
end
module VerificationMethod = 
struct
  type t = 
    | NO_AVAILABLE
    | PIN_VIA_SMS
    | CALLERID_INDIGO
    | PIN_VIA_TTS
    | SKIP
  let to_i = function
    | NO_AVAILABLE -> 0l
    | PIN_VIA_SMS -> 1l
    | CALLERID_INDIGO -> 2l
    | PIN_VIA_TTS -> 4l
    | SKIP -> 10l
  let of_i = function
    | 0l -> NO_AVAILABLE
    | 1l -> PIN_VIA_SMS
    | 2l -> CALLERID_INDIGO
    | 4l -> PIN_VIA_TTS
    | 10l -> SKIP
    | _ -> raise Thrift_error
end
module VerificationResult = 
struct
  type t = 
    | FAILED
    | OK_NOT_REGISTERED_YET
    | OK_REGISTERED_WITH_SAME_DEVICE
    | OK_REGISTERED_WITH_ANOTHER_DEVICE
  let to_i = function
    | FAILED -> 0l
    | OK_NOT_REGISTERED_YET -> 1l
    | OK_REGISTERED_WITH_SAME_DEVICE -> 2l
    | OK_REGISTERED_WITH_ANOTHER_DEVICE -> 3l
  let of_i = function
    | 0l -> FAILED
    | 1l -> OK_NOT_REGISTERED_YET
    | 2l -> OK_REGISTERED_WITH_SAME_DEVICE
    | 3l -> OK_REGISTERED_WITH_ANOTHER_DEVICE
    | _ -> raise Thrift_error
end
module WapInvitationType = 
struct
  type t = 
    | REGISTRATION
    | CHAT
  let to_i = function
    | REGISTRATION -> 1l
    | CHAT -> 2l
  let of_i = function
    | 1l -> REGISTRATION
    | 2l -> CHAT
    | _ -> raise Thrift_error
end
module MediaType = 
struct
  type t = 
    | AUDIO
    | VIDEO
  let to_i = function
    | AUDIO -> 1l
    | VIDEO -> 2l
  let of_i = function
    | 1l -> AUDIO
    | 2l -> VIDEO
    | _ -> raise Thrift_error
end
module SQErrorCode = 
struct
  type t = 
    | UNKNOWN
    | ILLEGAL_ARGUMENT
    | AUTHENTICATION_FAILURE
    | FORBIDDEN
    | NOT_FOUND
    | REVISION_MISMATCH
    | PRECONDITION_FAILED
    | INTERNAL_ERROR
    | NOT_IMPLEMENTED
    | TRY_AGAIN_LATER
  let to_i = function
    | UNKNOWN -> 0l
    | ILLEGAL_ARGUMENT -> 400l
    | AUTHENTICATION_FAILURE -> 401l
    | FORBIDDEN -> 403l
    | NOT_FOUND -> 404l
    | REVISION_MISMATCH -> 409l
    | PRECONDITION_FAILED -> 410l
    | INTERNAL_ERROR -> 500l
    | NOT_IMPLEMENTED -> 501l
    | TRY_AGAIN_LATER -> 505l
  let of_i = function
    | 0l -> UNKNOWN
    | 400l -> ILLEGAL_ARGUMENT
    | 401l -> AUTHENTICATION_FAILURE
    | 403l -> FORBIDDEN
    | 404l -> NOT_FOUND
    | 409l -> REVISION_MISMATCH
    | 410l -> PRECONDITION_FAILED
    | 500l -> INTERNAL_ERROR
    | 501l -> NOT_IMPLEMENTED
    | 505l -> TRY_AGAIN_LATER
    | _ -> raise Thrift_error
end
module SquareEventType = 
struct
  type t = 
    | RECEIVE_MESSAGE
    | SEND_MESSAGE
    | NOTIFIED_JOIN_SQUARE_CHAT
    | NOTIFIED_INVITE_INTO_SQUARE_CHAT
    | NOTIFIED_LEAVE_SQUARE_CHAT
    | NOTIFIED_DESTROY_MESSAGE
    | NOTIFIED_MARK_AS_READ
    | NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE
    | NOTIFIED_KICKOUT_FROM_SQUARE
    | NOTIFIED_SHUTDOWN_SQUARE
    | NOTIFIED_DELETE_SQUARE_CHAT
    | NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME
    | NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE
    | NOTIFIED_UPDATE_SQUARE_CHAT_ANNOUNCEMENT
    | NOTIFIED_ADD_BOT
    | NOTIFIED_REMOVE_BOT
    | NOTIFIED_UPDATE_SQUARE
    | NOTIFIED_UPDATE_SQUARE_STATUS
    | NOTIFIED_UPDATE_SQUARE_AUTHORITY
    | NOTIFIED_UPDATE_SQUARE_MEMBER
    | NOTIFIED_UPDATE_SQUARE_CHAT
    | NOTIFIED_UPDATE_SQUARE_CHAT_STATUS
    | NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER
    | NOTIFIED_CREATE_SQUARE_MEMBER
    | NOTIFIED_CREATE_SQUARE_CHAT_MEMBER
    | NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION
    | NOTIFIED_UPDATE_SQUARE_FEATURE_SET
    | NOTIFIED_UPDATE_SQUARE_NOTE_STATUS
    | NOTIFICATION_JOIN_REQUEST
    | NOTIFICATION_JOINED
    | NOTIFICATION_PROMOTED_COADMIN
    | NOTIFICATION_PROMOTED_ADMIN
    | NOTIFICATION_DEMOTED_MEMBER
    | NOTIFICATION_KICKED_OUT
    | NOTIFICATION_SQUARE_DELETE
    | NOTIFICATION_SQUARE_CHAT_DELETE
    | NOTIFICATION_MESSAGE
  let to_i = function
    | RECEIVE_MESSAGE -> 0l
    | SEND_MESSAGE -> 1l
    | NOTIFIED_JOIN_SQUARE_CHAT -> 2l
    | NOTIFIED_INVITE_INTO_SQUARE_CHAT -> 3l
    | NOTIFIED_LEAVE_SQUARE_CHAT -> 4l
    | NOTIFIED_DESTROY_MESSAGE -> 5l
    | NOTIFIED_MARK_AS_READ -> 6l
    | NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE -> 7l
    | NOTIFIED_KICKOUT_FROM_SQUARE -> 19l
    | NOTIFIED_SHUTDOWN_SQUARE -> 18l
    | NOTIFIED_DELETE_SQUARE_CHAT -> 20l
    | NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME -> 30l
    | NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE -> 31l
    | NOTIFIED_UPDATE_SQUARE_CHAT_ANNOUNCEMENT -> 37l
    | NOTIFIED_ADD_BOT -> 33l
    | NOTIFIED_REMOVE_BOT -> 34l
    | NOTIFIED_UPDATE_SQUARE -> 8l
    | NOTIFIED_UPDATE_SQUARE_STATUS -> 9l
    | NOTIFIED_UPDATE_SQUARE_AUTHORITY -> 10l
    | NOTIFIED_UPDATE_SQUARE_MEMBER -> 11l
    | NOTIFIED_UPDATE_SQUARE_CHAT -> 12l
    | NOTIFIED_UPDATE_SQUARE_CHAT_STATUS -> 13l
    | NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER -> 14l
    | NOTIFIED_CREATE_SQUARE_MEMBER -> 15l
    | NOTIFIED_CREATE_SQUARE_CHAT_MEMBER -> 16l
    | NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION -> 17l
    | NOTIFIED_UPDATE_SQUARE_FEATURE_SET -> 32l
    | NOTIFIED_UPDATE_SQUARE_NOTE_STATUS -> 36l
    | NOTIFICATION_JOIN_REQUEST -> 21l
    | NOTIFICATION_JOINED -> 22l
    | NOTIFICATION_PROMOTED_COADMIN -> 23l
    | NOTIFICATION_PROMOTED_ADMIN -> 24l
    | NOTIFICATION_DEMOTED_MEMBER -> 25l
    | NOTIFICATION_KICKED_OUT -> 26l
    | NOTIFICATION_SQUARE_DELETE -> 27l
    | NOTIFICATION_SQUARE_CHAT_DELETE -> 28l
    | NOTIFICATION_MESSAGE -> 29l
  let of_i = function
    | 0l -> RECEIVE_MESSAGE
    | 1l -> SEND_MESSAGE
    | 2l -> NOTIFIED_JOIN_SQUARE_CHAT
    | 3l -> NOTIFIED_INVITE_INTO_SQUARE_CHAT
    | 4l -> NOTIFIED_LEAVE_SQUARE_CHAT
    | 5l -> NOTIFIED_DESTROY_MESSAGE
    | 6l -> NOTIFIED_MARK_AS_READ
    | 7l -> NOTIFIED_UPDATE_SQUARE_MEMBER_PROFILE
    | 19l -> NOTIFIED_KICKOUT_FROM_SQUARE
    | 18l -> NOTIFIED_SHUTDOWN_SQUARE
    | 20l -> NOTIFIED_DELETE_SQUARE_CHAT
    | 30l -> NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_NAME
    | 31l -> NOTIFIED_UPDATE_SQUARE_CHAT_PROFILE_IMAGE
    | 37l -> NOTIFIED_UPDATE_SQUARE_CHAT_ANNOUNCEMENT
    | 33l -> NOTIFIED_ADD_BOT
    | 34l -> NOTIFIED_REMOVE_BOT
    | 8l -> NOTIFIED_UPDATE_SQUARE
    | 9l -> NOTIFIED_UPDATE_SQUARE_STATUS
    | 10l -> NOTIFIED_UPDATE_SQUARE_AUTHORITY
    | 11l -> NOTIFIED_UPDATE_SQUARE_MEMBER
    | 12l -> NOTIFIED_UPDATE_SQUARE_CHAT
    | 13l -> NOTIFIED_UPDATE_SQUARE_CHAT_STATUS
    | 14l -> NOTIFIED_UPDATE_SQUARE_CHAT_MEMBER
    | 15l -> NOTIFIED_CREATE_SQUARE_MEMBER
    | 16l -> NOTIFIED_CREATE_SQUARE_CHAT_MEMBER
    | 17l -> NOTIFIED_UPDATE_SQUARE_MEMBER_RELATION
    | 32l -> NOTIFIED_UPDATE_SQUARE_FEATURE_SET
    | 36l -> NOTIFIED_UPDATE_SQUARE_NOTE_STATUS
    | 21l -> NOTIFICATION_JOIN_REQUEST
    | 22l -> NOTIFICATION_JOINED
    | 23l -> NOTIFICATION_PROMOTED_COADMIN
    | 24l -> NOTIFICATION_PROMOTED_ADMIN
    | 25l -> NOTIFICATION_DEMOTED_MEMBER
    | 26l -> NOTIFICATION_KICKED_OUT
    | 27l -> NOTIFICATION_SQUARE_DELETE
    | 28l -> NOTIFICATION_SQUARE_CHAT_DELETE
    | 29l -> NOTIFICATION_MESSAGE
    | _ -> raise Thrift_error
end
module SquareMemberRelationState = 
struct
  type t = 
    | NONE
    | BLOCKED
  let to_i = function
    | NONE -> 1l
    | BLOCKED -> 2l
  let of_i = function
    | 1l -> NONE
    | 2l -> BLOCKED
    | _ -> raise Thrift_error
end
module SquareFeatureControlState = 
struct
  type t = 
    | DISABLED
    | ENABLED
  let to_i = function
    | DISABLED -> 1l
    | ENABLED -> 2l
  let of_i = function
    | 1l -> DISABLED
    | 2l -> ENABLED
    | _ -> raise Thrift_error
end
module BooleanState = 
struct
  type t = 
    | NONE
    | OFF
    | ON
  let to_i = function
    | NONE -> 0l
    | OFF -> 1l
    | ON -> 2l
  let of_i = function
    | 0l -> NONE
    | 1l -> OFF
    | 2l -> ON
    | _ -> raise Thrift_error
end
module SquareType = 
struct
  type t = 
    | CLOSED
    | OPEN
  let to_i = function
    | CLOSED -> 0l
    | OPEN -> 1l
  let of_i = function
    | 0l -> CLOSED
    | 1l -> OPEN
    | _ -> raise Thrift_error
end
module SquareChatType = 
struct
  type t = 
    | OPEN
    | SECRET
    | ONE_ON_ONE
    | SQUARE_DEFAULT
  let to_i = function
    | OPEN -> 1l
    | SECRET -> 2l
    | ONE_ON_ONE -> 3l
    | SQUARE_DEFAULT -> 4l
  let of_i = function
    | 1l -> OPEN
    | 2l -> SECRET
    | 3l -> ONE_ON_ONE
    | 4l -> SQUARE_DEFAULT
    | _ -> raise Thrift_error
end
module SquareErrorCode = 
struct
  type t = 
    | UNKNOWN
    | INTERNAL_ERROR
    | NOT_IMPLEMENTED
    | TRY_AGAIN_LATER
    | MAINTENANCE
    | ILLEGAL_ARGUMENT
    | AUTHENTICATION_FAILURE
    | FORBIDDEN
    | NOT_FOUND
    | REVISION_MISMATCH
    | PRECONDITION_FAILED
  let to_i = function
    | UNKNOWN -> 0l
    | INTERNAL_ERROR -> 500l
    | NOT_IMPLEMENTED -> 501l
    | TRY_AGAIN_LATER -> 503l
    | MAINTENANCE -> 505l
    | ILLEGAL_ARGUMENT -> 400l
    | AUTHENTICATION_FAILURE -> 401l
    | FORBIDDEN -> 403l
    | NOT_FOUND -> 404l
    | REVISION_MISMATCH -> 409l
    | PRECONDITION_FAILED -> 410l
  let of_i = function
    | 0l -> UNKNOWN
    | 500l -> INTERNAL_ERROR
    | 501l -> NOT_IMPLEMENTED
    | 503l -> TRY_AGAIN_LATER
    | 505l -> MAINTENANCE
    | 400l -> ILLEGAL_ARGUMENT
    | 401l -> AUTHENTICATION_FAILURE
    | 403l -> FORBIDDEN
    | 404l -> NOT_FOUND
    | 409l -> REVISION_MISMATCH
    | 410l -> PRECONDITION_FAILED
    | _ -> raise Thrift_error
end
module SquareChatState = 
struct
  type t = 
    | ALIVE
    | DELETED
    | SUSPENDED
  let to_i = function
    | ALIVE -> 0l
    | DELETED -> 1l
    | SUSPENDED -> 2l
  let of_i = function
    | 0l -> ALIVE
    | 1l -> DELETED
    | 2l -> SUSPENDED
    | _ -> raise Thrift_error
end
module SquareFeatureSetAttribute = 
struct
  type t = 
    | CREATING_SECRET_SQUARE_CHAT
    | INVITING_INTO_OPEN_SQUARE_CHAT
  let to_i = function
    | CREATING_SECRET_SQUARE_CHAT -> 1l
    | INVITING_INTO_OPEN_SQUARE_CHAT -> 2l
  let of_i = function
    | 1l -> CREATING_SECRET_SQUARE_CHAT
    | 2l -> INVITING_INTO_OPEN_SQUARE_CHAT
    | _ -> raise Thrift_error
end
module SquareMembershipState = 
struct
  type t = 
    | JOIN_REQUESTED
    | JOINED
    | REJECTED
    | LEFT
    | KICK_OUT
    | BANNED
    | DELETED
  let to_i = function
    | JOIN_REQUESTED -> 1l
    | JOINED -> 2l
    | REJECTED -> 3l
    | LEFT -> 4l
    | KICK_OUT -> 5l
    | BANNED -> 6l
    | DELETED -> 7l
  let of_i = function
    | 1l -> JOIN_REQUESTED
    | 2l -> JOINED
    | 3l -> REJECTED
    | 4l -> LEFT
    | 5l -> KICK_OUT
    | 6l -> BANNED
    | 7l -> DELETED
    | _ -> raise Thrift_error
end
module SquareChatMemberAttribute = 
struct
  type t = 
    | MEMBERSHIP_STATE
    | NOTIFICATION_MESSAGE
  let to_i = function
    | MEMBERSHIP_STATE -> 4l
    | NOTIFICATION_MESSAGE -> 6l
  let of_i = function
    | 4l -> MEMBERSHIP_STATE
    | 6l -> NOTIFICATION_MESSAGE
    | _ -> raise Thrift_error
end
module SquareMemberRole = 
struct
  type t = 
    | ADMIN
    | CO_ADMIN
    | MEMBER
  let to_i = function
    | ADMIN -> 1l
    | CO_ADMIN -> 2l
    | MEMBER -> 10l
  let of_i = function
    | 1l -> ADMIN
    | 2l -> CO_ADMIN
    | 10l -> MEMBER
    | _ -> raise Thrift_error
end
module PreconditionFailedExtraInfo = 
struct
  type t = 
    | DUPLICATED_DISPLAY_NAME
  let to_i = function
    | DUPLICATED_DISPLAY_NAME -> 0l
  let of_i = function
    | 0l -> DUPLICATED_DISPLAY_NAME
    | _ -> raise Thrift_error
end
module SquareChatMembershipState = 
struct
  type t = 
    | JOINED
    | LEFT
  let to_i = function
    | JOINED -> 1l
    | LEFT -> 2l
  let of_i = function
    | 1l -> JOINED
    | 2l -> LEFT
    | _ -> raise Thrift_error
end
module FetchDirection = 
struct
  type t = 
    | FORWARD
    | BACKWARD
  let to_i = function
    | FORWARD -> 1l
    | BACKWARD -> 2l
  let of_i = function
    | 1l -> FORWARD
    | 2l -> BACKWARD
    | _ -> raise Thrift_error
end
module SquareAttribute = 
struct
  type t = 
    | NAME
    | WELCOME_MESSAGE
    | PROFILE_IMAGE
    | DESCRIPTION
    | SEARCHABLE
    | CATEGORY
    | INVITATION_URL
    | ABLE_TO_USE_INVITATION_URL
    | STATE
  let to_i = function
    | NAME -> 1l
    | WELCOME_MESSAGE -> 2l
    | PROFILE_IMAGE -> 3l
    | DESCRIPTION -> 4l
    | SEARCHABLE -> 6l
    | CATEGORY -> 7l
    | INVITATION_URL -> 8l
    | ABLE_TO_USE_INVITATION_URL -> 9l
    | STATE -> 10l
  let of_i = function
    | 1l -> NAME
    | 2l -> WELCOME_MESSAGE
    | 3l -> PROFILE_IMAGE
    | 4l -> DESCRIPTION
    | 6l -> SEARCHABLE
    | 7l -> CATEGORY
    | 8l -> INVITATION_URL
    | 9l -> ABLE_TO_USE_INVITATION_URL
    | 10l -> STATE
    | _ -> raise Thrift_error
end
module SquareAuthorityAttribute = 
struct
  type t = 
    | UPDATE_SQUARE_PROFILE
    | INVITE_NEW_MEMBER
    | APPROVE_JOIN_REQUEST
    | CREATE_POST
    | CREATE_OPEN_SQUARE_CHAT
    | DELETE_SQUARE_CHAT_OR_POST
    | REMOVE_SQUARE_MEMBER
    | GRANT_ROLE
    | ENABLE_INVITATION_TICKET
    | CREATE_CHAT_ANNOUNCEMENT
  let to_i = function
    | UPDATE_SQUARE_PROFILE -> 1l
    | INVITE_NEW_MEMBER -> 2l
    | APPROVE_JOIN_REQUEST -> 3l
    | CREATE_POST -> 4l
    | CREATE_OPEN_SQUARE_CHAT -> 5l
    | DELETE_SQUARE_CHAT_OR_POST -> 6l
    | REMOVE_SQUARE_MEMBER -> 7l
    | GRANT_ROLE -> 8l
    | ENABLE_INVITATION_TICKET -> 9l
    | CREATE_CHAT_ANNOUNCEMENT -> 10l
  let of_i = function
    | 1l -> UPDATE_SQUARE_PROFILE
    | 2l -> INVITE_NEW_MEMBER
    | 3l -> APPROVE_JOIN_REQUEST
    | 4l -> CREATE_POST
    | 5l -> CREATE_OPEN_SQUARE_CHAT
    | 6l -> DELETE_SQUARE_CHAT_OR_POST
    | 7l -> REMOVE_SQUARE_MEMBER
    | 8l -> GRANT_ROLE
    | 9l -> ENABLE_INVITATION_TICKET
    | 10l -> CREATE_CHAT_ANNOUNCEMENT
    | _ -> raise Thrift_error
end
module SquareEventStatus = 
struct
  type t = 
    | NORMAL
    | ALERT_DISABLED
  let to_i = function
    | NORMAL -> 1l
    | ALERT_DISABLED -> 2l
  let of_i = function
    | 1l -> NORMAL
    | 2l -> ALERT_DISABLED
    | _ -> raise Thrift_error
end
module PType = 
struct
  type t = 
    | STICKER
    | THEME
    | STICON
  let to_i = function
    | STICKER -> 1l
    | THEME -> 2l
    | STICON -> 3l
  let of_i = function
    | 1l -> STICKER
    | 2l -> THEME
    | 3l -> STICON
    | _ -> raise Thrift_error
end
module PromotionType = 
struct
  type t = 
    | NONE
    | CARRIER
    | BUDDY
    | INSTALL
    | MISSION
    | MUSTBUY
  let to_i = function
    | NONE -> 0l
    | CARRIER -> 1l
    | BUDDY -> 2l
    | INSTALL -> 3l
    | MISSION -> 4l
    | MUSTBUY -> 5l
  let of_i = function
    | 0l -> NONE
    | 1l -> CARRIER
    | 2l -> BUDDY
    | 3l -> INSTALL
    | 4l -> MISSION
    | 5l -> MUSTBUY
    | _ -> raise Thrift_error
end
module PMType = 
struct
  type t = 
    | DEFAULT
    | VIEW_VIDEO
  let to_i = function
    | DEFAULT -> 1l
    | VIEW_VIDEO -> 2l
  let of_i = function
    | 1l -> DEFAULT
    | 2l -> VIEW_VIDEO
    | _ -> raise Thrift_error
end
module SRType = 
struct
  type t = 
    | STATIC
    | ANIMATION
    | SOUND
    | ANIMATION_SOUND
    | POPUP
    | L
    | POPUP_SOUND
  let to_i = function
    | STATIC -> 1l
    | ANIMATION -> 2l
    | SOUND -> 3l
    | ANIMATION_SOUND -> 4l
    | POPUP -> 5l
    | L -> 6l
    | POPUP_SOUND -> 6l
  let of_i = function
    | 1l -> STATIC
    | 2l -> ANIMATION
    | 3l -> SOUND
    | 4l -> ANIMATION_SOUND
    | 5l -> POPUP
    | 6l -> L
    | 6l -> POPUP_SOUND
    | _ -> raise Thrift_error
end
module TRType = 
struct
  type t = 
    | STATIC
    | ANIMATION
  let to_i = function
    | STATIC -> 1l
    | ANIMATION -> 2l
  let of_i = function
    | 1l -> STATIC
    | 2l -> ANIMATION
    | _ -> raise Thrift_error
end
module SubType = 
struct
  type t = 
    | GENERAL
    | CREATORS
  let to_i = function
    | GENERAL -> 0l
    | CREATORS -> 1l
  let of_i = function
    | 0l -> GENERAL
    | 1l -> CREATORS
    | _ -> raise Thrift_error
end
module IdentityResponseType = 
struct
  type t = 
    | UNKNOWN
    | SUCCESS
    | REQUIRE_SERVER_SIDE_EMAIL
    | REQUIRE_CLIENT_SIDE_EMAIL
  let to_i = function
    | UNKNOWN -> 0l
    | SUCCESS -> 1l
    | REQUIRE_SERVER_SIDE_EMAIL -> 2l
    | REQUIRE_CLIENT_SIDE_EMAIL -> 3l
  let of_i = function
    | 0l -> UNKNOWN
    | 1l -> SUCCESS
    | 2l -> REQUIRE_SERVER_SIDE_EMAIL
    | 3l -> REQUIRE_CLIENT_SIDE_EMAIL
    | _ -> raise Thrift_error
end
module AvailableChatTypes = 
struct
  type t = 
    | PERSONAL
    | ROOM
    | GROUP
    | SQUARE_CHAT
  let to_i = function
    | PERSONAL -> 1l
    | ROOM -> 2l
    | GROUP -> 3l
    | SQUARE_CHAT -> 4l
  let of_i = function
    | 1l -> PERSONAL
    | 2l -> ROOM
    | 3l -> GROUP
    | 4l -> SQUARE_CHAT
    | _ -> raise Thrift_error
end
module ChatAppExceptionCode = 
struct
  type t = 
    | INVALID_REQUEST
    | UNAUTHORIZED
    | SERVER_ERROR
  let to_i = function
    | INVALID_REQUEST -> 1l
    | UNAUTHORIZED -> 2l
    | SERVER_ERROR -> 100l
  let of_i = function
    | 1l -> INVALID_REQUEST
    | 2l -> UNAUTHORIZED
    | 100l -> SERVER_ERROR
    | _ -> raise Thrift_error
end
module ChatappCategory = 
struct
  type t = 
    | PRIORITY
    | REGULAR
    | MORE
  let to_i = function
    | PRIORITY -> 2l
    | REGULAR -> 1l
    | MORE -> 3l
  let of_i = function
    | 2l -> PRIORITY
    | 1l -> REGULAR
    | 3l -> MORE
    | _ -> raise Thrift_error
end
module SuggestDictionaryIncrementStatus = 
struct
  type t = 
    | SUCCESS
    | INVALID_REVISION
    | TOO_LARGE_DATA
    | SCHEME_CHANGED
    | RETRY
    | FAIL
    | TOO_OLD_DATA
  let to_i = function
    | SUCCESS -> 0l
    | INVALID_REVISION -> 1l
    | TOO_LARGE_DATA -> 2l
    | SCHEME_CHANGED -> 3l
    | RETRY -> 4l
    | FAIL -> 5l
    | TOO_OLD_DATA -> 6l
  let of_i = function
    | 0l -> SUCCESS
    | 1l -> INVALID_REVISION
    | 2l -> TOO_LARGE_DATA
    | 3l -> SCHEME_CHANGED
    | 4l -> RETRY
    | 5l -> FAIL
    | 6l -> TOO_OLD_DATA
    | _ -> raise Thrift_error
end
class chatapp =
object (self)
  val mutable _chatappId : string option = None
  method get_chatappId = _chatappId
  method grab_chatappId = match _chatappId with None->raise (Field_empty "chatapp.chatappId") | Some _x0 -> _x0
  method set_chatappId _x0 = _chatappId <- Some _x0
  method unset_chatappId = _chatappId <- None
  method reset_chatappId = _chatappId <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "chatapp.name") | Some _x1 -> _x1
  method set_name _x1 = _name <- Some _x1
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _icon : string option = None
  method get_icon = _icon
  method grab_icon = match _icon with None->raise (Field_empty "chatapp.icon") | Some _x2 -> _x2
  method set_icon _x2 = _icon <- Some _x2
  method unset_icon = _icon <- None
  method reset_icon = _icon <- None

  val mutable _url : string option = None
  method get_url = _url
  method grab_url = match _url with None->raise (Field_empty "chatapp.url") | Some _x3 -> _x3
  method set_url _x3 = _url <- Some _x3
  method unset_url = _url <- None
  method reset_url = _url <- None

  val mutable _availableChatTypes : AvailableChatTypes.t list option = None
  method get_availableChatTypes = _availableChatTypes
  method grab_availableChatTypes = match _availableChatTypes with None->raise (Field_empty "chatapp.availableChatTypes") | Some _x4 -> _x4
  method set_availableChatTypes _x4 = _availableChatTypes <- Some _x4
  method unset_availableChatTypes = _availableChatTypes <- None
  method reset_availableChatTypes = _availableChatTypes <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Chatapp";
    (match _chatappId with None -> () | Some _v -> 
      oprot#writeFieldBegin("chatappId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _icon with None -> () | Some _v -> 
      oprot#writeFieldBegin("icon",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _url with None -> () | Some _v -> 
      oprot#writeFieldBegin("url",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _availableChatTypes with None -> () | Some _v -> 
      oprot#writeFieldBegin("availableChatTypes",Protocol.T_LIST,5);
      oprot#writeListBegin(Protocol.T_I32,List.length _v);
      List.iter (fun _iter7 ->         oprot#writeI32(AvailableChatTypes.to_i _iter7);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_chatapp (iprot : Protocol.t) =
  let _str8 = new chatapp in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t9,_id10) = iprot#readFieldBegin in
        if _t9 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id10 with 
          | 1 -> (if _t9 = Protocol.T_STRING then
              _str8#set_chatappId iprot#readString
            else
              iprot#skip _t9)
          | 2 -> (if _t9 = Protocol.T_STRING then
              _str8#set_name iprot#readString
            else
              iprot#skip _t9)
          | 3 -> (if _t9 = Protocol.T_STRING then
              _str8#set_icon iprot#readString
            else
              iprot#skip _t9)
          | 4 -> (if _t9 = Protocol.T_STRING then
              _str8#set_url iprot#readString
            else
              iprot#skip _t9)
          | 5 -> (if _t9 = Protocol.T_LIST then
              _str8#set_availableChatTypes 
                (let (_etype14,_size11) = iprot#readListBegin in
                  let _con15 = (Array.to_list (Array.init _size11 (fun _ -> (AvailableChatTypes.of_i iprot#readI32)))) in
                    iprot#readListEnd; _con15)
            else
              iprot#skip _t9)
          | _ -> iprot#skip _t9);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str8

class myChatapp =
object (self)
  val mutable _app : chatapp option = None
  method get_app = _app
  method grab_app = match _app with None->raise (Field_empty "myChatapp.app") | Some _x17 -> _x17
  method set_app _x17 = _app <- Some _x17
  method unset_app = _app <- None
  method reset_app = _app <- None

  val mutable _category : ChatappCategory.t option = None
  method get_category = _category
  method grab_category = match _category with None->raise (Field_empty "myChatapp.category") | Some _x18 -> _x18
  method set_category _x18 = _category <- Some _x18
  method unset_category = _category <- None
  method reset_category = _category <- None

  val mutable _priority : Int64.t option = None
  method get_priority = _priority
  method grab_priority = match _priority with None->raise (Field_empty "myChatapp.priority") | Some _x19 -> _x19
  method set_priority _x19 = _priority <- Some _x19
  method unset_priority = _priority <- None
  method reset_priority = _priority <- None

  method copy =
      let _new = Oo.copy self in
      if _app <> None then
        _new#set_app self#grab_app#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "MyChatapp";
    (match _app with None -> () | Some _v -> 
      oprot#writeFieldBegin("app",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _category with None -> () | Some _v -> 
      oprot#writeFieldBegin("category",Protocol.T_I32,2);
      oprot#writeI32(ChatappCategory.to_i _v);
      oprot#writeFieldEnd
    );
    (match _priority with None -> () | Some _v -> 
      oprot#writeFieldBegin("priority",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_myChatapp (iprot : Protocol.t) =
  let _str22 = new myChatapp in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t23,_id24) = iprot#readFieldBegin in
        if _t23 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id24 with 
          | 1 -> (if _t23 = Protocol.T_STRUCT then
              _str22#set_app (read_chatapp iprot)
            else
              iprot#skip _t23)
          | 2 -> (if _t23 = Protocol.T_I32 then
              _str22#set_category (ChatappCategory.of_i iprot#readI32)
            else
              iprot#skip _t23)
          | 3 -> (if _t23 = Protocol.T_I64 then
              _str22#set_priority iprot#readI64
            else
              iprot#skip _t23)
          | _ -> iprot#skip _t23);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str22

class getMyChatappsResponse =
object (self)
  val mutable _apps : myChatapp list option = None
  method get_apps = _apps
  method grab_apps = match _apps with None->raise (Field_empty "getMyChatappsResponse.apps") | Some _x26 -> _x26
  method set_apps _x26 = _apps <- Some _x26
  method unset_apps = _apps <- None
  method reset_apps = _apps <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getMyChatappsResponse.continuationToken") | Some _x27 -> _x27
  method set_continuationToken _x27 = _continuationToken <- Some _x27
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  method copy =
      let _new = Oo.copy self in
      if _apps <> None then
        _new#set_apps (List.map (fun x -> x#copy) self#grab_apps);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetMyChatappsResponse";
    (match _apps with None -> () | Some _v -> 
      oprot#writeFieldBegin("apps",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter30 ->         _iter30#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getMyChatappsResponse (iprot : Protocol.t) =
  let _str31 = new getMyChatappsResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t32,_id33) = iprot#readFieldBegin in
        if _t32 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id33 with 
          | 1 -> (if _t32 = Protocol.T_LIST then
              _str31#set_apps 
                (let (_etype37,_size34) = iprot#readListBegin in
                  let _con38 = (Array.to_list (Array.init _size34 (fun _ -> (read_myChatapp iprot)))) in
                    iprot#readListEnd; _con38)
            else
              iprot#skip _t32)
          | 2 -> (if _t32 = Protocol.T_STRING then
              _str31#set_continuationToken iprot#readString
            else
              iprot#skip _t32)
          | _ -> iprot#skip _t32);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str31

class getMyChatappsRequest =
object (self)
  val mutable _language : string option = None
  method get_language = _language
  method grab_language = match _language with None->raise (Field_empty "getMyChatappsRequest.language") | Some _x40 -> _x40
  method set_language _x40 = _language <- Some _x40
  method unset_language = _language <- None
  method reset_language = _language <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getMyChatappsRequest.continuationToken") | Some _x41 -> _x41
  method set_continuationToken _x41 = _continuationToken <- Some _x41
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetMyChatappsRequest";
    (match _language with None -> () | Some _v -> 
      oprot#writeFieldBegin("language",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getMyChatappsRequest (iprot : Protocol.t) =
  let _str44 = new getMyChatappsRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t45,_id46) = iprot#readFieldBegin in
        if _t45 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id46 with 
          | 1 -> (if _t45 = Protocol.T_STRING then
              _str44#set_language iprot#readString
            else
              iprot#skip _t45)
          | 2 -> (if _t45 = Protocol.T_STRING then
              _str44#set_continuationToken iprot#readString
            else
              iprot#skip _t45)
          | _ -> iprot#skip _t45);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str44

class getChatappRequest =
object (self)
  val mutable _chatappId : string option = None
  method get_chatappId = _chatappId
  method grab_chatappId = match _chatappId with None->raise (Field_empty "getChatappRequest.chatappId") | Some _x48 -> _x48
  method set_chatappId _x48 = _chatappId <- Some _x48
  method unset_chatappId = _chatappId <- None
  method reset_chatappId = _chatappId <- None

  val mutable _language : string option = None
  method get_language = _language
  method grab_language = match _language with None->raise (Field_empty "getChatappRequest.language") | Some _x49 -> _x49
  method set_language _x49 = _language <- Some _x49
  method unset_language = _language <- None
  method reset_language = _language <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetChatappRequest";
    (match _chatappId with None -> () | Some _v -> 
      oprot#writeFieldBegin("chatappId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _language with None -> () | Some _v -> 
      oprot#writeFieldBegin("language",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getChatappRequest (iprot : Protocol.t) =
  let _str52 = new getChatappRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t53,_id54) = iprot#readFieldBegin in
        if _t53 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id54 with 
          | 1 -> (if _t53 = Protocol.T_STRING then
              _str52#set_chatappId iprot#readString
            else
              iprot#skip _t53)
          | 2 -> (if _t53 = Protocol.T_STRING then
              _str52#set_language iprot#readString
            else
              iprot#skip _t53)
          | _ -> iprot#skip _t53);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str52

class chatappException =
object (self)
  val mutable _code : ChatAppExceptionCode.t option = None
  method get_code = _code
  method grab_code = match _code with None->raise (Field_empty "chatappException.code") | Some _x56 -> _x56
  method set_code _x56 = _code <- Some _x56
  method unset_code = _code <- None
  method reset_code = _code <- None

  val mutable _reason : string option = None
  method get_reason = _reason
  method grab_reason = match _reason with None->raise (Field_empty "chatappException.reason") | Some _x57 -> _x57
  method set_reason _x57 = _reason <- Some _x57
  method unset_reason = _reason <- None
  method reset_reason = _reason <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChatappException";
    (match _code with None -> () | Some _v -> 
      oprot#writeFieldBegin("code",Protocol.T_I32,1);
      oprot#writeI32(ChatAppExceptionCode.to_i _v);
      oprot#writeFieldEnd
    );
    (match _reason with None -> () | Some _v -> 
      oprot#writeFieldBegin("reason",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_chatappException (iprot : Protocol.t) =
  let _str60 = new chatappException in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t61,_id62) = iprot#readFieldBegin in
        if _t61 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id62 with 
          | 1 -> (if _t61 = Protocol.T_I32 then
              _str60#set_code (ChatAppExceptionCode.of_i iprot#readI32)
            else
              iprot#skip _t61)
          | 2 -> (if _t61 = Protocol.T_STRING then
              _str60#set_reason iprot#readString
            else
              iprot#skip _t61)
          | _ -> iprot#skip _t61);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str60

class getChatappResponse =
object (self)
  val mutable _app : chatapp option = None
  method get_app = _app
  method grab_app = match _app with None->raise (Field_empty "getChatappResponse.app") | Some _x64 -> _x64
  method set_app _x64 = _app <- Some _x64
  method unset_app = _app <- None
  method reset_app = _app <- None

  method copy =
      let _new = Oo.copy self in
      if _app <> None then
        _new#set_app self#grab_app#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetChatappResponse";
    (match _app with None -> () | Some _v -> 
      oprot#writeFieldBegin("app",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getChatappResponse (iprot : Protocol.t) =
  let _str67 = new getChatappResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t68,_id69) = iprot#readFieldBegin in
        if _t68 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id69 with 
          | 1 -> (if _t68 = Protocol.T_STRUCT then
              _str67#set_app (read_chatapp iprot)
            else
              iprot#skip _t68)
          | _ -> iprot#skip _t68);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str67

class webLoginResponse =
object (self)
  val mutable _returnUrl : string option = None
  method get_returnUrl = _returnUrl
  method grab_returnUrl = match _returnUrl with None->raise (Field_empty "webLoginResponse.returnUrl") | Some _x71 -> _x71
  method set_returnUrl _x71 = _returnUrl <- Some _x71
  method unset_returnUrl = _returnUrl <- None
  method reset_returnUrl = _returnUrl <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "WebLoginResponse";
    (match _returnUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("returnUrl",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_webLoginResponse (iprot : Protocol.t) =
  let _str74 = new webLoginResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t75,_id76) = iprot#readFieldBegin in
        if _t75 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id76 with 
          | 1 -> (if _t75 = Protocol.T_STRING then
              _str74#set_returnUrl iprot#readString
            else
              iprot#skip _t75)
          | _ -> iprot#skip _t75);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str74

class webLoginRequest =
object (self)
  val mutable _hookedFullUrl : string option = None
  method get_hookedFullUrl = _hookedFullUrl
  method grab_hookedFullUrl = match _hookedFullUrl with None->raise (Field_empty "webLoginRequest.hookedFullUrl") | Some _x78 -> _x78
  method set_hookedFullUrl _x78 = _hookedFullUrl <- Some _x78
  method unset_hookedFullUrl = _hookedFullUrl <- None
  method reset_hookedFullUrl = _hookedFullUrl <- None

  val mutable _sessionString : string option = None
  method get_sessionString = _sessionString
  method grab_sessionString = match _sessionString with None->raise (Field_empty "webLoginRequest.sessionString") | Some _x79 -> _x79
  method set_sessionString _x79 = _sessionString <- Some _x79
  method unset_sessionString = _sessionString <- None
  method reset_sessionString = _sessionString <- None

  val mutable _fromIAB : bool option = None
  method get_fromIAB = _fromIAB
  method grab_fromIAB = match _fromIAB with None->raise (Field_empty "webLoginRequest.fromIAB") | Some _x80 -> _x80
  method set_fromIAB _x80 = _fromIAB <- Some _x80
  method unset_fromIAB = _fromIAB <- None
  method reset_fromIAB = _fromIAB <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "WebLoginRequest";
    (match _hookedFullUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("hookedFullUrl",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _sessionString with None -> () | Some _v -> 
      oprot#writeFieldBegin("sessionString",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _fromIAB with None -> () | Some _v -> 
      oprot#writeFieldBegin("fromIAB",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_webLoginRequest (iprot : Protocol.t) =
  let _str83 = new webLoginRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t84,_id85) = iprot#readFieldBegin in
        if _t84 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id85 with 
          | 1 -> (if _t84 = Protocol.T_STRING then
              _str83#set_hookedFullUrl iprot#readString
            else
              iprot#skip _t84)
          | 2 -> (if _t84 = Protocol.T_STRING then
              _str83#set_sessionString iprot#readString
            else
              iprot#skip _t84)
          | 3 -> (if _t84 = Protocol.T_BOOL then
              _str83#set_fromIAB iprot#readBool
            else
              iprot#skip _t84)
          | _ -> iprot#skip _t84);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str83

class testCallRoute =
object (self)
  val mutable _token : string option = None
  method get_token = _token
  method grab_token = match _token with None->raise (Field_empty "testCallRoute.token") | Some _x87 -> _x87
  method set_token _x87 = _token <- Some _x87
  method unset_token = _token <- None
  method reset_token = _token <- None

  val mutable _voipServer : callHost option = None
  method get_voipServer = _voipServer
  method grab_voipServer = match _voipServer with None->raise (Field_empty "testCallRoute.voipServer") | Some _x88 -> _x88
  method set_voipServer _x88 = _voipServer <- Some _x88
  method unset_voipServer = _voipServer <- None
  method reset_voipServer = _voipServer <- None

  method copy =
      let _new = Oo.copy self in
      if _voipServer <> None then
        _new#set_voipServer self#grab_voipServer#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "TestCallRoute";
    (match _token with None -> () | Some _v -> 
      oprot#writeFieldBegin("token",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _voipServer with None -> () | Some _v -> 
      oprot#writeFieldBegin("voipServer",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_testCallRoute (iprot : Protocol.t) =
  let _str91 = new testCallRoute in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t92,_id93) = iprot#readFieldBegin in
        if _t92 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id93 with 
          | 1 -> (if _t92 = Protocol.T_STRING then
              _str91#set_token iprot#readString
            else
              iprot#skip _t92)
          | 2 -> (if _t92 = Protocol.T_STRUCT then
              _str91#set_voipServer (read_callHost iprot)
            else
              iprot#skip _t92)
          | _ -> iprot#skip _t92);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str91

class profileContent =
object (self)
  val mutable _value : string option = None
  method get_value = _value
  method grab_value = match _value with None->raise (Field_empty "profileContent.value") | Some _x95 -> _x95
  method set_value _x95 = _value <- Some _x95
  method unset_value = _value <- None
  method reset_value = _value <- None

  val mutable _meta : (string,string) Hashtbl.t option = None
  method get_meta = _meta
  method grab_meta = match _meta with None->raise (Field_empty "profileContent.meta") | Some _x96 -> _x96
  method set_meta _x96 = _meta <- Some _x96
  method unset_meta = _meta <- None
  method reset_meta = _meta <- None

  method copy =
      let _new = Oo.copy self in
      if _meta <> None then
        _new#set_meta (Hashtbl.copy self#grab_meta);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ProfileContent";
    (match _value with None -> () | Some _v -> 
      oprot#writeFieldBegin("value",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _meta with None -> () | Some _v -> 
      oprot#writeFieldBegin("meta",Protocol.T_MAP,2);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter99 -> fun _viter100 -> 
        oprot#writeString(_kiter99);
        oprot#writeString(_viter100);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_profileContent (iprot : Protocol.t) =
  let _str101 = new profileContent in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t102,_id103) = iprot#readFieldBegin in
        if _t102 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id103 with 
          | 1 -> (if _t102 = Protocol.T_STRING then
              _str101#set_value iprot#readString
            else
              iprot#skip _t102)
          | 2 -> (if _t102 = Protocol.T_MAP then
              _str101#set_meta 
                (let (_ktype105,_vtype106,_size104) = iprot#readMapBegin in
                let _con108 = Hashtbl.create _size104 in
                  for i = 1 to _size104 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con108 _k _v
                  done; iprot#readMapEnd; _con108)
            else
              iprot#skip _t102)
          | _ -> iprot#skip _t102);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str101

class updateProfileAttributesRequest =
object (self)
  val mutable _profileAttributes : (ProfileAttribute.t,profileContent) Hashtbl.t option = None
  method get_profileAttributes = _profileAttributes
  method grab_profileAttributes = match _profileAttributes with None->raise (Field_empty "updateProfileAttributesRequest.profileAttributes") | Some _x110 -> _x110
  method set_profileAttributes _x110 = _profileAttributes <- Some _x110
  method unset_profileAttributes = _profileAttributes <- None
  method reset_profileAttributes = _profileAttributes <- None

  method copy =
      let _new = Oo.copy self in
      if _profileAttributes <> None then
        _new#set_profileAttributes ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_profileAttributes);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateProfileAttributesRequest";
    (match _profileAttributes with None -> () | Some _v -> 
      oprot#writeFieldBegin("profileAttributes",Protocol.T_MAP,1);
      oprot#writeMapBegin(Protocol.T_I32,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter113 -> fun _viter114 -> 
        oprot#writeI32(ProfileAttribute.to_i _kiter113);
        _viter114#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateProfileAttributesRequest (iprot : Protocol.t) =
  let _str115 = new updateProfileAttributesRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t116,_id117) = iprot#readFieldBegin in
        if _t116 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id117 with 
          | 1 -> (if _t116 = Protocol.T_MAP then
              _str115#set_profileAttributes 
                (let (_ktype119,_vtype120,_size118) = iprot#readMapBegin in
                let _con122 = Hashtbl.create _size118 in
                  for i = 1 to _size118 do
                    let _k = (ProfileAttribute.of_i iprot#readI32) in
                    let _v = (read_profileContent iprot) in
                      Hashtbl.add _con122 _k _v
                  done; iprot#readMapEnd; _con122)
            else
              iprot#skip _t116)
          | _ -> iprot#skip _t116);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str115

class identityCredentialResponse =
object (self)
  val mutable _metaData : (string,string) Hashtbl.t option = None
  method get_metaData = _metaData
  method grab_metaData = match _metaData with None->raise (Field_empty "identityCredentialResponse.metaData") | Some _x124 -> _x124
  method set_metaData _x124 = _metaData <- Some _x124
  method unset_metaData = _metaData <- None
  method reset_metaData = _metaData <- None

  val mutable _responseType : IdentityResponseType.t option = None
  method get_responseType = _responseType
  method grab_responseType = match _responseType with None->raise (Field_empty "identityCredentialResponse.responseType") | Some _x125 -> _x125
  method set_responseType _x125 = _responseType <- Some _x125
  method unset_responseType = _responseType <- None
  method reset_responseType = _responseType <- None

  val mutable _confirmationVerifier : string option = None
  method get_confirmationVerifier = _confirmationVerifier
  method grab_confirmationVerifier = match _confirmationVerifier with None->raise (Field_empty "identityCredentialResponse.confirmationVerifier") | Some _x126 -> _x126
  method set_confirmationVerifier _x126 = _confirmationVerifier <- Some _x126
  method unset_confirmationVerifier = _confirmationVerifier <- None
  method reset_confirmationVerifier = _confirmationVerifier <- None

  val mutable _timeoutInSeconds : Int64.t option = None
  method get_timeoutInSeconds = _timeoutInSeconds
  method grab_timeoutInSeconds = match _timeoutInSeconds with None->raise (Field_empty "identityCredentialResponse.timeoutInSeconds") | Some _x127 -> _x127
  method set_timeoutInSeconds _x127 = _timeoutInSeconds <- Some _x127
  method unset_timeoutInSeconds = _timeoutInSeconds <- None
  method reset_timeoutInSeconds = _timeoutInSeconds <- None

  method copy =
      let _new = Oo.copy self in
      if _metaData <> None then
        _new#set_metaData (Hashtbl.copy self#grab_metaData);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "IdentityCredentialResponse";
    (match _metaData with None -> () | Some _v -> 
      oprot#writeFieldBegin("metaData",Protocol.T_MAP,1);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter130 -> fun _viter131 -> 
        oprot#writeString(_kiter130);
        oprot#writeString(_viter131);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _responseType with None -> () | Some _v -> 
      oprot#writeFieldBegin("responseType",Protocol.T_I32,2);
      oprot#writeI32(IdentityResponseType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _confirmationVerifier with None -> () | Some _v -> 
      oprot#writeFieldBegin("confirmationVerifier",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _timeoutInSeconds with None -> () | Some _v -> 
      oprot#writeFieldBegin("timeoutInSeconds",Protocol.T_I64,4);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_identityCredentialResponse (iprot : Protocol.t) =
  let _str132 = new identityCredentialResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t133,_id134) = iprot#readFieldBegin in
        if _t133 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id134 with 
          | 1 -> (if _t133 = Protocol.T_MAP then
              _str132#set_metaData 
                (let (_ktype136,_vtype137,_size135) = iprot#readMapBegin in
                let _con139 = Hashtbl.create _size135 in
                  for i = 1 to _size135 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con139 _k _v
                  done; iprot#readMapEnd; _con139)
            else
              iprot#skip _t133)
          | 2 -> (if _t133 = Protocol.T_I32 then
              _str132#set_responseType (IdentityResponseType.of_i iprot#readI32)
            else
              iprot#skip _t133)
          | 3 -> (if _t133 = Protocol.T_STRING then
              _str132#set_confirmationVerifier iprot#readString
            else
              iprot#skip _t133)
          | 4 -> (if _t133 = Protocol.T_I64 then
              _str132#set_timeoutInSeconds iprot#readI64
            else
              iprot#skip _t133)
          | _ -> iprot#skip _t133);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str132

class identifierConfirmationRequest =
object (self)
  val mutable _metaData : (string,string) Hashtbl.t option = None
  method get_metaData = _metaData
  method grab_metaData = match _metaData with None->raise (Field_empty "identifierConfirmationRequest.metaData") | Some _x141 -> _x141
  method set_metaData _x141 = _metaData <- Some _x141
  method unset_metaData = _metaData <- None
  method reset_metaData = _metaData <- None

  val mutable _forceRegistration : bool option = None
  method get_forceRegistration = _forceRegistration
  method grab_forceRegistration = match _forceRegistration with None->raise (Field_empty "identifierConfirmationRequest.forceRegistration") | Some _x142 -> _x142
  method set_forceRegistration _x142 = _forceRegistration <- Some _x142
  method unset_forceRegistration = _forceRegistration <- None
  method reset_forceRegistration = _forceRegistration <- None

  val mutable _verificationCode : string option = None
  method get_verificationCode = _verificationCode
  method grab_verificationCode = match _verificationCode with None->raise (Field_empty "identifierConfirmationRequest.verificationCode") | Some _x143 -> _x143
  method set_verificationCode _x143 = _verificationCode <- Some _x143
  method unset_verificationCode = _verificationCode <- None
  method reset_verificationCode = _verificationCode <- None

  method copy =
      let _new = Oo.copy self in
      if _metaData <> None then
        _new#set_metaData (Hashtbl.copy self#grab_metaData);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "IdentifierConfirmationRequest";
    (match _metaData with None -> () | Some _v -> 
      oprot#writeFieldBegin("metaData",Protocol.T_MAP,1);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter146 -> fun _viter147 -> 
        oprot#writeString(_kiter146);
        oprot#writeString(_viter147);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _forceRegistration with None -> () | Some _v -> 
      oprot#writeFieldBegin("forceRegistration",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _verificationCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("verificationCode",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_identifierConfirmationRequest (iprot : Protocol.t) =
  let _str148 = new identifierConfirmationRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t149,_id150) = iprot#readFieldBegin in
        if _t149 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id150 with 
          | 1 -> (if _t149 = Protocol.T_MAP then
              _str148#set_metaData 
                (let (_ktype152,_vtype153,_size151) = iprot#readMapBegin in
                let _con155 = Hashtbl.create _size151 in
                  for i = 1 to _size151 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con155 _k _v
                  done; iprot#readMapEnd; _con155)
            else
              iprot#skip _t149)
          | 2 -> (if _t149 = Protocol.T_BOOL then
              _str148#set_forceRegistration iprot#readBool
            else
              iprot#skip _t149)
          | 3 -> (if _t149 = Protocol.T_STRING then
              _str148#set_verificationCode iprot#readString
            else
              iprot#skip _t149)
          | _ -> iprot#skip _t149);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str148

class identityCredentialRequest =
object (self)
  val mutable _metaData : (string,string) Hashtbl.t option = None
  method get_metaData = _metaData
  method grab_metaData = match _metaData with None->raise (Field_empty "identityCredentialRequest.metaData") | Some _x157 -> _x157
  method set_metaData _x157 = _metaData <- Some _x157
  method unset_metaData = _metaData <- None
  method reset_metaData = _metaData <- None

  val mutable _identityProvider : IdentityProvider.t option = None
  method get_identityProvider = _identityProvider
  method grab_identityProvider = match _identityProvider with None->raise (Field_empty "identityCredentialRequest.identityProvider") | Some _x158 -> _x158
  method set_identityProvider _x158 = _identityProvider <- Some _x158
  method unset_identityProvider = _identityProvider <- None
  method reset_identityProvider = _identityProvider <- None

  val mutable _cipherKeyId : string option = None
  method get_cipherKeyId = _cipherKeyId
  method grab_cipherKeyId = match _cipherKeyId with None->raise (Field_empty "identityCredentialRequest.cipherKeyId") | Some _x159 -> _x159
  method set_cipherKeyId _x159 = _cipherKeyId <- Some _x159
  method unset_cipherKeyId = _cipherKeyId <- None
  method reset_cipherKeyId = _cipherKeyId <- None

  val mutable _cipherText : string option = None
  method get_cipherText = _cipherText
  method grab_cipherText = match _cipherText with None->raise (Field_empty "identityCredentialRequest.cipherText") | Some _x160 -> _x160
  method set_cipherText _x160 = _cipherText <- Some _x160
  method unset_cipherText = _cipherText <- None
  method reset_cipherText = _cipherText <- None

  val mutable _confirmationRequest : identifierConfirmationRequest option = None
  method get_confirmationRequest = _confirmationRequest
  method grab_confirmationRequest = match _confirmationRequest with None->raise (Field_empty "identityCredentialRequest.confirmationRequest") | Some _x161 -> _x161
  method set_confirmationRequest _x161 = _confirmationRequest <- Some _x161
  method unset_confirmationRequest = _confirmationRequest <- None
  method reset_confirmationRequest = _confirmationRequest <- None

  method copy =
      let _new = Oo.copy self in
      if _metaData <> None then
        _new#set_metaData (Hashtbl.copy self#grab_metaData);
      if _confirmationRequest <> None then
        _new#set_confirmationRequest self#grab_confirmationRequest#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "IdentityCredentialRequest";
    (match _metaData with None -> () | Some _v -> 
      oprot#writeFieldBegin("metaData",Protocol.T_MAP,1);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter164 -> fun _viter165 -> 
        oprot#writeString(_kiter164);
        oprot#writeString(_viter165);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _identityProvider with None -> () | Some _v -> 
      oprot#writeFieldBegin("identityProvider",Protocol.T_I32,2);
      oprot#writeI32(IdentityProvider.to_i _v);
      oprot#writeFieldEnd
    );
    (match _cipherKeyId with None -> () | Some _v -> 
      oprot#writeFieldBegin("cipherKeyId",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _cipherText with None -> () | Some _v -> 
      oprot#writeFieldBegin("cipherText",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _confirmationRequest with None -> () | Some _v -> 
      oprot#writeFieldBegin("confirmationRequest",Protocol.T_STRUCT,5);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_identityCredentialRequest (iprot : Protocol.t) =
  let _str166 = new identityCredentialRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t167,_id168) = iprot#readFieldBegin in
        if _t167 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id168 with 
          | 1 -> (if _t167 = Protocol.T_MAP then
              _str166#set_metaData 
                (let (_ktype170,_vtype171,_size169) = iprot#readMapBegin in
                let _con173 = Hashtbl.create _size169 in
                  for i = 1 to _size169 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con173 _k _v
                  done; iprot#readMapEnd; _con173)
            else
              iprot#skip _t167)
          | 2 -> (if _t167 = Protocol.T_I32 then
              _str166#set_identityProvider (IdentityProvider.of_i iprot#readI32)
            else
              iprot#skip _t167)
          | 3 -> (if _t167 = Protocol.T_STRING then
              _str166#set_cipherKeyId iprot#readString
            else
              iprot#skip _t167)
          | 4 -> (if _t167 = Protocol.T_STRING then
              _str166#set_cipherText iprot#readString
            else
              iprot#skip _t167)
          | 5 -> (if _t167 = Protocol.T_STRUCT then
              _str166#set_confirmationRequest (read_identifierConfirmationRequest iprot)
            else
              iprot#skip _t167)
          | _ -> iprot#skip _t167);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str166

class authSessionRequest =
object (self)
  val mutable _metaData : (string,string) Hashtbl.t option = None
  method get_metaData = _metaData
  method grab_metaData = match _metaData with None->raise (Field_empty "authSessionRequest.metaData") | Some _x175 -> _x175
  method set_metaData _x175 = _metaData <- Some _x175
  method unset_metaData = _metaData <- None
  method reset_metaData = _metaData <- None

  method copy =
      let _new = Oo.copy self in
      if _metaData <> None then
        _new#set_metaData (Hashtbl.copy self#grab_metaData);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "AuthSessionRequest";
    (match _metaData with None -> () | Some _v -> 
      oprot#writeFieldBegin("metaData",Protocol.T_MAP,1);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter178 -> fun _viter179 -> 
        oprot#writeString(_kiter178);
        oprot#writeString(_viter179);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_authSessionRequest (iprot : Protocol.t) =
  let _str180 = new authSessionRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t181,_id182) = iprot#readFieldBegin in
        if _t181 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id182 with 
          | 1 -> (if _t181 = Protocol.T_MAP then
              _str180#set_metaData 
                (let (_ktype184,_vtype185,_size183) = iprot#readMapBegin in
                let _con187 = Hashtbl.create _size183 in
                  for i = 1 to _size183 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con187 _k _v
                  done; iprot#readMapEnd; _con187)
            else
              iprot#skip _t181)
          | _ -> iprot#skip _t181);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str180

class categoryItem =
object (self)
  val mutable _collection : Int32.t option = None
  method get_collection = _collection
  method grab_collection = match _collection with None->raise (Field_empty "categoryItem.collection") | Some _x189 -> _x189
  method set_collection _x189 = _collection <- Some _x189
  method unset_collection = _collection <- None
  method reset_collection = _collection <- None

  val mutable _cat : Int32.t option = None
  method get_cat = _cat
  method grab_cat = match _cat with None->raise (Field_empty "categoryItem.cat") | Some _x190 -> _x190
  method set_cat _x190 = _cat <- Some _x190
  method unset_cat = _cat <- None
  method reset_cat = _cat <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "categoryItem.name") | Some _x191 -> _x191
  method set_name _x191 = _name <- Some _x191
  method unset_name = _name <- None
  method reset_name = _name <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CategoryItem";
    (match _collection with None -> () | Some _v -> 
      oprot#writeFieldBegin("collection",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _cat with None -> () | Some _v -> 
      oprot#writeFieldBegin("cat",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_categoryItem (iprot : Protocol.t) =
  let _str194 = new categoryItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t195,_id196) = iprot#readFieldBegin in
        if _t195 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id196 with 
          | 1 -> (if _t195 = Protocol.T_I32 then
              _str194#set_collection iprot#readI32
            else
              iprot#skip _t195)
          | 2 -> (if _t195 = Protocol.T_I32 then
              _str194#set_cat iprot#readI32
            else
              iprot#skip _t195)
          | 3 -> (if _t195 = Protocol.T_STRING then
              _str194#set_name iprot#readString
            else
              iprot#skip _t195)
          | _ -> iprot#skip _t195);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str194

class promotionBuddyInfo =
object (self)
  val mutable _buddyMid : string option = None
  method get_buddyMid = _buddyMid
  method grab_buddyMid = match _buddyMid with None->raise (Field_empty "promotionBuddyInfo.buddyMid") | Some _x198 -> _x198
  method set_buddyMid _x198 = _buddyMid <- Some _x198
  method unset_buddyMid = _buddyMid <- None
  method reset_buddyMid = _buddyMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PromotionBuddyInfo";
    (match _buddyMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("buddyMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_promotionBuddyInfo (iprot : Protocol.t) =
  let _str201 = new promotionBuddyInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t202,_id203) = iprot#readFieldBegin in
        if _t202 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id203 with 
          | 1 -> (if _t202 = Protocol.T_STRING then
              _str201#set_buddyMid iprot#readString
            else
              iprot#skip _t202)
          | _ -> iprot#skip _t202);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str201

class promotionInstallInfo =
object (self)
  val mutable _downloadUrl : string option = None
  method get_downloadUrl = _downloadUrl
  method grab_downloadUrl = match _downloadUrl with None->raise (Field_empty "promotionInstallInfo.downloadUrl") | Some _x205 -> _x205
  method set_downloadUrl _x205 = _downloadUrl <- Some _x205
  method unset_downloadUrl = _downloadUrl <- None
  method reset_downloadUrl = _downloadUrl <- None

  val mutable _customUrlSchema : string option = None
  method get_customUrlSchema = _customUrlSchema
  method grab_customUrlSchema = match _customUrlSchema with None->raise (Field_empty "promotionInstallInfo.customUrlSchema") | Some _x206 -> _x206
  method set_customUrlSchema _x206 = _customUrlSchema <- Some _x206
  method unset_customUrlSchema = _customUrlSchema <- None
  method reset_customUrlSchema = _customUrlSchema <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PromotionInstallInfo";
    (match _downloadUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("downloadUrl",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _customUrlSchema with None -> () | Some _v -> 
      oprot#writeFieldBegin("customUrlSchema",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_promotionInstallInfo (iprot : Protocol.t) =
  let _str209 = new promotionInstallInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t210,_id211) = iprot#readFieldBegin in
        if _t210 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id211 with 
          | 1 -> (if _t210 = Protocol.T_STRING then
              _str209#set_downloadUrl iprot#readString
            else
              iprot#skip _t210)
          | 2 -> (if _t210 = Protocol.T_STRING then
              _str209#set_customUrlSchema iprot#readString
            else
              iprot#skip _t210)
          | _ -> iprot#skip _t210);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str209

class promotionMissionInfo =
object (self)
  val mutable _promotionMissionType : PMType.t option = None
  method get_promotionMissionType = _promotionMissionType
  method grab_promotionMissionType = match _promotionMissionType with None->raise (Field_empty "promotionMissionInfo.promotionMissionType") | Some _x213 -> _x213
  method set_promotionMissionType _x213 = _promotionMissionType <- Some _x213
  method unset_promotionMissionType = _promotionMissionType <- None
  method reset_promotionMissionType = _promotionMissionType <- None

  val mutable _missionCompleted : bool option = None
  method get_missionCompleted = _missionCompleted
  method grab_missionCompleted = match _missionCompleted with None->raise (Field_empty "promotionMissionInfo.missionCompleted") | Some _x214 -> _x214
  method set_missionCompleted _x214 = _missionCompleted <- Some _x214
  method unset_missionCompleted = _missionCompleted <- None
  method reset_missionCompleted = _missionCompleted <- None

  val mutable _downloadUrl : string option = None
  method get_downloadUrl = _downloadUrl
  method grab_downloadUrl = match _downloadUrl with None->raise (Field_empty "promotionMissionInfo.downloadUrl") | Some _x215 -> _x215
  method set_downloadUrl _x215 = _downloadUrl <- Some _x215
  method unset_downloadUrl = _downloadUrl <- None
  method reset_downloadUrl = _downloadUrl <- None

  val mutable _customUrlSchema : string option = None
  method get_customUrlSchema = _customUrlSchema
  method grab_customUrlSchema = match _customUrlSchema with None->raise (Field_empty "promotionMissionInfo.customUrlSchema") | Some _x216 -> _x216
  method set_customUrlSchema _x216 = _customUrlSchema <- Some _x216
  method unset_customUrlSchema = _customUrlSchema <- None
  method reset_customUrlSchema = _customUrlSchema <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PromotionMissionInfo";
    (match _promotionMissionType with None -> () | Some _v -> 
      oprot#writeFieldBegin("promotionMissionType",Protocol.T_I32,1);
      oprot#writeI32(PMType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _missionCompleted with None -> () | Some _v -> 
      oprot#writeFieldBegin("missionCompleted",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _downloadUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("downloadUrl",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _customUrlSchema with None -> () | Some _v -> 
      oprot#writeFieldBegin("customUrlSchema",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_promotionMissionInfo (iprot : Protocol.t) =
  let _str219 = new promotionMissionInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t220,_id221) = iprot#readFieldBegin in
        if _t220 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id221 with 
          | 1 -> (if _t220 = Protocol.T_I32 then
              _str219#set_promotionMissionType (PMType.of_i iprot#readI32)
            else
              iprot#skip _t220)
          | 2 -> (if _t220 = Protocol.T_BOOL then
              _str219#set_missionCompleted iprot#readBool
            else
              iprot#skip _t220)
          | 3 -> (if _t220 = Protocol.T_STRING then
              _str219#set_downloadUrl iprot#readString
            else
              iprot#skip _t220)
          | 4 -> (if _t220 = Protocol.T_STRING then
              _str219#set_customUrlSchema iprot#readString
            else
              iprot#skip _t220)
          | _ -> iprot#skip _t220);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str219

class promotionDetail =
object (self)
  val mutable _promotionBuddyInfo : promotionBuddyInfo option = None
  method get_promotionBuddyInfo = _promotionBuddyInfo
  method grab_promotionBuddyInfo = match _promotionBuddyInfo with None->raise (Field_empty "promotionDetail.promotionBuddyInfo") | Some _x223 -> _x223
  method set_promotionBuddyInfo _x223 = _promotionBuddyInfo <- Some _x223
  method unset_promotionBuddyInfo = _promotionBuddyInfo <- None
  method reset_promotionBuddyInfo = _promotionBuddyInfo <- None

  val mutable _promotionInstallInfo : promotionInstallInfo option = None
  method get_promotionInstallInfo = _promotionInstallInfo
  method grab_promotionInstallInfo = match _promotionInstallInfo with None->raise (Field_empty "promotionDetail.promotionInstallInfo") | Some _x224 -> _x224
  method set_promotionInstallInfo _x224 = _promotionInstallInfo <- Some _x224
  method unset_promotionInstallInfo = _promotionInstallInfo <- None
  method reset_promotionInstallInfo = _promotionInstallInfo <- None

  val mutable _promotionMissionInfo : promotionMissionInfo option = None
  method get_promotionMissionInfo = _promotionMissionInfo
  method grab_promotionMissionInfo = match _promotionMissionInfo with None->raise (Field_empty "promotionDetail.promotionMissionInfo") | Some _x225 -> _x225
  method set_promotionMissionInfo _x225 = _promotionMissionInfo <- Some _x225
  method unset_promotionMissionInfo = _promotionMissionInfo <- None
  method reset_promotionMissionInfo = _promotionMissionInfo <- None

  method copy =
      let _new = Oo.copy self in
      if _promotionBuddyInfo <> None then
        _new#set_promotionBuddyInfo self#grab_promotionBuddyInfo#copy;
      if _promotionInstallInfo <> None then
        _new#set_promotionInstallInfo self#grab_promotionInstallInfo#copy;
      if _promotionMissionInfo <> None then
        _new#set_promotionMissionInfo self#grab_promotionMissionInfo#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PromotionDetail";
    (match _promotionBuddyInfo with None -> () | Some _v -> 
      oprot#writeFieldBegin("promotionBuddyInfo",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _promotionInstallInfo with None -> () | Some _v -> 
      oprot#writeFieldBegin("promotionInstallInfo",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _promotionMissionInfo with None -> () | Some _v -> 
      oprot#writeFieldBegin("promotionMissionInfo",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_promotionDetail (iprot : Protocol.t) =
  let _str228 = new promotionDetail in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t229,_id230) = iprot#readFieldBegin in
        if _t229 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id230 with 
          | 1 -> (if _t229 = Protocol.T_STRUCT then
              _str228#set_promotionBuddyInfo (read_promotionBuddyInfo iprot)
            else
              iprot#skip _t229)
          | 2 -> (if _t229 = Protocol.T_STRUCT then
              _str228#set_promotionInstallInfo (read_promotionInstallInfo iprot)
            else
              iprot#skip _t229)
          | 3 -> (if _t229 = Protocol.T_STRUCT then
              _str228#set_promotionMissionInfo (read_promotionMissionInfo iprot)
            else
              iprot#skip _t229)
          | _ -> iprot#skip _t229);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str228

class promotionInfo =
object (self)
  val mutable _promotionType : PromotionType.t option = None
  method get_promotionType = _promotionType
  method grab_promotionType = match _promotionType with None->raise (Field_empty "promotionInfo.promotionType") | Some _x232 -> _x232
  method set_promotionType _x232 = _promotionType <- Some _x232
  method unset_promotionType = _promotionType <- None
  method reset_promotionType = _promotionType <- None

  val mutable _buddyInfo : promotionBuddyInfo option = None
  method get_buddyInfo = _buddyInfo
  method grab_buddyInfo = match _buddyInfo with None->raise (Field_empty "promotionInfo.buddyInfo") | Some _x233 -> _x233
  method set_buddyInfo _x233 = _buddyInfo <- Some _x233
  method unset_buddyInfo = _buddyInfo <- None
  method reset_buddyInfo = _buddyInfo <- None

  val mutable _promotionDetail : promotionDetail option = None
  method get_promotionDetail = _promotionDetail
  method grab_promotionDetail = match _promotionDetail with None->raise (Field_empty "promotionInfo.promotionDetail") | Some _x234 -> _x234
  method set_promotionDetail _x234 = _promotionDetail <- Some _x234
  method unset_promotionDetail = _promotionDetail <- None
  method reset_promotionDetail = _promotionDetail <- None

  method copy =
      let _new = Oo.copy self in
      if _buddyInfo <> None then
        _new#set_buddyInfo self#grab_buddyInfo#copy;
      if _promotionDetail <> None then
        _new#set_promotionDetail self#grab_promotionDetail#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PromotionInfo";
    (match _promotionType with None -> () | Some _v -> 
      oprot#writeFieldBegin("promotionType",Protocol.T_I32,1);
      oprot#writeI32(PromotionType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _promotionDetail with None -> () | Some _v -> 
      oprot#writeFieldBegin("promotionDetail",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _buddyInfo with None -> () | Some _v -> 
      oprot#writeFieldBegin("buddyInfo",Protocol.T_STRUCT,51);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_promotionInfo (iprot : Protocol.t) =
  let _str237 = new promotionInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t238,_id239) = iprot#readFieldBegin in
        if _t238 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id239 with 
          | 1 -> (if _t238 = Protocol.T_I32 then
              _str237#set_promotionType (PromotionType.of_i iprot#readI32)
            else
              iprot#skip _t238)
          | 51 -> (if _t238 = Protocol.T_STRUCT then
              _str237#set_buddyInfo (read_promotionBuddyInfo iprot)
            else
              iprot#skip _t238)
          | 2 -> (if _t238 = Protocol.T_STRUCT then
              _str237#set_promotionDetail (read_promotionDetail iprot)
            else
              iprot#skip _t238)
          | _ -> iprot#skip _t238);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str237

class stickerProperty =
object (self)
  val mutable _hasAnimation : bool option = None
  method get_hasAnimation = _hasAnimation
  method grab_hasAnimation = match _hasAnimation with None->raise (Field_empty "stickerProperty.hasAnimation") | Some _x241 -> _x241
  method set_hasAnimation _x241 = _hasAnimation <- Some _x241
  method unset_hasAnimation = _hasAnimation <- None
  method reset_hasAnimation = _hasAnimation <- None

  val mutable _hasSound : bool option = None
  method get_hasSound = _hasSound
  method grab_hasSound = match _hasSound with None->raise (Field_empty "stickerProperty.hasSound") | Some _x242 -> _x242
  method set_hasSound _x242 = _hasSound <- Some _x242
  method unset_hasSound = _hasSound <- None
  method reset_hasSound = _hasSound <- None

  val mutable _hasPopup : bool option = None
  method get_hasPopup = _hasPopup
  method grab_hasPopup = match _hasPopup with None->raise (Field_empty "stickerProperty.hasPopup") | Some _x243 -> _x243
  method set_hasPopup _x243 = _hasPopup <- Some _x243
  method unset_hasPopup = _hasPopup <- None
  method reset_hasPopup = _hasPopup <- None

  val mutable _stickerResourceType : SRType.t option = None
  method get_stickerResourceType = _stickerResourceType
  method grab_stickerResourceType = match _stickerResourceType with None->raise (Field_empty "stickerProperty.stickerResourceType") | Some _x244 -> _x244
  method set_stickerResourceType _x244 = _stickerResourceType <- Some _x244
  method unset_stickerResourceType = _stickerResourceType <- None
  method reset_stickerResourceType = _stickerResourceType <- None

  val mutable _stickerOptions : string option = None
  method get_stickerOptions = _stickerOptions
  method grab_stickerOptions = match _stickerOptions with None->raise (Field_empty "stickerProperty.stickerOptions") | Some _x245 -> _x245
  method set_stickerOptions _x245 = _stickerOptions <- Some _x245
  method unset_stickerOptions = _stickerOptions <- None
  method reset_stickerOptions = _stickerOptions <- None

  val mutable _compactStickerOptions : Int32.t option = None
  method get_compactStickerOptions = _compactStickerOptions
  method grab_compactStickerOptions = match _compactStickerOptions with None->raise (Field_empty "stickerProperty.compactStickerOptions") | Some _x246 -> _x246
  method set_compactStickerOptions _x246 = _compactStickerOptions <- Some _x246
  method unset_compactStickerOptions = _compactStickerOptions <- None
  method reset_compactStickerOptions = _compactStickerOptions <- None

  val mutable _stickerHash : string option = None
  method get_stickerHash = _stickerHash
  method grab_stickerHash = match _stickerHash with None->raise (Field_empty "stickerProperty.stickerHash") | Some _x247 -> _x247
  method set_stickerHash _x247 = _stickerHash <- Some _x247
  method unset_stickerHash = _stickerHash <- None
  method reset_stickerHash = _stickerHash <- None

  val mutable _stickerIds : (string,bool) Hashtbl.t option = None
  method get_stickerIds = _stickerIds
  method grab_stickerIds = match _stickerIds with None->raise (Field_empty "stickerProperty.stickerIds") | Some _x248 -> _x248
  method set_stickerIds _x248 = _stickerIds <- Some _x248
  method unset_stickerIds = _stickerIds <- None
  method reset_stickerIds = _stickerIds <- None

  method copy =
      let _new = Oo.copy self in
      if _stickerIds <> None then
        _new#set_stickerIds (Hashtbl.copy self#grab_stickerIds);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "StickerProperty";
    (match _hasAnimation with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasAnimation",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _hasSound with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasSound",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _hasPopup with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasPopup",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _stickerResourceType with None -> () | Some _v -> 
      oprot#writeFieldBegin("stickerResourceType",Protocol.T_I32,4);
      oprot#writeI32(SRType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _stickerOptions with None -> () | Some _v -> 
      oprot#writeFieldBegin("stickerOptions",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _compactStickerOptions with None -> () | Some _v -> 
      oprot#writeFieldBegin("compactStickerOptions",Protocol.T_I32,6);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _stickerHash with None -> () | Some _v -> 
      oprot#writeFieldBegin("stickerHash",Protocol.T_STRING,7);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _stickerIds with None -> () | Some _v -> 
      oprot#writeFieldBegin("stickerIds",Protocol.T_SET,8);
      oprot#writeSetBegin(Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _iter251 -> fun _ ->         oprot#writeString(_iter251);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_stickerProperty (iprot : Protocol.t) =
  let _str252 = new stickerProperty in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t253,_id254) = iprot#readFieldBegin in
        if _t253 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id254 with 
          | 1 -> (if _t253 = Protocol.T_BOOL then
              _str252#set_hasAnimation iprot#readBool
            else
              iprot#skip _t253)
          | 2 -> (if _t253 = Protocol.T_BOOL then
              _str252#set_hasSound iprot#readBool
            else
              iprot#skip _t253)
          | 3 -> (if _t253 = Protocol.T_BOOL then
              _str252#set_hasPopup iprot#readBool
            else
              iprot#skip _t253)
          | 4 -> (if _t253 = Protocol.T_I32 then
              _str252#set_stickerResourceType (SRType.of_i iprot#readI32)
            else
              iprot#skip _t253)
          | 5 -> (if _t253 = Protocol.T_STRING then
              _str252#set_stickerOptions iprot#readString
            else
              iprot#skip _t253)
          | 6 -> (if _t253 = Protocol.T_I32 then
              _str252#set_compactStickerOptions iprot#readI32
            else
              iprot#skip _t253)
          | 7 -> (if _t253 = Protocol.T_STRING then
              _str252#set_stickerHash iprot#readString
            else
              iprot#skip _t253)
          | 8 -> (if _t253 = Protocol.T_SET then
              _str252#set_stickerIds 
                (let (_etype258,_size255) = iprot#readSetBegin in
                let _con259 = Hashtbl.create _size255 in
                  for i = 1 to _size255 do
                    Hashtbl.add _con259 iprot#readString true
                  done; iprot#readSetEnd; _con259)
            else
              iprot#skip _t253)
          | _ -> iprot#skip _t253);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str252

class themeProperty =
object (self)
  val mutable _thumbnailUrl : string option = None
  method get_thumbnailUrl = _thumbnailUrl
  method grab_thumbnailUrl = match _thumbnailUrl with None->raise (Field_empty "themeProperty.thumbnailUrl") | Some _x261 -> _x261
  method set_thumbnailUrl _x261 = _thumbnailUrl <- Some _x261
  method unset_thumbnailUrl = _thumbnailUrl <- None
  method reset_thumbnailUrl = _thumbnailUrl <- None

  val mutable _themeResourceType : TRType.t option = None
  method get_themeResourceType = _themeResourceType
  method grab_themeResourceType = match _themeResourceType with None->raise (Field_empty "themeProperty.themeResourceType") | Some _x262 -> _x262
  method set_themeResourceType _x262 = _themeResourceType <- Some _x262
  method unset_themeResourceType = _themeResourceType <- None
  method reset_themeResourceType = _themeResourceType <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ThemeProperty";
    (match _thumbnailUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("thumbnailUrl",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _themeResourceType with None -> () | Some _v -> 
      oprot#writeFieldBegin("themeResourceType",Protocol.T_I32,2);
      oprot#writeI32(TRType.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_themeProperty (iprot : Protocol.t) =
  let _str265 = new themeProperty in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t266,_id267) = iprot#readFieldBegin in
        if _t266 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id267 with 
          | 1 -> (if _t266 = Protocol.T_STRING then
              _str265#set_thumbnailUrl iprot#readString
            else
              iprot#skip _t266)
          | 2 -> (if _t266 = Protocol.T_I32 then
              _str265#set_themeResourceType (TRType.of_i iprot#readI32)
            else
              iprot#skip _t266)
          | _ -> iprot#skip _t266);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str265

class sticonProperty =
object (self)
  val mutable _sticonIds : (string,bool) Hashtbl.t option = None
  method get_sticonIds = _sticonIds
  method grab_sticonIds = match _sticonIds with None->raise (Field_empty "sticonProperty.sticonIds") | Some _x269 -> _x269
  method set_sticonIds _x269 = _sticonIds <- Some _x269
  method unset_sticonIds = _sticonIds <- None
  method reset_sticonIds = _sticonIds <- None

  method copy =
      let _new = Oo.copy self in
      if _sticonIds <> None then
        _new#set_sticonIds (Hashtbl.copy self#grab_sticonIds);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SticonProperty";
    (match _sticonIds with None -> () | Some _v -> 
      oprot#writeFieldBegin("sticonIds",Protocol.T_SET,1);
      oprot#writeSetBegin(Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _iter272 -> fun _ ->         oprot#writeString(_iter272);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_sticonProperty (iprot : Protocol.t) =
  let _str273 = new sticonProperty in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t274,_id275) = iprot#readFieldBegin in
        if _t274 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id275 with 
          | 1 -> (if _t274 = Protocol.T_SET then
              _str273#set_sticonIds 
                (let (_etype279,_size276) = iprot#readSetBegin in
                let _con280 = Hashtbl.create _size276 in
                  for i = 1 to _size276 do
                    Hashtbl.add _con280 iprot#readString true
                  done; iprot#readSetEnd; _con280)
            else
              iprot#skip _t274)
          | _ -> iprot#skip _t274);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str273

class productProperty =
object (self)
  val mutable _stickerProperty : stickerProperty option = None
  method get_stickerProperty = _stickerProperty
  method grab_stickerProperty = match _stickerProperty with None->raise (Field_empty "productProperty.stickerProperty") | Some _x282 -> _x282
  method set_stickerProperty _x282 = _stickerProperty <- Some _x282
  method unset_stickerProperty = _stickerProperty <- None
  method reset_stickerProperty = _stickerProperty <- None

  val mutable _sticonProperty : sticonProperty option = None
  method get_sticonProperty = _sticonProperty
  method grab_sticonProperty = match _sticonProperty with None->raise (Field_empty "productProperty.sticonProperty") | Some _x283 -> _x283
  method set_sticonProperty _x283 = _sticonProperty <- Some _x283
  method unset_sticonProperty = _sticonProperty <- None
  method reset_sticonProperty = _sticonProperty <- None

  val mutable _themeProperty : themeProperty option = None
  method get_themeProperty = _themeProperty
  method grab_themeProperty = match _themeProperty with None->raise (Field_empty "productProperty.themeProperty") | Some _x284 -> _x284
  method set_themeProperty _x284 = _themeProperty <- Some _x284
  method unset_themeProperty = _themeProperty <- None
  method reset_themeProperty = _themeProperty <- None

  method copy =
      let _new = Oo.copy self in
      if _stickerProperty <> None then
        _new#set_stickerProperty self#grab_stickerProperty#copy;
      if _sticonProperty <> None then
        _new#set_sticonProperty self#grab_sticonProperty#copy;
      if _themeProperty <> None then
        _new#set_themeProperty self#grab_themeProperty#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ProductProperty";
    (match _stickerProperty with None -> () | Some _v -> 
      oprot#writeFieldBegin("stickerProperty",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _themeProperty with None -> () | Some _v -> 
      oprot#writeFieldBegin("themeProperty",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _sticonProperty with None -> () | Some _v -> 
      oprot#writeFieldBegin("sticonProperty",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_productProperty (iprot : Protocol.t) =
  let _str287 = new productProperty in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t288,_id289) = iprot#readFieldBegin in
        if _t288 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id289 with 
          | 1 -> (if _t288 = Protocol.T_STRUCT then
              _str287#set_stickerProperty (read_stickerProperty iprot)
            else
              iprot#skip _t288)
          | 3 -> (if _t288 = Protocol.T_STRUCT then
              _str287#set_sticonProperty (read_sticonProperty iprot)
            else
              iprot#skip _t288)
          | 2 -> (if _t288 = Protocol.T_STRUCT then
              _str287#set_themeProperty (read_themeProperty iprot)
            else
              iprot#skip _t288)
          | _ -> iprot#skip _t288);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str287

class productSearchSummary =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "productSearchSummary.id") | Some _x291 -> _x291
  method set_id _x291 = _id <- Some _x291
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _type : PType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "productSearchSummary.type") | Some _x292 -> _x292
  method set_type _x292 = _type <- Some _x292
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "productSearchSummary.name") | Some _x293 -> _x293
  method set_name _x293 = _name <- Some _x293
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _author : string option = None
  method get_author = _author
  method grab_author = match _author with None->raise (Field_empty "productSearchSummary.author") | Some _x294 -> _x294
  method set_author _x294 = _author <- Some _x294
  method unset_author = _author <- None
  method reset_author = _author <- None

  val mutable _promotionInfo : promotionInfo option = None
  method get_promotionInfo = _promotionInfo
  method grab_promotionInfo = match _promotionInfo with None->raise (Field_empty "productSearchSummary.promotionInfo") | Some _x295 -> _x295
  method set_promotionInfo _x295 = _promotionInfo <- Some _x295
  method unset_promotionInfo = _promotionInfo <- None
  method reset_promotionInfo = _promotionInfo <- None

  val mutable _version : Int64.t option = None
  method get_version = _version
  method grab_version = match _version with None->raise (Field_empty "productSearchSummary.version") | Some _x296 -> _x296
  method set_version _x296 = _version <- Some _x296
  method unset_version = _version <- None
  method reset_version = _version <- None

  val mutable _newFlag : bool option = None
  method get_newFlag = _newFlag
  method grab_newFlag = match _newFlag with None->raise (Field_empty "productSearchSummary.newFlag") | Some _x297 -> _x297
  method set_newFlag _x297 = _newFlag <- Some _x297
  method unset_newFlag = _newFlag <- None
  method reset_newFlag = _newFlag <- None

  val mutable _priceTier : Int32.t option = None
  method get_priceTier = _priceTier
  method grab_priceTier = match _priceTier with None->raise (Field_empty "productSearchSummary.priceTier") | Some _x298 -> _x298
  method set_priceTier _x298 = _priceTier <- Some _x298
  method unset_priceTier = _priceTier <- None
  method reset_priceTier = _priceTier <- None

  val mutable _priceInLineCoin : string option = None
  method get_priceInLineCoin = _priceInLineCoin
  method grab_priceInLineCoin = match _priceInLineCoin with None->raise (Field_empty "productSearchSummary.priceInLineCoin") | Some _x299 -> _x299
  method set_priceInLineCoin _x299 = _priceInLineCoin <- Some _x299
  method unset_priceInLineCoin = _priceInLineCoin <- None
  method reset_priceInLineCoin = _priceInLineCoin <- None

  val mutable _property : productProperty option = None
  method get_property = _property
  method grab_property = match _property with None->raise (Field_empty "productSearchSummary.property") | Some _x300 -> _x300
  method set_property _x300 = _property <- Some _x300
  method unset_property = _property <- None
  method reset_property = _property <- None

  val mutable _subType : SubType.t option = None
  method get_subType = _subType
  method grab_subType = match _subType with None->raise (Field_empty "productSearchSummary.subType") | Some _x301 -> _x301
  method set_subType _x301 = _subType <- Some _x301
  method unset_subType = _subType <- None
  method reset_subType = _subType <- None

  val mutable _onSale : bool option = None
  method get_onSale = _onSale
  method grab_onSale = match _onSale with None->raise (Field_empty "productSearchSummary.onSale") | Some _x302 -> _x302
  method set_onSale _x302 = _onSale <- Some _x302
  method unset_onSale = _onSale <- None
  method reset_onSale = _onSale <- None

  val mutable _availableForPresent : bool option = None
  method get_availableForPresent = _availableForPresent
  method grab_availableForPresent = match _availableForPresent with None->raise (Field_empty "productSearchSummary.availableForPresent") | Some _x303 -> _x303
  method set_availableForPresent _x303 = _availableForPresent <- Some _x303
  method unset_availableForPresent = _availableForPresent <- None
  method reset_availableForPresent = _availableForPresent <- None

  val mutable _availableForPurchase : bool option = None
  method get_availableForPurchase = _availableForPurchase
  method grab_availableForPurchase = match _availableForPurchase with None->raise (Field_empty "productSearchSummary.availableForPurchase") | Some _x304 -> _x304
  method set_availableForPurchase _x304 = _availableForPurchase <- Some _x304
  method unset_availableForPurchase = _availableForPurchase <- None
  method reset_availableForPurchase = _availableForPurchase <- None

  val mutable _validDays : Int32.t option = None
  method get_validDays = _validDays
  method grab_validDays = match _validDays with None->raise (Field_empty "productSearchSummary.validDays") | Some _x305 -> _x305
  method set_validDays _x305 = _validDays <- Some _x305
  method unset_validDays = _validDays <- None
  method reset_validDays = _validDays <- None

  val mutable _authorId : string option = None
  method get_authorId = _authorId
  method grab_authorId = match _authorId with None->raise (Field_empty "productSearchSummary.authorId") | Some _x306 -> _x306
  method set_authorId _x306 = _authorId <- Some _x306
  method unset_authorId = _authorId <- None
  method reset_authorId = _authorId <- None

  val mutable _saleFlag : bool option = None
  method get_saleFlag = _saleFlag
  method grab_saleFlag = match _saleFlag with None->raise (Field_empty "productSearchSummary.saleFlag") | Some _x307 -> _x307
  method set_saleFlag _x307 = _saleFlag <- Some _x307
  method unset_saleFlag = _saleFlag <- None
  method reset_saleFlag = _saleFlag <- None

  method copy =
      let _new = Oo.copy self in
      if _promotionInfo <> None then
        _new#set_promotionInfo self#grab_promotionInfo#copy;
      if _property <> None then
        _new#set_property self#grab_property#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ProductSearchSummary";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,2);
      oprot#writeI32(PType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _author with None -> () | Some _v -> 
      oprot#writeFieldBegin("author",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _promotionInfo with None -> () | Some _v -> 
      oprot#writeFieldBegin("promotionInfo",Protocol.T_STRUCT,5);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _version with None -> () | Some _v -> 
      oprot#writeFieldBegin("version",Protocol.T_I64,6);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _newFlag with None -> () | Some _v -> 
      oprot#writeFieldBegin("newFlag",Protocol.T_BOOL,7);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _priceTier with None -> () | Some _v -> 
      oprot#writeFieldBegin("priceTier",Protocol.T_I32,8);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _priceInLineCoin with None -> () | Some _v -> 
      oprot#writeFieldBegin("priceInLineCoin",Protocol.T_STRING,9);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _property with None -> () | Some _v -> 
      oprot#writeFieldBegin("property",Protocol.T_STRUCT,10);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _subType with None -> () | Some _v -> 
      oprot#writeFieldBegin("subType",Protocol.T_I32,11);
      oprot#writeI32(SubType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _onSale with None -> () | Some _v -> 
      oprot#writeFieldBegin("onSale",Protocol.T_BOOL,12);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _availableForPresent with None -> () | Some _v -> 
      oprot#writeFieldBegin("availableForPresent",Protocol.T_BOOL,13);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _availableForPurchase with None -> () | Some _v -> 
      oprot#writeFieldBegin("availableForPurchase",Protocol.T_BOOL,14);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _validDays with None -> () | Some _v -> 
      oprot#writeFieldBegin("validDays",Protocol.T_I32,15);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _authorId with None -> () | Some _v -> 
      oprot#writeFieldBegin("authorId",Protocol.T_STRING,16);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _saleFlag with None -> () | Some _v -> 
      oprot#writeFieldBegin("saleFlag",Protocol.T_BOOL,17);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_productSearchSummary (iprot : Protocol.t) =
  let _str310 = new productSearchSummary in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t311,_id312) = iprot#readFieldBegin in
        if _t311 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id312 with 
          | 1 -> (if _t311 = Protocol.T_STRING then
              _str310#set_id iprot#readString
            else
              iprot#skip _t311)
          | 2 -> (if _t311 = Protocol.T_I32 then
              _str310#set_type (PType.of_i iprot#readI32)
            else
              iprot#skip _t311)
          | 3 -> (if _t311 = Protocol.T_STRING then
              _str310#set_name iprot#readString
            else
              iprot#skip _t311)
          | 4 -> (if _t311 = Protocol.T_STRING then
              _str310#set_author iprot#readString
            else
              iprot#skip _t311)
          | 5 -> (if _t311 = Protocol.T_STRUCT then
              _str310#set_promotionInfo (read_promotionInfo iprot)
            else
              iprot#skip _t311)
          | 6 -> (if _t311 = Protocol.T_I64 then
              _str310#set_version iprot#readI64
            else
              iprot#skip _t311)
          | 7 -> (if _t311 = Protocol.T_BOOL then
              _str310#set_newFlag iprot#readBool
            else
              iprot#skip _t311)
          | 8 -> (if _t311 = Protocol.T_I32 then
              _str310#set_priceTier iprot#readI32
            else
              iprot#skip _t311)
          | 9 -> (if _t311 = Protocol.T_STRING then
              _str310#set_priceInLineCoin iprot#readString
            else
              iprot#skip _t311)
          | 10 -> (if _t311 = Protocol.T_STRUCT then
              _str310#set_property (read_productProperty iprot)
            else
              iprot#skip _t311)
          | 11 -> (if _t311 = Protocol.T_I32 then
              _str310#set_subType (SubType.of_i iprot#readI32)
            else
              iprot#skip _t311)
          | 12 -> (if _t311 = Protocol.T_BOOL then
              _str310#set_onSale iprot#readBool
            else
              iprot#skip _t311)
          | 13 -> (if _t311 = Protocol.T_BOOL then
              _str310#set_availableForPresent iprot#readBool
            else
              iprot#skip _t311)
          | 14 -> (if _t311 = Protocol.T_BOOL then
              _str310#set_availableForPurchase iprot#readBool
            else
              iprot#skip _t311)
          | 15 -> (if _t311 = Protocol.T_I32 then
              _str310#set_validDays iprot#readI32
            else
              iprot#skip _t311)
          | 16 -> (if _t311 = Protocol.T_STRING then
              _str310#set_authorId iprot#readString
            else
              iprot#skip _t311)
          | 17 -> (if _t311 = Protocol.T_BOOL then
              _str310#set_saleFlag iprot#readBool
            else
              iprot#skip _t311)
          | _ -> iprot#skip _t311);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str310

class serviceItem =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "serviceItem.id") | Some _x314 -> _x314
  method set_id _x314 = _id <- Some _x314
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "serviceItem.title") | Some _x315 -> _x315
  method set_title _x315 = _title <- Some _x315
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _g : Int32.t option = None
  method get_g = _g
  method grab_g = match _g with None->raise (Field_empty "serviceItem.g") | Some _x316 -> _x316
  method set_g _x316 = _g <- Some _x316
  method unset_g = _g <- None
  method reset_g = _g <- None

  val mutable _subType : SubType.t option = None
  method get_subType = _subType
  method grab_subType = match _subType with None->raise (Field_empty "serviceItem.subType") | Some _x317 -> _x317
  method set_subType _x317 = _subType <- Some _x317
  method unset_subType = _subType <- None
  method reset_subType = _subType <- None

  val mutable _appId : string option = None
  method get_appId = _appId
  method grab_appId = match _appId with None->raise (Field_empty "serviceItem.appId") | Some _x318 -> _x318
  method set_appId _x318 = _appId <- Some _x318
  method unset_appId = _appId <- None
  method reset_appId = _appId <- None

  val mutable _channelId : string option = None
  method get_channelId = _channelId
  method grab_channelId = match _channelId with None->raise (Field_empty "serviceItem.channelId") | Some _x319 -> _x319
  method set_channelId _x319 = _channelId <- Some _x319
  method unset_channelId = _channelId <- None
  method reset_channelId = _channelId <- None

  val mutable _badge : string option = None
  method get_badge = _badge
  method grab_badge = match _badge with None->raise (Field_empty "serviceItem.badge") | Some _x320 -> _x320
  method set_badge _x320 = _badge <- Some _x320
  method unset_badge = _badge <- None
  method reset_badge = _badge <- None

  val mutable _iconUrl : string option = None
  method get_iconUrl = _iconUrl
  method grab_iconUrl = match _iconUrl with None->raise (Field_empty "serviceItem.iconUrl") | Some _x321 -> _x321
  method set_iconUrl _x321 = _iconUrl <- Some _x321
  method unset_iconUrl = _iconUrl <- None
  method reset_iconUrl = _iconUrl <- None

  val mutable _downloadUrl : string option = None
  method get_downloadUrl = _downloadUrl
  method grab_downloadUrl = match _downloadUrl with None->raise (Field_empty "serviceItem.downloadUrl") | Some _x322 -> _x322
  method set_downloadUrl _x322 = _downloadUrl <- Some _x322
  method unset_downloadUrl = _downloadUrl <- None
  method reset_downloadUrl = _downloadUrl <- None

  val mutable _launchScheme : string option = None
  method get_launchScheme = _launchScheme
  method grab_launchScheme = match _launchScheme with None->raise (Field_empty "serviceItem.launchScheme") | Some _x323 -> _x323
  method set_launchScheme _x323 = _launchScheme <- Some _x323
  method unset_launchScheme = _launchScheme <- None
  method reset_launchScheme = _launchScheme <- None

  val mutable _iconTint : bool option = None
  method get_iconTint = _iconTint
  method grab_iconTint = match _iconTint with None->raise (Field_empty "serviceItem.iconTint") | Some _x324 -> _x324
  method set_iconTint _x324 = _iconTint <- Some _x324
  method unset_iconTint = _iconTint <- None
  method reset_iconTint = _iconTint <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ServiceItem";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _g with None -> () | Some _v -> 
      oprot#writeFieldBegin("g",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _subType with None -> () | Some _v -> 
      oprot#writeFieldBegin("subType",Protocol.T_I32,4);
      oprot#writeI32(SubType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _appId with None -> () | Some _v -> 
      oprot#writeFieldBegin("appId",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _channelId with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelId",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _badge with None -> () | Some _v -> 
      oprot#writeFieldBegin("badge",Protocol.T_STRING,7);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _iconUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("iconUrl",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _downloadUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("downloadUrl",Protocol.T_STRING,9);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _launchScheme with None -> () | Some _v -> 
      oprot#writeFieldBegin("launchScheme",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _iconTint with None -> () | Some _v -> 
      oprot#writeFieldBegin("iconTint",Protocol.T_BOOL,11);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_serviceItem (iprot : Protocol.t) =
  let _str327 = new serviceItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t328,_id329) = iprot#readFieldBegin in
        if _t328 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id329 with 
          | 1 -> (if _t328 = Protocol.T_STRING then
              _str327#set_id iprot#readString
            else
              iprot#skip _t328)
          | 2 -> (if _t328 = Protocol.T_STRING then
              _str327#set_title iprot#readString
            else
              iprot#skip _t328)
          | 3 -> (if _t328 = Protocol.T_I32 then
              _str327#set_g iprot#readI32
            else
              iprot#skip _t328)
          | 4 -> (if _t328 = Protocol.T_I32 then
              _str327#set_subType (SubType.of_i iprot#readI32)
            else
              iprot#skip _t328)
          | 5 -> (if _t328 = Protocol.T_STRING then
              _str327#set_appId iprot#readString
            else
              iprot#skip _t328)
          | 6 -> (if _t328 = Protocol.T_STRING then
              _str327#set_channelId iprot#readString
            else
              iprot#skip _t328)
          | 7 -> (if _t328 = Protocol.T_STRING then
              _str327#set_badge iprot#readString
            else
              iprot#skip _t328)
          | 8 -> (if _t328 = Protocol.T_STRING then
              _str327#set_iconUrl iprot#readString
            else
              iprot#skip _t328)
          | 9 -> (if _t328 = Protocol.T_STRING then
              _str327#set_downloadUrl iprot#readString
            else
              iprot#skip _t328)
          | 10 -> (if _t328 = Protocol.T_STRING then
              _str327#set_launchScheme iprot#readString
            else
              iprot#skip _t328)
          | 11 -> (if _t328 = Protocol.T_BOOL then
              _str327#set_iconTint iprot#readBool
            else
              iprot#skip _t328)
          | _ -> iprot#skip _t328);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str327

class additionalInfoItem =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "additionalInfoItem.id") | Some _x331 -> _x331
  method set_id _x331 = _id <- Some _x331
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _g : Int32.t option = None
  method get_g = _g
  method grab_g = match _g with None->raise (Field_empty "additionalInfoItem.g") | Some _x332 -> _x332
  method set_g _x332 = _g <- Some _x332
  method unset_g = _g <- None
  method reset_g = _g <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "additionalInfoItem.title") | Some _x333 -> _x333
  method set_title _x333 = _title <- Some _x333
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _descr : string option = None
  method get_descr = _descr
  method grab_descr = match _descr with None->raise (Field_empty "additionalInfoItem.descr") | Some _x334 -> _x334
  method set_descr _x334 = _descr <- Some _x334
  method unset_descr = _descr <- None
  method reset_descr = _descr <- None

  val mutable _iconUrl : string option = None
  method get_iconUrl = _iconUrl
  method grab_iconUrl = match _iconUrl with None->raise (Field_empty "additionalInfoItem.iconUrl") | Some _x335 -> _x335
  method set_iconUrl _x335 = _iconUrl <- Some _x335
  method unset_iconUrl = _iconUrl <- None
  method reset_iconUrl = _iconUrl <- None

  val mutable _link : string option = None
  method get_link = _link
  method grab_link = match _link with None->raise (Field_empty "additionalInfoItem.link") | Some _x336 -> _x336
  method set_link _x336 = _link <- Some _x336
  method unset_link = _link <- None
  method reset_link = _link <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "AdditionalInfoItem";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _g with None -> () | Some _v -> 
      oprot#writeFieldBegin("g",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _descr with None -> () | Some _v -> 
      oprot#writeFieldBegin("descr",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _iconUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("iconUrl",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _link with None -> () | Some _v -> 
      oprot#writeFieldBegin("link",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_additionalInfoItem (iprot : Protocol.t) =
  let _str339 = new additionalInfoItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t340,_id341) = iprot#readFieldBegin in
        if _t340 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id341 with 
          | 1 -> (if _t340 = Protocol.T_STRING then
              _str339#set_id iprot#readString
            else
              iprot#skip _t340)
          | 2 -> (if _t340 = Protocol.T_I32 then
              _str339#set_g iprot#readI32
            else
              iprot#skip _t340)
          | 3 -> (if _t340 = Protocol.T_STRING then
              _str339#set_title iprot#readString
            else
              iprot#skip _t340)
          | 4 -> (if _t340 = Protocol.T_STRING then
              _str339#set_descr iprot#readString
            else
              iprot#skip _t340)
          | 5 -> (if _t340 = Protocol.T_STRING then
              _str339#set_iconUrl iprot#readString
            else
              iprot#skip _t340)
          | 6 -> (if _t340 = Protocol.T_STRING then
              _str339#set_link iprot#readString
            else
              iprot#skip _t340)
          | _ -> iprot#skip _t340);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str339

class yellowpageItem =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "yellowpageItem.id") | Some _x343 -> _x343
  method set_id _x343 = _id <- Some _x343
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "yellowpageItem.mid") | Some _x344 -> _x344
  method set_mid _x344 = _mid <- Some _x344
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "yellowpageItem.name") | Some _x345 -> _x345
  method set_name _x345 = _name <- Some _x345
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _address : string option = None
  method get_address = _address
  method grab_address = match _address with None->raise (Field_empty "yellowpageItem.address") | Some _x346 -> _x346
  method set_address _x346 = _address <- Some _x346
  method unset_address = _address <- None
  method reset_address = _address <- None

  val mutable _latitude : float option = None
  method get_latitude = _latitude
  method grab_latitude = match _latitude with None->raise (Field_empty "yellowpageItem.latitude") | Some _x347 -> _x347
  method set_latitude _x347 = _latitude <- Some _x347
  method unset_latitude = _latitude <- None
  method reset_latitude = _latitude <- None

  val mutable _longitude : float option = None
  method get_longitude = _longitude
  method grab_longitude = match _longitude with None->raise (Field_empty "yellowpageItem.longitude") | Some _x348 -> _x348
  method set_longitude _x348 = _longitude <- Some _x348
  method unset_longitude = _longitude <- None
  method reset_longitude = _longitude <- None

  val mutable _distance : float option = None
  method get_distance = _distance
  method grab_distance = match _distance with None->raise (Field_empty "yellowpageItem.distance") | Some _x349 -> _x349
  method set_distance _x349 = _distance <- Some _x349
  method unset_distance = _distance <- None
  method reset_distance = _distance <- None

  val mutable _canFreeCall : bool option = None
  method get_canFreeCall = _canFreeCall
  method grab_canFreeCall = match _canFreeCall with None->raise (Field_empty "yellowpageItem.canFreeCall") | Some _x350 -> _x350
  method set_canFreeCall _x350 = _canFreeCall <- Some _x350
  method unset_canFreeCall = _canFreeCall <- None
  method reset_canFreeCall = _canFreeCall <- None

  val mutable _k : Int32.t option = None
  method get_k = _k
  method grab_k = match _k with None->raise (Field_empty "yellowpageItem.k") | Some _x351 -> _x351
  method set_k _x351 = _k <- Some _x351
  method unset_k = _k <- None
  method reset_k = _k <- None

  val mutable _phoneNumber : string option = None
  method get_phoneNumber = _phoneNumber
  method grab_phoneNumber = match _phoneNumber with None->raise (Field_empty "yellowpageItem.phoneNumber") | Some _x352 -> _x352
  method set_phoneNumber _x352 = _phoneNumber <- Some _x352
  method unset_phoneNumber = _phoneNumber <- None
  method reset_phoneNumber = _phoneNumber <- None

  val mutable _cat : Int32.t option = None
  method get_cat = _cat
  method grab_cat = match _cat with None->raise (Field_empty "yellowpageItem.cat") | Some _x353 -> _x353
  method set_cat _x353 = _cat <- Some _x353
  method unset_cat = _cat <- None
  method reset_cat = _cat <- None

  val mutable _categoryIcon : Int32.t option = None
  method get_categoryIcon = _categoryIcon
  method grab_categoryIcon = match _categoryIcon with None->raise (Field_empty "yellowpageItem.categoryIcon") | Some _x354 -> _x354
  method set_categoryIcon _x354 = _categoryIcon <- Some _x354
  method unset_categoryIcon = _categoryIcon <- None
  method reset_categoryIcon = _categoryIcon <- None

  val mutable _additionalInfo : additionalInfoItem list option = None
  method get_additionalInfo = _additionalInfo
  method grab_additionalInfo = match _additionalInfo with None->raise (Field_empty "yellowpageItem.additionalInfo") | Some _x355 -> _x355
  method set_additionalInfo _x355 = _additionalInfo <- Some _x355
  method unset_additionalInfo = _additionalInfo <- None
  method reset_additionalInfo = _additionalInfo <- None

  method copy =
      let _new = Oo.copy self in
      if _additionalInfo <> None then
        _new#set_additionalInfo (List.map (fun x -> x#copy) self#grab_additionalInfo);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "YellowpageItem";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _address with None -> () | Some _v -> 
      oprot#writeFieldBegin("address",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _latitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("latitude",Protocol.T_DOUBLE,5);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _longitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("longitude",Protocol.T_DOUBLE,6);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _distance with None -> () | Some _v -> 
      oprot#writeFieldBegin("distance",Protocol.T_DOUBLE,7);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _canFreeCall with None -> () | Some _v -> 
      oprot#writeFieldBegin("canFreeCall",Protocol.T_BOOL,8);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _k with None -> () | Some _v -> 
      oprot#writeFieldBegin("k",Protocol.T_I32,9);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _phoneNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("phoneNumber",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _cat with None -> () | Some _v -> 
      oprot#writeFieldBegin("cat",Protocol.T_I32,11);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _categoryIcon with None -> () | Some _v -> 
      oprot#writeFieldBegin("categoryIcon",Protocol.T_I32,12);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _additionalInfo with None -> () | Some _v -> 
      oprot#writeFieldBegin("additionalInfo",Protocol.T_LIST,13);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter358 ->         _iter358#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_yellowpageItem (iprot : Protocol.t) =
  let _str359 = new yellowpageItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t360,_id361) = iprot#readFieldBegin in
        if _t360 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id361 with 
          | 1 -> (if _t360 = Protocol.T_STRING then
              _str359#set_id iprot#readString
            else
              iprot#skip _t360)
          | 2 -> (if _t360 = Protocol.T_STRING then
              _str359#set_mid iprot#readString
            else
              iprot#skip _t360)
          | 3 -> (if _t360 = Protocol.T_STRING then
              _str359#set_name iprot#readString
            else
              iprot#skip _t360)
          | 4 -> (if _t360 = Protocol.T_STRING then
              _str359#set_address iprot#readString
            else
              iprot#skip _t360)
          | 5 -> (if _t360 = Protocol.T_DOUBLE then
              _str359#set_latitude iprot#readDouble
            else
              iprot#skip _t360)
          | 6 -> (if _t360 = Protocol.T_DOUBLE then
              _str359#set_longitude iprot#readDouble
            else
              iprot#skip _t360)
          | 7 -> (if _t360 = Protocol.T_DOUBLE then
              _str359#set_distance iprot#readDouble
            else
              iprot#skip _t360)
          | 8 -> (if _t360 = Protocol.T_BOOL then
              _str359#set_canFreeCall iprot#readBool
            else
              iprot#skip _t360)
          | 9 -> (if _t360 = Protocol.T_I32 then
              _str359#set_k iprot#readI32
            else
              iprot#skip _t360)
          | 10 -> (if _t360 = Protocol.T_STRING then
              _str359#set_phoneNumber iprot#readString
            else
              iprot#skip _t360)
          | 11 -> (if _t360 = Protocol.T_I32 then
              _str359#set_cat iprot#readI32
            else
              iprot#skip _t360)
          | 12 -> (if _t360 = Protocol.T_I32 then
              _str359#set_categoryIcon iprot#readI32
            else
              iprot#skip _t360)
          | 13 -> (if _t360 = Protocol.T_LIST then
              _str359#set_additionalInfo 
                (let (_etype365,_size362) = iprot#readListBegin in
                  let _con366 = (Array.to_list (Array.init _size362 (fun _ -> (read_additionalInfoItem iprot)))) in
                    iprot#readListEnd; _con366)
            else
              iprot#skip _t360)
          | _ -> iprot#skip _t360);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str359

class buddySearchResult =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "buddySearchResult.mid") | Some _x368 -> _x368
  method set_mid _x368 = _mid <- Some _x368
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _displayName : string option = None
  method get_displayName = _displayName
  method grab_displayName = match _displayName with None->raise (Field_empty "buddySearchResult.displayName") | Some _x369 -> _x369
  method set_displayName _x369 = _displayName <- Some _x369
  method unset_displayName = _displayName <- None
  method reset_displayName = _displayName <- None

  val mutable _pictureStatus : string option = None
  method get_pictureStatus = _pictureStatus
  method grab_pictureStatus = match _pictureStatus with None->raise (Field_empty "buddySearchResult.pictureStatus") | Some _x370 -> _x370
  method set_pictureStatus _x370 = _pictureStatus <- Some _x370
  method unset_pictureStatus = _pictureStatus <- None
  method reset_pictureStatus = _pictureStatus <- None

  val mutable _picturePath : string option = None
  method get_picturePath = _picturePath
  method grab_picturePath = match _picturePath with None->raise (Field_empty "buddySearchResult.picturePath") | Some _x371 -> _x371
  method set_picturePath _x371 = _picturePath <- Some _x371
  method unset_picturePath = _picturePath <- None
  method reset_picturePath = _picturePath <- None

  val mutable _statusMessage : string option = None
  method get_statusMessage = _statusMessage
  method grab_statusMessage = match _statusMessage with None->raise (Field_empty "buddySearchResult.statusMessage") | Some _x372 -> _x372
  method set_statusMessage _x372 = _statusMessage <- Some _x372
  method unset_statusMessage = _statusMessage <- None
  method reset_statusMessage = _statusMessage <- None

  val mutable _businessAccount : bool option = None
  method get_businessAccount = _businessAccount
  method grab_businessAccount = match _businessAccount with None->raise (Field_empty "buddySearchResult.businessAccount") | Some _x373 -> _x373
  method set_businessAccount _x373 = _businessAccount <- Some _x373
  method unset_businessAccount = _businessAccount <- None
  method reset_businessAccount = _businessAccount <- None

  val mutable _iconType : Int32.t option = None
  method get_iconType = _iconType
  method grab_iconType = match _iconType with None->raise (Field_empty "buddySearchResult.iconType") | Some _x374 -> _x374
  method set_iconType _x374 = _iconType <- Some _x374
  method unset_iconType = _iconType <- None
  method reset_iconType = _iconType <- None

  val mutable _botType : BotType.t option = None
  method get_botType = _botType
  method grab_botType = match _botType with None->raise (Field_empty "buddySearchResult.botType") | Some _x375 -> _x375
  method set_botType _x375 = _botType <- Some _x375
  method unset_botType = _botType <- None
  method reset_botType = _botType <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "BuddySearchResult";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _pictureStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("pictureStatus",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _picturePath with None -> () | Some _v -> 
      oprot#writeFieldBegin("picturePath",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _statusMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("statusMessage",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _businessAccount with None -> () | Some _v -> 
      oprot#writeFieldBegin("businessAccount",Protocol.T_BOOL,6);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _iconType with None -> () | Some _v -> 
      oprot#writeFieldBegin("iconType",Protocol.T_I32,7);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _botType with None -> () | Some _v -> 
      oprot#writeFieldBegin("botType",Protocol.T_I32,8);
      oprot#writeI32(BotType.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_buddySearchResult (iprot : Protocol.t) =
  let _str378 = new buddySearchResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t379,_id380) = iprot#readFieldBegin in
        if _t379 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id380 with 
          | 1 -> (if _t379 = Protocol.T_STRING then
              _str378#set_mid iprot#readString
            else
              iprot#skip _t379)
          | 2 -> (if _t379 = Protocol.T_STRING then
              _str378#set_displayName iprot#readString
            else
              iprot#skip _t379)
          | 3 -> (if _t379 = Protocol.T_STRING then
              _str378#set_pictureStatus iprot#readString
            else
              iprot#skip _t379)
          | 4 -> (if _t379 = Protocol.T_STRING then
              _str378#set_picturePath iprot#readString
            else
              iprot#skip _t379)
          | 5 -> (if _t379 = Protocol.T_STRING then
              _str378#set_statusMessage iprot#readString
            else
              iprot#skip _t379)
          | 6 -> (if _t379 = Protocol.T_BOOL then
              _str378#set_businessAccount iprot#readBool
            else
              iprot#skip _t379)
          | 7 -> (if _t379 = Protocol.T_I32 then
              _str378#set_iconType iprot#readI32
            else
              iprot#skip _t379)
          | 8 -> (if _t379 = Protocol.T_I32 then
              _str378#set_botType (BotType.of_i iprot#readI32)
            else
              iprot#skip _t379)
          | _ -> iprot#skip _t379);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str378

class geoAddressItem =
object (self)
  val mutable _latitude : float option = None
  method get_latitude = _latitude
  method grab_latitude = match _latitude with None->raise (Field_empty "geoAddressItem.latitude") | Some _x382 -> _x382
  method set_latitude _x382 = _latitude <- Some _x382
  method unset_latitude = _latitude <- None
  method reset_latitude = _latitude <- None

  val mutable _longitude : float option = None
  method get_longitude = _longitude
  method grab_longitude = match _longitude with None->raise (Field_empty "geoAddressItem.longitude") | Some _x383 -> _x383
  method set_longitude _x383 = _longitude <- Some _x383
  method unset_longitude = _longitude <- None
  method reset_longitude = _longitude <- None

  val mutable _displayAddress : string option = None
  method get_displayAddress = _displayAddress
  method grab_displayAddress = match _displayAddress with None->raise (Field_empty "geoAddressItem.displayAddress") | Some _x384 -> _x384
  method set_displayAddress _x384 = _displayAddress <- Some _x384
  method unset_displayAddress = _displayAddress <- None
  method reset_displayAddress = _displayAddress <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GeoAddressItem";
    (match _latitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("latitude",Protocol.T_DOUBLE,1);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _longitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("longitude",Protocol.T_DOUBLE,2);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _displayAddress with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayAddress",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_geoAddressItem (iprot : Protocol.t) =
  let _str387 = new geoAddressItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t388,_id389) = iprot#readFieldBegin in
        if _t388 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id389 with 
          | 1 -> (if _t388 = Protocol.T_DOUBLE then
              _str387#set_latitude iprot#readDouble
            else
              iprot#skip _t388)
          | 2 -> (if _t388 = Protocol.T_DOUBLE then
              _str387#set_longitude iprot#readDouble
            else
              iprot#skip _t388)
          | 3 -> (if _t388 = Protocol.T_STRING then
              _str387#set_displayAddress iprot#readString
            else
              iprot#skip _t388)
          | _ -> iprot#skip _t388);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str387

class addFriendData =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "addFriendData.mid") | Some _x391 -> _x391
  method set_mid _x391 = _mid <- Some _x391
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "AddFriendData";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_addFriendData (iprot : Protocol.t) =
  let _str394 = new addFriendData in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t395,_id396) = iprot#readFieldBegin in
        if _t395 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id396 with 
          | 1 -> (if _t395 = Protocol.T_STRING then
              _str394#set_mid iprot#readString
            else
              iprot#skip _t395)
          | _ -> iprot#skip _t395);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str394

class installAppData =
object (self)
  val mutable _installData : (string,string) Hashtbl.t option = None
  method get_installData = _installData
  method grab_installData = match _installData with None->raise (Field_empty "installAppData.installData") | Some _x398 -> _x398
  method set_installData _x398 = _installData <- Some _x398
  method unset_installData = _installData <- None
  method reset_installData = _installData <- None

  method copy =
      let _new = Oo.copy self in
      if _installData <> None then
        _new#set_installData (Hashtbl.copy self#grab_installData);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "InstallAppData";
    (match _installData with None -> () | Some _v -> 
      oprot#writeFieldBegin("installData",Protocol.T_MAP,1);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter401 -> fun _viter402 -> 
        oprot#writeString(_kiter401);
        oprot#writeString(_viter402);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_installAppData (iprot : Protocol.t) =
  let _str403 = new installAppData in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t404,_id405) = iprot#readFieldBegin in
        if _t404 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id405 with 
          | 1 -> (if _t404 = Protocol.T_MAP then
              _str403#set_installData 
                (let (_ktype407,_vtype408,_size406) = iprot#readMapBegin in
                let _con410 = Hashtbl.create _size406 in
                  for i = 1 to _size406 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con410 _k _v
                  done; iprot#readMapEnd; _con410)
            else
              iprot#skip _t404)
          | _ -> iprot#skip _t404);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str403

class jumpUrlData =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "JumpUrlData";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_jumpUrlData (iprot : Protocol.t) =
  let _str414 = new jumpUrlData in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t415,_id416) = iprot#readFieldBegin in
        if _t415 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id416 with 
          | _ -> iprot#skip _t415);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str414

class buttonActionData =
object (self)
  val mutable _addFriendData : addFriendData option = None
  method get_addFriendData = _addFriendData
  method grab_addFriendData = match _addFriendData with None->raise (Field_empty "buttonActionData.addFriendData") | Some _x418 -> _x418
  method set_addFriendData _x418 = _addFriendData <- Some _x418
  method unset_addFriendData = _addFriendData <- None
  method reset_addFriendData = _addFriendData <- None

  val mutable _installAppData : installAppData option = None
  method get_installAppData = _installAppData
  method grab_installAppData = match _installAppData with None->raise (Field_empty "buttonActionData.installAppData") | Some _x419 -> _x419
  method set_installAppData _x419 = _installAppData <- Some _x419
  method unset_installAppData = _installAppData <- None
  method reset_installAppData = _installAppData <- None

  val mutable _jumpUrlData : jumpUrlData option = None
  method get_jumpUrlData = _jumpUrlData
  method grab_jumpUrlData = match _jumpUrlData with None->raise (Field_empty "buttonActionData.jumpUrlData") | Some _x420 -> _x420
  method set_jumpUrlData _x420 = _jumpUrlData <- Some _x420
  method unset_jumpUrlData = _jumpUrlData <- None
  method reset_jumpUrlData = _jumpUrlData <- None

  method copy =
      let _new = Oo.copy self in
      if _addFriendData <> None then
        _new#set_addFriendData self#grab_addFriendData#copy;
      if _installAppData <> None then
        _new#set_installAppData self#grab_installAppData#copy;
      if _jumpUrlData <> None then
        _new#set_jumpUrlData self#grab_jumpUrlData#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ButtonActionData";
    (match _addFriendData with None -> () | Some _v -> 
      oprot#writeFieldBegin("addFriendData",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _installAppData with None -> () | Some _v -> 
      oprot#writeFieldBegin("installAppData",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _jumpUrlData with None -> () | Some _v -> 
      oprot#writeFieldBegin("jumpUrlData",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_buttonActionData (iprot : Protocol.t) =
  let _str423 = new buttonActionData in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t424,_id425) = iprot#readFieldBegin in
        if _t424 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id425 with 
          | 1 -> (if _t424 = Protocol.T_STRUCT then
              _str423#set_addFriendData (read_addFriendData iprot)
            else
              iprot#skip _t424)
          | 2 -> (if _t424 = Protocol.T_STRUCT then
              _str423#set_installAppData (read_installAppData iprot)
            else
              iprot#skip _t424)
          | 3 -> (if _t424 = Protocol.T_STRUCT then
              _str423#set_jumpUrlData (read_jumpUrlData iprot)
            else
              iprot#skip _t424)
          | _ -> iprot#skip _t424);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str423

class shortcutButtonAction =
object (self)
  val mutable _actionType : Int32.t option = None
  method get_actionType = _actionType
  method grab_actionType = match _actionType with None->raise (Field_empty "shortcutButtonAction.actionType") | Some _x427 -> _x427
  method set_actionType _x427 = _actionType <- Some _x427
  method unset_actionType = _actionType <- None
  method reset_actionType = _actionType <- None

  val mutable _actionData : buttonActionData option = None
  method get_actionData = _actionData
  method grab_actionData = match _actionData with None->raise (Field_empty "shortcutButtonAction.actionData") | Some _x428 -> _x428
  method set_actionData _x428 = _actionData <- Some _x428
  method unset_actionData = _actionData <- None
  method reset_actionData = _actionData <- None

  method copy =
      let _new = Oo.copy self in
      if _actionData <> None then
        _new#set_actionData self#grab_actionData#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ShortcutButtonAction";
    (match _actionType with None -> () | Some _v -> 
      oprot#writeFieldBegin("actionType",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _actionData with None -> () | Some _v -> 
      oprot#writeFieldBegin("actionData",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_shortcutButtonAction (iprot : Protocol.t) =
  let _str431 = new shortcutButtonAction in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t432,_id433) = iprot#readFieldBegin in
        if _t432 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id433 with 
          | 1 -> (if _t432 = Protocol.T_I32 then
              _str431#set_actionType iprot#readI32
            else
              iprot#skip _t432)
          | 2 -> (if _t432 = Protocol.T_STRUCT then
              _str431#set_actionData (read_buttonActionData iprot)
            else
              iprot#skip _t432)
          | _ -> iprot#skip _t432);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str431

class shortcutButton =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "shortcutButton.id") | Some _x435 -> _x435
  method set_id _x435 = _id <- Some _x435
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "shortcutButton.title") | Some _x436 -> _x436
  method set_title _x436 = _title <- Some _x436
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _url : string option = None
  method get_url = _url
  method grab_url = match _url with None->raise (Field_empty "shortcutButton.url") | Some _x437 -> _x437
  method set_url _x437 = _url <- Some _x437
  method unset_url = _url <- None
  method reset_url = _url <- None

  val mutable _iconPath : string option = None
  method get_iconPath = _iconPath
  method grab_iconPath = match _iconPath with None->raise (Field_empty "shortcutButton.iconPath") | Some _x438 -> _x438
  method set_iconPath _x438 = _iconPath <- Some _x438
  method unset_iconPath = _iconPath <- None
  method reset_iconPath = _iconPath <- None

  val mutable _action : shortcutButtonAction option = None
  method get_action = _action
  method grab_action = match _action with None->raise (Field_empty "shortcutButton.action") | Some _x439 -> _x439
  method set_action _x439 = _action <- Some _x439
  method unset_action = _action <- None
  method reset_action = _action <- None

  method copy =
      let _new = Oo.copy self in
      if _action <> None then
        _new#set_action self#grab_action#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ShortcutButton";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _url with None -> () | Some _v -> 
      oprot#writeFieldBegin("url",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _iconPath with None -> () | Some _v -> 
      oprot#writeFieldBegin("iconPath",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _action with None -> () | Some _v -> 
      oprot#writeFieldBegin("action",Protocol.T_STRUCT,5);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_shortcutButton (iprot : Protocol.t) =
  let _str442 = new shortcutButton in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t443,_id444) = iprot#readFieldBegin in
        if _t443 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id444 with 
          | 1 -> (if _t443 = Protocol.T_STRING then
              _str442#set_id iprot#readString
            else
              iprot#skip _t443)
          | 2 -> (if _t443 = Protocol.T_STRING then
              _str442#set_title iprot#readString
            else
              iprot#skip _t443)
          | 3 -> (if _t443 = Protocol.T_STRING then
              _str442#set_url iprot#readString
            else
              iprot#skip _t443)
          | 4 -> (if _t443 = Protocol.T_STRING then
              _str442#set_iconPath iprot#readString
            else
              iprot#skip _t443)
          | 5 -> (if _t443 = Protocol.T_STRUCT then
              _str442#set_action (read_shortcutButtonAction iprot)
            else
              iprot#skip _t443)
          | _ -> iprot#skip _t443);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str442

class shortcutItem =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "shortcutItem.id") | Some _x446 -> _x446
  method set_id _x446 = _id <- Some _x446
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "shortcutItem.title") | Some _x447 -> _x447
  method set_title _x447 = _title <- Some _x447
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _descr : string option = None
  method get_descr = _descr
  method grab_descr = match _descr with None->raise (Field_empty "shortcutItem.descr") | Some _x448 -> _x448
  method set_descr _x448 = _descr <- Some _x448
  method unset_descr = _descr <- None
  method reset_descr = _descr <- None

  val mutable _iconPath : string option = None
  method get_iconPath = _iconPath
  method grab_iconPath = match _iconPath with None->raise (Field_empty "shortcutItem.iconPath") | Some _x449 -> _x449
  method set_iconPath _x449 = _iconPath <- Some _x449
  method unset_iconPath = _iconPath <- None
  method reset_iconPath = _iconPath <- None

  val mutable _url : string option = None
  method get_url = _url
  method grab_url = match _url with None->raise (Field_empty "shortcutItem.url") | Some _x450 -> _x450
  method set_url _x450 = _url <- Some _x450
  method unset_url = _url <- None
  method reset_url = _url <- None

  val mutable _buttons : shortcutButton list option = None
  method get_buttons = _buttons
  method grab_buttons = match _buttons with None->raise (Field_empty "shortcutItem.buttons") | Some _x451 -> _x451
  method set_buttons _x451 = _buttons <- Some _x451
  method unset_buttons = _buttons <- None
  method reset_buttons = _buttons <- None

  val mutable _action : shortcutButtonAction option = None
  method get_action = _action
  method grab_action = match _action with None->raise (Field_empty "shortcutItem.action") | Some _x452 -> _x452
  method set_action _x452 = _action <- Some _x452
  method unset_action = _action <- None
  method reset_action = _action <- None

  method copy =
      let _new = Oo.copy self in
      if _buttons <> None then
        _new#set_buttons (List.map (fun x -> x#copy) self#grab_buttons);
      if _action <> None then
        _new#set_action self#grab_action#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ShortcutItem";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _descr with None -> () | Some _v -> 
      oprot#writeFieldBegin("descr",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _iconPath with None -> () | Some _v -> 
      oprot#writeFieldBegin("iconPath",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _url with None -> () | Some _v -> 
      oprot#writeFieldBegin("url",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _buttons with None -> () | Some _v -> 
      oprot#writeFieldBegin("buttons",Protocol.T_LIST,6);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter455 ->         _iter455#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _action with None -> () | Some _v -> 
      oprot#writeFieldBegin("action",Protocol.T_STRUCT,7);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_shortcutItem (iprot : Protocol.t) =
  let _str456 = new shortcutItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t457,_id458) = iprot#readFieldBegin in
        if _t457 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id458 with 
          | 1 -> (if _t457 = Protocol.T_STRING then
              _str456#set_id iprot#readString
            else
              iprot#skip _t457)
          | 2 -> (if _t457 = Protocol.T_STRING then
              _str456#set_title iprot#readString
            else
              iprot#skip _t457)
          | 3 -> (if _t457 = Protocol.T_STRING then
              _str456#set_descr iprot#readString
            else
              iprot#skip _t457)
          | 4 -> (if _t457 = Protocol.T_STRING then
              _str456#set_iconPath iprot#readString
            else
              iprot#skip _t457)
          | 5 -> (if _t457 = Protocol.T_STRING then
              _str456#set_url iprot#readString
            else
              iprot#skip _t457)
          | 6 -> (if _t457 = Protocol.T_LIST then
              _str456#set_buttons 
                (let (_etype462,_size459) = iprot#readListBegin in
                  let _con463 = (Array.to_list (Array.init _size459 (fun _ -> (read_shortcutButton iprot)))) in
                    iprot#readListEnd; _con463)
            else
              iprot#skip _t457)
          | 7 -> (if _t457 = Protocol.T_STRUCT then
              _str456#set_action (read_shortcutButtonAction iprot)
            else
              iprot#skip _t457)
          | _ -> iprot#skip _t457);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str456

class sQCat =
object (self)
  val mutable _id : Int32.t option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "sQCat.id") | Some _x465 -> _x465
  method set_id _x465 = _id <- Some _x465
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "sQCat.name") | Some _x466 -> _x466
  method set_name _x466 = _name <- Some _x466
  method unset_name = _name <- None
  method reset_name = _name <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SQCat";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_sQCat (iprot : Protocol.t) =
  let _str469 = new sQCat in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t470,_id471) = iprot#readFieldBegin in
        if _t470 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id471 with 
          | 1 -> (if _t470 = Protocol.T_I32 then
              _str469#set_id iprot#readI32
            else
              iprot#skip _t470)
          | 2 -> (if _t470 = Protocol.T_STRING then
              _str469#set_name iprot#readString
            else
              iprot#skip _t470)
          | _ -> iprot#skip _t470);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str469

class searchItemUnion =
object (self)
  val mutable _categoryItem : categoryItem option = None
  method get_categoryItem = _categoryItem
  method grab_categoryItem = match _categoryItem with None->raise (Field_empty "searchItemUnion.categoryItem") | Some _x473 -> _x473
  method set_categoryItem _x473 = _categoryItem <- Some _x473
  method unset_categoryItem = _categoryItem <- None
  method reset_categoryItem = _categoryItem <- None

  val mutable _spotItem : spotItem option = None
  method get_spotItem = _spotItem
  method grab_spotItem = match _spotItem with None->raise (Field_empty "searchItemUnion.spotItem") | Some _x474 -> _x474
  method set_spotItem _x474 = _spotItem <- Some _x474
  method unset_spotItem = _spotItem <- None
  method reset_spotItem = _spotItem <- None

  val mutable _productItem : productSearchSummary option = None
  method get_productItem = _productItem
  method grab_productItem = match _productItem with None->raise (Field_empty "searchItemUnion.productItem") | Some _x475 -> _x475
  method set_productItem _x475 = _productItem <- Some _x475
  method unset_productItem = _productItem <- None
  method reset_productItem = _productItem <- None

  val mutable _serviceItem : serviceItem option = None
  method get_serviceItem = _serviceItem
  method grab_serviceItem = match _serviceItem with None->raise (Field_empty "searchItemUnion.serviceItem") | Some _x476 -> _x476
  method set_serviceItem _x476 = _serviceItem <- Some _x476
  method unset_serviceItem = _serviceItem <- None
  method reset_serviceItem = _serviceItem <- None

  val mutable _yellowpageItem : yellowpageItem option = None
  method get_yellowpageItem = _yellowpageItem
  method grab_yellowpageItem = match _yellowpageItem with None->raise (Field_empty "searchItemUnion.yellowpageItem") | Some _x477 -> _x477
  method set_yellowpageItem _x477 = _yellowpageItem <- Some _x477
  method unset_yellowpageItem = _yellowpageItem <- None
  method reset_yellowpageItem = _yellowpageItem <- None

  val mutable _oaItem : buddySearchResult option = None
  method get_oaItem = _oaItem
  method grab_oaItem = match _oaItem with None->raise (Field_empty "searchItemUnion.oaItem") | Some _x478 -> _x478
  method set_oaItem _x478 = _oaItem <- Some _x478
  method unset_oaItem = _oaItem <- None
  method reset_oaItem = _oaItem <- None

  val mutable _geoAddressItem : geoAddressItem option = None
  method get_geoAddressItem = _geoAddressItem
  method grab_geoAddressItem = match _geoAddressItem with None->raise (Field_empty "searchItemUnion.geoAddressItem") | Some _x479 -> _x479
  method set_geoAddressItem _x479 = _geoAddressItem <- Some _x479
  method unset_geoAddressItem = _geoAddressItem <- None
  method reset_geoAddressItem = _geoAddressItem <- None

  val mutable _shortcutItem : shortcutItem option = None
  method get_shortcutItem = _shortcutItem
  method grab_shortcutItem = match _shortcutItem with None->raise (Field_empty "searchItemUnion.shortcutItem") | Some _x480 -> _x480
  method set_shortcutItem _x480 = _shortcutItem <- Some _x480
  method unset_shortcutItem = _shortcutItem <- None
  method reset_shortcutItem = _shortcutItem <- None

  val mutable _squareItem : squareInfo option = None
  method get_squareItem = _squareItem
  method grab_squareItem = match _squareItem with None->raise (Field_empty "searchItemUnion.squareItem") | Some _x481 -> _x481
  method set_squareItem _x481 = _squareItem <- Some _x481
  method unset_squareItem = _squareItem <- None
  method reset_squareItem = _squareItem <- None

  val mutable _squareCategoryItem : sQCat option = None
  method get_squareCategoryItem = _squareCategoryItem
  method grab_squareCategoryItem = match _squareCategoryItem with None->raise (Field_empty "searchItemUnion.squareCategoryItem") | Some _x482 -> _x482
  method set_squareCategoryItem _x482 = _squareCategoryItem <- Some _x482
  method unset_squareCategoryItem = _squareCategoryItem <- None
  method reset_squareCategoryItem = _squareCategoryItem <- None

  method copy =
      let _new = Oo.copy self in
      if _categoryItem <> None then
        _new#set_categoryItem self#grab_categoryItem#copy;
      if _spotItem <> None then
        _new#set_spotItem self#grab_spotItem#copy;
      if _productItem <> None then
        _new#set_productItem self#grab_productItem#copy;
      if _serviceItem <> None then
        _new#set_serviceItem self#grab_serviceItem#copy;
      if _yellowpageItem <> None then
        _new#set_yellowpageItem self#grab_yellowpageItem#copy;
      if _oaItem <> None then
        _new#set_oaItem self#grab_oaItem#copy;
      if _geoAddressItem <> None then
        _new#set_geoAddressItem self#grab_geoAddressItem#copy;
      if _shortcutItem <> None then
        _new#set_shortcutItem self#grab_shortcutItem#copy;
      if _squareItem <> None then
        _new#set_squareItem self#grab_squareItem#copy;
      if _squareCategoryItem <> None then
        _new#set_squareCategoryItem self#grab_squareCategoryItem#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SearchItemUnion";
    (match _categoryItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("categoryItem",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _spotItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("spotItem",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _productItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("productItem",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _serviceItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("serviceItem",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _yellowpageItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("yellowpageItem",Protocol.T_STRUCT,5);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _oaItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("oaItem",Protocol.T_STRUCT,6);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _geoAddressItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("geoAddressItem",Protocol.T_STRUCT,7);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _shortcutItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("shortcutItem",Protocol.T_STRUCT,8);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareItem",Protocol.T_STRUCT,9);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareCategoryItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareCategoryItem",Protocol.T_STRUCT,10);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_searchItemUnion (iprot : Protocol.t) =
  let _str485 = new searchItemUnion in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t486,_id487) = iprot#readFieldBegin in
        if _t486 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id487 with 
          | 1 -> (if _t486 = Protocol.T_STRUCT then
              _str485#set_categoryItem (read_categoryItem iprot)
            else
              iprot#skip _t486)
          | 2 -> (if _t486 = Protocol.T_STRUCT then
              _str485#set_spotItem (read_spotItem iprot)
            else
              iprot#skip _t486)
          | 3 -> (if _t486 = Protocol.T_STRUCT then
              _str485#set_productItem (read_productSearchSummary iprot)
            else
              iprot#skip _t486)
          | 4 -> (if _t486 = Protocol.T_STRUCT then
              _str485#set_serviceItem (read_serviceItem iprot)
            else
              iprot#skip _t486)
          | 5 -> (if _t486 = Protocol.T_STRUCT then
              _str485#set_yellowpageItem (read_yellowpageItem iprot)
            else
              iprot#skip _t486)
          | 6 -> (if _t486 = Protocol.T_STRUCT then
              _str485#set_oaItem (read_buddySearchResult iprot)
            else
              iprot#skip _t486)
          | 7 -> (if _t486 = Protocol.T_STRUCT then
              _str485#set_geoAddressItem (read_geoAddressItem iprot)
            else
              iprot#skip _t486)
          | 8 -> (if _t486 = Protocol.T_STRUCT then
              _str485#set_shortcutItem (read_shortcutItem iprot)
            else
              iprot#skip _t486)
          | 9 -> (if _t486 = Protocol.T_STRUCT then
              _str485#set_squareItem (read_squareInfo iprot)
            else
              iprot#skip _t486)
          | 10 -> (if _t486 = Protocol.T_STRUCT then
              _str485#set_squareCategoryItem (read_sQCat iprot)
            else
              iprot#skip _t486)
          | _ -> iprot#skip _t486);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str485

class searchResultItem =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "searchResultItem.id") | Some _x489 -> _x489
  method set_id _x489 = _id <- Some _x489
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _itemType : Int32.t option = None
  method get_itemType = _itemType
  method grab_itemType = match _itemType with None->raise (Field_empty "searchResultItem.itemType") | Some _x490 -> _x490
  method set_itemType _x490 = _itemType <- Some _x490
  method unset_itemType = _itemType <- None
  method reset_itemType = _itemType <- None

  val mutable _item : searchItemUnion option = None
  method get_item = _item
  method grab_item = match _item with None->raise (Field_empty "searchResultItem.item") | Some _x491 -> _x491
  method set_item _x491 = _item <- Some _x491
  method unset_item = _item <- None
  method reset_item = _item <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "searchResultItem.title") | Some _x492 -> _x492
  method set_title _x492 = _title <- Some _x492
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _sub1 : string option = None
  method get_sub1 = _sub1
  method grab_sub1 = match _sub1 with None->raise (Field_empty "searchResultItem.sub1") | Some _x493 -> _x493
  method set_sub1 _x493 = _sub1 <- Some _x493
  method unset_sub1 = _sub1 <- None
  method reset_sub1 = _sub1 <- None

  val mutable _sub2 : string option = None
  method get_sub2 = _sub2
  method grab_sub2 = match _sub2 with None->raise (Field_empty "searchResultItem.sub2") | Some _x494 -> _x494
  method set_sub2 _x494 = _sub2 <- Some _x494
  method unset_sub2 = _sub2 <- None
  method reset_sub2 = _sub2 <- None

  val mutable _iconUrl : string option = None
  method get_iconUrl = _iconUrl
  method grab_iconUrl = match _iconUrl with None->raise (Field_empty "searchResultItem.iconUrl") | Some _x495 -> _x495
  method set_iconUrl _x495 = _iconUrl <- Some _x495
  method unset_iconUrl = _iconUrl <- None
  method reset_iconUrl = _iconUrl <- None

  val mutable _titleLink : string option = None
  method get_titleLink = _titleLink
  method grab_titleLink = match _titleLink with None->raise (Field_empty "searchResultItem.titleLink") | Some _x496 -> _x496
  method set_titleLink _x496 = _titleLink <- Some _x496
  method unset_titleLink = _titleLink <- None
  method reset_titleLink = _titleLink <- None

  val mutable _iconLink : string option = None
  method get_iconLink = _iconLink
  method grab_iconLink = match _iconLink with None->raise (Field_empty "searchResultItem.iconLink") | Some _x497 -> _x497
  method set_iconLink _x497 = _iconLink <- Some _x497
  method unset_iconLink = _iconLink <- None
  method reset_iconLink = _iconLink <- None

  val mutable _displayTemplate : string option = None
  method get_displayTemplate = _displayTemplate
  method grab_displayTemplate = match _displayTemplate with None->raise (Field_empty "searchResultItem.displayTemplate") | Some _x498 -> _x498
  method set_displayTemplate _x498 = _displayTemplate <- Some _x498
  method unset_displayTemplate = _displayTemplate <- None
  method reset_displayTemplate = _displayTemplate <- None

  val mutable _additionalInfo : additionalInfoItem list option = None
  method get_additionalInfo = _additionalInfo
  method grab_additionalInfo = match _additionalInfo with None->raise (Field_empty "searchResultItem.additionalInfo") | Some _x499 -> _x499
  method set_additionalInfo _x499 = _additionalInfo <- Some _x499
  method unset_additionalInfo = _additionalInfo <- None
  method reset_additionalInfo = _additionalInfo <- None

  method copy =
      let _new = Oo.copy self in
      if _item <> None then
        _new#set_item self#grab_item#copy;
      if _additionalInfo <> None then
        _new#set_additionalInfo (List.map (fun x -> x#copy) self#grab_additionalInfo);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SearchResultItem";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _itemType with None -> () | Some _v -> 
      oprot#writeFieldBegin("ItemType",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _item with None -> () | Some _v -> 
      oprot#writeFieldBegin("item",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _sub1 with None -> () | Some _v -> 
      oprot#writeFieldBegin("sub1",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _sub2 with None -> () | Some _v -> 
      oprot#writeFieldBegin("sub2",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _iconUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("iconUrl",Protocol.T_STRING,7);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _titleLink with None -> () | Some _v -> 
      oprot#writeFieldBegin("titleLink",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _iconLink with None -> () | Some _v -> 
      oprot#writeFieldBegin("iconLink",Protocol.T_STRING,9);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayTemplate with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayTemplate",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _additionalInfo with None -> () | Some _v -> 
      oprot#writeFieldBegin("additionalInfo",Protocol.T_LIST,11);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter502 ->         _iter502#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_searchResultItem (iprot : Protocol.t) =
  let _str503 = new searchResultItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t504,_id505) = iprot#readFieldBegin in
        if _t504 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id505 with 
          | 1 -> (if _t504 = Protocol.T_STRING then
              _str503#set_id iprot#readString
            else
              iprot#skip _t504)
          | 2 -> (if _t504 = Protocol.T_I32 then
              _str503#set_itemType iprot#readI32
            else
              iprot#skip _t504)
          | 3 -> (if _t504 = Protocol.T_STRUCT then
              _str503#set_item (read_searchItemUnion iprot)
            else
              iprot#skip _t504)
          | 4 -> (if _t504 = Protocol.T_STRING then
              _str503#set_title iprot#readString
            else
              iprot#skip _t504)
          | 5 -> (if _t504 = Protocol.T_STRING then
              _str503#set_sub1 iprot#readString
            else
              iprot#skip _t504)
          | 6 -> (if _t504 = Protocol.T_STRING then
              _str503#set_sub2 iprot#readString
            else
              iprot#skip _t504)
          | 7 -> (if _t504 = Protocol.T_STRING then
              _str503#set_iconUrl iprot#readString
            else
              iprot#skip _t504)
          | 8 -> (if _t504 = Protocol.T_STRING then
              _str503#set_titleLink iprot#readString
            else
              iprot#skip _t504)
          | 9 -> (if _t504 = Protocol.T_STRING then
              _str503#set_iconLink iprot#readString
            else
              iprot#skip _t504)
          | 10 -> (if _t504 = Protocol.T_STRING then
              _str503#set_displayTemplate iprot#readString
            else
              iprot#skip _t504)
          | 11 -> (if _t504 = Protocol.T_LIST then
              _str503#set_additionalInfo 
                (let (_etype509,_size506) = iprot#readListBegin in
                  let _con510 = (Array.to_list (Array.init _size506 (fun _ -> (read_additionalInfoItem iprot)))) in
                    iprot#readListEnd; _con510)
            else
              iprot#skip _t504)
          | _ -> iprot#skip _t504);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str503

class searchResultCollection =
object (self)
  val mutable _collection : Int32.t option = None
  method get_collection = _collection
  method grab_collection = match _collection with None->raise (Field_empty "searchResultCollection.collection") | Some _x512 -> _x512
  method set_collection _x512 = _collection <- Some _x512
  method unset_collection = _collection <- None
  method reset_collection = _collection <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "searchResultCollection.title") | Some _x513 -> _x513
  method set_title _x513 = _title <- Some _x513
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _rank : Int32.t option = None
  method get_rank = _rank
  method grab_rank = match _rank with None->raise (Field_empty "searchResultCollection.rank") | Some _x514 -> _x514
  method set_rank _x514 = _rank <- Some _x514
  method unset_rank = _rank <- None
  method reset_rank = _rank <- None

  val mutable _hits : Int32.t option = None
  method get_hits = _hits
  method grab_hits = match _hits with None->raise (Field_empty "searchResultCollection.hits") | Some _x515 -> _x515
  method set_hits _x515 = _hits <- Some _x515
  method unset_hits = _hits <- None
  method reset_hits = _hits <- None

  val mutable _items : searchResultItem list option = None
  method get_items = _items
  method grab_items = match _items with None->raise (Field_empty "searchResultCollection.items") | Some _x516 -> _x516
  method set_items _x516 = _items <- Some _x516
  method unset_items = _items <- None
  method reset_items = _items <- None

  val mutable _hasNext : bool option = None
  method get_hasNext = _hasNext
  method grab_hasNext = match _hasNext with None->raise (Field_empty "searchResultCollection.hasNext") | Some _x517 -> _x517
  method set_hasNext _x517 = _hasNext <- Some _x517
  method unset_hasNext = _hasNext <- None
  method reset_hasNext = _hasNext <- None

  val mutable _cat : Int32.t list option = None
  method get_cat = _cat
  method grab_cat = match _cat with None->raise (Field_empty "searchResultCollection.cat") | Some _x518 -> _x518
  method set_cat _x518 = _cat <- Some _x518
  method unset_cat = _cat <- None
  method reset_cat = _cat <- None

  val mutable _error : string option = None
  method get_error = _error
  method grab_error = match _error with None->raise (Field_empty "searchResultCollection.error") | Some _x519 -> _x519
  method set_error _x519 = _error <- Some _x519
  method unset_error = _error <- None
  method reset_error = _error <- None

  val mutable _tabTitle : string option = None
  method get_tabTitle = _tabTitle
  method grab_tabTitle = match _tabTitle with None->raise (Field_empty "searchResultCollection.tabTitle") | Some _x520 -> _x520
  method set_tabTitle _x520 = _tabTitle <- Some _x520
  method unset_tabTitle = _tabTitle <- None
  method reset_tabTitle = _tabTitle <- None

  val mutable _start : Int32.t option = None
  method get_start = _start
  method grab_start = match _start with None->raise (Field_empty "searchResultCollection.start") | Some _x521 -> _x521
  method set_start _x521 = _start <- Some _x521
  method unset_start = _start <- None
  method reset_start = _start <- None

  val mutable _length : Int32.t option = None
  method get_length = _length
  method grab_length = match _length with None->raise (Field_empty "searchResultCollection.length") | Some _x522 -> _x522
  method set_length _x522 = _length <- Some _x522
  method unset_length = _length <- None
  method reset_length = _length <- None

  val mutable _squareCategoryId : Int32.t option = None
  method get_squareCategoryId = _squareCategoryId
  method grab_squareCategoryId = match _squareCategoryId with None->raise (Field_empty "searchResultCollection.squareCategoryId") | Some _x523 -> _x523
  method set_squareCategoryId _x523 = _squareCategoryId <- Some _x523
  method unset_squareCategoryId = _squareCategoryId <- None
  method reset_squareCategoryId = _squareCategoryId <- None

  method copy =
      let _new = Oo.copy self in
      if _items <> None then
        _new#set_items (List.map (fun x -> x#copy) self#grab_items);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SearchResultCollection";
    (match _collection with None -> () | Some _v -> 
      oprot#writeFieldBegin("collection",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _rank with None -> () | Some _v -> 
      oprot#writeFieldBegin("rank",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _hits with None -> () | Some _v -> 
      oprot#writeFieldBegin("hits",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _items with None -> () | Some _v -> 
      oprot#writeFieldBegin("items",Protocol.T_LIST,5);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter526 ->         _iter526#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _hasNext with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasNext",Protocol.T_BOOL,6);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _cat with None -> () | Some _v -> 
      oprot#writeFieldBegin("cat",Protocol.T_LIST,7);
      oprot#writeListBegin(Protocol.T_I32,List.length _v);
      List.iter (fun _iter527 ->         oprot#writeI32(_iter527);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _error with None -> () | Some _v -> 
      oprot#writeFieldBegin("error",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _tabTitle with None -> () | Some _v -> 
      oprot#writeFieldBegin("tabTitle",Protocol.T_STRING,9);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _start with None -> () | Some _v -> 
      oprot#writeFieldBegin("start",Protocol.T_I32,10);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _length with None -> () | Some _v -> 
      oprot#writeFieldBegin("length",Protocol.T_I32,11);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _squareCategoryId with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareCategoryId",Protocol.T_I32,12);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_searchResultCollection (iprot : Protocol.t) =
  let _str528 = new searchResultCollection in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t529,_id530) = iprot#readFieldBegin in
        if _t529 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id530 with 
          | 1 -> (if _t529 = Protocol.T_I32 then
              _str528#set_collection iprot#readI32
            else
              iprot#skip _t529)
          | 2 -> (if _t529 = Protocol.T_STRING then
              _str528#set_title iprot#readString
            else
              iprot#skip _t529)
          | 3 -> (if _t529 = Protocol.T_I32 then
              _str528#set_rank iprot#readI32
            else
              iprot#skip _t529)
          | 4 -> (if _t529 = Protocol.T_I32 then
              _str528#set_hits iprot#readI32
            else
              iprot#skip _t529)
          | 5 -> (if _t529 = Protocol.T_LIST then
              _str528#set_items 
                (let (_etype534,_size531) = iprot#readListBegin in
                  let _con535 = (Array.to_list (Array.init _size531 (fun _ -> (read_searchResultItem iprot)))) in
                    iprot#readListEnd; _con535)
            else
              iprot#skip _t529)
          | 6 -> (if _t529 = Protocol.T_BOOL then
              _str528#set_hasNext iprot#readBool
            else
              iprot#skip _t529)
          | 7 -> (if _t529 = Protocol.T_LIST then
              _str528#set_cat 
                (let (_etype539,_size536) = iprot#readListBegin in
                  let _con540 = (Array.to_list (Array.init _size536 (fun _ -> iprot#readI32))) in
                    iprot#readListEnd; _con540)
            else
              iprot#skip _t529)
          | 8 -> (if _t529 = Protocol.T_STRING then
              _str528#set_error iprot#readString
            else
              iprot#skip _t529)
          | 9 -> (if _t529 = Protocol.T_STRING then
              _str528#set_tabTitle iprot#readString
            else
              iprot#skip _t529)
          | 10 -> (if _t529 = Protocol.T_I32 then
              _str528#set_start iprot#readI32
            else
              iprot#skip _t529)
          | 11 -> (if _t529 = Protocol.T_I32 then
              _str528#set_length iprot#readI32
            else
              iprot#skip _t529)
          | 12 -> (if _t529 = Protocol.T_I32 then
              _str528#set_squareCategoryId iprot#readI32
            else
              iprot#skip _t529)
          | _ -> iprot#skip _t529);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str528

class searchResult =
object (self)
  val mutable _sid : string option = None
  method get_sid = _sid
  method grab_sid = match _sid with None->raise (Field_empty "searchResult.sid") | Some _x542 -> _x542
  method set_sid _x542 = _sid <- Some _x542
  method unset_sid = _sid <- None
  method reset_sid = _sid <- None

  val mutable _collections : searchResultCollection list option = None
  method get_collections = _collections
  method grab_collections = match _collections with None->raise (Field_empty "searchResult.collections") | Some _x543 -> _x543
  method set_collections _x543 = _collections <- Some _x543
  method unset_collections = _collections <- None
  method reset_collections = _collections <- None

  val mutable _start : Int32.t option = None
  method get_start = _start
  method grab_start = match _start with None->raise (Field_empty "searchResult.start") | Some _x544 -> _x544
  method set_start _x544 = _start <- Some _x544
  method unset_start = _start <- None
  method reset_start = _start <- None

  val mutable _length : Int32.t option = None
  method get_length = _length
  method grab_length = match _length with None->raise (Field_empty "searchResult.length") | Some _x545 -> _x545
  method set_length _x545 = _length <- Some _x545
  method unset_length = _length <- None
  method reset_length = _length <- None

  method copy =
      let _new = Oo.copy self in
      if _collections <> None then
        _new#set_collections (List.map (fun x -> x#copy) self#grab_collections);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SearchResult";
    (match _sid with None -> () | Some _v -> 
      oprot#writeFieldBegin("sid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _collections with None -> () | Some _v -> 
      oprot#writeFieldBegin("collections",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter548 ->         _iter548#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _start with None -> () | Some _v -> 
      oprot#writeFieldBegin("start",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _length with None -> () | Some _v -> 
      oprot#writeFieldBegin("length",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_searchResult (iprot : Protocol.t) =
  let _str549 = new searchResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t550,_id551) = iprot#readFieldBegin in
        if _t550 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id551 with 
          | 1 -> (if _t550 = Protocol.T_STRING then
              _str549#set_sid iprot#readString
            else
              iprot#skip _t550)
          | 2 -> (if _t550 = Protocol.T_LIST then
              _str549#set_collections 
                (let (_etype555,_size552) = iprot#readListBegin in
                  let _con556 = (Array.to_list (Array.init _size552 (fun _ -> (read_searchResultCollection iprot)))) in
                    iprot#readListEnd; _con556)
            else
              iprot#skip _t550)
          | 3 -> (if _t550 = Protocol.T_I32 then
              _str549#set_start iprot#readI32
            else
              iprot#skip _t550)
          | 4 -> (if _t550 = Protocol.T_I32 then
              _str549#set_length iprot#readI32
            else
              iprot#skip _t550)
          | _ -> iprot#skip _t550);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str549

class searchCommonParameter =
object (self)
  val mutable _latitude : float option = None
  method get_latitude = _latitude
  method grab_latitude = match _latitude with None->raise (Field_empty "searchCommonParameter.latitude") | Some _x558 -> _x558
  method set_latitude _x558 = _latitude <- Some _x558
  method unset_latitude = _latitude <- None
  method reset_latitude = _latitude <- None

  val mutable _longitude : float option = None
  method get_longitude = _longitude
  method grab_longitude = match _longitude with None->raise (Field_empty "searchCommonParameter.longitude") | Some _x559 -> _x559
  method set_longitude _x559 = _longitude <- Some _x559
  method unset_longitude = _longitude <- None
  method reset_longitude = _longitude <- None

  val mutable _source : string option = None
  method get_source = _source
  method grab_source = match _source with None->raise (Field_empty "searchCommonParameter.source") | Some _x560 -> _x560
  method set_source _x560 = _source <- Some _x560
  method unset_source = _source <- None
  method reset_source = _source <- None

  val mutable _region : string option = None
  method get_region = _region
  method grab_region = match _region with None->raise (Field_empty "searchCommonParameter.region") | Some _x561 -> _x561
  method set_region _x561 = _region <- Some _x561
  method unset_region = _region <- None
  method reset_region = _region <- None

  val mutable _sid : string option = None
  method get_sid = _sid
  method grab_sid = match _sid with None->raise (Field_empty "searchCommonParameter.sid") | Some _x562 -> _x562
  method set_sid _x562 = _sid <- Some _x562
  method unset_sid = _sid <- None
  method reset_sid = _sid <- None

  val mutable _queryType : Int32.t option = None
  method get_queryType = _queryType
  method grab_queryType = match _queryType with None->raise (Field_empty "searchCommonParameter.queryType") | Some _x563 -> _x563
  method set_queryType _x563 = _queryType <- Some _x563
  method unset_queryType = _queryType <- None
  method reset_queryType = _queryType <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SearchCommonParameter";
    (match _latitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("latitude",Protocol.T_DOUBLE,1);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _longitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("longitude",Protocol.T_DOUBLE,2);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _source with None -> () | Some _v -> 
      oprot#writeFieldBegin("source",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _region with None -> () | Some _v -> 
      oprot#writeFieldBegin("region",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _sid with None -> () | Some _v -> 
      oprot#writeFieldBegin("sid",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _queryType with None -> () | Some _v -> 
      oprot#writeFieldBegin("queryType",Protocol.T_I32,6);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_searchCommonParameter (iprot : Protocol.t) =
  let _str566 = new searchCommonParameter in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t567,_id568) = iprot#readFieldBegin in
        if _t567 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id568 with 
          | 1 -> (if _t567 = Protocol.T_DOUBLE then
              _str566#set_latitude iprot#readDouble
            else
              iprot#skip _t567)
          | 2 -> (if _t567 = Protocol.T_DOUBLE then
              _str566#set_longitude iprot#readDouble
            else
              iprot#skip _t567)
          | 3 -> (if _t567 = Protocol.T_STRING then
              _str566#set_source iprot#readString
            else
              iprot#skip _t567)
          | 4 -> (if _t567 = Protocol.T_STRING then
              _str566#set_region iprot#readString
            else
              iprot#skip _t567)
          | 5 -> (if _t567 = Protocol.T_STRING then
              _str566#set_sid iprot#readString
            else
              iprot#skip _t567)
          | 6 -> (if _t567 = Protocol.T_I32 then
              _str566#set_queryType iprot#readI32
            else
              iprot#skip _t567)
          | _ -> iprot#skip _t567);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str566

class searchPagingParameter =
object (self)
  val mutable _collection : Int32.t option = None
  method get_collection = _collection
  method grab_collection = match _collection with None->raise (Field_empty "searchPagingParameter.collection") | Some _x570 -> _x570
  method set_collection _x570 = _collection <- Some _x570
  method unset_collection = _collection <- None
  method reset_collection = _collection <- None

  val mutable _start : Int32.t option = None
  method get_start = _start
  method grab_start = match _start with None->raise (Field_empty "searchPagingParameter.start") | Some _x571 -> _x571
  method set_start _x571 = _start <- Some _x571
  method unset_start = _start <- None
  method reset_start = _start <- None

  val mutable _length : Int32.t option = None
  method get_length = _length
  method grab_length = match _length with None->raise (Field_empty "searchPagingParameter.length") | Some _x572 -> _x572
  method set_length _x572 = _length <- Some _x572
  method unset_length = _length <- None
  method reset_length = _length <- None

  val mutable _commonParam : searchCommonParameter option = None
  method get_commonParam = _commonParam
  method grab_commonParam = match _commonParam with None->raise (Field_empty "searchPagingParameter.commonParam") | Some _x573 -> _x573
  method set_commonParam _x573 = _commonParam <- Some _x573
  method unset_commonParam = _commonParam <- None
  method reset_commonParam = _commonParam <- None

  method copy =
      let _new = Oo.copy self in
      if _commonParam <> None then
        _new#set_commonParam self#grab_commonParam#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SearchPagingParameter";
    (match _collection with None -> () | Some _v -> 
      oprot#writeFieldBegin("collection",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _start with None -> () | Some _v -> 
      oprot#writeFieldBegin("start",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _length with None -> () | Some _v -> 
      oprot#writeFieldBegin("length",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _commonParam with None -> () | Some _v -> 
      oprot#writeFieldBegin("commonParam",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_searchPagingParameter (iprot : Protocol.t) =
  let _str576 = new searchPagingParameter in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t577,_id578) = iprot#readFieldBegin in
        if _t577 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id578 with 
          | 1 -> (if _t577 = Protocol.T_I32 then
              _str576#set_collection iprot#readI32
            else
              iprot#skip _t577)
          | 2 -> (if _t577 = Protocol.T_I32 then
              _str576#set_start iprot#readI32
            else
              iprot#skip _t577)
          | 3 -> (if _t577 = Protocol.T_I32 then
              _str576#set_length iprot#readI32
            else
              iprot#skip _t577)
          | 4 -> (if _t577 = Protocol.T_STRUCT then
              _str576#set_commonParam (read_searchCommonParameter iprot)
            else
              iprot#skip _t577)
          | _ -> iprot#skip _t577);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str576

class location =
object (self)
  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "location.title") | Some _x580 -> _x580
  method set_title _x580 = _title <- Some _x580
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _address : string option = None
  method get_address = _address
  method grab_address = match _address with None->raise (Field_empty "location.address") | Some _x581 -> _x581
  method set_address _x581 = _address <- Some _x581
  method unset_address = _address <- None
  method reset_address = _address <- None

  val mutable _latitude : float option = None
  method get_latitude = _latitude
  method grab_latitude = match _latitude with None->raise (Field_empty "location.latitude") | Some _x582 -> _x582
  method set_latitude _x582 = _latitude <- Some _x582
  method unset_latitude = _latitude <- None
  method reset_latitude = _latitude <- None

  val mutable _longitude : float option = None
  method get_longitude = _longitude
  method grab_longitude = match _longitude with None->raise (Field_empty "location.longitude") | Some _x583 -> _x583
  method set_longitude _x583 = _longitude <- Some _x583
  method unset_longitude = _longitude <- None
  method reset_longitude = _longitude <- None

  val mutable _phone : string option = None
  method get_phone = _phone
  method grab_phone = match _phone with None->raise (Field_empty "location.phone") | Some _x584 -> _x584
  method set_phone _x584 = _phone <- Some _x584
  method unset_phone = _phone <- None
  method reset_phone = _phone <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Location";
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _address with None -> () | Some _v -> 
      oprot#writeFieldBegin("address",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _latitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("latitude",Protocol.T_DOUBLE,3);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _longitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("longitude",Protocol.T_DOUBLE,4);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _phone with None -> () | Some _v -> 
      oprot#writeFieldBegin("phone",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_location (iprot : Protocol.t) =
  let _str587 = new location in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t588,_id589) = iprot#readFieldBegin in
        if _t588 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id589 with 
          | 1 -> (if _t588 = Protocol.T_STRING then
              _str587#set_title iprot#readString
            else
              iprot#skip _t588)
          | 2 -> (if _t588 = Protocol.T_STRING then
              _str587#set_address iprot#readString
            else
              iprot#skip _t588)
          | 3 -> (if _t588 = Protocol.T_DOUBLE then
              _str587#set_latitude iprot#readDouble
            else
              iprot#skip _t588)
          | 4 -> (if _t588 = Protocol.T_DOUBLE then
              _str587#set_longitude iprot#readDouble
            else
              iprot#skip _t588)
          | 5 -> (if _t588 = Protocol.T_STRING then
              _str587#set_phone iprot#readString
            else
              iprot#skip _t588)
          | _ -> iprot#skip _t588);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str587

class messageBoxV2MessageId =
object (self)
  val mutable _deliveredTime : Int64.t option = None
  method get_deliveredTime = _deliveredTime
  method grab_deliveredTime = match _deliveredTime with None->raise (Field_empty "messageBoxV2MessageId.deliveredTime") | Some _x591 -> _x591
  method set_deliveredTime _x591 = _deliveredTime <- Some _x591
  method unset_deliveredTime = _deliveredTime <- None
  method reset_deliveredTime = _deliveredTime <- None

  val mutable _messageId : Int64.t option = None
  method get_messageId = _messageId
  method grab_messageId = match _messageId with None->raise (Field_empty "messageBoxV2MessageId.messageId") | Some _x592 -> _x592
  method set_messageId _x592 = _messageId <- Some _x592
  method unset_messageId = _messageId <- None
  method reset_messageId = _messageId <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "MessageBoxV2MessageId";
    (match _deliveredTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("deliveredTime",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _messageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageId",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_messageBoxV2MessageId (iprot : Protocol.t) =
  let _str595 = new messageBoxV2MessageId in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t596,_id597) = iprot#readFieldBegin in
        if _t596 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id597 with 
          | 1 -> (if _t596 = Protocol.T_I64 then
              _str595#set_deliveredTime iprot#readI64
            else
              iprot#skip _t596)
          | 2 -> (if _t596 = Protocol.T_I64 then
              _str595#set_messageId iprot#readI64
            else
              iprot#skip _t596)
          | _ -> iprot#skip _t596);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str595

class messageCommitResult =
object (self)
  val mutable _requestId : string option = None
  method get_requestId = _requestId
  method grab_requestId = match _requestId with None->raise (Field_empty "messageCommitResult.requestId") | Some _x599 -> _x599
  method set_requestId _x599 = _requestId <- Some _x599
  method unset_requestId = _requestId <- None
  method reset_requestId = _requestId <- None

  val mutable _state : BuddyResultState.t option = None
  method get_state = _state
  method grab_state = match _state with None->raise (Field_empty "messageCommitResult.state") | Some _x600 -> _x600
  method set_state _x600 = _state <- Some _x600
  method unset_state = _state <- None
  method reset_state = _state <- None

  val mutable _messageStoreRequestId : string option = None
  method get_messageStoreRequestId = _messageStoreRequestId
  method grab_messageStoreRequestId = match _messageStoreRequestId with None->raise (Field_empty "messageCommitResult.messageStoreRequestId") | Some _x601 -> _x601
  method set_messageStoreRequestId _x601 = _messageStoreRequestId <- Some _x601
  method unset_messageStoreRequestId = _messageStoreRequestId <- None
  method reset_messageStoreRequestId = _messageStoreRequestId <- None

  val mutable _messageIds : string list option = None
  method get_messageIds = _messageIds
  method grab_messageIds = match _messageIds with None->raise (Field_empty "messageCommitResult.messageIds") | Some _x602 -> _x602
  method set_messageIds _x602 = _messageIds <- Some _x602
  method unset_messageIds = _messageIds <- None
  method reset_messageIds = _messageIds <- None

  val mutable _receiverCount : Int64.t option = None
  method get_receiverCount = _receiverCount
  method grab_receiverCount = match _receiverCount with None->raise (Field_empty "messageCommitResult.receiverCount") | Some _x603 -> _x603
  method set_receiverCount _x603 = _receiverCount <- Some _x603
  method unset_receiverCount = _receiverCount <- None
  method reset_receiverCount = _receiverCount <- None

  val mutable _successCount : Int64.t option = None
  method get_successCount = _successCount
  method grab_successCount = match _successCount with None->raise (Field_empty "messageCommitResult.successCount") | Some _x604 -> _x604
  method set_successCount _x604 = _successCount <- Some _x604
  method unset_successCount = _successCount <- None
  method reset_successCount = _successCount <- None

  val mutable _failCount : Int64.t option = None
  method get_failCount = _failCount
  method grab_failCount = match _failCount with None->raise (Field_empty "messageCommitResult.failCount") | Some _x605 -> _x605
  method set_failCount _x605 = _failCount <- Some _x605
  method unset_failCount = _failCount <- None
  method reset_failCount = _failCount <- None

  val mutable _blockCount : Int64.t option = None
  method get_blockCount = _blockCount
  method grab_blockCount = match _blockCount with None->raise (Field_empty "messageCommitResult.blockCount") | Some _x606 -> _x606
  method set_blockCount _x606 = _blockCount <- Some _x606
  method unset_blockCount = _blockCount <- None
  method reset_blockCount = _blockCount <- None

  val mutable _unregisteredCount : Int64.t option = None
  method get_unregisteredCount = _unregisteredCount
  method grab_unregisteredCount = match _unregisteredCount with None->raise (Field_empty "messageCommitResult.unregisteredCount") | Some _x607 -> _x607
  method set_unregisteredCount _x607 = _unregisteredCount <- Some _x607
  method unset_unregisteredCount = _unregisteredCount <- None
  method reset_unregisteredCount = _unregisteredCount <- None

  val mutable _unrelatedCount : Int64.t option = None
  method get_unrelatedCount = _unrelatedCount
  method grab_unrelatedCount = match _unrelatedCount with None->raise (Field_empty "messageCommitResult.unrelatedCount") | Some _x608 -> _x608
  method set_unrelatedCount _x608 = _unrelatedCount <- Some _x608
  method unset_unrelatedCount = _unrelatedCount <- None
  method reset_unrelatedCount = _unrelatedCount <- None

  val mutable _errorDescription : string option = None
  method get_errorDescription = _errorDescription
  method grab_errorDescription = match _errorDescription with None->raise (Field_empty "messageCommitResult.errorDescription") | Some _x609 -> _x609
  method set_errorDescription _x609 = _errorDescription <- Some _x609
  method unset_errorDescription = _errorDescription <- None
  method reset_errorDescription = _errorDescription <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "MessageCommitResult";
    (match _requestId with None -> () | Some _v -> 
      oprot#writeFieldBegin("requestId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _state with None -> () | Some _v -> 
      oprot#writeFieldBegin("state",Protocol.T_I32,2);
      oprot#writeI32(BuddyResultState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _messageStoreRequestId with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageStoreRequestId",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _messageIds with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageIds",Protocol.T_LIST,4);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter612 ->         oprot#writeString(_iter612);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _receiverCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("receiverCount",Protocol.T_I64,11);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _successCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("successCount",Protocol.T_I64,12);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _failCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("failCount",Protocol.T_I64,13);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _blockCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("blockCount",Protocol.T_I64,14);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _unregisteredCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("unregisteredCount",Protocol.T_I64,15);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _unrelatedCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("unrelatedCount",Protocol.T_I64,16);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _errorDescription with None -> () | Some _v -> 
      oprot#writeFieldBegin("errorDescription",Protocol.T_STRING,21);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_messageCommitResult (iprot : Protocol.t) =
  let _str613 = new messageCommitResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t614,_id615) = iprot#readFieldBegin in
        if _t614 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id615 with 
          | 1 -> (if _t614 = Protocol.T_STRING then
              _str613#set_requestId iprot#readString
            else
              iprot#skip _t614)
          | 2 -> (if _t614 = Protocol.T_I32 then
              _str613#set_state (BuddyResultState.of_i iprot#readI32)
            else
              iprot#skip _t614)
          | 3 -> (if _t614 = Protocol.T_STRING then
              _str613#set_messageStoreRequestId iprot#readString
            else
              iprot#skip _t614)
          | 4 -> (if _t614 = Protocol.T_LIST then
              _str613#set_messageIds 
                (let (_etype619,_size616) = iprot#readListBegin in
                  let _con620 = (Array.to_list (Array.init _size616 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con620)
            else
              iprot#skip _t614)
          | 11 -> (if _t614 = Protocol.T_I64 then
              _str613#set_receiverCount iprot#readI64
            else
              iprot#skip _t614)
          | 12 -> (if _t614 = Protocol.T_I64 then
              _str613#set_successCount iprot#readI64
            else
              iprot#skip _t614)
          | 13 -> (if _t614 = Protocol.T_I64 then
              _str613#set_failCount iprot#readI64
            else
              iprot#skip _t614)
          | 14 -> (if _t614 = Protocol.T_I64 then
              _str613#set_blockCount iprot#readI64
            else
              iprot#skip _t614)
          | 15 -> (if _t614 = Protocol.T_I64 then
              _str613#set_unregisteredCount iprot#readI64
            else
              iprot#skip _t614)
          | 16 -> (if _t614 = Protocol.T_I64 then
              _str613#set_unrelatedCount iprot#readI64
            else
              iprot#skip _t614)
          | 21 -> (if _t614 = Protocol.T_STRING then
              _str613#set_errorDescription iprot#readString
            else
              iprot#skip _t614)
          | _ -> iprot#skip _t614);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str613

class callHost =
object (self)
  val mutable _host : string option = None
  method get_host = _host
  method grab_host = match _host with None->raise (Field_empty "callHost.host") | Some _x622 -> _x622
  method set_host _x622 = _host <- Some _x622
  method unset_host = _host <- None
  method reset_host = _host <- None

  val mutable _port : Int32.t option = None
  method get_port = _port
  method grab_port = match _port with None->raise (Field_empty "callHost.port") | Some _x623 -> _x623
  method set_port _x623 = _port <- Some _x623
  method unset_port = _port <- None
  method reset_port = _port <- None

  val mutable _zone : string option = None
  method get_zone = _zone
  method grab_zone = match _zone with None->raise (Field_empty "callHost.zone") | Some _x624 -> _x624
  method set_zone _x624 = _zone <- Some _x624
  method unset_zone = _zone <- None
  method reset_zone = _zone <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CallHost";
    (match _host with None -> () | Some _v -> 
      oprot#writeFieldBegin("host",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _port with None -> () | Some _v -> 
      oprot#writeFieldBegin("port",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _zone with None -> () | Some _v -> 
      oprot#writeFieldBegin("zone",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_callHost (iprot : Protocol.t) =
  let _str627 = new callHost in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t628,_id629) = iprot#readFieldBegin in
        if _t628 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id629 with 
          | 1 -> (if _t628 = Protocol.T_STRING then
              _str627#set_host iprot#readString
            else
              iprot#skip _t628)
          | 2 -> (if _t628 = Protocol.T_I32 then
              _str627#set_port iprot#readI32
            else
              iprot#skip _t628)
          | 3 -> (if _t628 = Protocol.T_STRING then
              _str627#set_zone iprot#readString
            else
              iprot#skip _t628)
          | _ -> iprot#skip _t628);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str627

class ageCheckDocomoResult =
object (self)
  val mutable _authUrl : string option = None
  method get_authUrl = _authUrl
  method grab_authUrl = match _authUrl with None->raise (Field_empty "ageCheckDocomoResult.authUrl") | Some _x631 -> _x631
  method set_authUrl _x631 = _authUrl <- Some _x631
  method unset_authUrl = _authUrl <- None
  method reset_authUrl = _authUrl <- None

  val mutable _userAgeType : UserAgeType.t option = None
  method get_userAgeType = _userAgeType
  method grab_userAgeType = match _userAgeType with None->raise (Field_empty "ageCheckDocomoResult.userAgeType") | Some _x632 -> _x632
  method set_userAgeType _x632 = _userAgeType <- Some _x632
  method unset_userAgeType = _userAgeType <- None
  method reset_userAgeType = _userAgeType <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "AgeCheckDocomoResult";
    (match _authUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("authUrl",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _userAgeType with None -> () | Some _v -> 
      oprot#writeFieldBegin("userAgeType",Protocol.T_I32,2);
      oprot#writeI32(UserAgeType.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_ageCheckDocomoResult (iprot : Protocol.t) =
  let _str635 = new ageCheckDocomoResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t636,_id637) = iprot#readFieldBegin in
        if _t636 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id637 with 
          | 1 -> (if _t636 = Protocol.T_STRING then
              _str635#set_authUrl iprot#readString
            else
              iprot#skip _t636)
          | 2 -> (if _t636 = Protocol.T_I32 then
              _str635#set_userAgeType (UserAgeType.of_i iprot#readI32)
            else
              iprot#skip _t636)
          | _ -> iprot#skip _t636);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str635

class ageCheckRequestResult =
object (self)
  val mutable _authUrl : string option = None
  method get_authUrl = _authUrl
  method grab_authUrl = match _authUrl with None->raise (Field_empty "ageCheckRequestResult.authUrl") | Some _x639 -> _x639
  method set_authUrl _x639 = _authUrl <- Some _x639
  method unset_authUrl = _authUrl <- None
  method reset_authUrl = _authUrl <- None

  val mutable _sessionId : string option = None
  method get_sessionId = _sessionId
  method grab_sessionId = match _sessionId with None->raise (Field_empty "ageCheckRequestResult.sessionId") | Some _x640 -> _x640
  method set_sessionId _x640 = _sessionId <- Some _x640
  method unset_sessionId = _sessionId <- None
  method reset_sessionId = _sessionId <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "AgeCheckRequestResult";
    (match _authUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("authUrl",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _sessionId with None -> () | Some _v -> 
      oprot#writeFieldBegin("sessionId",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_ageCheckRequestResult (iprot : Protocol.t) =
  let _str643 = new ageCheckRequestResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t644,_id645) = iprot#readFieldBegin in
        if _t644 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id645 with 
          | 1 -> (if _t644 = Protocol.T_STRING then
              _str643#set_authUrl iprot#readString
            else
              iprot#skip _t644)
          | 2 -> (if _t644 = Protocol.T_STRING then
              _str643#set_sessionId iprot#readString
            else
              iprot#skip _t644)
          | _ -> iprot#skip _t644);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str643

class textMessageAnnouncementContents =
object (self)
  val mutable _messageId : string option = None
  method get_messageId = _messageId
  method grab_messageId = match _messageId with None->raise (Field_empty "textMessageAnnouncementContents.messageId") | Some _x647 -> _x647
  method set_messageId _x647 = _messageId <- Some _x647
  method unset_messageId = _messageId <- None
  method reset_messageId = _messageId <- None

  val mutable _text : string option = None
  method get_text = _text
  method grab_text = match _text with None->raise (Field_empty "textMessageAnnouncementContents.text") | Some _x648 -> _x648
  method set_text _x648 = _text <- Some _x648
  method unset_text = _text <- None
  method reset_text = _text <- None

  val mutable _senderSquareMemberMid : string option = None
  method get_senderSquareMemberMid = _senderSquareMemberMid
  method grab_senderSquareMemberMid = match _senderSquareMemberMid with None->raise (Field_empty "textMessageAnnouncementContents.senderSquareMemberMid") | Some _x649 -> _x649
  method set_senderSquareMemberMid _x649 = _senderSquareMemberMid <- Some _x649
  method unset_senderSquareMemberMid = _senderSquareMemberMid <- None
  method reset_senderSquareMemberMid = _senderSquareMemberMid <- None

  val mutable _createdAt : Int64.t option = None
  method get_createdAt = _createdAt
  method grab_createdAt = match _createdAt with None->raise (Field_empty "textMessageAnnouncementContents.createdAt") | Some _x650 -> _x650
  method set_createdAt _x650 = _createdAt <- Some _x650
  method unset_createdAt = _createdAt <- None
  method reset_createdAt = _createdAt <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "TextMessageAnnouncementContents";
    (match _messageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _text with None -> () | Some _v -> 
      oprot#writeFieldBegin("text",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _senderSquareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("senderSquareMemberMid",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _createdAt with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdAt",Protocol.T_I64,4);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_textMessageAnnouncementContents (iprot : Protocol.t) =
  let _str653 = new textMessageAnnouncementContents in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t654,_id655) = iprot#readFieldBegin in
        if _t654 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id655 with 
          | 1 -> (if _t654 = Protocol.T_STRING then
              _str653#set_messageId iprot#readString
            else
              iprot#skip _t654)
          | 2 -> (if _t654 = Protocol.T_STRING then
              _str653#set_text iprot#readString
            else
              iprot#skip _t654)
          | 3 -> (if _t654 = Protocol.T_STRING then
              _str653#set_senderSquareMemberMid iprot#readString
            else
              iprot#skip _t654)
          | 4 -> (if _t654 = Protocol.T_I64 then
              _str653#set_createdAt iprot#readI64
            else
              iprot#skip _t654)
          | _ -> iprot#skip _t654);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str653

class squareChatAnnouncementContents =
object (self)
  val mutable _textMessageAnnouncementContents : textMessageAnnouncementContents option = None
  method get_textMessageAnnouncementContents = _textMessageAnnouncementContents
  method grab_textMessageAnnouncementContents = match _textMessageAnnouncementContents with None->raise (Field_empty "squareChatAnnouncementContents.textMessageAnnouncementContents") | Some _x657 -> _x657
  method set_textMessageAnnouncementContents _x657 = _textMessageAnnouncementContents <- Some _x657
  method unset_textMessageAnnouncementContents = _textMessageAnnouncementContents <- None
  method reset_textMessageAnnouncementContents = _textMessageAnnouncementContents <- None

  method copy =
      let _new = Oo.copy self in
      if _textMessageAnnouncementContents <> None then
        _new#set_textMessageAnnouncementContents self#grab_textMessageAnnouncementContents#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareChatAnnouncementContents";
    (match _textMessageAnnouncementContents with None -> () | Some _v -> 
      oprot#writeFieldBegin("textMessageAnnouncementContents",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareChatAnnouncementContents (iprot : Protocol.t) =
  let _str660 = new squareChatAnnouncementContents in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t661,_id662) = iprot#readFieldBegin in
        if _t661 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id662 with 
          | 1 -> (if _t661 = Protocol.T_STRUCT then
              _str660#set_textMessageAnnouncementContents (read_textMessageAnnouncementContents iprot)
            else
              iprot#skip _t661)
          | _ -> iprot#skip _t661);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str660

class squareChatAnnouncement =
object (self)
  val mutable _announcementSeq : Int64.t option = None
  method get_announcementSeq = _announcementSeq
  method grab_announcementSeq = match _announcementSeq with None->raise (Field_empty "squareChatAnnouncement.announcementSeq") | Some _x664 -> _x664
  method set_announcementSeq _x664 = _announcementSeq <- Some _x664
  method unset_announcementSeq = _announcementSeq <- None
  method reset_announcementSeq = _announcementSeq <- None

  val mutable _type : SquareChatAnnouncementType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "squareChatAnnouncement.type") | Some _x665 -> _x665
  method set_type _x665 = _type <- Some _x665
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _contents : squareChatAnnouncementContents option = None
  method get_contents = _contents
  method grab_contents = match _contents with None->raise (Field_empty "squareChatAnnouncement.contents") | Some _x666 -> _x666
  method set_contents _x666 = _contents <- Some _x666
  method unset_contents = _contents <- None
  method reset_contents = _contents <- None

  method copy =
      let _new = Oo.copy self in
      if _contents <> None then
        _new#set_contents self#grab_contents#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareChatAnnouncement";
    (match _announcementSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("announcementSeq",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,2);
      oprot#writeI32(SquareChatAnnouncementType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _contents with None -> () | Some _v -> 
      oprot#writeFieldBegin("contents",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareChatAnnouncement (iprot : Protocol.t) =
  let _str669 = new squareChatAnnouncement in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t670,_id671) = iprot#readFieldBegin in
        if _t670 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id671 with 
          | 1 -> (if _t670 = Protocol.T_I64 then
              _str669#set_announcementSeq iprot#readI64
            else
              iprot#skip _t670)
          | 2 -> (if _t670 = Protocol.T_I32 then
              _str669#set_type (SquareChatAnnouncementType.of_i iprot#readI32)
            else
              iprot#skip _t670)
          | 3 -> (if _t670 = Protocol.T_STRUCT then
              _str669#set_contents (read_squareChatAnnouncementContents iprot)
            else
              iprot#skip _t670)
          | _ -> iprot#skip _t670);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str669

class announcement =
object (self)
  val mutable _index : Int32.t option = None
  method get_index = _index
  method grab_index = match _index with None->raise (Field_empty "announcement.index") | Some _x673 -> _x673
  method set_index _x673 = _index <- Some _x673
  method unset_index = _index <- None
  method reset_index = _index <- None

  val mutable _forceUpdate : bool option = None
  method get_forceUpdate = _forceUpdate
  method grab_forceUpdate = match _forceUpdate with None->raise (Field_empty "announcement.forceUpdate") | Some _x674 -> _x674
  method set_forceUpdate _x674 = _forceUpdate <- Some _x674
  method unset_forceUpdate = _forceUpdate <- None
  method reset_forceUpdate = _forceUpdate <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "announcement.title") | Some _x675 -> _x675
  method set_title _x675 = _title <- Some _x675
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _text : string option = None
  method get_text = _text
  method grab_text = match _text with None->raise (Field_empty "announcement.text") | Some _x676 -> _x676
  method set_text _x676 = _text <- Some _x676
  method unset_text = _text <- None
  method reset_text = _text <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "announcement.createdTime") | Some _x677 -> _x677
  method set_createdTime _x677 = _createdTime <- Some _x677
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _pictureUrl : string option = None
  method get_pictureUrl = _pictureUrl
  method grab_pictureUrl = match _pictureUrl with None->raise (Field_empty "announcement.pictureUrl") | Some _x678 -> _x678
  method set_pictureUrl _x678 = _pictureUrl <- Some _x678
  method unset_pictureUrl = _pictureUrl <- None
  method reset_pictureUrl = _pictureUrl <- None

  val mutable _thumbnailUrl : string option = None
  method get_thumbnailUrl = _thumbnailUrl
  method grab_thumbnailUrl = match _thumbnailUrl with None->raise (Field_empty "announcement.thumbnailUrl") | Some _x679 -> _x679
  method set_thumbnailUrl _x679 = _thumbnailUrl <- Some _x679
  method unset_thumbnailUrl = _thumbnailUrl <- None
  method reset_thumbnailUrl = _thumbnailUrl <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Announcement";
    (match _index with None -> () | Some _v -> 
      oprot#writeFieldBegin("index",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _forceUpdate with None -> () | Some _v -> 
      oprot#writeFieldBegin("forceUpdate",Protocol.T_BOOL,10);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _text with None -> () | Some _v -> 
      oprot#writeFieldBegin("text",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,13);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _pictureUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("pictureUrl",Protocol.T_STRING,14);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _thumbnailUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("thumbnailUrl",Protocol.T_STRING,15);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_announcement (iprot : Protocol.t) =
  let _str682 = new announcement in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t683,_id684) = iprot#readFieldBegin in
        if _t683 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id684 with 
          | 1 -> (if _t683 = Protocol.T_I32 then
              _str682#set_index iprot#readI32
            else
              iprot#skip _t683)
          | 10 -> (if _t683 = Protocol.T_BOOL then
              _str682#set_forceUpdate iprot#readBool
            else
              iprot#skip _t683)
          | 11 -> (if _t683 = Protocol.T_STRING then
              _str682#set_title iprot#readString
            else
              iprot#skip _t683)
          | 12 -> (if _t683 = Protocol.T_STRING then
              _str682#set_text iprot#readString
            else
              iprot#skip _t683)
          | 13 -> (if _t683 = Protocol.T_I64 then
              _str682#set_createdTime iprot#readI64
            else
              iprot#skip _t683)
          | 14 -> (if _t683 = Protocol.T_STRING then
              _str682#set_pictureUrl iprot#readString
            else
              iprot#skip _t683)
          | 15 -> (if _t683 = Protocol.T_STRING then
              _str682#set_thumbnailUrl iprot#readString
            else
              iprot#skip _t683)
          | _ -> iprot#skip _t683);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str682

class channelProvider =
object (self)
  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "channelProvider.name") | Some _x686 -> _x686
  method set_name _x686 = _name <- Some _x686
  method unset_name = _name <- None
  method reset_name = _name <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelProvider";
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_channelProvider (iprot : Protocol.t) =
  let _str689 = new channelProvider in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t690,_id691) = iprot#readFieldBegin in
        if _t690 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id691 with 
          | 1 -> (if _t690 = Protocol.T_STRING then
              _str689#set_name iprot#readString
            else
              iprot#skip _t690)
          | _ -> iprot#skip _t690);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str689

class e2EEPublicKey =
object (self)
  val mutable _version : Int32.t option = None
  method get_version = _version
  method grab_version = match _version with None->raise (Field_empty "e2EEPublicKey.version") | Some _x693 -> _x693
  method set_version _x693 = _version <- Some _x693
  method unset_version = _version <- None
  method reset_version = _version <- None

  val mutable _keyId : Int32.t option = None
  method get_keyId = _keyId
  method grab_keyId = match _keyId with None->raise (Field_empty "e2EEPublicKey.keyId") | Some _x694 -> _x694
  method set_keyId _x694 = _keyId <- Some _x694
  method unset_keyId = _keyId <- None
  method reset_keyId = _keyId <- None

  val mutable _keyData : string option = None
  method get_keyData = _keyData
  method grab_keyData = match _keyData with None->raise (Field_empty "e2EEPublicKey.keyData") | Some _x695 -> _x695
  method set_keyData _x695 = _keyData <- Some _x695
  method unset_keyData = _keyData <- None
  method reset_keyData = _keyData <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "e2EEPublicKey.createdTime") | Some _x696 -> _x696
  method set_createdTime _x696 = _createdTime <- Some _x696
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "E2EEPublicKey";
    (match _version with None -> () | Some _v -> 
      oprot#writeFieldBegin("version",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _keyId with None -> () | Some _v -> 
      oprot#writeFieldBegin("keyId",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _keyData with None -> () | Some _v -> 
      oprot#writeFieldBegin("keyData",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,5);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_e2EEPublicKey (iprot : Protocol.t) =
  let _str699 = new e2EEPublicKey in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t700,_id701) = iprot#readFieldBegin in
        if _t700 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id701 with 
          | 1 -> (if _t700 = Protocol.T_I32 then
              _str699#set_version iprot#readI32
            else
              iprot#skip _t700)
          | 2 -> (if _t700 = Protocol.T_I32 then
              _str699#set_keyId iprot#readI32
            else
              iprot#skip _t700)
          | 4 -> (if _t700 = Protocol.T_STRING then
              _str699#set_keyData iprot#readString
            else
              iprot#skip _t700)
          | 5 -> (if _t700 = Protocol.T_I64 then
              _str699#set_createdTime iprot#readI64
            else
              iprot#skip _t700)
          | _ -> iprot#skip _t700);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str699

class channelDomain =
object (self)
  val mutable _host : string option = None
  method get_host = _host
  method grab_host = match _host with None->raise (Field_empty "channelDomain.host") | Some _x703 -> _x703
  method set_host _x703 = _host <- Some _x703
  method unset_host = _host <- None
  method reset_host = _host <- None

  val mutable _removed : bool option = None
  method get_removed = _removed
  method grab_removed = match _removed with None->raise (Field_empty "channelDomain.removed") | Some _x704 -> _x704
  method set_removed _x704 = _removed <- Some _x704
  method unset_removed = _removed <- None
  method reset_removed = _removed <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelDomain";
    (match _host with None -> () | Some _v -> 
      oprot#writeFieldBegin("host",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _removed with None -> () | Some _v -> 
      oprot#writeFieldBegin("removed",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_channelDomain (iprot : Protocol.t) =
  let _str707 = new channelDomain in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t708,_id709) = iprot#readFieldBegin in
        if _t708 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id709 with 
          | 1 -> (if _t708 = Protocol.T_STRING then
              _str707#set_host iprot#readString
            else
              iprot#skip _t708)
          | 2 -> (if _t708 = Protocol.T_BOOL then
              _str707#set_removed iprot#readBool
            else
              iprot#skip _t708)
          | _ -> iprot#skip _t708);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str707

class e2EENegotiationResult =
object (self)
  val mutable _allowedTypes : (ContentType.t,bool) Hashtbl.t option = None
  method get_allowedTypes = _allowedTypes
  method grab_allowedTypes = match _allowedTypes with None->raise (Field_empty "e2EENegotiationResult.allowedTypes") | Some _x711 -> _x711
  method set_allowedTypes _x711 = _allowedTypes <- Some _x711
  method unset_allowedTypes = _allowedTypes <- None
  method reset_allowedTypes = _allowedTypes <- None

  val mutable _publicKey : e2EEPublicKey option = None
  method get_publicKey = _publicKey
  method grab_publicKey = match _publicKey with None->raise (Field_empty "e2EENegotiationResult.publicKey") | Some _x712 -> _x712
  method set_publicKey _x712 = _publicKey <- Some _x712
  method unset_publicKey = _publicKey <- None
  method reset_publicKey = _publicKey <- None

  method copy =
      let _new = Oo.copy self in
      if _allowedTypes <> None then
        _new#set_allowedTypes (Hashtbl.copy self#grab_allowedTypes);
      if _publicKey <> None then
        _new#set_publicKey self#grab_publicKey#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "E2EENegotiationResult";
    (match _allowedTypes with None -> () | Some _v -> 
      oprot#writeFieldBegin("allowedTypes",Protocol.T_SET,1);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter715 -> fun _ ->         oprot#writeI32(ContentType.to_i _iter715);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _publicKey with None -> () | Some _v -> 
      oprot#writeFieldBegin("publicKey",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_e2EENegotiationResult (iprot : Protocol.t) =
  let _str716 = new e2EENegotiationResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t717,_id718) = iprot#readFieldBegin in
        if _t717 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id718 with 
          | 1 -> (if _t717 = Protocol.T_SET then
              _str716#set_allowedTypes 
                (let (_etype722,_size719) = iprot#readSetBegin in
                let _con723 = Hashtbl.create _size719 in
                  for i = 1 to _size719 do
                    Hashtbl.add _con723 (ContentType.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con723)
            else
              iprot#skip _t717)
          | 2 -> (if _t717 = Protocol.T_STRUCT then
              _str716#set_publicKey (read_e2EEPublicKey iprot)
            else
              iprot#skip _t717)
          | _ -> iprot#skip _t717);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str716

class oTPResult =
object (self)
  val mutable _otpId : string option = None
  method get_otpId = _otpId
  method grab_otpId = match _otpId with None->raise (Field_empty "oTPResult.otpId") | Some _x725 -> _x725
  method set_otpId _x725 = _otpId <- Some _x725
  method unset_otpId = _otpId <- None
  method reset_otpId = _otpId <- None

  val mutable _otp : string option = None
  method get_otp = _otp
  method grab_otp = match _otp with None->raise (Field_empty "oTPResult.otp") | Some _x726 -> _x726
  method set_otp _x726 = _otp <- Some _x726
  method unset_otp = _otp <- None
  method reset_otp = _otp <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "OTPResult";
    (match _otpId with None -> () | Some _v -> 
      oprot#writeFieldBegin("otpId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _otp with None -> () | Some _v -> 
      oprot#writeFieldBegin("otp",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_oTPResult (iprot : Protocol.t) =
  let _str729 = new oTPResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t730,_id731) = iprot#readFieldBegin in
        if _t730 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id731 with 
          | 1 -> (if _t730 = Protocol.T_STRING then
              _str729#set_otpId iprot#readString
            else
              iprot#skip _t730)
          | 2 -> (if _t730 = Protocol.T_STRING then
              _str729#set_otp iprot#readString
            else
              iprot#skip _t730)
          | _ -> iprot#skip _t730);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str729

class square =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "square.mid") | Some _x733 -> _x733
  method set_mid _x733 = _mid <- Some _x733
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "square.name") | Some _x734 -> _x734
  method set_name _x734 = _name <- Some _x734
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _welcomeMessage : string option = None
  method get_welcomeMessage = _welcomeMessage
  method grab_welcomeMessage = match _welcomeMessage with None->raise (Field_empty "square.welcomeMessage") | Some _x735 -> _x735
  method set_welcomeMessage _x735 = _welcomeMessage <- Some _x735
  method unset_welcomeMessage = _welcomeMessage <- None
  method reset_welcomeMessage = _welcomeMessage <- None

  val mutable _profileImageObsHash : string option = None
  method get_profileImageObsHash = _profileImageObsHash
  method grab_profileImageObsHash = match _profileImageObsHash with None->raise (Field_empty "square.profileImageObsHash") | Some _x736 -> _x736
  method set_profileImageObsHash _x736 = _profileImageObsHash <- Some _x736
  method unset_profileImageObsHash = _profileImageObsHash <- None
  method reset_profileImageObsHash = _profileImageObsHash <- None

  val mutable _desc : string option = None
  method get_desc = _desc
  method grab_desc = match _desc with None->raise (Field_empty "square.desc") | Some _x737 -> _x737
  method set_desc _x737 = _desc <- Some _x737
  method unset_desc = _desc <- None
  method reset_desc = _desc <- None

  val mutable _searchable : bool option = None
  method get_searchable = _searchable
  method grab_searchable = match _searchable with None->raise (Field_empty "square.searchable") | Some _x738 -> _x738
  method set_searchable _x738 = _searchable <- Some _x738
  method unset_searchable = _searchable <- None
  method reset_searchable = _searchable <- None

  val mutable _type : SquareType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "square.type") | Some _x739 -> _x739
  method set_type _x739 = _type <- Some _x739
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _categoryID : Int32.t option = None
  method get_categoryID = _categoryID
  method grab_categoryID = match _categoryID with None->raise (Field_empty "square.categoryID") | Some _x740 -> _x740
  method set_categoryID _x740 = _categoryID <- Some _x740
  method unset_categoryID = _categoryID <- None
  method reset_categoryID = _categoryID <- None

  val mutable _invitationURL : string option = None
  method get_invitationURL = _invitationURL
  method grab_invitationURL = match _invitationURL with None->raise (Field_empty "square.invitationURL") | Some _x741 -> _x741
  method set_invitationURL _x741 = _invitationURL <- Some _x741
  method unset_invitationURL = _invitationURL <- None
  method reset_invitationURL = _invitationURL <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "square.revision") | Some _x742 -> _x742
  method set_revision _x742 = _revision <- Some _x742
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _ableToUseInvitationTicket : bool option = None
  method get_ableToUseInvitationTicket = _ableToUseInvitationTicket
  method grab_ableToUseInvitationTicket = match _ableToUseInvitationTicket with None->raise (Field_empty "square.ableToUseInvitationTicket") | Some _x743 -> _x743
  method set_ableToUseInvitationTicket _x743 = _ableToUseInvitationTicket <- Some _x743
  method unset_ableToUseInvitationTicket = _ableToUseInvitationTicket <- None
  method reset_ableToUseInvitationTicket = _ableToUseInvitationTicket <- None

  val mutable _state : SquareState.t option = None
  method get_state = _state
  method grab_state = match _state with None->raise (Field_empty "square.state") | Some _x744 -> _x744
  method set_state _x744 = _state <- Some _x744
  method unset_state = _state <- None
  method reset_state = _state <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Square";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _welcomeMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("welcomeMessage",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _profileImageObsHash with None -> () | Some _v -> 
      oprot#writeFieldBegin("profileImageObsHash",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _desc with None -> () | Some _v -> 
      oprot#writeFieldBegin("desc",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _searchable with None -> () | Some _v -> 
      oprot#writeFieldBegin("searchable",Protocol.T_BOOL,6);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,7);
      oprot#writeI32(SquareType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _categoryID with None -> () | Some _v -> 
      oprot#writeFieldBegin("categoryID",Protocol.T_I32,8);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _invitationURL with None -> () | Some _v -> 
      oprot#writeFieldBegin("invitationURL",Protocol.T_STRING,9);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,10);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _ableToUseInvitationTicket with None -> () | Some _v -> 
      oprot#writeFieldBegin("ableToUseInvitationTicket",Protocol.T_BOOL,11);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _state with None -> () | Some _v -> 
      oprot#writeFieldBegin("state",Protocol.T_I32,12);
      oprot#writeI32(SquareState.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_square (iprot : Protocol.t) =
  let _str747 = new square in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t748,_id749) = iprot#readFieldBegin in
        if _t748 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id749 with 
          | 1 -> (if _t748 = Protocol.T_STRING then
              _str747#set_mid iprot#readString
            else
              iprot#skip _t748)
          | 2 -> (if _t748 = Protocol.T_STRING then
              _str747#set_name iprot#readString
            else
              iprot#skip _t748)
          | 3 -> (if _t748 = Protocol.T_STRING then
              _str747#set_welcomeMessage iprot#readString
            else
              iprot#skip _t748)
          | 4 -> (if _t748 = Protocol.T_STRING then
              _str747#set_profileImageObsHash iprot#readString
            else
              iprot#skip _t748)
          | 5 -> (if _t748 = Protocol.T_STRING then
              _str747#set_desc iprot#readString
            else
              iprot#skip _t748)
          | 6 -> (if _t748 = Protocol.T_BOOL then
              _str747#set_searchable iprot#readBool
            else
              iprot#skip _t748)
          | 7 -> (if _t748 = Protocol.T_I32 then
              _str747#set_type (SquareType.of_i iprot#readI32)
            else
              iprot#skip _t748)
          | 8 -> (if _t748 = Protocol.T_I32 then
              _str747#set_categoryID iprot#readI32
            else
              iprot#skip _t748)
          | 9 -> (if _t748 = Protocol.T_STRING then
              _str747#set_invitationURL iprot#readString
            else
              iprot#skip _t748)
          | 10 -> (if _t748 = Protocol.T_I64 then
              _str747#set_revision iprot#readI64
            else
              iprot#skip _t748)
          | 11 -> (if _t748 = Protocol.T_BOOL then
              _str747#set_ableToUseInvitationTicket iprot#readBool
            else
              iprot#skip _t748)
          | 12 -> (if _t748 = Protocol.T_I32 then
              _str747#set_state (SquareState.of_i iprot#readI32)
            else
              iprot#skip _t748)
          | _ -> iprot#skip _t748);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str747

class squareAuthority =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareAuthority.squareMid") | Some _x751 -> _x751
  method set_squareMid _x751 = _squareMid <- Some _x751
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _updateSquareProfile : SquareMemberRole.t option = None
  method get_updateSquareProfile = _updateSquareProfile
  method grab_updateSquareProfile = match _updateSquareProfile with None->raise (Field_empty "squareAuthority.updateSquareProfile") | Some _x752 -> _x752
  method set_updateSquareProfile _x752 = _updateSquareProfile <- Some _x752
  method unset_updateSquareProfile = _updateSquareProfile <- None
  method reset_updateSquareProfile = _updateSquareProfile <- None

  val mutable _inviteNewMember : SquareMemberRole.t option = None
  method get_inviteNewMember = _inviteNewMember
  method grab_inviteNewMember = match _inviteNewMember with None->raise (Field_empty "squareAuthority.inviteNewMember") | Some _x753 -> _x753
  method set_inviteNewMember _x753 = _inviteNewMember <- Some _x753
  method unset_inviteNewMember = _inviteNewMember <- None
  method reset_inviteNewMember = _inviteNewMember <- None

  val mutable _approveJoinRequest : SquareMemberRole.t option = None
  method get_approveJoinRequest = _approveJoinRequest
  method grab_approveJoinRequest = match _approveJoinRequest with None->raise (Field_empty "squareAuthority.approveJoinRequest") | Some _x754 -> _x754
  method set_approveJoinRequest _x754 = _approveJoinRequest <- Some _x754
  method unset_approveJoinRequest = _approveJoinRequest <- None
  method reset_approveJoinRequest = _approveJoinRequest <- None

  val mutable _createPost : SquareMemberRole.t option = None
  method get_createPost = _createPost
  method grab_createPost = match _createPost with None->raise (Field_empty "squareAuthority.createPost") | Some _x755 -> _x755
  method set_createPost _x755 = _createPost <- Some _x755
  method unset_createPost = _createPost <- None
  method reset_createPost = _createPost <- None

  val mutable _createOpenSquareChat : SquareMemberRole.t option = None
  method get_createOpenSquareChat = _createOpenSquareChat
  method grab_createOpenSquareChat = match _createOpenSquareChat with None->raise (Field_empty "squareAuthority.createOpenSquareChat") | Some _x756 -> _x756
  method set_createOpenSquareChat _x756 = _createOpenSquareChat <- Some _x756
  method unset_createOpenSquareChat = _createOpenSquareChat <- None
  method reset_createOpenSquareChat = _createOpenSquareChat <- None

  val mutable _deleteSquareChatOrPost : SquareMemberRole.t option = None
  method get_deleteSquareChatOrPost = _deleteSquareChatOrPost
  method grab_deleteSquareChatOrPost = match _deleteSquareChatOrPost with None->raise (Field_empty "squareAuthority.deleteSquareChatOrPost") | Some _x757 -> _x757
  method set_deleteSquareChatOrPost _x757 = _deleteSquareChatOrPost <- Some _x757
  method unset_deleteSquareChatOrPost = _deleteSquareChatOrPost <- None
  method reset_deleteSquareChatOrPost = _deleteSquareChatOrPost <- None

  val mutable _removeSquareMember : SquareMemberRole.t option = None
  method get_removeSquareMember = _removeSquareMember
  method grab_removeSquareMember = match _removeSquareMember with None->raise (Field_empty "squareAuthority.removeSquareMember") | Some _x758 -> _x758
  method set_removeSquareMember _x758 = _removeSquareMember <- Some _x758
  method unset_removeSquareMember = _removeSquareMember <- None
  method reset_removeSquareMember = _removeSquareMember <- None

  val mutable _grantRole : SquareMemberRole.t option = None
  method get_grantRole = _grantRole
  method grab_grantRole = match _grantRole with None->raise (Field_empty "squareAuthority.grantRole") | Some _x759 -> _x759
  method set_grantRole _x759 = _grantRole <- Some _x759
  method unset_grantRole = _grantRole <- None
  method reset_grantRole = _grantRole <- None

  val mutable _enableInvitationTicket : SquareMemberRole.t option = None
  method get_enableInvitationTicket = _enableInvitationTicket
  method grab_enableInvitationTicket = match _enableInvitationTicket with None->raise (Field_empty "squareAuthority.enableInvitationTicket") | Some _x760 -> _x760
  method set_enableInvitationTicket _x760 = _enableInvitationTicket <- Some _x760
  method unset_enableInvitationTicket = _enableInvitationTicket <- None
  method reset_enableInvitationTicket = _enableInvitationTicket <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "squareAuthority.revision") | Some _x761 -> _x761
  method set_revision _x761 = _revision <- Some _x761
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareAuthority";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _updateSquareProfile with None -> () | Some _v -> 
      oprot#writeFieldBegin("updateSquareProfile",Protocol.T_I32,2);
      oprot#writeI32(SquareMemberRole.to_i _v);
      oprot#writeFieldEnd
    );
    (match _inviteNewMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("inviteNewMember",Protocol.T_I32,3);
      oprot#writeI32(SquareMemberRole.to_i _v);
      oprot#writeFieldEnd
    );
    (match _approveJoinRequest with None -> () | Some _v -> 
      oprot#writeFieldBegin("approveJoinRequest",Protocol.T_I32,4);
      oprot#writeI32(SquareMemberRole.to_i _v);
      oprot#writeFieldEnd
    );
    (match _createPost with None -> () | Some _v -> 
      oprot#writeFieldBegin("createPost",Protocol.T_I32,5);
      oprot#writeI32(SquareMemberRole.to_i _v);
      oprot#writeFieldEnd
    );
    (match _createOpenSquareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("createOpenSquareChat",Protocol.T_I32,6);
      oprot#writeI32(SquareMemberRole.to_i _v);
      oprot#writeFieldEnd
    );
    (match _deleteSquareChatOrPost with None -> () | Some _v -> 
      oprot#writeFieldBegin("deleteSquareChatOrPost",Protocol.T_I32,7);
      oprot#writeI32(SquareMemberRole.to_i _v);
      oprot#writeFieldEnd
    );
    (match _removeSquareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("removeSquareMember",Protocol.T_I32,8);
      oprot#writeI32(SquareMemberRole.to_i _v);
      oprot#writeFieldEnd
    );
    (match _grantRole with None -> () | Some _v -> 
      oprot#writeFieldBegin("grantRole",Protocol.T_I32,9);
      oprot#writeI32(SquareMemberRole.to_i _v);
      oprot#writeFieldEnd
    );
    (match _enableInvitationTicket with None -> () | Some _v -> 
      oprot#writeFieldBegin("enableInvitationTicket",Protocol.T_I32,10);
      oprot#writeI32(SquareMemberRole.to_i _v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,11);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareAuthority (iprot : Protocol.t) =
  let _str764 = new squareAuthority in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t765,_id766) = iprot#readFieldBegin in
        if _t765 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id766 with 
          | 1 -> (if _t765 = Protocol.T_STRING then
              _str764#set_squareMid iprot#readString
            else
              iprot#skip _t765)
          | 2 -> (if _t765 = Protocol.T_I32 then
              _str764#set_updateSquareProfile (SquareMemberRole.of_i iprot#readI32)
            else
              iprot#skip _t765)
          | 3 -> (if _t765 = Protocol.T_I32 then
              _str764#set_inviteNewMember (SquareMemberRole.of_i iprot#readI32)
            else
              iprot#skip _t765)
          | 4 -> (if _t765 = Protocol.T_I32 then
              _str764#set_approveJoinRequest (SquareMemberRole.of_i iprot#readI32)
            else
              iprot#skip _t765)
          | 5 -> (if _t765 = Protocol.T_I32 then
              _str764#set_createPost (SquareMemberRole.of_i iprot#readI32)
            else
              iprot#skip _t765)
          | 6 -> (if _t765 = Protocol.T_I32 then
              _str764#set_createOpenSquareChat (SquareMemberRole.of_i iprot#readI32)
            else
              iprot#skip _t765)
          | 7 -> (if _t765 = Protocol.T_I32 then
              _str764#set_deleteSquareChatOrPost (SquareMemberRole.of_i iprot#readI32)
            else
              iprot#skip _t765)
          | 8 -> (if _t765 = Protocol.T_I32 then
              _str764#set_removeSquareMember (SquareMemberRole.of_i iprot#readI32)
            else
              iprot#skip _t765)
          | 9 -> (if _t765 = Protocol.T_I32 then
              _str764#set_grantRole (SquareMemberRole.of_i iprot#readI32)
            else
              iprot#skip _t765)
          | 10 -> (if _t765 = Protocol.T_I32 then
              _str764#set_enableInvitationTicket (SquareMemberRole.of_i iprot#readI32)
            else
              iprot#skip _t765)
          | 11 -> (if _t765 = Protocol.T_I64 then
              _str764#set_revision iprot#readI64
            else
              iprot#skip _t765)
          | _ -> iprot#skip _t765);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str764

class squarePreference =
object (self)
  val mutable _favoriteTimestamp : Int64.t option = None
  method get_favoriteTimestamp = _favoriteTimestamp
  method grab_favoriteTimestamp = match _favoriteTimestamp with None->raise (Field_empty "squarePreference.favoriteTimestamp") | Some _x768 -> _x768
  method set_favoriteTimestamp _x768 = _favoriteTimestamp <- Some _x768
  method unset_favoriteTimestamp = _favoriteTimestamp <- None
  method reset_favoriteTimestamp = _favoriteTimestamp <- None

  val mutable _notiForNewJoinRequest : bool option = None
  method get_notiForNewJoinRequest = _notiForNewJoinRequest
  method grab_notiForNewJoinRequest = match _notiForNewJoinRequest with None->raise (Field_empty "squarePreference.notiForNewJoinRequest") | Some _x769 -> _x769
  method set_notiForNewJoinRequest _x769 = _notiForNewJoinRequest <- Some _x769
  method unset_notiForNewJoinRequest = _notiForNewJoinRequest <- None
  method reset_notiForNewJoinRequest = _notiForNewJoinRequest <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquarePreference";
    (match _favoriteTimestamp with None -> () | Some _v -> 
      oprot#writeFieldBegin("favoriteTimestamp",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _notiForNewJoinRequest with None -> () | Some _v -> 
      oprot#writeFieldBegin("notiForNewJoinRequest",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squarePreference (iprot : Protocol.t) =
  let _str772 = new squarePreference in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t773,_id774) = iprot#readFieldBegin in
        if _t773 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id774 with 
          | 1 -> (if _t773 = Protocol.T_I64 then
              _str772#set_favoriteTimestamp iprot#readI64
            else
              iprot#skip _t773)
          | 2 -> (if _t773 = Protocol.T_BOOL then
              _str772#set_notiForNewJoinRequest iprot#readBool
            else
              iprot#skip _t773)
          | _ -> iprot#skip _t773);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str772

class squareMember =
object (self)
  val mutable _squareMemberMid : string option = None
  method get_squareMemberMid = _squareMemberMid
  method grab_squareMemberMid = match _squareMemberMid with None->raise (Field_empty "squareMember.squareMemberMid") | Some _x776 -> _x776
  method set_squareMemberMid _x776 = _squareMemberMid <- Some _x776
  method unset_squareMemberMid = _squareMemberMid <- None
  method reset_squareMemberMid = _squareMemberMid <- None

  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareMember.squareMid") | Some _x777 -> _x777
  method set_squareMid _x777 = _squareMid <- Some _x777
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _displayName : string option = None
  method get_displayName = _displayName
  method grab_displayName = match _displayName with None->raise (Field_empty "squareMember.displayName") | Some _x778 -> _x778
  method set_displayName _x778 = _displayName <- Some _x778
  method unset_displayName = _displayName <- None
  method reset_displayName = _displayName <- None

  val mutable _profileImageObsHash : string option = None
  method get_profileImageObsHash = _profileImageObsHash
  method grab_profileImageObsHash = match _profileImageObsHash with None->raise (Field_empty "squareMember.profileImageObsHash") | Some _x779 -> _x779
  method set_profileImageObsHash _x779 = _profileImageObsHash <- Some _x779
  method unset_profileImageObsHash = _profileImageObsHash <- None
  method reset_profileImageObsHash = _profileImageObsHash <- None

  val mutable _ableToReceiveMessage : bool option = None
  method get_ableToReceiveMessage = _ableToReceiveMessage
  method grab_ableToReceiveMessage = match _ableToReceiveMessage with None->raise (Field_empty "squareMember.ableToReceiveMessage") | Some _x780 -> _x780
  method set_ableToReceiveMessage _x780 = _ableToReceiveMessage <- Some _x780
  method unset_ableToReceiveMessage = _ableToReceiveMessage <- None
  method reset_ableToReceiveMessage = _ableToReceiveMessage <- None

  val mutable _membershipState : SquareMembershipState.t option = None
  method get_membershipState = _membershipState
  method grab_membershipState = match _membershipState with None->raise (Field_empty "squareMember.membershipState") | Some _x781 -> _x781
  method set_membershipState _x781 = _membershipState <- Some _x781
  method unset_membershipState = _membershipState <- None
  method reset_membershipState = _membershipState <- None

  val mutable _role : SquareMemberRole.t option = None
  method get_role = _role
  method grab_role = match _role with None->raise (Field_empty "squareMember.role") | Some _x782 -> _x782
  method set_role _x782 = _role <- Some _x782
  method unset_role = _role <- None
  method reset_role = _role <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "squareMember.revision") | Some _x783 -> _x783
  method set_revision _x783 = _revision <- Some _x783
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _preference : squarePreference option = None
  method get_preference = _preference
  method grab_preference = match _preference with None->raise (Field_empty "squareMember.preference") | Some _x784 -> _x784
  method set_preference _x784 = _preference <- Some _x784
  method unset_preference = _preference <- None
  method reset_preference = _preference <- None

  val mutable _joinMessage : string option = None
  method get_joinMessage = _joinMessage
  method grab_joinMessage = match _joinMessage with None->raise (Field_empty "squareMember.joinMessage") | Some _x785 -> _x785
  method set_joinMessage _x785 = _joinMessage <- Some _x785
  method unset_joinMessage = _joinMessage <- None
  method reset_joinMessage = _joinMessage <- None

  method copy =
      let _new = Oo.copy self in
      if _preference <> None then
        _new#set_preference self#grab_preference#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareMember";
    (match _squareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMemberMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayName",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _profileImageObsHash with None -> () | Some _v -> 
      oprot#writeFieldBegin("profileImageObsHash",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _ableToReceiveMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("ableToReceiveMessage",Protocol.T_BOOL,5);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _membershipState with None -> () | Some _v -> 
      oprot#writeFieldBegin("membershipState",Protocol.T_I32,7);
      oprot#writeI32(SquareMembershipState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _role with None -> () | Some _v -> 
      oprot#writeFieldBegin("role",Protocol.T_I32,8);
      oprot#writeI32(SquareMemberRole.to_i _v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,9);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _preference with None -> () | Some _v -> 
      oprot#writeFieldBegin("preference",Protocol.T_STRUCT,10);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _joinMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("joinMessage",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareMember (iprot : Protocol.t) =
  let _str788 = new squareMember in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t789,_id790) = iprot#readFieldBegin in
        if _t789 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id790 with 
          | 1 -> (if _t789 = Protocol.T_STRING then
              _str788#set_squareMemberMid iprot#readString
            else
              iprot#skip _t789)
          | 2 -> (if _t789 = Protocol.T_STRING then
              _str788#set_squareMid iprot#readString
            else
              iprot#skip _t789)
          | 3 -> (if _t789 = Protocol.T_STRING then
              _str788#set_displayName iprot#readString
            else
              iprot#skip _t789)
          | 4 -> (if _t789 = Protocol.T_STRING then
              _str788#set_profileImageObsHash iprot#readString
            else
              iprot#skip _t789)
          | 5 -> (if _t789 = Protocol.T_BOOL then
              _str788#set_ableToReceiveMessage iprot#readBool
            else
              iprot#skip _t789)
          | 7 -> (if _t789 = Protocol.T_I32 then
              _str788#set_membershipState (SquareMembershipState.of_i iprot#readI32)
            else
              iprot#skip _t789)
          | 8 -> (if _t789 = Protocol.T_I32 then
              _str788#set_role (SquareMemberRole.of_i iprot#readI32)
            else
              iprot#skip _t789)
          | 9 -> (if _t789 = Protocol.T_I64 then
              _str788#set_revision iprot#readI64
            else
              iprot#skip _t789)
          | 10 -> (if _t789 = Protocol.T_STRUCT then
              _str788#set_preference (read_squarePreference iprot)
            else
              iprot#skip _t789)
          | 11 -> (if _t789 = Protocol.T_STRING then
              _str788#set_joinMessage iprot#readString
            else
              iprot#skip _t789)
          | _ -> iprot#skip _t789);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str788

class squareMemberRelation =
object (self)
  val mutable _state : SquareMemberRelationState.t option = None
  method get_state = _state
  method grab_state = match _state with None->raise (Field_empty "squareMemberRelation.state") | Some _x792 -> _x792
  method set_state _x792 = _state <- Some _x792
  method unset_state = _state <- None
  method reset_state = _state <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "squareMemberRelation.revision") | Some _x793 -> _x793
  method set_revision _x793 = _revision <- Some _x793
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareMemberRelation";
    (match _state with None -> () | Some _v -> 
      oprot#writeFieldBegin("state",Protocol.T_I32,1);
      oprot#writeI32(SquareMemberRelationState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareMemberRelation (iprot : Protocol.t) =
  let _str796 = new squareMemberRelation in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t797,_id798) = iprot#readFieldBegin in
        if _t797 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id798 with 
          | 1 -> (if _t797 = Protocol.T_I32 then
              _str796#set_state (SquareMemberRelationState.of_i iprot#readI32)
            else
              iprot#skip _t797)
          | 2 -> (if _t797 = Protocol.T_I64 then
              _str796#set_revision iprot#readI64
            else
              iprot#skip _t797)
          | _ -> iprot#skip _t797);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str796

class squareFeature =
object (self)
  val mutable _controlState : SquareFeatureControlState.t option = None
  method get_controlState = _controlState
  method grab_controlState = match _controlState with None->raise (Field_empty "squareFeature.controlState") | Some _x800 -> _x800
  method set_controlState _x800 = _controlState <- Some _x800
  method unset_controlState = _controlState <- None
  method reset_controlState = _controlState <- None

  val mutable _booleanValue : BooleanState.t option = None
  method get_booleanValue = _booleanValue
  method grab_booleanValue = match _booleanValue with None->raise (Field_empty "squareFeature.booleanValue") | Some _x801 -> _x801
  method set_booleanValue _x801 = _booleanValue <- Some _x801
  method unset_booleanValue = _booleanValue <- None
  method reset_booleanValue = _booleanValue <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareFeature";
    (match _controlState with None -> () | Some _v -> 
      oprot#writeFieldBegin("controlState",Protocol.T_I32,1);
      oprot#writeI32(SquareFeatureControlState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _booleanValue with None -> () | Some _v -> 
      oprot#writeFieldBegin("booleanValue",Protocol.T_I32,2);
      oprot#writeI32(BooleanState.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareFeature (iprot : Protocol.t) =
  let _str804 = new squareFeature in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t805,_id806) = iprot#readFieldBegin in
        if _t805 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id806 with 
          | 1 -> (if _t805 = Protocol.T_I32 then
              _str804#set_controlState (SquareFeatureControlState.of_i iprot#readI32)
            else
              iprot#skip _t805)
          | 2 -> (if _t805 = Protocol.T_I32 then
              _str804#set_booleanValue (BooleanState.of_i iprot#readI32)
            else
              iprot#skip _t805)
          | _ -> iprot#skip _t805);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str804

class squareFeatureSet =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareFeatureSet.squareMid") | Some _x808 -> _x808
  method set_squareMid _x808 = _squareMid <- Some _x808
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "squareFeatureSet.revision") | Some _x809 -> _x809
  method set_revision _x809 = _revision <- Some _x809
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _creatingSecretSquareChat : squareFeature option = None
  method get_creatingSecretSquareChat = _creatingSecretSquareChat
  method grab_creatingSecretSquareChat = match _creatingSecretSquareChat with None->raise (Field_empty "squareFeatureSet.creatingSecretSquareChat") | Some _x810 -> _x810
  method set_creatingSecretSquareChat _x810 = _creatingSecretSquareChat <- Some _x810
  method unset_creatingSecretSquareChat = _creatingSecretSquareChat <- None
  method reset_creatingSecretSquareChat = _creatingSecretSquareChat <- None

  val mutable _invitingIntoOpenSquareChat : squareFeature option = None
  method get_invitingIntoOpenSquareChat = _invitingIntoOpenSquareChat
  method grab_invitingIntoOpenSquareChat = match _invitingIntoOpenSquareChat with None->raise (Field_empty "squareFeatureSet.invitingIntoOpenSquareChat") | Some _x811 -> _x811
  method set_invitingIntoOpenSquareChat _x811 = _invitingIntoOpenSquareChat <- Some _x811
  method unset_invitingIntoOpenSquareChat = _invitingIntoOpenSquareChat <- None
  method reset_invitingIntoOpenSquareChat = _invitingIntoOpenSquareChat <- None

  method copy =
      let _new = Oo.copy self in
      if _creatingSecretSquareChat <> None then
        _new#set_creatingSecretSquareChat self#grab_creatingSecretSquareChat#copy;
      if _invitingIntoOpenSquareChat <> None then
        _new#set_invitingIntoOpenSquareChat self#grab_invitingIntoOpenSquareChat#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareFeatureSet";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _creatingSecretSquareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("creatingSecretSquareChat",Protocol.T_STRUCT,11);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _invitingIntoOpenSquareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("invitingIntoOpenSquareChat",Protocol.T_STRUCT,12);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareFeatureSet (iprot : Protocol.t) =
  let _str814 = new squareFeatureSet in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t815,_id816) = iprot#readFieldBegin in
        if _t815 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id816 with 
          | 1 -> (if _t815 = Protocol.T_STRING then
              _str814#set_squareMid iprot#readString
            else
              iprot#skip _t815)
          | 2 -> (if _t815 = Protocol.T_I64 then
              _str814#set_revision iprot#readI64
            else
              iprot#skip _t815)
          | 11 -> (if _t815 = Protocol.T_STRUCT then
              _str814#set_creatingSecretSquareChat (read_squareFeature iprot)
            else
              iprot#skip _t815)
          | 12 -> (if _t815 = Protocol.T_STRUCT then
              _str814#set_invitingIntoOpenSquareChat (read_squareFeature iprot)
            else
              iprot#skip _t815)
          | _ -> iprot#skip _t815);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str814

class squareStatus =
object (self)
  val mutable _memberCount : Int32.t option = None
  method get_memberCount = _memberCount
  method grab_memberCount = match _memberCount with None->raise (Field_empty "squareStatus.memberCount") | Some _x818 -> _x818
  method set_memberCount _x818 = _memberCount <- Some _x818
  method unset_memberCount = _memberCount <- None
  method reset_memberCount = _memberCount <- None

  val mutable _joinRequestCount : Int32.t option = None
  method get_joinRequestCount = _joinRequestCount
  method grab_joinRequestCount = match _joinRequestCount with None->raise (Field_empty "squareStatus.joinRequestCount") | Some _x819 -> _x819
  method set_joinRequestCount _x819 = _joinRequestCount <- Some _x819
  method unset_joinRequestCount = _joinRequestCount <- None
  method reset_joinRequestCount = _joinRequestCount <- None

  val mutable _lastJoinRequestAt : Int64.t option = None
  method get_lastJoinRequestAt = _lastJoinRequestAt
  method grab_lastJoinRequestAt = match _lastJoinRequestAt with None->raise (Field_empty "squareStatus.lastJoinRequestAt") | Some _x820 -> _x820
  method set_lastJoinRequestAt _x820 = _lastJoinRequestAt <- Some _x820
  method unset_lastJoinRequestAt = _lastJoinRequestAt <- None
  method reset_lastJoinRequestAt = _lastJoinRequestAt <- None

  val mutable _openChatCount : Int32.t option = None
  method get_openChatCount = _openChatCount
  method grab_openChatCount = match _openChatCount with None->raise (Field_empty "squareStatus.openChatCount") | Some _x821 -> _x821
  method set_openChatCount _x821 = _openChatCount <- Some _x821
  method unset_openChatCount = _openChatCount <- None
  method reset_openChatCount = _openChatCount <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareStatus";
    (match _memberCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("memberCount",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _joinRequestCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("joinRequestCount",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _lastJoinRequestAt with None -> () | Some _v -> 
      oprot#writeFieldBegin("lastJoinRequestAt",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _openChatCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("openChatCount",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareStatus (iprot : Protocol.t) =
  let _str824 = new squareStatus in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t825,_id826) = iprot#readFieldBegin in
        if _t825 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id826 with 
          | 1 -> (if _t825 = Protocol.T_I32 then
              _str824#set_memberCount iprot#readI32
            else
              iprot#skip _t825)
          | 2 -> (if _t825 = Protocol.T_I32 then
              _str824#set_joinRequestCount iprot#readI32
            else
              iprot#skip _t825)
          | 3 -> (if _t825 = Protocol.T_I64 then
              _str824#set_lastJoinRequestAt iprot#readI64
            else
              iprot#skip _t825)
          | 4 -> (if _t825 = Protocol.T_I32 then
              _str824#set_openChatCount iprot#readI32
            else
              iprot#skip _t825)
          | _ -> iprot#skip _t825);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str824

class squareChat =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareChat.squareChatMid") | Some _x828 -> _x828
  method set_squareChatMid _x828 = _squareChatMid <- Some _x828
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareChat.squareMid") | Some _x829 -> _x829
  method set_squareMid _x829 = _squareMid <- Some _x829
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _type : SquareChatType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "squareChat.type") | Some _x830 -> _x830
  method set_type _x830 = _type <- Some _x830
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "squareChat.name") | Some _x831 -> _x831
  method set_name _x831 = _name <- Some _x831
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _chatImageObsHash : string option = None
  method get_chatImageObsHash = _chatImageObsHash
  method grab_chatImageObsHash = match _chatImageObsHash with None->raise (Field_empty "squareChat.chatImageObsHash") | Some _x832 -> _x832
  method set_chatImageObsHash _x832 = _chatImageObsHash <- Some _x832
  method unset_chatImageObsHash = _chatImageObsHash <- None
  method reset_chatImageObsHash = _chatImageObsHash <- None

  val mutable _squareChatRevision : Int64.t option = None
  method get_squareChatRevision = _squareChatRevision
  method grab_squareChatRevision = match _squareChatRevision with None->raise (Field_empty "squareChat.squareChatRevision") | Some _x833 -> _x833
  method set_squareChatRevision _x833 = _squareChatRevision <- Some _x833
  method unset_squareChatRevision = _squareChatRevision <- None
  method reset_squareChatRevision = _squareChatRevision <- None

  val mutable _maxMemberCount : Int32.t option = None
  method get_maxMemberCount = _maxMemberCount
  method grab_maxMemberCount = match _maxMemberCount with None->raise (Field_empty "squareChat.maxMemberCount") | Some _x834 -> _x834
  method set_maxMemberCount _x834 = _maxMemberCount <- Some _x834
  method unset_maxMemberCount = _maxMemberCount <- None
  method reset_maxMemberCount = _maxMemberCount <- None

  val mutable _state : SquareChatState.t option = None
  method get_state = _state
  method grab_state = match _state with None->raise (Field_empty "squareChat.state") | Some _x835 -> _x835
  method set_state _x835 = _state <- Some _x835
  method unset_state = _state <- None
  method reset_state = _state <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareChat";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,3);
      oprot#writeI32(SquareChatType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _chatImageObsHash with None -> () | Some _v -> 
      oprot#writeFieldBegin("chatImageObsHash",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatRevision with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatRevision",Protocol.T_I64,6);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _maxMemberCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("maxMemberCount",Protocol.T_I32,7);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _state with None -> () | Some _v -> 
      oprot#writeFieldBegin("state",Protocol.T_I32,8);
      oprot#writeI32(SquareChatState.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareChat (iprot : Protocol.t) =
  let _str838 = new squareChat in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t839,_id840) = iprot#readFieldBegin in
        if _t839 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id840 with 
          | 1 -> (if _t839 = Protocol.T_STRING then
              _str838#set_squareChatMid iprot#readString
            else
              iprot#skip _t839)
          | 2 -> (if _t839 = Protocol.T_STRING then
              _str838#set_squareMid iprot#readString
            else
              iprot#skip _t839)
          | 3 -> (if _t839 = Protocol.T_I32 then
              _str838#set_type (SquareChatType.of_i iprot#readI32)
            else
              iprot#skip _t839)
          | 4 -> (if _t839 = Protocol.T_STRING then
              _str838#set_name iprot#readString
            else
              iprot#skip _t839)
          | 5 -> (if _t839 = Protocol.T_STRING then
              _str838#set_chatImageObsHash iprot#readString
            else
              iprot#skip _t839)
          | 6 -> (if _t839 = Protocol.T_I64 then
              _str838#set_squareChatRevision iprot#readI64
            else
              iprot#skip _t839)
          | 7 -> (if _t839 = Protocol.T_I32 then
              _str838#set_maxMemberCount iprot#readI32
            else
              iprot#skip _t839)
          | 8 -> (if _t839 = Protocol.T_I32 then
              _str838#set_state (SquareChatState.of_i iprot#readI32)
            else
              iprot#skip _t839)
          | _ -> iprot#skip _t839);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str838

class noteStatus =
object (self)
  val mutable _noteCount : Int32.t option = None
  method get_noteCount = _noteCount
  method grab_noteCount = match _noteCount with None->raise (Field_empty "noteStatus.noteCount") | Some _x842 -> _x842
  method set_noteCount _x842 = _noteCount <- Some _x842
  method unset_noteCount = _noteCount <- None
  method reset_noteCount = _noteCount <- None

  val mutable _latestCreatedAt : Int64.t option = None
  method get_latestCreatedAt = _latestCreatedAt
  method grab_latestCreatedAt = match _latestCreatedAt with None->raise (Field_empty "noteStatus.latestCreatedAt") | Some _x843 -> _x843
  method set_latestCreatedAt _x843 = _latestCreatedAt <- Some _x843
  method unset_latestCreatedAt = _latestCreatedAt <- None
  method reset_latestCreatedAt = _latestCreatedAt <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "NoteStatus";
    (match _noteCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("noteCount",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _latestCreatedAt with None -> () | Some _v -> 
      oprot#writeFieldBegin("latestCreatedAt",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_noteStatus (iprot : Protocol.t) =
  let _str846 = new noteStatus in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t847,_id848) = iprot#readFieldBegin in
        if _t847 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id848 with 
          | 1 -> (if _t847 = Protocol.T_I32 then
              _str846#set_noteCount iprot#readI32
            else
              iprot#skip _t847)
          | 2 -> (if _t847 = Protocol.T_I64 then
              _str846#set_latestCreatedAt iprot#readI64
            else
              iprot#skip _t847)
          | _ -> iprot#skip _t847);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str846

class squareInfo =
object (self)
  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "squareInfo.square") | Some _x850 -> _x850
  method set_square _x850 = _square <- Some _x850
  method unset_square = _square <- None
  method reset_square = _square <- None

  val mutable _squareStatus : squareStatus option = None
  method get_squareStatus = _squareStatus
  method grab_squareStatus = match _squareStatus with None->raise (Field_empty "squareInfo.squareStatus") | Some _x851 -> _x851
  method set_squareStatus _x851 = _squareStatus <- Some _x851
  method unset_squareStatus = _squareStatus <- None
  method reset_squareStatus = _squareStatus <- None

  val mutable _squareNoteStatus : noteStatus option = None
  method get_squareNoteStatus = _squareNoteStatus
  method grab_squareNoteStatus = match _squareNoteStatus with None->raise (Field_empty "squareInfo.squareNoteStatus") | Some _x852 -> _x852
  method set_squareNoteStatus _x852 = _squareNoteStatus <- Some _x852
  method unset_squareNoteStatus = _squareNoteStatus <- None
  method reset_squareNoteStatus = _squareNoteStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _square <> None then
        _new#set_square self#grab_square#copy;
      if _squareStatus <> None then
        _new#set_squareStatus self#grab_squareStatus#copy;
      if _squareNoteStatus <> None then
        _new#set_squareNoteStatus self#grab_squareNoteStatus#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareInfo";
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareStatus",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareNoteStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareNoteStatus",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareInfo (iprot : Protocol.t) =
  let _str855 = new squareInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t856,_id857) = iprot#readFieldBegin in
        if _t856 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id857 with 
          | 1 -> (if _t856 = Protocol.T_STRUCT then
              _str855#set_square (read_square iprot)
            else
              iprot#skip _t856)
          | 2 -> (if _t856 = Protocol.T_STRUCT then
              _str855#set_squareStatus (read_squareStatus iprot)
            else
              iprot#skip _t856)
          | 3 -> (if _t856 = Protocol.T_STRUCT then
              _str855#set_squareNoteStatus (read_noteStatus iprot)
            else
              iprot#skip _t856)
          | _ -> iprot#skip _t856);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str855

class botUseInfo =
object (self)
  val mutable _botUseAgreementAccepted : bool option = None
  method get_botUseAgreementAccepted = _botUseAgreementAccepted
  method grab_botUseAgreementAccepted = match _botUseAgreementAccepted with None->raise (Field_empty "botUseInfo.botUseAgreementAccepted") | Some _x859 -> _x859
  method set_botUseAgreementAccepted _x859 = _botUseAgreementAccepted <- Some _x859
  method unset_botUseAgreementAccepted = _botUseAgreementAccepted <- None
  method reset_botUseAgreementAccepted = _botUseAgreementAccepted <- None

  val mutable _botInFriends : bool option = None
  method get_botInFriends = _botInFriends
  method grab_botInFriends = match _botInFriends with None->raise (Field_empty "botUseInfo.botInFriends") | Some _x860 -> _x860
  method set_botInFriends _x860 = _botInFriends <- Some _x860
  method unset_botInFriends = _botInFriends <- None
  method reset_botInFriends = _botInFriends <- None

  val mutable _primaryApplication : string option = None
  method get_primaryApplication = _primaryApplication
  method grab_primaryApplication = match _primaryApplication with None->raise (Field_empty "botUseInfo.primaryApplication") | Some _x861 -> _x861
  method set_primaryApplication _x861 = _primaryApplication <- Some _x861
  method unset_primaryApplication = _primaryApplication <- None
  method reset_primaryApplication = _primaryApplication <- None

  val mutable _locale : string option = None
  method get_locale = _locale
  method grab_locale = match _locale with None->raise (Field_empty "botUseInfo.locale") | Some _x862 -> _x862
  method set_locale _x862 = _locale <- Some _x862
  method unset_locale = _locale <- None
  method reset_locale = _locale <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "BotUseInfo";
    (match _botUseAgreementAccepted with None -> () | Some _v -> 
      oprot#writeFieldBegin("botUseAgreementAccepted",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _botInFriends with None -> () | Some _v -> 
      oprot#writeFieldBegin("botInFriends",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _primaryApplication with None -> () | Some _v -> 
      oprot#writeFieldBegin("primaryApplication",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _locale with None -> () | Some _v -> 
      oprot#writeFieldBegin("locale",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_botUseInfo (iprot : Protocol.t) =
  let _str865 = new botUseInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t866,_id867) = iprot#readFieldBegin in
        if _t866 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id867 with 
          | 1 -> (if _t866 = Protocol.T_BOOL then
              _str865#set_botUseAgreementAccepted iprot#readBool
            else
              iprot#skip _t866)
          | 2 -> (if _t866 = Protocol.T_BOOL then
              _str865#set_botInFriends iprot#readBool
            else
              iprot#skip _t866)
          | 3 -> (if _t866 = Protocol.T_STRING then
              _str865#set_primaryApplication iprot#readString
            else
              iprot#skip _t866)
          | 4 -> (if _t866 = Protocol.T_STRING then
              _str865#set_locale iprot#readString
            else
              iprot#skip _t866)
          | _ -> iprot#skip _t866);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str865

class paidCallAdCountry =
object (self)
  val mutable _countryCode : string option = None
  method get_countryCode = _countryCode
  method grab_countryCode = match _countryCode with None->raise (Field_empty "paidCallAdCountry.countryCode") | Some _x869 -> _x869
  method set_countryCode _x869 = _countryCode <- Some _x869
  method unset_countryCode = _countryCode <- None
  method reset_countryCode = _countryCode <- None

  val mutable _rateDivision : string option = None
  method get_rateDivision = _rateDivision
  method grab_rateDivision = match _rateDivision with None->raise (Field_empty "paidCallAdCountry.rateDivision") | Some _x870 -> _x870
  method set_rateDivision _x870 = _rateDivision <- Some _x870
  method unset_rateDivision = _rateDivision <- None
  method reset_rateDivision = _rateDivision <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallAdCountry";
    (match _countryCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("countryCode",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _rateDivision with None -> () | Some _v -> 
      oprot#writeFieldBegin("rateDivision",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallAdCountry (iprot : Protocol.t) =
  let _str873 = new paidCallAdCountry in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t874,_id875) = iprot#readFieldBegin in
        if _t874 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id875 with 
          | 1 -> (if _t874 = Protocol.T_STRING then
              _str873#set_countryCode iprot#readString
            else
              iprot#skip _t874)
          | 2 -> (if _t874 = Protocol.T_STRING then
              _str873#set_rateDivision iprot#readString
            else
              iprot#skip _t874)
          | _ -> iprot#skip _t874);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str873

class paidCallAdResult =
object (self)
  val mutable _adRemains : Int32.t option = None
  method get_adRemains = _adRemains
  method grab_adRemains = match _adRemains with None->raise (Field_empty "paidCallAdResult.adRemains") | Some _x877 -> _x877
  method set_adRemains _x877 = _adRemains <- Some _x877
  method unset_adRemains = _adRemains <- None
  method reset_adRemains = _adRemains <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallAdResult";
    (match _adRemains with None -> () | Some _v -> 
      oprot#writeFieldBegin("adRemains",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallAdResult (iprot : Protocol.t) =
  let _str880 = new paidCallAdResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t881,_id882) = iprot#readFieldBegin in
        if _t881 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id882 with 
          | 1 -> (if _t881 = Protocol.T_I32 then
              _str880#set_adRemains iprot#readI32
            else
              iprot#skip _t881)
          | _ -> iprot#skip _t881);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str880

class paidCallBalance =
object (self)
  val mutable _productType : PaidCallProductType.t option = None
  method get_productType = _productType
  method grab_productType = match _productType with None->raise (Field_empty "paidCallBalance.productType") | Some _x884 -> _x884
  method set_productType _x884 = _productType <- Some _x884
  method unset_productType = _productType <- None
  method reset_productType = _productType <- None

  val mutable _productName : string option = None
  method get_productName = _productName
  method grab_productName = match _productName with None->raise (Field_empty "paidCallBalance.productName") | Some _x885 -> _x885
  method set_productName _x885 = _productName <- Some _x885
  method unset_productName = _productName <- None
  method reset_productName = _productName <- None

  val mutable _unit : string option = None
  method get_unit = _unit
  method grab_unit = match _unit with None->raise (Field_empty "paidCallBalance.unit") | Some _x886 -> _x886
  method set_unit _x886 = _unit <- Some _x886
  method unset_unit = _unit <- None
  method reset_unit = _unit <- None

  val mutable _limitedPaidBalance : Int32.t option = None
  method get_limitedPaidBalance = _limitedPaidBalance
  method grab_limitedPaidBalance = match _limitedPaidBalance with None->raise (Field_empty "paidCallBalance.limitedPaidBalance") | Some _x887 -> _x887
  method set_limitedPaidBalance _x887 = _limitedPaidBalance <- Some _x887
  method unset_limitedPaidBalance = _limitedPaidBalance <- None
  method reset_limitedPaidBalance = _limitedPaidBalance <- None

  val mutable _limitedFreeBalance : Int32.t option = None
  method get_limitedFreeBalance = _limitedFreeBalance
  method grab_limitedFreeBalance = match _limitedFreeBalance with None->raise (Field_empty "paidCallBalance.limitedFreeBalance") | Some _x888 -> _x888
  method set_limitedFreeBalance _x888 = _limitedFreeBalance <- Some _x888
  method unset_limitedFreeBalance = _limitedFreeBalance <- None
  method reset_limitedFreeBalance = _limitedFreeBalance <- None

  val mutable _unlimitedPaidBalance : Int32.t option = None
  method get_unlimitedPaidBalance = _unlimitedPaidBalance
  method grab_unlimitedPaidBalance = match _unlimitedPaidBalance with None->raise (Field_empty "paidCallBalance.unlimitedPaidBalance") | Some _x889 -> _x889
  method set_unlimitedPaidBalance _x889 = _unlimitedPaidBalance <- Some _x889
  method unset_unlimitedPaidBalance = _unlimitedPaidBalance <- None
  method reset_unlimitedPaidBalance = _unlimitedPaidBalance <- None

  val mutable _unlimitedFreeBalance : Int32.t option = None
  method get_unlimitedFreeBalance = _unlimitedFreeBalance
  method grab_unlimitedFreeBalance = match _unlimitedFreeBalance with None->raise (Field_empty "paidCallBalance.unlimitedFreeBalance") | Some _x890 -> _x890
  method set_unlimitedFreeBalance _x890 = _unlimitedFreeBalance <- Some _x890
  method unset_unlimitedFreeBalance = _unlimitedFreeBalance <- None
  method reset_unlimitedFreeBalance = _unlimitedFreeBalance <- None

  val mutable _startTime : Int64.t option = None
  method get_startTime = _startTime
  method grab_startTime = match _startTime with None->raise (Field_empty "paidCallBalance.startTime") | Some _x891 -> _x891
  method set_startTime _x891 = _startTime <- Some _x891
  method unset_startTime = _startTime <- None
  method reset_startTime = _startTime <- None

  val mutable _endTime : Int64.t option = None
  method get_endTime = _endTime
  method grab_endTime = match _endTime with None->raise (Field_empty "paidCallBalance.endTime") | Some _x892 -> _x892
  method set_endTime _x892 = _endTime <- Some _x892
  method unset_endTime = _endTime <- None
  method reset_endTime = _endTime <- None

  val mutable _autopayEnabled : bool option = None
  method get_autopayEnabled = _autopayEnabled
  method grab_autopayEnabled = match _autopayEnabled with None->raise (Field_empty "paidCallBalance.autopayEnabled") | Some _x893 -> _x893
  method set_autopayEnabled _x893 = _autopayEnabled <- Some _x893
  method unset_autopayEnabled = _autopayEnabled <- None
  method reset_autopayEnabled = _autopayEnabled <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallBalance";
    (match _productType with None -> () | Some _v -> 
      oprot#writeFieldBegin("productType",Protocol.T_I32,1);
      oprot#writeI32(PaidCallProductType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _productName with None -> () | Some _v -> 
      oprot#writeFieldBegin("productName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _unit with None -> () | Some _v -> 
      oprot#writeFieldBegin("unit",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _limitedPaidBalance with None -> () | Some _v -> 
      oprot#writeFieldBegin("limitedPaidBalance",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _limitedFreeBalance with None -> () | Some _v -> 
      oprot#writeFieldBegin("limitedFreeBalance",Protocol.T_I32,5);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _unlimitedPaidBalance with None -> () | Some _v -> 
      oprot#writeFieldBegin("unlimitedPaidBalance",Protocol.T_I32,6);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _unlimitedFreeBalance with None -> () | Some _v -> 
      oprot#writeFieldBegin("unlimitedFreeBalance",Protocol.T_I32,7);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _startTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("startTime",Protocol.T_I64,8);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _endTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("endTime",Protocol.T_I64,9);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _autopayEnabled with None -> () | Some _v -> 
      oprot#writeFieldBegin("autopayEnabled",Protocol.T_BOOL,10);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallBalance (iprot : Protocol.t) =
  let _str896 = new paidCallBalance in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t897,_id898) = iprot#readFieldBegin in
        if _t897 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id898 with 
          | 1 -> (if _t897 = Protocol.T_I32 then
              _str896#set_productType (PaidCallProductType.of_i iprot#readI32)
            else
              iprot#skip _t897)
          | 2 -> (if _t897 = Protocol.T_STRING then
              _str896#set_productName iprot#readString
            else
              iprot#skip _t897)
          | 3 -> (if _t897 = Protocol.T_STRING then
              _str896#set_unit iprot#readString
            else
              iprot#skip _t897)
          | 4 -> (if _t897 = Protocol.T_I32 then
              _str896#set_limitedPaidBalance iprot#readI32
            else
              iprot#skip _t897)
          | 5 -> (if _t897 = Protocol.T_I32 then
              _str896#set_limitedFreeBalance iprot#readI32
            else
              iprot#skip _t897)
          | 6 -> (if _t897 = Protocol.T_I32 then
              _str896#set_unlimitedPaidBalance iprot#readI32
            else
              iprot#skip _t897)
          | 7 -> (if _t897 = Protocol.T_I32 then
              _str896#set_unlimitedFreeBalance iprot#readI32
            else
              iprot#skip _t897)
          | 8 -> (if _t897 = Protocol.T_I64 then
              _str896#set_startTime iprot#readI64
            else
              iprot#skip _t897)
          | 9 -> (if _t897 = Protocol.T_I64 then
              _str896#set_endTime iprot#readI64
            else
              iprot#skip _t897)
          | 10 -> (if _t897 = Protocol.T_BOOL then
              _str896#set_autopayEnabled iprot#readBool
            else
              iprot#skip _t897)
          | _ -> iprot#skip _t897);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str896

class paidCallCurrencyExchangeRate =
object (self)
  val mutable _currencyCode : string option = None
  method get_currencyCode = _currencyCode
  method grab_currencyCode = match _currencyCode with None->raise (Field_empty "paidCallCurrencyExchangeRate.currencyCode") | Some _x900 -> _x900
  method set_currencyCode _x900 = _currencyCode <- Some _x900
  method unset_currencyCode = _currencyCode <- None
  method reset_currencyCode = _currencyCode <- None

  val mutable _currencyName : string option = None
  method get_currencyName = _currencyName
  method grab_currencyName = match _currencyName with None->raise (Field_empty "paidCallCurrencyExchangeRate.currencyName") | Some _x901 -> _x901
  method set_currencyName _x901 = _currencyName <- Some _x901
  method unset_currencyName = _currencyName <- None
  method reset_currencyName = _currencyName <- None

  val mutable _currencySign : string option = None
  method get_currencySign = _currencySign
  method grab_currencySign = match _currencySign with None->raise (Field_empty "paidCallCurrencyExchangeRate.currencySign") | Some _x902 -> _x902
  method set_currencySign _x902 = _currencySign <- Some _x902
  method unset_currencySign = _currencySign <- None
  method reset_currencySign = _currencySign <- None

  val mutable _preferred : bool option = None
  method get_preferred = _preferred
  method grab_preferred = match _preferred with None->raise (Field_empty "paidCallCurrencyExchangeRate.preferred") | Some _x903 -> _x903
  method set_preferred _x903 = _preferred <- Some _x903
  method unset_preferred = _preferred <- None
  method reset_preferred = _preferred <- None

  val mutable _coinRate : string option = None
  method get_coinRate = _coinRate
  method grab_coinRate = match _coinRate with None->raise (Field_empty "paidCallCurrencyExchangeRate.coinRate") | Some _x904 -> _x904
  method set_coinRate _x904 = _coinRate <- Some _x904
  method unset_coinRate = _coinRate <- None
  method reset_coinRate = _coinRate <- None

  val mutable _creditRate : string option = None
  method get_creditRate = _creditRate
  method grab_creditRate = match _creditRate with None->raise (Field_empty "paidCallCurrencyExchangeRate.creditRate") | Some _x905 -> _x905
  method set_creditRate _x905 = _creditRate <- Some _x905
  method unset_creditRate = _creditRate <- None
  method reset_creditRate = _creditRate <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallCurrencyExchangeRate";
    (match _currencyCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("currencyCode",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _currencyName with None -> () | Some _v -> 
      oprot#writeFieldBegin("currencyName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _currencySign with None -> () | Some _v -> 
      oprot#writeFieldBegin("currencySign",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _preferred with None -> () | Some _v -> 
      oprot#writeFieldBegin("preferred",Protocol.T_BOOL,4);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _coinRate with None -> () | Some _v -> 
      oprot#writeFieldBegin("coinRate",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _creditRate with None -> () | Some _v -> 
      oprot#writeFieldBegin("creditRate",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallCurrencyExchangeRate (iprot : Protocol.t) =
  let _str908 = new paidCallCurrencyExchangeRate in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t909,_id910) = iprot#readFieldBegin in
        if _t909 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id910 with 
          | 1 -> (if _t909 = Protocol.T_STRING then
              _str908#set_currencyCode iprot#readString
            else
              iprot#skip _t909)
          | 2 -> (if _t909 = Protocol.T_STRING then
              _str908#set_currencyName iprot#readString
            else
              iprot#skip _t909)
          | 3 -> (if _t909 = Protocol.T_STRING then
              _str908#set_currencySign iprot#readString
            else
              iprot#skip _t909)
          | 4 -> (if _t909 = Protocol.T_BOOL then
              _str908#set_preferred iprot#readBool
            else
              iprot#skip _t909)
          | 5 -> (if _t909 = Protocol.T_STRING then
              _str908#set_coinRate iprot#readString
            else
              iprot#skip _t909)
          | 6 -> (if _t909 = Protocol.T_STRING then
              _str908#set_creditRate iprot#readString
            else
              iprot#skip _t909)
          | _ -> iprot#skip _t909);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str908

class extendedProfileBirthday =
object (self)
  val mutable _year : string option = None
  method get_year = _year
  method grab_year = match _year with None->raise (Field_empty "extendedProfileBirthday.year") | Some _x912 -> _x912
  method set_year _x912 = _year <- Some _x912
  method unset_year = _year <- None
  method reset_year = _year <- None

  val mutable _yearPrivacyLevelType : PrivacyLevelType.t option = None
  method get_yearPrivacyLevelType = _yearPrivacyLevelType
  method grab_yearPrivacyLevelType = match _yearPrivacyLevelType with None->raise (Field_empty "extendedProfileBirthday.yearPrivacyLevelType") | Some _x913 -> _x913
  method set_yearPrivacyLevelType _x913 = _yearPrivacyLevelType <- Some _x913
  method unset_yearPrivacyLevelType = _yearPrivacyLevelType <- None
  method reset_yearPrivacyLevelType = _yearPrivacyLevelType <- None

  val mutable _yearEnabled : bool option = None
  method get_yearEnabled = _yearEnabled
  method grab_yearEnabled = match _yearEnabled with None->raise (Field_empty "extendedProfileBirthday.yearEnabled") | Some _x914 -> _x914
  method set_yearEnabled _x914 = _yearEnabled <- Some _x914
  method unset_yearEnabled = _yearEnabled <- None
  method reset_yearEnabled = _yearEnabled <- None

  val mutable _day : string option = None
  method get_day = _day
  method grab_day = match _day with None->raise (Field_empty "extendedProfileBirthday.day") | Some _x915 -> _x915
  method set_day _x915 = _day <- Some _x915
  method unset_day = _day <- None
  method reset_day = _day <- None

  val mutable _dayPrivacyLevelType : PrivacyLevelType.t option = None
  method get_dayPrivacyLevelType = _dayPrivacyLevelType
  method grab_dayPrivacyLevelType = match _dayPrivacyLevelType with None->raise (Field_empty "extendedProfileBirthday.dayPrivacyLevelType") | Some _x916 -> _x916
  method set_dayPrivacyLevelType _x916 = _dayPrivacyLevelType <- Some _x916
  method unset_dayPrivacyLevelType = _dayPrivacyLevelType <- None
  method reset_dayPrivacyLevelType = _dayPrivacyLevelType <- None

  val mutable _dayEnabled : bool option = None
  method get_dayEnabled = _dayEnabled
  method grab_dayEnabled = match _dayEnabled with None->raise (Field_empty "extendedProfileBirthday.dayEnabled") | Some _x917 -> _x917
  method set_dayEnabled _x917 = _dayEnabled <- Some _x917
  method unset_dayEnabled = _dayEnabled <- None
  method reset_dayEnabled = _dayEnabled <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ExtendedProfileBirthday";
    (match _year with None -> () | Some _v -> 
      oprot#writeFieldBegin("year",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _yearPrivacyLevelType with None -> () | Some _v -> 
      oprot#writeFieldBegin("yearPrivacyLevelType",Protocol.T_I32,2);
      oprot#writeI32(PrivacyLevelType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _yearEnabled with None -> () | Some _v -> 
      oprot#writeFieldBegin("yearEnabled",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _day with None -> () | Some _v -> 
      oprot#writeFieldBegin("day",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _dayPrivacyLevelType with None -> () | Some _v -> 
      oprot#writeFieldBegin("dayPrivacyLevelType",Protocol.T_I32,6);
      oprot#writeI32(PrivacyLevelType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _dayEnabled with None -> () | Some _v -> 
      oprot#writeFieldBegin("dayEnabled",Protocol.T_BOOL,7);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_extendedProfileBirthday (iprot : Protocol.t) =
  let _str920 = new extendedProfileBirthday in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t921,_id922) = iprot#readFieldBegin in
        if _t921 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id922 with 
          | 1 -> (if _t921 = Protocol.T_STRING then
              _str920#set_year iprot#readString
            else
              iprot#skip _t921)
          | 2 -> (if _t921 = Protocol.T_I32 then
              _str920#set_yearPrivacyLevelType (PrivacyLevelType.of_i iprot#readI32)
            else
              iprot#skip _t921)
          | 3 -> (if _t921 = Protocol.T_BOOL then
              _str920#set_yearEnabled iprot#readBool
            else
              iprot#skip _t921)
          | 5 -> (if _t921 = Protocol.T_STRING then
              _str920#set_day iprot#readString
            else
              iprot#skip _t921)
          | 6 -> (if _t921 = Protocol.T_I32 then
              _str920#set_dayPrivacyLevelType (PrivacyLevelType.of_i iprot#readI32)
            else
              iprot#skip _t921)
          | 7 -> (if _t921 = Protocol.T_BOOL then
              _str920#set_dayEnabled iprot#readBool
            else
              iprot#skip _t921)
          | _ -> iprot#skip _t921);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str920

class extendedProfile =
object (self)
  val mutable _birthday : extendedProfileBirthday option = None
  method get_birthday = _birthday
  method grab_birthday = match _birthday with None->raise (Field_empty "extendedProfile.birthday") | Some _x924 -> _x924
  method set_birthday _x924 = _birthday <- Some _x924
  method unset_birthday = _birthday <- None
  method reset_birthday = _birthday <- None

  method copy =
      let _new = Oo.copy self in
      if _birthday <> None then
        _new#set_birthday self#grab_birthday#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ExtendedProfile";
    (match _birthday with None -> () | Some _v -> 
      oprot#writeFieldBegin("birthday",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_extendedProfile (iprot : Protocol.t) =
  let _str927 = new extendedProfile in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t928,_id929) = iprot#readFieldBegin in
        if _t928 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id929 with 
          | 1 -> (if _t928 = Protocol.T_STRUCT then
              _str927#set_birthday (read_extendedProfileBirthday iprot)
            else
              iprot#skip _t928)
          | _ -> iprot#skip _t928);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str927

class paidCallDialing =
object (self)
  val mutable _type : PaidCallType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "paidCallDialing.type") | Some _x931 -> _x931
  method set_type _x931 = _type <- Some _x931
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _dialedNumber : string option = None
  method get_dialedNumber = _dialedNumber
  method grab_dialedNumber = match _dialedNumber with None->raise (Field_empty "paidCallDialing.dialedNumber") | Some _x932 -> _x932
  method set_dialedNumber _x932 = _dialedNumber <- Some _x932
  method unset_dialedNumber = _dialedNumber <- None
  method reset_dialedNumber = _dialedNumber <- None

  val mutable _serviceDomain : string option = None
  method get_serviceDomain = _serviceDomain
  method grab_serviceDomain = match _serviceDomain with None->raise (Field_empty "paidCallDialing.serviceDomain") | Some _x933 -> _x933
  method set_serviceDomain _x933 = _serviceDomain <- Some _x933
  method unset_serviceDomain = _serviceDomain <- None
  method reset_serviceDomain = _serviceDomain <- None

  val mutable _productType : PaidCallProductType.t option = None
  method get_productType = _productType
  method grab_productType = match _productType with None->raise (Field_empty "paidCallDialing.productType") | Some _x934 -> _x934
  method set_productType _x934 = _productType <- Some _x934
  method unset_productType = _productType <- None
  method reset_productType = _productType <- None

  val mutable _productName : string option = None
  method get_productName = _productName
  method grab_productName = match _productName with None->raise (Field_empty "paidCallDialing.productName") | Some _x935 -> _x935
  method set_productName _x935 = _productName <- Some _x935
  method unset_productName = _productName <- None
  method reset_productName = _productName <- None

  val mutable _multipleProduct : bool option = None
  method get_multipleProduct = _multipleProduct
  method grab_multipleProduct = match _multipleProduct with None->raise (Field_empty "paidCallDialing.multipleProduct") | Some _x936 -> _x936
  method set_multipleProduct _x936 = _multipleProduct <- Some _x936
  method unset_multipleProduct = _multipleProduct <- None
  method reset_multipleProduct = _multipleProduct <- None

  val mutable _callerIdStatus : PaidCallerIdStatus.t option = None
  method get_callerIdStatus = _callerIdStatus
  method grab_callerIdStatus = match _callerIdStatus with None->raise (Field_empty "paidCallDialing.callerIdStatus") | Some _x937 -> _x937
  method set_callerIdStatus _x937 = _callerIdStatus <- Some _x937
  method unset_callerIdStatus = _callerIdStatus <- None
  method reset_callerIdStatus = _callerIdStatus <- None

  val mutable _balance : Int32.t option = None
  method get_balance = _balance
  method grab_balance = match _balance with None->raise (Field_empty "paidCallDialing.balance") | Some _x938 -> _x938
  method set_balance _x938 = _balance <- Some _x938
  method unset_balance = _balance <- None
  method reset_balance = _balance <- None

  val mutable _unit : string option = None
  method get_unit = _unit
  method grab_unit = match _unit with None->raise (Field_empty "paidCallDialing.unit") | Some _x939 -> _x939
  method set_unit _x939 = _unit <- Some _x939
  method unset_unit = _unit <- None
  method reset_unit = _unit <- None

  val mutable _rate : Int32.t option = None
  method get_rate = _rate
  method grab_rate = match _rate with None->raise (Field_empty "paidCallDialing.rate") | Some _x940 -> _x940
  method set_rate _x940 = _rate <- Some _x940
  method unset_rate = _rate <- None
  method reset_rate = _rate <- None

  val mutable _displayCode : string option = None
  method get_displayCode = _displayCode
  method grab_displayCode = match _displayCode with None->raise (Field_empty "paidCallDialing.displayCode") | Some _x941 -> _x941
  method set_displayCode _x941 = _displayCode <- Some _x941
  method unset_displayCode = _displayCode <- None
  method reset_displayCode = _displayCode <- None

  val mutable _calledNumber : string option = None
  method get_calledNumber = _calledNumber
  method grab_calledNumber = match _calledNumber with None->raise (Field_empty "paidCallDialing.calledNumber") | Some _x942 -> _x942
  method set_calledNumber _x942 = _calledNumber <- Some _x942
  method unset_calledNumber = _calledNumber <- None
  method reset_calledNumber = _calledNumber <- None

  val mutable _calleeNationalNumber : string option = None
  method get_calleeNationalNumber = _calleeNationalNumber
  method grab_calleeNationalNumber = match _calleeNationalNumber with None->raise (Field_empty "paidCallDialing.calleeNationalNumber") | Some _x943 -> _x943
  method set_calleeNationalNumber _x943 = _calleeNationalNumber <- Some _x943
  method unset_calleeNationalNumber = _calleeNationalNumber <- None
  method reset_calleeNationalNumber = _calleeNationalNumber <- None

  val mutable _calleeCallingCode : string option = None
  method get_calleeCallingCode = _calleeCallingCode
  method grab_calleeCallingCode = match _calleeCallingCode with None->raise (Field_empty "paidCallDialing.calleeCallingCode") | Some _x944 -> _x944
  method set_calleeCallingCode _x944 = _calleeCallingCode <- Some _x944
  method unset_calleeCallingCode = _calleeCallingCode <- None
  method reset_calleeCallingCode = _calleeCallingCode <- None

  val mutable _rateDivision : string option = None
  method get_rateDivision = _rateDivision
  method grab_rateDivision = match _rateDivision with None->raise (Field_empty "paidCallDialing.rateDivision") | Some _x945 -> _x945
  method set_rateDivision _x945 = _rateDivision <- Some _x945
  method unset_rateDivision = _rateDivision <- None
  method reset_rateDivision = _rateDivision <- None

  val mutable _adMaxMin : Int32.t option = None
  method get_adMaxMin = _adMaxMin
  method grab_adMaxMin = match _adMaxMin with None->raise (Field_empty "paidCallDialing.adMaxMin") | Some _x946 -> _x946
  method set_adMaxMin _x946 = _adMaxMin <- Some _x946
  method unset_adMaxMin = _adMaxMin <- None
  method reset_adMaxMin = _adMaxMin <- None

  val mutable _adRemains : Int32.t option = None
  method get_adRemains = _adRemains
  method grab_adRemains = match _adRemains with None->raise (Field_empty "paidCallDialing.adRemains") | Some _x947 -> _x947
  method set_adRemains _x947 = _adRemains <- Some _x947
  method unset_adRemains = _adRemains <- None
  method reset_adRemains = _adRemains <- None

  val mutable _adSessionId : string option = None
  method get_adSessionId = _adSessionId
  method grab_adSessionId = match _adSessionId with None->raise (Field_empty "paidCallDialing.adSessionId") | Some _x948 -> _x948
  method set_adSessionId _x948 = _adSessionId <- Some _x948
  method unset_adSessionId = _adSessionId <- None
  method reset_adSessionId = _adSessionId <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallDialing";
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,1);
      oprot#writeI32(PaidCallType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _dialedNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("dialedNumber",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _serviceDomain with None -> () | Some _v -> 
      oprot#writeFieldBegin("serviceDomain",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _productType with None -> () | Some _v -> 
      oprot#writeFieldBegin("productType",Protocol.T_I32,4);
      oprot#writeI32(PaidCallProductType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _productName with None -> () | Some _v -> 
      oprot#writeFieldBegin("productName",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _multipleProduct with None -> () | Some _v -> 
      oprot#writeFieldBegin("multipleProduct",Protocol.T_BOOL,6);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _callerIdStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("callerIdStatus",Protocol.T_I32,7);
      oprot#writeI32(PaidCallerIdStatus.to_i _v);
      oprot#writeFieldEnd
    );
    (match _balance with None -> () | Some _v -> 
      oprot#writeFieldBegin("balance",Protocol.T_I32,10);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _unit with None -> () | Some _v -> 
      oprot#writeFieldBegin("unit",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _rate with None -> () | Some _v -> 
      oprot#writeFieldBegin("rate",Protocol.T_I32,12);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _displayCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayCode",Protocol.T_STRING,13);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _calledNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("calledNumber",Protocol.T_STRING,14);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _calleeNationalNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("calleeNationalNumber",Protocol.T_STRING,15);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _calleeCallingCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("calleeCallingCode",Protocol.T_STRING,16);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _rateDivision with None -> () | Some _v -> 
      oprot#writeFieldBegin("rateDivision",Protocol.T_STRING,17);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _adMaxMin with None -> () | Some _v -> 
      oprot#writeFieldBegin("adMaxMin",Protocol.T_I32,20);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _adRemains with None -> () | Some _v -> 
      oprot#writeFieldBegin("adRemains",Protocol.T_I32,21);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _adSessionId with None -> () | Some _v -> 
      oprot#writeFieldBegin("adSessionId",Protocol.T_STRING,22);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallDialing (iprot : Protocol.t) =
  let _str951 = new paidCallDialing in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t952,_id953) = iprot#readFieldBegin in
        if _t952 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id953 with 
          | 1 -> (if _t952 = Protocol.T_I32 then
              _str951#set_type (PaidCallType.of_i iprot#readI32)
            else
              iprot#skip _t952)
          | 2 -> (if _t952 = Protocol.T_STRING then
              _str951#set_dialedNumber iprot#readString
            else
              iprot#skip _t952)
          | 3 -> (if _t952 = Protocol.T_STRING then
              _str951#set_serviceDomain iprot#readString
            else
              iprot#skip _t952)
          | 4 -> (if _t952 = Protocol.T_I32 then
              _str951#set_productType (PaidCallProductType.of_i iprot#readI32)
            else
              iprot#skip _t952)
          | 5 -> (if _t952 = Protocol.T_STRING then
              _str951#set_productName iprot#readString
            else
              iprot#skip _t952)
          | 6 -> (if _t952 = Protocol.T_BOOL then
              _str951#set_multipleProduct iprot#readBool
            else
              iprot#skip _t952)
          | 7 -> (if _t952 = Protocol.T_I32 then
              _str951#set_callerIdStatus (PaidCallerIdStatus.of_i iprot#readI32)
            else
              iprot#skip _t952)
          | 10 -> (if _t952 = Protocol.T_I32 then
              _str951#set_balance iprot#readI32
            else
              iprot#skip _t952)
          | 11 -> (if _t952 = Protocol.T_STRING then
              _str951#set_unit iprot#readString
            else
              iprot#skip _t952)
          | 12 -> (if _t952 = Protocol.T_I32 then
              _str951#set_rate iprot#readI32
            else
              iprot#skip _t952)
          | 13 -> (if _t952 = Protocol.T_STRING then
              _str951#set_displayCode iprot#readString
            else
              iprot#skip _t952)
          | 14 -> (if _t952 = Protocol.T_STRING then
              _str951#set_calledNumber iprot#readString
            else
              iprot#skip _t952)
          | 15 -> (if _t952 = Protocol.T_STRING then
              _str951#set_calleeNationalNumber iprot#readString
            else
              iprot#skip _t952)
          | 16 -> (if _t952 = Protocol.T_STRING then
              _str951#set_calleeCallingCode iprot#readString
            else
              iprot#skip _t952)
          | 17 -> (if _t952 = Protocol.T_STRING then
              _str951#set_rateDivision iprot#readString
            else
              iprot#skip _t952)
          | 20 -> (if _t952 = Protocol.T_I32 then
              _str951#set_adMaxMin iprot#readI32
            else
              iprot#skip _t952)
          | 21 -> (if _t952 = Protocol.T_I32 then
              _str951#set_adRemains iprot#readI32
            else
              iprot#skip _t952)
          | 22 -> (if _t952 = Protocol.T_STRING then
              _str951#set_adSessionId iprot#readString
            else
              iprot#skip _t952)
          | _ -> iprot#skip _t952);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str951

class spotItem =
object (self)
  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "spotItem.name") | Some _x955 -> _x955
  method set_name _x955 = _name <- Some _x955
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _phone : string option = None
  method get_phone = _phone
  method grab_phone = match _phone with None->raise (Field_empty "spotItem.phone") | Some _x956 -> _x956
  method set_phone _x956 = _phone <- Some _x956
  method unset_phone = _phone <- None
  method reset_phone = _phone <- None

  val mutable _category : SpotCategory.t option = None
  method get_category = _category
  method grab_category = match _category with None->raise (Field_empty "spotItem.category") | Some _x957 -> _x957
  method set_category _x957 = _category <- Some _x957
  method unset_category = _category <- None
  method reset_category = _category <- None

  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "spotItem.mid") | Some _x958 -> _x958
  method set_mid _x958 = _mid <- Some _x958
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _countryAreaCode : string option = None
  method get_countryAreaCode = _countryAreaCode
  method grab_countryAreaCode = match _countryAreaCode with None->raise (Field_empty "spotItem.countryAreaCode") | Some _x959 -> _x959
  method set_countryAreaCode _x959 = _countryAreaCode <- Some _x959
  method unset_countryAreaCode = _countryAreaCode <- None
  method reset_countryAreaCode = _countryAreaCode <- None

  val mutable _freePhoneCallable : bool option = None
  method get_freePhoneCallable = _freePhoneCallable
  method grab_freePhoneCallable = match _freePhoneCallable with None->raise (Field_empty "spotItem.freePhoneCallable") | Some _x960 -> _x960
  method set_freePhoneCallable _x960 = _freePhoneCallable <- Some _x960
  method unset_freePhoneCallable = _freePhoneCallable <- None
  method reset_freePhoneCallable = _freePhoneCallable <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SpotItem";
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _phone with None -> () | Some _v -> 
      oprot#writeFieldBegin("phone",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _category with None -> () | Some _v -> 
      oprot#writeFieldBegin("category",Protocol.T_I32,4);
      oprot#writeI32(SpotCategory.to_i _v);
      oprot#writeFieldEnd
    );
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _countryAreaCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("countryAreaCode",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _freePhoneCallable with None -> () | Some _v -> 
      oprot#writeFieldBegin("freePhoneCallable",Protocol.T_BOOL,10);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_spotItem (iprot : Protocol.t) =
  let _str963 = new spotItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t964,_id965) = iprot#readFieldBegin in
        if _t964 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id965 with 
          | 2 -> (if _t964 = Protocol.T_STRING then
              _str963#set_name iprot#readString
            else
              iprot#skip _t964)
          | 3 -> (if _t964 = Protocol.T_STRING then
              _str963#set_phone iprot#readString
            else
              iprot#skip _t964)
          | 4 -> (if _t964 = Protocol.T_I32 then
              _str963#set_category (SpotCategory.of_i iprot#readI32)
            else
              iprot#skip _t964)
          | 5 -> (if _t964 = Protocol.T_STRING then
              _str963#set_mid iprot#readString
            else
              iprot#skip _t964)
          | 6 -> (if _t964 = Protocol.T_STRING then
              _str963#set_countryAreaCode iprot#readString
            else
              iprot#skip _t964)
          | 10 -> (if _t964 = Protocol.T_BOOL then
              _str963#set_freePhoneCallable iprot#readBool
            else
              iprot#skip _t964)
          | _ -> iprot#skip _t964);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str963

class spotNearbyItem =
object (self)
  val mutable _spotItem : spotItem option = None
  method get_spotItem = _spotItem
  method grab_spotItem = match _spotItem with None->raise (Field_empty "spotNearbyItem.spotItem") | Some _x967 -> _x967
  method set_spotItem _x967 = _spotItem <- Some _x967
  method unset_spotItem = _spotItem <- None
  method reset_spotItem = _spotItem <- None

  val mutable _location : location option = None
  method get_location = _location
  method grab_location = match _location with None->raise (Field_empty "spotNearbyItem.location") | Some _x968 -> _x968
  method set_location _x968 = _location <- Some _x968
  method unset_location = _location <- None
  method reset_location = _location <- None

  method copy =
      let _new = Oo.copy self in
      if _spotItem <> None then
        _new#set_spotItem self#grab_spotItem#copy;
      if _location <> None then
        _new#set_location self#grab_location#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SpotNearbyItem";
    (match _spotItem with None -> () | Some _v -> 
      oprot#writeFieldBegin("spotItem",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _location with None -> () | Some _v -> 
      oprot#writeFieldBegin("location",Protocol.T_STRUCT,11);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_spotNearbyItem (iprot : Protocol.t) =
  let _str971 = new spotNearbyItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t972,_id973) = iprot#readFieldBegin in
        if _t972 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id973 with 
          | 2 -> (if _t972 = Protocol.T_STRUCT then
              _str971#set_spotItem (read_spotItem iprot)
            else
              iprot#skip _t972)
          | 11 -> (if _t972 = Protocol.T_STRUCT then
              _str971#set_location (read_location iprot)
            else
              iprot#skip _t972)
          | _ -> iprot#skip _t972);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str971

class spotNearbyResponse =
object (self)
  val mutable _spotNearbyItems : spotNearbyItem list option = None
  method get_spotNearbyItems = _spotNearbyItems
  method grab_spotNearbyItems = match _spotNearbyItems with None->raise (Field_empty "spotNearbyResponse.spotNearbyItems") | Some _x975 -> _x975
  method set_spotNearbyItems _x975 = _spotNearbyItems <- Some _x975
  method unset_spotNearbyItems = _spotNearbyItems <- None
  method reset_spotNearbyItems = _spotNearbyItems <- None

  method copy =
      let _new = Oo.copy self in
      if _spotNearbyItems <> None then
        _new#set_spotNearbyItems (List.map (fun x -> x#copy) self#grab_spotNearbyItems);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SpotNearbyResponse";
    (match _spotNearbyItems with None -> () | Some _v -> 
      oprot#writeFieldBegin("spotNearbyItems",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter978 ->         _iter978#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_spotNearbyResponse (iprot : Protocol.t) =
  let _str979 = new spotNearbyResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t980,_id981) = iprot#readFieldBegin in
        if _t980 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id981 with 
          | 1 -> (if _t980 = Protocol.T_LIST then
              _str979#set_spotNearbyItems 
                (let (_etype985,_size982) = iprot#readListBegin in
                  let _con986 = (Array.to_list (Array.init _size982 (fun _ -> (read_spotNearbyItem iprot)))) in
                    iprot#readListEnd; _con986)
            else
              iprot#skip _t980)
          | _ -> iprot#skip _t980);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str979

class spotPhoneNumberResponse =
object (self)
  val mutable _spotItems : spotItem list option = None
  method get_spotItems = _spotItems
  method grab_spotItems = match _spotItems with None->raise (Field_empty "spotPhoneNumberResponse.spotItems") | Some _x988 -> _x988
  method set_spotItems _x988 = _spotItems <- Some _x988
  method unset_spotItems = _spotItems <- None
  method reset_spotItems = _spotItems <- None

  method copy =
      let _new = Oo.copy self in
      if _spotItems <> None then
        _new#set_spotItems (List.map (fun x -> x#copy) self#grab_spotItems);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SpotPhoneNumberResponse";
    (match _spotItems with None -> () | Some _v -> 
      oprot#writeFieldBegin("spotItems",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter991 ->         _iter991#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_spotPhoneNumberResponse (iprot : Protocol.t) =
  let _str992 = new spotPhoneNumberResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t993,_id994) = iprot#readFieldBegin in
        if _t993 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id994 with 
          | 1 -> (if _t993 = Protocol.T_LIST then
              _str992#set_spotItems 
                (let (_etype998,_size995) = iprot#readListBegin in
                  let _con999 = (Array.to_list (Array.init _size995 (fun _ -> (read_spotItem iprot)))) in
                    iprot#readListEnd; _con999)
            else
              iprot#skip _t993)
          | _ -> iprot#skip _t993);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str992

class paidCallHistory =
object (self)
  val mutable _seq : Int64.t option = None
  method get_seq = _seq
  method grab_seq = match _seq with None->raise (Field_empty "paidCallHistory.seq") | Some _x1001 -> _x1001
  method set_seq _x1001 = _seq <- Some _x1001
  method unset_seq = _seq <- None
  method reset_seq = _seq <- None

  val mutable _type : PaidCallType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "paidCallHistory.type") | Some _x1002 -> _x1002
  method set_type _x1002 = _type <- Some _x1002
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _dialedNumber : string option = None
  method get_dialedNumber = _dialedNumber
  method grab_dialedNumber = match _dialedNumber with None->raise (Field_empty "paidCallHistory.dialedNumber") | Some _x1003 -> _x1003
  method set_dialedNumber _x1003 = _dialedNumber <- Some _x1003
  method unset_dialedNumber = _dialedNumber <- None
  method reset_dialedNumber = _dialedNumber <- None

  val mutable _calledNumber : string option = None
  method get_calledNumber = _calledNumber
  method grab_calledNumber = match _calledNumber with None->raise (Field_empty "paidCallHistory.calledNumber") | Some _x1004 -> _x1004
  method set_calledNumber _x1004 = _calledNumber <- Some _x1004
  method unset_calledNumber = _calledNumber <- None
  method reset_calledNumber = _calledNumber <- None

  val mutable _toMid : string option = None
  method get_toMid = _toMid
  method grab_toMid = match _toMid with None->raise (Field_empty "paidCallHistory.toMid") | Some _x1005 -> _x1005
  method set_toMid _x1005 = _toMid <- Some _x1005
  method unset_toMid = _toMid <- None
  method reset_toMid = _toMid <- None

  val mutable _toName : string option = None
  method get_toName = _toName
  method grab_toName = match _toName with None->raise (Field_empty "paidCallHistory.toName") | Some _x1006 -> _x1006
  method set_toName _x1006 = _toName <- Some _x1006
  method unset_toName = _toName <- None
  method reset_toName = _toName <- None

  val mutable _setupTime : Int64.t option = None
  method get_setupTime = _setupTime
  method grab_setupTime = match _setupTime with None->raise (Field_empty "paidCallHistory.setupTime") | Some _x1007 -> _x1007
  method set_setupTime _x1007 = _setupTime <- Some _x1007
  method unset_setupTime = _setupTime <- None
  method reset_setupTime = _setupTime <- None

  val mutable _startTime : Int64.t option = None
  method get_startTime = _startTime
  method grab_startTime = match _startTime with None->raise (Field_empty "paidCallHistory.startTime") | Some _x1008 -> _x1008
  method set_startTime _x1008 = _startTime <- Some _x1008
  method unset_startTime = _startTime <- None
  method reset_startTime = _startTime <- None

  val mutable _endTime : Int64.t option = None
  method get_endTime = _endTime
  method grab_endTime = match _endTime with None->raise (Field_empty "paidCallHistory.endTime") | Some _x1009 -> _x1009
  method set_endTime _x1009 = _endTime <- Some _x1009
  method unset_endTime = _endTime <- None
  method reset_endTime = _endTime <- None

  val mutable _duration : Int64.t option = None
  method get_duration = _duration
  method grab_duration = match _duration with None->raise (Field_empty "paidCallHistory.duration") | Some _x1010 -> _x1010
  method set_duration _x1010 = _duration <- Some _x1010
  method unset_duration = _duration <- None
  method reset_duration = _duration <- None

  val mutable _terminate : Int32.t option = None
  method get_terminate = _terminate
  method grab_terminate = match _terminate with None->raise (Field_empty "paidCallHistory.terminate") | Some _x1011 -> _x1011
  method set_terminate _x1011 = _terminate <- Some _x1011
  method unset_terminate = _terminate <- None
  method reset_terminate = _terminate <- None

  val mutable _productType : PaidCallProductType.t option = None
  method get_productType = _productType
  method grab_productType = match _productType with None->raise (Field_empty "paidCallHistory.productType") | Some _x1012 -> _x1012
  method set_productType _x1012 = _productType <- Some _x1012
  method unset_productType = _productType <- None
  method reset_productType = _productType <- None

  val mutable _charge : Int32.t option = None
  method get_charge = _charge
  method grab_charge = match _charge with None->raise (Field_empty "paidCallHistory.charge") | Some _x1013 -> _x1013
  method set_charge _x1013 = _charge <- Some _x1013
  method unset_charge = _charge <- None
  method reset_charge = _charge <- None

  val mutable _unit : string option = None
  method get_unit = _unit
  method grab_unit = match _unit with None->raise (Field_empty "paidCallHistory.unit") | Some _x1014 -> _x1014
  method set_unit _x1014 = _unit <- Some _x1014
  method unset_unit = _unit <- None
  method reset_unit = _unit <- None

  val mutable _result : string option = None
  method get_result = _result
  method grab_result = match _result with None->raise (Field_empty "paidCallHistory.result") | Some _x1015 -> _x1015
  method set_result _x1015 = _result <- Some _x1015
  method unset_result = _result <- None
  method reset_result = _result <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallHistory";
    (match _seq with None -> () | Some _v -> 
      oprot#writeFieldBegin("seq",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,2);
      oprot#writeI32(PaidCallType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _dialedNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("dialedNumber",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _calledNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("calledNumber",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _toMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("toMid",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _toName with None -> () | Some _v -> 
      oprot#writeFieldBegin("toName",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _setupTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("setupTime",Protocol.T_I64,7);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _startTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("startTime",Protocol.T_I64,8);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _endTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("endTime",Protocol.T_I64,9);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _duration with None -> () | Some _v -> 
      oprot#writeFieldBegin("duration",Protocol.T_I64,10);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _terminate with None -> () | Some _v -> 
      oprot#writeFieldBegin("terminate",Protocol.T_I32,11);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _productType with None -> () | Some _v -> 
      oprot#writeFieldBegin("productType",Protocol.T_I32,12);
      oprot#writeI32(PaidCallProductType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _charge with None -> () | Some _v -> 
      oprot#writeFieldBegin("charge",Protocol.T_I32,13);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _unit with None -> () | Some _v -> 
      oprot#writeFieldBegin("unit",Protocol.T_STRING,14);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _result with None -> () | Some _v -> 
      oprot#writeFieldBegin("result",Protocol.T_STRING,15);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallHistory (iprot : Protocol.t) =
  let _str1018 = new paidCallHistory in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1019,_id1020) = iprot#readFieldBegin in
        if _t1019 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1020 with 
          | 1 -> (if _t1019 = Protocol.T_I64 then
              _str1018#set_seq iprot#readI64
            else
              iprot#skip _t1019)
          | 2 -> (if _t1019 = Protocol.T_I32 then
              _str1018#set_type (PaidCallType.of_i iprot#readI32)
            else
              iprot#skip _t1019)
          | 3 -> (if _t1019 = Protocol.T_STRING then
              _str1018#set_dialedNumber iprot#readString
            else
              iprot#skip _t1019)
          | 4 -> (if _t1019 = Protocol.T_STRING then
              _str1018#set_calledNumber iprot#readString
            else
              iprot#skip _t1019)
          | 5 -> (if _t1019 = Protocol.T_STRING then
              _str1018#set_toMid iprot#readString
            else
              iprot#skip _t1019)
          | 6 -> (if _t1019 = Protocol.T_STRING then
              _str1018#set_toName iprot#readString
            else
              iprot#skip _t1019)
          | 7 -> (if _t1019 = Protocol.T_I64 then
              _str1018#set_setupTime iprot#readI64
            else
              iprot#skip _t1019)
          | 8 -> (if _t1019 = Protocol.T_I64 then
              _str1018#set_startTime iprot#readI64
            else
              iprot#skip _t1019)
          | 9 -> (if _t1019 = Protocol.T_I64 then
              _str1018#set_endTime iprot#readI64
            else
              iprot#skip _t1019)
          | 10 -> (if _t1019 = Protocol.T_I64 then
              _str1018#set_duration iprot#readI64
            else
              iprot#skip _t1019)
          | 11 -> (if _t1019 = Protocol.T_I32 then
              _str1018#set_terminate iprot#readI32
            else
              iprot#skip _t1019)
          | 12 -> (if _t1019 = Protocol.T_I32 then
              _str1018#set_productType (PaidCallProductType.of_i iprot#readI32)
            else
              iprot#skip _t1019)
          | 13 -> (if _t1019 = Protocol.T_I32 then
              _str1018#set_charge iprot#readI32
            else
              iprot#skip _t1019)
          | 14 -> (if _t1019 = Protocol.T_STRING then
              _str1018#set_unit iprot#readString
            else
              iprot#skip _t1019)
          | 15 -> (if _t1019 = Protocol.T_STRING then
              _str1018#set_result iprot#readString
            else
              iprot#skip _t1019)
          | _ -> iprot#skip _t1019);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1018

class paidCallHistoryResult =
object (self)
  val mutable _historys : paidCallHistory list option = None
  method get_historys = _historys
  method grab_historys = match _historys with None->raise (Field_empty "paidCallHistoryResult.historys") | Some _x1022 -> _x1022
  method set_historys _x1022 = _historys <- Some _x1022
  method unset_historys = _historys <- None
  method reset_historys = _historys <- None

  val mutable _hasNext : bool option = None
  method get_hasNext = _hasNext
  method grab_hasNext = match _hasNext with None->raise (Field_empty "paidCallHistoryResult.hasNext") | Some _x1023 -> _x1023
  method set_hasNext _x1023 = _hasNext <- Some _x1023
  method unset_hasNext = _hasNext <- None
  method reset_hasNext = _hasNext <- None

  method copy =
      let _new = Oo.copy self in
      if _historys <> None then
        _new#set_historys (List.map (fun x -> x#copy) self#grab_historys);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallHistoryResult";
    (match _historys with None -> () | Some _v -> 
      oprot#writeFieldBegin("historys",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1026 ->         _iter1026#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _hasNext with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasNext",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallHistoryResult (iprot : Protocol.t) =
  let _str1027 = new paidCallHistoryResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1028,_id1029) = iprot#readFieldBegin in
        if _t1028 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1029 with 
          | 1 -> (if _t1028 = Protocol.T_LIST then
              _str1027#set_historys 
                (let (_etype1033,_size1030) = iprot#readListBegin in
                  let _con1034 = (Array.to_list (Array.init _size1030 (fun _ -> (read_paidCallHistory iprot)))) in
                    iprot#readListEnd; _con1034)
            else
              iprot#skip _t1028)
          | 2 -> (if _t1028 = Protocol.T_BOOL then
              _str1027#set_hasNext iprot#readBool
            else
              iprot#skip _t1028)
          | _ -> iprot#skip _t1028);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1027

class paidCallMetadataResult =
object (self)
  val mutable _currencyExchangeRates : paidCallCurrencyExchangeRate list option = None
  method get_currencyExchangeRates = _currencyExchangeRates
  method grab_currencyExchangeRates = match _currencyExchangeRates with None->raise (Field_empty "paidCallMetadataResult.currencyExchangeRates") | Some _x1036 -> _x1036
  method set_currencyExchangeRates _x1036 = _currencyExchangeRates <- Some _x1036
  method unset_currencyExchangeRates = _currencyExchangeRates <- None
  method reset_currencyExchangeRates = _currencyExchangeRates <- None

  val mutable _recommendedCountryCodes : string list option = None
  method get_recommendedCountryCodes = _recommendedCountryCodes
  method grab_recommendedCountryCodes = match _recommendedCountryCodes with None->raise (Field_empty "paidCallMetadataResult.recommendedCountryCodes") | Some _x1037 -> _x1037
  method set_recommendedCountryCodes _x1037 = _recommendedCountryCodes <- Some _x1037
  method unset_recommendedCountryCodes = _recommendedCountryCodes <- None
  method reset_recommendedCountryCodes = _recommendedCountryCodes <- None

  val mutable _adCountries : paidCallAdCountry list option = None
  method get_adCountries = _adCountries
  method grab_adCountries = match _adCountries with None->raise (Field_empty "paidCallMetadataResult.adCountries") | Some _x1038 -> _x1038
  method set_adCountries _x1038 = _adCountries <- Some _x1038
  method unset_adCountries = _adCountries <- None
  method reset_adCountries = _adCountries <- None

  method copy =
      let _new = Oo.copy self in
      if _currencyExchangeRates <> None then
        _new#set_currencyExchangeRates (List.map (fun x -> x#copy) self#grab_currencyExchangeRates);
      if _adCountries <> None then
        _new#set_adCountries (List.map (fun x -> x#copy) self#grab_adCountries);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallMetadataResult";
    (match _currencyExchangeRates with None -> () | Some _v -> 
      oprot#writeFieldBegin("currencyExchangeRates",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1041 ->         _iter1041#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _recommendedCountryCodes with None -> () | Some _v -> 
      oprot#writeFieldBegin("recommendedCountryCodes",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter1042 ->         oprot#writeString(_iter1042);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _adCountries with None -> () | Some _v -> 
      oprot#writeFieldBegin("adCountries",Protocol.T_LIST,3);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1043 ->         _iter1043#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallMetadataResult (iprot : Protocol.t) =
  let _str1044 = new paidCallMetadataResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1045,_id1046) = iprot#readFieldBegin in
        if _t1045 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1046 with 
          | 1 -> (if _t1045 = Protocol.T_LIST then
              _str1044#set_currencyExchangeRates 
                (let (_etype1050,_size1047) = iprot#readListBegin in
                  let _con1051 = (Array.to_list (Array.init _size1047 (fun _ -> (read_paidCallCurrencyExchangeRate iprot)))) in
                    iprot#readListEnd; _con1051)
            else
              iprot#skip _t1045)
          | 2 -> (if _t1045 = Protocol.T_LIST then
              _str1044#set_recommendedCountryCodes 
                (let (_etype1055,_size1052) = iprot#readListBegin in
                  let _con1056 = (Array.to_list (Array.init _size1052 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con1056)
            else
              iprot#skip _t1045)
          | 3 -> (if _t1045 = Protocol.T_LIST then
              _str1044#set_adCountries 
                (let (_etype1060,_size1057) = iprot#readListBegin in
                  let _con1061 = (Array.to_list (Array.init _size1057 (fun _ -> (read_paidCallAdCountry iprot)))) in
                    iprot#readListEnd; _con1061)
            else
              iprot#skip _t1045)
          | _ -> iprot#skip _t1045);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1044

class paidCallRedeemResult =
object (self)
  val mutable _eventName : string option = None
  method get_eventName = _eventName
  method grab_eventName = match _eventName with None->raise (Field_empty "paidCallRedeemResult.eventName") | Some _x1063 -> _x1063
  method set_eventName _x1063 = _eventName <- Some _x1063
  method unset_eventName = _eventName <- None
  method reset_eventName = _eventName <- None

  val mutable _eventAmount : Int32.t option = None
  method get_eventAmount = _eventAmount
  method grab_eventAmount = match _eventAmount with None->raise (Field_empty "paidCallRedeemResult.eventAmount") | Some _x1064 -> _x1064
  method set_eventAmount _x1064 = _eventAmount <- Some _x1064
  method unset_eventAmount = _eventAmount <- None
  method reset_eventAmount = _eventAmount <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallRedeemResult";
    (match _eventName with None -> () | Some _v -> 
      oprot#writeFieldBegin("eventName",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _eventAmount with None -> () | Some _v -> 
      oprot#writeFieldBegin("eventAmount",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallRedeemResult (iprot : Protocol.t) =
  let _str1067 = new paidCallRedeemResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1068,_id1069) = iprot#readFieldBegin in
        if _t1068 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1069 with 
          | 1 -> (if _t1068 = Protocol.T_STRING then
              _str1067#set_eventName iprot#readString
            else
              iprot#skip _t1068)
          | 2 -> (if _t1068 = Protocol.T_I32 then
              _str1067#set_eventAmount iprot#readI32
            else
              iprot#skip _t1068)
          | _ -> iprot#skip _t1068);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1067

class paidCallResponse =
object (self)
  val mutable _host : callHost option = None
  method get_host = _host
  method grab_host = match _host with None->raise (Field_empty "paidCallResponse.host") | Some _x1071 -> _x1071
  method set_host _x1071 = _host <- Some _x1071
  method unset_host = _host <- None
  method reset_host = _host <- None

  val mutable _dialing : paidCallDialing option = None
  method get_dialing = _dialing
  method grab_dialing = match _dialing with None->raise (Field_empty "paidCallResponse.dialing") | Some _x1072 -> _x1072
  method set_dialing _x1072 = _dialing <- Some _x1072
  method unset_dialing = _dialing <- None
  method reset_dialing = _dialing <- None

  val mutable _token : string option = None
  method get_token = _token
  method grab_token = match _token with None->raise (Field_empty "paidCallResponse.token") | Some _x1073 -> _x1073
  method set_token _x1073 = _token <- Some _x1073
  method unset_token = _token <- None
  method reset_token = _token <- None

  val mutable _spotItems : spotItem list option = None
  method get_spotItems = _spotItems
  method grab_spotItems = match _spotItems with None->raise (Field_empty "paidCallResponse.spotItems") | Some _x1074 -> _x1074
  method set_spotItems _x1074 = _spotItems <- Some _x1074
  method unset_spotItems = _spotItems <- None
  method reset_spotItems = _spotItems <- None

  method copy =
      let _new = Oo.copy self in
      if _host <> None then
        _new#set_host self#grab_host#copy;
      if _dialing <> None then
        _new#set_dialing self#grab_dialing#copy;
      if _spotItems <> None then
        _new#set_spotItems (List.map (fun x -> x#copy) self#grab_spotItems);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallResponse";
    (match _host with None -> () | Some _v -> 
      oprot#writeFieldBegin("host",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _dialing with None -> () | Some _v -> 
      oprot#writeFieldBegin("dialing",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _token with None -> () | Some _v -> 
      oprot#writeFieldBegin("token",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _spotItems with None -> () | Some _v -> 
      oprot#writeFieldBegin("spotItems",Protocol.T_LIST,4);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1077 ->         _iter1077#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallResponse (iprot : Protocol.t) =
  let _str1078 = new paidCallResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1079,_id1080) = iprot#readFieldBegin in
        if _t1079 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1080 with 
          | 1 -> (if _t1079 = Protocol.T_STRUCT then
              _str1078#set_host (read_callHost iprot)
            else
              iprot#skip _t1079)
          | 2 -> (if _t1079 = Protocol.T_STRUCT then
              _str1078#set_dialing (read_paidCallDialing iprot)
            else
              iprot#skip _t1079)
          | 3 -> (if _t1079 = Protocol.T_STRING then
              _str1078#set_token iprot#readString
            else
              iprot#skip _t1079)
          | 4 -> (if _t1079 = Protocol.T_LIST then
              _str1078#set_spotItems 
                (let (_etype1084,_size1081) = iprot#readListBegin in
                  let _con1085 = (Array.to_list (Array.init _size1081 (fun _ -> (read_spotItem iprot)))) in
                    iprot#readListEnd; _con1085)
            else
              iprot#skip _t1079)
          | _ -> iprot#skip _t1079);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1078

class paidCallUserRate =
object (self)
  val mutable _countryCode : string option = None
  method get_countryCode = _countryCode
  method grab_countryCode = match _countryCode with None->raise (Field_empty "paidCallUserRate.countryCode") | Some _x1087 -> _x1087
  method set_countryCode _x1087 = _countryCode <- Some _x1087
  method unset_countryCode = _countryCode <- None
  method reset_countryCode = _countryCode <- None

  val mutable _rate : Int32.t option = None
  method get_rate = _rate
  method grab_rate = match _rate with None->raise (Field_empty "paidCallUserRate.rate") | Some _x1088 -> _x1088
  method set_rate _x1088 = _rate <- Some _x1088
  method unset_rate = _rate <- None
  method reset_rate = _rate <- None

  val mutable _rateDivision : string option = None
  method get_rateDivision = _rateDivision
  method grab_rateDivision = match _rateDivision with None->raise (Field_empty "paidCallUserRate.rateDivision") | Some _x1089 -> _x1089
  method set_rateDivision _x1089 = _rateDivision <- Some _x1089
  method unset_rateDivision = _rateDivision <- None
  method reset_rateDivision = _rateDivision <- None

  val mutable _rateName : string option = None
  method get_rateName = _rateName
  method grab_rateName = match _rateName with None->raise (Field_empty "paidCallUserRate.rateName") | Some _x1090 -> _x1090
  method set_rateName _x1090 = _rateName <- Some _x1090
  method unset_rateName = _rateName <- None
  method reset_rateName = _rateName <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaidCallUserRate";
    (match _countryCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("countryCode",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _rate with None -> () | Some _v -> 
      oprot#writeFieldBegin("rate",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _rateDivision with None -> () | Some _v -> 
      oprot#writeFieldBegin("rateDivision",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _rateName with None -> () | Some _v -> 
      oprot#writeFieldBegin("rateName",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paidCallUserRate (iprot : Protocol.t) =
  let _str1093 = new paidCallUserRate in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1094,_id1095) = iprot#readFieldBegin in
        if _t1094 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1095 with 
          | 1 -> (if _t1094 = Protocol.T_STRING then
              _str1093#set_countryCode iprot#readString
            else
              iprot#skip _t1094)
          | 2 -> (if _t1094 = Protocol.T_I32 then
              _str1093#set_rate iprot#readI32
            else
              iprot#skip _t1094)
          | 3 -> (if _t1094 = Protocol.T_STRING then
              _str1093#set_rateDivision iprot#readString
            else
              iprot#skip _t1094)
          | 4 -> (if _t1094 = Protocol.T_STRING then
              _str1093#set_rateName iprot#readString
            else
              iprot#skip _t1094)
          | _ -> iprot#skip _t1094);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1093

class channelInfo =
object (self)
  val mutable _channelId : string option = None
  method get_channelId = _channelId
  method grab_channelId = match _channelId with None->raise (Field_empty "channelInfo.channelId") | Some _x1097 -> _x1097
  method set_channelId _x1097 = _channelId <- Some _x1097
  method unset_channelId = _channelId <- None
  method reset_channelId = _channelId <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "channelInfo.name") | Some _x1098 -> _x1098
  method set_name _x1098 = _name <- Some _x1098
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _entryPageUrl : string option = None
  method get_entryPageUrl = _entryPageUrl
  method grab_entryPageUrl = match _entryPageUrl with None->raise (Field_empty "channelInfo.entryPageUrl") | Some _x1099 -> _x1099
  method set_entryPageUrl _x1099 = _entryPageUrl <- Some _x1099
  method unset_entryPageUrl = _entryPageUrl <- None
  method reset_entryPageUrl = _entryPageUrl <- None

  val mutable _descriptionText : string option = None
  method get_descriptionText = _descriptionText
  method grab_descriptionText = match _descriptionText with None->raise (Field_empty "channelInfo.descriptionText") | Some _x1100 -> _x1100
  method set_descriptionText _x1100 = _descriptionText <- Some _x1100
  method unset_descriptionText = _descriptionText <- None
  method reset_descriptionText = _descriptionText <- None

  val mutable _provider : channelProvider option = None
  method get_provider = _provider
  method grab_provider = match _provider with None->raise (Field_empty "channelInfo.provider") | Some _x1101 -> _x1101
  method set_provider _x1101 = _provider <- Some _x1101
  method unset_provider = _provider <- None
  method reset_provider = _provider <- None

  val mutable _publicType : PublicType.t option = None
  method get_publicType = _publicType
  method grab_publicType = match _publicType with None->raise (Field_empty "channelInfo.publicType") | Some _x1102 -> _x1102
  method set_publicType _x1102 = _publicType <- Some _x1102
  method unset_publicType = _publicType <- None
  method reset_publicType = _publicType <- None

  val mutable _iconImage : string option = None
  method get_iconImage = _iconImage
  method grab_iconImage = match _iconImage with None->raise (Field_empty "channelInfo.iconImage") | Some _x1103 -> _x1103
  method set_iconImage _x1103 = _iconImage <- Some _x1103
  method unset_iconImage = _iconImage <- None
  method reset_iconImage = _iconImage <- None

  val mutable _permissions : string list option = None
  method get_permissions = _permissions
  method grab_permissions = match _permissions with None->raise (Field_empty "channelInfo.permissions") | Some _x1104 -> _x1104
  method set_permissions _x1104 = _permissions <- Some _x1104
  method unset_permissions = _permissions <- None
  method reset_permissions = _permissions <- None

  val mutable _iconThumbnailImage : string option = None
  method get_iconThumbnailImage = _iconThumbnailImage
  method grab_iconThumbnailImage = match _iconThumbnailImage with None->raise (Field_empty "channelInfo.iconThumbnailImage") | Some _x1105 -> _x1105
  method set_iconThumbnailImage _x1105 = _iconThumbnailImage <- Some _x1105
  method unset_iconThumbnailImage = _iconThumbnailImage <- None
  method reset_iconThumbnailImage = _iconThumbnailImage <- None

  val mutable _channelConfigurations : ChannelConfiguration.t list option = None
  method get_channelConfigurations = _channelConfigurations
  method grab_channelConfigurations = match _channelConfigurations with None->raise (Field_empty "channelInfo.channelConfigurations") | Some _x1106 -> _x1106
  method set_channelConfigurations _x1106 = _channelConfigurations <- Some _x1106
  method unset_channelConfigurations = _channelConfigurations <- None
  method reset_channelConfigurations = _channelConfigurations <- None

  val mutable _lcsAllApiUsable : bool option = None
  method get_lcsAllApiUsable = _lcsAllApiUsable
  method grab_lcsAllApiUsable = match _lcsAllApiUsable with None->raise (Field_empty "channelInfo.lcsAllApiUsable") | Some _x1107 -> _x1107
  method set_lcsAllApiUsable _x1107 = _lcsAllApiUsable <- Some _x1107
  method unset_lcsAllApiUsable = _lcsAllApiUsable <- None
  method reset_lcsAllApiUsable = _lcsAllApiUsable <- None

  val mutable _allowedPermissions : (ChannelPermission.t,bool) Hashtbl.t option = None
  method get_allowedPermissions = _allowedPermissions
  method grab_allowedPermissions = match _allowedPermissions with None->raise (Field_empty "channelInfo.allowedPermissions") | Some _x1108 -> _x1108
  method set_allowedPermissions _x1108 = _allowedPermissions <- Some _x1108
  method unset_allowedPermissions = _allowedPermissions <- None
  method reset_allowedPermissions = _allowedPermissions <- None

  val mutable _channelDomains : channelDomain list option = None
  method get_channelDomains = _channelDomains
  method grab_channelDomains = match _channelDomains with None->raise (Field_empty "channelInfo.channelDomains") | Some _x1109 -> _x1109
  method set_channelDomains _x1109 = _channelDomains <- Some _x1109
  method unset_channelDomains = _channelDomains <- None
  method reset_channelDomains = _channelDomains <- None

  val mutable _updatedTimestamp : Int64.t option = None
  method get_updatedTimestamp = _updatedTimestamp
  method grab_updatedTimestamp = match _updatedTimestamp with None->raise (Field_empty "channelInfo.updatedTimestamp") | Some _x1110 -> _x1110
  method set_updatedTimestamp _x1110 = _updatedTimestamp <- Some _x1110
  method unset_updatedTimestamp = _updatedTimestamp <- None
  method reset_updatedTimestamp = _updatedTimestamp <- None

  method copy =
      let _new = Oo.copy self in
      if _provider <> None then
        _new#set_provider self#grab_provider#copy;
      if _allowedPermissions <> None then
        _new#set_allowedPermissions (Hashtbl.copy self#grab_allowedPermissions);
      if _channelDomains <> None then
        _new#set_channelDomains (List.map (fun x -> x#copy) self#grab_channelDomains);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelInfo";
    (match _channelId with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _entryPageUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("entryPageUrl",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _descriptionText with None -> () | Some _v -> 
      oprot#writeFieldBegin("descriptionText",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _provider with None -> () | Some _v -> 
      oprot#writeFieldBegin("provider",Protocol.T_STRUCT,6);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _publicType with None -> () | Some _v -> 
      oprot#writeFieldBegin("publicType",Protocol.T_I32,7);
      oprot#writeI32(PublicType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _iconImage with None -> () | Some _v -> 
      oprot#writeFieldBegin("iconImage",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _permissions with None -> () | Some _v -> 
      oprot#writeFieldBegin("permissions",Protocol.T_LIST,9);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter1113 ->         oprot#writeString(_iter1113);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _iconThumbnailImage with None -> () | Some _v -> 
      oprot#writeFieldBegin("iconThumbnailImage",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _channelConfigurations with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelConfigurations",Protocol.T_LIST,12);
      oprot#writeListBegin(Protocol.T_I32,List.length _v);
      List.iter (fun _iter1114 ->         oprot#writeI32(ChannelConfiguration.to_i _iter1114);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _lcsAllApiUsable with None -> () | Some _v -> 
      oprot#writeFieldBegin("lcsAllApiUsable",Protocol.T_BOOL,13);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _allowedPermissions with None -> () | Some _v -> 
      oprot#writeFieldBegin("allowedPermissions",Protocol.T_SET,14);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter1115 -> fun _ ->         oprot#writeI32(ChannelPermission.to_i _iter1115);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _channelDomains with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelDomains",Protocol.T_LIST,15);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1116 ->         _iter1116#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _updatedTimestamp with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedTimestamp",Protocol.T_I64,16);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_channelInfo (iprot : Protocol.t) =
  let _str1117 = new channelInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1118,_id1119) = iprot#readFieldBegin in
        if _t1118 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1119 with 
          | 1 -> (if _t1118 = Protocol.T_STRING then
              _str1117#set_channelId iprot#readString
            else
              iprot#skip _t1118)
          | 3 -> (if _t1118 = Protocol.T_STRING then
              _str1117#set_name iprot#readString
            else
              iprot#skip _t1118)
          | 4 -> (if _t1118 = Protocol.T_STRING then
              _str1117#set_entryPageUrl iprot#readString
            else
              iprot#skip _t1118)
          | 5 -> (if _t1118 = Protocol.T_STRING then
              _str1117#set_descriptionText iprot#readString
            else
              iprot#skip _t1118)
          | 6 -> (if _t1118 = Protocol.T_STRUCT then
              _str1117#set_provider (read_channelProvider iprot)
            else
              iprot#skip _t1118)
          | 7 -> (if _t1118 = Protocol.T_I32 then
              _str1117#set_publicType (PublicType.of_i iprot#readI32)
            else
              iprot#skip _t1118)
          | 8 -> (if _t1118 = Protocol.T_STRING then
              _str1117#set_iconImage iprot#readString
            else
              iprot#skip _t1118)
          | 9 -> (if _t1118 = Protocol.T_LIST then
              _str1117#set_permissions 
                (let (_etype1123,_size1120) = iprot#readListBegin in
                  let _con1124 = (Array.to_list (Array.init _size1120 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con1124)
            else
              iprot#skip _t1118)
          | 11 -> (if _t1118 = Protocol.T_STRING then
              _str1117#set_iconThumbnailImage iprot#readString
            else
              iprot#skip _t1118)
          | 12 -> (if _t1118 = Protocol.T_LIST then
              _str1117#set_channelConfigurations 
                (let (_etype1128,_size1125) = iprot#readListBegin in
                  let _con1129 = (Array.to_list (Array.init _size1125 (fun _ -> (ChannelConfiguration.of_i iprot#readI32)))) in
                    iprot#readListEnd; _con1129)
            else
              iprot#skip _t1118)
          | 13 -> (if _t1118 = Protocol.T_BOOL then
              _str1117#set_lcsAllApiUsable iprot#readBool
            else
              iprot#skip _t1118)
          | 14 -> (if _t1118 = Protocol.T_SET then
              _str1117#set_allowedPermissions 
                (let (_etype1133,_size1130) = iprot#readSetBegin in
                let _con1134 = Hashtbl.create _size1130 in
                  for i = 1 to _size1130 do
                    Hashtbl.add _con1134 (ChannelPermission.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con1134)
            else
              iprot#skip _t1118)
          | 15 -> (if _t1118 = Protocol.T_LIST then
              _str1117#set_channelDomains 
                (let (_etype1138,_size1135) = iprot#readListBegin in
                  let _con1139 = (Array.to_list (Array.init _size1135 (fun _ -> (read_channelDomain iprot)))) in
                    iprot#readListEnd; _con1139)
            else
              iprot#skip _t1118)
          | 16 -> (if _t1118 = Protocol.T_I64 then
              _str1117#set_updatedTimestamp iprot#readI64
            else
              iprot#skip _t1118)
          | _ -> iprot#skip _t1118);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1117

class approvedChannelInfo =
object (self)
  val mutable _channelInfo : channelInfo option = None
  method get_channelInfo = _channelInfo
  method grab_channelInfo = match _channelInfo with None->raise (Field_empty "approvedChannelInfo.channelInfo") | Some _x1141 -> _x1141
  method set_channelInfo _x1141 = _channelInfo <- Some _x1141
  method unset_channelInfo = _channelInfo <- None
  method reset_channelInfo = _channelInfo <- None

  val mutable _approvedAt : Int64.t option = None
  method get_approvedAt = _approvedAt
  method grab_approvedAt = match _approvedAt with None->raise (Field_empty "approvedChannelInfo.approvedAt") | Some _x1142 -> _x1142
  method set_approvedAt _x1142 = _approvedAt <- Some _x1142
  method unset_approvedAt = _approvedAt <- None
  method reset_approvedAt = _approvedAt <- None

  method copy =
      let _new = Oo.copy self in
      if _channelInfo <> None then
        _new#set_channelInfo self#grab_channelInfo#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ApprovedChannelInfo";
    (match _channelInfo with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelInfo",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _approvedAt with None -> () | Some _v -> 
      oprot#writeFieldBegin("approvedAt",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_approvedChannelInfo (iprot : Protocol.t) =
  let _str1145 = new approvedChannelInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1146,_id1147) = iprot#readFieldBegin in
        if _t1146 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1147 with 
          | 1 -> (if _t1146 = Protocol.T_STRUCT then
              _str1145#set_channelInfo (read_channelInfo iprot)
            else
              iprot#skip _t1146)
          | 2 -> (if _t1146 = Protocol.T_I64 then
              _str1145#set_approvedAt iprot#readI64
            else
              iprot#skip _t1146)
          | _ -> iprot#skip _t1146);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1145

class approvedChannelInfos =
object (self)
  val mutable _approvedChannelInfos : approvedChannelInfo list option = None
  method get_approvedChannelInfos = _approvedChannelInfos
  method grab_approvedChannelInfos = match _approvedChannelInfos with None->raise (Field_empty "approvedChannelInfos.approvedChannelInfos") | Some _x1149 -> _x1149
  method set_approvedChannelInfos _x1149 = _approvedChannelInfos <- Some _x1149
  method unset_approvedChannelInfos = _approvedChannelInfos <- None
  method reset_approvedChannelInfos = _approvedChannelInfos <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "approvedChannelInfos.revision") | Some _x1150 -> _x1150
  method set_revision _x1150 = _revision <- Some _x1150
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  method copy =
      let _new = Oo.copy self in
      if _approvedChannelInfos <> None then
        _new#set_approvedChannelInfos (List.map (fun x -> x#copy) self#grab_approvedChannelInfos);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ApprovedChannelInfos";
    (match _approvedChannelInfos with None -> () | Some _v -> 
      oprot#writeFieldBegin("approvedChannelInfos",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1153 ->         _iter1153#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_approvedChannelInfos (iprot : Protocol.t) =
  let _str1154 = new approvedChannelInfos in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1155,_id1156) = iprot#readFieldBegin in
        if _t1155 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1156 with 
          | 1 -> (if _t1155 = Protocol.T_LIST then
              _str1154#set_approvedChannelInfos 
                (let (_etype1160,_size1157) = iprot#readListBegin in
                  let _con1161 = (Array.to_list (Array.init _size1157 (fun _ -> (read_approvedChannelInfo iprot)))) in
                    iprot#readListEnd; _con1161)
            else
              iprot#skip _t1155)
          | 2 -> (if _t1155 = Protocol.T_I64 then
              _str1154#set_revision iprot#readI64
            else
              iprot#skip _t1155)
          | _ -> iprot#skip _t1155);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1154

class authQrcode =
object (self)
  val mutable _qrcode : string option = None
  method get_qrcode = _qrcode
  method grab_qrcode = match _qrcode with None->raise (Field_empty "authQrcode.qrcode") | Some _x1163 -> _x1163
  method set_qrcode _x1163 = _qrcode <- Some _x1163
  method unset_qrcode = _qrcode <- None
  method reset_qrcode = _qrcode <- None

  val mutable _verifier : string option = None
  method get_verifier = _verifier
  method grab_verifier = match _verifier with None->raise (Field_empty "authQrcode.verifier") | Some _x1164 -> _x1164
  method set_verifier _x1164 = _verifier <- Some _x1164
  method unset_verifier = _verifier <- None
  method reset_verifier = _verifier <- None

  val mutable _callbackUrl : string option = None
  method get_callbackUrl = _callbackUrl
  method grab_callbackUrl = match _callbackUrl with None->raise (Field_empty "authQrcode.callbackUrl") | Some _x1165 -> _x1165
  method set_callbackUrl _x1165 = _callbackUrl <- Some _x1165
  method unset_callbackUrl = _callbackUrl <- None
  method reset_callbackUrl = _callbackUrl <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "AuthQrcode";
    (match _qrcode with None -> () | Some _v -> 
      oprot#writeFieldBegin("qrcode",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _verifier with None -> () | Some _v -> 
      oprot#writeFieldBegin("verifier",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _callbackUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("callbackUrl",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_authQrcode (iprot : Protocol.t) =
  let _str1168 = new authQrcode in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1169,_id1170) = iprot#readFieldBegin in
        if _t1169 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1170 with 
          | 1 -> (if _t1169 = Protocol.T_STRING then
              _str1168#set_qrcode iprot#readString
            else
              iprot#skip _t1169)
          | 2 -> (if _t1169 = Protocol.T_STRING then
              _str1168#set_verifier iprot#readString
            else
              iprot#skip _t1169)
          | 3 -> (if _t1169 = Protocol.T_STRING then
              _str1168#set_callbackUrl iprot#readString
            else
              iprot#skip _t1169)
          | _ -> iprot#skip _t1169);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1168

class analyticsInfo =
object (self)
  val mutable _gaSamplingRate : float option = None
  method get_gaSamplingRate = _gaSamplingRate
  method grab_gaSamplingRate = match _gaSamplingRate with None->raise (Field_empty "analyticsInfo.gaSamplingRate") | Some _x1172 -> _x1172
  method set_gaSamplingRate _x1172 = _gaSamplingRate <- Some _x1172
  method unset_gaSamplingRate = _gaSamplingRate <- None
  method reset_gaSamplingRate = _gaSamplingRate <- None

  val mutable _tmid : string option = None
  method get_tmid = _tmid
  method grab_tmid = match _tmid with None->raise (Field_empty "analyticsInfo.tmid") | Some _x1173 -> _x1173
  method set_tmid _x1173 = _tmid <- Some _x1173
  method unset_tmid = _tmid <- None
  method reset_tmid = _tmid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "AnalyticsInfo";
    (match _gaSamplingRate with None -> () | Some _v -> 
      oprot#writeFieldBegin("gaSamplingRate",Protocol.T_DOUBLE,1);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _tmid with None -> () | Some _v -> 
      oprot#writeFieldBegin("tmid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_analyticsInfo (iprot : Protocol.t) =
  let _str1176 = new analyticsInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1177,_id1178) = iprot#readFieldBegin in
        if _t1177 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1178 with 
          | 1 -> (if _t1177 = Protocol.T_DOUBLE then
              _str1176#set_gaSamplingRate iprot#readDouble
            else
              iprot#skip _t1177)
          | 2 -> (if _t1177 = Protocol.T_STRING then
              _str1176#set_tmid iprot#readString
            else
              iprot#skip _t1177)
          | _ -> iprot#skip _t1177);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1176

class contactTransition =
object (self)
  val mutable _ownerMid : string option = None
  method get_ownerMid = _ownerMid
  method grab_ownerMid = match _ownerMid with None->raise (Field_empty "contactTransition.ownerMid") | Some _x1180 -> _x1180
  method set_ownerMid _x1180 = _ownerMid <- Some _x1180
  method unset_ownerMid = _ownerMid <- None
  method reset_ownerMid = _ownerMid <- None

  val mutable _targetMid : string option = None
  method get_targetMid = _targetMid
  method grab_targetMid = match _targetMid with None->raise (Field_empty "contactTransition.targetMid") | Some _x1181 -> _x1181
  method set_targetMid _x1181 = _targetMid <- Some _x1181
  method unset_targetMid = _targetMid <- None
  method reset_targetMid = _targetMid <- None

  val mutable _previousStatus : ContactStatus.t option = None
  method get_previousStatus = _previousStatus
  method grab_previousStatus = match _previousStatus with None->raise (Field_empty "contactTransition.previousStatus") | Some _x1182 -> _x1182
  method set_previousStatus _x1182 = _previousStatus <- Some _x1182
  method unset_previousStatus = _previousStatus <- None
  method reset_previousStatus = _previousStatus <- None

  val mutable _resultStatus : ContactStatus.t option = None
  method get_resultStatus = _resultStatus
  method grab_resultStatus = match _resultStatus with None->raise (Field_empty "contactTransition.resultStatus") | Some _x1183 -> _x1183
  method set_resultStatus _x1183 = _resultStatus <- Some _x1183
  method unset_resultStatus = _resultStatus <- None
  method reset_resultStatus = _resultStatus <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ContactTransition";
    (match _ownerMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("ownerMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _targetMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("targetMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _previousStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("previousStatus",Protocol.T_I32,3);
      oprot#writeI32(ContactStatus.to_i _v);
      oprot#writeFieldEnd
    );
    (match _resultStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("resultStatus",Protocol.T_I32,4);
      oprot#writeI32(ContactStatus.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_contactTransition (iprot : Protocol.t) =
  let _str1186 = new contactTransition in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1187,_id1188) = iprot#readFieldBegin in
        if _t1187 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1188 with 
          | 1 -> (if _t1187 = Protocol.T_STRING then
              _str1186#set_ownerMid iprot#readString
            else
              iprot#skip _t1187)
          | 2 -> (if _t1187 = Protocol.T_STRING then
              _str1186#set_targetMid iprot#readString
            else
              iprot#skip _t1187)
          | 3 -> (if _t1187 = Protocol.T_I32 then
              _str1186#set_previousStatus (ContactStatus.of_i iprot#readI32)
            else
              iprot#skip _t1187)
          | 4 -> (if _t1187 = Protocol.T_I32 then
              _str1186#set_resultStatus (ContactStatus.of_i iprot#readI32)
            else
              iprot#skip _t1187)
          | _ -> iprot#skip _t1187);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1186

class userTicketResponse =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "userTicketResponse.mid") | Some _x1190 -> _x1190
  method set_mid _x1190 = _mid <- Some _x1190
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _userTicket : string option = None
  method get_userTicket = _userTicket
  method grab_userTicket = match _userTicket with None->raise (Field_empty "userTicketResponse.userTicket") | Some _x1191 -> _x1191
  method set_userTicket _x1191 = _userTicket <- Some _x1191
  method unset_userTicket = _userTicket <- None
  method reset_userTicket = _userTicket <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UserTicketResponse";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _userTicket with None -> () | Some _v -> 
      oprot#writeFieldBegin("userTicket",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_userTicketResponse (iprot : Protocol.t) =
  let _str1194 = new userTicketResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1195,_id1196) = iprot#readFieldBegin in
        if _t1195 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1196 with 
          | 1 -> (if _t1195 = Protocol.T_STRING then
              _str1194#set_mid iprot#readString
            else
              iprot#skip _t1195)
          | 2 -> (if _t1195 = Protocol.T_STRING then
              _str1194#set_userTicket iprot#readString
            else
              iprot#skip _t1195)
          | _ -> iprot#skip _t1195);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1194

class buddyBanner =
object (self)
  val mutable _buddyBannerLinkType : BuddyBannerLinkType.t option = None
  method get_buddyBannerLinkType = _buddyBannerLinkType
  method grab_buddyBannerLinkType = match _buddyBannerLinkType with None->raise (Field_empty "buddyBanner.buddyBannerLinkType") | Some _x1198 -> _x1198
  method set_buddyBannerLinkType _x1198 = _buddyBannerLinkType <- Some _x1198
  method unset_buddyBannerLinkType = _buddyBannerLinkType <- None
  method reset_buddyBannerLinkType = _buddyBannerLinkType <- None

  val mutable _buddyBannerLink : string option = None
  method get_buddyBannerLink = _buddyBannerLink
  method grab_buddyBannerLink = match _buddyBannerLink with None->raise (Field_empty "buddyBanner.buddyBannerLink") | Some _x1199 -> _x1199
  method set_buddyBannerLink _x1199 = _buddyBannerLink <- Some _x1199
  method unset_buddyBannerLink = _buddyBannerLink <- None
  method reset_buddyBannerLink = _buddyBannerLink <- None

  val mutable _buddyBannerImageUrl : string option = None
  method get_buddyBannerImageUrl = _buddyBannerImageUrl
  method grab_buddyBannerImageUrl = match _buddyBannerImageUrl with None->raise (Field_empty "buddyBanner.buddyBannerImageUrl") | Some _x1200 -> _x1200
  method set_buddyBannerImageUrl _x1200 = _buddyBannerImageUrl <- Some _x1200
  method unset_buddyBannerImageUrl = _buddyBannerImageUrl <- None
  method reset_buddyBannerImageUrl = _buddyBannerImageUrl <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "BuddyBanner";
    (match _buddyBannerLinkType with None -> () | Some _v -> 
      oprot#writeFieldBegin("buddyBannerLinkType",Protocol.T_I32,1);
      oprot#writeI32(BuddyBannerLinkType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _buddyBannerLink with None -> () | Some _v -> 
      oprot#writeFieldBegin("buddyBannerLink",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _buddyBannerImageUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("buddyBannerImageUrl",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_buddyBanner (iprot : Protocol.t) =
  let _str1203 = new buddyBanner in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1204,_id1205) = iprot#readFieldBegin in
        if _t1204 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1205 with 
          | 1 -> (if _t1204 = Protocol.T_I32 then
              _str1203#set_buddyBannerLinkType (BuddyBannerLinkType.of_i iprot#readI32)
            else
              iprot#skip _t1204)
          | 2 -> (if _t1204 = Protocol.T_STRING then
              _str1203#set_buddyBannerLink iprot#readString
            else
              iprot#skip _t1204)
          | 3 -> (if _t1204 = Protocol.T_STRING then
              _str1203#set_buddyBannerImageUrl iprot#readString
            else
              iprot#skip _t1204)
          | _ -> iprot#skip _t1204);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1203

class buddyDetail =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "buddyDetail.mid") | Some _x1207 -> _x1207
  method set_mid _x1207 = _mid <- Some _x1207
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _memberCount : Int64.t option = None
  method get_memberCount = _memberCount
  method grab_memberCount = match _memberCount with None->raise (Field_empty "buddyDetail.memberCount") | Some _x1208 -> _x1208
  method set_memberCount _x1208 = _memberCount <- Some _x1208
  method unset_memberCount = _memberCount <- None
  method reset_memberCount = _memberCount <- None

  val mutable _onAir : bool option = None
  method get_onAir = _onAir
  method grab_onAir = match _onAir with None->raise (Field_empty "buddyDetail.onAir") | Some _x1209 -> _x1209
  method set_onAir _x1209 = _onAir <- Some _x1209
  method unset_onAir = _onAir <- None
  method reset_onAir = _onAir <- None

  val mutable _businessAccount : bool option = None
  method get_businessAccount = _businessAccount
  method grab_businessAccount = match _businessAccount with None->raise (Field_empty "buddyDetail.businessAccount") | Some _x1210 -> _x1210
  method set_businessAccount _x1210 = _businessAccount <- Some _x1210
  method unset_businessAccount = _businessAccount <- None
  method reset_businessAccount = _businessAccount <- None

  val mutable _addable : bool option = None
  method get_addable = _addable
  method grab_addable = match _addable with None->raise (Field_empty "buddyDetail.addable") | Some _x1211 -> _x1211
  method set_addable _x1211 = _addable <- Some _x1211
  method unset_addable = _addable <- None
  method reset_addable = _addable <- None

  val mutable _acceptableContentTypes : (ContentType.t,bool) Hashtbl.t option = None
  method get_acceptableContentTypes = _acceptableContentTypes
  method grab_acceptableContentTypes = match _acceptableContentTypes with None->raise (Field_empty "buddyDetail.acceptableContentTypes") | Some _x1212 -> _x1212
  method set_acceptableContentTypes _x1212 = _acceptableContentTypes <- Some _x1212
  method unset_acceptableContentTypes = _acceptableContentTypes <- None
  method reset_acceptableContentTypes = _acceptableContentTypes <- None

  val mutable _capableMyhome : bool option = None
  method get_capableMyhome = _capableMyhome
  method grab_capableMyhome = match _capableMyhome with None->raise (Field_empty "buddyDetail.capableMyhome") | Some _x1213 -> _x1213
  method set_capableMyhome _x1213 = _capableMyhome <- Some _x1213
  method unset_capableMyhome = _capableMyhome <- None
  method reset_capableMyhome = _capableMyhome <- None

  method copy =
      let _new = Oo.copy self in
      if _acceptableContentTypes <> None then
        _new#set_acceptableContentTypes (Hashtbl.copy self#grab_acceptableContentTypes);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "BuddyDetail";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _memberCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("memberCount",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _onAir with None -> () | Some _v -> 
      oprot#writeFieldBegin("onAir",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _businessAccount with None -> () | Some _v -> 
      oprot#writeFieldBegin("businessAccount",Protocol.T_BOOL,4);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _addable with None -> () | Some _v -> 
      oprot#writeFieldBegin("addable",Protocol.T_BOOL,5);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _acceptableContentTypes with None -> () | Some _v -> 
      oprot#writeFieldBegin("acceptableContentTypes",Protocol.T_SET,6);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter1216 -> fun _ ->         oprot#writeI32(ContentType.to_i _iter1216);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _capableMyhome with None -> () | Some _v -> 
      oprot#writeFieldBegin("capableMyhome",Protocol.T_BOOL,7);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_buddyDetail (iprot : Protocol.t) =
  let _str1217 = new buddyDetail in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1218,_id1219) = iprot#readFieldBegin in
        if _t1218 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1219 with 
          | 1 -> (if _t1218 = Protocol.T_STRING then
              _str1217#set_mid iprot#readString
            else
              iprot#skip _t1218)
          | 2 -> (if _t1218 = Protocol.T_I64 then
              _str1217#set_memberCount iprot#readI64
            else
              iprot#skip _t1218)
          | 3 -> (if _t1218 = Protocol.T_BOOL then
              _str1217#set_onAir iprot#readBool
            else
              iprot#skip _t1218)
          | 4 -> (if _t1218 = Protocol.T_BOOL then
              _str1217#set_businessAccount iprot#readBool
            else
              iprot#skip _t1218)
          | 5 -> (if _t1218 = Protocol.T_BOOL then
              _str1217#set_addable iprot#readBool
            else
              iprot#skip _t1218)
          | 6 -> (if _t1218 = Protocol.T_SET then
              _str1217#set_acceptableContentTypes 
                (let (_etype1223,_size1220) = iprot#readSetBegin in
                let _con1224 = Hashtbl.create _size1220 in
                  for i = 1 to _size1220 do
                    Hashtbl.add _con1224 (ContentType.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con1224)
            else
              iprot#skip _t1218)
          | 7 -> (if _t1218 = Protocol.T_BOOL then
              _str1217#set_capableMyhome iprot#readBool
            else
              iprot#skip _t1218)
          | _ -> iprot#skip _t1218);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1217

class contact =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "contact.mid") | Some _x1226 -> _x1226
  method set_mid _x1226 = _mid <- Some _x1226
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "contact.createdTime") | Some _x1227 -> _x1227
  method set_createdTime _x1227 = _createdTime <- Some _x1227
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _type : ContactType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "contact.type") | Some _x1228 -> _x1228
  method set_type _x1228 = _type <- Some _x1228
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _status : ContactStatus.t option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "contact.status") | Some _x1229 -> _x1229
  method set_status _x1229 = _status <- Some _x1229
  method unset_status = _status <- None
  method reset_status = _status <- None

  val mutable _relation : ContactRelation.t option = None
  method get_relation = _relation
  method grab_relation = match _relation with None->raise (Field_empty "contact.relation") | Some _x1230 -> _x1230
  method set_relation _x1230 = _relation <- Some _x1230
  method unset_relation = _relation <- None
  method reset_relation = _relation <- None

  val mutable _displayName : string option = None
  method get_displayName = _displayName
  method grab_displayName = match _displayName with None->raise (Field_empty "contact.displayName") | Some _x1231 -> _x1231
  method set_displayName _x1231 = _displayName <- Some _x1231
  method unset_displayName = _displayName <- None
  method reset_displayName = _displayName <- None

  val mutable _phoneticName : string option = None
  method get_phoneticName = _phoneticName
  method grab_phoneticName = match _phoneticName with None->raise (Field_empty "contact.phoneticName") | Some _x1232 -> _x1232
  method set_phoneticName _x1232 = _phoneticName <- Some _x1232
  method unset_phoneticName = _phoneticName <- None
  method reset_phoneticName = _phoneticName <- None

  val mutable _pictureStatus : string option = None
  method get_pictureStatus = _pictureStatus
  method grab_pictureStatus = match _pictureStatus with None->raise (Field_empty "contact.pictureStatus") | Some _x1233 -> _x1233
  method set_pictureStatus _x1233 = _pictureStatus <- Some _x1233
  method unset_pictureStatus = _pictureStatus <- None
  method reset_pictureStatus = _pictureStatus <- None

  val mutable _thumbnailUrl : string option = None
  method get_thumbnailUrl = _thumbnailUrl
  method grab_thumbnailUrl = match _thumbnailUrl with None->raise (Field_empty "contact.thumbnailUrl") | Some _x1234 -> _x1234
  method set_thumbnailUrl _x1234 = _thumbnailUrl <- Some _x1234
  method unset_thumbnailUrl = _thumbnailUrl <- None
  method reset_thumbnailUrl = _thumbnailUrl <- None

  val mutable _statusMessage : string option = None
  method get_statusMessage = _statusMessage
  method grab_statusMessage = match _statusMessage with None->raise (Field_empty "contact.statusMessage") | Some _x1235 -> _x1235
  method set_statusMessage _x1235 = _statusMessage <- Some _x1235
  method unset_statusMessage = _statusMessage <- None
  method reset_statusMessage = _statusMessage <- None

  val mutable _displayNameOverridden : string option = None
  method get_displayNameOverridden = _displayNameOverridden
  method grab_displayNameOverridden = match _displayNameOverridden with None->raise (Field_empty "contact.displayNameOverridden") | Some _x1236 -> _x1236
  method set_displayNameOverridden _x1236 = _displayNameOverridden <- Some _x1236
  method unset_displayNameOverridden = _displayNameOverridden <- None
  method reset_displayNameOverridden = _displayNameOverridden <- None

  val mutable _favoriteTime : Int64.t option = None
  method get_favoriteTime = _favoriteTime
  method grab_favoriteTime = match _favoriteTime with None->raise (Field_empty "contact.favoriteTime") | Some _x1237 -> _x1237
  method set_favoriteTime _x1237 = _favoriteTime <- Some _x1237
  method unset_favoriteTime = _favoriteTime <- None
  method reset_favoriteTime = _favoriteTime <- None

  val mutable _capableVoiceCall : bool option = None
  method get_capableVoiceCall = _capableVoiceCall
  method grab_capableVoiceCall = match _capableVoiceCall with None->raise (Field_empty "contact.capableVoiceCall") | Some _x1238 -> _x1238
  method set_capableVoiceCall _x1238 = _capableVoiceCall <- Some _x1238
  method unset_capableVoiceCall = _capableVoiceCall <- None
  method reset_capableVoiceCall = _capableVoiceCall <- None

  val mutable _capableVideoCall : bool option = None
  method get_capableVideoCall = _capableVideoCall
  method grab_capableVideoCall = match _capableVideoCall with None->raise (Field_empty "contact.capableVideoCall") | Some _x1239 -> _x1239
  method set_capableVideoCall _x1239 = _capableVideoCall <- Some _x1239
  method unset_capableVideoCall = _capableVideoCall <- None
  method reset_capableVideoCall = _capableVideoCall <- None

  val mutable _capableMyhome : bool option = None
  method get_capableMyhome = _capableMyhome
  method grab_capableMyhome = match _capableMyhome with None->raise (Field_empty "contact.capableMyhome") | Some _x1240 -> _x1240
  method set_capableMyhome _x1240 = _capableMyhome <- Some _x1240
  method unset_capableMyhome = _capableMyhome <- None
  method reset_capableMyhome = _capableMyhome <- None

  val mutable _capableBuddy : bool option = None
  method get_capableBuddy = _capableBuddy
  method grab_capableBuddy = match _capableBuddy with None->raise (Field_empty "contact.capableBuddy") | Some _x1241 -> _x1241
  method set_capableBuddy _x1241 = _capableBuddy <- Some _x1241
  method unset_capableBuddy = _capableBuddy <- None
  method reset_capableBuddy = _capableBuddy <- None

  val mutable _attributes : Int32.t option = None
  method get_attributes = _attributes
  method grab_attributes = match _attributes with None->raise (Field_empty "contact.attributes") | Some _x1242 -> _x1242
  method set_attributes _x1242 = _attributes <- Some _x1242
  method unset_attributes = _attributes <- None
  method reset_attributes = _attributes <- None

  val mutable _settings : Int64.t option = None
  method get_settings = _settings
  method grab_settings = match _settings with None->raise (Field_empty "contact.settings") | Some _x1243 -> _x1243
  method set_settings _x1243 = _settings <- Some _x1243
  method unset_settings = _settings <- None
  method reset_settings = _settings <- None

  val mutable _picturePath : string option = None
  method get_picturePath = _picturePath
  method grab_picturePath = match _picturePath with None->raise (Field_empty "contact.picturePath") | Some _x1244 -> _x1244
  method set_picturePath _x1244 = _picturePath <- Some _x1244
  method unset_picturePath = _picturePath <- None
  method reset_picturePath = _picturePath <- None

  val mutable _recommendParams : string option = None
  method get_recommendParams = _recommendParams
  method grab_recommendParams = match _recommendParams with None->raise (Field_empty "contact.recommendParams") | Some _x1245 -> _x1245
  method set_recommendParams _x1245 = _recommendParams <- Some _x1245
  method unset_recommendParams = _recommendParams <- None
  method reset_recommendParams = _recommendParams <- None

  val mutable _friendRequestStatus : FriendRequestStatus.t option = None
  method get_friendRequestStatus = _friendRequestStatus
  method grab_friendRequestStatus = match _friendRequestStatus with None->raise (Field_empty "contact.friendRequestStatus") | Some _x1246 -> _x1246
  method set_friendRequestStatus _x1246 = _friendRequestStatus <- Some _x1246
  method unset_friendRequestStatus = _friendRequestStatus <- None
  method reset_friendRequestStatus = _friendRequestStatus <- None

  val mutable _musicProfile : string option = None
  method get_musicProfile = _musicProfile
  method grab_musicProfile = match _musicProfile with None->raise (Field_empty "contact.musicProfile") | Some _x1247 -> _x1247
  method set_musicProfile _x1247 = _musicProfile <- Some _x1247
  method unset_musicProfile = _musicProfile <- None
  method reset_musicProfile = _musicProfile <- None

  val mutable _videoProfile : string option = None
  method get_videoProfile = _videoProfile
  method grab_videoProfile = match _videoProfile with None->raise (Field_empty "contact.videoProfile") | Some _x1248 -> _x1248
  method set_videoProfile _x1248 = _videoProfile <- Some _x1248
  method unset_videoProfile = _videoProfile <- None
  method reset_videoProfile = _videoProfile <- None

  val mutable _statusMessageContentMetadata : (string,string) Hashtbl.t option = None
  method get_statusMessageContentMetadata = _statusMessageContentMetadata
  method grab_statusMessageContentMetadata = match _statusMessageContentMetadata with None->raise (Field_empty "contact.statusMessageContentMetadata") | Some _x1249 -> _x1249
  method set_statusMessageContentMetadata _x1249 = _statusMessageContentMetadata <- Some _x1249
  method unset_statusMessageContentMetadata = _statusMessageContentMetadata <- None
  method reset_statusMessageContentMetadata = _statusMessageContentMetadata <- None

  method copy =
      let _new = Oo.copy self in
      if _statusMessageContentMetadata <> None then
        _new#set_statusMessageContentMetadata (Hashtbl.copy self#grab_statusMessageContentMetadata);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Contact";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,10);
      oprot#writeI32(ContactType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_I32,11);
      oprot#writeI32(ContactStatus.to_i _v);
      oprot#writeFieldEnd
    );
    (match _relation with None -> () | Some _v -> 
      oprot#writeFieldBegin("relation",Protocol.T_I32,21);
      oprot#writeI32(ContactRelation.to_i _v);
      oprot#writeFieldEnd
    );
    (match _displayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayName",Protocol.T_STRING,22);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _phoneticName with None -> () | Some _v -> 
      oprot#writeFieldBegin("phoneticName",Protocol.T_STRING,23);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _pictureStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("pictureStatus",Protocol.T_STRING,24);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _thumbnailUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("thumbnailUrl",Protocol.T_STRING,25);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _statusMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("statusMessage",Protocol.T_STRING,26);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayNameOverridden with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayNameOverridden",Protocol.T_STRING,27);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _favoriteTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("favoriteTime",Protocol.T_I64,28);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _capableVoiceCall with None -> () | Some _v -> 
      oprot#writeFieldBegin("capableVoiceCall",Protocol.T_BOOL,31);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _capableVideoCall with None -> () | Some _v -> 
      oprot#writeFieldBegin("capableVideoCall",Protocol.T_BOOL,32);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _capableMyhome with None -> () | Some _v -> 
      oprot#writeFieldBegin("capableMyhome",Protocol.T_BOOL,33);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _capableBuddy with None -> () | Some _v -> 
      oprot#writeFieldBegin("capableBuddy",Protocol.T_BOOL,34);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _attributes with None -> () | Some _v -> 
      oprot#writeFieldBegin("attributes",Protocol.T_I32,35);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _settings with None -> () | Some _v -> 
      oprot#writeFieldBegin("settings",Protocol.T_I64,36);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _picturePath with None -> () | Some _v -> 
      oprot#writeFieldBegin("picturePath",Protocol.T_STRING,37);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _recommendParams with None -> () | Some _v -> 
      oprot#writeFieldBegin("recommendParams",Protocol.T_STRING,38);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _friendRequestStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("friendRequestStatus",Protocol.T_I32,39);
      oprot#writeI32(FriendRequestStatus.to_i _v);
      oprot#writeFieldEnd
    );
    (match _musicProfile with None -> () | Some _v -> 
      oprot#writeFieldBegin("musicProfile",Protocol.T_STRING,40);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _videoProfile with None -> () | Some _v -> 
      oprot#writeFieldBegin("videoProfile",Protocol.T_STRING,42);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _statusMessageContentMetadata with None -> () | Some _v -> 
      oprot#writeFieldBegin("statusMessageContentMetadata",Protocol.T_MAP,43);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter1252 -> fun _viter1253 -> 
        oprot#writeString(_kiter1252);
        oprot#writeString(_viter1253);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_contact (iprot : Protocol.t) =
  let _str1254 = new contact in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1255,_id1256) = iprot#readFieldBegin in
        if _t1255 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1256 with 
          | 1 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_mid iprot#readString
            else
              iprot#skip _t1255)
          | 2 -> (if _t1255 = Protocol.T_I64 then
              _str1254#set_createdTime iprot#readI64
            else
              iprot#skip _t1255)
          | 10 -> (if _t1255 = Protocol.T_I32 then
              _str1254#set_type (ContactType.of_i iprot#readI32)
            else
              iprot#skip _t1255)
          | 11 -> (if _t1255 = Protocol.T_I32 then
              _str1254#set_status (ContactStatus.of_i iprot#readI32)
            else
              iprot#skip _t1255)
          | 21 -> (if _t1255 = Protocol.T_I32 then
              _str1254#set_relation (ContactRelation.of_i iprot#readI32)
            else
              iprot#skip _t1255)
          | 22 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_displayName iprot#readString
            else
              iprot#skip _t1255)
          | 23 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_phoneticName iprot#readString
            else
              iprot#skip _t1255)
          | 24 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_pictureStatus iprot#readString
            else
              iprot#skip _t1255)
          | 25 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_thumbnailUrl iprot#readString
            else
              iprot#skip _t1255)
          | 26 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_statusMessage iprot#readString
            else
              iprot#skip _t1255)
          | 27 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_displayNameOverridden iprot#readString
            else
              iprot#skip _t1255)
          | 28 -> (if _t1255 = Protocol.T_I64 then
              _str1254#set_favoriteTime iprot#readI64
            else
              iprot#skip _t1255)
          | 31 -> (if _t1255 = Protocol.T_BOOL then
              _str1254#set_capableVoiceCall iprot#readBool
            else
              iprot#skip _t1255)
          | 32 -> (if _t1255 = Protocol.T_BOOL then
              _str1254#set_capableVideoCall iprot#readBool
            else
              iprot#skip _t1255)
          | 33 -> (if _t1255 = Protocol.T_BOOL then
              _str1254#set_capableMyhome iprot#readBool
            else
              iprot#skip _t1255)
          | 34 -> (if _t1255 = Protocol.T_BOOL then
              _str1254#set_capableBuddy iprot#readBool
            else
              iprot#skip _t1255)
          | 35 -> (if _t1255 = Protocol.T_I32 then
              _str1254#set_attributes iprot#readI32
            else
              iprot#skip _t1255)
          | 36 -> (if _t1255 = Protocol.T_I64 then
              _str1254#set_settings iprot#readI64
            else
              iprot#skip _t1255)
          | 37 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_picturePath iprot#readString
            else
              iprot#skip _t1255)
          | 38 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_recommendParams iprot#readString
            else
              iprot#skip _t1255)
          | 39 -> (if _t1255 = Protocol.T_I32 then
              _str1254#set_friendRequestStatus (FriendRequestStatus.of_i iprot#readI32)
            else
              iprot#skip _t1255)
          | 40 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_musicProfile iprot#readString
            else
              iprot#skip _t1255)
          | 42 -> (if _t1255 = Protocol.T_STRING then
              _str1254#set_videoProfile iprot#readString
            else
              iprot#skip _t1255)
          | 43 -> (if _t1255 = Protocol.T_MAP then
              _str1254#set_statusMessageContentMetadata 
                (let (_ktype1258,_vtype1259,_size1257) = iprot#readMapBegin in
                let _con1261 = Hashtbl.create _size1257 in
                  for i = 1 to _size1257 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con1261 _k _v
                  done; iprot#readMapEnd; _con1261)
            else
              iprot#skip _t1255)
          | _ -> iprot#skip _t1255);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1254

class buddyList =
object (self)
  val mutable _classification : string option = None
  method get_classification = _classification
  method grab_classification = match _classification with None->raise (Field_empty "buddyList.classification") | Some _x1263 -> _x1263
  method set_classification _x1263 = _classification <- Some _x1263
  method unset_classification = _classification <- None
  method reset_classification = _classification <- None

  val mutable _displayName : string option = None
  method get_displayName = _displayName
  method grab_displayName = match _displayName with None->raise (Field_empty "buddyList.displayName") | Some _x1264 -> _x1264
  method set_displayName _x1264 = _displayName <- Some _x1264
  method unset_displayName = _displayName <- None
  method reset_displayName = _displayName <- None

  val mutable _totalBuddyCount : Int32.t option = None
  method get_totalBuddyCount = _totalBuddyCount
  method grab_totalBuddyCount = match _totalBuddyCount with None->raise (Field_empty "buddyList.totalBuddyCount") | Some _x1265 -> _x1265
  method set_totalBuddyCount _x1265 = _totalBuddyCount <- Some _x1265
  method unset_totalBuddyCount = _totalBuddyCount <- None
  method reset_totalBuddyCount = _totalBuddyCount <- None

  val mutable _popularContacts : contact list option = None
  method get_popularContacts = _popularContacts
  method grab_popularContacts = match _popularContacts with None->raise (Field_empty "buddyList.popularContacts") | Some _x1266 -> _x1266
  method set_popularContacts _x1266 = _popularContacts <- Some _x1266
  method unset_popularContacts = _popularContacts <- None
  method reset_popularContacts = _popularContacts <- None

  method copy =
      let _new = Oo.copy self in
      if _popularContacts <> None then
        _new#set_popularContacts (List.map (fun x -> x#copy) self#grab_popularContacts);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "BuddyList";
    (match _classification with None -> () | Some _v -> 
      oprot#writeFieldBegin("classification",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _totalBuddyCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("totalBuddyCount",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _popularContacts with None -> () | Some _v -> 
      oprot#writeFieldBegin("popularContacts",Protocol.T_LIST,4);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1269 ->         _iter1269#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_buddyList (iprot : Protocol.t) =
  let _str1270 = new buddyList in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1271,_id1272) = iprot#readFieldBegin in
        if _t1271 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1272 with 
          | 1 -> (if _t1271 = Protocol.T_STRING then
              _str1270#set_classification iprot#readString
            else
              iprot#skip _t1271)
          | 2 -> (if _t1271 = Protocol.T_STRING then
              _str1270#set_displayName iprot#readString
            else
              iprot#skip _t1271)
          | 3 -> (if _t1271 = Protocol.T_I32 then
              _str1270#set_totalBuddyCount iprot#readI32
            else
              iprot#skip _t1271)
          | 4 -> (if _t1271 = Protocol.T_LIST then
              _str1270#set_popularContacts 
                (let (_etype1276,_size1273) = iprot#readListBegin in
                  let _con1277 = (Array.to_list (Array.init _size1273 (fun _ -> (read_contact iprot)))) in
                    iprot#readListEnd; _con1277)
            else
              iprot#skip _t1271)
          | _ -> iprot#skip _t1271);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1270

class registerWithPhoneNumberResult =
object (self)
  val mutable _authToken : string option = None
  method get_authToken = _authToken
  method grab_authToken = match _authToken with None->raise (Field_empty "registerWithPhoneNumberResult.authToken") | Some _x1279 -> _x1279
  method set_authToken _x1279 = _authToken <- Some _x1279
  method unset_authToken = _authToken <- None
  method reset_authToken = _authToken <- None

  val mutable _recommendEmailRegistration : bool option = None
  method get_recommendEmailRegistration = _recommendEmailRegistration
  method grab_recommendEmailRegistration = match _recommendEmailRegistration with None->raise (Field_empty "registerWithPhoneNumberResult.recommendEmailRegistration") | Some _x1280 -> _x1280
  method set_recommendEmailRegistration _x1280 = _recommendEmailRegistration <- Some _x1280
  method unset_recommendEmailRegistration = _recommendEmailRegistration <- None
  method reset_recommendEmailRegistration = _recommendEmailRegistration <- None

  val mutable _certificate : string option = None
  method get_certificate = _certificate
  method grab_certificate = match _certificate with None->raise (Field_empty "registerWithPhoneNumberResult.certificate") | Some _x1281 -> _x1281
  method set_certificate _x1281 = _certificate <- Some _x1281
  method unset_certificate = _certificate <- None
  method reset_certificate = _certificate <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "RegisterWithPhoneNumberResult";
    (match _authToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("authToken",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _recommendEmailRegistration with None -> () | Some _v -> 
      oprot#writeFieldBegin("recommendEmailRegistration",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _certificate with None -> () | Some _v -> 
      oprot#writeFieldBegin("certificate",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_registerWithPhoneNumberResult (iprot : Protocol.t) =
  let _str1284 = new registerWithPhoneNumberResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1285,_id1286) = iprot#readFieldBegin in
        if _t1285 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1286 with 
          | 1 -> (if _t1285 = Protocol.T_STRING then
              _str1284#set_authToken iprot#readString
            else
              iprot#skip _t1285)
          | 2 -> (if _t1285 = Protocol.T_BOOL then
              _str1284#set_recommendEmailRegistration iprot#readBool
            else
              iprot#skip _t1285)
          | 3 -> (if _t1285 = Protocol.T_STRING then
              _str1284#set_certificate iprot#readString
            else
              iprot#skip _t1285)
          | _ -> iprot#skip _t1285);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1284

class buddyMessageRequest =
object (self)
  val mutable _contentType : ContentType.t option = None
  method get_contentType = _contentType
  method grab_contentType = match _contentType with None->raise (Field_empty "buddyMessageRequest.contentType") | Some _x1288 -> _x1288
  method set_contentType _x1288 = _contentType <- Some _x1288
  method unset_contentType = _contentType <- None
  method reset_contentType = _contentType <- None

  val mutable _text : string option = None
  method get_text = _text
  method grab_text = match _text with None->raise (Field_empty "buddyMessageRequest.text") | Some _x1289 -> _x1289
  method set_text _x1289 = _text <- Some _x1289
  method unset_text = _text <- None
  method reset_text = _text <- None

  val mutable _location : location option = None
  method get_location = _location
  method grab_location = match _location with None->raise (Field_empty "buddyMessageRequest.location") | Some _x1290 -> _x1290
  method set_location _x1290 = _location <- Some _x1290
  method unset_location = _location <- None
  method reset_location = _location <- None

  val mutable _content : string option = None
  method get_content = _content
  method grab_content = match _content with None->raise (Field_empty "buddyMessageRequest.content") | Some _x1291 -> _x1291
  method set_content _x1291 = _content <- Some _x1291
  method unset_content = _content <- None
  method reset_content = _content <- None

  val mutable _contentMetadata : (string,string) Hashtbl.t option = None
  method get_contentMetadata = _contentMetadata
  method grab_contentMetadata = match _contentMetadata with None->raise (Field_empty "buddyMessageRequest.contentMetadata") | Some _x1292 -> _x1292
  method set_contentMetadata _x1292 = _contentMetadata <- Some _x1292
  method unset_contentMetadata = _contentMetadata <- None
  method reset_contentMetadata = _contentMetadata <- None

  method copy =
      let _new = Oo.copy self in
      if _location <> None then
        _new#set_location self#grab_location#copy;
      if _contentMetadata <> None then
        _new#set_contentMetadata (Hashtbl.copy self#grab_contentMetadata);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "BuddyMessageRequest";
    (match _contentType with None -> () | Some _v -> 
      oprot#writeFieldBegin("contentType",Protocol.T_I32,1);
      oprot#writeI32(ContentType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _text with None -> () | Some _v -> 
      oprot#writeFieldBegin("text",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _location with None -> () | Some _v -> 
      oprot#writeFieldBegin("location",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _content with None -> () | Some _v -> 
      oprot#writeFieldBegin("content",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _contentMetadata with None -> () | Some _v -> 
      oprot#writeFieldBegin("contentMetadata",Protocol.T_MAP,5);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter1295 -> fun _viter1296 -> 
        oprot#writeString(_kiter1295);
        oprot#writeString(_viter1296);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_buddyMessageRequest (iprot : Protocol.t) =
  let _str1297 = new buddyMessageRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1298,_id1299) = iprot#readFieldBegin in
        if _t1298 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1299 with 
          | 1 -> (if _t1298 = Protocol.T_I32 then
              _str1297#set_contentType (ContentType.of_i iprot#readI32)
            else
              iprot#skip _t1298)
          | 2 -> (if _t1298 = Protocol.T_STRING then
              _str1297#set_text iprot#readString
            else
              iprot#skip _t1298)
          | 3 -> (if _t1298 = Protocol.T_STRUCT then
              _str1297#set_location (read_location iprot)
            else
              iprot#skip _t1298)
          | 4 -> (if _t1298 = Protocol.T_STRING then
              _str1297#set_content iprot#readString
            else
              iprot#skip _t1298)
          | 5 -> (if _t1298 = Protocol.T_MAP then
              _str1297#set_contentMetadata 
                (let (_ktype1301,_vtype1302,_size1300) = iprot#readMapBegin in
                let _con1304 = Hashtbl.create _size1300 in
                  for i = 1 to _size1300 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con1304 _k _v
                  done; iprot#readMapEnd; _con1304)
            else
              iprot#skip _t1298)
          | _ -> iprot#skip _t1298);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1297

class buddyOnAirUrls =
object (self)
  val mutable _hls : (string,string) Hashtbl.t option = None
  method get_hls = _hls
  method grab_hls = match _hls with None->raise (Field_empty "buddyOnAirUrls.hls") | Some _x1306 -> _x1306
  method set_hls _x1306 = _hls <- Some _x1306
  method unset_hls = _hls <- None
  method reset_hls = _hls <- None

  val mutable _smoothStreaming : (string,string) Hashtbl.t option = None
  method get_smoothStreaming = _smoothStreaming
  method grab_smoothStreaming = match _smoothStreaming with None->raise (Field_empty "buddyOnAirUrls.smoothStreaming") | Some _x1307 -> _x1307
  method set_smoothStreaming _x1307 = _smoothStreaming <- Some _x1307
  method unset_smoothStreaming = _smoothStreaming <- None
  method reset_smoothStreaming = _smoothStreaming <- None

  method copy =
      let _new = Oo.copy self in
      if _hls <> None then
        _new#set_hls (Hashtbl.copy self#grab_hls);
      if _smoothStreaming <> None then
        _new#set_smoothStreaming (Hashtbl.copy self#grab_smoothStreaming);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "BuddyOnAirUrls";
    (match _hls with None -> () | Some _v -> 
      oprot#writeFieldBegin("hls",Protocol.T_MAP,1);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter1310 -> fun _viter1311 -> 
        oprot#writeString(_kiter1310);
        oprot#writeString(_viter1311);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _smoothStreaming with None -> () | Some _v -> 
      oprot#writeFieldBegin("smoothStreaming",Protocol.T_MAP,2);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter1312 -> fun _viter1313 -> 
        oprot#writeString(_kiter1312);
        oprot#writeString(_viter1313);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_buddyOnAirUrls (iprot : Protocol.t) =
  let _str1314 = new buddyOnAirUrls in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1315,_id1316) = iprot#readFieldBegin in
        if _t1315 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1316 with 
          | 1 -> (if _t1315 = Protocol.T_MAP then
              _str1314#set_hls 
                (let (_ktype1318,_vtype1319,_size1317) = iprot#readMapBegin in
                let _con1321 = Hashtbl.create _size1317 in
                  for i = 1 to _size1317 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con1321 _k _v
                  done; iprot#readMapEnd; _con1321)
            else
              iprot#skip _t1315)
          | 2 -> (if _t1315 = Protocol.T_MAP then
              _str1314#set_smoothStreaming 
                (let (_ktype1323,_vtype1324,_size1322) = iprot#readMapBegin in
                let _con1326 = Hashtbl.create _size1322 in
                  for i = 1 to _size1322 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con1326 _k _v
                  done; iprot#readMapEnd; _con1326)
            else
              iprot#skip _t1315)
          | _ -> iprot#skip _t1315);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1314

class buddyOnAir =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "buddyOnAir.mid") | Some _x1328 -> _x1328
  method set_mid _x1328 = _mid <- Some _x1328
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _freshnessLifetime : Int64.t option = None
  method get_freshnessLifetime = _freshnessLifetime
  method grab_freshnessLifetime = match _freshnessLifetime with None->raise (Field_empty "buddyOnAir.freshnessLifetime") | Some _x1329 -> _x1329
  method set_freshnessLifetime _x1329 = _freshnessLifetime <- Some _x1329
  method unset_freshnessLifetime = _freshnessLifetime <- None
  method reset_freshnessLifetime = _freshnessLifetime <- None

  val mutable _onAirId : string option = None
  method get_onAirId = _onAirId
  method grab_onAirId = match _onAirId with None->raise (Field_empty "buddyOnAir.onAirId") | Some _x1330 -> _x1330
  method set_onAirId _x1330 = _onAirId <- Some _x1330
  method unset_onAirId = _onAirId <- None
  method reset_onAirId = _onAirId <- None

  val mutable _onAir : bool option = None
  method get_onAir = _onAir
  method grab_onAir = match _onAir with None->raise (Field_empty "buddyOnAir.onAir") | Some _x1331 -> _x1331
  method set_onAir _x1331 = _onAir <- Some _x1331
  method unset_onAir = _onAir <- None
  method reset_onAir = _onAir <- None

  val mutable _text : string option = None
  method get_text = _text
  method grab_text = match _text with None->raise (Field_empty "buddyOnAir.text") | Some _x1332 -> _x1332
  method set_text _x1332 = _text <- Some _x1332
  method unset_text = _text <- None
  method reset_text = _text <- None

  val mutable _viewerCount : Int64.t option = None
  method get_viewerCount = _viewerCount
  method grab_viewerCount = match _viewerCount with None->raise (Field_empty "buddyOnAir.viewerCount") | Some _x1333 -> _x1333
  method set_viewerCount _x1333 = _viewerCount <- Some _x1333
  method unset_viewerCount = _viewerCount <- None
  method reset_viewerCount = _viewerCount <- None

  val mutable _targetCount : Int64.t option = None
  method get_targetCount = _targetCount
  method grab_targetCount = match _targetCount with None->raise (Field_empty "buddyOnAir.targetCount") | Some _x1334 -> _x1334
  method set_targetCount _x1334 = _targetCount <- Some _x1334
  method unset_targetCount = _targetCount <- None
  method reset_targetCount = _targetCount <- None

  val mutable _onAirType : BuddyOnAirType.t option = None
  method get_onAirType = _onAirType
  method grab_onAirType = match _onAirType with None->raise (Field_empty "buddyOnAir.onAirType") | Some _x1335 -> _x1335
  method set_onAirType _x1335 = _onAirType <- Some _x1335
  method unset_onAirType = _onAirType <- None
  method reset_onAirType = _onAirType <- None

  val mutable _onAirUrls : buddyOnAirUrls option = None
  method get_onAirUrls = _onAirUrls
  method grab_onAirUrls = match _onAirUrls with None->raise (Field_empty "buddyOnAir.onAirUrls") | Some _x1336 -> _x1336
  method set_onAirUrls _x1336 = _onAirUrls <- Some _x1336
  method unset_onAirUrls = _onAirUrls <- None
  method reset_onAirUrls = _onAirUrls <- None

  method copy =
      let _new = Oo.copy self in
      if _onAirUrls <> None then
        _new#set_onAirUrls self#grab_onAirUrls#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "BuddyOnAir";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _freshnessLifetime with None -> () | Some _v -> 
      oprot#writeFieldBegin("freshnessLifetime",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _onAirId with None -> () | Some _v -> 
      oprot#writeFieldBegin("onAirId",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _onAir with None -> () | Some _v -> 
      oprot#writeFieldBegin("onAir",Protocol.T_BOOL,5);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _text with None -> () | Some _v -> 
      oprot#writeFieldBegin("text",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _viewerCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("viewerCount",Protocol.T_I64,12);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _targetCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("targetCount",Protocol.T_I64,13);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _onAirType with None -> () | Some _v -> 
      oprot#writeFieldBegin("onAirType",Protocol.T_I32,31);
      oprot#writeI32(BuddyOnAirType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _onAirUrls with None -> () | Some _v -> 
      oprot#writeFieldBegin("onAirUrls",Protocol.T_STRUCT,32);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_buddyOnAir (iprot : Protocol.t) =
  let _str1339 = new buddyOnAir in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1340,_id1341) = iprot#readFieldBegin in
        if _t1340 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1341 with 
          | 1 -> (if _t1340 = Protocol.T_STRING then
              _str1339#set_mid iprot#readString
            else
              iprot#skip _t1340)
          | 3 -> (if _t1340 = Protocol.T_I64 then
              _str1339#set_freshnessLifetime iprot#readI64
            else
              iprot#skip _t1340)
          | 4 -> (if _t1340 = Protocol.T_STRING then
              _str1339#set_onAirId iprot#readString
            else
              iprot#skip _t1340)
          | 5 -> (if _t1340 = Protocol.T_BOOL then
              _str1339#set_onAir iprot#readBool
            else
              iprot#skip _t1340)
          | 11 -> (if _t1340 = Protocol.T_STRING then
              _str1339#set_text iprot#readString
            else
              iprot#skip _t1340)
          | 12 -> (if _t1340 = Protocol.T_I64 then
              _str1339#set_viewerCount iprot#readI64
            else
              iprot#skip _t1340)
          | 13 -> (if _t1340 = Protocol.T_I64 then
              _str1339#set_targetCount iprot#readI64
            else
              iprot#skip _t1340)
          | 31 -> (if _t1340 = Protocol.T_I32 then
              _str1339#set_onAirType (BuddyOnAirType.of_i iprot#readI32)
            else
              iprot#skip _t1340)
          | 32 -> (if _t1340 = Protocol.T_STRUCT then
              _str1339#set_onAirUrls (read_buddyOnAirUrls iprot)
            else
              iprot#skip _t1340)
          | _ -> iprot#skip _t1340);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1339

class buddyProfile =
object (self)
  val mutable _buddyId : string option = None
  method get_buddyId = _buddyId
  method grab_buddyId = match _buddyId with None->raise (Field_empty "buddyProfile.buddyId") | Some _x1343 -> _x1343
  method set_buddyId _x1343 = _buddyId <- Some _x1343
  method unset_buddyId = _buddyId <- None
  method reset_buddyId = _buddyId <- None

  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "buddyProfile.mid") | Some _x1344 -> _x1344
  method set_mid _x1344 = _mid <- Some _x1344
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _searchId : string option = None
  method get_searchId = _searchId
  method grab_searchId = match _searchId with None->raise (Field_empty "buddyProfile.searchId") | Some _x1345 -> _x1345
  method set_searchId _x1345 = _searchId <- Some _x1345
  method unset_searchId = _searchId <- None
  method reset_searchId = _searchId <- None

  val mutable _displayName : string option = None
  method get_displayName = _displayName
  method grab_displayName = match _displayName with None->raise (Field_empty "buddyProfile.displayName") | Some _x1346 -> _x1346
  method set_displayName _x1346 = _displayName <- Some _x1346
  method unset_displayName = _displayName <- None
  method reset_displayName = _displayName <- None

  val mutable _statusMessage : string option = None
  method get_statusMessage = _statusMessage
  method grab_statusMessage = match _statusMessage with None->raise (Field_empty "buddyProfile.statusMessage") | Some _x1347 -> _x1347
  method set_statusMessage _x1347 = _statusMessage <- Some _x1347
  method unset_statusMessage = _statusMessage <- None
  method reset_statusMessage = _statusMessage <- None

  val mutable _contactCount : Int64.t option = None
  method get_contactCount = _contactCount
  method grab_contactCount = match _contactCount with None->raise (Field_empty "buddyProfile.contactCount") | Some _x1348 -> _x1348
  method set_contactCount _x1348 = _contactCount <- Some _x1348
  method unset_contactCount = _contactCount <- None
  method reset_contactCount = _contactCount <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "BuddyProfile";
    (match _buddyId with None -> () | Some _v -> 
      oprot#writeFieldBegin("buddyId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _searchId with None -> () | Some _v -> 
      oprot#writeFieldBegin("searchId",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayName",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _statusMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("statusMessage",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _contactCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("contactCount",Protocol.T_I64,11);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_buddyProfile (iprot : Protocol.t) =
  let _str1351 = new buddyProfile in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1352,_id1353) = iprot#readFieldBegin in
        if _t1352 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1353 with 
          | 1 -> (if _t1352 = Protocol.T_STRING then
              _str1351#set_buddyId iprot#readString
            else
              iprot#skip _t1352)
          | 2 -> (if _t1352 = Protocol.T_STRING then
              _str1351#set_mid iprot#readString
            else
              iprot#skip _t1352)
          | 3 -> (if _t1352 = Protocol.T_STRING then
              _str1351#set_searchId iprot#readString
            else
              iprot#skip _t1352)
          | 4 -> (if _t1352 = Protocol.T_STRING then
              _str1351#set_displayName iprot#readString
            else
              iprot#skip _t1352)
          | 5 -> (if _t1352 = Protocol.T_STRING then
              _str1351#set_statusMessage iprot#readString
            else
              iprot#skip _t1352)
          | 11 -> (if _t1352 = Protocol.T_I64 then
              _str1351#set_contactCount iprot#readI64
            else
              iprot#skip _t1352)
          | _ -> iprot#skip _t1352);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1351

class commitMessageResult =
object (self)
  val mutable _message : message option = None
  method get_message = _message
  method grab_message = match _message with None->raise (Field_empty "commitMessageResult.message") | Some _x1355 -> _x1355
  method set_message _x1355 = _message <- Some _x1355
  method unset_message = _message <- None
  method reset_message = _message <- None

  val mutable _code : CommitMessageResultCode.t option = None
  method get_code = _code
  method grab_code = match _code with None->raise (Field_empty "commitMessageResult.code") | Some _x1356 -> _x1356
  method set_code _x1356 = _code <- Some _x1356
  method unset_code = _code <- None
  method reset_code = _code <- None

  val mutable _reason : string option = None
  method get_reason = _reason
  method grab_reason = match _reason with None->raise (Field_empty "commitMessageResult.reason") | Some _x1357 -> _x1357
  method set_reason _x1357 = _reason <- Some _x1357
  method unset_reason = _reason <- None
  method reset_reason = _reason <- None

  val mutable _successCount : Int64.t option = None
  method get_successCount = _successCount
  method grab_successCount = match _successCount with None->raise (Field_empty "commitMessageResult.successCount") | Some _x1358 -> _x1358
  method set_successCount _x1358 = _successCount <- Some _x1358
  method unset_successCount = _successCount <- None
  method reset_successCount = _successCount <- None

  val mutable _failCount : Int64.t option = None
  method get_failCount = _failCount
  method grab_failCount = match _failCount with None->raise (Field_empty "commitMessageResult.failCount") | Some _x1359 -> _x1359
  method set_failCount _x1359 = _failCount <- Some _x1359
  method unset_failCount = _failCount <- None
  method reset_failCount = _failCount <- None

  val mutable _unregisterCount : Int64.t option = None
  method get_unregisterCount = _unregisterCount
  method grab_unregisterCount = match _unregisterCount with None->raise (Field_empty "commitMessageResult.unregisterCount") | Some _x1360 -> _x1360
  method set_unregisterCount _x1360 = _unregisterCount <- Some _x1360
  method unset_unregisterCount = _unregisterCount <- None
  method reset_unregisterCount = _unregisterCount <- None

  val mutable _blockCount : Int64.t option = None
  method get_blockCount = _blockCount
  method grab_blockCount = match _blockCount with None->raise (Field_empty "commitMessageResult.blockCount") | Some _x1361 -> _x1361
  method set_blockCount _x1361 = _blockCount <- Some _x1361
  method unset_blockCount = _blockCount <- None
  method reset_blockCount = _blockCount <- None

  method copy =
      let _new = Oo.copy self in
      if _message <> None then
        _new#set_message self#grab_message#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CommitMessageResult";
    (match _message with None -> () | Some _v -> 
      oprot#writeFieldBegin("message",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _code with None -> () | Some _v -> 
      oprot#writeFieldBegin("code",Protocol.T_I32,2);
      oprot#writeI32(CommitMessageResultCode.to_i _v);
      oprot#writeFieldEnd
    );
    (match _reason with None -> () | Some _v -> 
      oprot#writeFieldBegin("reason",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _successCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("successCount",Protocol.T_I64,4);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _failCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("failCount",Protocol.T_I64,5);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _unregisterCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("unregisterCount",Protocol.T_I64,6);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _blockCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("blockCount",Protocol.T_I64,7);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_commitMessageResult (iprot : Protocol.t) =
  let _str1364 = new commitMessageResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1365,_id1366) = iprot#readFieldBegin in
        if _t1365 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1366 with 
          | 1 -> (if _t1365 = Protocol.T_STRUCT then
              _str1364#set_message (read_message iprot)
            else
              iprot#skip _t1365)
          | 2 -> (if _t1365 = Protocol.T_I32 then
              _str1364#set_code (CommitMessageResultCode.of_i iprot#readI32)
            else
              iprot#skip _t1365)
          | 3 -> (if _t1365 = Protocol.T_STRING then
              _str1364#set_reason iprot#readString
            else
              iprot#skip _t1365)
          | 4 -> (if _t1365 = Protocol.T_I64 then
              _str1364#set_successCount iprot#readI64
            else
              iprot#skip _t1365)
          | 5 -> (if _t1365 = Protocol.T_I64 then
              _str1364#set_failCount iprot#readI64
            else
              iprot#skip _t1365)
          | 6 -> (if _t1365 = Protocol.T_I64 then
              _str1364#set_unregisterCount iprot#readI64
            else
              iprot#skip _t1365)
          | 7 -> (if _t1365 = Protocol.T_I64 then
              _str1364#set_blockCount iprot#readI64
            else
              iprot#skip _t1365)
          | _ -> iprot#skip _t1365);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1364

class syncParamMid =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "syncParamMid.mid") | Some _x1368 -> _x1368
  method set_mid _x1368 = _mid <- Some _x1368
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _diff : Diff.t option = None
  method get_diff = _diff
  method grab_diff = match _diff with None->raise (Field_empty "syncParamMid.diff") | Some _x1369 -> _x1369
  method set_diff _x1369 = _diff <- Some _x1369
  method unset_diff = _diff <- None
  method reset_diff = _diff <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "syncParamMid.revision") | Some _x1370 -> _x1370
  method set_revision _x1370 = _revision <- Some _x1370
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SyncParamMid";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _diff with None -> () | Some _v -> 
      oprot#writeFieldBegin("diff",Protocol.T_I32,2);
      oprot#writeI32(Diff.to_i _v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_syncParamMid (iprot : Protocol.t) =
  let _str1373 = new syncParamMid in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1374,_id1375) = iprot#readFieldBegin in
        if _t1374 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1375 with 
          | 1 -> (if _t1374 = Protocol.T_STRING then
              _str1373#set_mid iprot#readString
            else
              iprot#skip _t1374)
          | 2 -> (if _t1374 = Protocol.T_I32 then
              _str1373#set_diff (Diff.of_i iprot#readI32)
            else
              iprot#skip _t1374)
          | 3 -> (if _t1374 = Protocol.T_I64 then
              _str1373#set_revision iprot#readI64
            else
              iprot#skip _t1374)
          | _ -> iprot#skip _t1374);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1373

class sIMInfo =
object (self)
  val mutable _phoneNumber : string option = None
  method get_phoneNumber = _phoneNumber
  method grab_phoneNumber = match _phoneNumber with None->raise (Field_empty "sIMInfo.phoneNumber") | Some _x1377 -> _x1377
  method set_phoneNumber _x1377 = _phoneNumber <- Some _x1377
  method unset_phoneNumber = _phoneNumber <- None
  method reset_phoneNumber = _phoneNumber <- None

  val mutable _countryCode : string option = None
  method get_countryCode = _countryCode
  method grab_countryCode = match _countryCode with None->raise (Field_empty "sIMInfo.countryCode") | Some _x1378 -> _x1378
  method set_countryCode _x1378 = _countryCode <- Some _x1378
  method unset_countryCode = _countryCode <- None
  method reset_countryCode = _countryCode <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SIMInfo";
    (match _phoneNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("phoneNumber",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _countryCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("countryCode",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_sIMInfo (iprot : Protocol.t) =
  let _str1381 = new sIMInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1382,_id1383) = iprot#readFieldBegin in
        if _t1382 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1383 with 
          | 1 -> (if _t1382 = Protocol.T_STRING then
              _str1381#set_phoneNumber iprot#readString
            else
              iprot#skip _t1382)
          | 2 -> (if _t1382 = Protocol.T_STRING then
              _str1381#set_countryCode iprot#readString
            else
              iprot#skip _t1382)
          | _ -> iprot#skip _t1382);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1381

class syncParamContact =
object (self)
  val mutable _syncParamMid : syncParamMid option = None
  method get_syncParamMid = _syncParamMid
  method grab_syncParamMid = match _syncParamMid with None->raise (Field_empty "syncParamContact.syncParamMid") | Some _x1385 -> _x1385
  method set_syncParamMid _x1385 = _syncParamMid <- Some _x1385
  method unset_syncParamMid = _syncParamMid <- None
  method reset_syncParamMid = _syncParamMid <- None

  val mutable _contactStatus : ContactStatus.t option = None
  method get_contactStatus = _contactStatus
  method grab_contactStatus = match _contactStatus with None->raise (Field_empty "syncParamContact.contactStatus") | Some _x1386 -> _x1386
  method set_contactStatus _x1386 = _contactStatus <- Some _x1386
  method unset_contactStatus = _contactStatus <- None
  method reset_contactStatus = _contactStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _syncParamMid <> None then
        _new#set_syncParamMid self#grab_syncParamMid#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SyncParamContact";
    (match _syncParamMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncParamMid",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _contactStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("contactStatus",Protocol.T_I32,2);
      oprot#writeI32(ContactStatus.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_syncParamContact (iprot : Protocol.t) =
  let _str1389 = new syncParamContact in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1390,_id1391) = iprot#readFieldBegin in
        if _t1390 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1391 with 
          | 1 -> (if _t1390 = Protocol.T_STRUCT then
              _str1389#set_syncParamMid (read_syncParamMid iprot)
            else
              iprot#skip _t1390)
          | 2 -> (if _t1390 = Protocol.T_I32 then
              _str1389#set_contactStatus (ContactStatus.of_i iprot#readI32)
            else
              iprot#skip _t1390)
          | _ -> iprot#skip _t1390);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1389

class channelDomains =
object (self)
  val mutable _channelDomains : channelDomain list option = None
  method get_channelDomains = _channelDomains
  method grab_channelDomains = match _channelDomains with None->raise (Field_empty "channelDomains.channelDomains") | Some _x1393 -> _x1393
  method set_channelDomains _x1393 = _channelDomains <- Some _x1393
  method unset_channelDomains = _channelDomains <- None
  method reset_channelDomains = _channelDomains <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "channelDomains.revision") | Some _x1394 -> _x1394
  method set_revision _x1394 = _revision <- Some _x1394
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  method copy =
      let _new = Oo.copy self in
      if _channelDomains <> None then
        _new#set_channelDomains (List.map (fun x -> x#copy) self#grab_channelDomains);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelDomains";
    (match _channelDomains with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelDomains",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1397 ->         _iter1397#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_channelDomains (iprot : Protocol.t) =
  let _str1398 = new channelDomains in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1399,_id1400) = iprot#readFieldBegin in
        if _t1399 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1400 with 
          | 1 -> (if _t1399 = Protocol.T_LIST then
              _str1398#set_channelDomains 
                (let (_etype1404,_size1401) = iprot#readListBegin in
                  let _con1405 = (Array.to_list (Array.init _size1401 (fun _ -> (read_channelDomain iprot)))) in
                    iprot#readListEnd; _con1405)
            else
              iprot#skip _t1399)
          | 2 -> (if _t1399 = Protocol.T_I64 then
              _str1398#set_revision iprot#readI64
            else
              iprot#skip _t1399)
          | _ -> iprot#skip _t1399);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1398

class productCategory =
object (self)
  val mutable _productCategoryId : Int64.t option = None
  method get_productCategoryId = _productCategoryId
  method grab_productCategoryId = match _productCategoryId with None->raise (Field_empty "productCategory.productCategoryId") | Some _x1407 -> _x1407
  method set_productCategoryId _x1407 = _productCategoryId <- Some _x1407
  method unset_productCategoryId = _productCategoryId <- None
  method reset_productCategoryId = _productCategoryId <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "productCategory.title") | Some _x1408 -> _x1408
  method set_title _x1408 = _title <- Some _x1408
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _productCount : Int32.t option = None
  method get_productCount = _productCount
  method grab_productCount = match _productCount with None->raise (Field_empty "productCategory.productCount") | Some _x1409 -> _x1409
  method set_productCount _x1409 = _productCount <- Some _x1409
  method unset_productCount = _productCount <- None
  method reset_productCount = _productCount <- None

  val mutable _newFlag : bool option = None
  method get_newFlag = _newFlag
  method grab_newFlag = match _newFlag with None->raise (Field_empty "productCategory.newFlag") | Some _x1410 -> _x1410
  method set_newFlag _x1410 = _newFlag <- Some _x1410
  method unset_newFlag = _newFlag <- None
  method reset_newFlag = _newFlag <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ProductCategory";
    (match _productCategoryId with None -> () | Some _v -> 
      oprot#writeFieldBegin("productCategoryId",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _productCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("productCount",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _newFlag with None -> () | Some _v -> 
      oprot#writeFieldBegin("newFlag",Protocol.T_BOOL,4);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_productCategory (iprot : Protocol.t) =
  let _str1413 = new productCategory in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1414,_id1415) = iprot#readFieldBegin in
        if _t1414 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1415 with 
          | 1 -> (if _t1414 = Protocol.T_I64 then
              _str1413#set_productCategoryId iprot#readI64
            else
              iprot#skip _t1414)
          | 2 -> (if _t1414 = Protocol.T_STRING then
              _str1413#set_title iprot#readString
            else
              iprot#skip _t1414)
          | 3 -> (if _t1414 = Protocol.T_I32 then
              _str1413#set_productCount iprot#readI32
            else
              iprot#skip _t1414)
          | 4 -> (if _t1414 = Protocol.T_BOOL then
              _str1413#set_newFlag iprot#readBool
            else
              iprot#skip _t1414)
          | _ -> iprot#skip _t1414);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1413

class channelInfos =
object (self)
  val mutable _channelInfos : channelInfo list option = None
  method get_channelInfos = _channelInfos
  method grab_channelInfos = match _channelInfos with None->raise (Field_empty "channelInfos.channelInfos") | Some _x1417 -> _x1417
  method set_channelInfos _x1417 = _channelInfos <- Some _x1417
  method unset_channelInfos = _channelInfos <- None
  method reset_channelInfos = _channelInfos <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "channelInfos.revision") | Some _x1418 -> _x1418
  method set_revision _x1418 = _revision <- Some _x1418
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  method copy =
      let _new = Oo.copy self in
      if _channelInfos <> None then
        _new#set_channelInfos (List.map (fun x -> x#copy) self#grab_channelInfos);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelInfos";
    (match _channelInfos with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelInfos",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1421 ->         _iter1421#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_channelInfos (iprot : Protocol.t) =
  let _str1422 = new channelInfos in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1423,_id1424) = iprot#readFieldBegin in
        if _t1423 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1424 with 
          | 1 -> (if _t1423 = Protocol.T_LIST then
              _str1422#set_channelInfos 
                (let (_etype1428,_size1425) = iprot#readListBegin in
                  let _con1429 = (Array.to_list (Array.init _size1425 (fun _ -> (read_channelInfo iprot)))) in
                    iprot#readListEnd; _con1429)
            else
              iprot#skip _t1423)
          | 2 -> (if _t1423 = Protocol.T_I64 then
              _str1422#set_revision iprot#readI64
            else
              iprot#skip _t1423)
          | _ -> iprot#skip _t1423);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1422

class channelNotificationSetting =
object (self)
  val mutable _channelId : string option = None
  method get_channelId = _channelId
  method grab_channelId = match _channelId with None->raise (Field_empty "channelNotificationSetting.channelId") | Some _x1431 -> _x1431
  method set_channelId _x1431 = _channelId <- Some _x1431
  method unset_channelId = _channelId <- None
  method reset_channelId = _channelId <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "channelNotificationSetting.name") | Some _x1432 -> _x1432
  method set_name _x1432 = _name <- Some _x1432
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _notificationReceivable : bool option = None
  method get_notificationReceivable = _notificationReceivable
  method grab_notificationReceivable = match _notificationReceivable with None->raise (Field_empty "channelNotificationSetting.notificationReceivable") | Some _x1433 -> _x1433
  method set_notificationReceivable _x1433 = _notificationReceivable <- Some _x1433
  method unset_notificationReceivable = _notificationReceivable <- None
  method reset_notificationReceivable = _notificationReceivable <- None

  val mutable _messageReceivable : bool option = None
  method get_messageReceivable = _messageReceivable
  method grab_messageReceivable = match _messageReceivable with None->raise (Field_empty "channelNotificationSetting.messageReceivable") | Some _x1434 -> _x1434
  method set_messageReceivable _x1434 = _messageReceivable <- Some _x1434
  method unset_messageReceivable = _messageReceivable <- None
  method reset_messageReceivable = _messageReceivable <- None

  val mutable _showDefault : bool option = None
  method get_showDefault = _showDefault
  method grab_showDefault = match _showDefault with None->raise (Field_empty "channelNotificationSetting.showDefault") | Some _x1435 -> _x1435
  method set_showDefault _x1435 = _showDefault <- Some _x1435
  method unset_showDefault = _showDefault <- None
  method reset_showDefault = _showDefault <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelNotificationSetting";
    (match _channelId with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _notificationReceivable with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationReceivable",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _messageReceivable with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageReceivable",Protocol.T_BOOL,4);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _showDefault with None -> () | Some _v -> 
      oprot#writeFieldBegin("showDefault",Protocol.T_BOOL,5);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_channelNotificationSetting (iprot : Protocol.t) =
  let _str1438 = new channelNotificationSetting in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1439,_id1440) = iprot#readFieldBegin in
        if _t1439 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1440 with 
          | 1 -> (if _t1439 = Protocol.T_STRING then
              _str1438#set_channelId iprot#readString
            else
              iprot#skip _t1439)
          | 2 -> (if _t1439 = Protocol.T_STRING then
              _str1438#set_name iprot#readString
            else
              iprot#skip _t1439)
          | 3 -> (if _t1439 = Protocol.T_BOOL then
              _str1438#set_notificationReceivable iprot#readBool
            else
              iprot#skip _t1439)
          | 4 -> (if _t1439 = Protocol.T_BOOL then
              _str1438#set_messageReceivable iprot#readBool
            else
              iprot#skip _t1439)
          | 5 -> (if _t1439 = Protocol.T_BOOL then
              _str1438#set_showDefault iprot#readBool
            else
              iprot#skip _t1439)
          | _ -> iprot#skip _t1439);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1438

class channelSyncDatas =
object (self)
  val mutable _channelInfos : channelInfo list option = None
  method get_channelInfos = _channelInfos
  method grab_channelInfos = match _channelInfos with None->raise (Field_empty "channelSyncDatas.channelInfos") | Some _x1442 -> _x1442
  method set_channelInfos _x1442 = _channelInfos <- Some _x1442
  method unset_channelInfos = _channelInfos <- None
  method reset_channelInfos = _channelInfos <- None

  val mutable _channelDomains : channelDomain list option = None
  method get_channelDomains = _channelDomains
  method grab_channelDomains = match _channelDomains with None->raise (Field_empty "channelSyncDatas.channelDomains") | Some _x1443 -> _x1443
  method set_channelDomains _x1443 = _channelDomains <- Some _x1443
  method unset_channelDomains = _channelDomains <- None
  method reset_channelDomains = _channelDomains <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "channelSyncDatas.revision") | Some _x1444 -> _x1444
  method set_revision _x1444 = _revision <- Some _x1444
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _expires : Int64.t option = None
  method get_expires = _expires
  method grab_expires = match _expires with None->raise (Field_empty "channelSyncDatas.expires") | Some _x1445 -> _x1445
  method set_expires _x1445 = _expires <- Some _x1445
  method unset_expires = _expires <- None
  method reset_expires = _expires <- None

  method copy =
      let _new = Oo.copy self in
      if _channelInfos <> None then
        _new#set_channelInfos (List.map (fun x -> x#copy) self#grab_channelInfos);
      if _channelDomains <> None then
        _new#set_channelDomains (List.map (fun x -> x#copy) self#grab_channelDomains);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelSyncDatas";
    (match _channelInfos with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelInfos",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1448 ->         _iter1448#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _channelDomains with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelDomains",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1449 ->         _iter1449#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _expires with None -> () | Some _v -> 
      oprot#writeFieldBegin("expires",Protocol.T_I64,4);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_channelSyncDatas (iprot : Protocol.t) =
  let _str1450 = new channelSyncDatas in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1451,_id1452) = iprot#readFieldBegin in
        if _t1451 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1452 with 
          | 1 -> (if _t1451 = Protocol.T_LIST then
              _str1450#set_channelInfos 
                (let (_etype1456,_size1453) = iprot#readListBegin in
                  let _con1457 = (Array.to_list (Array.init _size1453 (fun _ -> (read_channelInfo iprot)))) in
                    iprot#readListEnd; _con1457)
            else
              iprot#skip _t1451)
          | 2 -> (if _t1451 = Protocol.T_LIST then
              _str1450#set_channelDomains 
                (let (_etype1461,_size1458) = iprot#readListBegin in
                  let _con1462 = (Array.to_list (Array.init _size1458 (fun _ -> (read_channelDomain iprot)))) in
                    iprot#readListEnd; _con1462)
            else
              iprot#skip _t1451)
          | 3 -> (if _t1451 = Protocol.T_I64 then
              _str1450#set_revision iprot#readI64
            else
              iprot#skip _t1451)
          | 4 -> (if _t1451 = Protocol.T_I64 then
              _str1450#set_expires iprot#readI64
            else
              iprot#skip _t1451)
          | _ -> iprot#skip _t1451);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1450

class notiCenterEventData =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "notiCenterEventData.id") | Some _x1464 -> _x1464
  method set_id _x1464 = _id <- Some _x1464
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _to : string option = None
  method get_to = _to
  method grab_to = match _to with None->raise (Field_empty "notiCenterEventData.to") | Some _x1465 -> _x1465
  method set_to _x1465 = _to <- Some _x1465
  method unset_to = _to <- None
  method reset_to = _to <- None

  val mutable _from_ : string option = None
  method get_from_ = _from_
  method grab_from_ = match _from_ with None->raise (Field_empty "notiCenterEventData.from_") | Some _x1466 -> _x1466
  method set_from_ _x1466 = _from_ <- Some _x1466
  method unset_from_ = _from_ <- None
  method reset_from_ = _from_ <- None

  val mutable _toChannel : string option = None
  method get_toChannel = _toChannel
  method grab_toChannel = match _toChannel with None->raise (Field_empty "notiCenterEventData.toChannel") | Some _x1467 -> _x1467
  method set_toChannel _x1467 = _toChannel <- Some _x1467
  method unset_toChannel = _toChannel <- None
  method reset_toChannel = _toChannel <- None

  val mutable _fromChannel : string option = None
  method get_fromChannel = _fromChannel
  method grab_fromChannel = match _fromChannel with None->raise (Field_empty "notiCenterEventData.fromChannel") | Some _x1468 -> _x1468
  method set_fromChannel _x1468 = _fromChannel <- Some _x1468
  method unset_fromChannel = _fromChannel <- None
  method reset_fromChannel = _fromChannel <- None

  val mutable _eventType : string option = None
  method get_eventType = _eventType
  method grab_eventType = match _eventType with None->raise (Field_empty "notiCenterEventData.eventType") | Some _x1469 -> _x1469
  method set_eventType _x1469 = _eventType <- Some _x1469
  method unset_eventType = _eventType <- None
  method reset_eventType = _eventType <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "notiCenterEventData.createdTime") | Some _x1470 -> _x1470
  method set_createdTime _x1470 = _createdTime <- Some _x1470
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _operationRevision : Int64.t option = None
  method get_operationRevision = _operationRevision
  method grab_operationRevision = match _operationRevision with None->raise (Field_empty "notiCenterEventData.operationRevision") | Some _x1471 -> _x1471
  method set_operationRevision _x1471 = _operationRevision <- Some _x1471
  method unset_operationRevision = _operationRevision <- None
  method reset_operationRevision = _operationRevision <- None

  val mutable _content : (string,string) Hashtbl.t option = None
  method get_content = _content
  method grab_content = match _content with None->raise (Field_empty "notiCenterEventData.content") | Some _x1472 -> _x1472
  method set_content _x1472 = _content <- Some _x1472
  method unset_content = _content <- None
  method reset_content = _content <- None

  val mutable _push : (string,string) Hashtbl.t option = None
  method get_push = _push
  method grab_push = match _push with None->raise (Field_empty "notiCenterEventData.push") | Some _x1473 -> _x1473
  method set_push _x1473 = _push <- Some _x1473
  method unset_push = _push <- None
  method reset_push = _push <- None

  method copy =
      let _new = Oo.copy self in
      if _content <> None then
        _new#set_content (Hashtbl.copy self#grab_content);
      if _push <> None then
        _new#set_push (Hashtbl.copy self#grab_push);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "NotiCenterEventData";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _to with None -> () | Some _v -> 
      oprot#writeFieldBegin("to",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _from_ with None -> () | Some _v -> 
      oprot#writeFieldBegin("from_",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _toChannel with None -> () | Some _v -> 
      oprot#writeFieldBegin("toChannel",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _fromChannel with None -> () | Some _v -> 
      oprot#writeFieldBegin("fromChannel",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _eventType with None -> () | Some _v -> 
      oprot#writeFieldBegin("eventType",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,7);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _operationRevision with None -> () | Some _v -> 
      oprot#writeFieldBegin("operationRevision",Protocol.T_I64,8);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _content with None -> () | Some _v -> 
      oprot#writeFieldBegin("content",Protocol.T_MAP,9);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter1476 -> fun _viter1477 -> 
        oprot#writeString(_kiter1476);
        oprot#writeString(_viter1477);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _push with None -> () | Some _v -> 
      oprot#writeFieldBegin("push",Protocol.T_MAP,10);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter1478 -> fun _viter1479 -> 
        oprot#writeString(_kiter1478);
        oprot#writeString(_viter1479);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_notiCenterEventData (iprot : Protocol.t) =
  let _str1480 = new notiCenterEventData in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1481,_id1482) = iprot#readFieldBegin in
        if _t1481 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1482 with 
          | 1 -> (if _t1481 = Protocol.T_STRING then
              _str1480#set_id iprot#readString
            else
              iprot#skip _t1481)
          | 2 -> (if _t1481 = Protocol.T_STRING then
              _str1480#set_to iprot#readString
            else
              iprot#skip _t1481)
          | 3 -> (if _t1481 = Protocol.T_STRING then
              _str1480#set_from_ iprot#readString
            else
              iprot#skip _t1481)
          | 4 -> (if _t1481 = Protocol.T_STRING then
              _str1480#set_toChannel iprot#readString
            else
              iprot#skip _t1481)
          | 5 -> (if _t1481 = Protocol.T_STRING then
              _str1480#set_fromChannel iprot#readString
            else
              iprot#skip _t1481)
          | 6 -> (if _t1481 = Protocol.T_STRING then
              _str1480#set_eventType iprot#readString
            else
              iprot#skip _t1481)
          | 7 -> (if _t1481 = Protocol.T_I64 then
              _str1480#set_createdTime iprot#readI64
            else
              iprot#skip _t1481)
          | 8 -> (if _t1481 = Protocol.T_I64 then
              _str1480#set_operationRevision iprot#readI64
            else
              iprot#skip _t1481)
          | 9 -> (if _t1481 = Protocol.T_MAP then
              _str1480#set_content 
                (let (_ktype1484,_vtype1485,_size1483) = iprot#readMapBegin in
                let _con1487 = Hashtbl.create _size1483 in
                  for i = 1 to _size1483 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con1487 _k _v
                  done; iprot#readMapEnd; _con1487)
            else
              iprot#skip _t1481)
          | 10 -> (if _t1481 = Protocol.T_MAP then
              _str1480#set_push 
                (let (_ktype1489,_vtype1490,_size1488) = iprot#readMapBegin in
                let _con1492 = Hashtbl.create _size1488 in
                  for i = 1 to _size1488 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con1492 _k _v
                  done; iprot#readMapEnd; _con1492)
            else
              iprot#skip _t1481)
          | _ -> iprot#skip _t1481);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1480

class channelToken =
object (self)
  val mutable _token : string option = None
  method get_token = _token
  method grab_token = match _token with None->raise (Field_empty "channelToken.token") | Some _x1494 -> _x1494
  method set_token _x1494 = _token <- Some _x1494
  method unset_token = _token <- None
  method reset_token = _token <- None

  val mutable _obsToken : string option = None
  method get_obsToken = _obsToken
  method grab_obsToken = match _obsToken with None->raise (Field_empty "channelToken.obsToken") | Some _x1495 -> _x1495
  method set_obsToken _x1495 = _obsToken <- Some _x1495
  method unset_obsToken = _obsToken <- None
  method reset_obsToken = _obsToken <- None

  val mutable _expiration : Int64.t option = None
  method get_expiration = _expiration
  method grab_expiration = match _expiration with None->raise (Field_empty "channelToken.expiration") | Some _x1496 -> _x1496
  method set_expiration _x1496 = _expiration <- Some _x1496
  method unset_expiration = _expiration <- None
  method reset_expiration = _expiration <- None

  val mutable _refreshToken : string option = None
  method get_refreshToken = _refreshToken
  method grab_refreshToken = match _refreshToken with None->raise (Field_empty "channelToken.refreshToken") | Some _x1497 -> _x1497
  method set_refreshToken _x1497 = _refreshToken <- Some _x1497
  method unset_refreshToken = _refreshToken <- None
  method reset_refreshToken = _refreshToken <- None

  val mutable _channelAccessToken : string option = None
  method get_channelAccessToken = _channelAccessToken
  method grab_channelAccessToken = match _channelAccessToken with None->raise (Field_empty "channelToken.channelAccessToken") | Some _x1498 -> _x1498
  method set_channelAccessToken _x1498 = _channelAccessToken <- Some _x1498
  method unset_channelAccessToken = _channelAccessToken <- None
  method reset_channelAccessToken = _channelAccessToken <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelToken";
    (match _token with None -> () | Some _v -> 
      oprot#writeFieldBegin("token",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _obsToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("obsToken",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _expiration with None -> () | Some _v -> 
      oprot#writeFieldBegin("expiration",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _refreshToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("refreshToken",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _channelAccessToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelAccessToken",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_channelToken (iprot : Protocol.t) =
  let _str1501 = new channelToken in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1502,_id1503) = iprot#readFieldBegin in
        if _t1502 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1503 with 
          | 1 -> (if _t1502 = Protocol.T_STRING then
              _str1501#set_token iprot#readString
            else
              iprot#skip _t1502)
          | 2 -> (if _t1502 = Protocol.T_STRING then
              _str1501#set_obsToken iprot#readString
            else
              iprot#skip _t1502)
          | 3 -> (if _t1502 = Protocol.T_I64 then
              _str1501#set_expiration iprot#readI64
            else
              iprot#skip _t1502)
          | 4 -> (if _t1502 = Protocol.T_STRING then
              _str1501#set_refreshToken iprot#readString
            else
              iprot#skip _t1502)
          | 5 -> (if _t1502 = Protocol.T_STRING then
              _str1501#set_channelAccessToken iprot#readString
            else
              iprot#skip _t1502)
          | _ -> iprot#skip _t1502);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1501

class channelSettings =
object (self)
  val mutable _unapprovedMessageReceivable : bool option = None
  method get_unapprovedMessageReceivable = _unapprovedMessageReceivable
  method grab_unapprovedMessageReceivable = match _unapprovedMessageReceivable with None->raise (Field_empty "channelSettings.unapprovedMessageReceivable") | Some _x1505 -> _x1505
  method set_unapprovedMessageReceivable _x1505 = _unapprovedMessageReceivable <- Some _x1505
  method unset_unapprovedMessageReceivable = _unapprovedMessageReceivable <- None
  method reset_unapprovedMessageReceivable = _unapprovedMessageReceivable <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelSettings";
    (match _unapprovedMessageReceivable with None -> () | Some _v -> 
      oprot#writeFieldBegin("unapprovedMessageReceivable",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_channelSettings (iprot : Protocol.t) =
  let _str1508 = new channelSettings in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1509,_id1510) = iprot#readFieldBegin in
        if _t1509 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1510 with 
          | 1 -> (if _t1509 = Protocol.T_BOOL then
              _str1508#set_unapprovedMessageReceivable iprot#readBool
            else
              iprot#skip _t1509)
          | _ -> iprot#skip _t1509);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1508

class channelIdWithLastUpdated =
object (self)
  val mutable _channelId : string option = None
  method get_channelId = _channelId
  method grab_channelId = match _channelId with None->raise (Field_empty "channelIdWithLastUpdated.channelId") | Some _x1512 -> _x1512
  method set_channelId _x1512 = _channelId <- Some _x1512
  method unset_channelId = _channelId <- None
  method reset_channelId = _channelId <- None

  val mutable _lastUpdated : Int64.t option = None
  method get_lastUpdated = _lastUpdated
  method grab_lastUpdated = match _lastUpdated with None->raise (Field_empty "channelIdWithLastUpdated.lastUpdated") | Some _x1513 -> _x1513
  method set_lastUpdated _x1513 = _lastUpdated <- Some _x1513
  method unset_lastUpdated = _lastUpdated <- None
  method reset_lastUpdated = _lastUpdated <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelIdWithLastUpdated";
    (match _channelId with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _lastUpdated with None -> () | Some _v -> 
      oprot#writeFieldBegin("lastUpdated",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_channelIdWithLastUpdated (iprot : Protocol.t) =
  let _str1516 = new channelIdWithLastUpdated in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1517,_id1518) = iprot#readFieldBegin in
        if _t1517 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1518 with 
          | 1 -> (if _t1517 = Protocol.T_STRING then
              _str1516#set_channelId iprot#readString
            else
              iprot#skip _t1517)
          | 2 -> (if _t1517 = Protocol.T_I64 then
              _str1516#set_lastUpdated iprot#readI64
            else
              iprot#skip _t1517)
          | _ -> iprot#skip _t1517);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1516

class coin =
object (self)
  val mutable _freeCoinBalance : Int32.t option = None
  method get_freeCoinBalance = _freeCoinBalance
  method grab_freeCoinBalance = match _freeCoinBalance with None->raise (Field_empty "coin.freeCoinBalance") | Some _x1520 -> _x1520
  method set_freeCoinBalance _x1520 = _freeCoinBalance <- Some _x1520
  method unset_freeCoinBalance = _freeCoinBalance <- None
  method reset_freeCoinBalance = _freeCoinBalance <- None

  val mutable _payedCoinBalance : Int32.t option = None
  method get_payedCoinBalance = _payedCoinBalance
  method grab_payedCoinBalance = match _payedCoinBalance with None->raise (Field_empty "coin.payedCoinBalance") | Some _x1521 -> _x1521
  method set_payedCoinBalance _x1521 = _payedCoinBalance <- Some _x1521
  method unset_payedCoinBalance = _payedCoinBalance <- None
  method reset_payedCoinBalance = _payedCoinBalance <- None

  val mutable _totalCoinBalance : Int32.t option = None
  method get_totalCoinBalance = _totalCoinBalance
  method grab_totalCoinBalance = match _totalCoinBalance with None->raise (Field_empty "coin.totalCoinBalance") | Some _x1522 -> _x1522
  method set_totalCoinBalance _x1522 = _totalCoinBalance <- Some _x1522
  method unset_totalCoinBalance = _totalCoinBalance <- None
  method reset_totalCoinBalance = _totalCoinBalance <- None

  val mutable _rewardCoinBalance : Int32.t option = None
  method get_rewardCoinBalance = _rewardCoinBalance
  method grab_rewardCoinBalance = match _rewardCoinBalance with None->raise (Field_empty "coin.rewardCoinBalance") | Some _x1523 -> _x1523
  method set_rewardCoinBalance _x1523 = _rewardCoinBalance <- Some _x1523
  method unset_rewardCoinBalance = _rewardCoinBalance <- None
  method reset_rewardCoinBalance = _rewardCoinBalance <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Coin";
    (match _freeCoinBalance with None -> () | Some _v -> 
      oprot#writeFieldBegin("freeCoinBalance",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _payedCoinBalance with None -> () | Some _v -> 
      oprot#writeFieldBegin("payedCoinBalance",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _totalCoinBalance with None -> () | Some _v -> 
      oprot#writeFieldBegin("totalCoinBalance",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _rewardCoinBalance with None -> () | Some _v -> 
      oprot#writeFieldBegin("rewardCoinBalance",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_coin (iprot : Protocol.t) =
  let _str1526 = new coin in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1527,_id1528) = iprot#readFieldBegin in
        if _t1527 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1528 with 
          | 1 -> (if _t1527 = Protocol.T_I32 then
              _str1526#set_freeCoinBalance iprot#readI32
            else
              iprot#skip _t1527)
          | 2 -> (if _t1527 = Protocol.T_I32 then
              _str1526#set_payedCoinBalance iprot#readI32
            else
              iprot#skip _t1527)
          | 3 -> (if _t1527 = Protocol.T_I32 then
              _str1526#set_totalCoinBalance iprot#readI32
            else
              iprot#skip _t1527)
          | 4 -> (if _t1527 = Protocol.T_I32 then
              _str1526#set_rewardCoinBalance iprot#readI32
            else
              iprot#skip _t1527)
          | _ -> iprot#skip _t1527);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1526

class coinPayLoad =
object (self)
  val mutable _payCoin : Int32.t option = None
  method get_payCoin = _payCoin
  method grab_payCoin = match _payCoin with None->raise (Field_empty "coinPayLoad.payCoin") | Some _x1530 -> _x1530
  method set_payCoin _x1530 = _payCoin <- Some _x1530
  method unset_payCoin = _payCoin <- None
  method reset_payCoin = _payCoin <- None

  val mutable _freeCoin : Int32.t option = None
  method get_freeCoin = _freeCoin
  method grab_freeCoin = match _freeCoin with None->raise (Field_empty "coinPayLoad.freeCoin") | Some _x1531 -> _x1531
  method set_freeCoin _x1531 = _freeCoin <- Some _x1531
  method unset_freeCoin = _freeCoin <- None
  method reset_freeCoin = _freeCoin <- None

  val mutable _type : PayloadType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "coinPayLoad.type") | Some _x1532 -> _x1532
  method set_type _x1532 = _type <- Some _x1532
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _rewardCoin : Int32.t option = None
  method get_rewardCoin = _rewardCoin
  method grab_rewardCoin = match _rewardCoin with None->raise (Field_empty "coinPayLoad.rewardCoin") | Some _x1533 -> _x1533
  method set_rewardCoin _x1533 = _rewardCoin <- Some _x1533
  method unset_rewardCoin = _rewardCoin <- None
  method reset_rewardCoin = _rewardCoin <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CoinPayLoad";
    (match _payCoin with None -> () | Some _v -> 
      oprot#writeFieldBegin("payCoin",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _freeCoin with None -> () | Some _v -> 
      oprot#writeFieldBegin("freeCoin",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,3);
      oprot#writeI32(PayloadType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _rewardCoin with None -> () | Some _v -> 
      oprot#writeFieldBegin("rewardCoin",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_coinPayLoad (iprot : Protocol.t) =
  let _str1536 = new coinPayLoad in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1537,_id1538) = iprot#readFieldBegin in
        if _t1537 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1538 with 
          | 1 -> (if _t1537 = Protocol.T_I32 then
              _str1536#set_payCoin iprot#readI32
            else
              iprot#skip _t1537)
          | 2 -> (if _t1537 = Protocol.T_I32 then
              _str1536#set_freeCoin iprot#readI32
            else
              iprot#skip _t1537)
          | 3 -> (if _t1537 = Protocol.T_I32 then
              _str1536#set_type (PayloadType.of_i iprot#readI32)
            else
              iprot#skip _t1537)
          | 4 -> (if _t1537 = Protocol.T_I32 then
              _str1536#set_rewardCoin iprot#readI32
            else
              iprot#skip _t1537)
          | _ -> iprot#skip _t1537);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1536

class coinHistory =
object (self)
  val mutable _payDate : Int64.t option = None
  method get_payDate = _payDate
  method grab_payDate = match _payDate with None->raise (Field_empty "coinHistory.payDate") | Some _x1540 -> _x1540
  method set_payDate _x1540 = _payDate <- Some _x1540
  method unset_payDate = _payDate <- None
  method reset_payDate = _payDate <- None

  val mutable _coinBalance : Int32.t option = None
  method get_coinBalance = _coinBalance
  method grab_coinBalance = match _coinBalance with None->raise (Field_empty "coinHistory.coinBalance") | Some _x1541 -> _x1541
  method set_coinBalance _x1541 = _coinBalance <- Some _x1541
  method unset_coinBalance = _coinBalance <- None
  method reset_coinBalance = _coinBalance <- None

  val mutable _coin : Int32.t option = None
  method get_coin = _coin
  method grab_coin = match _coin with None->raise (Field_empty "coinHistory.coin") | Some _x1542 -> _x1542
  method set_coin _x1542 = _coin <- Some _x1542
  method unset_coin = _coin <- None
  method reset_coin = _coin <- None

  val mutable _price : string option = None
  method get_price = _price
  method grab_price = match _price with None->raise (Field_empty "coinHistory.price") | Some _x1543 -> _x1543
  method set_price _x1543 = _price <- Some _x1543
  method unset_price = _price <- None
  method reset_price = _price <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "coinHistory.title") | Some _x1544 -> _x1544
  method set_title _x1544 = _title <- Some _x1544
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _refund : bool option = None
  method get_refund = _refund
  method grab_refund = match _refund with None->raise (Field_empty "coinHistory.refund") | Some _x1545 -> _x1545
  method set_refund _x1545 = _refund <- Some _x1545
  method unset_refund = _refund <- None
  method reset_refund = _refund <- None

  val mutable _paySeq : string option = None
  method get_paySeq = _paySeq
  method grab_paySeq = match _paySeq with None->raise (Field_empty "coinHistory.paySeq") | Some _x1546 -> _x1546
  method set_paySeq _x1546 = _paySeq <- Some _x1546
  method unset_paySeq = _paySeq <- None
  method reset_paySeq = _paySeq <- None

  val mutable _currency : string option = None
  method get_currency = _currency
  method grab_currency = match _currency with None->raise (Field_empty "coinHistory.currency") | Some _x1547 -> _x1547
  method set_currency _x1547 = _currency <- Some _x1547
  method unset_currency = _currency <- None
  method reset_currency = _currency <- None

  val mutable _currencySign : string option = None
  method get_currencySign = _currencySign
  method grab_currencySign = match _currencySign with None->raise (Field_empty "coinHistory.currencySign") | Some _x1548 -> _x1548
  method set_currencySign _x1548 = _currencySign <- Some _x1548
  method unset_currencySign = _currencySign <- None
  method reset_currencySign = _currencySign <- None

  val mutable _displayPrice : string option = None
  method get_displayPrice = _displayPrice
  method grab_displayPrice = match _displayPrice with None->raise (Field_empty "coinHistory.displayPrice") | Some _x1549 -> _x1549
  method set_displayPrice _x1549 = _displayPrice <- Some _x1549
  method unset_displayPrice = _displayPrice <- None
  method reset_displayPrice = _displayPrice <- None

  val mutable _payload : coinPayLoad option = None
  method get_payload = _payload
  method grab_payload = match _payload with None->raise (Field_empty "coinHistory.payload") | Some _x1550 -> _x1550
  method set_payload _x1550 = _payload <- Some _x1550
  method unset_payload = _payload <- None
  method reset_payload = _payload <- None

  val mutable _channelId : string option = None
  method get_channelId = _channelId
  method grab_channelId = match _channelId with None->raise (Field_empty "coinHistory.channelId") | Some _x1551 -> _x1551
  method set_channelId _x1551 = _channelId <- Some _x1551
  method unset_channelId = _channelId <- None
  method reset_channelId = _channelId <- None

  method copy =
      let _new = Oo.copy self in
      if _payload <> None then
        _new#set_payload self#grab_payload#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CoinHistory";
    (match _payDate with None -> () | Some _v -> 
      oprot#writeFieldBegin("payDate",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _coinBalance with None -> () | Some _v -> 
      oprot#writeFieldBegin("coinBalance",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _coin with None -> () | Some _v -> 
      oprot#writeFieldBegin("coin",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _price with None -> () | Some _v -> 
      oprot#writeFieldBegin("price",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _refund with None -> () | Some _v -> 
      oprot#writeFieldBegin("refund",Protocol.T_BOOL,6);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _paySeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("paySeq",Protocol.T_STRING,7);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _currency with None -> () | Some _v -> 
      oprot#writeFieldBegin("currency",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _currencySign with None -> () | Some _v -> 
      oprot#writeFieldBegin("currencySign",Protocol.T_STRING,9);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayPrice with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayPrice",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _payload with None -> () | Some _v -> 
      oprot#writeFieldBegin("payload",Protocol.T_STRUCT,11);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _channelId with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelId",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_coinHistory (iprot : Protocol.t) =
  let _str1554 = new coinHistory in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1555,_id1556) = iprot#readFieldBegin in
        if _t1555 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1556 with 
          | 1 -> (if _t1555 = Protocol.T_I64 then
              _str1554#set_payDate iprot#readI64
            else
              iprot#skip _t1555)
          | 2 -> (if _t1555 = Protocol.T_I32 then
              _str1554#set_coinBalance iprot#readI32
            else
              iprot#skip _t1555)
          | 3 -> (if _t1555 = Protocol.T_I32 then
              _str1554#set_coin iprot#readI32
            else
              iprot#skip _t1555)
          | 4 -> (if _t1555 = Protocol.T_STRING then
              _str1554#set_price iprot#readString
            else
              iprot#skip _t1555)
          | 5 -> (if _t1555 = Protocol.T_STRING then
              _str1554#set_title iprot#readString
            else
              iprot#skip _t1555)
          | 6 -> (if _t1555 = Protocol.T_BOOL then
              _str1554#set_refund iprot#readBool
            else
              iprot#skip _t1555)
          | 7 -> (if _t1555 = Protocol.T_STRING then
              _str1554#set_paySeq iprot#readString
            else
              iprot#skip _t1555)
          | 8 -> (if _t1555 = Protocol.T_STRING then
              _str1554#set_currency iprot#readString
            else
              iprot#skip _t1555)
          | 9 -> (if _t1555 = Protocol.T_STRING then
              _str1554#set_currencySign iprot#readString
            else
              iprot#skip _t1555)
          | 10 -> (if _t1555 = Protocol.T_STRING then
              _str1554#set_displayPrice iprot#readString
            else
              iprot#skip _t1555)
          | 11 -> (if _t1555 = Protocol.T_STRUCT then
              _str1554#set_payload (read_coinPayLoad iprot)
            else
              iprot#skip _t1555)
          | 12 -> (if _t1555 = Protocol.T_STRING then
              _str1554#set_channelId iprot#readString
            else
              iprot#skip _t1555)
          | _ -> iprot#skip _t1555);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1554

class coinHistoryCondition =
object (self)
  val mutable _start : Int64.t option = None
  method get_start = _start
  method grab_start = match _start with None->raise (Field_empty "coinHistoryCondition.start") | Some _x1558 -> _x1558
  method set_start _x1558 = _start <- Some _x1558
  method unset_start = _start <- None
  method reset_start = _start <- None

  val mutable _size : Int32.t option = None
  method get_size = _size
  method grab_size = match _size with None->raise (Field_empty "coinHistoryCondition.size") | Some _x1559 -> _x1559
  method set_size _x1559 = _size <- Some _x1559
  method unset_size = _size <- None
  method reset_size = _size <- None

  val mutable _language : string option = None
  method get_language = _language
  method grab_language = match _language with None->raise (Field_empty "coinHistoryCondition.language") | Some _x1560 -> _x1560
  method set_language _x1560 = _language <- Some _x1560
  method unset_language = _language <- None
  method reset_language = _language <- None

  val mutable _eddt : string option = None
  method get_eddt = _eddt
  method grab_eddt = match _eddt with None->raise (Field_empty "coinHistoryCondition.eddt") | Some _x1561 -> _x1561
  method set_eddt _x1561 = _eddt <- Some _x1561
  method unset_eddt = _eddt <- None
  method reset_eddt = _eddt <- None

  val mutable _appStoreCode : PaymentType.t option = None
  method get_appStoreCode = _appStoreCode
  method grab_appStoreCode = match _appStoreCode with None->raise (Field_empty "coinHistoryCondition.appStoreCode") | Some _x1562 -> _x1562
  method set_appStoreCode _x1562 = _appStoreCode <- Some _x1562
  method unset_appStoreCode = _appStoreCode <- None
  method reset_appStoreCode = _appStoreCode <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CoinHistoryCondition";
    (match _start with None -> () | Some _v -> 
      oprot#writeFieldBegin("start",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _size with None -> () | Some _v -> 
      oprot#writeFieldBegin("size",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _language with None -> () | Some _v -> 
      oprot#writeFieldBegin("language",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _eddt with None -> () | Some _v -> 
      oprot#writeFieldBegin("eddt",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _appStoreCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("appStoreCode",Protocol.T_I32,5);
      oprot#writeI32(PaymentType.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_coinHistoryCondition (iprot : Protocol.t) =
  let _str1565 = new coinHistoryCondition in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1566,_id1567) = iprot#readFieldBegin in
        if _t1566 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1567 with 
          | 1 -> (if _t1566 = Protocol.T_I64 then
              _str1565#set_start iprot#readI64
            else
              iprot#skip _t1566)
          | 2 -> (if _t1566 = Protocol.T_I32 then
              _str1565#set_size iprot#readI32
            else
              iprot#skip _t1566)
          | 3 -> (if _t1566 = Protocol.T_STRING then
              _str1565#set_language iprot#readString
            else
              iprot#skip _t1566)
          | 4 -> (if _t1566 = Protocol.T_STRING then
              _str1565#set_eddt iprot#readString
            else
              iprot#skip _t1566)
          | 5 -> (if _t1566 = Protocol.T_I32 then
              _str1565#set_appStoreCode (PaymentType.of_i iprot#readI32)
            else
              iprot#skip _t1566)
          | _ -> iprot#skip _t1566);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1565

class coinHistoryResult =
object (self)
  val mutable _historys : coinHistory list option = None
  method get_historys = _historys
  method grab_historys = match _historys with None->raise (Field_empty "coinHistoryResult.historys") | Some _x1569 -> _x1569
  method set_historys _x1569 = _historys <- Some _x1569
  method unset_historys = _historys <- None
  method reset_historys = _historys <- None

  val mutable _balance : coin option = None
  method get_balance = _balance
  method grab_balance = match _balance with None->raise (Field_empty "coinHistoryResult.balance") | Some _x1570 -> _x1570
  method set_balance _x1570 = _balance <- Some _x1570
  method unset_balance = _balance <- None
  method reset_balance = _balance <- None

  val mutable _hasNext : bool option = None
  method get_hasNext = _hasNext
  method grab_hasNext = match _hasNext with None->raise (Field_empty "coinHistoryResult.hasNext") | Some _x1571 -> _x1571
  method set_hasNext _x1571 = _hasNext <- Some _x1571
  method unset_hasNext = _hasNext <- None
  method reset_hasNext = _hasNext <- None

  method copy =
      let _new = Oo.copy self in
      if _historys <> None then
        _new#set_historys (List.map (fun x -> x#copy) self#grab_historys);
      if _balance <> None then
        _new#set_balance self#grab_balance#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CoinHistoryResult";
    (match _historys with None -> () | Some _v -> 
      oprot#writeFieldBegin("historys",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1574 ->         _iter1574#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _balance with None -> () | Some _v -> 
      oprot#writeFieldBegin("balance",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _hasNext with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasNext",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_coinHistoryResult (iprot : Protocol.t) =
  let _str1575 = new coinHistoryResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1576,_id1577) = iprot#readFieldBegin in
        if _t1576 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1577 with 
          | 1 -> (if _t1576 = Protocol.T_LIST then
              _str1575#set_historys 
                (let (_etype1581,_size1578) = iprot#readListBegin in
                  let _con1582 = (Array.to_list (Array.init _size1578 (fun _ -> (read_coinHistory iprot)))) in
                    iprot#readListEnd; _con1582)
            else
              iprot#skip _t1576)
          | 2 -> (if _t1576 = Protocol.T_STRUCT then
              _str1575#set_balance (read_coin iprot)
            else
              iprot#skip _t1576)
          | 3 -> (if _t1576 = Protocol.T_BOOL then
              _str1575#set_hasNext iprot#readBool
            else
              iprot#skip _t1576)
          | _ -> iprot#skip _t1576);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1575

class coinProductItem =
object (self)
  val mutable _itemId : string option = None
  method get_itemId = _itemId
  method grab_itemId = match _itemId with None->raise (Field_empty "coinProductItem.itemId") | Some _x1584 -> _x1584
  method set_itemId _x1584 = _itemId <- Some _x1584
  method unset_itemId = _itemId <- None
  method reset_itemId = _itemId <- None

  val mutable _coin : Int32.t option = None
  method get_coin = _coin
  method grab_coin = match _coin with None->raise (Field_empty "coinProductItem.coin") | Some _x1585 -> _x1585
  method set_coin _x1585 = _coin <- Some _x1585
  method unset_coin = _coin <- None
  method reset_coin = _coin <- None

  val mutable _freeCoin : Int32.t option = None
  method get_freeCoin = _freeCoin
  method grab_freeCoin = match _freeCoin with None->raise (Field_empty "coinProductItem.freeCoin") | Some _x1586 -> _x1586
  method set_freeCoin _x1586 = _freeCoin <- Some _x1586
  method unset_freeCoin = _freeCoin <- None
  method reset_freeCoin = _freeCoin <- None

  val mutable _currency : string option = None
  method get_currency = _currency
  method grab_currency = match _currency with None->raise (Field_empty "coinProductItem.currency") | Some _x1587 -> _x1587
  method set_currency _x1587 = _currency <- Some _x1587
  method unset_currency = _currency <- None
  method reset_currency = _currency <- None

  val mutable _price : string option = None
  method get_price = _price
  method grab_price = match _price with None->raise (Field_empty "coinProductItem.price") | Some _x1588 -> _x1588
  method set_price _x1588 = _price <- Some _x1588
  method unset_price = _price <- None
  method reset_price = _price <- None

  val mutable _displayPrice : string option = None
  method get_displayPrice = _displayPrice
  method grab_displayPrice = match _displayPrice with None->raise (Field_empty "coinProductItem.displayPrice") | Some _x1589 -> _x1589
  method set_displayPrice _x1589 = _displayPrice <- Some _x1589
  method unset_displayPrice = _displayPrice <- None
  method reset_displayPrice = _displayPrice <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "coinProductItem.name") | Some _x1590 -> _x1590
  method set_name _x1590 = _name <- Some _x1590
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _desc : string option = None
  method get_desc = _desc
  method grab_desc = match _desc with None->raise (Field_empty "coinProductItem.desc") | Some _x1591 -> _x1591
  method set_desc _x1591 = _desc <- Some _x1591
  method unset_desc = _desc <- None
  method reset_desc = _desc <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CoinProductItem";
    (match _itemId with None -> () | Some _v -> 
      oprot#writeFieldBegin("itemId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _coin with None -> () | Some _v -> 
      oprot#writeFieldBegin("coin",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _freeCoin with None -> () | Some _v -> 
      oprot#writeFieldBegin("freeCoin",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _currency with None -> () | Some _v -> 
      oprot#writeFieldBegin("currency",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _price with None -> () | Some _v -> 
      oprot#writeFieldBegin("price",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayPrice with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayPrice",Protocol.T_STRING,7);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _desc with None -> () | Some _v -> 
      oprot#writeFieldBegin("desc",Protocol.T_STRING,9);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_coinProductItem (iprot : Protocol.t) =
  let _str1594 = new coinProductItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1595,_id1596) = iprot#readFieldBegin in
        if _t1595 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1596 with 
          | 1 -> (if _t1595 = Protocol.T_STRING then
              _str1594#set_itemId iprot#readString
            else
              iprot#skip _t1595)
          | 2 -> (if _t1595 = Protocol.T_I32 then
              _str1594#set_coin iprot#readI32
            else
              iprot#skip _t1595)
          | 3 -> (if _t1595 = Protocol.T_I32 then
              _str1594#set_freeCoin iprot#readI32
            else
              iprot#skip _t1595)
          | 5 -> (if _t1595 = Protocol.T_STRING then
              _str1594#set_currency iprot#readString
            else
              iprot#skip _t1595)
          | 6 -> (if _t1595 = Protocol.T_STRING then
              _str1594#set_price iprot#readString
            else
              iprot#skip _t1595)
          | 7 -> (if _t1595 = Protocol.T_STRING then
              _str1594#set_displayPrice iprot#readString
            else
              iprot#skip _t1595)
          | 8 -> (if _t1595 = Protocol.T_STRING then
              _str1594#set_name iprot#readString
            else
              iprot#skip _t1595)
          | 9 -> (if _t1595 = Protocol.T_STRING then
              _str1594#set_desc iprot#readString
            else
              iprot#skip _t1595)
          | _ -> iprot#skip _t1595);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1594

class coinPurchaseConfirm =
object (self)
  val mutable _orderId : string option = None
  method get_orderId = _orderId
  method grab_orderId = match _orderId with None->raise (Field_empty "coinPurchaseConfirm.orderId") | Some _x1598 -> _x1598
  method set_orderId _x1598 = _orderId <- Some _x1598
  method unset_orderId = _orderId <- None
  method reset_orderId = _orderId <- None

  val mutable _appStoreCode : PaymentType.t option = None
  method get_appStoreCode = _appStoreCode
  method grab_appStoreCode = match _appStoreCode with None->raise (Field_empty "coinPurchaseConfirm.appStoreCode") | Some _x1599 -> _x1599
  method set_appStoreCode _x1599 = _appStoreCode <- Some _x1599
  method unset_appStoreCode = _appStoreCode <- None
  method reset_appStoreCode = _appStoreCode <- None

  val mutable _receipt : string option = None
  method get_receipt = _receipt
  method grab_receipt = match _receipt with None->raise (Field_empty "coinPurchaseConfirm.receipt") | Some _x1600 -> _x1600
  method set_receipt _x1600 = _receipt <- Some _x1600
  method unset_receipt = _receipt <- None
  method reset_receipt = _receipt <- None

  val mutable _signature : string option = None
  method get_signature = _signature
  method grab_signature = match _signature with None->raise (Field_empty "coinPurchaseConfirm.signature") | Some _x1601 -> _x1601
  method set_signature _x1601 = _signature <- Some _x1601
  method unset_signature = _signature <- None
  method reset_signature = _signature <- None

  val mutable _seller : string option = None
  method get_seller = _seller
  method grab_seller = match _seller with None->raise (Field_empty "coinPurchaseConfirm.seller") | Some _x1602 -> _x1602
  method set_seller _x1602 = _seller <- Some _x1602
  method unset_seller = _seller <- None
  method reset_seller = _seller <- None

  val mutable _requestType : string option = None
  method get_requestType = _requestType
  method grab_requestType = match _requestType with None->raise (Field_empty "coinPurchaseConfirm.requestType") | Some _x1603 -> _x1603
  method set_requestType _x1603 = _requestType <- Some _x1603
  method unset_requestType = _requestType <- None
  method reset_requestType = _requestType <- None

  val mutable _ignoreReceipt : bool option = None
  method get_ignoreReceipt = _ignoreReceipt
  method grab_ignoreReceipt = match _ignoreReceipt with None->raise (Field_empty "coinPurchaseConfirm.ignoreReceipt") | Some _x1604 -> _x1604
  method set_ignoreReceipt _x1604 = _ignoreReceipt <- Some _x1604
  method unset_ignoreReceipt = _ignoreReceipt <- None
  method reset_ignoreReceipt = _ignoreReceipt <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CoinPurchaseConfirm";
    (match _orderId with None -> () | Some _v -> 
      oprot#writeFieldBegin("orderId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _appStoreCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("appStoreCode",Protocol.T_I32,2);
      oprot#writeI32(PaymentType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _receipt with None -> () | Some _v -> 
      oprot#writeFieldBegin("receipt",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _signature with None -> () | Some _v -> 
      oprot#writeFieldBegin("signature",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _seller with None -> () | Some _v -> 
      oprot#writeFieldBegin("seller",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _requestType with None -> () | Some _v -> 
      oprot#writeFieldBegin("requestType",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _ignoreReceipt with None -> () | Some _v -> 
      oprot#writeFieldBegin("ignoreReceipt",Protocol.T_BOOL,7);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_coinPurchaseConfirm (iprot : Protocol.t) =
  let _str1607 = new coinPurchaseConfirm in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1608,_id1609) = iprot#readFieldBegin in
        if _t1608 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1609 with 
          | 1 -> (if _t1608 = Protocol.T_STRING then
              _str1607#set_orderId iprot#readString
            else
              iprot#skip _t1608)
          | 2 -> (if _t1608 = Protocol.T_I32 then
              _str1607#set_appStoreCode (PaymentType.of_i iprot#readI32)
            else
              iprot#skip _t1608)
          | 3 -> (if _t1608 = Protocol.T_STRING then
              _str1607#set_receipt iprot#readString
            else
              iprot#skip _t1608)
          | 4 -> (if _t1608 = Protocol.T_STRING then
              _str1607#set_signature iprot#readString
            else
              iprot#skip _t1608)
          | 5 -> (if _t1608 = Protocol.T_STRING then
              _str1607#set_seller iprot#readString
            else
              iprot#skip _t1608)
          | 6 -> (if _t1608 = Protocol.T_STRING then
              _str1607#set_requestType iprot#readString
            else
              iprot#skip _t1608)
          | 7 -> (if _t1608 = Protocol.T_BOOL then
              _str1607#set_ignoreReceipt iprot#readBool
            else
              iprot#skip _t1608)
          | _ -> iprot#skip _t1608);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1607

class coinPurchaseReservation =
object (self)
  val mutable _productId : string option = None
  method get_productId = _productId
  method grab_productId = match _productId with None->raise (Field_empty "coinPurchaseReservation.productId") | Some _x1611 -> _x1611
  method set_productId _x1611 = _productId <- Some _x1611
  method unset_productId = _productId <- None
  method reset_productId = _productId <- None

  val mutable _country : string option = None
  method get_country = _country
  method grab_country = match _country with None->raise (Field_empty "coinPurchaseReservation.country") | Some _x1612 -> _x1612
  method set_country _x1612 = _country <- Some _x1612
  method unset_country = _country <- None
  method reset_country = _country <- None

  val mutable _currency : string option = None
  method get_currency = _currency
  method grab_currency = match _currency with None->raise (Field_empty "coinPurchaseReservation.currency") | Some _x1613 -> _x1613
  method set_currency _x1613 = _currency <- Some _x1613
  method unset_currency = _currency <- None
  method reset_currency = _currency <- None

  val mutable _price : string option = None
  method get_price = _price
  method grab_price = match _price with None->raise (Field_empty "coinPurchaseReservation.price") | Some _x1614 -> _x1614
  method set_price _x1614 = _price <- Some _x1614
  method unset_price = _price <- None
  method reset_price = _price <- None

  val mutable _appStoreCode : PaymentType.t option = None
  method get_appStoreCode = _appStoreCode
  method grab_appStoreCode = match _appStoreCode with None->raise (Field_empty "coinPurchaseReservation.appStoreCode") | Some _x1615 -> _x1615
  method set_appStoreCode _x1615 = _appStoreCode <- Some _x1615
  method unset_appStoreCode = _appStoreCode <- None
  method reset_appStoreCode = _appStoreCode <- None

  val mutable _language : string option = None
  method get_language = _language
  method grab_language = match _language with None->raise (Field_empty "coinPurchaseReservation.language") | Some _x1616 -> _x1616
  method set_language _x1616 = _language <- Some _x1616
  method unset_language = _language <- None
  method reset_language = _language <- None

  val mutable _pgCode : PaymentPgType.t option = None
  method get_pgCode = _pgCode
  method grab_pgCode = match _pgCode with None->raise (Field_empty "coinPurchaseReservation.pgCode") | Some _x1617 -> _x1617
  method set_pgCode _x1617 = _pgCode <- Some _x1617
  method unset_pgCode = _pgCode <- None
  method reset_pgCode = _pgCode <- None

  val mutable _redirectUrl : string option = None
  method get_redirectUrl = _redirectUrl
  method grab_redirectUrl = match _redirectUrl with None->raise (Field_empty "coinPurchaseReservation.redirectUrl") | Some _x1618 -> _x1618
  method set_redirectUrl _x1618 = _redirectUrl <- Some _x1618
  method unset_redirectUrl = _redirectUrl <- None
  method reset_redirectUrl = _redirectUrl <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CoinPurchaseReservation";
    (match _productId with None -> () | Some _v -> 
      oprot#writeFieldBegin("productId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _country with None -> () | Some _v -> 
      oprot#writeFieldBegin("country",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _currency with None -> () | Some _v -> 
      oprot#writeFieldBegin("currency",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _price with None -> () | Some _v -> 
      oprot#writeFieldBegin("price",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _appStoreCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("appStoreCode",Protocol.T_I32,5);
      oprot#writeI32(PaymentType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _language with None -> () | Some _v -> 
      oprot#writeFieldBegin("language",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _pgCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("pgCode",Protocol.T_I32,7);
      oprot#writeI32(PaymentPgType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _redirectUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("redirectUrl",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_coinPurchaseReservation (iprot : Protocol.t) =
  let _str1621 = new coinPurchaseReservation in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1622,_id1623) = iprot#readFieldBegin in
        if _t1622 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1623 with 
          | 1 -> (if _t1622 = Protocol.T_STRING then
              _str1621#set_productId iprot#readString
            else
              iprot#skip _t1622)
          | 2 -> (if _t1622 = Protocol.T_STRING then
              _str1621#set_country iprot#readString
            else
              iprot#skip _t1622)
          | 3 -> (if _t1622 = Protocol.T_STRING then
              _str1621#set_currency iprot#readString
            else
              iprot#skip _t1622)
          | 4 -> (if _t1622 = Protocol.T_STRING then
              _str1621#set_price iprot#readString
            else
              iprot#skip _t1622)
          | 5 -> (if _t1622 = Protocol.T_I32 then
              _str1621#set_appStoreCode (PaymentType.of_i iprot#readI32)
            else
              iprot#skip _t1622)
          | 6 -> (if _t1622 = Protocol.T_STRING then
              _str1621#set_language iprot#readString
            else
              iprot#skip _t1622)
          | 7 -> (if _t1622 = Protocol.T_I32 then
              _str1621#set_pgCode (PaymentPgType.of_i iprot#readI32)
            else
              iprot#skip _t1622)
          | 8 -> (if _t1622 = Protocol.T_STRING then
              _str1621#set_redirectUrl iprot#readString
            else
              iprot#skip _t1622)
          | _ -> iprot#skip _t1622);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1621

class coinUseReservationItem =
object (self)
  val mutable _itemId : string option = None
  method get_itemId = _itemId
  method grab_itemId = match _itemId with None->raise (Field_empty "coinUseReservationItem.itemId") | Some _x1625 -> _x1625
  method set_itemId _x1625 = _itemId <- Some _x1625
  method unset_itemId = _itemId <- None
  method reset_itemId = _itemId <- None

  val mutable _itemName : string option = None
  method get_itemName = _itemName
  method grab_itemName = match _itemName with None->raise (Field_empty "coinUseReservationItem.itemName") | Some _x1626 -> _x1626
  method set_itemName _x1626 = _itemName <- Some _x1626
  method unset_itemName = _itemName <- None
  method reset_itemName = _itemName <- None

  val mutable _amount : Int32.t option = None
  method get_amount = _amount
  method grab_amount = match _amount with None->raise (Field_empty "coinUseReservationItem.amount") | Some _x1627 -> _x1627
  method set_amount _x1627 = _amount <- Some _x1627
  method unset_amount = _amount <- None
  method reset_amount = _amount <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CoinUseReservationItem";
    (match _itemId with None -> () | Some _v -> 
      oprot#writeFieldBegin("itemId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _itemName with None -> () | Some _v -> 
      oprot#writeFieldBegin("itemName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _amount with None -> () | Some _v -> 
      oprot#writeFieldBegin("amount",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_coinUseReservationItem (iprot : Protocol.t) =
  let _str1630 = new coinUseReservationItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1631,_id1632) = iprot#readFieldBegin in
        if _t1631 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1632 with 
          | 1 -> (if _t1631 = Protocol.T_STRING then
              _str1630#set_itemId iprot#readString
            else
              iprot#skip _t1631)
          | 2 -> (if _t1631 = Protocol.T_STRING then
              _str1630#set_itemName iprot#readString
            else
              iprot#skip _t1631)
          | 3 -> (if _t1631 = Protocol.T_I32 then
              _str1630#set_amount iprot#readI32
            else
              iprot#skip _t1631)
          | _ -> iprot#skip _t1631);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1630

class coinUseReservation =
object (self)
  val mutable _channelId : string option = None
  method get_channelId = _channelId
  method grab_channelId = match _channelId with None->raise (Field_empty "coinUseReservation.channelId") | Some _x1634 -> _x1634
  method set_channelId _x1634 = _channelId <- Some _x1634
  method unset_channelId = _channelId <- None
  method reset_channelId = _channelId <- None

  val mutable _shopOrderId : string option = None
  method get_shopOrderId = _shopOrderId
  method grab_shopOrderId = match _shopOrderId with None->raise (Field_empty "coinUseReservation.shopOrderId") | Some _x1635 -> _x1635
  method set_shopOrderId _x1635 = _shopOrderId <- Some _x1635
  method unset_shopOrderId = _shopOrderId <- None
  method reset_shopOrderId = _shopOrderId <- None

  val mutable _appStoreCode : PaymentType.t option = None
  method get_appStoreCode = _appStoreCode
  method grab_appStoreCode = match _appStoreCode with None->raise (Field_empty "coinUseReservation.appStoreCode") | Some _x1636 -> _x1636
  method set_appStoreCode _x1636 = _appStoreCode <- Some _x1636
  method unset_appStoreCode = _appStoreCode <- None
  method reset_appStoreCode = _appStoreCode <- None

  val mutable _items : coinUseReservationItem list option = None
  method get_items = _items
  method grab_items = match _items with None->raise (Field_empty "coinUseReservation.items") | Some _x1637 -> _x1637
  method set_items _x1637 = _items <- Some _x1637
  method unset_items = _items <- None
  method reset_items = _items <- None

  val mutable _country : string option = None
  method get_country = _country
  method grab_country = match _country with None->raise (Field_empty "coinUseReservation.country") | Some _x1638 -> _x1638
  method set_country _x1638 = _country <- Some _x1638
  method unset_country = _country <- None
  method reset_country = _country <- None

  method copy =
      let _new = Oo.copy self in
      if _items <> None then
        _new#set_items (List.map (fun x -> x#copy) self#grab_items);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CoinUseReservation";
    (match _channelId with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _shopOrderId with None -> () | Some _v -> 
      oprot#writeFieldBegin("shopOrderId",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _appStoreCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("appStoreCode",Protocol.T_I32,3);
      oprot#writeI32(PaymentType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _items with None -> () | Some _v -> 
      oprot#writeFieldBegin("items",Protocol.T_LIST,4);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1641 ->         _iter1641#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _country with None -> () | Some _v -> 
      oprot#writeFieldBegin("country",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_coinUseReservation (iprot : Protocol.t) =
  let _str1642 = new coinUseReservation in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1643,_id1644) = iprot#readFieldBegin in
        if _t1643 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1644 with 
          | 1 -> (if _t1643 = Protocol.T_STRING then
              _str1642#set_channelId iprot#readString
            else
              iprot#skip _t1643)
          | 2 -> (if _t1643 = Protocol.T_STRING then
              _str1642#set_shopOrderId iprot#readString
            else
              iprot#skip _t1643)
          | 3 -> (if _t1643 = Protocol.T_I32 then
              _str1642#set_appStoreCode (PaymentType.of_i iprot#readI32)
            else
              iprot#skip _t1643)
          | 4 -> (if _t1643 = Protocol.T_LIST then
              _str1642#set_items 
                (let (_etype1648,_size1645) = iprot#readListBegin in
                  let _con1649 = (Array.to_list (Array.init _size1645 (fun _ -> (read_coinUseReservationItem iprot)))) in
                    iprot#readListEnd; _con1649)
            else
              iprot#skip _t1643)
          | 5 -> (if _t1643 = Protocol.T_STRING then
              _str1642#set_country iprot#readString
            else
              iprot#skip _t1643)
          | _ -> iprot#skip _t1643);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1642

class compactContact =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "compactContact.mid") | Some _x1651 -> _x1651
  method set_mid _x1651 = _mid <- Some _x1651
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "compactContact.createdTime") | Some _x1652 -> _x1652
  method set_createdTime _x1652 = _createdTime <- Some _x1652
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _modifiedTime : Int64.t option = None
  method get_modifiedTime = _modifiedTime
  method grab_modifiedTime = match _modifiedTime with None->raise (Field_empty "compactContact.modifiedTime") | Some _x1653 -> _x1653
  method set_modifiedTime _x1653 = _modifiedTime <- Some _x1653
  method unset_modifiedTime = _modifiedTime <- None
  method reset_modifiedTime = _modifiedTime <- None

  val mutable _status : ContactStatus.t option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "compactContact.status") | Some _x1654 -> _x1654
  method set_status _x1654 = _status <- Some _x1654
  method unset_status = _status <- None
  method reset_status = _status <- None

  val mutable _settings : Int64.t option = None
  method get_settings = _settings
  method grab_settings = match _settings with None->raise (Field_empty "compactContact.settings") | Some _x1655 -> _x1655
  method set_settings _x1655 = _settings <- Some _x1655
  method unset_settings = _settings <- None
  method reset_settings = _settings <- None

  val mutable _displayNameOverridden : string option = None
  method get_displayNameOverridden = _displayNameOverridden
  method grab_displayNameOverridden = match _displayNameOverridden with None->raise (Field_empty "compactContact.displayNameOverridden") | Some _x1656 -> _x1656
  method set_displayNameOverridden _x1656 = _displayNameOverridden <- Some _x1656
  method unset_displayNameOverridden = _displayNameOverridden <- None
  method reset_displayNameOverridden = _displayNameOverridden <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CompactContact";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _modifiedTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("modifiedTime",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_I32,4);
      oprot#writeI32(ContactStatus.to_i _v);
      oprot#writeFieldEnd
    );
    (match _settings with None -> () | Some _v -> 
      oprot#writeFieldBegin("settings",Protocol.T_I64,5);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _displayNameOverridden with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayNameOverridden",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_compactContact (iprot : Protocol.t) =
  let _str1659 = new compactContact in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1660,_id1661) = iprot#readFieldBegin in
        if _t1660 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1661 with 
          | 1 -> (if _t1660 = Protocol.T_STRING then
              _str1659#set_mid iprot#readString
            else
              iprot#skip _t1660)
          | 2 -> (if _t1660 = Protocol.T_I64 then
              _str1659#set_createdTime iprot#readI64
            else
              iprot#skip _t1660)
          | 3 -> (if _t1660 = Protocol.T_I64 then
              _str1659#set_modifiedTime iprot#readI64
            else
              iprot#skip _t1660)
          | 4 -> (if _t1660 = Protocol.T_I32 then
              _str1659#set_status (ContactStatus.of_i iprot#readI32)
            else
              iprot#skip _t1660)
          | 5 -> (if _t1660 = Protocol.T_I64 then
              _str1659#set_settings iprot#readI64
            else
              iprot#skip _t1660)
          | 6 -> (if _t1660 = Protocol.T_STRING then
              _str1659#set_displayNameOverridden iprot#readString
            else
              iprot#skip _t1660)
          | _ -> iprot#skip _t1660);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1659

class contactModification =
object (self)
  val mutable _type : ModificationType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "contactModification.type") | Some _x1663 -> _x1663
  method set_type _x1663 = _type <- Some _x1663
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _luid : string option = None
  method get_luid = _luid
  method grab_luid = match _luid with None->raise (Field_empty "contactModification.luid") | Some _x1664 -> _x1664
  method set_luid _x1664 = _luid <- Some _x1664
  method unset_luid = _luid <- None
  method reset_luid = _luid <- None

  val mutable _phones : string list option = None
  method get_phones = _phones
  method grab_phones = match _phones with None->raise (Field_empty "contactModification.phones") | Some _x1665 -> _x1665
  method set_phones _x1665 = _phones <- Some _x1665
  method unset_phones = _phones <- None
  method reset_phones = _phones <- None

  val mutable _emails : string list option = None
  method get_emails = _emails
  method grab_emails = match _emails with None->raise (Field_empty "contactModification.emails") | Some _x1666 -> _x1666
  method set_emails _x1666 = _emails <- Some _x1666
  method unset_emails = _emails <- None
  method reset_emails = _emails <- None

  val mutable _userids : string list option = None
  method get_userids = _userids
  method grab_userids = match _userids with None->raise (Field_empty "contactModification.userids") | Some _x1667 -> _x1667
  method set_userids _x1667 = _userids <- Some _x1667
  method unset_userids = _userids <- None
  method reset_userids = _userids <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ContactModification";
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,1);
      oprot#writeI32(ModificationType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _luid with None -> () | Some _v -> 
      oprot#writeFieldBegin("luid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _phones with None -> () | Some _v -> 
      oprot#writeFieldBegin("phones",Protocol.T_LIST,11);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter1670 ->         oprot#writeString(_iter1670);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _emails with None -> () | Some _v -> 
      oprot#writeFieldBegin("emails",Protocol.T_LIST,12);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter1671 ->         oprot#writeString(_iter1671);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _userids with None -> () | Some _v -> 
      oprot#writeFieldBegin("userids",Protocol.T_LIST,13);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter1672 ->         oprot#writeString(_iter1672);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_contactModification (iprot : Protocol.t) =
  let _str1673 = new contactModification in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1674,_id1675) = iprot#readFieldBegin in
        if _t1674 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1675 with 
          | 1 -> (if _t1674 = Protocol.T_I32 then
              _str1673#set_type (ModificationType.of_i iprot#readI32)
            else
              iprot#skip _t1674)
          | 2 -> (if _t1674 = Protocol.T_STRING then
              _str1673#set_luid iprot#readString
            else
              iprot#skip _t1674)
          | 11 -> (if _t1674 = Protocol.T_LIST then
              _str1673#set_phones 
                (let (_etype1679,_size1676) = iprot#readListBegin in
                  let _con1680 = (Array.to_list (Array.init _size1676 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con1680)
            else
              iprot#skip _t1674)
          | 12 -> (if _t1674 = Protocol.T_LIST then
              _str1673#set_emails 
                (let (_etype1684,_size1681) = iprot#readListBegin in
                  let _con1685 = (Array.to_list (Array.init _size1681 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con1685)
            else
              iprot#skip _t1674)
          | 13 -> (if _t1674 = Protocol.T_LIST then
              _str1673#set_userids 
                (let (_etype1689,_size1686) = iprot#readListBegin in
                  let _con1690 = (Array.to_list (Array.init _size1686 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con1690)
            else
              iprot#skip _t1674)
          | _ -> iprot#skip _t1674);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1673

class contactRegistration =
object (self)
  val mutable _contact : contact option = None
  method get_contact = _contact
  method grab_contact = match _contact with None->raise (Field_empty "contactRegistration.contact") | Some _x1692 -> _x1692
  method set_contact _x1692 = _contact <- Some _x1692
  method unset_contact = _contact <- None
  method reset_contact = _contact <- None

  val mutable _luid : string option = None
  method get_luid = _luid
  method grab_luid = match _luid with None->raise (Field_empty "contactRegistration.luid") | Some _x1693 -> _x1693
  method set_luid _x1693 = _luid <- Some _x1693
  method unset_luid = _luid <- None
  method reset_luid = _luid <- None

  val mutable _contactType : ContactType.t option = None
  method get_contactType = _contactType
  method grab_contactType = match _contactType with None->raise (Field_empty "contactRegistration.contactType") | Some _x1694 -> _x1694
  method set_contactType _x1694 = _contactType <- Some _x1694
  method unset_contactType = _contactType <- None
  method reset_contactType = _contactType <- None

  val mutable _contactKey : string option = None
  method get_contactKey = _contactKey
  method grab_contactKey = match _contactKey with None->raise (Field_empty "contactRegistration.contactKey") | Some _x1695 -> _x1695
  method set_contactKey _x1695 = _contactKey <- Some _x1695
  method unset_contactKey = _contactKey <- None
  method reset_contactKey = _contactKey <- None

  method copy =
      let _new = Oo.copy self in
      if _contact <> None then
        _new#set_contact self#grab_contact#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ContactRegistration";
    (match _contact with None -> () | Some _v -> 
      oprot#writeFieldBegin("contact",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _luid with None -> () | Some _v -> 
      oprot#writeFieldBegin("luid",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _contactType with None -> () | Some _v -> 
      oprot#writeFieldBegin("contactType",Protocol.T_I32,11);
      oprot#writeI32(ContactType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _contactKey with None -> () | Some _v -> 
      oprot#writeFieldBegin("contactKey",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_contactRegistration (iprot : Protocol.t) =
  let _str1698 = new contactRegistration in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1699,_id1700) = iprot#readFieldBegin in
        if _t1699 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1700 with 
          | 1 -> (if _t1699 = Protocol.T_STRUCT then
              _str1698#set_contact (read_contact iprot)
            else
              iprot#skip _t1699)
          | 10 -> (if _t1699 = Protocol.T_STRING then
              _str1698#set_luid iprot#readString
            else
              iprot#skip _t1699)
          | 11 -> (if _t1699 = Protocol.T_I32 then
              _str1698#set_contactType (ContactType.of_i iprot#readI32)
            else
              iprot#skip _t1699)
          | 12 -> (if _t1699 = Protocol.T_STRING then
              _str1698#set_contactKey iprot#readString
            else
              iprot#skip _t1699)
          | _ -> iprot#skip _t1699);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1698

class contactReport =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "contactReport.mid") | Some _x1702 -> _x1702
  method set_mid _x1702 = _mid <- Some _x1702
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _exists : bool option = None
  method get_exists = _exists
  method grab_exists = match _exists with None->raise (Field_empty "contactReport.exists") | Some _x1703 -> _x1703
  method set_exists _x1703 = _exists <- Some _x1703
  method unset_exists = _exists <- None
  method reset_exists = _exists <- None

  val mutable _contact : contact option = None
  method get_contact = _contact
  method grab_contact = match _contact with None->raise (Field_empty "contactReport.contact") | Some _x1704 -> _x1704
  method set_contact _x1704 = _contact <- Some _x1704
  method unset_contact = _contact <- None
  method reset_contact = _contact <- None

  method copy =
      let _new = Oo.copy self in
      if _contact <> None then
        _new#set_contact self#grab_contact#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ContactReport";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _exists with None -> () | Some _v -> 
      oprot#writeFieldBegin("exists",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _contact with None -> () | Some _v -> 
      oprot#writeFieldBegin("contact",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_contactReport (iprot : Protocol.t) =
  let _str1707 = new contactReport in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1708,_id1709) = iprot#readFieldBegin in
        if _t1708 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1709 with 
          | 1 -> (if _t1708 = Protocol.T_STRING then
              _str1707#set_mid iprot#readString
            else
              iprot#skip _t1708)
          | 2 -> (if _t1708 = Protocol.T_BOOL then
              _str1707#set_exists iprot#readBool
            else
              iprot#skip _t1708)
          | 3 -> (if _t1708 = Protocol.T_STRUCT then
              _str1707#set_contact (read_contact iprot)
            else
              iprot#skip _t1708)
          | _ -> iprot#skip _t1708);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1707

class contactReportResult =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "contactReportResult.mid") | Some _x1711 -> _x1711
  method set_mid _x1711 = _mid <- Some _x1711
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _exists : bool option = None
  method get_exists = _exists
  method grab_exists = match _exists with None->raise (Field_empty "contactReportResult.exists") | Some _x1712 -> _x1712
  method set_exists _x1712 = _exists <- Some _x1712
  method unset_exists = _exists <- None
  method reset_exists = _exists <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ContactReportResult";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _exists with None -> () | Some _v -> 
      oprot#writeFieldBegin("exists",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_contactReportResult (iprot : Protocol.t) =
  let _str1715 = new contactReportResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1716,_id1717) = iprot#readFieldBegin in
        if _t1716 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1717 with 
          | 1 -> (if _t1716 = Protocol.T_STRING then
              _str1715#set_mid iprot#readString
            else
              iprot#skip _t1716)
          | 2 -> (if _t1716 = Protocol.T_BOOL then
              _str1715#set_exists iprot#readBool
            else
              iprot#skip _t1716)
          | _ -> iprot#skip _t1716);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1715

class deviceInfo =
object (self)
  val mutable _deviceName : string option = None
  method get_deviceName = _deviceName
  method grab_deviceName = match _deviceName with None->raise (Field_empty "deviceInfo.deviceName") | Some _x1719 -> _x1719
  method set_deviceName _x1719 = _deviceName <- Some _x1719
  method unset_deviceName = _deviceName <- None
  method reset_deviceName = _deviceName <- None

  val mutable _systemName : string option = None
  method get_systemName = _systemName
  method grab_systemName = match _systemName with None->raise (Field_empty "deviceInfo.systemName") | Some _x1720 -> _x1720
  method set_systemName _x1720 = _systemName <- Some _x1720
  method unset_systemName = _systemName <- None
  method reset_systemName = _systemName <- None

  val mutable _systemVersion : string option = None
  method get_systemVersion = _systemVersion
  method grab_systemVersion = match _systemVersion with None->raise (Field_empty "deviceInfo.systemVersion") | Some _x1721 -> _x1721
  method set_systemVersion _x1721 = _systemVersion <- Some _x1721
  method unset_systemVersion = _systemVersion <- None
  method reset_systemVersion = _systemVersion <- None

  val mutable _model : string option = None
  method get_model = _model
  method grab_model = match _model with None->raise (Field_empty "deviceInfo.model") | Some _x1722 -> _x1722
  method set_model _x1722 = _model <- Some _x1722
  method unset_model = _model <- None
  method reset_model = _model <- None

  val mutable _carrierCode : CarrierCode.t option = None
  method get_carrierCode = _carrierCode
  method grab_carrierCode = match _carrierCode with None->raise (Field_empty "deviceInfo.carrierCode") | Some _x1723 -> _x1723
  method set_carrierCode _x1723 = _carrierCode <- Some _x1723
  method unset_carrierCode = _carrierCode <- None
  method reset_carrierCode = _carrierCode <- None

  val mutable _carrierName : string option = None
  method get_carrierName = _carrierName
  method grab_carrierName = match _carrierName with None->raise (Field_empty "deviceInfo.carrierName") | Some _x1724 -> _x1724
  method set_carrierName _x1724 = _carrierName <- Some _x1724
  method unset_carrierName = _carrierName <- None
  method reset_carrierName = _carrierName <- None

  val mutable _applicationType : ApplicationType.t option = None
  method get_applicationType = _applicationType
  method grab_applicationType = match _applicationType with None->raise (Field_empty "deviceInfo.applicationType") | Some _x1725 -> _x1725
  method set_applicationType _x1725 = _applicationType <- Some _x1725
  method unset_applicationType = _applicationType <- None
  method reset_applicationType = _applicationType <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "DeviceInfo";
    (match _deviceName with None -> () | Some _v -> 
      oprot#writeFieldBegin("deviceName",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _systemName with None -> () | Some _v -> 
      oprot#writeFieldBegin("systemName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _systemVersion with None -> () | Some _v -> 
      oprot#writeFieldBegin("systemVersion",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _model with None -> () | Some _v -> 
      oprot#writeFieldBegin("model",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _carrierCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("carrierCode",Protocol.T_I32,10);
      oprot#writeI32(CarrierCode.to_i _v);
      oprot#writeFieldEnd
    );
    (match _carrierName with None -> () | Some _v -> 
      oprot#writeFieldBegin("carrierName",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _applicationType with None -> () | Some _v -> 
      oprot#writeFieldBegin("applicationType",Protocol.T_I32,20);
      oprot#writeI32(ApplicationType.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_deviceInfo (iprot : Protocol.t) =
  let _str1728 = new deviceInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1729,_id1730) = iprot#readFieldBegin in
        if _t1729 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1730 with 
          | 1 -> (if _t1729 = Protocol.T_STRING then
              _str1728#set_deviceName iprot#readString
            else
              iprot#skip _t1729)
          | 2 -> (if _t1729 = Protocol.T_STRING then
              _str1728#set_systemName iprot#readString
            else
              iprot#skip _t1729)
          | 3 -> (if _t1729 = Protocol.T_STRING then
              _str1728#set_systemVersion iprot#readString
            else
              iprot#skip _t1729)
          | 4 -> (if _t1729 = Protocol.T_STRING then
              _str1728#set_model iprot#readString
            else
              iprot#skip _t1729)
          | 10 -> (if _t1729 = Protocol.T_I32 then
              _str1728#set_carrierCode (CarrierCode.of_i iprot#readI32)
            else
              iprot#skip _t1729)
          | 11 -> (if _t1729 = Protocol.T_STRING then
              _str1728#set_carrierName iprot#readString
            else
              iprot#skip _t1729)
          | 20 -> (if _t1729 = Protocol.T_I32 then
              _str1728#set_applicationType (ApplicationType.of_i iprot#readI32)
            else
              iprot#skip _t1729)
          | _ -> iprot#skip _t1729);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1728

class emailConfirmation =
object (self)
  val mutable _usePasswordSet : bool option = None
  method get_usePasswordSet = _usePasswordSet
  method grab_usePasswordSet = match _usePasswordSet with None->raise (Field_empty "emailConfirmation.usePasswordSet") | Some _x1732 -> _x1732
  method set_usePasswordSet _x1732 = _usePasswordSet <- Some _x1732
  method unset_usePasswordSet = _usePasswordSet <- None
  method reset_usePasswordSet = _usePasswordSet <- None

  val mutable _email : string option = None
  method get_email = _email
  method grab_email = match _email with None->raise (Field_empty "emailConfirmation.email") | Some _x1733 -> _x1733
  method set_email _x1733 = _email <- Some _x1733
  method unset_email = _email <- None
  method reset_email = _email <- None

  val mutable _password : string option = None
  method get_password = _password
  method grab_password = match _password with None->raise (Field_empty "emailConfirmation.password") | Some _x1734 -> _x1734
  method set_password _x1734 = _password <- Some _x1734
  method unset_password = _password <- None
  method reset_password = _password <- None

  val mutable _ignoreDuplication : bool option = None
  method get_ignoreDuplication = _ignoreDuplication
  method grab_ignoreDuplication = match _ignoreDuplication with None->raise (Field_empty "emailConfirmation.ignoreDuplication") | Some _x1735 -> _x1735
  method set_ignoreDuplication _x1735 = _ignoreDuplication <- Some _x1735
  method unset_ignoreDuplication = _ignoreDuplication <- None
  method reset_ignoreDuplication = _ignoreDuplication <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "EmailConfirmation";
    (match _usePasswordSet with None -> () | Some _v -> 
      oprot#writeFieldBegin("usePasswordSet",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _email with None -> () | Some _v -> 
      oprot#writeFieldBegin("email",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _password with None -> () | Some _v -> 
      oprot#writeFieldBegin("password",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _ignoreDuplication with None -> () | Some _v -> 
      oprot#writeFieldBegin("ignoreDuplication",Protocol.T_BOOL,4);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_emailConfirmation (iprot : Protocol.t) =
  let _str1738 = new emailConfirmation in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1739,_id1740) = iprot#readFieldBegin in
        if _t1739 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1740 with 
          | 1 -> (if _t1739 = Protocol.T_BOOL then
              _str1738#set_usePasswordSet iprot#readBool
            else
              iprot#skip _t1739)
          | 2 -> (if _t1739 = Protocol.T_STRING then
              _str1738#set_email iprot#readString
            else
              iprot#skip _t1739)
          | 3 -> (if _t1739 = Protocol.T_STRING then
              _str1738#set_password iprot#readString
            else
              iprot#skip _t1739)
          | 4 -> (if _t1739 = Protocol.T_BOOL then
              _str1738#set_ignoreDuplication iprot#readBool
            else
              iprot#skip _t1739)
          | _ -> iprot#skip _t1739);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1738

class emailConfirmationSession =
object (self)
  val mutable _emailConfirmationType : EmailConfirmationType.t option = None
  method get_emailConfirmationType = _emailConfirmationType
  method grab_emailConfirmationType = match _emailConfirmationType with None->raise (Field_empty "emailConfirmationSession.emailConfirmationType") | Some _x1742 -> _x1742
  method set_emailConfirmationType _x1742 = _emailConfirmationType <- Some _x1742
  method unset_emailConfirmationType = _emailConfirmationType <- None
  method reset_emailConfirmationType = _emailConfirmationType <- None

  val mutable _verifier : string option = None
  method get_verifier = _verifier
  method grab_verifier = match _verifier with None->raise (Field_empty "emailConfirmationSession.verifier") | Some _x1743 -> _x1743
  method set_verifier _x1743 = _verifier <- Some _x1743
  method unset_verifier = _verifier <- None
  method reset_verifier = _verifier <- None

  val mutable _targetEmail : string option = None
  method get_targetEmail = _targetEmail
  method grab_targetEmail = match _targetEmail with None->raise (Field_empty "emailConfirmationSession.targetEmail") | Some _x1744 -> _x1744
  method set_targetEmail _x1744 = _targetEmail <- Some _x1744
  method unset_targetEmail = _targetEmail <- None
  method reset_targetEmail = _targetEmail <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "EmailConfirmationSession";
    (match _emailConfirmationType with None -> () | Some _v -> 
      oprot#writeFieldBegin("emailConfirmationType",Protocol.T_I32,1);
      oprot#writeI32(EmailConfirmationType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _verifier with None -> () | Some _v -> 
      oprot#writeFieldBegin("verifier",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _targetEmail with None -> () | Some _v -> 
      oprot#writeFieldBegin("targetEmail",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_emailConfirmationSession (iprot : Protocol.t) =
  let _str1747 = new emailConfirmationSession in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1748,_id1749) = iprot#readFieldBegin in
        if _t1748 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1749 with 
          | 1 -> (if _t1748 = Protocol.T_I32 then
              _str1747#set_emailConfirmationType (EmailConfirmationType.of_i iprot#readI32)
            else
              iprot#skip _t1748)
          | 2 -> (if _t1748 = Protocol.T_STRING then
              _str1747#set_verifier iprot#readString
            else
              iprot#skip _t1748)
          | 3 -> (if _t1748 = Protocol.T_STRING then
              _str1747#set_targetEmail iprot#readString
            else
              iprot#skip _t1748)
          | _ -> iprot#skip _t1748);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1747

class friendChannelMatrix =
object (self)
  val mutable _channelId : string option = None
  method get_channelId = _channelId
  method grab_channelId = match _channelId with None->raise (Field_empty "friendChannelMatrix.channelId") | Some _x1751 -> _x1751
  method set_channelId _x1751 = _channelId <- Some _x1751
  method unset_channelId = _channelId <- None
  method reset_channelId = _channelId <- None

  val mutable _representMid : string option = None
  method get_representMid = _representMid
  method grab_representMid = match _representMid with None->raise (Field_empty "friendChannelMatrix.representMid") | Some _x1752 -> _x1752
  method set_representMid _x1752 = _representMid <- Some _x1752
  method unset_representMid = _representMid <- None
  method reset_representMid = _representMid <- None

  val mutable _count : Int32.t option = None
  method get_count = _count
  method grab_count = match _count with None->raise (Field_empty "friendChannelMatrix.count") | Some _x1753 -> _x1753
  method set_count _x1753 = _count <- Some _x1753
  method unset_count = _count <- None
  method reset_count = _count <- None

  val mutable _point : Int32.t option = None
  method get_point = _point
  method grab_point = match _point with None->raise (Field_empty "friendChannelMatrix.point") | Some _x1754 -> _x1754
  method set_point _x1754 = _point <- Some _x1754
  method unset_point = _point <- None
  method reset_point = _point <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "FriendChannelMatrix";
    (match _channelId with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _representMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("representMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _count with None -> () | Some _v -> 
      oprot#writeFieldBegin("count",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _point with None -> () | Some _v -> 
      oprot#writeFieldBegin("point",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_friendChannelMatrix (iprot : Protocol.t) =
  let _str1757 = new friendChannelMatrix in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1758,_id1759) = iprot#readFieldBegin in
        if _t1758 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1759 with 
          | 1 -> (if _t1758 = Protocol.T_STRING then
              _str1757#set_channelId iprot#readString
            else
              iprot#skip _t1758)
          | 2 -> (if _t1758 = Protocol.T_STRING then
              _str1757#set_representMid iprot#readString
            else
              iprot#skip _t1758)
          | 3 -> (if _t1758 = Protocol.T_I32 then
              _str1757#set_count iprot#readI32
            else
              iprot#skip _t1758)
          | 4 -> (if _t1758 = Protocol.T_I32 then
              _str1757#set_point iprot#readI32
            else
              iprot#skip _t1758)
          | _ -> iprot#skip _t1758);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1757

class friendChannelMatricesResponse =
object (self)
  val mutable _expires : Int64.t option = None
  method get_expires = _expires
  method grab_expires = match _expires with None->raise (Field_empty "friendChannelMatricesResponse.expires") | Some _x1761 -> _x1761
  method set_expires _x1761 = _expires <- Some _x1761
  method unset_expires = _expires <- None
  method reset_expires = _expires <- None

  val mutable _matrices : friendChannelMatrix list option = None
  method get_matrices = _matrices
  method grab_matrices = match _matrices with None->raise (Field_empty "friendChannelMatricesResponse.matrices") | Some _x1762 -> _x1762
  method set_matrices _x1762 = _matrices <- Some _x1762
  method unset_matrices = _matrices <- None
  method reset_matrices = _matrices <- None

  method copy =
      let _new = Oo.copy self in
      if _matrices <> None then
        _new#set_matrices (List.map (fun x -> x#copy) self#grab_matrices);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "FriendChannelMatricesResponse";
    (match _expires with None -> () | Some _v -> 
      oprot#writeFieldBegin("expires",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _matrices with None -> () | Some _v -> 
      oprot#writeFieldBegin("matrices",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1765 ->         _iter1765#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_friendChannelMatricesResponse (iprot : Protocol.t) =
  let _str1766 = new friendChannelMatricesResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1767,_id1768) = iprot#readFieldBegin in
        if _t1767 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1768 with 
          | 1 -> (if _t1767 = Protocol.T_I64 then
              _str1766#set_expires iprot#readI64
            else
              iprot#skip _t1767)
          | 2 -> (if _t1767 = Protocol.T_LIST then
              _str1766#set_matrices 
                (let (_etype1772,_size1769) = iprot#readListBegin in
                  let _con1773 = (Array.to_list (Array.init _size1769 (fun _ -> (read_friendChannelMatrix iprot)))) in
                    iprot#readListEnd; _con1773)
            else
              iprot#skip _t1767)
          | _ -> iprot#skip _t1767);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1766

class friendRequest =
object (self)
  val mutable _eMid : string option = None
  method get_eMid = _eMid
  method grab_eMid = match _eMid with None->raise (Field_empty "friendRequest.eMid") | Some _x1775 -> _x1775
  method set_eMid _x1775 = _eMid <- Some _x1775
  method unset_eMid = _eMid <- None
  method reset_eMid = _eMid <- None

  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "friendRequest.mid") | Some _x1776 -> _x1776
  method set_mid _x1776 = _mid <- Some _x1776
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _direction : FriendRequestDirection.t option = None
  method get_direction = _direction
  method grab_direction = match _direction with None->raise (Field_empty "friendRequest.direction") | Some _x1777 -> _x1777
  method set_direction _x1777 = _direction <- Some _x1777
  method unset_direction = _direction <- None
  method reset_direction = _direction <- None

  val mutable _method : FriendRequestMethod.t option = None
  method get_method = _method
  method grab_method = match _method with None->raise (Field_empty "friendRequest.method") | Some _x1778 -> _x1778
  method set_method _x1778 = _method <- Some _x1778
  method unset_method = _method <- None
  method reset_method = _method <- None

  val mutable _param : string option = None
  method get_param = _param
  method grab_param = match _param with None->raise (Field_empty "friendRequest.param") | Some _x1779 -> _x1779
  method set_param _x1779 = _param <- Some _x1779
  method unset_param = _param <- None
  method reset_param = _param <- None

  val mutable _timestamp : Int64.t option = None
  method get_timestamp = _timestamp
  method grab_timestamp = match _timestamp with None->raise (Field_empty "friendRequest.timestamp") | Some _x1780 -> _x1780
  method set_timestamp _x1780 = _timestamp <- Some _x1780
  method unset_timestamp = _timestamp <- None
  method reset_timestamp = _timestamp <- None

  val mutable _seqId : Int64.t option = None
  method get_seqId = _seqId
  method grab_seqId = match _seqId with None->raise (Field_empty "friendRequest.seqId") | Some _x1781 -> _x1781
  method set_seqId _x1781 = _seqId <- Some _x1781
  method unset_seqId = _seqId <- None
  method reset_seqId = _seqId <- None

  val mutable _displayName : string option = None
  method get_displayName = _displayName
  method grab_displayName = match _displayName with None->raise (Field_empty "friendRequest.displayName") | Some _x1782 -> _x1782
  method set_displayName _x1782 = _displayName <- Some _x1782
  method unset_displayName = _displayName <- None
  method reset_displayName = _displayName <- None

  val mutable _picturePath : string option = None
  method get_picturePath = _picturePath
  method grab_picturePath = match _picturePath with None->raise (Field_empty "friendRequest.picturePath") | Some _x1783 -> _x1783
  method set_picturePath _x1783 = _picturePath <- Some _x1783
  method unset_picturePath = _picturePath <- None
  method reset_picturePath = _picturePath <- None

  val mutable _pictureStatus : string option = None
  method get_pictureStatus = _pictureStatus
  method grab_pictureStatus = match _pictureStatus with None->raise (Field_empty "friendRequest.pictureStatus") | Some _x1784 -> _x1784
  method set_pictureStatus _x1784 = _pictureStatus <- Some _x1784
  method unset_pictureStatus = _pictureStatus <- None
  method reset_pictureStatus = _pictureStatus <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "FriendRequest";
    (match _eMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("eMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _direction with None -> () | Some _v -> 
      oprot#writeFieldBegin("direction",Protocol.T_I32,3);
      oprot#writeI32(FriendRequestDirection.to_i _v);
      oprot#writeFieldEnd
    );
    (match _method with None -> () | Some _v -> 
      oprot#writeFieldBegin("method",Protocol.T_I32,4);
      oprot#writeI32(FriendRequestMethod.to_i _v);
      oprot#writeFieldEnd
    );
    (match _param with None -> () | Some _v -> 
      oprot#writeFieldBegin("param",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _timestamp with None -> () | Some _v -> 
      oprot#writeFieldBegin("timestamp",Protocol.T_I64,6);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _seqId with None -> () | Some _v -> 
      oprot#writeFieldBegin("seqId",Protocol.T_I64,7);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _displayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayName",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _picturePath with None -> () | Some _v -> 
      oprot#writeFieldBegin("picturePath",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _pictureStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("pictureStatus",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_friendRequest (iprot : Protocol.t) =
  let _str1787 = new friendRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1788,_id1789) = iprot#readFieldBegin in
        if _t1788 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1789 with 
          | 1 -> (if _t1788 = Protocol.T_STRING then
              _str1787#set_eMid iprot#readString
            else
              iprot#skip _t1788)
          | 2 -> (if _t1788 = Protocol.T_STRING then
              _str1787#set_mid iprot#readString
            else
              iprot#skip _t1788)
          | 3 -> (if _t1788 = Protocol.T_I32 then
              _str1787#set_direction (FriendRequestDirection.of_i iprot#readI32)
            else
              iprot#skip _t1788)
          | 4 -> (if _t1788 = Protocol.T_I32 then
              _str1787#set_method (FriendRequestMethod.of_i iprot#readI32)
            else
              iprot#skip _t1788)
          | 5 -> (if _t1788 = Protocol.T_STRING then
              _str1787#set_param iprot#readString
            else
              iprot#skip _t1788)
          | 6 -> (if _t1788 = Protocol.T_I64 then
              _str1787#set_timestamp iprot#readI64
            else
              iprot#skip _t1788)
          | 7 -> (if _t1788 = Protocol.T_I64 then
              _str1787#set_seqId iprot#readI64
            else
              iprot#skip _t1788)
          | 10 -> (if _t1788 = Protocol.T_STRING then
              _str1787#set_displayName iprot#readString
            else
              iprot#skip _t1788)
          | 11 -> (if _t1788 = Protocol.T_STRING then
              _str1787#set_picturePath iprot#readString
            else
              iprot#skip _t1788)
          | 12 -> (if _t1788 = Protocol.T_STRING then
              _str1787#set_pictureStatus iprot#readString
            else
              iprot#skip _t1788)
          | _ -> iprot#skip _t1788);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1787

class friendRequestsInfo =
object (self)
  val mutable _totalIncomingCount : Int32.t option = None
  method get_totalIncomingCount = _totalIncomingCount
  method grab_totalIncomingCount = match _totalIncomingCount with None->raise (Field_empty "friendRequestsInfo.totalIncomingCount") | Some _x1791 -> _x1791
  method set_totalIncomingCount _x1791 = _totalIncomingCount <- Some _x1791
  method unset_totalIncomingCount = _totalIncomingCount <- None
  method reset_totalIncomingCount = _totalIncomingCount <- None

  val mutable _totalOutgoingCount : Int32.t option = None
  method get_totalOutgoingCount = _totalOutgoingCount
  method grab_totalOutgoingCount = match _totalOutgoingCount with None->raise (Field_empty "friendRequestsInfo.totalOutgoingCount") | Some _x1792 -> _x1792
  method set_totalOutgoingCount _x1792 = _totalOutgoingCount <- Some _x1792
  method unset_totalOutgoingCount = _totalOutgoingCount <- None
  method reset_totalOutgoingCount = _totalOutgoingCount <- None

  val mutable _recentIncomings : friendRequest list option = None
  method get_recentIncomings = _recentIncomings
  method grab_recentIncomings = match _recentIncomings with None->raise (Field_empty "friendRequestsInfo.recentIncomings") | Some _x1793 -> _x1793
  method set_recentIncomings _x1793 = _recentIncomings <- Some _x1793
  method unset_recentIncomings = _recentIncomings <- None
  method reset_recentIncomings = _recentIncomings <- None

  val mutable _recentOutgoings : friendRequest list option = None
  method get_recentOutgoings = _recentOutgoings
  method grab_recentOutgoings = match _recentOutgoings with None->raise (Field_empty "friendRequestsInfo.recentOutgoings") | Some _x1794 -> _x1794
  method set_recentOutgoings _x1794 = _recentOutgoings <- Some _x1794
  method unset_recentOutgoings = _recentOutgoings <- None
  method reset_recentOutgoings = _recentOutgoings <- None

  val mutable _totalIncomingLimit : Int32.t option = None
  method get_totalIncomingLimit = _totalIncomingLimit
  method grab_totalIncomingLimit = match _totalIncomingLimit with None->raise (Field_empty "friendRequestsInfo.totalIncomingLimit") | Some _x1795 -> _x1795
  method set_totalIncomingLimit _x1795 = _totalIncomingLimit <- Some _x1795
  method unset_totalIncomingLimit = _totalIncomingLimit <- None
  method reset_totalIncomingLimit = _totalIncomingLimit <- None

  val mutable _totalOutgoingLimit : Int32.t option = None
  method get_totalOutgoingLimit = _totalOutgoingLimit
  method grab_totalOutgoingLimit = match _totalOutgoingLimit with None->raise (Field_empty "friendRequestsInfo.totalOutgoingLimit") | Some _x1796 -> _x1796
  method set_totalOutgoingLimit _x1796 = _totalOutgoingLimit <- Some _x1796
  method unset_totalOutgoingLimit = _totalOutgoingLimit <- None
  method reset_totalOutgoingLimit = _totalOutgoingLimit <- None

  method copy =
      let _new = Oo.copy self in
      if _recentIncomings <> None then
        _new#set_recentIncomings (List.map (fun x -> x#copy) self#grab_recentIncomings);
      if _recentOutgoings <> None then
        _new#set_recentOutgoings (List.map (fun x -> x#copy) self#grab_recentOutgoings);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "FriendRequestsInfo";
    (match _totalIncomingCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("totalIncomingCount",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _totalOutgoingCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("totalOutgoingCount",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _recentIncomings with None -> () | Some _v -> 
      oprot#writeFieldBegin("recentIncomings",Protocol.T_LIST,3);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1799 ->         _iter1799#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _recentOutgoings with None -> () | Some _v -> 
      oprot#writeFieldBegin("recentOutgoings",Protocol.T_LIST,4);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1800 ->         _iter1800#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _totalIncomingLimit with None -> () | Some _v -> 
      oprot#writeFieldBegin("totalIncomingLimit",Protocol.T_I32,5);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _totalOutgoingLimit with None -> () | Some _v -> 
      oprot#writeFieldBegin("totalOutgoingLimit",Protocol.T_I32,6);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_friendRequestsInfo (iprot : Protocol.t) =
  let _str1801 = new friendRequestsInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1802,_id1803) = iprot#readFieldBegin in
        if _t1802 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1803 with 
          | 1 -> (if _t1802 = Protocol.T_I32 then
              _str1801#set_totalIncomingCount iprot#readI32
            else
              iprot#skip _t1802)
          | 2 -> (if _t1802 = Protocol.T_I32 then
              _str1801#set_totalOutgoingCount iprot#readI32
            else
              iprot#skip _t1802)
          | 3 -> (if _t1802 = Protocol.T_LIST then
              _str1801#set_recentIncomings 
                (let (_etype1807,_size1804) = iprot#readListBegin in
                  let _con1808 = (Array.to_list (Array.init _size1804 (fun _ -> (read_friendRequest iprot)))) in
                    iprot#readListEnd; _con1808)
            else
              iprot#skip _t1802)
          | 4 -> (if _t1802 = Protocol.T_LIST then
              _str1801#set_recentOutgoings 
                (let (_etype1812,_size1809) = iprot#readListBegin in
                  let _con1813 = (Array.to_list (Array.init _size1809 (fun _ -> (read_friendRequest iprot)))) in
                    iprot#readListEnd; _con1813)
            else
              iprot#skip _t1802)
          | 5 -> (if _t1802 = Protocol.T_I32 then
              _str1801#set_totalIncomingLimit iprot#readI32
            else
              iprot#skip _t1802)
          | 6 -> (if _t1802 = Protocol.T_I32 then
              _str1801#set_totalOutgoingLimit iprot#readI32
            else
              iprot#skip _t1802)
          | _ -> iprot#skip _t1802);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1801

class geolocation =
object (self)
  val mutable _longitude : float option = None
  method get_longitude = _longitude
  method grab_longitude = match _longitude with None->raise (Field_empty "geolocation.longitude") | Some _x1815 -> _x1815
  method set_longitude _x1815 = _longitude <- Some _x1815
  method unset_longitude = _longitude <- None
  method reset_longitude = _longitude <- None

  val mutable _latitude : float option = None
  method get_latitude = _latitude
  method grab_latitude = match _latitude with None->raise (Field_empty "geolocation.latitude") | Some _x1816 -> _x1816
  method set_latitude _x1816 = _latitude <- Some _x1816
  method unset_latitude = _latitude <- None
  method reset_latitude = _latitude <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Geolocation";
    (match _longitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("longitude",Protocol.T_DOUBLE,1);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _latitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("latitude",Protocol.T_DOUBLE,2);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_geolocation (iprot : Protocol.t) =
  let _str1819 = new geolocation in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1820,_id1821) = iprot#readFieldBegin in
        if _t1820 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1821 with 
          | 1 -> (if _t1820 = Protocol.T_DOUBLE then
              _str1819#set_longitude iprot#readDouble
            else
              iprot#skip _t1820)
          | 2 -> (if _t1820 = Protocol.T_DOUBLE then
              _str1819#set_latitude iprot#readDouble
            else
              iprot#skip _t1820)
          | _ -> iprot#skip _t1820);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1819

class notificationTarget =
object (self)
  val mutable _applicationType : string option = None
  method get_applicationType = _applicationType
  method grab_applicationType = match _applicationType with None->raise (Field_empty "notificationTarget.applicationType") | Some _x1823 -> _x1823
  method set_applicationType _x1823 = _applicationType <- Some _x1823
  method unset_applicationType = _applicationType <- None
  method reset_applicationType = _applicationType <- None

  val mutable _applicationVersion : string option = None
  method get_applicationVersion = _applicationVersion
  method grab_applicationVersion = match _applicationVersion with None->raise (Field_empty "notificationTarget.applicationVersion") | Some _x1824 -> _x1824
  method set_applicationVersion _x1824 = _applicationVersion <- Some _x1824
  method unset_applicationVersion = _applicationVersion <- None
  method reset_applicationVersion = _applicationVersion <- None

  val mutable _region : string option = None
  method get_region = _region
  method grab_region = match _region with None->raise (Field_empty "notificationTarget.region") | Some _x1825 -> _x1825
  method set_region _x1825 = _region <- Some _x1825
  method unset_region = _region <- None
  method reset_region = _region <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "NotificationTarget";
    (match _applicationType with None -> () | Some _v -> 
      oprot#writeFieldBegin("applicationType",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _applicationVersion with None -> () | Some _v -> 
      oprot#writeFieldBegin("applicationVersion",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _region with None -> () | Some _v -> 
      oprot#writeFieldBegin("region",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_notificationTarget (iprot : Protocol.t) =
  let _str1828 = new notificationTarget in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1829,_id1830) = iprot#readFieldBegin in
        if _t1829 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1830 with 
          | 1 -> (if _t1829 = Protocol.T_STRING then
              _str1828#set_applicationType iprot#readString
            else
              iprot#skip _t1829)
          | 2 -> (if _t1829 = Protocol.T_STRING then
              _str1828#set_applicationVersion iprot#readString
            else
              iprot#skip _t1829)
          | 3 -> (if _t1829 = Protocol.T_STRING then
              _str1828#set_region iprot#readString
            else
              iprot#skip _t1829)
          | _ -> iprot#skip _t1829);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1828

class globalEvent =
object (self)
  val mutable _key : string option = None
  method get_key = _key
  method grab_key = match _key with None->raise (Field_empty "globalEvent.key") | Some _x1832 -> _x1832
  method set_key _x1832 = _key <- Some _x1832
  method unset_key = _key <- None
  method reset_key = _key <- None

  val mutable _targets : notificationTarget list option = None
  method get_targets = _targets
  method grab_targets = match _targets with None->raise (Field_empty "globalEvent.targets") | Some _x1833 -> _x1833
  method set_targets _x1833 = _targets <- Some _x1833
  method unset_targets = _targets <- None
  method reset_targets = _targets <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "globalEvent.createdTime") | Some _x1834 -> _x1834
  method set_createdTime _x1834 = _createdTime <- Some _x1834
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _data : Int64.t option = None
  method get_data = _data
  method grab_data = match _data with None->raise (Field_empty "globalEvent.data") | Some _x1835 -> _x1835
  method set_data _x1835 = _data <- Some _x1835
  method unset_data = _data <- None
  method reset_data = _data <- None

  val mutable _maxDelay : Int32.t option = None
  method get_maxDelay = _maxDelay
  method grab_maxDelay = match _maxDelay with None->raise (Field_empty "globalEvent.maxDelay") | Some _x1836 -> _x1836
  method set_maxDelay _x1836 = _maxDelay <- Some _x1836
  method unset_maxDelay = _maxDelay <- None
  method reset_maxDelay = _maxDelay <- None

  method copy =
      let _new = Oo.copy self in
      if _targets <> None then
        _new#set_targets (List.map (fun x -> x#copy) self#grab_targets);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GlobalEvent";
    (match _key with None -> () | Some _v -> 
      oprot#writeFieldBegin("key",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _targets with None -> () | Some _v -> 
      oprot#writeFieldBegin("targets",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1839 ->         _iter1839#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _data with None -> () | Some _v -> 
      oprot#writeFieldBegin("data",Protocol.T_I64,4);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _maxDelay with None -> () | Some _v -> 
      oprot#writeFieldBegin("maxDelay",Protocol.T_I32,5);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_globalEvent (iprot : Protocol.t) =
  let _str1840 = new globalEvent in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1841,_id1842) = iprot#readFieldBegin in
        if _t1841 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1842 with 
          | 1 -> (if _t1841 = Protocol.T_STRING then
              _str1840#set_key iprot#readString
            else
              iprot#skip _t1841)
          | 2 -> (if _t1841 = Protocol.T_LIST then
              _str1840#set_targets 
                (let (_etype1846,_size1843) = iprot#readListBegin in
                  let _con1847 = (Array.to_list (Array.init _size1843 (fun _ -> (read_notificationTarget iprot)))) in
                    iprot#readListEnd; _con1847)
            else
              iprot#skip _t1841)
          | 3 -> (if _t1841 = Protocol.T_I64 then
              _str1840#set_createdTime iprot#readI64
            else
              iprot#skip _t1841)
          | 4 -> (if _t1841 = Protocol.T_I64 then
              _str1840#set_data iprot#readI64
            else
              iprot#skip _t1841)
          | 5 -> (if _t1841 = Protocol.T_I32 then
              _str1840#set_maxDelay iprot#readI32
            else
              iprot#skip _t1841)
          | _ -> iprot#skip _t1841);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1840

class groupPreference =
object (self)
  val mutable _invitationTicket : string option = None
  method get_invitationTicket = _invitationTicket
  method grab_invitationTicket = match _invitationTicket with None->raise (Field_empty "groupPreference.invitationTicket") | Some _x1849 -> _x1849
  method set_invitationTicket _x1849 = _invitationTicket <- Some _x1849
  method unset_invitationTicket = _invitationTicket <- None
  method reset_invitationTicket = _invitationTicket <- None

  val mutable _favoriteTimestamp : Int64.t option = None
  method get_favoriteTimestamp = _favoriteTimestamp
  method grab_favoriteTimestamp = match _favoriteTimestamp with None->raise (Field_empty "groupPreference.favoriteTimestamp") | Some _x1850 -> _x1850
  method set_favoriteTimestamp _x1850 = _favoriteTimestamp <- Some _x1850
  method unset_favoriteTimestamp = _favoriteTimestamp <- None
  method reset_favoriteTimestamp = _favoriteTimestamp <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GroupPreference";
    (match _invitationTicket with None -> () | Some _v -> 
      oprot#writeFieldBegin("invitationTicket",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _favoriteTimestamp with None -> () | Some _v -> 
      oprot#writeFieldBegin("favoriteTimestamp",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_groupPreference (iprot : Protocol.t) =
  let _str1853 = new groupPreference in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1854,_id1855) = iprot#readFieldBegin in
        if _t1854 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1855 with 
          | 1 -> (if _t1854 = Protocol.T_STRING then
              _str1853#set_invitationTicket iprot#readString
            else
              iprot#skip _t1854)
          | 2 -> (if _t1854 = Protocol.T_I64 then
              _str1853#set_favoriteTimestamp iprot#readI64
            else
              iprot#skip _t1854)
          | _ -> iprot#skip _t1854);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1853

class group =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "group.id") | Some _x1857 -> _x1857
  method set_id _x1857 = _id <- Some _x1857
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "group.createdTime") | Some _x1858 -> _x1858
  method set_createdTime _x1858 = _createdTime <- Some _x1858
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "group.name") | Some _x1859 -> _x1859
  method set_name _x1859 = _name <- Some _x1859
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _pictureStatus : string option = None
  method get_pictureStatus = _pictureStatus
  method grab_pictureStatus = match _pictureStatus with None->raise (Field_empty "group.pictureStatus") | Some _x1860 -> _x1860
  method set_pictureStatus _x1860 = _pictureStatus <- Some _x1860
  method unset_pictureStatus = _pictureStatus <- None
  method reset_pictureStatus = _pictureStatus <- None

  val mutable _preventedJoinByTicket : bool option = None
  method get_preventedJoinByTicket = _preventedJoinByTicket
  method grab_preventedJoinByTicket = match _preventedJoinByTicket with None->raise (Field_empty "group.preventedJoinByTicket") | Some _x1861 -> _x1861
  method set_preventedJoinByTicket _x1861 = _preventedJoinByTicket <- Some _x1861
  method unset_preventedJoinByTicket = _preventedJoinByTicket <- None
  method reset_preventedJoinByTicket = _preventedJoinByTicket <- None

  val mutable _groupPreference : groupPreference option = None
  method get_groupPreference = _groupPreference
  method grab_groupPreference = match _groupPreference with None->raise (Field_empty "group.groupPreference") | Some _x1862 -> _x1862
  method set_groupPreference _x1862 = _groupPreference <- Some _x1862
  method unset_groupPreference = _groupPreference <- None
  method reset_groupPreference = _groupPreference <- None

  val mutable _members : contact list option = None
  method get_members = _members
  method grab_members = match _members with None->raise (Field_empty "group.members") | Some _x1863 -> _x1863
  method set_members _x1863 = _members <- Some _x1863
  method unset_members = _members <- None
  method reset_members = _members <- None

  val mutable _creator : contact option = None
  method get_creator = _creator
  method grab_creator = match _creator with None->raise (Field_empty "group.creator") | Some _x1864 -> _x1864
  method set_creator _x1864 = _creator <- Some _x1864
  method unset_creator = _creator <- None
  method reset_creator = _creator <- None

  val mutable _invitee : contact list option = None
  method get_invitee = _invitee
  method grab_invitee = match _invitee with None->raise (Field_empty "group.invitee") | Some _x1865 -> _x1865
  method set_invitee _x1865 = _invitee <- Some _x1865
  method unset_invitee = _invitee <- None
  method reset_invitee = _invitee <- None

  val mutable _notificationDisabled : bool option = None
  method get_notificationDisabled = _notificationDisabled
  method grab_notificationDisabled = match _notificationDisabled with None->raise (Field_empty "group.notificationDisabled") | Some _x1866 -> _x1866
  method set_notificationDisabled _x1866 = _notificationDisabled <- Some _x1866
  method unset_notificationDisabled = _notificationDisabled <- None
  method reset_notificationDisabled = _notificationDisabled <- None

  val mutable _picturePath : string option = None
  method get_picturePath = _picturePath
  method grab_picturePath = match _picturePath with None->raise (Field_empty "group.picturePath") | Some _x1867 -> _x1867
  method set_picturePath _x1867 = _picturePath <- Some _x1867
  method unset_picturePath = _picturePath <- None
  method reset_picturePath = _picturePath <- None

  val mutable _memberMids : string list option = None
  method get_memberMids = _memberMids
  method grab_memberMids = match _memberMids with None->raise (Field_empty "group.memberMids") | Some _x1868 -> _x1868
  method set_memberMids _x1868 = _memberMids <- Some _x1868
  method unset_memberMids = _memberMids <- None
  method reset_memberMids = _memberMids <- None

  val mutable _inviteeMids : string list option = None
  method get_inviteeMids = _inviteeMids
  method grab_inviteeMids = match _inviteeMids with None->raise (Field_empty "group.inviteeMids") | Some _x1869 -> _x1869
  method set_inviteeMids _x1869 = _inviteeMids <- Some _x1869
  method unset_inviteeMids = _inviteeMids <- None
  method reset_inviteeMids = _inviteeMids <- None

  method copy =
      let _new = Oo.copy self in
      if _groupPreference <> None then
        _new#set_groupPreference self#grab_groupPreference#copy;
      if _members <> None then
        _new#set_members (List.map (fun x -> x#copy) self#grab_members);
      if _creator <> None then
        _new#set_creator self#grab_creator#copy;
      if _invitee <> None then
        _new#set_invitee (List.map (fun x -> x#copy) self#grab_invitee);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Group";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _pictureStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("pictureStatus",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _preventedJoinByTicket with None -> () | Some _v -> 
      oprot#writeFieldBegin("preventedJoinByTicket",Protocol.T_BOOL,12);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _groupPreference with None -> () | Some _v -> 
      oprot#writeFieldBegin("groupPreference",Protocol.T_STRUCT,13);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _members with None -> () | Some _v -> 
      oprot#writeFieldBegin("members",Protocol.T_LIST,20);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1872 ->         _iter1872#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _creator with None -> () | Some _v -> 
      oprot#writeFieldBegin("creator",Protocol.T_STRUCT,21);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _invitee with None -> () | Some _v -> 
      oprot#writeFieldBegin("invitee",Protocol.T_LIST,22);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1873 ->         _iter1873#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _notificationDisabled with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationDisabled",Protocol.T_BOOL,31);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _picturePath with None -> () | Some _v -> 
      oprot#writeFieldBegin("picturePath",Protocol.T_STRING,32);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _memberMids with None -> () | Some _v -> 
      oprot#writeFieldBegin("memberMids",Protocol.T_LIST,40);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter1874 ->         oprot#writeString(_iter1874);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _inviteeMids with None -> () | Some _v -> 
      oprot#writeFieldBegin("inviteeMids",Protocol.T_LIST,41);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter1875 ->         oprot#writeString(_iter1875);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_group (iprot : Protocol.t) =
  let _str1876 = new group in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1877,_id1878) = iprot#readFieldBegin in
        if _t1877 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1878 with 
          | 1 -> (if _t1877 = Protocol.T_STRING then
              _str1876#set_id iprot#readString
            else
              iprot#skip _t1877)
          | 2 -> (if _t1877 = Protocol.T_I64 then
              _str1876#set_createdTime iprot#readI64
            else
              iprot#skip _t1877)
          | 10 -> (if _t1877 = Protocol.T_STRING then
              _str1876#set_name iprot#readString
            else
              iprot#skip _t1877)
          | 11 -> (if _t1877 = Protocol.T_STRING then
              _str1876#set_pictureStatus iprot#readString
            else
              iprot#skip _t1877)
          | 12 -> (if _t1877 = Protocol.T_BOOL then
              _str1876#set_preventedJoinByTicket iprot#readBool
            else
              iprot#skip _t1877)
          | 13 -> (if _t1877 = Protocol.T_STRUCT then
              _str1876#set_groupPreference (read_groupPreference iprot)
            else
              iprot#skip _t1877)
          | 20 -> (if _t1877 = Protocol.T_LIST then
              _str1876#set_members 
                (let (_etype1882,_size1879) = iprot#readListBegin in
                  let _con1883 = (Array.to_list (Array.init _size1879 (fun _ -> (read_contact iprot)))) in
                    iprot#readListEnd; _con1883)
            else
              iprot#skip _t1877)
          | 21 -> (if _t1877 = Protocol.T_STRUCT then
              _str1876#set_creator (read_contact iprot)
            else
              iprot#skip _t1877)
          | 22 -> (if _t1877 = Protocol.T_LIST then
              _str1876#set_invitee 
                (let (_etype1887,_size1884) = iprot#readListBegin in
                  let _con1888 = (Array.to_list (Array.init _size1884 (fun _ -> (read_contact iprot)))) in
                    iprot#readListEnd; _con1888)
            else
              iprot#skip _t1877)
          | 31 -> (if _t1877 = Protocol.T_BOOL then
              _str1876#set_notificationDisabled iprot#readBool
            else
              iprot#skip _t1877)
          | 32 -> (if _t1877 = Protocol.T_STRING then
              _str1876#set_picturePath iprot#readString
            else
              iprot#skip _t1877)
          | 40 -> (if _t1877 = Protocol.T_LIST then
              _str1876#set_memberMids 
                (let (_etype1892,_size1889) = iprot#readListBegin in
                  let _con1893 = (Array.to_list (Array.init _size1889 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con1893)
            else
              iprot#skip _t1877)
          | 41 -> (if _t1877 = Protocol.T_LIST then
              _str1876#set_inviteeMids 
                (let (_etype1897,_size1894) = iprot#readListBegin in
                  let _con1898 = (Array.to_list (Array.init _size1894 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con1898)
            else
              iprot#skip _t1877)
          | _ -> iprot#skip _t1877);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1876

class identityCredential =
object (self)
  val mutable _provider : IdentityProvider.t option = None
  method get_provider = _provider
  method grab_provider = match _provider with None->raise (Field_empty "identityCredential.provider") | Some _x1900 -> _x1900
  method set_provider _x1900 = _provider <- Some _x1900
  method unset_provider = _provider <- None
  method reset_provider = _provider <- None

  val mutable _identifier : string option = None
  method get_identifier = _identifier
  method grab_identifier = match _identifier with None->raise (Field_empty "identityCredential.identifier") | Some _x1901 -> _x1901
  method set_identifier _x1901 = _identifier <- Some _x1901
  method unset_identifier = _identifier <- None
  method reset_identifier = _identifier <- None

  val mutable _password : string option = None
  method get_password = _password
  method grab_password = match _password with None->raise (Field_empty "identityCredential.password") | Some _x1902 -> _x1902
  method set_password _x1902 = _password <- Some _x1902
  method unset_password = _password <- None
  method reset_password = _password <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "IdentityCredential";
    (match _provider with None -> () | Some _v -> 
      oprot#writeFieldBegin("provider",Protocol.T_I32,1);
      oprot#writeI32(IdentityProvider.to_i _v);
      oprot#writeFieldEnd
    );
    (match _identifier with None -> () | Some _v -> 
      oprot#writeFieldBegin("identifier",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _password with None -> () | Some _v -> 
      oprot#writeFieldBegin("password",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_identityCredential (iprot : Protocol.t) =
  let _str1905 = new identityCredential in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1906,_id1907) = iprot#readFieldBegin in
        if _t1906 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1907 with 
          | 1 -> (if _t1906 = Protocol.T_I32 then
              _str1905#set_provider (IdentityProvider.of_i iprot#readI32)
            else
              iprot#skip _t1906)
          | 2 -> (if _t1906 = Protocol.T_STRING then
              _str1905#set_identifier iprot#readString
            else
              iprot#skip _t1906)
          | 3 -> (if _t1906 = Protocol.T_STRING then
              _str1905#set_password iprot#readString
            else
              iprot#skip _t1906)
          | _ -> iprot#skip _t1906);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1905

class lastReadMessageId =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "lastReadMessageId.mid") | Some _x1909 -> _x1909
  method set_mid _x1909 = _mid <- Some _x1909
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _lastReadMessageId : string option = None
  method get_lastReadMessageId = _lastReadMessageId
  method grab_lastReadMessageId = match _lastReadMessageId with None->raise (Field_empty "lastReadMessageId.lastReadMessageId") | Some _x1910 -> _x1910
  method set_lastReadMessageId _x1910 = _lastReadMessageId <- Some _x1910
  method unset_lastReadMessageId = _lastReadMessageId <- None
  method reset_lastReadMessageId = _lastReadMessageId <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "LastReadMessageId";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _lastReadMessageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("lastReadMessageId",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_lastReadMessageId (iprot : Protocol.t) =
  let _str1913 = new lastReadMessageId in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1914,_id1915) = iprot#readFieldBegin in
        if _t1914 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1915 with 
          | 1 -> (if _t1914 = Protocol.T_STRING then
              _str1913#set_mid iprot#readString
            else
              iprot#skip _t1914)
          | 2 -> (if _t1914 = Protocol.T_STRING then
              _str1913#set_lastReadMessageId iprot#readString
            else
              iprot#skip _t1914)
          | _ -> iprot#skip _t1914);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1913

class lastReadMessageIds =
object (self)
  val mutable _chatId : string option = None
  method get_chatId = _chatId
  method grab_chatId = match _chatId with None->raise (Field_empty "lastReadMessageIds.chatId") | Some _x1917 -> _x1917
  method set_chatId _x1917 = _chatId <- Some _x1917
  method unset_chatId = _chatId <- None
  method reset_chatId = _chatId <- None

  val mutable _lastReadMessageIds : lastReadMessageId list option = None
  method get_lastReadMessageIds = _lastReadMessageIds
  method grab_lastReadMessageIds = match _lastReadMessageIds with None->raise (Field_empty "lastReadMessageIds.lastReadMessageIds") | Some _x1918 -> _x1918
  method set_lastReadMessageIds _x1918 = _lastReadMessageIds <- Some _x1918
  method unset_lastReadMessageIds = _lastReadMessageIds <- None
  method reset_lastReadMessageIds = _lastReadMessageIds <- None

  method copy =
      let _new = Oo.copy self in
      if _lastReadMessageIds <> None then
        _new#set_lastReadMessageIds (List.map (fun x -> x#copy) self#grab_lastReadMessageIds);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "LastReadMessageIds";
    (match _chatId with None -> () | Some _v -> 
      oprot#writeFieldBegin("chatId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _lastReadMessageIds with None -> () | Some _v -> 
      oprot#writeFieldBegin("lastReadMessageIds",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter1921 ->         _iter1921#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_lastReadMessageIds (iprot : Protocol.t) =
  let _str1922 = new lastReadMessageIds in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1923,_id1924) = iprot#readFieldBegin in
        if _t1923 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1924 with 
          | 1 -> (if _t1923 = Protocol.T_STRING then
              _str1922#set_chatId iprot#readString
            else
              iprot#skip _t1923)
          | 2 -> (if _t1923 = Protocol.T_LIST then
              _str1922#set_lastReadMessageIds 
                (let (_etype1928,_size1925) = iprot#readListBegin in
                  let _con1929 = (Array.to_list (Array.init _size1925 (fun _ -> (read_lastReadMessageId iprot)))) in
                    iprot#readListEnd; _con1929)
            else
              iprot#skip _t1923)
          | _ -> iprot#skip _t1923);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1922

class verificationSessionData =
object (self)
  val mutable _sessionId : string option = None
  method get_sessionId = _sessionId
  method grab_sessionId = match _sessionId with None->raise (Field_empty "verificationSessionData.sessionId") | Some _x1931 -> _x1931
  method set_sessionId _x1931 = _sessionId <- Some _x1931
  method unset_sessionId = _sessionId <- None
  method reset_sessionId = _sessionId <- None

  val mutable _method : VerificationMethod.t option = None
  method get_method = _method
  method grab_method = match _method with None->raise (Field_empty "verificationSessionData.method") | Some _x1932 -> _x1932
  method set_method _x1932 = _method <- Some _x1932
  method unset_method = _method <- None
  method reset_method = _method <- None

  val mutable _callback : string option = None
  method get_callback = _callback
  method grab_callback = match _callback with None->raise (Field_empty "verificationSessionData.callback") | Some _x1933 -> _x1933
  method set_callback _x1933 = _callback <- Some _x1933
  method unset_callback = _callback <- None
  method reset_callback = _callback <- None

  val mutable _normalizedPhone : string option = None
  method get_normalizedPhone = _normalizedPhone
  method grab_normalizedPhone = match _normalizedPhone with None->raise (Field_empty "verificationSessionData.normalizedPhone") | Some _x1934 -> _x1934
  method set_normalizedPhone _x1934 = _normalizedPhone <- Some _x1934
  method unset_normalizedPhone = _normalizedPhone <- None
  method reset_normalizedPhone = _normalizedPhone <- None

  val mutable _countryCode : string option = None
  method get_countryCode = _countryCode
  method grab_countryCode = match _countryCode with None->raise (Field_empty "verificationSessionData.countryCode") | Some _x1935 -> _x1935
  method set_countryCode _x1935 = _countryCode <- Some _x1935
  method unset_countryCode = _countryCode <- None
  method reset_countryCode = _countryCode <- None

  val mutable _nationalSignificantNumber : string option = None
  method get_nationalSignificantNumber = _nationalSignificantNumber
  method grab_nationalSignificantNumber = match _nationalSignificantNumber with None->raise (Field_empty "verificationSessionData.nationalSignificantNumber") | Some _x1936 -> _x1936
  method set_nationalSignificantNumber _x1936 = _nationalSignificantNumber <- Some _x1936
  method unset_nationalSignificantNumber = _nationalSignificantNumber <- None
  method reset_nationalSignificantNumber = _nationalSignificantNumber <- None

  val mutable _availableVerificationMethods : VerificationMethod.t list option = None
  method get_availableVerificationMethods = _availableVerificationMethods
  method grab_availableVerificationMethods = match _availableVerificationMethods with None->raise (Field_empty "verificationSessionData.availableVerificationMethods") | Some _x1937 -> _x1937
  method set_availableVerificationMethods _x1937 = _availableVerificationMethods <- Some _x1937
  method unset_availableVerificationMethods = _availableVerificationMethods <- None
  method reset_availableVerificationMethods = _availableVerificationMethods <- None

  val mutable _callerIdMask : string option = None
  method get_callerIdMask = _callerIdMask
  method grab_callerIdMask = match _callerIdMask with None->raise (Field_empty "verificationSessionData.callerIdMask") | Some _x1938 -> _x1938
  method set_callerIdMask _x1938 = _callerIdMask <- Some _x1938
  method unset_callerIdMask = _callerIdMask <- None
  method reset_callerIdMask = _callerIdMask <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "VerificationSessionData";
    (match _sessionId with None -> () | Some _v -> 
      oprot#writeFieldBegin("sessionId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _method with None -> () | Some _v -> 
      oprot#writeFieldBegin("method",Protocol.T_I32,2);
      oprot#writeI32(VerificationMethod.to_i _v);
      oprot#writeFieldEnd
    );
    (match _callback with None -> () | Some _v -> 
      oprot#writeFieldBegin("callback",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _normalizedPhone with None -> () | Some _v -> 
      oprot#writeFieldBegin("normalizedPhone",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _countryCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("countryCode",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _nationalSignificantNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("nationalSignificantNumber",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _availableVerificationMethods with None -> () | Some _v -> 
      oprot#writeFieldBegin("availableVerificationMethods",Protocol.T_LIST,7);
      oprot#writeListBegin(Protocol.T_I32,List.length _v);
      List.iter (fun _iter1941 ->         oprot#writeI32(VerificationMethod.to_i _iter1941);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _callerIdMask with None -> () | Some _v -> 
      oprot#writeFieldBegin("callerIdMask",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_verificationSessionData (iprot : Protocol.t) =
  let _str1942 = new verificationSessionData in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1943,_id1944) = iprot#readFieldBegin in
        if _t1943 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1944 with 
          | 1 -> (if _t1943 = Protocol.T_STRING then
              _str1942#set_sessionId iprot#readString
            else
              iprot#skip _t1943)
          | 2 -> (if _t1943 = Protocol.T_I32 then
              _str1942#set_method (VerificationMethod.of_i iprot#readI32)
            else
              iprot#skip _t1943)
          | 3 -> (if _t1943 = Protocol.T_STRING then
              _str1942#set_callback iprot#readString
            else
              iprot#skip _t1943)
          | 4 -> (if _t1943 = Protocol.T_STRING then
              _str1942#set_normalizedPhone iprot#readString
            else
              iprot#skip _t1943)
          | 5 -> (if _t1943 = Protocol.T_STRING then
              _str1942#set_countryCode iprot#readString
            else
              iprot#skip _t1943)
          | 6 -> (if _t1943 = Protocol.T_STRING then
              _str1942#set_nationalSignificantNumber iprot#readString
            else
              iprot#skip _t1943)
          | 7 -> (if _t1943 = Protocol.T_LIST then
              _str1942#set_availableVerificationMethods 
                (let (_etype1948,_size1945) = iprot#readListBegin in
                  let _con1949 = (Array.to_list (Array.init _size1945 (fun _ -> (VerificationMethod.of_i iprot#readI32)))) in
                    iprot#readListEnd; _con1949)
            else
              iprot#skip _t1943)
          | 8 -> (if _t1943 = Protocol.T_STRING then
              _str1942#set_callerIdMask iprot#readString
            else
              iprot#skip _t1943)
          | _ -> iprot#skip _t1943);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1942

class loginResult =
object (self)
  val mutable _authToken : string option = None
  method get_authToken = _authToken
  method grab_authToken = match _authToken with None->raise (Field_empty "loginResult.authToken") | Some _x1951 -> _x1951
  method set_authToken _x1951 = _authToken <- Some _x1951
  method unset_authToken = _authToken <- None
  method reset_authToken = _authToken <- None

  val mutable _certificate : string option = None
  method get_certificate = _certificate
  method grab_certificate = match _certificate with None->raise (Field_empty "loginResult.certificate") | Some _x1952 -> _x1952
  method set_certificate _x1952 = _certificate <- Some _x1952
  method unset_certificate = _certificate <- None
  method reset_certificate = _certificate <- None

  val mutable _verifier : string option = None
  method get_verifier = _verifier
  method grab_verifier = match _verifier with None->raise (Field_empty "loginResult.verifier") | Some _x1953 -> _x1953
  method set_verifier _x1953 = _verifier <- Some _x1953
  method unset_verifier = _verifier <- None
  method reset_verifier = _verifier <- None

  val mutable _pinCode : string option = None
  method get_pinCode = _pinCode
  method grab_pinCode = match _pinCode with None->raise (Field_empty "loginResult.pinCode") | Some _x1954 -> _x1954
  method set_pinCode _x1954 = _pinCode <- Some _x1954
  method unset_pinCode = _pinCode <- None
  method reset_pinCode = _pinCode <- None

  val mutable _type : LoginResultType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "loginResult.type") | Some _x1955 -> _x1955
  method set_type _x1955 = _type <- Some _x1955
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _lastPrimaryBindTime : Int64.t option = None
  method get_lastPrimaryBindTime = _lastPrimaryBindTime
  method grab_lastPrimaryBindTime = match _lastPrimaryBindTime with None->raise (Field_empty "loginResult.lastPrimaryBindTime") | Some _x1956 -> _x1956
  method set_lastPrimaryBindTime _x1956 = _lastPrimaryBindTime <- Some _x1956
  method unset_lastPrimaryBindTime = _lastPrimaryBindTime <- None
  method reset_lastPrimaryBindTime = _lastPrimaryBindTime <- None

  val mutable _displayMessage : string option = None
  method get_displayMessage = _displayMessage
  method grab_displayMessage = match _displayMessage with None->raise (Field_empty "loginResult.displayMessage") | Some _x1957 -> _x1957
  method set_displayMessage _x1957 = _displayMessage <- Some _x1957
  method unset_displayMessage = _displayMessage <- None
  method reset_displayMessage = _displayMessage <- None

  val mutable _sessionForSMSConfirm : verificationSessionData option = None
  method get_sessionForSMSConfirm = _sessionForSMSConfirm
  method grab_sessionForSMSConfirm = match _sessionForSMSConfirm with None->raise (Field_empty "loginResult.sessionForSMSConfirm") | Some _x1958 -> _x1958
  method set_sessionForSMSConfirm _x1958 = _sessionForSMSConfirm <- Some _x1958
  method unset_sessionForSMSConfirm = _sessionForSMSConfirm <- None
  method reset_sessionForSMSConfirm = _sessionForSMSConfirm <- None

  method copy =
      let _new = Oo.copy self in
      if _sessionForSMSConfirm <> None then
        _new#set_sessionForSMSConfirm self#grab_sessionForSMSConfirm#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "LoginResult";
    (match _authToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("authToken",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _certificate with None -> () | Some _v -> 
      oprot#writeFieldBegin("certificate",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _verifier with None -> () | Some _v -> 
      oprot#writeFieldBegin("verifier",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _pinCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("pinCode",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,5);
      oprot#writeI32(LoginResultType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _lastPrimaryBindTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("lastPrimaryBindTime",Protocol.T_I64,6);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _displayMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayMessage",Protocol.T_STRING,7);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _sessionForSMSConfirm with None -> () | Some _v -> 
      oprot#writeFieldBegin("sessionForSMSConfirm",Protocol.T_STRUCT,8);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_loginResult (iprot : Protocol.t) =
  let _str1961 = new loginResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1962,_id1963) = iprot#readFieldBegin in
        if _t1962 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1963 with 
          | 1 -> (if _t1962 = Protocol.T_STRING then
              _str1961#set_authToken iprot#readString
            else
              iprot#skip _t1962)
          | 2 -> (if _t1962 = Protocol.T_STRING then
              _str1961#set_certificate iprot#readString
            else
              iprot#skip _t1962)
          | 3 -> (if _t1962 = Protocol.T_STRING then
              _str1961#set_verifier iprot#readString
            else
              iprot#skip _t1962)
          | 4 -> (if _t1962 = Protocol.T_STRING then
              _str1961#set_pinCode iprot#readString
            else
              iprot#skip _t1962)
          | 5 -> (if _t1962 = Protocol.T_I32 then
              _str1961#set_type (LoginResultType.of_i iprot#readI32)
            else
              iprot#skip _t1962)
          | 6 -> (if _t1962 = Protocol.T_I64 then
              _str1961#set_lastPrimaryBindTime iprot#readI64
            else
              iprot#skip _t1962)
          | 7 -> (if _t1962 = Protocol.T_STRING then
              _str1961#set_displayMessage iprot#readString
            else
              iprot#skip _t1962)
          | 8 -> (if _t1962 = Protocol.T_STRUCT then
              _str1961#set_sessionForSMSConfirm (read_verificationSessionData iprot)
            else
              iprot#skip _t1962)
          | _ -> iprot#skip _t1962);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1961

class loginRequest =
object (self)
  val mutable _type : Int32.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "loginRequest.type") | Some _x1965 -> _x1965
  method set_type _x1965 = _type <- Some _x1965
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _identityProvider : Int32.t option = None
  method get_identityProvider = _identityProvider
  method grab_identityProvider = match _identityProvider with None->raise (Field_empty "loginRequest.identityProvider") | Some _x1966 -> _x1966
  method set_identityProvider _x1966 = _identityProvider <- Some _x1966
  method unset_identityProvider = _identityProvider <- None
  method reset_identityProvider = _identityProvider <- None

  val mutable _identifier : string option = None
  method get_identifier = _identifier
  method grab_identifier = match _identifier with None->raise (Field_empty "loginRequest.identifier") | Some _x1967 -> _x1967
  method set_identifier _x1967 = _identifier <- Some _x1967
  method unset_identifier = _identifier <- None
  method reset_identifier = _identifier <- None

  val mutable _password : string option = None
  method get_password = _password
  method grab_password = match _password with None->raise (Field_empty "loginRequest.password") | Some _x1968 -> _x1968
  method set_password _x1968 = _password <- Some _x1968
  method unset_password = _password <- None
  method reset_password = _password <- None

  val mutable _keepLoggedIn : bool option = None
  method get_keepLoggedIn = _keepLoggedIn
  method grab_keepLoggedIn = match _keepLoggedIn with None->raise (Field_empty "loginRequest.keepLoggedIn") | Some _x1969 -> _x1969
  method set_keepLoggedIn _x1969 = _keepLoggedIn <- Some _x1969
  method unset_keepLoggedIn = _keepLoggedIn <- None
  method reset_keepLoggedIn = _keepLoggedIn <- None

  val mutable _accessLocation : string option = None
  method get_accessLocation = _accessLocation
  method grab_accessLocation = match _accessLocation with None->raise (Field_empty "loginRequest.accessLocation") | Some _x1970 -> _x1970
  method set_accessLocation _x1970 = _accessLocation <- Some _x1970
  method unset_accessLocation = _accessLocation <- None
  method reset_accessLocation = _accessLocation <- None

  val mutable _systemName : string option = None
  method get_systemName = _systemName
  method grab_systemName = match _systemName with None->raise (Field_empty "loginRequest.systemName") | Some _x1971 -> _x1971
  method set_systemName _x1971 = _systemName <- Some _x1971
  method unset_systemName = _systemName <- None
  method reset_systemName = _systemName <- None

  val mutable _certificate : string option = None
  method get_certificate = _certificate
  method grab_certificate = match _certificate with None->raise (Field_empty "loginRequest.certificate") | Some _x1972 -> _x1972
  method set_certificate _x1972 = _certificate <- Some _x1972
  method unset_certificate = _certificate <- None
  method reset_certificate = _certificate <- None

  val mutable _verifier : string option = None
  method get_verifier = _verifier
  method grab_verifier = match _verifier with None->raise (Field_empty "loginRequest.verifier") | Some _x1973 -> _x1973
  method set_verifier _x1973 = _verifier <- Some _x1973
  method unset_verifier = _verifier <- None
  method reset_verifier = _verifier <- None

  val mutable _secret : string option = None
  method get_secret = _secret
  method grab_secret = match _secret with None->raise (Field_empty "loginRequest.secret") | Some _x1974 -> _x1974
  method set_secret _x1974 = _secret <- Some _x1974
  method unset_secret = _secret <- None
  method reset_secret = _secret <- None

  val mutable _e2eeVersion : Int32.t option = None
  method get_e2eeVersion = _e2eeVersion
  method grab_e2eeVersion = match _e2eeVersion with None->raise (Field_empty "loginRequest.e2eeVersion") | Some _x1975 -> _x1975
  method set_e2eeVersion _x1975 = _e2eeVersion <- Some _x1975
  method unset_e2eeVersion = _e2eeVersion <- None
  method reset_e2eeVersion = _e2eeVersion <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "LoginRequest";
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _identityProvider with None -> () | Some _v -> 
      oprot#writeFieldBegin("identityProvider",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _identifier with None -> () | Some _v -> 
      oprot#writeFieldBegin("identifier",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _password with None -> () | Some _v -> 
      oprot#writeFieldBegin("password",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _keepLoggedIn with None -> () | Some _v -> 
      oprot#writeFieldBegin("keepLoggedIn",Protocol.T_BOOL,5);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _accessLocation with None -> () | Some _v -> 
      oprot#writeFieldBegin("accessLocation",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _systemName with None -> () | Some _v -> 
      oprot#writeFieldBegin("systemName",Protocol.T_STRING,7);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _certificate with None -> () | Some _v -> 
      oprot#writeFieldBegin("certificate",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _verifier with None -> () | Some _v -> 
      oprot#writeFieldBegin("verifier",Protocol.T_STRING,9);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _secret with None -> () | Some _v -> 
      oprot#writeFieldBegin("secret",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _e2eeVersion with None -> () | Some _v -> 
      oprot#writeFieldBegin("e2eeVersion",Protocol.T_I32,11);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_loginRequest (iprot : Protocol.t) =
  let _str1978 = new loginRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1979,_id1980) = iprot#readFieldBegin in
        if _t1979 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1980 with 
          | 1 -> (if _t1979 = Protocol.T_I32 then
              _str1978#set_type iprot#readI32
            else
              iprot#skip _t1979)
          | 2 -> (if _t1979 = Protocol.T_I32 then
              _str1978#set_identityProvider iprot#readI32
            else
              iprot#skip _t1979)
          | 3 -> (if _t1979 = Protocol.T_STRING then
              _str1978#set_identifier iprot#readString
            else
              iprot#skip _t1979)
          | 4 -> (if _t1979 = Protocol.T_STRING then
              _str1978#set_password iprot#readString
            else
              iprot#skip _t1979)
          | 5 -> (if _t1979 = Protocol.T_BOOL then
              _str1978#set_keepLoggedIn iprot#readBool
            else
              iprot#skip _t1979)
          | 6 -> (if _t1979 = Protocol.T_STRING then
              _str1978#set_accessLocation iprot#readString
            else
              iprot#skip _t1979)
          | 7 -> (if _t1979 = Protocol.T_STRING then
              _str1978#set_systemName iprot#readString
            else
              iprot#skip _t1979)
          | 8 -> (if _t1979 = Protocol.T_STRING then
              _str1978#set_certificate iprot#readString
            else
              iprot#skip _t1979)
          | 9 -> (if _t1979 = Protocol.T_STRING then
              _str1978#set_verifier iprot#readString
            else
              iprot#skip _t1979)
          | 10 -> (if _t1979 = Protocol.T_STRING then
              _str1978#set_secret iprot#readString
            else
              iprot#skip _t1979)
          | 11 -> (if _t1979 = Protocol.T_I32 then
              _str1978#set_e2eeVersion iprot#readI32
            else
              iprot#skip _t1979)
          | _ -> iprot#skip _t1979);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1978

class loginSession =
object (self)
  val mutable _tokenKey : string option = None
  method get_tokenKey = _tokenKey
  method grab_tokenKey = match _tokenKey with None->raise (Field_empty "loginSession.tokenKey") | Some _x1982 -> _x1982
  method set_tokenKey _x1982 = _tokenKey <- Some _x1982
  method unset_tokenKey = _tokenKey <- None
  method reset_tokenKey = _tokenKey <- None

  val mutable _expirationTime : Int64.t option = None
  method get_expirationTime = _expirationTime
  method grab_expirationTime = match _expirationTime with None->raise (Field_empty "loginSession.expirationTime") | Some _x1983 -> _x1983
  method set_expirationTime _x1983 = _expirationTime <- Some _x1983
  method unset_expirationTime = _expirationTime <- None
  method reset_expirationTime = _expirationTime <- None

  val mutable _applicationType : ApplicationType.t option = None
  method get_applicationType = _applicationType
  method grab_applicationType = match _applicationType with None->raise (Field_empty "loginSession.applicationType") | Some _x1984 -> _x1984
  method set_applicationType _x1984 = _applicationType <- Some _x1984
  method unset_applicationType = _applicationType <- None
  method reset_applicationType = _applicationType <- None

  val mutable _systemName : string option = None
  method get_systemName = _systemName
  method grab_systemName = match _systemName with None->raise (Field_empty "loginSession.systemName") | Some _x1985 -> _x1985
  method set_systemName _x1985 = _systemName <- Some _x1985
  method unset_systemName = _systemName <- None
  method reset_systemName = _systemName <- None

  val mutable _accessLocation : string option = None
  method get_accessLocation = _accessLocation
  method grab_accessLocation = match _accessLocation with None->raise (Field_empty "loginSession.accessLocation") | Some _x1986 -> _x1986
  method set_accessLocation _x1986 = _accessLocation <- Some _x1986
  method unset_accessLocation = _accessLocation <- None
  method reset_accessLocation = _accessLocation <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "LoginSession";
    (match _tokenKey with None -> () | Some _v -> 
      oprot#writeFieldBegin("tokenKey",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _expirationTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("expirationTime",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _applicationType with None -> () | Some _v -> 
      oprot#writeFieldBegin("applicationType",Protocol.T_I32,11);
      oprot#writeI32(ApplicationType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _systemName with None -> () | Some _v -> 
      oprot#writeFieldBegin("systemName",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _accessLocation with None -> () | Some _v -> 
      oprot#writeFieldBegin("accessLocation",Protocol.T_STRING,22);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_loginSession (iprot : Protocol.t) =
  let _str1989 = new loginSession in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t1990,_id1991) = iprot#readFieldBegin in
        if _t1990 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id1991 with 
          | 1 -> (if _t1990 = Protocol.T_STRING then
              _str1989#set_tokenKey iprot#readString
            else
              iprot#skip _t1990)
          | 3 -> (if _t1990 = Protocol.T_I64 then
              _str1989#set_expirationTime iprot#readI64
            else
              iprot#skip _t1990)
          | 11 -> (if _t1990 = Protocol.T_I32 then
              _str1989#set_applicationType (ApplicationType.of_i iprot#readI32)
            else
              iprot#skip _t1990)
          | 12 -> (if _t1990 = Protocol.T_STRING then
              _str1989#set_systemName iprot#readString
            else
              iprot#skip _t1990)
          | 22 -> (if _t1990 = Protocol.T_STRING then
              _str1989#set_accessLocation iprot#readString
            else
              iprot#skip _t1990)
          | _ -> iprot#skip _t1990);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str1989

class message =
object (self)
  val mutable __from : string option = None
  method get__from = __from
  method grab__from = match __from with None->raise (Field_empty "message._from") | Some _x1993 -> _x1993
  method set__from _x1993 = __from <- Some _x1993
  method unset__from = __from <- None
  method reset__from = __from <- None

  val mutable _displayName : string option = None
  method get_displayName = _displayName
  method grab_displayName = match _displayName with None->raise (Field_empty "message.displayName") | Some _x1994 -> _x1994
  method set_displayName _x1994 = _displayName <- Some _x1994
  method unset_displayName = _displayName <- None
  method reset_displayName = _displayName <- None

  val mutable _picturePath : string option = None
  method get_picturePath = _picturePath
  method grab_picturePath = match _picturePath with None->raise (Field_empty "message.picturePath") | Some _x1995 -> _x1995
  method set_picturePath _x1995 = _picturePath <- Some _x1995
  method unset_picturePath = _picturePath <- None
  method reset_picturePath = _picturePath <- None

  val mutable _type : string option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "message.type") | Some _x1996 -> _x1996
  method set_type _x1996 = _type <- Some _x1996
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _person : string option = None
  method get_person = _person
  method grab_person = match _person with None->raise (Field_empty "message.person") | Some _x1997 -> _x1997
  method set_person _x1997 = _person <- Some _x1997
  method unset_person = _person <- None
  method reset_person = _person <- None

  val mutable _person2 : string option = None
  method get_person2 = _person2
  method grab_person2 = match _person2 with None->raise (Field_empty "message.person2") | Some _x1998 -> _x1998
  method set_person2 _x1998 = _person2 <- Some _x1998
  method unset_person2 = _person2 <- None
  method reset_person2 = _person2 <- None

  val mutable _personName : string option = None
  method get_personName = _personName
  method grab_personName = match _personName with None->raise (Field_empty "message.personName") | Some _x1999 -> _x1999
  method set_personName _x1999 = _personName <- Some _x1999
  method unset_personName = _personName <- None
  method reset_personName = _personName <- None

  val mutable _personName2 : string option = None
  method get_personName2 = _personName2
  method grab_personName2 = match _personName2 with None->raise (Field_empty "message.personName2") | Some _x2000 -> _x2000
  method set_personName2 _x2000 = _personName2 <- Some _x2000
  method unset_personName2 = _personName2 <- None
  method reset_personName2 = _personName2 <- None

  val mutable _to : string option = None
  method get_to = _to
  method grab_to = match _to with None->raise (Field_empty "message.to") | Some _x2001 -> _x2001
  method set_to _x2001 = _to <- Some _x2001
  method unset_to = _to <- None
  method reset_to = _to <- None

  val mutable _toType : MIDType.t option = None
  method get_toType = _toType
  method grab_toType = match _toType with None->raise (Field_empty "message.toType") | Some _x2002 -> _x2002
  method set_toType _x2002 = _toType <- Some _x2002
  method unset_toType = _toType <- None
  method reset_toType = _toType <- None

  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "message.id") | Some _x2003 -> _x2003
  method set_id _x2003 = _id <- Some _x2003
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "message.createdTime") | Some _x2004 -> _x2004
  method set_createdTime _x2004 = _createdTime <- Some _x2004
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _deliveredTime : Int64.t option = None
  method get_deliveredTime = _deliveredTime
  method grab_deliveredTime = match _deliveredTime with None->raise (Field_empty "message.deliveredTime") | Some _x2005 -> _x2005
  method set_deliveredTime _x2005 = _deliveredTime <- Some _x2005
  method unset_deliveredTime = _deliveredTime <- None
  method reset_deliveredTime = _deliveredTime <- None

  val mutable _text : string option = None
  method get_text = _text
  method grab_text = match _text with None->raise (Field_empty "message.text") | Some _x2006 -> _x2006
  method set_text _x2006 = _text <- Some _x2006
  method unset_text = _text <- None
  method reset_text = _text <- None

  val mutable _location : location option = None
  method get_location = _location
  method grab_location = match _location with None->raise (Field_empty "message.location") | Some _x2007 -> _x2007
  method set_location _x2007 = _location <- Some _x2007
  method unset_location = _location <- None
  method reset_location = _location <- None

  val mutable _hasContent : bool option = None
  method get_hasContent = _hasContent
  method grab_hasContent = match _hasContent with None->raise (Field_empty "message.hasContent") | Some _x2008 -> _x2008
  method set_hasContent _x2008 = _hasContent <- Some _x2008
  method unset_hasContent = _hasContent <- None
  method reset_hasContent = _hasContent <- None

  val mutable _contentType : ContentType.t option = None
  method get_contentType = _contentType
  method grab_contentType = match _contentType with None->raise (Field_empty "message.contentType") | Some _x2009 -> _x2009
  method set_contentType _x2009 = _contentType <- Some _x2009
  method unset_contentType = _contentType <- None
  method reset_contentType = _contentType <- None

  val mutable _contentPreview : string option = None
  method get_contentPreview = _contentPreview
  method grab_contentPreview = match _contentPreview with None->raise (Field_empty "message.contentPreview") | Some _x2010 -> _x2010
  method set_contentPreview _x2010 = _contentPreview <- Some _x2010
  method unset_contentPreview = _contentPreview <- None
  method reset_contentPreview = _contentPreview <- None

  val mutable _contentMetadata : (string,string) Hashtbl.t option = None
  method get_contentMetadata = _contentMetadata
  method grab_contentMetadata = match _contentMetadata with None->raise (Field_empty "message.contentMetadata") | Some _x2011 -> _x2011
  method set_contentMetadata _x2011 = _contentMetadata <- Some _x2011
  method unset_contentMetadata = _contentMetadata <- None
  method reset_contentMetadata = _contentMetadata <- None

  val mutable _sessionId : int option = None
  method get_sessionId = _sessionId
  method grab_sessionId = match _sessionId with None->raise (Field_empty "message.sessionId") | Some _x2012 -> _x2012
  method set_sessionId _x2012 = _sessionId <- Some _x2012
  method unset_sessionId = _sessionId <- None
  method reset_sessionId = _sessionId <- None

  val mutable _chunks : string list option = None
  method get_chunks = _chunks
  method grab_chunks = match _chunks with None->raise (Field_empty "message.chunks") | Some _x2013 -> _x2013
  method set_chunks _x2013 = _chunks <- Some _x2013
  method unset_chunks = _chunks <- None
  method reset_chunks = _chunks <- None

  val mutable _relatedMessageId : string option = None
  method get_relatedMessageId = _relatedMessageId
  method grab_relatedMessageId = match _relatedMessageId with None->raise (Field_empty "message.relatedMessageId") | Some _x2014 -> _x2014
  method set_relatedMessageId _x2014 = _relatedMessageId <- Some _x2014
  method unset_relatedMessageId = _relatedMessageId <- None
  method reset_relatedMessageId = _relatedMessageId <- None

  val mutable _messageRelationType : MessageRelationType.t option = None
  method get_messageRelationType = _messageRelationType
  method grab_messageRelationType = match _messageRelationType with None->raise (Field_empty "message.messageRelationType") | Some _x2015 -> _x2015
  method set_messageRelationType _x2015 = _messageRelationType <- Some _x2015
  method unset_messageRelationType = _messageRelationType <- None
  method reset_messageRelationType = _messageRelationType <- None

  val mutable _readCount : Int32.t option = None
  method get_readCount = _readCount
  method grab_readCount = match _readCount with None->raise (Field_empty "message.readCount") | Some _x2016 -> _x2016
  method set_readCount _x2016 = _readCount <- Some _x2016
  method unset_readCount = _readCount <- None
  method reset_readCount = _readCount <- None

  val mutable _relatedMessageServiceCode : ServiceCode.t option = None
  method get_relatedMessageServiceCode = _relatedMessageServiceCode
  method grab_relatedMessageServiceCode = match _relatedMessageServiceCode with None->raise (Field_empty "message.relatedMessageServiceCode") | Some _x2017 -> _x2017
  method set_relatedMessageServiceCode _x2017 = _relatedMessageServiceCode <- Some _x2017
  method unset_relatedMessageServiceCode = _relatedMessageServiceCode <- None
  method reset_relatedMessageServiceCode = _relatedMessageServiceCode <- None

  method copy =
      let _new = Oo.copy self in
      if _location <> None then
        _new#set_location self#grab_location#copy;
      if _contentMetadata <> None then
        _new#set_contentMetadata (Hashtbl.copy self#grab_contentMetadata);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Message";
    (match __from with None -> () | Some _v -> 
      oprot#writeFieldBegin("_from",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _to with None -> () | Some _v -> 
      oprot#writeFieldBegin("to",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _toType with None -> () | Some _v -> 
      oprot#writeFieldBegin("toType",Protocol.T_I32,3);
      oprot#writeI32(MIDType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,5);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _deliveredTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("deliveredTime",Protocol.T_I64,6);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _text with None -> () | Some _v -> 
      oprot#writeFieldBegin("text",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _location with None -> () | Some _v -> 
      oprot#writeFieldBegin("location",Protocol.T_STRUCT,11);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _hasContent with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasContent",Protocol.T_BOOL,14);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _contentType with None -> () | Some _v -> 
      oprot#writeFieldBegin("contentType",Protocol.T_I32,15);
      oprot#writeI32(ContentType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _contentPreview with None -> () | Some _v -> 
      oprot#writeFieldBegin("contentPreview",Protocol.T_STRING,17);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _contentMetadata with None -> () | Some _v -> 
      oprot#writeFieldBegin("contentMetadata",Protocol.T_MAP,18);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter2020 -> fun _viter2021 -> 
        oprot#writeString(_kiter2020);
        oprot#writeString(_viter2021);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _sessionId with None -> () | Some _v -> 
      oprot#writeFieldBegin("sessionId",Protocol.T_BYTE,19);
      oprot#writeByte(_v);
      oprot#writeFieldEnd
    );
    (match _chunks with None -> () | Some _v -> 
      oprot#writeFieldBegin("chunks",Protocol.T_LIST,20);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter2022 ->         oprot#writeString(_iter2022);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _relatedMessageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("relatedMessageId",Protocol.T_STRING,21);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _messageRelationType with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageRelationType",Protocol.T_I32,22);
      oprot#writeI32(MessageRelationType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _readCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("readCount",Protocol.T_I32,23);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _relatedMessageServiceCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("relatedMessageServiceCode",Protocol.T_I32,24);
      oprot#writeI32(ServiceCode.to_i _v);
      oprot#writeFieldEnd
    );
    (match _personName2 with None -> () | Some _v -> 
      oprot#writeFieldBegin("personName2",Protocol.T_STRING,93);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _personName with None -> () | Some _v -> 
      oprot#writeFieldBegin("personName",Protocol.T_STRING,94);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _person2 with None -> () | Some _v -> 
      oprot#writeFieldBegin("person2",Protocol.T_STRING,95);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _person with None -> () | Some _v -> 
      oprot#writeFieldBegin("person",Protocol.T_STRING,96);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_STRING,97);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _picturePath with None -> () | Some _v -> 
      oprot#writeFieldBegin("picturePath",Protocol.T_STRING,98);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayName",Protocol.T_STRING,99);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_message (iprot : Protocol.t) =
  let _str2023 = new message in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2024,_id2025) = iprot#readFieldBegin in
        if _t2024 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2025 with 
          | 1 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set__from iprot#readString
            else
              iprot#skip _t2024)
          | 99 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_displayName iprot#readString
            else
              iprot#skip _t2024)
          | 98 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_picturePath iprot#readString
            else
              iprot#skip _t2024)
          | 97 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_type iprot#readString
            else
              iprot#skip _t2024)
          | 96 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_person iprot#readString
            else
              iprot#skip _t2024)
          | 95 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_person2 iprot#readString
            else
              iprot#skip _t2024)
          | 94 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_personName iprot#readString
            else
              iprot#skip _t2024)
          | 93 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_personName2 iprot#readString
            else
              iprot#skip _t2024)
          | 2 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_to iprot#readString
            else
              iprot#skip _t2024)
          | 3 -> (if _t2024 = Protocol.T_I32 then
              _str2023#set_toType (MIDType.of_i iprot#readI32)
            else
              iprot#skip _t2024)
          | 4 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_id iprot#readString
            else
              iprot#skip _t2024)
          | 5 -> (if _t2024 = Protocol.T_I64 then
              _str2023#set_createdTime iprot#readI64
            else
              iprot#skip _t2024)
          | 6 -> (if _t2024 = Protocol.T_I64 then
              _str2023#set_deliveredTime iprot#readI64
            else
              iprot#skip _t2024)
          | 10 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_text iprot#readString
            else
              iprot#skip _t2024)
          | 11 -> (if _t2024 = Protocol.T_STRUCT then
              _str2023#set_location (read_location iprot)
            else
              iprot#skip _t2024)
          | 14 -> (if _t2024 = Protocol.T_BOOL then
              _str2023#set_hasContent iprot#readBool
            else
              iprot#skip _t2024)
          | 15 -> (if _t2024 = Protocol.T_I32 then
              _str2023#set_contentType (ContentType.of_i iprot#readI32)
            else
              iprot#skip _t2024)
          | 17 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_contentPreview iprot#readString
            else
              iprot#skip _t2024)
          | 18 -> (if _t2024 = Protocol.T_MAP then
              _str2023#set_contentMetadata 
                (let (_ktype2027,_vtype2028,_size2026) = iprot#readMapBegin in
                let _con2030 = Hashtbl.create _size2026 in
                  for i = 1 to _size2026 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con2030 _k _v
                  done; iprot#readMapEnd; _con2030)
            else
              iprot#skip _t2024)
          | 19 -> (if _t2024 = Protocol.T_BYTE then
              _str2023#set_sessionId iprot#readByte
            else
              iprot#skip _t2024)
          | 20 -> (if _t2024 = Protocol.T_LIST then
              _str2023#set_chunks 
                (let (_etype2034,_size2031) = iprot#readListBegin in
                  let _con2035 = (Array.to_list (Array.init _size2031 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con2035)
            else
              iprot#skip _t2024)
          | 21 -> (if _t2024 = Protocol.T_STRING then
              _str2023#set_relatedMessageId iprot#readString
            else
              iprot#skip _t2024)
          | 22 -> (if _t2024 = Protocol.T_I32 then
              _str2023#set_messageRelationType (MessageRelationType.of_i iprot#readI32)
            else
              iprot#skip _t2024)
          | 23 -> (if _t2024 = Protocol.T_I32 then
              _str2023#set_readCount iprot#readI32
            else
              iprot#skip _t2024)
          | 24 -> (if _t2024 = Protocol.T_I32 then
              _str2023#set_relatedMessageServiceCode (ServiceCode.of_i iprot#readI32)
            else
              iprot#skip _t2024)
          | _ -> iprot#skip _t2024);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2023

class squareMessage =
object (self)
  val mutable _message : message option = None
  method get_message = _message
  method grab_message = match _message with None->raise (Field_empty "squareMessage.message") | Some _x2037 -> _x2037
  method set_message _x2037 = _message <- Some _x2037
  method unset_message = _message <- None
  method reset_message = _message <- None

  val mutable _fromType : MIDType.t option = None
  method get_fromType = _fromType
  method grab_fromType = match _fromType with None->raise (Field_empty "squareMessage.fromType") | Some _x2038 -> _x2038
  method set_fromType _x2038 = _fromType <- Some _x2038
  method unset_fromType = _fromType <- None
  method reset_fromType = _fromType <- None

  val mutable _squareMessageRevision : Int64.t option = None
  method get_squareMessageRevision = _squareMessageRevision
  method grab_squareMessageRevision = match _squareMessageRevision with None->raise (Field_empty "squareMessage.squareMessageRevision") | Some _x2039 -> _x2039
  method set_squareMessageRevision _x2039 = _squareMessageRevision <- Some _x2039
  method unset_squareMessageRevision = _squareMessageRevision <- None
  method reset_squareMessageRevision = _squareMessageRevision <- None

  method copy =
      let _new = Oo.copy self in
      if _message <> None then
        _new#set_message self#grab_message#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareMessage";
    (match _message with None -> () | Some _v -> 
      oprot#writeFieldBegin("message",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _fromType with None -> () | Some _v -> 
      oprot#writeFieldBegin("fromType",Protocol.T_I32,3);
      oprot#writeI32(MIDType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _squareMessageRevision with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMessageRevision",Protocol.T_I64,4);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareMessage (iprot : Protocol.t) =
  let _str2042 = new squareMessage in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2043,_id2044) = iprot#readFieldBegin in
        if _t2043 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2044 with 
          | 1 -> (if _t2043 = Protocol.T_STRUCT then
              _str2042#set_message (read_message iprot)
            else
              iprot#skip _t2043)
          | 3 -> (if _t2043 = Protocol.T_I32 then
              _str2042#set_fromType (MIDType.of_i iprot#readI32)
            else
              iprot#skip _t2043)
          | 4 -> (if _t2043 = Protocol.T_I64 then
              _str2042#set_squareMessageRevision iprot#readI64
            else
              iprot#skip _t2043)
          | _ -> iprot#skip _t2043);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2042

class squareChatStatusWithoutMessage =
object (self)
  val mutable _memberCount : Int32.t option = None
  method get_memberCount = _memberCount
  method grab_memberCount = match _memberCount with None->raise (Field_empty "squareChatStatusWithoutMessage.memberCount") | Some _x2046 -> _x2046
  method set_memberCount _x2046 = _memberCount <- Some _x2046
  method unset_memberCount = _memberCount <- None
  method reset_memberCount = _memberCount <- None

  val mutable _unreadMessageCount : Int32.t option = None
  method get_unreadMessageCount = _unreadMessageCount
  method grab_unreadMessageCount = match _unreadMessageCount with None->raise (Field_empty "squareChatStatusWithoutMessage.unreadMessageCount") | Some _x2047 -> _x2047
  method set_unreadMessageCount _x2047 = _unreadMessageCount <- Some _x2047
  method unset_unreadMessageCount = _unreadMessageCount <- None
  method reset_unreadMessageCount = _unreadMessageCount <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareChatStatusWithoutMessage";
    (match _memberCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("memberCount",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _unreadMessageCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("unreadMessageCount",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareChatStatusWithoutMessage (iprot : Protocol.t) =
  let _str2050 = new squareChatStatusWithoutMessage in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2051,_id2052) = iprot#readFieldBegin in
        if _t2051 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2052 with 
          | 1 -> (if _t2051 = Protocol.T_I32 then
              _str2050#set_memberCount iprot#readI32
            else
              iprot#skip _t2051)
          | 2 -> (if _t2051 = Protocol.T_I32 then
              _str2050#set_unreadMessageCount iprot#readI32
            else
              iprot#skip _t2051)
          | _ -> iprot#skip _t2051);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2050

class squareChatStatus =
object (self)
  val mutable _lastMessage : squareMessage option = None
  method get_lastMessage = _lastMessage
  method grab_lastMessage = match _lastMessage with None->raise (Field_empty "squareChatStatus.lastMessage") | Some _x2054 -> _x2054
  method set_lastMessage _x2054 = _lastMessage <- Some _x2054
  method unset_lastMessage = _lastMessage <- None
  method reset_lastMessage = _lastMessage <- None

  val mutable _senderDisplayName : string option = None
  method get_senderDisplayName = _senderDisplayName
  method grab_senderDisplayName = match _senderDisplayName with None->raise (Field_empty "squareChatStatus.senderDisplayName") | Some _x2055 -> _x2055
  method set_senderDisplayName _x2055 = _senderDisplayName <- Some _x2055
  method unset_senderDisplayName = _senderDisplayName <- None
  method reset_senderDisplayName = _senderDisplayName <- None

  val mutable _otherStatus : squareChatStatusWithoutMessage option = None
  method get_otherStatus = _otherStatus
  method grab_otherStatus = match _otherStatus with None->raise (Field_empty "squareChatStatus.otherStatus") | Some _x2056 -> _x2056
  method set_otherStatus _x2056 = _otherStatus <- Some _x2056
  method unset_otherStatus = _otherStatus <- None
  method reset_otherStatus = _otherStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _lastMessage <> None then
        _new#set_lastMessage self#grab_lastMessage#copy;
      if _otherStatus <> None then
        _new#set_otherStatus self#grab_otherStatus#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareChatStatus";
    (match _lastMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("lastMessage",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _senderDisplayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("senderDisplayName",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _otherStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("otherStatus",Protocol.T_STRUCT,5);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareChatStatus (iprot : Protocol.t) =
  let _str2059 = new squareChatStatus in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2060,_id2061) = iprot#readFieldBegin in
        if _t2060 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2061 with 
          | 3 -> (if _t2060 = Protocol.T_STRUCT then
              _str2059#set_lastMessage (read_squareMessage iprot)
            else
              iprot#skip _t2060)
          | 4 -> (if _t2060 = Protocol.T_STRING then
              _str2059#set_senderDisplayName iprot#readString
            else
              iprot#skip _t2060)
          | 5 -> (if _t2060 = Protocol.T_STRUCT then
              _str2059#set_otherStatus (read_squareChatStatusWithoutMessage iprot)
            else
              iprot#skip _t2060)
          | _ -> iprot#skip _t2060);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2059

class squareChatMember =
object (self)
  val mutable _squareMemberMid : string option = None
  method get_squareMemberMid = _squareMemberMid
  method grab_squareMemberMid = match _squareMemberMid with None->raise (Field_empty "squareChatMember.squareMemberMid") | Some _x2063 -> _x2063
  method set_squareMemberMid _x2063 = _squareMemberMid <- Some _x2063
  method unset_squareMemberMid = _squareMemberMid <- None
  method reset_squareMemberMid = _squareMemberMid <- None

  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareChatMember.squareChatMid") | Some _x2064 -> _x2064
  method set_squareChatMid _x2064 = _squareChatMid <- Some _x2064
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "squareChatMember.revision") | Some _x2065 -> _x2065
  method set_revision _x2065 = _revision <- Some _x2065
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _membershipState : SquareChatMembershipState.t option = None
  method get_membershipState = _membershipState
  method grab_membershipState = match _membershipState with None->raise (Field_empty "squareChatMember.membershipState") | Some _x2066 -> _x2066
  method set_membershipState _x2066 = _membershipState <- Some _x2066
  method unset_membershipState = _membershipState <- None
  method reset_membershipState = _membershipState <- None

  val mutable _notificationForMessage : bool option = None
  method get_notificationForMessage = _notificationForMessage
  method grab_notificationForMessage = match _notificationForMessage with None->raise (Field_empty "squareChatMember.notificationForMessage") | Some _x2067 -> _x2067
  method set_notificationForMessage _x2067 = _notificationForMessage <- Some _x2067
  method unset_notificationForMessage = _notificationForMessage <- None
  method reset_notificationForMessage = _notificationForMessage <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareChatMember";
    (match _squareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMemberMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _membershipState with None -> () | Some _v -> 
      oprot#writeFieldBegin("membershipState",Protocol.T_I32,4);
      oprot#writeI32(SquareChatMembershipState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _notificationForMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationForMessage",Protocol.T_BOOL,5);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareChatMember (iprot : Protocol.t) =
  let _str2070 = new squareChatMember in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2071,_id2072) = iprot#readFieldBegin in
        if _t2071 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2072 with 
          | 1 -> (if _t2071 = Protocol.T_STRING then
              _str2070#set_squareMemberMid iprot#readString
            else
              iprot#skip _t2071)
          | 2 -> (if _t2071 = Protocol.T_STRING then
              _str2070#set_squareChatMid iprot#readString
            else
              iprot#skip _t2071)
          | 3 -> (if _t2071 = Protocol.T_I64 then
              _str2070#set_revision iprot#readI64
            else
              iprot#skip _t2071)
          | 4 -> (if _t2071 = Protocol.T_I32 then
              _str2070#set_membershipState (SquareChatMembershipState.of_i iprot#readI32)
            else
              iprot#skip _t2071)
          | 5 -> (if _t2071 = Protocol.T_BOOL then
              _str2070#set_notificationForMessage iprot#readBool
            else
              iprot#skip _t2071)
          | _ -> iprot#skip _t2071);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2070

class messageOperation =
object (self)
  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "messageOperation.revision") | Some _x2074 -> _x2074
  method set_revision _x2074 = _revision <- Some _x2074
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "messageOperation.createdTime") | Some _x2075 -> _x2075
  method set_createdTime _x2075 = _createdTime <- Some _x2075
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _type : MessageOperationType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "messageOperation.type") | Some _x2076 -> _x2076
  method set_type _x2076 = _type <- Some _x2076
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _reqSeq : Int32.t option = None
  method get_reqSeq = _reqSeq
  method grab_reqSeq = match _reqSeq with None->raise (Field_empty "messageOperation.reqSeq") | Some _x2077 -> _x2077
  method set_reqSeq _x2077 = _reqSeq <- Some _x2077
  method unset_reqSeq = _reqSeq <- None
  method reset_reqSeq = _reqSeq <- None

  val mutable _status : OpStatus.t option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "messageOperation.status") | Some _x2078 -> _x2078
  method set_status _x2078 = _status <- Some _x2078
  method unset_status = _status <- None
  method reset_status = _status <- None

  val mutable _param1 : string option = None
  method get_param1 = _param1
  method grab_param1 = match _param1 with None->raise (Field_empty "messageOperation.param1") | Some _x2079 -> _x2079
  method set_param1 _x2079 = _param1 <- Some _x2079
  method unset_param1 = _param1 <- None
  method reset_param1 = _param1 <- None

  val mutable _param2 : string option = None
  method get_param2 = _param2
  method grab_param2 = match _param2 with None->raise (Field_empty "messageOperation.param2") | Some _x2080 -> _x2080
  method set_param2 _x2080 = _param2 <- Some _x2080
  method unset_param2 = _param2 <- None
  method reset_param2 = _param2 <- None

  val mutable _param3 : string option = None
  method get_param3 = _param3
  method grab_param3 = match _param3 with None->raise (Field_empty "messageOperation.param3") | Some _x2081 -> _x2081
  method set_param3 _x2081 = _param3 <- Some _x2081
  method unset_param3 = _param3 <- None
  method reset_param3 = _param3 <- None

  val mutable _message : message option = None
  method get_message = _message
  method grab_message = match _message with None->raise (Field_empty "messageOperation.message") | Some _x2082 -> _x2082
  method set_message _x2082 = _message <- Some _x2082
  method unset_message = _message <- None
  method reset_message = _message <- None

  method copy =
      let _new = Oo.copy self in
      if _message <> None then
        _new#set_message self#grab_message#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "MessageOperation";
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,3);
      oprot#writeI32(MessageOperationType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _reqSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("reqSeq",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_I32,5);
      oprot#writeI32(OpStatus.to_i _v);
      oprot#writeFieldEnd
    );
    (match _param1 with None -> () | Some _v -> 
      oprot#writeFieldBegin("param1",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _param2 with None -> () | Some _v -> 
      oprot#writeFieldBegin("param2",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _param3 with None -> () | Some _v -> 
      oprot#writeFieldBegin("param3",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _message with None -> () | Some _v -> 
      oprot#writeFieldBegin("message",Protocol.T_STRUCT,20);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_messageOperation (iprot : Protocol.t) =
  let _str2085 = new messageOperation in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2086,_id2087) = iprot#readFieldBegin in
        if _t2086 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2087 with 
          | 1 -> (if _t2086 = Protocol.T_I64 then
              _str2085#set_revision iprot#readI64
            else
              iprot#skip _t2086)
          | 2 -> (if _t2086 = Protocol.T_I64 then
              _str2085#set_createdTime iprot#readI64
            else
              iprot#skip _t2086)
          | 3 -> (if _t2086 = Protocol.T_I32 then
              _str2085#set_type (MessageOperationType.of_i iprot#readI32)
            else
              iprot#skip _t2086)
          | 4 -> (if _t2086 = Protocol.T_I32 then
              _str2085#set_reqSeq iprot#readI32
            else
              iprot#skip _t2086)
          | 5 -> (if _t2086 = Protocol.T_I32 then
              _str2085#set_status (OpStatus.of_i iprot#readI32)
            else
              iprot#skip _t2086)
          | 10 -> (if _t2086 = Protocol.T_STRING then
              _str2085#set_param1 iprot#readString
            else
              iprot#skip _t2086)
          | 11 -> (if _t2086 = Protocol.T_STRING then
              _str2085#set_param2 iprot#readString
            else
              iprot#skip _t2086)
          | 12 -> (if _t2086 = Protocol.T_STRING then
              _str2085#set_param3 iprot#readString
            else
              iprot#skip _t2086)
          | 20 -> (if _t2086 = Protocol.T_STRUCT then
              _str2085#set_message (read_message iprot)
            else
              iprot#skip _t2086)
          | _ -> iprot#skip _t2086);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2085

class messageOperations =
object (self)
  val mutable _operations : messageOperation list option = None
  method get_operations = _operations
  method grab_operations = match _operations with None->raise (Field_empty "messageOperations.operations") | Some _x2089 -> _x2089
  method set_operations _x2089 = _operations <- Some _x2089
  method unset_operations = _operations <- None
  method reset_operations = _operations <- None

  val mutable _endFlag : bool option = None
  method get_endFlag = _endFlag
  method grab_endFlag = match _endFlag with None->raise (Field_empty "messageOperations.endFlag") | Some _x2090 -> _x2090
  method set_endFlag _x2090 = _endFlag <- Some _x2090
  method unset_endFlag = _endFlag <- None
  method reset_endFlag = _endFlag <- None

  method copy =
      let _new = Oo.copy self in
      if _operations <> None then
        _new#set_operations (List.map (fun x -> x#copy) self#grab_operations);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "MessageOperations";
    (match _operations with None -> () | Some _v -> 
      oprot#writeFieldBegin("operations",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2093 ->         _iter2093#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _endFlag with None -> () | Some _v -> 
      oprot#writeFieldBegin("endFlag",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_messageOperations (iprot : Protocol.t) =
  let _str2094 = new messageOperations in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2095,_id2096) = iprot#readFieldBegin in
        if _t2095 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2096 with 
          | 1 -> (if _t2095 = Protocol.T_LIST then
              _str2094#set_operations 
                (let (_etype2100,_size2097) = iprot#readListBegin in
                  let _con2101 = (Array.to_list (Array.init _size2097 (fun _ -> (read_messageOperation iprot)))) in
                    iprot#readListEnd; _con2101)
            else
              iprot#skip _t2095)
          | 2 -> (if _t2095 = Protocol.T_BOOL then
              _str2094#set_endFlag iprot#readBool
            else
              iprot#skip _t2095)
          | _ -> iprot#skip _t2095);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2094

class messageStoreResult =
object (self)
  val mutable _requestId : string option = None
  method get_requestId = _requestId
  method grab_requestId = match _requestId with None->raise (Field_empty "messageStoreResult.requestId") | Some _x2103 -> _x2103
  method set_requestId _x2103 = _requestId <- Some _x2103
  method unset_requestId = _requestId <- None
  method reset_requestId = _requestId <- None

  val mutable _messageIds : string list option = None
  method get_messageIds = _messageIds
  method grab_messageIds = match _messageIds with None->raise (Field_empty "messageStoreResult.messageIds") | Some _x2104 -> _x2104
  method set_messageIds _x2104 = _messageIds <- Some _x2104
  method unset_messageIds = _messageIds <- None
  method reset_messageIds = _messageIds <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "MessageStoreResult";
    (match _requestId with None -> () | Some _v -> 
      oprot#writeFieldBegin("requestId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _messageIds with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageIds",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter2107 ->         oprot#writeString(_iter2107);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_messageStoreResult (iprot : Protocol.t) =
  let _str2108 = new messageStoreResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2109,_id2110) = iprot#readFieldBegin in
        if _t2109 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2110 with 
          | 1 -> (if _t2109 = Protocol.T_STRING then
              _str2108#set_requestId iprot#readString
            else
              iprot#skip _t2109)
          | 2 -> (if _t2109 = Protocol.T_LIST then
              _str2108#set_messageIds 
                (let (_etype2114,_size2111) = iprot#readListBegin in
                  let _con2115 = (Array.to_list (Array.init _size2111 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con2115)
            else
              iprot#skip _t2109)
          | _ -> iprot#skip _t2109);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2108

class metaProfile =
object (self)
  val mutable _createTime : Int64.t option = None
  method get_createTime = _createTime
  method grab_createTime = match _createTime with None->raise (Field_empty "metaProfile.createTime") | Some _x2117 -> _x2117
  method set_createTime _x2117 = _createTime <- Some _x2117
  method unset_createTime = _createTime <- None
  method reset_createTime = _createTime <- None

  val mutable _regionCode : string option = None
  method get_regionCode = _regionCode
  method grab_regionCode = match _regionCode with None->raise (Field_empty "metaProfile.regionCode") | Some _x2118 -> _x2118
  method set_regionCode _x2118 = _regionCode <- Some _x2118
  method unset_regionCode = _regionCode <- None
  method reset_regionCode = _regionCode <- None

  val mutable _identities : (RegistrationType.t,string) Hashtbl.t option = None
  method get_identities = _identities
  method grab_identities = match _identities with None->raise (Field_empty "metaProfile.identities") | Some _x2119 -> _x2119
  method set_identities _x2119 = _identities <- Some _x2119
  method unset_identities = _identities <- None
  method reset_identities = _identities <- None

  method copy =
      let _new = Oo.copy self in
      if _identities <> None then
        _new#set_identities (Hashtbl.copy self#grab_identities);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "MetaProfile";
    (match _createTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createTime",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _regionCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("regionCode",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _identities with None -> () | Some _v -> 
      oprot#writeFieldBegin("identities",Protocol.T_MAP,3);
      oprot#writeMapBegin(Protocol.T_I32,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter2122 -> fun _viter2123 -> 
        oprot#writeI32(RegistrationType.to_i _kiter2122);
        oprot#writeString(_viter2123);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_metaProfile (iprot : Protocol.t) =
  let _str2124 = new metaProfile in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2125,_id2126) = iprot#readFieldBegin in
        if _t2125 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2126 with 
          | 1 -> (if _t2125 = Protocol.T_I64 then
              _str2124#set_createTime iprot#readI64
            else
              iprot#skip _t2125)
          | 2 -> (if _t2125 = Protocol.T_STRING then
              _str2124#set_regionCode iprot#readString
            else
              iprot#skip _t2125)
          | 3 -> (if _t2125 = Protocol.T_MAP then
              _str2124#set_identities 
                (let (_ktype2128,_vtype2129,_size2127) = iprot#readMapBegin in
                let _con2131 = Hashtbl.create _size2127 in
                  for i = 1 to _size2127 do
                    let _k = (RegistrationType.of_i iprot#readI32) in
                    let _v = iprot#readString in
                      Hashtbl.add _con2131 _k _v
                  done; iprot#readMapEnd; _con2131)
            else
              iprot#skip _t2125)
          | _ -> iprot#skip _t2125);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2124

class notificationItem =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "notificationItem.id") | Some _x2133 -> _x2133
  method set_id _x2133 = _id <- Some _x2133
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable __from : string option = None
  method get__from = __from
  method grab__from = match __from with None->raise (Field_empty "notificationItem._from") | Some _x2134 -> _x2134
  method set__from _x2134 = __from <- Some _x2134
  method unset__from = __from <- None
  method reset__from = __from <- None

  val mutable _to : string option = None
  method get_to = _to
  method grab_to = match _to with None->raise (Field_empty "notificationItem.to") | Some _x2135 -> _x2135
  method set_to _x2135 = _to <- Some _x2135
  method unset_to = _to <- None
  method reset_to = _to <- None

  val mutable _fromChannel : string option = None
  method get_fromChannel = _fromChannel
  method grab_fromChannel = match _fromChannel with None->raise (Field_empty "notificationItem.fromChannel") | Some _x2136 -> _x2136
  method set_fromChannel _x2136 = _fromChannel <- Some _x2136
  method unset_fromChannel = _fromChannel <- None
  method reset_fromChannel = _fromChannel <- None

  val mutable _toChannel : string option = None
  method get_toChannel = _toChannel
  method grab_toChannel = match _toChannel with None->raise (Field_empty "notificationItem.toChannel") | Some _x2137 -> _x2137
  method set_toChannel _x2137 = _toChannel <- Some _x2137
  method unset_toChannel = _toChannel <- None
  method reset_toChannel = _toChannel <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "notificationItem.revision") | Some _x2138 -> _x2138
  method set_revision _x2138 = _revision <- Some _x2138
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "notificationItem.createdTime") | Some _x2139 -> _x2139
  method set_createdTime _x2139 = _createdTime <- Some _x2139
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _content : (string,string) Hashtbl.t option = None
  method get_content = _content
  method grab_content = match _content with None->raise (Field_empty "notificationItem.content") | Some _x2140 -> _x2140
  method set_content _x2140 = _content <- Some _x2140
  method unset_content = _content <- None
  method reset_content = _content <- None

  method copy =
      let _new = Oo.copy self in
      if _content <> None then
        _new#set_content (Hashtbl.copy self#grab_content);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "NotificationItem";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match __from with None -> () | Some _v -> 
      oprot#writeFieldBegin("_from",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _to with None -> () | Some _v -> 
      oprot#writeFieldBegin("to",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _fromChannel with None -> () | Some _v -> 
      oprot#writeFieldBegin("fromChannel",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _toChannel with None -> () | Some _v -> 
      oprot#writeFieldBegin("toChannel",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,7);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,8);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _content with None -> () | Some _v -> 
      oprot#writeFieldBegin("content",Protocol.T_MAP,9);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter2143 -> fun _viter2144 -> 
        oprot#writeString(_kiter2143);
        oprot#writeString(_viter2144);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_notificationItem (iprot : Protocol.t) =
  let _str2145 = new notificationItem in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2146,_id2147) = iprot#readFieldBegin in
        if _t2146 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2147 with 
          | 1 -> (if _t2146 = Protocol.T_STRING then
              _str2145#set_id iprot#readString
            else
              iprot#skip _t2146)
          | 2 -> (if _t2146 = Protocol.T_STRING then
              _str2145#set__from iprot#readString
            else
              iprot#skip _t2146)
          | 3 -> (if _t2146 = Protocol.T_STRING then
              _str2145#set_to iprot#readString
            else
              iprot#skip _t2146)
          | 4 -> (if _t2146 = Protocol.T_STRING then
              _str2145#set_fromChannel iprot#readString
            else
              iprot#skip _t2146)
          | 5 -> (if _t2146 = Protocol.T_STRING then
              _str2145#set_toChannel iprot#readString
            else
              iprot#skip _t2146)
          | 7 -> (if _t2146 = Protocol.T_I64 then
              _str2145#set_revision iprot#readI64
            else
              iprot#skip _t2146)
          | 8 -> (if _t2146 = Protocol.T_I64 then
              _str2145#set_createdTime iprot#readI64
            else
              iprot#skip _t2146)
          | 9 -> (if _t2146 = Protocol.T_MAP then
              _str2145#set_content 
                (let (_ktype2149,_vtype2150,_size2148) = iprot#readMapBegin in
                let _con2152 = Hashtbl.create _size2148 in
                  for i = 1 to _size2148 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con2152 _k _v
                  done; iprot#readMapEnd; _con2152)
            else
              iprot#skip _t2146)
          | _ -> iprot#skip _t2146);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2145

class notificationFetchResult =
object (self)
  val mutable _fetchMode : NotificationItemFetchMode.t option = None
  method get_fetchMode = _fetchMode
  method grab_fetchMode = match _fetchMode with None->raise (Field_empty "notificationFetchResult.fetchMode") | Some _x2154 -> _x2154
  method set_fetchMode _x2154 = _fetchMode <- Some _x2154
  method unset_fetchMode = _fetchMode <- None
  method reset_fetchMode = _fetchMode <- None

  val mutable _itemList : notificationItem list option = None
  method get_itemList = _itemList
  method grab_itemList = match _itemList with None->raise (Field_empty "notificationFetchResult.itemList") | Some _x2155 -> _x2155
  method set_itemList _x2155 = _itemList <- Some _x2155
  method unset_itemList = _itemList <- None
  method reset_itemList = _itemList <- None

  method copy =
      let _new = Oo.copy self in
      if _itemList <> None then
        _new#set_itemList (List.map (fun x -> x#copy) self#grab_itemList);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "NotificationFetchResult";
    (match _fetchMode with None -> () | Some _v -> 
      oprot#writeFieldBegin("fetchMode",Protocol.T_I32,1);
      oprot#writeI32(NotificationItemFetchMode.to_i _v);
      oprot#writeFieldEnd
    );
    (match _itemList with None -> () | Some _v -> 
      oprot#writeFieldBegin("itemList",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2158 ->         _iter2158#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_notificationFetchResult (iprot : Protocol.t) =
  let _str2159 = new notificationFetchResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2160,_id2161) = iprot#readFieldBegin in
        if _t2160 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2161 with 
          | 1 -> (if _t2160 = Protocol.T_I32 then
              _str2159#set_fetchMode (NotificationItemFetchMode.of_i iprot#readI32)
            else
              iprot#skip _t2160)
          | 2 -> (if _t2160 = Protocol.T_LIST then
              _str2159#set_itemList 
                (let (_etype2165,_size2162) = iprot#readListBegin in
                  let _con2166 = (Array.to_list (Array.init _size2162 (fun _ -> (read_notificationItem iprot)))) in
                    iprot#readListEnd; _con2166)
            else
              iprot#skip _t2160)
          | _ -> iprot#skip _t2160);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2159

class operation =
object (self)
  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "operation.revision") | Some _x2168 -> _x2168
  method set_revision _x2168 = _revision <- Some _x2168
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "operation.createdTime") | Some _x2169 -> _x2169
  method set_createdTime _x2169 = _createdTime <- Some _x2169
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _type : OpType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "operation.type") | Some _x2170 -> _x2170
  method set_type _x2170 = _type <- Some _x2170
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _reqSeq : Int32.t option = None
  method get_reqSeq = _reqSeq
  method grab_reqSeq = match _reqSeq with None->raise (Field_empty "operation.reqSeq") | Some _x2171 -> _x2171
  method set_reqSeq _x2171 = _reqSeq <- Some _x2171
  method unset_reqSeq = _reqSeq <- None
  method reset_reqSeq = _reqSeq <- None

  val mutable _checksum : string option = None
  method get_checksum = _checksum
  method grab_checksum = match _checksum with None->raise (Field_empty "operation.checksum") | Some _x2172 -> _x2172
  method set_checksum _x2172 = _checksum <- Some _x2172
  method unset_checksum = _checksum <- None
  method reset_checksum = _checksum <- None

  val mutable _status : OpStatus.t option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "operation.status") | Some _x2173 -> _x2173
  method set_status _x2173 = _status <- Some _x2173
  method unset_status = _status <- None
  method reset_status = _status <- None

  val mutable _param1 : string option = None
  method get_param1 = _param1
  method grab_param1 = match _param1 with None->raise (Field_empty "operation.param1") | Some _x2174 -> _x2174
  method set_param1 _x2174 = _param1 <- Some _x2174
  method unset_param1 = _param1 <- None
  method reset_param1 = _param1 <- None

  val mutable _param2 : string option = None
  method get_param2 = _param2
  method grab_param2 = match _param2 with None->raise (Field_empty "operation.param2") | Some _x2175 -> _x2175
  method set_param2 _x2175 = _param2 <- Some _x2175
  method unset_param2 = _param2 <- None
  method reset_param2 = _param2 <- None

  val mutable _param3 : string option = None
  method get_param3 = _param3
  method grab_param3 = match _param3 with None->raise (Field_empty "operation.param3") | Some _x2176 -> _x2176
  method set_param3 _x2176 = _param3 <- Some _x2176
  method unset_param3 = _param3 <- None
  method reset_param3 = _param3 <- None

  val mutable _message : message option = None
  method get_message = _message
  method grab_message = match _message with None->raise (Field_empty "operation.message") | Some _x2177 -> _x2177
  method set_message _x2177 = _message <- Some _x2177
  method unset_message = _message <- None
  method reset_message = _message <- None

  method copy =
      let _new = Oo.copy self in
      if _message <> None then
        _new#set_message self#grab_message#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Operation";
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,3);
      oprot#writeI32(OpType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _reqSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("reqSeq",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _checksum with None -> () | Some _v -> 
      oprot#writeFieldBegin("checksum",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_I32,7);
      oprot#writeI32(OpStatus.to_i _v);
      oprot#writeFieldEnd
    );
    (match _param1 with None -> () | Some _v -> 
      oprot#writeFieldBegin("param1",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _param2 with None -> () | Some _v -> 
      oprot#writeFieldBegin("param2",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _param3 with None -> () | Some _v -> 
      oprot#writeFieldBegin("param3",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _message with None -> () | Some _v -> 
      oprot#writeFieldBegin("message",Protocol.T_STRUCT,20);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_operation (iprot : Protocol.t) =
  let _str2180 = new operation in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2181,_id2182) = iprot#readFieldBegin in
        if _t2181 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2182 with 
          | 1 -> (if _t2181 = Protocol.T_I64 then
              _str2180#set_revision iprot#readI64
            else
              iprot#skip _t2181)
          | 2 -> (if _t2181 = Protocol.T_I64 then
              _str2180#set_createdTime iprot#readI64
            else
              iprot#skip _t2181)
          | 3 -> (if _t2181 = Protocol.T_I32 then
              _str2180#set_type (OpType.of_i iprot#readI32)
            else
              iprot#skip _t2181)
          | 4 -> (if _t2181 = Protocol.T_I32 then
              _str2180#set_reqSeq iprot#readI32
            else
              iprot#skip _t2181)
          | 5 -> (if _t2181 = Protocol.T_STRING then
              _str2180#set_checksum iprot#readString
            else
              iprot#skip _t2181)
          | 7 -> (if _t2181 = Protocol.T_I32 then
              _str2180#set_status (OpStatus.of_i iprot#readI32)
            else
              iprot#skip _t2181)
          | 10 -> (if _t2181 = Protocol.T_STRING then
              _str2180#set_param1 iprot#readString
            else
              iprot#skip _t2181)
          | 11 -> (if _t2181 = Protocol.T_STRING then
              _str2180#set_param2 iprot#readString
            else
              iprot#skip _t2181)
          | 12 -> (if _t2181 = Protocol.T_STRING then
              _str2180#set_param3 iprot#readString
            else
              iprot#skip _t2181)
          | 20 -> (if _t2181 = Protocol.T_STRUCT then
              _str2180#set_message (read_message iprot)
            else
              iprot#skip _t2181)
          | _ -> iprot#skip _t2181);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2180

class paymentReservation =
object (self)
  val mutable _receiverMid : string option = None
  method get_receiverMid = _receiverMid
  method grab_receiverMid = match _receiverMid with None->raise (Field_empty "paymentReservation.receiverMid") | Some _x2184 -> _x2184
  method set_receiverMid _x2184 = _receiverMid <- Some _x2184
  method unset_receiverMid = _receiverMid <- None
  method reset_receiverMid = _receiverMid <- None

  val mutable _productId : string option = None
  method get_productId = _productId
  method grab_productId = match _productId with None->raise (Field_empty "paymentReservation.productId") | Some _x2185 -> _x2185
  method set_productId _x2185 = _productId <- Some _x2185
  method unset_productId = _productId <- None
  method reset_productId = _productId <- None

  val mutable _language : string option = None
  method get_language = _language
  method grab_language = match _language with None->raise (Field_empty "paymentReservation.language") | Some _x2186 -> _x2186
  method set_language _x2186 = _language <- Some _x2186
  method unset_language = _language <- None
  method reset_language = _language <- None

  val mutable _location : string option = None
  method get_location = _location
  method grab_location = match _location with None->raise (Field_empty "paymentReservation.location") | Some _x2187 -> _x2187
  method set_location _x2187 = _location <- Some _x2187
  method unset_location = _location <- None
  method reset_location = _location <- None

  val mutable _currency : string option = None
  method get_currency = _currency
  method grab_currency = match _currency with None->raise (Field_empty "paymentReservation.currency") | Some _x2188 -> _x2188
  method set_currency _x2188 = _currency <- Some _x2188
  method unset_currency = _currency <- None
  method reset_currency = _currency <- None

  val mutable _price : string option = None
  method get_price = _price
  method grab_price = match _price with None->raise (Field_empty "paymentReservation.price") | Some _x2189 -> _x2189
  method set_price _x2189 = _price <- Some _x2189
  method unset_price = _price <- None
  method reset_price = _price <- None

  val mutable _appStoreCode : PaymentType.t option = None
  method get_appStoreCode = _appStoreCode
  method grab_appStoreCode = match _appStoreCode with None->raise (Field_empty "paymentReservation.appStoreCode") | Some _x2190 -> _x2190
  method set_appStoreCode _x2190 = _appStoreCode <- Some _x2190
  method unset_appStoreCode = _appStoreCode <- None
  method reset_appStoreCode = _appStoreCode <- None

  val mutable _messageText : string option = None
  method get_messageText = _messageText
  method grab_messageText = match _messageText with None->raise (Field_empty "paymentReservation.messageText") | Some _x2191 -> _x2191
  method set_messageText _x2191 = _messageText <- Some _x2191
  method unset_messageText = _messageText <- None
  method reset_messageText = _messageText <- None

  val mutable _messageTemplate : Int32.t option = None
  method get_messageTemplate = _messageTemplate
  method grab_messageTemplate = match _messageTemplate with None->raise (Field_empty "paymentReservation.messageTemplate") | Some _x2192 -> _x2192
  method set_messageTemplate _x2192 = _messageTemplate <- Some _x2192
  method unset_messageTemplate = _messageTemplate <- None
  method reset_messageTemplate = _messageTemplate <- None

  val mutable _packageId : Int64.t option = None
  method get_packageId = _packageId
  method grab_packageId = match _packageId with None->raise (Field_empty "paymentReservation.packageId") | Some _x2193 -> _x2193
  method set_packageId _x2193 = _packageId <- Some _x2193
  method unset_packageId = _packageId <- None
  method reset_packageId = _packageId <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaymentReservation";
    (match _receiverMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("receiverMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _productId with None -> () | Some _v -> 
      oprot#writeFieldBegin("productId",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _language with None -> () | Some _v -> 
      oprot#writeFieldBegin("language",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _location with None -> () | Some _v -> 
      oprot#writeFieldBegin("location",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _currency with None -> () | Some _v -> 
      oprot#writeFieldBegin("currency",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _price with None -> () | Some _v -> 
      oprot#writeFieldBegin("price",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _appStoreCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("appStoreCode",Protocol.T_I32,7);
      oprot#writeI32(PaymentType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _messageText with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageText",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _messageTemplate with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageTemplate",Protocol.T_I32,9);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _packageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("packageId",Protocol.T_I64,10);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paymentReservation (iprot : Protocol.t) =
  let _str2196 = new paymentReservation in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2197,_id2198) = iprot#readFieldBegin in
        if _t2197 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2198 with 
          | 1 -> (if _t2197 = Protocol.T_STRING then
              _str2196#set_receiverMid iprot#readString
            else
              iprot#skip _t2197)
          | 2 -> (if _t2197 = Protocol.T_STRING then
              _str2196#set_productId iprot#readString
            else
              iprot#skip _t2197)
          | 3 -> (if _t2197 = Protocol.T_STRING then
              _str2196#set_language iprot#readString
            else
              iprot#skip _t2197)
          | 4 -> (if _t2197 = Protocol.T_STRING then
              _str2196#set_location iprot#readString
            else
              iprot#skip _t2197)
          | 5 -> (if _t2197 = Protocol.T_STRING then
              _str2196#set_currency iprot#readString
            else
              iprot#skip _t2197)
          | 6 -> (if _t2197 = Protocol.T_STRING then
              _str2196#set_price iprot#readString
            else
              iprot#skip _t2197)
          | 7 -> (if _t2197 = Protocol.T_I32 then
              _str2196#set_appStoreCode (PaymentType.of_i iprot#readI32)
            else
              iprot#skip _t2197)
          | 8 -> (if _t2197 = Protocol.T_STRING then
              _str2196#set_messageText iprot#readString
            else
              iprot#skip _t2197)
          | 9 -> (if _t2197 = Protocol.T_I32 then
              _str2196#set_messageTemplate iprot#readI32
            else
              iprot#skip _t2197)
          | 10 -> (if _t2197 = Protocol.T_I64 then
              _str2196#set_packageId iprot#readI64
            else
              iprot#skip _t2197)
          | _ -> iprot#skip _t2197);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2196

class paymentReservationResult =
object (self)
  val mutable _orderId : string option = None
  method get_orderId = _orderId
  method grab_orderId = match _orderId with None->raise (Field_empty "paymentReservationResult.orderId") | Some _x2200 -> _x2200
  method set_orderId _x2200 = _orderId <- Some _x2200
  method unset_orderId = _orderId <- None
  method reset_orderId = _orderId <- None

  val mutable _confirmUrl : string option = None
  method get_confirmUrl = _confirmUrl
  method grab_confirmUrl = match _confirmUrl with None->raise (Field_empty "paymentReservationResult.confirmUrl") | Some _x2201 -> _x2201
  method set_confirmUrl _x2201 = _confirmUrl <- Some _x2201
  method unset_confirmUrl = _confirmUrl <- None
  method reset_confirmUrl = _confirmUrl <- None

  val mutable _extras : (string,string) Hashtbl.t option = None
  method get_extras = _extras
  method grab_extras = match _extras with None->raise (Field_empty "paymentReservationResult.extras") | Some _x2202 -> _x2202
  method set_extras _x2202 = _extras <- Some _x2202
  method unset_extras = _extras <- None
  method reset_extras = _extras <- None

  method copy =
      let _new = Oo.copy self in
      if _extras <> None then
        _new#set_extras (Hashtbl.copy self#grab_extras);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PaymentReservationResult";
    (match _orderId with None -> () | Some _v -> 
      oprot#writeFieldBegin("orderId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _confirmUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("confirmUrl",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _extras with None -> () | Some _v -> 
      oprot#writeFieldBegin("extras",Protocol.T_MAP,3);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter2205 -> fun _viter2206 -> 
        oprot#writeString(_kiter2205);
        oprot#writeString(_viter2206);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_paymentReservationResult (iprot : Protocol.t) =
  let _str2207 = new paymentReservationResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2208,_id2209) = iprot#readFieldBegin in
        if _t2208 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2209 with 
          | 1 -> (if _t2208 = Protocol.T_STRING then
              _str2207#set_orderId iprot#readString
            else
              iprot#skip _t2208)
          | 2 -> (if _t2208 = Protocol.T_STRING then
              _str2207#set_confirmUrl iprot#readString
            else
              iprot#skip _t2208)
          | 3 -> (if _t2208 = Protocol.T_MAP then
              _str2207#set_extras 
                (let (_ktype2211,_vtype2212,_size2210) = iprot#readMapBegin in
                let _con2214 = Hashtbl.create _size2210 in
                  for i = 1 to _size2210 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con2214 _k _v
                  done; iprot#readMapEnd; _con2214)
            else
              iprot#skip _t2208)
          | _ -> iprot#skip _t2208);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2207

class product =
object (self)
  val mutable _productId : string option = None
  method get_productId = _productId
  method grab_productId = match _productId with None->raise (Field_empty "product.productId") | Some _x2216 -> _x2216
  method set_productId _x2216 = _productId <- Some _x2216
  method unset_productId = _productId <- None
  method reset_productId = _productId <- None

  val mutable _packageId : Int64.t option = None
  method get_packageId = _packageId
  method grab_packageId = match _packageId with None->raise (Field_empty "product.packageId") | Some _x2217 -> _x2217
  method set_packageId _x2217 = _packageId <- Some _x2217
  method unset_packageId = _packageId <- None
  method reset_packageId = _packageId <- None

  val mutable _version : Int32.t option = None
  method get_version = _version
  method grab_version = match _version with None->raise (Field_empty "product.version") | Some _x2218 -> _x2218
  method set_version _x2218 = _version <- Some _x2218
  method unset_version = _version <- None
  method reset_version = _version <- None

  val mutable _authorName : string option = None
  method get_authorName = _authorName
  method grab_authorName = match _authorName with None->raise (Field_empty "product.authorName") | Some _x2219 -> _x2219
  method set_authorName _x2219 = _authorName <- Some _x2219
  method unset_authorName = _authorName <- None
  method reset_authorName = _authorName <- None

  val mutable _onSale : bool option = None
  method get_onSale = _onSale
  method grab_onSale = match _onSale with None->raise (Field_empty "product.onSale") | Some _x2220 -> _x2220
  method set_onSale _x2220 = _onSale <- Some _x2220
  method unset_onSale = _onSale <- None
  method reset_onSale = _onSale <- None

  val mutable _validDays : Int32.t option = None
  method get_validDays = _validDays
  method grab_validDays = match _validDays with None->raise (Field_empty "product.validDays") | Some _x2221 -> _x2221
  method set_validDays _x2221 = _validDays <- Some _x2221
  method unset_validDays = _validDays <- None
  method reset_validDays = _validDays <- None

  val mutable _saleType : Int32.t option = None
  method get_saleType = _saleType
  method grab_saleType = match _saleType with None->raise (Field_empty "product.saleType") | Some _x2222 -> _x2222
  method set_saleType _x2222 = _saleType <- Some _x2222
  method unset_saleType = _saleType <- None
  method reset_saleType = _saleType <- None

  val mutable _copyright : string option = None
  method get_copyright = _copyright
  method grab_copyright = match _copyright with None->raise (Field_empty "product.copyright") | Some _x2223 -> _x2223
  method set_copyright _x2223 = _copyright <- Some _x2223
  method unset_copyright = _copyright <- None
  method reset_copyright = _copyright <- None

  val mutable _title : string option = None
  method get_title = _title
  method grab_title = match _title with None->raise (Field_empty "product.title") | Some _x2224 -> _x2224
  method set_title _x2224 = _title <- Some _x2224
  method unset_title = _title <- None
  method reset_title = _title <- None

  val mutable _descriptionText : string option = None
  method get_descriptionText = _descriptionText
  method grab_descriptionText = match _descriptionText with None->raise (Field_empty "product.descriptionText") | Some _x2225 -> _x2225
  method set_descriptionText _x2225 = _descriptionText <- Some _x2225
  method unset_descriptionText = _descriptionText <- None
  method reset_descriptionText = _descriptionText <- None

  val mutable _shopOrderId : Int64.t option = None
  method get_shopOrderId = _shopOrderId
  method grab_shopOrderId = match _shopOrderId with None->raise (Field_empty "product.shopOrderId") | Some _x2226 -> _x2226
  method set_shopOrderId _x2226 = _shopOrderId <- Some _x2226
  method unset_shopOrderId = _shopOrderId <- None
  method reset_shopOrderId = _shopOrderId <- None

  val mutable _fromMid : string option = None
  method get_fromMid = _fromMid
  method grab_fromMid = match _fromMid with None->raise (Field_empty "product.fromMid") | Some _x2227 -> _x2227
  method set_fromMid _x2227 = _fromMid <- Some _x2227
  method unset_fromMid = _fromMid <- None
  method reset_fromMid = _fromMid <- None

  val mutable _toMid : string option = None
  method get_toMid = _toMid
  method grab_toMid = match _toMid with None->raise (Field_empty "product.toMid") | Some _x2228 -> _x2228
  method set_toMid _x2228 = _toMid <- Some _x2228
  method unset_toMid = _toMid <- None
  method reset_toMid = _toMid <- None

  val mutable _validUntil : Int64.t option = None
  method get_validUntil = _validUntil
  method grab_validUntil = match _validUntil with None->raise (Field_empty "product.validUntil") | Some _x2229 -> _x2229
  method set_validUntil _x2229 = _validUntil <- Some _x2229
  method unset_validUntil = _validUntil <- None
  method reset_validUntil = _validUntil <- None

  val mutable _priceTier : Int32.t option = None
  method get_priceTier = _priceTier
  method grab_priceTier = match _priceTier with None->raise (Field_empty "product.priceTier") | Some _x2230 -> _x2230
  method set_priceTier _x2230 = _priceTier <- Some _x2230
  method unset_priceTier = _priceTier <- None
  method reset_priceTier = _priceTier <- None

  val mutable _price : string option = None
  method get_price = _price
  method grab_price = match _price with None->raise (Field_empty "product.price") | Some _x2231 -> _x2231
  method set_price _x2231 = _price <- Some _x2231
  method unset_price = _price <- None
  method reset_price = _price <- None

  val mutable _currency : string option = None
  method get_currency = _currency
  method grab_currency = match _currency with None->raise (Field_empty "product.currency") | Some _x2232 -> _x2232
  method set_currency _x2232 = _currency <- Some _x2232
  method unset_currency = _currency <- None
  method reset_currency = _currency <- None

  val mutable _currencySymbol : string option = None
  method get_currencySymbol = _currencySymbol
  method grab_currencySymbol = match _currencySymbol with None->raise (Field_empty "product.currencySymbol") | Some _x2233 -> _x2233
  method set_currencySymbol _x2233 = _currencySymbol <- Some _x2233
  method unset_currencySymbol = _currencySymbol <- None
  method reset_currencySymbol = _currencySymbol <- None

  val mutable _paymentType : PaymentType.t option = None
  method get_paymentType = _paymentType
  method grab_paymentType = match _paymentType with None->raise (Field_empty "product.paymentType") | Some _x2234 -> _x2234
  method set_paymentType _x2234 = _paymentType <- Some _x2234
  method unset_paymentType = _paymentType <- None
  method reset_paymentType = _paymentType <- None

  val mutable _createDate : Int64.t option = None
  method get_createDate = _createDate
  method grab_createDate = match _createDate with None->raise (Field_empty "product.createDate") | Some _x2235 -> _x2235
  method set_createDate _x2235 = _createDate <- Some _x2235
  method unset_createDate = _createDate <- None
  method reset_createDate = _createDate <- None

  val mutable _ownFlag : bool option = None
  method get_ownFlag = _ownFlag
  method grab_ownFlag = match _ownFlag with None->raise (Field_empty "product.ownFlag") | Some _x2236 -> _x2236
  method set_ownFlag _x2236 = _ownFlag <- Some _x2236
  method unset_ownFlag = _ownFlag <- None
  method reset_ownFlag = _ownFlag <- None

  val mutable _eventType : ProductEventType.t option = None
  method get_eventType = _eventType
  method grab_eventType = match _eventType with None->raise (Field_empty "product.eventType") | Some _x2237 -> _x2237
  method set_eventType _x2237 = _eventType <- Some _x2237
  method unset_eventType = _eventType <- None
  method reset_eventType = _eventType <- None

  val mutable _urlSchema : string option = None
  method get_urlSchema = _urlSchema
  method grab_urlSchema = match _urlSchema with None->raise (Field_empty "product.urlSchema") | Some _x2238 -> _x2238
  method set_urlSchema _x2238 = _urlSchema <- Some _x2238
  method unset_urlSchema = _urlSchema <- None
  method reset_urlSchema = _urlSchema <- None

  val mutable _downloadUrl : string option = None
  method get_downloadUrl = _downloadUrl
  method grab_downloadUrl = match _downloadUrl with None->raise (Field_empty "product.downloadUrl") | Some _x2239 -> _x2239
  method set_downloadUrl _x2239 = _downloadUrl <- Some _x2239
  method unset_downloadUrl = _downloadUrl <- None
  method reset_downloadUrl = _downloadUrl <- None

  val mutable _buddyMid : string option = None
  method get_buddyMid = _buddyMid
  method grab_buddyMid = match _buddyMid with None->raise (Field_empty "product.buddyMid") | Some _x2240 -> _x2240
  method set_buddyMid _x2240 = _buddyMid <- Some _x2240
  method unset_buddyMid = _buddyMid <- None
  method reset_buddyMid = _buddyMid <- None

  val mutable _publishSince : Int64.t option = None
  method get_publishSince = _publishSince
  method grab_publishSince = match _publishSince with None->raise (Field_empty "product.publishSince") | Some _x2241 -> _x2241
  method set_publishSince _x2241 = _publishSince <- Some _x2241
  method unset_publishSince = _publishSince <- None
  method reset_publishSince = _publishSince <- None

  val mutable _newFlag : bool option = None
  method get_newFlag = _newFlag
  method grab_newFlag = match _newFlag with None->raise (Field_empty "product.newFlag") | Some _x2242 -> _x2242
  method set_newFlag _x2242 = _newFlag <- Some _x2242
  method unset_newFlag = _newFlag <- None
  method reset_newFlag = _newFlag <- None

  val mutable _missionFlag : bool option = None
  method get_missionFlag = _missionFlag
  method grab_missionFlag = match _missionFlag with None->raise (Field_empty "product.missionFlag") | Some _x2243 -> _x2243
  method set_missionFlag _x2243 = _missionFlag <- Some _x2243
  method unset_missionFlag = _missionFlag <- None
  method reset_missionFlag = _missionFlag <- None

  val mutable _categories : productCategory list option = None
  method get_categories = _categories
  method grab_categories = match _categories with None->raise (Field_empty "product.categories") | Some _x2244 -> _x2244
  method set_categories _x2244 = _categories <- Some _x2244
  method unset_categories = _categories <- None
  method reset_categories = _categories <- None

  val mutable _missionButtonText : string option = None
  method get_missionButtonText = _missionButtonText
  method grab_missionButtonText = match _missionButtonText with None->raise (Field_empty "product.missionButtonText") | Some _x2245 -> _x2245
  method set_missionButtonText _x2245 = _missionButtonText <- Some _x2245
  method unset_missionButtonText = _missionButtonText <- None
  method reset_missionButtonText = _missionButtonText <- None

  val mutable _missionShortDescription : string option = None
  method get_missionShortDescription = _missionShortDescription
  method grab_missionShortDescription = match _missionShortDescription with None->raise (Field_empty "product.missionShortDescription") | Some _x2246 -> _x2246
  method set_missionShortDescription _x2246 = _missionShortDescription <- Some _x2246
  method unset_missionShortDescription = _missionShortDescription <- None
  method reset_missionShortDescription = _missionShortDescription <- None

  val mutable _authorId : string option = None
  method get_authorId = _authorId
  method grab_authorId = match _authorId with None->raise (Field_empty "product.authorId") | Some _x2247 -> _x2247
  method set_authorId _x2247 = _authorId <- Some _x2247
  method unset_authorId = _authorId <- None
  method reset_authorId = _authorId <- None

  val mutable _grantedByDefault : bool option = None
  method get_grantedByDefault = _grantedByDefault
  method grab_grantedByDefault = match _grantedByDefault with None->raise (Field_empty "product.grantedByDefault") | Some _x2248 -> _x2248
  method set_grantedByDefault _x2248 = _grantedByDefault <- Some _x2248
  method unset_grantedByDefault = _grantedByDefault <- None
  method reset_grantedByDefault = _grantedByDefault <- None

  val mutable _displayOrder : Int32.t option = None
  method get_displayOrder = _displayOrder
  method grab_displayOrder = match _displayOrder with None->raise (Field_empty "product.displayOrder") | Some _x2249 -> _x2249
  method set_displayOrder _x2249 = _displayOrder <- Some _x2249
  method unset_displayOrder = _displayOrder <- None
  method reset_displayOrder = _displayOrder <- None

  val mutable _availableForPresent : bool option = None
  method get_availableForPresent = _availableForPresent
  method grab_availableForPresent = match _availableForPresent with None->raise (Field_empty "product.availableForPresent") | Some _x2250 -> _x2250
  method set_availableForPresent _x2250 = _availableForPresent <- Some _x2250
  method unset_availableForPresent = _availableForPresent <- None
  method reset_availableForPresent = _availableForPresent <- None

  val mutable _availableForMyself : bool option = None
  method get_availableForMyself = _availableForMyself
  method grab_availableForMyself = match _availableForMyself with None->raise (Field_empty "product.availableForMyself") | Some _x2251 -> _x2251
  method set_availableForMyself _x2251 = _availableForMyself <- Some _x2251
  method unset_availableForMyself = _availableForMyself <- None
  method reset_availableForMyself = _availableForMyself <- None

  val mutable _hasAnimation : bool option = None
  method get_hasAnimation = _hasAnimation
  method grab_hasAnimation = match _hasAnimation with None->raise (Field_empty "product.hasAnimation") | Some _x2252 -> _x2252
  method set_hasAnimation _x2252 = _hasAnimation <- Some _x2252
  method unset_hasAnimation = _hasAnimation <- None
  method reset_hasAnimation = _hasAnimation <- None

  val mutable _hasSound : bool option = None
  method get_hasSound = _hasSound
  method grab_hasSound = match _hasSound with None->raise (Field_empty "product.hasSound") | Some _x2253 -> _x2253
  method set_hasSound _x2253 = _hasSound <- Some _x2253
  method unset_hasSound = _hasSound <- None
  method reset_hasSound = _hasSound <- None

  val mutable _recommendationsEnabled : bool option = None
  method get_recommendationsEnabled = _recommendationsEnabled
  method grab_recommendationsEnabled = match _recommendationsEnabled with None->raise (Field_empty "product.recommendationsEnabled") | Some _x2254 -> _x2254
  method set_recommendationsEnabled _x2254 = _recommendationsEnabled <- Some _x2254
  method unset_recommendationsEnabled = _recommendationsEnabled <- None
  method reset_recommendationsEnabled = _recommendationsEnabled <- None

  val mutable _stickerResourceType : StickerResourceType.t option = None
  method get_stickerResourceType = _stickerResourceType
  method grab_stickerResourceType = match _stickerResourceType with None->raise (Field_empty "product.stickerResourceType") | Some _x2255 -> _x2255
  method set_stickerResourceType _x2255 = _stickerResourceType <- Some _x2255
  method unset_stickerResourceType = _stickerResourceType <- None
  method reset_stickerResourceType = _stickerResourceType <- None

  method copy =
      let _new = Oo.copy self in
      if _categories <> None then
        _new#set_categories (List.map (fun x -> x#copy) self#grab_categories);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Product";
    (match _productId with None -> () | Some _v -> 
      oprot#writeFieldBegin("productId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _packageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("packageId",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _version with None -> () | Some _v -> 
      oprot#writeFieldBegin("version",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _authorName with None -> () | Some _v -> 
      oprot#writeFieldBegin("authorName",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _onSale with None -> () | Some _v -> 
      oprot#writeFieldBegin("onSale",Protocol.T_BOOL,5);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _validDays with None -> () | Some _v -> 
      oprot#writeFieldBegin("validDays",Protocol.T_I32,6);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _saleType with None -> () | Some _v -> 
      oprot#writeFieldBegin("saleType",Protocol.T_I32,7);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _copyright with None -> () | Some _v -> 
      oprot#writeFieldBegin("copyright",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _title with None -> () | Some _v -> 
      oprot#writeFieldBegin("title",Protocol.T_STRING,9);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _descriptionText with None -> () | Some _v -> 
      oprot#writeFieldBegin("descriptionText",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _shopOrderId with None -> () | Some _v -> 
      oprot#writeFieldBegin("shopOrderId",Protocol.T_I64,11);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _fromMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("fromMid",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _toMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("toMid",Protocol.T_STRING,13);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _validUntil with None -> () | Some _v -> 
      oprot#writeFieldBegin("validUntil",Protocol.T_I64,14);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _priceTier with None -> () | Some _v -> 
      oprot#writeFieldBegin("priceTier",Protocol.T_I32,15);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _price with None -> () | Some _v -> 
      oprot#writeFieldBegin("price",Protocol.T_STRING,16);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _currency with None -> () | Some _v -> 
      oprot#writeFieldBegin("currency",Protocol.T_STRING,17);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _currencySymbol with None -> () | Some _v -> 
      oprot#writeFieldBegin("currencySymbol",Protocol.T_STRING,18);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _paymentType with None -> () | Some _v -> 
      oprot#writeFieldBegin("paymentType",Protocol.T_I32,19);
      oprot#writeI32(PaymentType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _createDate with None -> () | Some _v -> 
      oprot#writeFieldBegin("createDate",Protocol.T_I64,20);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _ownFlag with None -> () | Some _v -> 
      oprot#writeFieldBegin("ownFlag",Protocol.T_BOOL,21);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _eventType with None -> () | Some _v -> 
      oprot#writeFieldBegin("eventType",Protocol.T_I32,22);
      oprot#writeI32(ProductEventType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _urlSchema with None -> () | Some _v -> 
      oprot#writeFieldBegin("urlSchema",Protocol.T_STRING,23);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _downloadUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("downloadUrl",Protocol.T_STRING,24);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _buddyMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("buddyMid",Protocol.T_STRING,25);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _publishSince with None -> () | Some _v -> 
      oprot#writeFieldBegin("publishSince",Protocol.T_I64,26);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _newFlag with None -> () | Some _v -> 
      oprot#writeFieldBegin("newFlag",Protocol.T_BOOL,27);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _missionFlag with None -> () | Some _v -> 
      oprot#writeFieldBegin("missionFlag",Protocol.T_BOOL,28);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _categories with None -> () | Some _v -> 
      oprot#writeFieldBegin("categories",Protocol.T_LIST,29);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2258 ->         _iter2258#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _missionButtonText with None -> () | Some _v -> 
      oprot#writeFieldBegin("missionButtonText",Protocol.T_STRING,30);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _missionShortDescription with None -> () | Some _v -> 
      oprot#writeFieldBegin("missionShortDescription",Protocol.T_STRING,31);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _authorId with None -> () | Some _v -> 
      oprot#writeFieldBegin("authorId",Protocol.T_STRING,32);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _grantedByDefault with None -> () | Some _v -> 
      oprot#writeFieldBegin("grantedByDefault",Protocol.T_BOOL,41);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _displayOrder with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayOrder",Protocol.T_I32,42);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _availableForPresent with None -> () | Some _v -> 
      oprot#writeFieldBegin("availableForPresent",Protocol.T_BOOL,43);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _availableForMyself with None -> () | Some _v -> 
      oprot#writeFieldBegin("availableForMyself",Protocol.T_BOOL,44);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _hasAnimation with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasAnimation",Protocol.T_BOOL,51);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _hasSound with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasSound",Protocol.T_BOOL,52);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _recommendationsEnabled with None -> () | Some _v -> 
      oprot#writeFieldBegin("recommendationsEnabled",Protocol.T_BOOL,53);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _stickerResourceType with None -> () | Some _v -> 
      oprot#writeFieldBegin("stickerResourceType",Protocol.T_I32,54);
      oprot#writeI32(StickerResourceType.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_product (iprot : Protocol.t) =
  let _str2259 = new product in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2260,_id2261) = iprot#readFieldBegin in
        if _t2260 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2261 with 
          | 1 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_productId iprot#readString
            else
              iprot#skip _t2260)
          | 2 -> (if _t2260 = Protocol.T_I64 then
              _str2259#set_packageId iprot#readI64
            else
              iprot#skip _t2260)
          | 3 -> (if _t2260 = Protocol.T_I32 then
              _str2259#set_version iprot#readI32
            else
              iprot#skip _t2260)
          | 4 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_authorName iprot#readString
            else
              iprot#skip _t2260)
          | 5 -> (if _t2260 = Protocol.T_BOOL then
              _str2259#set_onSale iprot#readBool
            else
              iprot#skip _t2260)
          | 6 -> (if _t2260 = Protocol.T_I32 then
              _str2259#set_validDays iprot#readI32
            else
              iprot#skip _t2260)
          | 7 -> (if _t2260 = Protocol.T_I32 then
              _str2259#set_saleType iprot#readI32
            else
              iprot#skip _t2260)
          | 8 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_copyright iprot#readString
            else
              iprot#skip _t2260)
          | 9 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_title iprot#readString
            else
              iprot#skip _t2260)
          | 10 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_descriptionText iprot#readString
            else
              iprot#skip _t2260)
          | 11 -> (if _t2260 = Protocol.T_I64 then
              _str2259#set_shopOrderId iprot#readI64
            else
              iprot#skip _t2260)
          | 12 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_fromMid iprot#readString
            else
              iprot#skip _t2260)
          | 13 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_toMid iprot#readString
            else
              iprot#skip _t2260)
          | 14 -> (if _t2260 = Protocol.T_I64 then
              _str2259#set_validUntil iprot#readI64
            else
              iprot#skip _t2260)
          | 15 -> (if _t2260 = Protocol.T_I32 then
              _str2259#set_priceTier iprot#readI32
            else
              iprot#skip _t2260)
          | 16 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_price iprot#readString
            else
              iprot#skip _t2260)
          | 17 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_currency iprot#readString
            else
              iprot#skip _t2260)
          | 18 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_currencySymbol iprot#readString
            else
              iprot#skip _t2260)
          | 19 -> (if _t2260 = Protocol.T_I32 then
              _str2259#set_paymentType (PaymentType.of_i iprot#readI32)
            else
              iprot#skip _t2260)
          | 20 -> (if _t2260 = Protocol.T_I64 then
              _str2259#set_createDate iprot#readI64
            else
              iprot#skip _t2260)
          | 21 -> (if _t2260 = Protocol.T_BOOL then
              _str2259#set_ownFlag iprot#readBool
            else
              iprot#skip _t2260)
          | 22 -> (if _t2260 = Protocol.T_I32 then
              _str2259#set_eventType (ProductEventType.of_i iprot#readI32)
            else
              iprot#skip _t2260)
          | 23 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_urlSchema iprot#readString
            else
              iprot#skip _t2260)
          | 24 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_downloadUrl iprot#readString
            else
              iprot#skip _t2260)
          | 25 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_buddyMid iprot#readString
            else
              iprot#skip _t2260)
          | 26 -> (if _t2260 = Protocol.T_I64 then
              _str2259#set_publishSince iprot#readI64
            else
              iprot#skip _t2260)
          | 27 -> (if _t2260 = Protocol.T_BOOL then
              _str2259#set_newFlag iprot#readBool
            else
              iprot#skip _t2260)
          | 28 -> (if _t2260 = Protocol.T_BOOL then
              _str2259#set_missionFlag iprot#readBool
            else
              iprot#skip _t2260)
          | 29 -> (if _t2260 = Protocol.T_LIST then
              _str2259#set_categories 
                (let (_etype2265,_size2262) = iprot#readListBegin in
                  let _con2266 = (Array.to_list (Array.init _size2262 (fun _ -> (read_productCategory iprot)))) in
                    iprot#readListEnd; _con2266)
            else
              iprot#skip _t2260)
          | 30 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_missionButtonText iprot#readString
            else
              iprot#skip _t2260)
          | 31 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_missionShortDescription iprot#readString
            else
              iprot#skip _t2260)
          | 32 -> (if _t2260 = Protocol.T_STRING then
              _str2259#set_authorId iprot#readString
            else
              iprot#skip _t2260)
          | 41 -> (if _t2260 = Protocol.T_BOOL then
              _str2259#set_grantedByDefault iprot#readBool
            else
              iprot#skip _t2260)
          | 42 -> (if _t2260 = Protocol.T_I32 then
              _str2259#set_displayOrder iprot#readI32
            else
              iprot#skip _t2260)
          | 43 -> (if _t2260 = Protocol.T_BOOL then
              _str2259#set_availableForPresent iprot#readBool
            else
              iprot#skip _t2260)
          | 44 -> (if _t2260 = Protocol.T_BOOL then
              _str2259#set_availableForMyself iprot#readBool
            else
              iprot#skip _t2260)
          | 51 -> (if _t2260 = Protocol.T_BOOL then
              _str2259#set_hasAnimation iprot#readBool
            else
              iprot#skip _t2260)
          | 52 -> (if _t2260 = Protocol.T_BOOL then
              _str2259#set_hasSound iprot#readBool
            else
              iprot#skip _t2260)
          | 53 -> (if _t2260 = Protocol.T_BOOL then
              _str2259#set_recommendationsEnabled iprot#readBool
            else
              iprot#skip _t2260)
          | 54 -> (if _t2260 = Protocol.T_I32 then
              _str2259#set_stickerResourceType (StickerResourceType.of_i iprot#readI32)
            else
              iprot#skip _t2260)
          | _ -> iprot#skip _t2260);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2259

class productList =
object (self)
  val mutable _hasNext : bool option = None
  method get_hasNext = _hasNext
  method grab_hasNext = match _hasNext with None->raise (Field_empty "productList.hasNext") | Some _x2268 -> _x2268
  method set_hasNext _x2268 = _hasNext <- Some _x2268
  method unset_hasNext = _hasNext <- None
  method reset_hasNext = _hasNext <- None

  val mutable _bannerSequence : Int64.t option = None
  method get_bannerSequence = _bannerSequence
  method grab_bannerSequence = match _bannerSequence with None->raise (Field_empty "productList.bannerSequence") | Some _x2269 -> _x2269
  method set_bannerSequence _x2269 = _bannerSequence <- Some _x2269
  method unset_bannerSequence = _bannerSequence <- None
  method reset_bannerSequence = _bannerSequence <- None

  val mutable _bannerTargetType : ProductBannerLinkType.t option = None
  method get_bannerTargetType = _bannerTargetType
  method grab_bannerTargetType = match _bannerTargetType with None->raise (Field_empty "productList.bannerTargetType") | Some _x2270 -> _x2270
  method set_bannerTargetType _x2270 = _bannerTargetType <- Some _x2270
  method unset_bannerTargetType = _bannerTargetType <- None
  method reset_bannerTargetType = _bannerTargetType <- None

  val mutable _bannerTargetPath : string option = None
  method get_bannerTargetPath = _bannerTargetPath
  method grab_bannerTargetPath = match _bannerTargetPath with None->raise (Field_empty "productList.bannerTargetPath") | Some _x2271 -> _x2271
  method set_bannerTargetPath _x2271 = _bannerTargetPath <- Some _x2271
  method unset_bannerTargetPath = _bannerTargetPath <- None
  method reset_bannerTargetPath = _bannerTargetPath <- None

  val mutable _productList : product list option = None
  method get_productList = _productList
  method grab_productList = match _productList with None->raise (Field_empty "productList.productList") | Some _x2272 -> _x2272
  method set_productList _x2272 = _productList <- Some _x2272
  method unset_productList = _productList <- None
  method reset_productList = _productList <- None

  val mutable _bannerLang : string option = None
  method get_bannerLang = _bannerLang
  method grab_bannerLang = match _bannerLang with None->raise (Field_empty "productList.bannerLang") | Some _x2273 -> _x2273
  method set_bannerLang _x2273 = _bannerLang <- Some _x2273
  method unset_bannerLang = _bannerLang <- None
  method reset_bannerLang = _bannerLang <- None

  method copy =
      let _new = Oo.copy self in
      if _productList <> None then
        _new#set_productList (List.map (fun x -> x#copy) self#grab_productList);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ProductList";
    (match _hasNext with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasNext",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _bannerSequence with None -> () | Some _v -> 
      oprot#writeFieldBegin("bannerSequence",Protocol.T_I64,4);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _bannerTargetType with None -> () | Some _v -> 
      oprot#writeFieldBegin("bannerTargetType",Protocol.T_I32,5);
      oprot#writeI32(ProductBannerLinkType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _bannerTargetPath with None -> () | Some _v -> 
      oprot#writeFieldBegin("bannerTargetPath",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _productList with None -> () | Some _v -> 
      oprot#writeFieldBegin("productList",Protocol.T_LIST,7);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2276 ->         _iter2276#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _bannerLang with None -> () | Some _v -> 
      oprot#writeFieldBegin("bannerLang",Protocol.T_STRING,8);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_productList (iprot : Protocol.t) =
  let _str2277 = new productList in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2278,_id2279) = iprot#readFieldBegin in
        if _t2278 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2279 with 
          | 1 -> (if _t2278 = Protocol.T_BOOL then
              _str2277#set_hasNext iprot#readBool
            else
              iprot#skip _t2278)
          | 4 -> (if _t2278 = Protocol.T_I64 then
              _str2277#set_bannerSequence iprot#readI64
            else
              iprot#skip _t2278)
          | 5 -> (if _t2278 = Protocol.T_I32 then
              _str2277#set_bannerTargetType (ProductBannerLinkType.of_i iprot#readI32)
            else
              iprot#skip _t2278)
          | 6 -> (if _t2278 = Protocol.T_STRING then
              _str2277#set_bannerTargetPath iprot#readString
            else
              iprot#skip _t2278)
          | 7 -> (if _t2278 = Protocol.T_LIST then
              _str2277#set_productList 
                (let (_etype2283,_size2280) = iprot#readListBegin in
                  let _con2284 = (Array.to_list (Array.init _size2280 (fun _ -> (read_product iprot)))) in
                    iprot#readListEnd; _con2284)
            else
              iprot#skip _t2278)
          | 8 -> (if _t2278 = Protocol.T_STRING then
              _str2277#set_bannerLang iprot#readString
            else
              iprot#skip _t2278)
          | _ -> iprot#skip _t2278);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2277

class stickerIdRange =
object (self)
  val mutable _start : Int64.t option = None
  method get_start = _start
  method grab_start = match _start with None->raise (Field_empty "stickerIdRange.start") | Some _x2286 -> _x2286
  method set_start _x2286 = _start <- Some _x2286
  method unset_start = _start <- None
  method reset_start = _start <- None

  val mutable _size : Int32.t option = None
  method get_size = _size
  method grab_size = match _size with None->raise (Field_empty "stickerIdRange.size") | Some _x2287 -> _x2287
  method set_size _x2287 = _size <- Some _x2287
  method unset_size = _size <- None
  method reset_size = _size <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "StickerIdRange";
    (match _start with None -> () | Some _v -> 
      oprot#writeFieldBegin("start",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _size with None -> () | Some _v -> 
      oprot#writeFieldBegin("size",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_stickerIdRange (iprot : Protocol.t) =
  let _str2290 = new stickerIdRange in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2291,_id2292) = iprot#readFieldBegin in
        if _t2291 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2292 with 
          | 1 -> (if _t2291 = Protocol.T_I64 then
              _str2290#set_start iprot#readI64
            else
              iprot#skip _t2291)
          | 2 -> (if _t2291 = Protocol.T_I32 then
              _str2290#set_size iprot#readI32
            else
              iprot#skip _t2291)
          | _ -> iprot#skip _t2291);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2290

class productSimple =
object (self)
  val mutable _productId : string option = None
  method get_productId = _productId
  method grab_productId = match _productId with None->raise (Field_empty "productSimple.productId") | Some _x2294 -> _x2294
  method set_productId _x2294 = _productId <- Some _x2294
  method unset_productId = _productId <- None
  method reset_productId = _productId <- None

  val mutable _packageId : Int64.t option = None
  method get_packageId = _packageId
  method grab_packageId = match _packageId with None->raise (Field_empty "productSimple.packageId") | Some _x2295 -> _x2295
  method set_packageId _x2295 = _packageId <- Some _x2295
  method unset_packageId = _packageId <- None
  method reset_packageId = _packageId <- None

  val mutable _version : Int32.t option = None
  method get_version = _version
  method grab_version = match _version with None->raise (Field_empty "productSimple.version") | Some _x2296 -> _x2296
  method set_version _x2296 = _version <- Some _x2296
  method unset_version = _version <- None
  method reset_version = _version <- None

  val mutable _onSale : bool option = None
  method get_onSale = _onSale
  method grab_onSale = match _onSale with None->raise (Field_empty "productSimple.onSale") | Some _x2297 -> _x2297
  method set_onSale _x2297 = _onSale <- Some _x2297
  method unset_onSale = _onSale <- None
  method reset_onSale = _onSale <- None

  val mutable _validUntil : Int64.t option = None
  method get_validUntil = _validUntil
  method grab_validUntil = match _validUntil with None->raise (Field_empty "productSimple.validUntil") | Some _x2298 -> _x2298
  method set_validUntil _x2298 = _validUntil <- Some _x2298
  method unset_validUntil = _validUntil <- None
  method reset_validUntil = _validUntil <- None

  val mutable _stickerIdRanges : stickerIdRange list option = None
  method get_stickerIdRanges = _stickerIdRanges
  method grab_stickerIdRanges = match _stickerIdRanges with None->raise (Field_empty "productSimple.stickerIdRanges") | Some _x2299 -> _x2299
  method set_stickerIdRanges _x2299 = _stickerIdRanges <- Some _x2299
  method unset_stickerIdRanges = _stickerIdRanges <- None
  method reset_stickerIdRanges = _stickerIdRanges <- None

  val mutable _grantedByDefault : bool option = None
  method get_grantedByDefault = _grantedByDefault
  method grab_grantedByDefault = match _grantedByDefault with None->raise (Field_empty "productSimple.grantedByDefault") | Some _x2300 -> _x2300
  method set_grantedByDefault _x2300 = _grantedByDefault <- Some _x2300
  method unset_grantedByDefault = _grantedByDefault <- None
  method reset_grantedByDefault = _grantedByDefault <- None

  val mutable _displayOrder : Int32.t option = None
  method get_displayOrder = _displayOrder
  method grab_displayOrder = match _displayOrder with None->raise (Field_empty "productSimple.displayOrder") | Some _x2301 -> _x2301
  method set_displayOrder _x2301 = _displayOrder <- Some _x2301
  method unset_displayOrder = _displayOrder <- None
  method reset_displayOrder = _displayOrder <- None

  method copy =
      let _new = Oo.copy self in
      if _stickerIdRanges <> None then
        _new#set_stickerIdRanges (List.map (fun x -> x#copy) self#grab_stickerIdRanges);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ProductSimple";
    (match _productId with None -> () | Some _v -> 
      oprot#writeFieldBegin("productId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _packageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("packageId",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _version with None -> () | Some _v -> 
      oprot#writeFieldBegin("version",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _onSale with None -> () | Some _v -> 
      oprot#writeFieldBegin("onSale",Protocol.T_BOOL,4);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _validUntil with None -> () | Some _v -> 
      oprot#writeFieldBegin("validUntil",Protocol.T_I64,5);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _stickerIdRanges with None -> () | Some _v -> 
      oprot#writeFieldBegin("stickerIdRanges",Protocol.T_LIST,10);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2304 ->         _iter2304#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _grantedByDefault with None -> () | Some _v -> 
      oprot#writeFieldBegin("grantedByDefault",Protocol.T_BOOL,41);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _displayOrder with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayOrder",Protocol.T_I32,42);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_productSimple (iprot : Protocol.t) =
  let _str2305 = new productSimple in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2306,_id2307) = iprot#readFieldBegin in
        if _t2306 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2307 with 
          | 1 -> (if _t2306 = Protocol.T_STRING then
              _str2305#set_productId iprot#readString
            else
              iprot#skip _t2306)
          | 2 -> (if _t2306 = Protocol.T_I64 then
              _str2305#set_packageId iprot#readI64
            else
              iprot#skip _t2306)
          | 3 -> (if _t2306 = Protocol.T_I32 then
              _str2305#set_version iprot#readI32
            else
              iprot#skip _t2306)
          | 4 -> (if _t2306 = Protocol.T_BOOL then
              _str2305#set_onSale iprot#readBool
            else
              iprot#skip _t2306)
          | 5 -> (if _t2306 = Protocol.T_I64 then
              _str2305#set_validUntil iprot#readI64
            else
              iprot#skip _t2306)
          | 10 -> (if _t2306 = Protocol.T_LIST then
              _str2305#set_stickerIdRanges 
                (let (_etype2311,_size2308) = iprot#readListBegin in
                  let _con2312 = (Array.to_list (Array.init _size2308 (fun _ -> (read_stickerIdRange iprot)))) in
                    iprot#readListEnd; _con2312)
            else
              iprot#skip _t2306)
          | 41 -> (if _t2306 = Protocol.T_BOOL then
              _str2305#set_grantedByDefault iprot#readBool
            else
              iprot#skip _t2306)
          | 42 -> (if _t2306 = Protocol.T_I32 then
              _str2305#set_displayOrder iprot#readI32
            else
              iprot#skip _t2306)
          | _ -> iprot#skip _t2306);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2305

class productSimpleList =
object (self)
  val mutable _hasNext : bool option = None
  method get_hasNext = _hasNext
  method grab_hasNext = match _hasNext with None->raise (Field_empty "productSimpleList.hasNext") | Some _x2314 -> _x2314
  method set_hasNext _x2314 = _hasNext <- Some _x2314
  method unset_hasNext = _hasNext <- None
  method reset_hasNext = _hasNext <- None

  val mutable _reinvokeHour : Int32.t option = None
  method get_reinvokeHour = _reinvokeHour
  method grab_reinvokeHour = match _reinvokeHour with None->raise (Field_empty "productSimpleList.reinvokeHour") | Some _x2315 -> _x2315
  method set_reinvokeHour _x2315 = _reinvokeHour <- Some _x2315
  method unset_reinvokeHour = _reinvokeHour <- None
  method reset_reinvokeHour = _reinvokeHour <- None

  val mutable _lastVersionSeq : Int64.t option = None
  method get_lastVersionSeq = _lastVersionSeq
  method grab_lastVersionSeq = match _lastVersionSeq with None->raise (Field_empty "productSimpleList.lastVersionSeq") | Some _x2316 -> _x2316
  method set_lastVersionSeq _x2316 = _lastVersionSeq <- Some _x2316
  method unset_lastVersionSeq = _lastVersionSeq <- None
  method reset_lastVersionSeq = _lastVersionSeq <- None

  val mutable _productList : productSimple list option = None
  method get_productList = _productList
  method grab_productList = match _productList with None->raise (Field_empty "productSimpleList.productList") | Some _x2317 -> _x2317
  method set_productList _x2317 = _productList <- Some _x2317
  method unset_productList = _productList <- None
  method reset_productList = _productList <- None

  val mutable _recentNewReleaseDate : Int64.t option = None
  method get_recentNewReleaseDate = _recentNewReleaseDate
  method grab_recentNewReleaseDate = match _recentNewReleaseDate with None->raise (Field_empty "productSimpleList.recentNewReleaseDate") | Some _x2318 -> _x2318
  method set_recentNewReleaseDate _x2318 = _recentNewReleaseDate <- Some _x2318
  method unset_recentNewReleaseDate = _recentNewReleaseDate <- None
  method reset_recentNewReleaseDate = _recentNewReleaseDate <- None

  val mutable _recentEventReleaseDate : Int64.t option = None
  method get_recentEventReleaseDate = _recentEventReleaseDate
  method grab_recentEventReleaseDate = match _recentEventReleaseDate with None->raise (Field_empty "productSimpleList.recentEventReleaseDate") | Some _x2319 -> _x2319
  method set_recentEventReleaseDate _x2319 = _recentEventReleaseDate <- Some _x2319
  method unset_recentEventReleaseDate = _recentEventReleaseDate <- None
  method reset_recentEventReleaseDate = _recentEventReleaseDate <- None

  method copy =
      let _new = Oo.copy self in
      if _productList <> None then
        _new#set_productList (List.map (fun x -> x#copy) self#grab_productList);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ProductSimpleList";
    (match _hasNext with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasNext",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _reinvokeHour with None -> () | Some _v -> 
      oprot#writeFieldBegin("reinvokeHour",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _lastVersionSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("lastVersionSeq",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _productList with None -> () | Some _v -> 
      oprot#writeFieldBegin("productList",Protocol.T_LIST,4);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2322 ->         _iter2322#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _recentNewReleaseDate with None -> () | Some _v -> 
      oprot#writeFieldBegin("recentNewReleaseDate",Protocol.T_I64,5);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _recentEventReleaseDate with None -> () | Some _v -> 
      oprot#writeFieldBegin("recentEventReleaseDate",Protocol.T_I64,6);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_productSimpleList (iprot : Protocol.t) =
  let _str2323 = new productSimpleList in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2324,_id2325) = iprot#readFieldBegin in
        if _t2324 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2325 with 
          | 1 -> (if _t2324 = Protocol.T_BOOL then
              _str2323#set_hasNext iprot#readBool
            else
              iprot#skip _t2324)
          | 2 -> (if _t2324 = Protocol.T_I32 then
              _str2323#set_reinvokeHour iprot#readI32
            else
              iprot#skip _t2324)
          | 3 -> (if _t2324 = Protocol.T_I64 then
              _str2323#set_lastVersionSeq iprot#readI64
            else
              iprot#skip _t2324)
          | 4 -> (if _t2324 = Protocol.T_LIST then
              _str2323#set_productList 
                (let (_etype2329,_size2326) = iprot#readListBegin in
                  let _con2330 = (Array.to_list (Array.init _size2326 (fun _ -> (read_productSimple iprot)))) in
                    iprot#readListEnd; _con2330)
            else
              iprot#skip _t2324)
          | 5 -> (if _t2324 = Protocol.T_I64 then
              _str2323#set_recentNewReleaseDate iprot#readI64
            else
              iprot#skip _t2324)
          | 6 -> (if _t2324 = Protocol.T_I64 then
              _str2323#set_recentEventReleaseDate iprot#readI64
            else
              iprot#skip _t2324)
          | _ -> iprot#skip _t2324);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2323

class profile =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "profile.mid") | Some _x2332 -> _x2332
  method set_mid _x2332 = _mid <- Some _x2332
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _userid : string option = None
  method get_userid = _userid
  method grab_userid = match _userid with None->raise (Field_empty "profile.userid") | Some _x2333 -> _x2333
  method set_userid _x2333 = _userid <- Some _x2333
  method unset_userid = _userid <- None
  method reset_userid = _userid <- None

  val mutable _phone : string option = None
  method get_phone = _phone
  method grab_phone = match _phone with None->raise (Field_empty "profile.phone") | Some _x2334 -> _x2334
  method set_phone _x2334 = _phone <- Some _x2334
  method unset_phone = _phone <- None
  method reset_phone = _phone <- None

  val mutable _email : string option = None
  method get_email = _email
  method grab_email = match _email with None->raise (Field_empty "profile.email") | Some _x2335 -> _x2335
  method set_email _x2335 = _email <- Some _x2335
  method unset_email = _email <- None
  method reset_email = _email <- None

  val mutable _regionCode : string option = None
  method get_regionCode = _regionCode
  method grab_regionCode = match _regionCode with None->raise (Field_empty "profile.regionCode") | Some _x2336 -> _x2336
  method set_regionCode _x2336 = _regionCode <- Some _x2336
  method unset_regionCode = _regionCode <- None
  method reset_regionCode = _regionCode <- None

  val mutable _displayName : string option = None
  method get_displayName = _displayName
  method grab_displayName = match _displayName with None->raise (Field_empty "profile.displayName") | Some _x2337 -> _x2337
  method set_displayName _x2337 = _displayName <- Some _x2337
  method unset_displayName = _displayName <- None
  method reset_displayName = _displayName <- None

  val mutable _phoneticName : string option = None
  method get_phoneticName = _phoneticName
  method grab_phoneticName = match _phoneticName with None->raise (Field_empty "profile.phoneticName") | Some _x2338 -> _x2338
  method set_phoneticName _x2338 = _phoneticName <- Some _x2338
  method unset_phoneticName = _phoneticName <- None
  method reset_phoneticName = _phoneticName <- None

  val mutable _pictureStatus : string option = None
  method get_pictureStatus = _pictureStatus
  method grab_pictureStatus = match _pictureStatus with None->raise (Field_empty "profile.pictureStatus") | Some _x2339 -> _x2339
  method set_pictureStatus _x2339 = _pictureStatus <- Some _x2339
  method unset_pictureStatus = _pictureStatus <- None
  method reset_pictureStatus = _pictureStatus <- None

  val mutable _thumbnailUrl : string option = None
  method get_thumbnailUrl = _thumbnailUrl
  method grab_thumbnailUrl = match _thumbnailUrl with None->raise (Field_empty "profile.thumbnailUrl") | Some _x2340 -> _x2340
  method set_thumbnailUrl _x2340 = _thumbnailUrl <- Some _x2340
  method unset_thumbnailUrl = _thumbnailUrl <- None
  method reset_thumbnailUrl = _thumbnailUrl <- None

  val mutable _statusMessage : string option = None
  method get_statusMessage = _statusMessage
  method grab_statusMessage = match _statusMessage with None->raise (Field_empty "profile.statusMessage") | Some _x2341 -> _x2341
  method set_statusMessage _x2341 = _statusMessage <- Some _x2341
  method unset_statusMessage = _statusMessage <- None
  method reset_statusMessage = _statusMessage <- None

  val mutable _allowSearchByUserid : bool option = None
  method get_allowSearchByUserid = _allowSearchByUserid
  method grab_allowSearchByUserid = match _allowSearchByUserid with None->raise (Field_empty "profile.allowSearchByUserid") | Some _x2342 -> _x2342
  method set_allowSearchByUserid _x2342 = _allowSearchByUserid <- Some _x2342
  method unset_allowSearchByUserid = _allowSearchByUserid <- None
  method reset_allowSearchByUserid = _allowSearchByUserid <- None

  val mutable _allowSearchByEmail : bool option = None
  method get_allowSearchByEmail = _allowSearchByEmail
  method grab_allowSearchByEmail = match _allowSearchByEmail with None->raise (Field_empty "profile.allowSearchByEmail") | Some _x2343 -> _x2343
  method set_allowSearchByEmail _x2343 = _allowSearchByEmail <- Some _x2343
  method unset_allowSearchByEmail = _allowSearchByEmail <- None
  method reset_allowSearchByEmail = _allowSearchByEmail <- None

  val mutable _picturePath : string option = None
  method get_picturePath = _picturePath
  method grab_picturePath = match _picturePath with None->raise (Field_empty "profile.picturePath") | Some _x2344 -> _x2344
  method set_picturePath _x2344 = _picturePath <- Some _x2344
  method unset_picturePath = _picturePath <- None
  method reset_picturePath = _picturePath <- None

  val mutable _musicProfile : string option = None
  method get_musicProfile = _musicProfile
  method grab_musicProfile = match _musicProfile with None->raise (Field_empty "profile.musicProfile") | Some _x2345 -> _x2345
  method set_musicProfile _x2345 = _musicProfile <- Some _x2345
  method unset_musicProfile = _musicProfile <- None
  method reset_musicProfile = _musicProfile <- None

  val mutable _videoProfile : string option = None
  method get_videoProfile = _videoProfile
  method grab_videoProfile = match _videoProfile with None->raise (Field_empty "profile.videoProfile") | Some _x2346 -> _x2346
  method set_videoProfile _x2346 = _videoProfile <- Some _x2346
  method unset_videoProfile = _videoProfile <- None
  method reset_videoProfile = _videoProfile <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Profile";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _userid with None -> () | Some _v -> 
      oprot#writeFieldBegin("userid",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _phone with None -> () | Some _v -> 
      oprot#writeFieldBegin("phone",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _email with None -> () | Some _v -> 
      oprot#writeFieldBegin("email",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _regionCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("regionCode",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayName",Protocol.T_STRING,20);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _phoneticName with None -> () | Some _v -> 
      oprot#writeFieldBegin("phoneticName",Protocol.T_STRING,21);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _pictureStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("pictureStatus",Protocol.T_STRING,22);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _thumbnailUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("thumbnailUrl",Protocol.T_STRING,23);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _statusMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("statusMessage",Protocol.T_STRING,24);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _allowSearchByUserid with None -> () | Some _v -> 
      oprot#writeFieldBegin("allowSearchByUserid",Protocol.T_BOOL,31);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _allowSearchByEmail with None -> () | Some _v -> 
      oprot#writeFieldBegin("allowSearchByEmail",Protocol.T_BOOL,32);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _picturePath with None -> () | Some _v -> 
      oprot#writeFieldBegin("picturePath",Protocol.T_STRING,33);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _musicProfile with None -> () | Some _v -> 
      oprot#writeFieldBegin("musicProfile",Protocol.T_STRING,34);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _videoProfile with None -> () | Some _v -> 
      oprot#writeFieldBegin("videoProfile",Protocol.T_STRING,35);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_profile (iprot : Protocol.t) =
  let _str2349 = new profile in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2350,_id2351) = iprot#readFieldBegin in
        if _t2350 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2351 with 
          | 1 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_mid iprot#readString
            else
              iprot#skip _t2350)
          | 3 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_userid iprot#readString
            else
              iprot#skip _t2350)
          | 10 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_phone iprot#readString
            else
              iprot#skip _t2350)
          | 11 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_email iprot#readString
            else
              iprot#skip _t2350)
          | 12 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_regionCode iprot#readString
            else
              iprot#skip _t2350)
          | 20 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_displayName iprot#readString
            else
              iprot#skip _t2350)
          | 21 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_phoneticName iprot#readString
            else
              iprot#skip _t2350)
          | 22 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_pictureStatus iprot#readString
            else
              iprot#skip _t2350)
          | 23 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_thumbnailUrl iprot#readString
            else
              iprot#skip _t2350)
          | 24 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_statusMessage iprot#readString
            else
              iprot#skip _t2350)
          | 31 -> (if _t2350 = Protocol.T_BOOL then
              _str2349#set_allowSearchByUserid iprot#readBool
            else
              iprot#skip _t2350)
          | 32 -> (if _t2350 = Protocol.T_BOOL then
              _str2349#set_allowSearchByEmail iprot#readBool
            else
              iprot#skip _t2350)
          | 33 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_picturePath iprot#readString
            else
              iprot#skip _t2350)
          | 34 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_musicProfile iprot#readString
            else
              iprot#skip _t2350)
          | 35 -> (if _t2350 = Protocol.T_STRING then
              _str2349#set_videoProfile iprot#readString
            else
              iprot#skip _t2350)
          | _ -> iprot#skip _t2350);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2349

class proximityMatchCandidateResult =
object (self)
  val mutable _users : contact list option = None
  method get_users = _users
  method grab_users = match _users with None->raise (Field_empty "proximityMatchCandidateResult.users") | Some _x2353 -> _x2353
  method set_users _x2353 = _users <- Some _x2353
  method unset_users = _users <- None
  method reset_users = _users <- None

  val mutable _buddies : contact list option = None
  method get_buddies = _buddies
  method grab_buddies = match _buddies with None->raise (Field_empty "proximityMatchCandidateResult.buddies") | Some _x2354 -> _x2354
  method set_buddies _x2354 = _buddies <- Some _x2354
  method unset_buddies = _buddies <- None
  method reset_buddies = _buddies <- None

  method copy =
      let _new = Oo.copy self in
      if _users <> None then
        _new#set_users (List.map (fun x -> x#copy) self#grab_users);
      if _buddies <> None then
        _new#set_buddies (List.map (fun x -> x#copy) self#grab_buddies);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ProximityMatchCandidateResult";
    (match _users with None -> () | Some _v -> 
      oprot#writeFieldBegin("users",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2357 ->         _iter2357#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _buddies with None -> () | Some _v -> 
      oprot#writeFieldBegin("buddies",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2358 ->         _iter2358#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_proximityMatchCandidateResult (iprot : Protocol.t) =
  let _str2359 = new proximityMatchCandidateResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2360,_id2361) = iprot#readFieldBegin in
        if _t2360 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2361 with 
          | 1 -> (if _t2360 = Protocol.T_LIST then
              _str2359#set_users 
                (let (_etype2365,_size2362) = iprot#readListBegin in
                  let _con2366 = (Array.to_list (Array.init _size2362 (fun _ -> (read_contact iprot)))) in
                    iprot#readListEnd; _con2366)
            else
              iprot#skip _t2360)
          | 2 -> (if _t2360 = Protocol.T_LIST then
              _str2359#set_buddies 
                (let (_etype2370,_size2367) = iprot#readListBegin in
                  let _con2371 = (Array.to_list (Array.init _size2367 (fun _ -> (read_contact iprot)))) in
                    iprot#readListEnd; _con2371)
            else
              iprot#skip _t2360)
          | _ -> iprot#skip _t2360);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2359

class registerWithSnsIdResult =
object (self)
  val mutable _authToken : string option = None
  method get_authToken = _authToken
  method grab_authToken = match _authToken with None->raise (Field_empty "registerWithSnsIdResult.authToken") | Some _x2373 -> _x2373
  method set_authToken _x2373 = _authToken <- Some _x2373
  method unset_authToken = _authToken <- None
  method reset_authToken = _authToken <- None

  val mutable _userCreated : bool option = None
  method get_userCreated = _userCreated
  method grab_userCreated = match _userCreated with None->raise (Field_empty "registerWithSnsIdResult.userCreated") | Some _x2374 -> _x2374
  method set_userCreated _x2374 = _userCreated <- Some _x2374
  method unset_userCreated = _userCreated <- None
  method reset_userCreated = _userCreated <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "RegisterWithSnsIdResult";
    (match _authToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("authToken",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _userCreated with None -> () | Some _v -> 
      oprot#writeFieldBegin("userCreated",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_registerWithSnsIdResult (iprot : Protocol.t) =
  let _str2377 = new registerWithSnsIdResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2378,_id2379) = iprot#readFieldBegin in
        if _t2378 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2379 with 
          | 1 -> (if _t2378 = Protocol.T_STRING then
              _str2377#set_authToken iprot#readString
            else
              iprot#skip _t2378)
          | 2 -> (if _t2378 = Protocol.T_BOOL then
              _str2377#set_userCreated iprot#readBool
            else
              iprot#skip _t2378)
          | _ -> iprot#skip _t2378);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2377

class requestTokenResponse =
object (self)
  val mutable _requestToken : string option = None
  method get_requestToken = _requestToken
  method grab_requestToken = match _requestToken with None->raise (Field_empty "requestTokenResponse.requestToken") | Some _x2381 -> _x2381
  method set_requestToken _x2381 = _requestToken <- Some _x2381
  method unset_requestToken = _requestToken <- None
  method reset_requestToken = _requestToken <- None

  val mutable _returnUrl : string option = None
  method get_returnUrl = _returnUrl
  method grab_returnUrl = match _returnUrl with None->raise (Field_empty "requestTokenResponse.returnUrl") | Some _x2382 -> _x2382
  method set_returnUrl _x2382 = _returnUrl <- Some _x2382
  method unset_returnUrl = _returnUrl <- None
  method reset_returnUrl = _returnUrl <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "RequestTokenResponse";
    (match _requestToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("requestToken",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _returnUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("returnUrl",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_requestTokenResponse (iprot : Protocol.t) =
  let _str2385 = new requestTokenResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2386,_id2387) = iprot#readFieldBegin in
        if _t2386 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2387 with 
          | 1 -> (if _t2386 = Protocol.T_STRING then
              _str2385#set_requestToken iprot#readString
            else
              iprot#skip _t2386)
          | 2 -> (if _t2386 = Protocol.T_STRING then
              _str2385#set_returnUrl iprot#readString
            else
              iprot#skip _t2386)
          | _ -> iprot#skip _t2386);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2385

class room =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "room.mid") | Some _x2389 -> _x2389
  method set_mid _x2389 = _mid <- Some _x2389
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "room.createdTime") | Some _x2390 -> _x2390
  method set_createdTime _x2390 = _createdTime <- Some _x2390
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _contacts : contact list option = None
  method get_contacts = _contacts
  method grab_contacts = match _contacts with None->raise (Field_empty "room.contacts") | Some _x2391 -> _x2391
  method set_contacts _x2391 = _contacts <- Some _x2391
  method unset_contacts = _contacts <- None
  method reset_contacts = _contacts <- None

  val mutable _notificationDisabled : bool option = None
  method get_notificationDisabled = _notificationDisabled
  method grab_notificationDisabled = match _notificationDisabled with None->raise (Field_empty "room.notificationDisabled") | Some _x2392 -> _x2392
  method set_notificationDisabled _x2392 = _notificationDisabled <- Some _x2392
  method unset_notificationDisabled = _notificationDisabled <- None
  method reset_notificationDisabled = _notificationDisabled <- None

  val mutable _memberMids : string list option = None
  method get_memberMids = _memberMids
  method grab_memberMids = match _memberMids with None->raise (Field_empty "room.memberMids") | Some _x2393 -> _x2393
  method set_memberMids _x2393 = _memberMids <- Some _x2393
  method unset_memberMids = _memberMids <- None
  method reset_memberMids = _memberMids <- None

  method copy =
      let _new = Oo.copy self in
      if _contacts <> None then
        _new#set_contacts (List.map (fun x -> x#copy) self#grab_contacts);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Room";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _contacts with None -> () | Some _v -> 
      oprot#writeFieldBegin("contacts",Protocol.T_LIST,10);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2396 ->         _iter2396#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _notificationDisabled with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationDisabled",Protocol.T_BOOL,31);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _memberMids with None -> () | Some _v -> 
      oprot#writeFieldBegin("memberMids",Protocol.T_LIST,40);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter2397 ->         oprot#writeString(_iter2397);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_room (iprot : Protocol.t) =
  let _str2398 = new room in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2399,_id2400) = iprot#readFieldBegin in
        if _t2399 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2400 with 
          | 1 -> (if _t2399 = Protocol.T_STRING then
              _str2398#set_mid iprot#readString
            else
              iprot#skip _t2399)
          | 2 -> (if _t2399 = Protocol.T_I64 then
              _str2398#set_createdTime iprot#readI64
            else
              iprot#skip _t2399)
          | 10 -> (if _t2399 = Protocol.T_LIST then
              _str2398#set_contacts 
                (let (_etype2404,_size2401) = iprot#readListBegin in
                  let _con2405 = (Array.to_list (Array.init _size2401 (fun _ -> (read_contact iprot)))) in
                    iprot#readListEnd; _con2405)
            else
              iprot#skip _t2399)
          | 31 -> (if _t2399 = Protocol.T_BOOL then
              _str2398#set_notificationDisabled iprot#readBool
            else
              iprot#skip _t2399)
          | 40 -> (if _t2399 = Protocol.T_LIST then
              _str2398#set_memberMids 
                (let (_etype2409,_size2406) = iprot#readListBegin in
                  let _con2410 = (Array.to_list (Array.init _size2406 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con2410)
            else
              iprot#skip _t2399)
          | _ -> iprot#skip _t2399);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2398

class suggestDictionary =
object (self)
  val mutable _language : string option = None
  method get_language = _language
  method grab_language = match _language with None->raise (Field_empty "suggestDictionary.language") | Some _x2412 -> _x2412
  method set_language _x2412 = _language <- Some _x2412
  method unset_language = _language <- None
  method reset_language = _language <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "suggestDictionary.name") | Some _x2413 -> _x2413
  method set_name _x2413 = _name <- Some _x2413
  method unset_name = _name <- None
  method reset_name = _name <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SuggestDictionary";
    (match _language with None -> () | Some _v -> 
      oprot#writeFieldBegin("language",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_suggestDictionary (iprot : Protocol.t) =
  let _str2416 = new suggestDictionary in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2417,_id2418) = iprot#readFieldBegin in
        if _t2417 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2418 with 
          | 1 -> (if _t2417 = Protocol.T_STRING then
              _str2416#set_language iprot#readString
            else
              iprot#skip _t2417)
          | 2 -> (if _t2417 = Protocol.T_STRING then
              _str2416#set_name iprot#readString
            else
              iprot#skip _t2417)
          | _ -> iprot#skip _t2417);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2416

class suggestItemDictionaryIncrement =
object (self)
  val mutable _status : SuggestDictionaryIncrementStatus.t option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "suggestItemDictionaryIncrement.status") | Some _x2420 -> _x2420
  method set_status _x2420 = _status <- Some _x2420
  method unset_status = _status <- None
  method reset_status = _status <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "suggestItemDictionaryIncrement.revision") | Some _x2421 -> _x2421
  method set_revision _x2421 = _revision <- Some _x2421
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _scheme : string option = None
  method get_scheme = _scheme
  method grab_scheme = match _scheme with None->raise (Field_empty "suggestItemDictionaryIncrement.scheme") | Some _x2422 -> _x2422
  method set_scheme _x2422 = _scheme <- Some _x2422
  method unset_scheme = _scheme <- None
  method reset_scheme = _scheme <- None

  val mutable _data : string option = None
  method get_data = _data
  method grab_data = match _data with None->raise (Field_empty "suggestItemDictionaryIncrement.data") | Some _x2423 -> _x2423
  method set_data _x2423 = _data <- Some _x2423
  method unset_data = _data <- None
  method reset_data = _data <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SuggestItemDictionaryIncrement";
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_I32,1);
      oprot#writeI32(SuggestDictionaryIncrementStatus.to_i _v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _scheme with None -> () | Some _v -> 
      oprot#writeFieldBegin("scheme",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _data with None -> () | Some _v -> 
      oprot#writeFieldBegin("data",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_suggestItemDictionaryIncrement (iprot : Protocol.t) =
  let _str2426 = new suggestItemDictionaryIncrement in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2427,_id2428) = iprot#readFieldBegin in
        if _t2427 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2428 with 
          | 1 -> (if _t2427 = Protocol.T_I32 then
              _str2426#set_status (SuggestDictionaryIncrementStatus.of_i iprot#readI32)
            else
              iprot#skip _t2427)
          | 2 -> (if _t2427 = Protocol.T_I64 then
              _str2426#set_revision iprot#readI64
            else
              iprot#skip _t2427)
          | 3 -> (if _t2427 = Protocol.T_STRING then
              _str2426#set_scheme iprot#readString
            else
              iprot#skip _t2427)
          | 4 -> (if _t2427 = Protocol.T_STRING then
              _str2426#set_data iprot#readString
            else
              iprot#skip _t2427)
          | _ -> iprot#skip _t2427);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2426

class suggestTagDictionaryIncrement =
object (self)
  val mutable _status : SuggestDictionaryIncrementStatus.t option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "suggestTagDictionaryIncrement.status") | Some _x2430 -> _x2430
  method set_status _x2430 = _status <- Some _x2430
  method unset_status = _status <- None
  method reset_status = _status <- None

  val mutable _language : string option = None
  method get_language = _language
  method grab_language = match _language with None->raise (Field_empty "suggestTagDictionaryIncrement.language") | Some _x2431 -> _x2431
  method set_language _x2431 = _language <- Some _x2431
  method unset_language = _language <- None
  method reset_language = _language <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "suggestTagDictionaryIncrement.revision") | Some _x2432 -> _x2432
  method set_revision _x2432 = _revision <- Some _x2432
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _scheme : string option = None
  method get_scheme = _scheme
  method grab_scheme = match _scheme with None->raise (Field_empty "suggestTagDictionaryIncrement.scheme") | Some _x2433 -> _x2433
  method set_scheme _x2433 = _scheme <- Some _x2433
  method unset_scheme = _scheme <- None
  method reset_scheme = _scheme <- None

  val mutable _data : string option = None
  method get_data = _data
  method grab_data = match _data with None->raise (Field_empty "suggestTagDictionaryIncrement.data") | Some _x2434 -> _x2434
  method set_data _x2434 = _data <- Some _x2434
  method unset_data = _data <- None
  method reset_data = _data <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SuggestTagDictionaryIncrement";
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_I32,1);
      oprot#writeI32(SuggestDictionaryIncrementStatus.to_i _v);
      oprot#writeFieldEnd
    );
    (match _language with None -> () | Some _v -> 
      oprot#writeFieldBegin("language",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _scheme with None -> () | Some _v -> 
      oprot#writeFieldBegin("scheme",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _data with None -> () | Some _v -> 
      oprot#writeFieldBegin("data",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_suggestTagDictionaryIncrement (iprot : Protocol.t) =
  let _str2437 = new suggestTagDictionaryIncrement in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2438,_id2439) = iprot#readFieldBegin in
        if _t2438 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2439 with 
          | 1 -> (if _t2438 = Protocol.T_I32 then
              _str2437#set_status (SuggestDictionaryIncrementStatus.of_i iprot#readI32)
            else
              iprot#skip _t2438)
          | 2 -> (if _t2438 = Protocol.T_STRING then
              _str2437#set_language iprot#readString
            else
              iprot#skip _t2438)
          | 3 -> (if _t2438 = Protocol.T_I64 then
              _str2437#set_revision iprot#readI64
            else
              iprot#skip _t2438)
          | 4 -> (if _t2438 = Protocol.T_STRING then
              _str2437#set_scheme iprot#readString
            else
              iprot#skip _t2438)
          | 5 -> (if _t2438 = Protocol.T_STRING then
              _str2437#set_data iprot#readString
            else
              iprot#skip _t2438)
          | _ -> iprot#skip _t2438);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2437

class suggestDictionaryIncrements =
object (self)
  val mutable _itemIncrement : suggestItemDictionaryIncrement option = None
  method get_itemIncrement = _itemIncrement
  method grab_itemIncrement = match _itemIncrement with None->raise (Field_empty "suggestDictionaryIncrements.itemIncrement") | Some _x2441 -> _x2441
  method set_itemIncrement _x2441 = _itemIncrement <- Some _x2441
  method unset_itemIncrement = _itemIncrement <- None
  method reset_itemIncrement = _itemIncrement <- None

  val mutable _tagIncrements : suggestTagDictionaryIncrement list option = None
  method get_tagIncrements = _tagIncrements
  method grab_tagIncrements = match _tagIncrements with None->raise (Field_empty "suggestDictionaryIncrements.tagIncrements") | Some _x2442 -> _x2442
  method set_tagIncrements _x2442 = _tagIncrements <- Some _x2442
  method unset_tagIncrements = _tagIncrements <- None
  method reset_tagIncrements = _tagIncrements <- None

  method copy =
      let _new = Oo.copy self in
      if _itemIncrement <> None then
        _new#set_itemIncrement self#grab_itemIncrement#copy;
      if _tagIncrements <> None then
        _new#set_tagIncrements (List.map (fun x -> x#copy) self#grab_tagIncrements);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SuggestDictionaryIncrements";
    (match _itemIncrement with None -> () | Some _v -> 
      oprot#writeFieldBegin("itemIncrement",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _tagIncrements with None -> () | Some _v -> 
      oprot#writeFieldBegin("tagIncrements",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2445 ->         _iter2445#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_suggestDictionaryIncrements (iprot : Protocol.t) =
  let _str2446 = new suggestDictionaryIncrements in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2447,_id2448) = iprot#readFieldBegin in
        if _t2447 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2448 with 
          | 1 -> (if _t2447 = Protocol.T_STRUCT then
              _str2446#set_itemIncrement (read_suggestItemDictionaryIncrement iprot)
            else
              iprot#skip _t2447)
          | 2 -> (if _t2447 = Protocol.T_LIST then
              _str2446#set_tagIncrements 
                (let (_etype2452,_size2449) = iprot#readListBegin in
                  let _con2453 = (Array.to_list (Array.init _size2449 (fun _ -> (read_suggestTagDictionaryIncrement iprot)))) in
                    iprot#readListEnd; _con2453)
            else
              iprot#skip _t2447)
          | _ -> iprot#skip _t2447);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2446

class suggestItemDictionaryRevision =
object (self)
  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "suggestItemDictionaryRevision.revision") | Some _x2455 -> _x2455
  method set_revision _x2455 = _revision <- Some _x2455
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _scheme : string option = None
  method get_scheme = _scheme
  method grab_scheme = match _scheme with None->raise (Field_empty "suggestItemDictionaryRevision.scheme") | Some _x2456 -> _x2456
  method set_scheme _x2456 = _scheme <- Some _x2456
  method unset_scheme = _scheme <- None
  method reset_scheme = _scheme <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SuggestItemDictionaryRevision";
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _scheme with None -> () | Some _v -> 
      oprot#writeFieldBegin("scheme",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_suggestItemDictionaryRevision (iprot : Protocol.t) =
  let _str2459 = new suggestItemDictionaryRevision in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2460,_id2461) = iprot#readFieldBegin in
        if _t2460 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2461 with 
          | 1 -> (if _t2460 = Protocol.T_I64 then
              _str2459#set_revision iprot#readI64
            else
              iprot#skip _t2460)
          | 2 -> (if _t2460 = Protocol.T_STRING then
              _str2459#set_scheme iprot#readString
            else
              iprot#skip _t2460)
          | _ -> iprot#skip _t2460);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2459

class suggestTagDictionaryRevision =
object (self)
  val mutable _language : string option = None
  method get_language = _language
  method grab_language = match _language with None->raise (Field_empty "suggestTagDictionaryRevision.language") | Some _x2463 -> _x2463
  method set_language _x2463 = _language <- Some _x2463
  method unset_language = _language <- None
  method reset_language = _language <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "suggestTagDictionaryRevision.revision") | Some _x2464 -> _x2464
  method set_revision _x2464 = _revision <- Some _x2464
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _scheme : string option = None
  method get_scheme = _scheme
  method grab_scheme = match _scheme with None->raise (Field_empty "suggestTagDictionaryRevision.scheme") | Some _x2465 -> _x2465
  method set_scheme _x2465 = _scheme <- Some _x2465
  method unset_scheme = _scheme <- None
  method reset_scheme = _scheme <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SuggestTagDictionaryRevision";
    (match _language with None -> () | Some _v -> 
      oprot#writeFieldBegin("language",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _scheme with None -> () | Some _v -> 
      oprot#writeFieldBegin("scheme",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_suggestTagDictionaryRevision (iprot : Protocol.t) =
  let _str2468 = new suggestTagDictionaryRevision in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2469,_id2470) = iprot#readFieldBegin in
        if _t2469 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2470 with 
          | 1 -> (if _t2469 = Protocol.T_STRING then
              _str2468#set_language iprot#readString
            else
              iprot#skip _t2469)
          | 2 -> (if _t2469 = Protocol.T_I64 then
              _str2468#set_revision iprot#readI64
            else
              iprot#skip _t2469)
          | 3 -> (if _t2469 = Protocol.T_STRING then
              _str2468#set_scheme iprot#readString
            else
              iprot#skip _t2469)
          | _ -> iprot#skip _t2469);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2468

class suggestDictionaryRevisions =
object (self)
  val mutable _itemRevision : suggestItemDictionaryRevision option = None
  method get_itemRevision = _itemRevision
  method grab_itemRevision = match _itemRevision with None->raise (Field_empty "suggestDictionaryRevisions.itemRevision") | Some _x2472 -> _x2472
  method set_itemRevision _x2472 = _itemRevision <- Some _x2472
  method unset_itemRevision = _itemRevision <- None
  method reset_itemRevision = _itemRevision <- None

  val mutable _tagRevisions : suggestTagDictionaryRevision list option = None
  method get_tagRevisions = _tagRevisions
  method grab_tagRevisions = match _tagRevisions with None->raise (Field_empty "suggestDictionaryRevisions.tagRevisions") | Some _x2473 -> _x2473
  method set_tagRevisions _x2473 = _tagRevisions <- Some _x2473
  method unset_tagRevisions = _tagRevisions <- None
  method reset_tagRevisions = _tagRevisions <- None

  method copy =
      let _new = Oo.copy self in
      if _itemRevision <> None then
        _new#set_itemRevision self#grab_itemRevision#copy;
      if _tagRevisions <> None then
        _new#set_tagRevisions (List.map (fun x -> x#copy) self#grab_tagRevisions);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SuggestDictionaryRevisions";
    (match _itemRevision with None -> () | Some _v -> 
      oprot#writeFieldBegin("itemRevision",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _tagRevisions with None -> () | Some _v -> 
      oprot#writeFieldBegin("tagRevisions",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2476 ->         _iter2476#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_suggestDictionaryRevisions (iprot : Protocol.t) =
  let _str2477 = new suggestDictionaryRevisions in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2478,_id2479) = iprot#readFieldBegin in
        if _t2478 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2479 with 
          | 1 -> (if _t2478 = Protocol.T_STRUCT then
              _str2477#set_itemRevision (read_suggestItemDictionaryRevision iprot)
            else
              iprot#skip _t2478)
          | 2 -> (if _t2478 = Protocol.T_LIST then
              _str2477#set_tagRevisions 
                (let (_etype2483,_size2480) = iprot#readListBegin in
                  let _con2484 = (Array.to_list (Array.init _size2480 (fun _ -> (read_suggestTagDictionaryRevision iprot)))) in
                    iprot#readListEnd; _con2484)
            else
              iprot#skip _t2478)
          | _ -> iprot#skip _t2478);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2477

class suggestDictionarySettings =
object (self)
  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "suggestDictionarySettings.revision") | Some _x2486 -> _x2486
  method set_revision _x2486 = _revision <- Some _x2486
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _newRevision : Int64.t option = None
  method get_newRevision = _newRevision
  method grab_newRevision = match _newRevision with None->raise (Field_empty "suggestDictionarySettings.newRevision") | Some _x2487 -> _x2487
  method set_newRevision _x2487 = _newRevision <- Some _x2487
  method unset_newRevision = _newRevision <- None
  method reset_newRevision = _newRevision <- None

  val mutable _dictionaries : suggestDictionary list option = None
  method get_dictionaries = _dictionaries
  method grab_dictionaries = match _dictionaries with None->raise (Field_empty "suggestDictionarySettings.dictionaries") | Some _x2488 -> _x2488
  method set_dictionaries _x2488 = _dictionaries <- Some _x2488
  method unset_dictionaries = _dictionaries <- None
  method reset_dictionaries = _dictionaries <- None

  val mutable _preloadedDictionaries : string list option = None
  method get_preloadedDictionaries = _preloadedDictionaries
  method grab_preloadedDictionaries = match _preloadedDictionaries with None->raise (Field_empty "suggestDictionarySettings.preloadedDictionaries") | Some _x2489 -> _x2489
  method set_preloadedDictionaries _x2489 = _preloadedDictionaries <- Some _x2489
  method unset_preloadedDictionaries = _preloadedDictionaries <- None
  method reset_preloadedDictionaries = _preloadedDictionaries <- None

  method copy =
      let _new = Oo.copy self in
      if _dictionaries <> None then
        _new#set_dictionaries (List.map (fun x -> x#copy) self#grab_dictionaries);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SuggestDictionarySettings";
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _newRevision with None -> () | Some _v -> 
      oprot#writeFieldBegin("newRevision",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _dictionaries with None -> () | Some _v -> 
      oprot#writeFieldBegin("dictionaries",Protocol.T_LIST,3);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2492 ->         _iter2492#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _preloadedDictionaries with None -> () | Some _v -> 
      oprot#writeFieldBegin("preloadedDictionaries",Protocol.T_LIST,4);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter2493 ->         oprot#writeString(_iter2493);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_suggestDictionarySettings (iprot : Protocol.t) =
  let _str2494 = new suggestDictionarySettings in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2495,_id2496) = iprot#readFieldBegin in
        if _t2495 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2496 with 
          | 1 -> (if _t2495 = Protocol.T_I64 then
              _str2494#set_revision iprot#readI64
            else
              iprot#skip _t2495)
          | 2 -> (if _t2495 = Protocol.T_I64 then
              _str2494#set_newRevision iprot#readI64
            else
              iprot#skip _t2495)
          | 3 -> (if _t2495 = Protocol.T_LIST then
              _str2494#set_dictionaries 
                (let (_etype2500,_size2497) = iprot#readListBegin in
                  let _con2501 = (Array.to_list (Array.init _size2497 (fun _ -> (read_suggestDictionary iprot)))) in
                    iprot#readListEnd; _con2501)
            else
              iprot#skip _t2495)
          | 4 -> (if _t2495 = Protocol.T_LIST then
              _str2494#set_preloadedDictionaries 
                (let (_etype2505,_size2502) = iprot#readListBegin in
                  let _con2506 = (Array.to_list (Array.init _size2502 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con2506)
            else
              iprot#skip _t2495)
          | _ -> iprot#skip _t2495);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2494

class phoneInfoForChannel =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "phoneInfoForChannel.mid") | Some _x2508 -> _x2508
  method set_mid _x2508 = _mid <- Some _x2508
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _normalizedPhoneNumber : string option = None
  method get_normalizedPhoneNumber = _normalizedPhoneNumber
  method grab_normalizedPhoneNumber = match _normalizedPhoneNumber with None->raise (Field_empty "phoneInfoForChannel.normalizedPhoneNumber") | Some _x2509 -> _x2509
  method set_normalizedPhoneNumber _x2509 = _normalizedPhoneNumber <- Some _x2509
  method unset_normalizedPhoneNumber = _normalizedPhoneNumber <- None
  method reset_normalizedPhoneNumber = _normalizedPhoneNumber <- None

  val mutable _allowedToSearchByPhoneNumber : bool option = None
  method get_allowedToSearchByPhoneNumber = _allowedToSearchByPhoneNumber
  method grab_allowedToSearchByPhoneNumber = match _allowedToSearchByPhoneNumber with None->raise (Field_empty "phoneInfoForChannel.allowedToSearchByPhoneNumber") | Some _x2510 -> _x2510
  method set_allowedToSearchByPhoneNumber _x2510 = _allowedToSearchByPhoneNumber <- Some _x2510
  method unset_allowedToSearchByPhoneNumber = _allowedToSearchByPhoneNumber <- None
  method reset_allowedToSearchByPhoneNumber = _allowedToSearchByPhoneNumber <- None

  val mutable _allowedToReceiveMessageFromNonFriend : bool option = None
  method get_allowedToReceiveMessageFromNonFriend = _allowedToReceiveMessageFromNonFriend
  method grab_allowedToReceiveMessageFromNonFriend = match _allowedToReceiveMessageFromNonFriend with None->raise (Field_empty "phoneInfoForChannel.allowedToReceiveMessageFromNonFriend") | Some _x2511 -> _x2511
  method set_allowedToReceiveMessageFromNonFriend _x2511 = _allowedToReceiveMessageFromNonFriend <- Some _x2511
  method unset_allowedToReceiveMessageFromNonFriend = _allowedToReceiveMessageFromNonFriend <- None
  method reset_allowedToReceiveMessageFromNonFriend = _allowedToReceiveMessageFromNonFriend <- None

  val mutable _region : string option = None
  method get_region = _region
  method grab_region = match _region with None->raise (Field_empty "phoneInfoForChannel.region") | Some _x2512 -> _x2512
  method set_region _x2512 = _region <- Some _x2512
  method unset_region = _region <- None
  method reset_region = _region <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PhoneInfoForChannel";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _normalizedPhoneNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("normalizedPhoneNumber",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _allowedToSearchByPhoneNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("allowedToSearchByPhoneNumber",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _allowedToReceiveMessageFromNonFriend with None -> () | Some _v -> 
      oprot#writeFieldBegin("allowedToReceiveMessageFromNonFriend",Protocol.T_BOOL,4);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _region with None -> () | Some _v -> 
      oprot#writeFieldBegin("region",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_phoneInfoForChannel (iprot : Protocol.t) =
  let _str2515 = new phoneInfoForChannel in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2516,_id2517) = iprot#readFieldBegin in
        if _t2516 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2517 with 
          | 1 -> (if _t2516 = Protocol.T_STRING then
              _str2515#set_mid iprot#readString
            else
              iprot#skip _t2516)
          | 2 -> (if _t2516 = Protocol.T_STRING then
              _str2515#set_normalizedPhoneNumber iprot#readString
            else
              iprot#skip _t2516)
          | 3 -> (if _t2516 = Protocol.T_BOOL then
              _str2515#set_allowedToSearchByPhoneNumber iprot#readBool
            else
              iprot#skip _t2516)
          | 4 -> (if _t2516 = Protocol.T_BOOL then
              _str2515#set_allowedToReceiveMessageFromNonFriend iprot#readBool
            else
              iprot#skip _t2516)
          | 5 -> (if _t2516 = Protocol.T_STRING then
              _str2515#set_region iprot#readString
            else
              iprot#skip _t2516)
          | _ -> iprot#skip _t2516);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2515

class phoneVerificationResult =
object (self)
  val mutable _verificationResult : VerificationResult.t option = None
  method get_verificationResult = _verificationResult
  method grab_verificationResult = match _verificationResult with None->raise (Field_empty "phoneVerificationResult.verificationResult") | Some _x2519 -> _x2519
  method set_verificationResult _x2519 = _verificationResult <- Some _x2519
  method unset_verificationResult = _verificationResult <- None
  method reset_verificationResult = _verificationResult <- None

  val mutable _accountMigrationCheckType : AccountMigrationCheckType.t option = None
  method get_accountMigrationCheckType = _accountMigrationCheckType
  method grab_accountMigrationCheckType = match _accountMigrationCheckType with None->raise (Field_empty "phoneVerificationResult.accountMigrationCheckType") | Some _x2520 -> _x2520
  method set_accountMigrationCheckType _x2520 = _accountMigrationCheckType <- Some _x2520
  method unset_accountMigrationCheckType = _accountMigrationCheckType <- None
  method reset_accountMigrationCheckType = _accountMigrationCheckType <- None

  val mutable _recommendAddFriends : bool option = None
  method get_recommendAddFriends = _recommendAddFriends
  method grab_recommendAddFriends = match _recommendAddFriends with None->raise (Field_empty "phoneVerificationResult.recommendAddFriends") | Some _x2521 -> _x2521
  method set_recommendAddFriends _x2521 = _recommendAddFriends <- Some _x2521
  method unset_recommendAddFriends = _recommendAddFriends <- None
  method reset_recommendAddFriends = _recommendAddFriends <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PhoneVerificationResult";
    (match _verificationResult with None -> () | Some _v -> 
      oprot#writeFieldBegin("verificationResult",Protocol.T_I32,1);
      oprot#writeI32(VerificationResult.to_i _v);
      oprot#writeFieldEnd
    );
    (match _accountMigrationCheckType with None -> () | Some _v -> 
      oprot#writeFieldBegin("accountMigrationCheckType",Protocol.T_I32,2);
      oprot#writeI32(AccountMigrationCheckType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _recommendAddFriends with None -> () | Some _v -> 
      oprot#writeFieldBegin("recommendAddFriends",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_phoneVerificationResult (iprot : Protocol.t) =
  let _str2524 = new phoneVerificationResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2525,_id2526) = iprot#readFieldBegin in
        if _t2525 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2526 with 
          | 1 -> (if _t2525 = Protocol.T_I32 then
              _str2524#set_verificationResult (VerificationResult.of_i iprot#readI32)
            else
              iprot#skip _t2525)
          | 2 -> (if _t2525 = Protocol.T_I32 then
              _str2524#set_accountMigrationCheckType (AccountMigrationCheckType.of_i iprot#readI32)
            else
              iprot#skip _t2525)
          | 3 -> (if _t2525 = Protocol.T_BOOL then
              _str2524#set_recommendAddFriends iprot#readBool
            else
              iprot#skip _t2525)
          | _ -> iprot#skip _t2525);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2524

class placeSearchInfo =
object (self)
  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "placeSearchInfo.name") | Some _x2528 -> _x2528
  method set_name _x2528 = _name <- Some _x2528
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _address : string option = None
  method get_address = _address
  method grab_address = match _address with None->raise (Field_empty "placeSearchInfo.address") | Some _x2529 -> _x2529
  method set_address _x2529 = _address <- Some _x2529
  method unset_address = _address <- None
  method reset_address = _address <- None

  val mutable _latitude : float option = None
  method get_latitude = _latitude
  method grab_latitude = match _latitude with None->raise (Field_empty "placeSearchInfo.latitude") | Some _x2530 -> _x2530
  method set_latitude _x2530 = _latitude <- Some _x2530
  method unset_latitude = _latitude <- None
  method reset_latitude = _latitude <- None

  val mutable _longitude : float option = None
  method get_longitude = _longitude
  method grab_longitude = match _longitude with None->raise (Field_empty "placeSearchInfo.longitude") | Some _x2531 -> _x2531
  method set_longitude _x2531 = _longitude <- Some _x2531
  method unset_longitude = _longitude <- None
  method reset_longitude = _longitude <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PlaceSearchInfo";
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _address with None -> () | Some _v -> 
      oprot#writeFieldBegin("address",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _latitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("latitude",Protocol.T_DOUBLE,3);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    (match _longitude with None -> () | Some _v -> 
      oprot#writeFieldBegin("longitude",Protocol.T_DOUBLE,4);
      oprot#writeDouble(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_placeSearchInfo (iprot : Protocol.t) =
  let _str2534 = new placeSearchInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2535,_id2536) = iprot#readFieldBegin in
        if _t2535 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2536 with 
          | 1 -> (if _t2535 = Protocol.T_STRING then
              _str2534#set_name iprot#readString
            else
              iprot#skip _t2535)
          | 2 -> (if _t2535 = Protocol.T_STRING then
              _str2534#set_address iprot#readString
            else
              iprot#skip _t2535)
          | 3 -> (if _t2535 = Protocol.T_DOUBLE then
              _str2534#set_latitude iprot#readDouble
            else
              iprot#skip _t2535)
          | 4 -> (if _t2535 = Protocol.T_DOUBLE then
              _str2534#set_longitude iprot#readDouble
            else
              iprot#skip _t2535)
          | _ -> iprot#skip _t2535);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2534

class rSAKey =
object (self)
  val mutable _keynm : string option = None
  method get_keynm = _keynm
  method grab_keynm = match _keynm with None->raise (Field_empty "rSAKey.keynm") | Some _x2538 -> _x2538
  method set_keynm _x2538 = _keynm <- Some _x2538
  method unset_keynm = _keynm <- None
  method reset_keynm = _keynm <- None

  val mutable _nvalue : string option = None
  method get_nvalue = _nvalue
  method grab_nvalue = match _nvalue with None->raise (Field_empty "rSAKey.nvalue") | Some _x2539 -> _x2539
  method set_nvalue _x2539 = _nvalue <- Some _x2539
  method unset_nvalue = _nvalue <- None
  method reset_nvalue = _nvalue <- None

  val mutable _evalue : string option = None
  method get_evalue = _evalue
  method grab_evalue = match _evalue with None->raise (Field_empty "rSAKey.evalue") | Some _x2540 -> _x2540
  method set_evalue _x2540 = _evalue <- Some _x2540
  method unset_evalue = _evalue <- None
  method reset_evalue = _evalue <- None

  val mutable _sessionKey : string option = None
  method get_sessionKey = _sessionKey
  method grab_sessionKey = match _sessionKey with None->raise (Field_empty "rSAKey.sessionKey") | Some _x2541 -> _x2541
  method set_sessionKey _x2541 = _sessionKey <- Some _x2541
  method unset_sessionKey = _sessionKey <- None
  method reset_sessionKey = _sessionKey <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "RSAKey";
    (match _keynm with None -> () | Some _v -> 
      oprot#writeFieldBegin("keynm",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _nvalue with None -> () | Some _v -> 
      oprot#writeFieldBegin("nvalue",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _evalue with None -> () | Some _v -> 
      oprot#writeFieldBegin("evalue",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _sessionKey with None -> () | Some _v -> 
      oprot#writeFieldBegin("sessionKey",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_rSAKey (iprot : Protocol.t) =
  let _str2544 = new rSAKey in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2545,_id2546) = iprot#readFieldBegin in
        if _t2545 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2546 with 
          | 1 -> (if _t2545 = Protocol.T_STRING then
              _str2544#set_keynm iprot#readString
            else
              iprot#skip _t2545)
          | 2 -> (if _t2545 = Protocol.T_STRING then
              _str2544#set_nvalue iprot#readString
            else
              iprot#skip _t2545)
          | 3 -> (if _t2545 = Protocol.T_STRING then
              _str2544#set_evalue iprot#readString
            else
              iprot#skip _t2545)
          | 4 -> (if _t2545 = Protocol.T_STRING then
              _str2544#set_sessionKey iprot#readString
            else
              iprot#skip _t2545)
          | _ -> iprot#skip _t2545);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2544

class securityCenterResult =
object (self)
  val mutable _uri : string option = None
  method get_uri = _uri
  method grab_uri = match _uri with None->raise (Field_empty "securityCenterResult.uri") | Some _x2548 -> _x2548
  method set_uri _x2548 = _uri <- Some _x2548
  method unset_uri = _uri <- None
  method reset_uri = _uri <- None

  val mutable _token : string option = None
  method get_token = _token
  method grab_token = match _token with None->raise (Field_empty "securityCenterResult.token") | Some _x2549 -> _x2549
  method set_token _x2549 = _token <- Some _x2549
  method unset_token = _token <- None
  method reset_token = _token <- None

  val mutable _cookiePath : string option = None
  method get_cookiePath = _cookiePath
  method grab_cookiePath = match _cookiePath with None->raise (Field_empty "securityCenterResult.cookiePath") | Some _x2550 -> _x2550
  method set_cookiePath _x2550 = _cookiePath <- Some _x2550
  method unset_cookiePath = _cookiePath <- None
  method reset_cookiePath = _cookiePath <- None

  val mutable _skip : bool option = None
  method get_skip = _skip
  method grab_skip = match _skip with None->raise (Field_empty "securityCenterResult.skip") | Some _x2551 -> _x2551
  method set_skip _x2551 = _skip <- Some _x2551
  method unset_skip = _skip <- None
  method reset_skip = _skip <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SecurityCenterResult";
    (match _uri with None -> () | Some _v -> 
      oprot#writeFieldBegin("uri",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _token with None -> () | Some _v -> 
      oprot#writeFieldBegin("token",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _cookiePath with None -> () | Some _v -> 
      oprot#writeFieldBegin("cookiePath",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _skip with None -> () | Some _v -> 
      oprot#writeFieldBegin("skip",Protocol.T_BOOL,4);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_securityCenterResult (iprot : Protocol.t) =
  let _str2554 = new securityCenterResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2555,_id2556) = iprot#readFieldBegin in
        if _t2555 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2556 with 
          | 1 -> (if _t2555 = Protocol.T_STRING then
              _str2554#set_uri iprot#readString
            else
              iprot#skip _t2555)
          | 2 -> (if _t2555 = Protocol.T_STRING then
              _str2554#set_token iprot#readString
            else
              iprot#skip _t2555)
          | 3 -> (if _t2555 = Protocol.T_STRING then
              _str2554#set_cookiePath iprot#readString
            else
              iprot#skip _t2555)
          | 4 -> (if _t2555 = Protocol.T_BOOL then
              _str2554#set_skip iprot#readBool
            else
              iprot#skip _t2555)
          | _ -> iprot#skip _t2555);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2554

class sendBuddyMessageResult =
object (self)
  val mutable _requestId : string option = None
  method get_requestId = _requestId
  method grab_requestId = match _requestId with None->raise (Field_empty "sendBuddyMessageResult.requestId") | Some _x2558 -> _x2558
  method set_requestId _x2558 = _requestId <- Some _x2558
  method unset_requestId = _requestId <- None
  method reset_requestId = _requestId <- None

  val mutable _state : BuddyResultState.t option = None
  method get_state = _state
  method grab_state = match _state with None->raise (Field_empty "sendBuddyMessageResult.state") | Some _x2559 -> _x2559
  method set_state _x2559 = _state <- Some _x2559
  method unset_state = _state <- None
  method reset_state = _state <- None

  val mutable _messageId : string option = None
  method get_messageId = _messageId
  method grab_messageId = match _messageId with None->raise (Field_empty "sendBuddyMessageResult.messageId") | Some _x2560 -> _x2560
  method set_messageId _x2560 = _messageId <- Some _x2560
  method unset_messageId = _messageId <- None
  method reset_messageId = _messageId <- None

  val mutable _eventNo : Int32.t option = None
  method get_eventNo = _eventNo
  method grab_eventNo = match _eventNo with None->raise (Field_empty "sendBuddyMessageResult.eventNo") | Some _x2561 -> _x2561
  method set_eventNo _x2561 = _eventNo <- Some _x2561
  method unset_eventNo = _eventNo <- None
  method reset_eventNo = _eventNo <- None

  val mutable _receiverCount : Int64.t option = None
  method get_receiverCount = _receiverCount
  method grab_receiverCount = match _receiverCount with None->raise (Field_empty "sendBuddyMessageResult.receiverCount") | Some _x2562 -> _x2562
  method set_receiverCount _x2562 = _receiverCount <- Some _x2562
  method unset_receiverCount = _receiverCount <- None
  method reset_receiverCount = _receiverCount <- None

  val mutable _successCount : Int64.t option = None
  method get_successCount = _successCount
  method grab_successCount = match _successCount with None->raise (Field_empty "sendBuddyMessageResult.successCount") | Some _x2563 -> _x2563
  method set_successCount _x2563 = _successCount <- Some _x2563
  method unset_successCount = _successCount <- None
  method reset_successCount = _successCount <- None

  val mutable _failCount : Int64.t option = None
  method get_failCount = _failCount
  method grab_failCount = match _failCount with None->raise (Field_empty "sendBuddyMessageResult.failCount") | Some _x2564 -> _x2564
  method set_failCount _x2564 = _failCount <- Some _x2564
  method unset_failCount = _failCount <- None
  method reset_failCount = _failCount <- None

  val mutable _cancelCount : Int64.t option = None
  method get_cancelCount = _cancelCount
  method grab_cancelCount = match _cancelCount with None->raise (Field_empty "sendBuddyMessageResult.cancelCount") | Some _x2565 -> _x2565
  method set_cancelCount _x2565 = _cancelCount <- Some _x2565
  method unset_cancelCount = _cancelCount <- None
  method reset_cancelCount = _cancelCount <- None

  val mutable _blockCount : Int64.t option = None
  method get_blockCount = _blockCount
  method grab_blockCount = match _blockCount with None->raise (Field_empty "sendBuddyMessageResult.blockCount") | Some _x2566 -> _x2566
  method set_blockCount _x2566 = _blockCount <- Some _x2566
  method unset_blockCount = _blockCount <- None
  method reset_blockCount = _blockCount <- None

  val mutable _unregisterCount : Int64.t option = None
  method get_unregisterCount = _unregisterCount
  method grab_unregisterCount = match _unregisterCount with None->raise (Field_empty "sendBuddyMessageResult.unregisterCount") | Some _x2567 -> _x2567
  method set_unregisterCount _x2567 = _unregisterCount <- Some _x2567
  method unset_unregisterCount = _unregisterCount <- None
  method reset_unregisterCount = _unregisterCount <- None

  val mutable _timestamp : Int64.t option = None
  method get_timestamp = _timestamp
  method grab_timestamp = match _timestamp with None->raise (Field_empty "sendBuddyMessageResult.timestamp") | Some _x2568 -> _x2568
  method set_timestamp _x2568 = _timestamp <- Some _x2568
  method unset_timestamp = _timestamp <- None
  method reset_timestamp = _timestamp <- None

  val mutable _message : string option = None
  method get_message = _message
  method grab_message = match _message with None->raise (Field_empty "sendBuddyMessageResult.message") | Some _x2569 -> _x2569
  method set_message _x2569 = _message <- Some _x2569
  method unset_message = _message <- None
  method reset_message = _message <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SendBuddyMessageResult";
    (match _requestId with None -> () | Some _v -> 
      oprot#writeFieldBegin("requestId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _state with None -> () | Some _v -> 
      oprot#writeFieldBegin("state",Protocol.T_I32,2);
      oprot#writeI32(BuddyResultState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _messageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageId",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _eventNo with None -> () | Some _v -> 
      oprot#writeFieldBegin("eventNo",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _receiverCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("receiverCount",Protocol.T_I64,11);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _successCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("successCount",Protocol.T_I64,12);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _failCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("failCount",Protocol.T_I64,13);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _cancelCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("cancelCount",Protocol.T_I64,14);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _blockCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("blockCount",Protocol.T_I64,15);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _unregisterCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("unregisterCount",Protocol.T_I64,16);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _timestamp with None -> () | Some _v -> 
      oprot#writeFieldBegin("timestamp",Protocol.T_I64,21);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _message with None -> () | Some _v -> 
      oprot#writeFieldBegin("message",Protocol.T_STRING,22);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_sendBuddyMessageResult (iprot : Protocol.t) =
  let _str2572 = new sendBuddyMessageResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2573,_id2574) = iprot#readFieldBegin in
        if _t2573 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2574 with 
          | 1 -> (if _t2573 = Protocol.T_STRING then
              _str2572#set_requestId iprot#readString
            else
              iprot#skip _t2573)
          | 2 -> (if _t2573 = Protocol.T_I32 then
              _str2572#set_state (BuddyResultState.of_i iprot#readI32)
            else
              iprot#skip _t2573)
          | 3 -> (if _t2573 = Protocol.T_STRING then
              _str2572#set_messageId iprot#readString
            else
              iprot#skip _t2573)
          | 4 -> (if _t2573 = Protocol.T_I32 then
              _str2572#set_eventNo iprot#readI32
            else
              iprot#skip _t2573)
          | 11 -> (if _t2573 = Protocol.T_I64 then
              _str2572#set_receiverCount iprot#readI64
            else
              iprot#skip _t2573)
          | 12 -> (if _t2573 = Protocol.T_I64 then
              _str2572#set_successCount iprot#readI64
            else
              iprot#skip _t2573)
          | 13 -> (if _t2573 = Protocol.T_I64 then
              _str2572#set_failCount iprot#readI64
            else
              iprot#skip _t2573)
          | 14 -> (if _t2573 = Protocol.T_I64 then
              _str2572#set_cancelCount iprot#readI64
            else
              iprot#skip _t2573)
          | 15 -> (if _t2573 = Protocol.T_I64 then
              _str2572#set_blockCount iprot#readI64
            else
              iprot#skip _t2573)
          | 16 -> (if _t2573 = Protocol.T_I64 then
              _str2572#set_unregisterCount iprot#readI64
            else
              iprot#skip _t2573)
          | 21 -> (if _t2573 = Protocol.T_I64 then
              _str2572#set_timestamp iprot#readI64
            else
              iprot#skip _t2573)
          | 22 -> (if _t2573 = Protocol.T_STRING then
              _str2572#set_message iprot#readString
            else
              iprot#skip _t2573)
          | _ -> iprot#skip _t2573);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2572

class setBuddyOnAirResult =
object (self)
  val mutable _requestId : string option = None
  method get_requestId = _requestId
  method grab_requestId = match _requestId with None->raise (Field_empty "setBuddyOnAirResult.requestId") | Some _x2576 -> _x2576
  method set_requestId _x2576 = _requestId <- Some _x2576
  method unset_requestId = _requestId <- None
  method reset_requestId = _requestId <- None

  val mutable _state : BuddyResultState.t option = None
  method get_state = _state
  method grab_state = match _state with None->raise (Field_empty "setBuddyOnAirResult.state") | Some _x2577 -> _x2577
  method set_state _x2577 = _state <- Some _x2577
  method unset_state = _state <- None
  method reset_state = _state <- None

  val mutable _eventNo : Int32.t option = None
  method get_eventNo = _eventNo
  method grab_eventNo = match _eventNo with None->raise (Field_empty "setBuddyOnAirResult.eventNo") | Some _x2578 -> _x2578
  method set_eventNo _x2578 = _eventNo <- Some _x2578
  method unset_eventNo = _eventNo <- None
  method reset_eventNo = _eventNo <- None

  val mutable _receiverCount : Int64.t option = None
  method get_receiverCount = _receiverCount
  method grab_receiverCount = match _receiverCount with None->raise (Field_empty "setBuddyOnAirResult.receiverCount") | Some _x2579 -> _x2579
  method set_receiverCount _x2579 = _receiverCount <- Some _x2579
  method unset_receiverCount = _receiverCount <- None
  method reset_receiverCount = _receiverCount <- None

  val mutable _successCount : Int64.t option = None
  method get_successCount = _successCount
  method grab_successCount = match _successCount with None->raise (Field_empty "setBuddyOnAirResult.successCount") | Some _x2580 -> _x2580
  method set_successCount _x2580 = _successCount <- Some _x2580
  method unset_successCount = _successCount <- None
  method reset_successCount = _successCount <- None

  val mutable _failCount : Int64.t option = None
  method get_failCount = _failCount
  method grab_failCount = match _failCount with None->raise (Field_empty "setBuddyOnAirResult.failCount") | Some _x2581 -> _x2581
  method set_failCount _x2581 = _failCount <- Some _x2581
  method unset_failCount = _failCount <- None
  method reset_failCount = _failCount <- None

  val mutable _cancelCount : Int64.t option = None
  method get_cancelCount = _cancelCount
  method grab_cancelCount = match _cancelCount with None->raise (Field_empty "setBuddyOnAirResult.cancelCount") | Some _x2582 -> _x2582
  method set_cancelCount _x2582 = _cancelCount <- Some _x2582
  method unset_cancelCount = _cancelCount <- None
  method reset_cancelCount = _cancelCount <- None

  val mutable _unregisterCount : Int64.t option = None
  method get_unregisterCount = _unregisterCount
  method grab_unregisterCount = match _unregisterCount with None->raise (Field_empty "setBuddyOnAirResult.unregisterCount") | Some _x2583 -> _x2583
  method set_unregisterCount _x2583 = _unregisterCount <- Some _x2583
  method unset_unregisterCount = _unregisterCount <- None
  method reset_unregisterCount = _unregisterCount <- None

  val mutable _timestamp : Int64.t option = None
  method get_timestamp = _timestamp
  method grab_timestamp = match _timestamp with None->raise (Field_empty "setBuddyOnAirResult.timestamp") | Some _x2584 -> _x2584
  method set_timestamp _x2584 = _timestamp <- Some _x2584
  method unset_timestamp = _timestamp <- None
  method reset_timestamp = _timestamp <- None

  val mutable _message : string option = None
  method get_message = _message
  method grab_message = match _message with None->raise (Field_empty "setBuddyOnAirResult.message") | Some _x2585 -> _x2585
  method set_message _x2585 = _message <- Some _x2585
  method unset_message = _message <- None
  method reset_message = _message <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SetBuddyOnAirResult";
    (match _requestId with None -> () | Some _v -> 
      oprot#writeFieldBegin("requestId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _state with None -> () | Some _v -> 
      oprot#writeFieldBegin("state",Protocol.T_I32,2);
      oprot#writeI32(BuddyResultState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _eventNo with None -> () | Some _v -> 
      oprot#writeFieldBegin("eventNo",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _receiverCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("receiverCount",Protocol.T_I64,11);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _successCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("successCount",Protocol.T_I64,12);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _failCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("failCount",Protocol.T_I64,13);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _cancelCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("cancelCount",Protocol.T_I64,14);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _unregisterCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("unregisterCount",Protocol.T_I64,15);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _timestamp with None -> () | Some _v -> 
      oprot#writeFieldBegin("timestamp",Protocol.T_I64,21);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _message with None -> () | Some _v -> 
      oprot#writeFieldBegin("message",Protocol.T_STRING,22);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_setBuddyOnAirResult (iprot : Protocol.t) =
  let _str2588 = new setBuddyOnAirResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2589,_id2590) = iprot#readFieldBegin in
        if _t2589 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2590 with 
          | 1 -> (if _t2589 = Protocol.T_STRING then
              _str2588#set_requestId iprot#readString
            else
              iprot#skip _t2589)
          | 2 -> (if _t2589 = Protocol.T_I32 then
              _str2588#set_state (BuddyResultState.of_i iprot#readI32)
            else
              iprot#skip _t2589)
          | 3 -> (if _t2589 = Protocol.T_I32 then
              _str2588#set_eventNo iprot#readI32
            else
              iprot#skip _t2589)
          | 11 -> (if _t2589 = Protocol.T_I64 then
              _str2588#set_receiverCount iprot#readI64
            else
              iprot#skip _t2589)
          | 12 -> (if _t2589 = Protocol.T_I64 then
              _str2588#set_successCount iprot#readI64
            else
              iprot#skip _t2589)
          | 13 -> (if _t2589 = Protocol.T_I64 then
              _str2588#set_failCount iprot#readI64
            else
              iprot#skip _t2589)
          | 14 -> (if _t2589 = Protocol.T_I64 then
              _str2588#set_cancelCount iprot#readI64
            else
              iprot#skip _t2589)
          | 15 -> (if _t2589 = Protocol.T_I64 then
              _str2588#set_unregisterCount iprot#readI64
            else
              iprot#skip _t2589)
          | 21 -> (if _t2589 = Protocol.T_I64 then
              _str2588#set_timestamp iprot#readI64
            else
              iprot#skip _t2589)
          | 22 -> (if _t2589 = Protocol.T_STRING then
              _str2588#set_message iprot#readString
            else
              iprot#skip _t2589)
          | _ -> iprot#skip _t2589);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2588

class settings =
object (self)
  val mutable _notificationEnable : bool option = None
  method get_notificationEnable = _notificationEnable
  method grab_notificationEnable = match _notificationEnable with None->raise (Field_empty "settings.notificationEnable") | Some _x2592 -> _x2592
  method set_notificationEnable _x2592 = _notificationEnable <- Some _x2592
  method unset_notificationEnable = _notificationEnable <- None
  method reset_notificationEnable = _notificationEnable <- None

  val mutable _notificationMuteExpiration : Int64.t option = None
  method get_notificationMuteExpiration = _notificationMuteExpiration
  method grab_notificationMuteExpiration = match _notificationMuteExpiration with None->raise (Field_empty "settings.notificationMuteExpiration") | Some _x2593 -> _x2593
  method set_notificationMuteExpiration _x2593 = _notificationMuteExpiration <- Some _x2593
  method unset_notificationMuteExpiration = _notificationMuteExpiration <- None
  method reset_notificationMuteExpiration = _notificationMuteExpiration <- None

  val mutable _notificationNewMessage : bool option = None
  method get_notificationNewMessage = _notificationNewMessage
  method grab_notificationNewMessage = match _notificationNewMessage with None->raise (Field_empty "settings.notificationNewMessage") | Some _x2594 -> _x2594
  method set_notificationNewMessage _x2594 = _notificationNewMessage <- Some _x2594
  method unset_notificationNewMessage = _notificationNewMessage <- None
  method reset_notificationNewMessage = _notificationNewMessage <- None

  val mutable _notificationGroupInvitation : bool option = None
  method get_notificationGroupInvitation = _notificationGroupInvitation
  method grab_notificationGroupInvitation = match _notificationGroupInvitation with None->raise (Field_empty "settings.notificationGroupInvitation") | Some _x2595 -> _x2595
  method set_notificationGroupInvitation _x2595 = _notificationGroupInvitation <- Some _x2595
  method unset_notificationGroupInvitation = _notificationGroupInvitation <- None
  method reset_notificationGroupInvitation = _notificationGroupInvitation <- None

  val mutable _notificationShowMessage : bool option = None
  method get_notificationShowMessage = _notificationShowMessage
  method grab_notificationShowMessage = match _notificationShowMessage with None->raise (Field_empty "settings.notificationShowMessage") | Some _x2596 -> _x2596
  method set_notificationShowMessage _x2596 = _notificationShowMessage <- Some _x2596
  method unset_notificationShowMessage = _notificationShowMessage <- None
  method reset_notificationShowMessage = _notificationShowMessage <- None

  val mutable _notificationIncomingCall : bool option = None
  method get_notificationIncomingCall = _notificationIncomingCall
  method grab_notificationIncomingCall = match _notificationIncomingCall with None->raise (Field_empty "settings.notificationIncomingCall") | Some _x2597 -> _x2597
  method set_notificationIncomingCall _x2597 = _notificationIncomingCall <- Some _x2597
  method unset_notificationIncomingCall = _notificationIncomingCall <- None
  method reset_notificationIncomingCall = _notificationIncomingCall <- None

  val mutable _notificationSoundMessage : string option = None
  method get_notificationSoundMessage = _notificationSoundMessage
  method grab_notificationSoundMessage = match _notificationSoundMessage with None->raise (Field_empty "settings.notificationSoundMessage") | Some _x2598 -> _x2598
  method set_notificationSoundMessage _x2598 = _notificationSoundMessage <- Some _x2598
  method unset_notificationSoundMessage = _notificationSoundMessage <- None
  method reset_notificationSoundMessage = _notificationSoundMessage <- None

  val mutable _notificationSoundGroup : string option = None
  method get_notificationSoundGroup = _notificationSoundGroup
  method grab_notificationSoundGroup = match _notificationSoundGroup with None->raise (Field_empty "settings.notificationSoundGroup") | Some _x2599 -> _x2599
  method set_notificationSoundGroup _x2599 = _notificationSoundGroup <- Some _x2599
  method unset_notificationSoundGroup = _notificationSoundGroup <- None
  method reset_notificationSoundGroup = _notificationSoundGroup <- None

  val mutable _notificationDisabledWithSub : bool option = None
  method get_notificationDisabledWithSub = _notificationDisabledWithSub
  method grab_notificationDisabledWithSub = match _notificationDisabledWithSub with None->raise (Field_empty "settings.notificationDisabledWithSub") | Some _x2600 -> _x2600
  method set_notificationDisabledWithSub _x2600 = _notificationDisabledWithSub <- Some _x2600
  method unset_notificationDisabledWithSub = _notificationDisabledWithSub <- None
  method reset_notificationDisabledWithSub = _notificationDisabledWithSub <- None

  val mutable _privacySyncContacts : bool option = None
  method get_privacySyncContacts = _privacySyncContacts
  method grab_privacySyncContacts = match _privacySyncContacts with None->raise (Field_empty "settings.privacySyncContacts") | Some _x2601 -> _x2601
  method set_privacySyncContacts _x2601 = _privacySyncContacts <- Some _x2601
  method unset_privacySyncContacts = _privacySyncContacts <- None
  method reset_privacySyncContacts = _privacySyncContacts <- None

  val mutable _privacySearchByPhoneNumber : bool option = None
  method get_privacySearchByPhoneNumber = _privacySearchByPhoneNumber
  method grab_privacySearchByPhoneNumber = match _privacySearchByPhoneNumber with None->raise (Field_empty "settings.privacySearchByPhoneNumber") | Some _x2602 -> _x2602
  method set_privacySearchByPhoneNumber _x2602 = _privacySearchByPhoneNumber <- Some _x2602
  method unset_privacySearchByPhoneNumber = _privacySearchByPhoneNumber <- None
  method reset_privacySearchByPhoneNumber = _privacySearchByPhoneNumber <- None

  val mutable _privacySearchByUserid : bool option = None
  method get_privacySearchByUserid = _privacySearchByUserid
  method grab_privacySearchByUserid = match _privacySearchByUserid with None->raise (Field_empty "settings.privacySearchByUserid") | Some _x2603 -> _x2603
  method set_privacySearchByUserid _x2603 = _privacySearchByUserid <- Some _x2603
  method unset_privacySearchByUserid = _privacySearchByUserid <- None
  method reset_privacySearchByUserid = _privacySearchByUserid <- None

  val mutable _privacySearchByEmail : bool option = None
  method get_privacySearchByEmail = _privacySearchByEmail
  method grab_privacySearchByEmail = match _privacySearchByEmail with None->raise (Field_empty "settings.privacySearchByEmail") | Some _x2604 -> _x2604
  method set_privacySearchByEmail _x2604 = _privacySearchByEmail <- Some _x2604
  method unset_privacySearchByEmail = _privacySearchByEmail <- None
  method reset_privacySearchByEmail = _privacySearchByEmail <- None

  val mutable _privacyAllowSecondaryDeviceLogin : bool option = None
  method get_privacyAllowSecondaryDeviceLogin = _privacyAllowSecondaryDeviceLogin
  method grab_privacyAllowSecondaryDeviceLogin = match _privacyAllowSecondaryDeviceLogin with None->raise (Field_empty "settings.privacyAllowSecondaryDeviceLogin") | Some _x2605 -> _x2605
  method set_privacyAllowSecondaryDeviceLogin _x2605 = _privacyAllowSecondaryDeviceLogin <- Some _x2605
  method unset_privacyAllowSecondaryDeviceLogin = _privacyAllowSecondaryDeviceLogin <- None
  method reset_privacyAllowSecondaryDeviceLogin = _privacyAllowSecondaryDeviceLogin <- None

  val mutable _privacyProfileImagePostToMyhome : bool option = None
  method get_privacyProfileImagePostToMyhome = _privacyProfileImagePostToMyhome
  method grab_privacyProfileImagePostToMyhome = match _privacyProfileImagePostToMyhome with None->raise (Field_empty "settings.privacyProfileImagePostToMyhome") | Some _x2606 -> _x2606
  method set_privacyProfileImagePostToMyhome _x2606 = _privacyProfileImagePostToMyhome <- Some _x2606
  method unset_privacyProfileImagePostToMyhome = _privacyProfileImagePostToMyhome <- None
  method reset_privacyProfileImagePostToMyhome = _privacyProfileImagePostToMyhome <- None

  val mutable _privacyReceiveMessagesFromNotFriend : bool option = None
  method get_privacyReceiveMessagesFromNotFriend = _privacyReceiveMessagesFromNotFriend
  method grab_privacyReceiveMessagesFromNotFriend = match _privacyReceiveMessagesFromNotFriend with None->raise (Field_empty "settings.privacyReceiveMessagesFromNotFriend") | Some _x2607 -> _x2607
  method set_privacyReceiveMessagesFromNotFriend _x2607 = _privacyReceiveMessagesFromNotFriend <- Some _x2607
  method unset_privacyReceiveMessagesFromNotFriend = _privacyReceiveMessagesFromNotFriend <- None
  method reset_privacyReceiveMessagesFromNotFriend = _privacyReceiveMessagesFromNotFriend <- None

  val mutable _contactMyTicket : string option = None
  method get_contactMyTicket = _contactMyTicket
  method grab_contactMyTicket = match _contactMyTicket with None->raise (Field_empty "settings.contactMyTicket") | Some _x2608 -> _x2608
  method set_contactMyTicket _x2608 = _contactMyTicket <- Some _x2608
  method unset_contactMyTicket = _contactMyTicket <- None
  method reset_contactMyTicket = _contactMyTicket <- None

  val mutable _identityProvider : IdentityProvider.t option = None
  method get_identityProvider = _identityProvider
  method grab_identityProvider = match _identityProvider with None->raise (Field_empty "settings.identityProvider") | Some _x2609 -> _x2609
  method set_identityProvider _x2609 = _identityProvider <- Some _x2609
  method unset_identityProvider = _identityProvider <- None
  method reset_identityProvider = _identityProvider <- None

  val mutable _identityIdentifier : string option = None
  method get_identityIdentifier = _identityIdentifier
  method grab_identityIdentifier = match _identityIdentifier with None->raise (Field_empty "settings.identityIdentifier") | Some _x2610 -> _x2610
  method set_identityIdentifier _x2610 = _identityIdentifier <- Some _x2610
  method unset_identityIdentifier = _identityIdentifier <- None
  method reset_identityIdentifier = _identityIdentifier <- None

  val mutable _snsAccounts : (SnsIdType.t,string) Hashtbl.t option = None
  method get_snsAccounts = _snsAccounts
  method grab_snsAccounts = match _snsAccounts with None->raise (Field_empty "settings.snsAccounts") | Some _x2611 -> _x2611
  method set_snsAccounts _x2611 = _snsAccounts <- Some _x2611
  method unset_snsAccounts = _snsAccounts <- None
  method reset_snsAccounts = _snsAccounts <- None

  val mutable _phoneRegistration : bool option = None
  method get_phoneRegistration = _phoneRegistration
  method grab_phoneRegistration = match _phoneRegistration with None->raise (Field_empty "settings.phoneRegistration") | Some _x2612 -> _x2612
  method set_phoneRegistration _x2612 = _phoneRegistration <- Some _x2612
  method unset_phoneRegistration = _phoneRegistration <- None
  method reset_phoneRegistration = _phoneRegistration <- None

  val mutable _emailConfirmationStatus : EmailConfirmationStatus.t option = None
  method get_emailConfirmationStatus = _emailConfirmationStatus
  method grab_emailConfirmationStatus = match _emailConfirmationStatus with None->raise (Field_empty "settings.emailConfirmationStatus") | Some _x2613 -> _x2613
  method set_emailConfirmationStatus _x2613 = _emailConfirmationStatus <- Some _x2613
  method unset_emailConfirmationStatus = _emailConfirmationStatus <- None
  method reset_emailConfirmationStatus = _emailConfirmationStatus <- None

  val mutable _preferenceLocale : string option = None
  method get_preferenceLocale = _preferenceLocale
  method grab_preferenceLocale = match _preferenceLocale with None->raise (Field_empty "settings.preferenceLocale") | Some _x2614 -> _x2614
  method set_preferenceLocale _x2614 = _preferenceLocale <- Some _x2614
  method unset_preferenceLocale = _preferenceLocale <- None
  method reset_preferenceLocale = _preferenceLocale <- None

  val mutable _customModes : (CustomMode.t,string) Hashtbl.t option = None
  method get_customModes = _customModes
  method grab_customModes = match _customModes with None->raise (Field_empty "settings.customModes") | Some _x2615 -> _x2615
  method set_customModes _x2615 = _customModes <- Some _x2615
  method unset_customModes = _customModes <- None
  method reset_customModes = _customModes <- None

  val mutable _e2eeEnable : bool option = None
  method get_e2eeEnable = _e2eeEnable
  method grab_e2eeEnable = match _e2eeEnable with None->raise (Field_empty "settings.e2eeEnable") | Some _x2616 -> _x2616
  method set_e2eeEnable _x2616 = _e2eeEnable <- Some _x2616
  method unset_e2eeEnable = _e2eeEnable <- None
  method reset_e2eeEnable = _e2eeEnable <- None

  val mutable _hitokotoBackupRequested : bool option = None
  method get_hitokotoBackupRequested = _hitokotoBackupRequested
  method grab_hitokotoBackupRequested = match _hitokotoBackupRequested with None->raise (Field_empty "settings.hitokotoBackupRequested") | Some _x2617 -> _x2617
  method set_hitokotoBackupRequested _x2617 = _hitokotoBackupRequested <- Some _x2617
  method unset_hitokotoBackupRequested = _hitokotoBackupRequested <- None
  method reset_hitokotoBackupRequested = _hitokotoBackupRequested <- None

  val mutable _privacyProfileMusicPostToMyhome : bool option = None
  method get_privacyProfileMusicPostToMyhome = _privacyProfileMusicPostToMyhome
  method grab_privacyProfileMusicPostToMyhome = match _privacyProfileMusicPostToMyhome with None->raise (Field_empty "settings.privacyProfileMusicPostToMyhome") | Some _x2618 -> _x2618
  method set_privacyProfileMusicPostToMyhome _x2618 = _privacyProfileMusicPostToMyhome <- Some _x2618
  method unset_privacyProfileMusicPostToMyhome = _privacyProfileMusicPostToMyhome <- None
  method reset_privacyProfileMusicPostToMyhome = _privacyProfileMusicPostToMyhome <- None

  val mutable _privacyAllowNearby : bool option = None
  method get_privacyAllowNearby = _privacyAllowNearby
  method grab_privacyAllowNearby = match _privacyAllowNearby with None->raise (Field_empty "settings.privacyAllowNearby") | Some _x2619 -> _x2619
  method set_privacyAllowNearby _x2619 = _privacyAllowNearby <- Some _x2619
  method unset_privacyAllowNearby = _privacyAllowNearby <- None
  method reset_privacyAllowNearby = _privacyAllowNearby <- None

  val mutable _agreementNearbyTime : Int64.t option = None
  method get_agreementNearbyTime = _agreementNearbyTime
  method grab_agreementNearbyTime = match _agreementNearbyTime with None->raise (Field_empty "settings.agreementNearbyTime") | Some _x2620 -> _x2620
  method set_agreementNearbyTime _x2620 = _agreementNearbyTime <- Some _x2620
  method unset_agreementNearbyTime = _agreementNearbyTime <- None
  method reset_agreementNearbyTime = _agreementNearbyTime <- None

  val mutable _agreementSquareTime : Int64.t option = None
  method get_agreementSquareTime = _agreementSquareTime
  method grab_agreementSquareTime = match _agreementSquareTime with None->raise (Field_empty "settings.agreementSquareTime") | Some _x2621 -> _x2621
  method set_agreementSquareTime _x2621 = _agreementSquareTime <- Some _x2621
  method unset_agreementSquareTime = _agreementSquareTime <- None
  method reset_agreementSquareTime = _agreementSquareTime <- None

  val mutable _notificationMention : bool option = None
  method get_notificationMention = _notificationMention
  method grab_notificationMention = match _notificationMention with None->raise (Field_empty "settings.notificationMention") | Some _x2622 -> _x2622
  method set_notificationMention _x2622 = _notificationMention <- Some _x2622
  method unset_notificationMention = _notificationMention <- None
  method reset_notificationMention = _notificationMention <- None

  val mutable _botUseAgreementAcceptedAt : Int64.t option = None
  method get_botUseAgreementAcceptedAt = _botUseAgreementAcceptedAt
  method grab_botUseAgreementAcceptedAt = match _botUseAgreementAcceptedAt with None->raise (Field_empty "settings.botUseAgreementAcceptedAt") | Some _x2623 -> _x2623
  method set_botUseAgreementAcceptedAt _x2623 = _botUseAgreementAcceptedAt <- Some _x2623
  method unset_botUseAgreementAcceptedAt = _botUseAgreementAcceptedAt <- None
  method reset_botUseAgreementAcceptedAt = _botUseAgreementAcceptedAt <- None

  method copy =
      let _new = Oo.copy self in
      if _snsAccounts <> None then
        _new#set_snsAccounts (Hashtbl.copy self#grab_snsAccounts);
      if _customModes <> None then
        _new#set_customModes (Hashtbl.copy self#grab_customModes);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Settings";
    (match _notificationEnable with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationEnable",Protocol.T_BOOL,10);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _notificationMuteExpiration with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationMuteExpiration",Protocol.T_I64,11);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _notificationNewMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationNewMessage",Protocol.T_BOOL,12);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _notificationGroupInvitation with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationGroupInvitation",Protocol.T_BOOL,13);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _notificationShowMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationShowMessage",Protocol.T_BOOL,14);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _notificationIncomingCall with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationIncomingCall",Protocol.T_BOOL,15);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _notificationSoundMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationSoundMessage",Protocol.T_STRING,16);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _notificationSoundGroup with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationSoundGroup",Protocol.T_STRING,17);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _notificationDisabledWithSub with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationDisabledWithSub",Protocol.T_BOOL,18);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _privacySyncContacts with None -> () | Some _v -> 
      oprot#writeFieldBegin("privacySyncContacts",Protocol.T_BOOL,20);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _privacySearchByPhoneNumber with None -> () | Some _v -> 
      oprot#writeFieldBegin("privacySearchByPhoneNumber",Protocol.T_BOOL,21);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _privacySearchByUserid with None -> () | Some _v -> 
      oprot#writeFieldBegin("privacySearchByUserid",Protocol.T_BOOL,22);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _privacySearchByEmail with None -> () | Some _v -> 
      oprot#writeFieldBegin("privacySearchByEmail",Protocol.T_BOOL,23);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _privacyAllowSecondaryDeviceLogin with None -> () | Some _v -> 
      oprot#writeFieldBegin("privacyAllowSecondaryDeviceLogin",Protocol.T_BOOL,24);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _privacyProfileImagePostToMyhome with None -> () | Some _v -> 
      oprot#writeFieldBegin("privacyProfileImagePostToMyhome",Protocol.T_BOOL,25);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _privacyReceiveMessagesFromNotFriend with None -> () | Some _v -> 
      oprot#writeFieldBegin("privacyReceiveMessagesFromNotFriend",Protocol.T_BOOL,26);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _contactMyTicket with None -> () | Some _v -> 
      oprot#writeFieldBegin("contactMyTicket",Protocol.T_STRING,30);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _identityProvider with None -> () | Some _v -> 
      oprot#writeFieldBegin("identityProvider",Protocol.T_I32,40);
      oprot#writeI32(IdentityProvider.to_i _v);
      oprot#writeFieldEnd
    );
    (match _identityIdentifier with None -> () | Some _v -> 
      oprot#writeFieldBegin("identityIdentifier",Protocol.T_STRING,41);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _snsAccounts with None -> () | Some _v -> 
      oprot#writeFieldBegin("snsAccounts",Protocol.T_MAP,42);
      oprot#writeMapBegin(Protocol.T_I32,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter2626 -> fun _viter2627 -> 
        oprot#writeI32(SnsIdType.to_i _kiter2626);
        oprot#writeString(_viter2627);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _phoneRegistration with None -> () | Some _v -> 
      oprot#writeFieldBegin("phoneRegistration",Protocol.T_BOOL,43);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _emailConfirmationStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("emailConfirmationStatus",Protocol.T_I32,44);
      oprot#writeI32(EmailConfirmationStatus.to_i _v);
      oprot#writeFieldEnd
    );
    (match _preferenceLocale with None -> () | Some _v -> 
      oprot#writeFieldBegin("preferenceLocale",Protocol.T_STRING,50);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _customModes with None -> () | Some _v -> 
      oprot#writeFieldBegin("customModes",Protocol.T_MAP,60);
      oprot#writeMapBegin(Protocol.T_I32,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter2628 -> fun _viter2629 -> 
        oprot#writeI32(CustomMode.to_i _kiter2628);
        oprot#writeString(_viter2629);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _e2eeEnable with None -> () | Some _v -> 
      oprot#writeFieldBegin("e2eeEnable",Protocol.T_BOOL,61);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _hitokotoBackupRequested with None -> () | Some _v -> 
      oprot#writeFieldBegin("hitokotoBackupRequested",Protocol.T_BOOL,62);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _privacyProfileMusicPostToMyhome with None -> () | Some _v -> 
      oprot#writeFieldBegin("privacyProfileMusicPostToMyhome",Protocol.T_BOOL,63);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _privacyAllowNearby with None -> () | Some _v -> 
      oprot#writeFieldBegin("privacyAllowNearby",Protocol.T_BOOL,65);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _agreementNearbyTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("agreementNearbyTime",Protocol.T_I64,66);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _agreementSquareTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("agreementSquareTime",Protocol.T_I64,67);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _notificationMention with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationMention",Protocol.T_BOOL,68);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _botUseAgreementAcceptedAt with None -> () | Some _v -> 
      oprot#writeFieldBegin("botUseAgreementAcceptedAt",Protocol.T_I64,69);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_settings (iprot : Protocol.t) =
  let _str2630 = new settings in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2631,_id2632) = iprot#readFieldBegin in
        if _t2631 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2632 with 
          | 10 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_notificationEnable iprot#readBool
            else
              iprot#skip _t2631)
          | 11 -> (if _t2631 = Protocol.T_I64 then
              _str2630#set_notificationMuteExpiration iprot#readI64
            else
              iprot#skip _t2631)
          | 12 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_notificationNewMessage iprot#readBool
            else
              iprot#skip _t2631)
          | 13 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_notificationGroupInvitation iprot#readBool
            else
              iprot#skip _t2631)
          | 14 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_notificationShowMessage iprot#readBool
            else
              iprot#skip _t2631)
          | 15 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_notificationIncomingCall iprot#readBool
            else
              iprot#skip _t2631)
          | 16 -> (if _t2631 = Protocol.T_STRING then
              _str2630#set_notificationSoundMessage iprot#readString
            else
              iprot#skip _t2631)
          | 17 -> (if _t2631 = Protocol.T_STRING then
              _str2630#set_notificationSoundGroup iprot#readString
            else
              iprot#skip _t2631)
          | 18 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_notificationDisabledWithSub iprot#readBool
            else
              iprot#skip _t2631)
          | 20 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_privacySyncContacts iprot#readBool
            else
              iprot#skip _t2631)
          | 21 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_privacySearchByPhoneNumber iprot#readBool
            else
              iprot#skip _t2631)
          | 22 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_privacySearchByUserid iprot#readBool
            else
              iprot#skip _t2631)
          | 23 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_privacySearchByEmail iprot#readBool
            else
              iprot#skip _t2631)
          | 24 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_privacyAllowSecondaryDeviceLogin iprot#readBool
            else
              iprot#skip _t2631)
          | 25 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_privacyProfileImagePostToMyhome iprot#readBool
            else
              iprot#skip _t2631)
          | 26 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_privacyReceiveMessagesFromNotFriend iprot#readBool
            else
              iprot#skip _t2631)
          | 30 -> (if _t2631 = Protocol.T_STRING then
              _str2630#set_contactMyTicket iprot#readString
            else
              iprot#skip _t2631)
          | 40 -> (if _t2631 = Protocol.T_I32 then
              _str2630#set_identityProvider (IdentityProvider.of_i iprot#readI32)
            else
              iprot#skip _t2631)
          | 41 -> (if _t2631 = Protocol.T_STRING then
              _str2630#set_identityIdentifier iprot#readString
            else
              iprot#skip _t2631)
          | 42 -> (if _t2631 = Protocol.T_MAP then
              _str2630#set_snsAccounts 
                (let (_ktype2634,_vtype2635,_size2633) = iprot#readMapBegin in
                let _con2637 = Hashtbl.create _size2633 in
                  for i = 1 to _size2633 do
                    let _k = (SnsIdType.of_i iprot#readI32) in
                    let _v = iprot#readString in
                      Hashtbl.add _con2637 _k _v
                  done; iprot#readMapEnd; _con2637)
            else
              iprot#skip _t2631)
          | 43 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_phoneRegistration iprot#readBool
            else
              iprot#skip _t2631)
          | 44 -> (if _t2631 = Protocol.T_I32 then
              _str2630#set_emailConfirmationStatus (EmailConfirmationStatus.of_i iprot#readI32)
            else
              iprot#skip _t2631)
          | 50 -> (if _t2631 = Protocol.T_STRING then
              _str2630#set_preferenceLocale iprot#readString
            else
              iprot#skip _t2631)
          | 60 -> (if _t2631 = Protocol.T_MAP then
              _str2630#set_customModes 
                (let (_ktype2639,_vtype2640,_size2638) = iprot#readMapBegin in
                let _con2642 = Hashtbl.create _size2638 in
                  for i = 1 to _size2638 do
                    let _k = (CustomMode.of_i iprot#readI32) in
                    let _v = iprot#readString in
                      Hashtbl.add _con2642 _k _v
                  done; iprot#readMapEnd; _con2642)
            else
              iprot#skip _t2631)
          | 61 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_e2eeEnable iprot#readBool
            else
              iprot#skip _t2631)
          | 62 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_hitokotoBackupRequested iprot#readBool
            else
              iprot#skip _t2631)
          | 63 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_privacyProfileMusicPostToMyhome iprot#readBool
            else
              iprot#skip _t2631)
          | 65 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_privacyAllowNearby iprot#readBool
            else
              iprot#skip _t2631)
          | 66 -> (if _t2631 = Protocol.T_I64 then
              _str2630#set_agreementNearbyTime iprot#readI64
            else
              iprot#skip _t2631)
          | 67 -> (if _t2631 = Protocol.T_I64 then
              _str2630#set_agreementSquareTime iprot#readI64
            else
              iprot#skip _t2631)
          | 68 -> (if _t2631 = Protocol.T_BOOL then
              _str2630#set_notificationMention iprot#readBool
            else
              iprot#skip _t2631)
          | 69 -> (if _t2631 = Protocol.T_I64 then
              _str2630#set_botUseAgreementAcceptedAt iprot#readI64
            else
              iprot#skip _t2631)
          | _ -> iprot#skip _t2631);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2630

class simpleChannelClient =
object (self)
  val mutable _applicationType : string option = None
  method get_applicationType = _applicationType
  method grab_applicationType = match _applicationType with None->raise (Field_empty "simpleChannelClient.applicationType") | Some _x2644 -> _x2644
  method set_applicationType _x2644 = _applicationType <- Some _x2644
  method unset_applicationType = _applicationType <- None
  method reset_applicationType = _applicationType <- None

  val mutable _applicationVersion : string option = None
  method get_applicationVersion = _applicationVersion
  method grab_applicationVersion = match _applicationVersion with None->raise (Field_empty "simpleChannelClient.applicationVersion") | Some _x2645 -> _x2645
  method set_applicationVersion _x2645 = _applicationVersion <- Some _x2645
  method unset_applicationVersion = _applicationVersion <- None
  method reset_applicationVersion = _applicationVersion <- None

  val mutable _locale : string option = None
  method get_locale = _locale
  method grab_locale = match _locale with None->raise (Field_empty "simpleChannelClient.locale") | Some _x2646 -> _x2646
  method set_locale _x2646 = _locale <- Some _x2646
  method unset_locale = _locale <- None
  method reset_locale = _locale <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SimpleChannelClient";
    (match _applicationType with None -> () | Some _v -> 
      oprot#writeFieldBegin("applicationType",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _applicationVersion with None -> () | Some _v -> 
      oprot#writeFieldBegin("applicationVersion",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _locale with None -> () | Some _v -> 
      oprot#writeFieldBegin("locale",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_simpleChannelClient (iprot : Protocol.t) =
  let _str2649 = new simpleChannelClient in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2650,_id2651) = iprot#readFieldBegin in
        if _t2650 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2651 with 
          | 1 -> (if _t2650 = Protocol.T_STRING then
              _str2649#set_applicationType iprot#readString
            else
              iprot#skip _t2650)
          | 2 -> (if _t2650 = Protocol.T_STRING then
              _str2649#set_applicationVersion iprot#readString
            else
              iprot#skip _t2650)
          | 3 -> (if _t2650 = Protocol.T_STRING then
              _str2649#set_locale iprot#readString
            else
              iprot#skip _t2650)
          | _ -> iprot#skip _t2650);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2649

class simpleChannelContact =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "simpleChannelContact.mid") | Some _x2653 -> _x2653
  method set_mid _x2653 = _mid <- Some _x2653
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _displayName : string option = None
  method get_displayName = _displayName
  method grab_displayName = match _displayName with None->raise (Field_empty "simpleChannelContact.displayName") | Some _x2654 -> _x2654
  method set_displayName _x2654 = _displayName <- Some _x2654
  method unset_displayName = _displayName <- None
  method reset_displayName = _displayName <- None

  val mutable _pictureStatus : string option = None
  method get_pictureStatus = _pictureStatus
  method grab_pictureStatus = match _pictureStatus with None->raise (Field_empty "simpleChannelContact.pictureStatus") | Some _x2655 -> _x2655
  method set_pictureStatus _x2655 = _pictureStatus <- Some _x2655
  method unset_pictureStatus = _pictureStatus <- None
  method reset_pictureStatus = _pictureStatus <- None

  val mutable _picturePath : string option = None
  method get_picturePath = _picturePath
  method grab_picturePath = match _picturePath with None->raise (Field_empty "simpleChannelContact.picturePath") | Some _x2656 -> _x2656
  method set_picturePath _x2656 = _picturePath <- Some _x2656
  method unset_picturePath = _picturePath <- None
  method reset_picturePath = _picturePath <- None

  val mutable _statusMessage : string option = None
  method get_statusMessage = _statusMessage
  method grab_statusMessage = match _statusMessage with None->raise (Field_empty "simpleChannelContact.statusMessage") | Some _x2657 -> _x2657
  method set_statusMessage _x2657 = _statusMessage <- Some _x2657
  method unset_statusMessage = _statusMessage <- None
  method reset_statusMessage = _statusMessage <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SimpleChannelContact";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _displayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _pictureStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("pictureStatus",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _picturePath with None -> () | Some _v -> 
      oprot#writeFieldBegin("picturePath",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _statusMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("statusMessage",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_simpleChannelContact (iprot : Protocol.t) =
  let _str2660 = new simpleChannelContact in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2661,_id2662) = iprot#readFieldBegin in
        if _t2661 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2662 with 
          | 1 -> (if _t2661 = Protocol.T_STRING then
              _str2660#set_mid iprot#readString
            else
              iprot#skip _t2661)
          | 2 -> (if _t2661 = Protocol.T_STRING then
              _str2660#set_displayName iprot#readString
            else
              iprot#skip _t2661)
          | 3 -> (if _t2661 = Protocol.T_STRING then
              _str2660#set_pictureStatus iprot#readString
            else
              iprot#skip _t2661)
          | 4 -> (if _t2661 = Protocol.T_STRING then
              _str2660#set_picturePath iprot#readString
            else
              iprot#skip _t2661)
          | 5 -> (if _t2661 = Protocol.T_STRING then
              _str2660#set_statusMessage iprot#readString
            else
              iprot#skip _t2661)
          | _ -> iprot#skip _t2661);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2660

class snsFriend =
object (self)
  val mutable _snsUserId : string option = None
  method get_snsUserId = _snsUserId
  method grab_snsUserId = match _snsUserId with None->raise (Field_empty "snsFriend.snsUserId") | Some _x2664 -> _x2664
  method set_snsUserId _x2664 = _snsUserId <- Some _x2664
  method unset_snsUserId = _snsUserId <- None
  method reset_snsUserId = _snsUserId <- None

  val mutable _snsUserName : string option = None
  method get_snsUserName = _snsUserName
  method grab_snsUserName = match _snsUserName with None->raise (Field_empty "snsFriend.snsUserName") | Some _x2665 -> _x2665
  method set_snsUserName _x2665 = _snsUserName <- Some _x2665
  method unset_snsUserName = _snsUserName <- None
  method reset_snsUserName = _snsUserName <- None

  val mutable _snsIdType : SnsIdType.t option = None
  method get_snsIdType = _snsIdType
  method grab_snsIdType = match _snsIdType with None->raise (Field_empty "snsFriend.snsIdType") | Some _x2666 -> _x2666
  method set_snsIdType _x2666 = _snsIdType <- Some _x2666
  method unset_snsIdType = _snsIdType <- None
  method reset_snsIdType = _snsIdType <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SnsFriend";
    (match _snsUserId with None -> () | Some _v -> 
      oprot#writeFieldBegin("snsUserId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _snsUserName with None -> () | Some _v -> 
      oprot#writeFieldBegin("snsUserName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _snsIdType with None -> () | Some _v -> 
      oprot#writeFieldBegin("snsIdType",Protocol.T_I32,3);
      oprot#writeI32(SnsIdType.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_snsFriend (iprot : Protocol.t) =
  let _str2669 = new snsFriend in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2670,_id2671) = iprot#readFieldBegin in
        if _t2670 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2671 with 
          | 1 -> (if _t2670 = Protocol.T_STRING then
              _str2669#set_snsUserId iprot#readString
            else
              iprot#skip _t2670)
          | 2 -> (if _t2670 = Protocol.T_STRING then
              _str2669#set_snsUserName iprot#readString
            else
              iprot#skip _t2670)
          | 3 -> (if _t2670 = Protocol.T_I32 then
              _str2669#set_snsIdType (SnsIdType.of_i iprot#readI32)
            else
              iprot#skip _t2670)
          | _ -> iprot#skip _t2670);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2669

class snsFriendContactRegistration =
object (self)
  val mutable _contact : contact option = None
  method get_contact = _contact
  method grab_contact = match _contact with None->raise (Field_empty "snsFriendContactRegistration.contact") | Some _x2673 -> _x2673
  method set_contact _x2673 = _contact <- Some _x2673
  method unset_contact = _contact <- None
  method reset_contact = _contact <- None

  val mutable _snsIdType : SnsIdType.t option = None
  method get_snsIdType = _snsIdType
  method grab_snsIdType = match _snsIdType with None->raise (Field_empty "snsFriendContactRegistration.snsIdType") | Some _x2674 -> _x2674
  method set_snsIdType _x2674 = _snsIdType <- Some _x2674
  method unset_snsIdType = _snsIdType <- None
  method reset_snsIdType = _snsIdType <- None

  val mutable _snsUserId : string option = None
  method get_snsUserId = _snsUserId
  method grab_snsUserId = match _snsUserId with None->raise (Field_empty "snsFriendContactRegistration.snsUserId") | Some _x2675 -> _x2675
  method set_snsUserId _x2675 = _snsUserId <- Some _x2675
  method unset_snsUserId = _snsUserId <- None
  method reset_snsUserId = _snsUserId <- None

  method copy =
      let _new = Oo.copy self in
      if _contact <> None then
        _new#set_contact self#grab_contact#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SnsFriendContactRegistration";
    (match _contact with None -> () | Some _v -> 
      oprot#writeFieldBegin("contact",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _snsIdType with None -> () | Some _v -> 
      oprot#writeFieldBegin("snsIdType",Protocol.T_I32,2);
      oprot#writeI32(SnsIdType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _snsUserId with None -> () | Some _v -> 
      oprot#writeFieldBegin("snsUserId",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_snsFriendContactRegistration (iprot : Protocol.t) =
  let _str2678 = new snsFriendContactRegistration in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2679,_id2680) = iprot#readFieldBegin in
        if _t2679 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2680 with 
          | 1 -> (if _t2679 = Protocol.T_STRUCT then
              _str2678#set_contact (read_contact iprot)
            else
              iprot#skip _t2679)
          | 2 -> (if _t2679 = Protocol.T_I32 then
              _str2678#set_snsIdType (SnsIdType.of_i iprot#readI32)
            else
              iprot#skip _t2679)
          | 3 -> (if _t2679 = Protocol.T_STRING then
              _str2678#set_snsUserId iprot#readString
            else
              iprot#skip _t2679)
          | _ -> iprot#skip _t2679);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2678

class snsFriendModification =
object (self)
  val mutable _type : ModificationType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "snsFriendModification.type") | Some _x2682 -> _x2682
  method set_type _x2682 = _type <- Some _x2682
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _snsFriend : snsFriend option = None
  method get_snsFriend = _snsFriend
  method grab_snsFriend = match _snsFriend with None->raise (Field_empty "snsFriendModification.snsFriend") | Some _x2683 -> _x2683
  method set_snsFriend _x2683 = _snsFriend <- Some _x2683
  method unset_snsFriend = _snsFriend <- None
  method reset_snsFriend = _snsFriend <- None

  method copy =
      let _new = Oo.copy self in
      if _snsFriend <> None then
        _new#set_snsFriend self#grab_snsFriend#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SnsFriendModification";
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,1);
      oprot#writeI32(ModificationType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _snsFriend with None -> () | Some _v -> 
      oprot#writeFieldBegin("snsFriend",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_snsFriendModification (iprot : Protocol.t) =
  let _str2686 = new snsFriendModification in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2687,_id2688) = iprot#readFieldBegin in
        if _t2687 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2688 with 
          | 1 -> (if _t2687 = Protocol.T_I32 then
              _str2686#set_type (ModificationType.of_i iprot#readI32)
            else
              iprot#skip _t2687)
          | 2 -> (if _t2687 = Protocol.T_STRUCT then
              _str2686#set_snsFriend (read_snsFriend iprot)
            else
              iprot#skip _t2687)
          | _ -> iprot#skip _t2687);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2686

class snsFriends =
object (self)
  val mutable _snsFriends : snsFriend list option = None
  method get_snsFriends = _snsFriends
  method grab_snsFriends = match _snsFriends with None->raise (Field_empty "snsFriends.snsFriends") | Some _x2690 -> _x2690
  method set_snsFriends _x2690 = _snsFriends <- Some _x2690
  method unset_snsFriends = _snsFriends <- None
  method reset_snsFriends = _snsFriends <- None

  val mutable _hasMore : bool option = None
  method get_hasMore = _hasMore
  method grab_hasMore = match _hasMore with None->raise (Field_empty "snsFriends.hasMore") | Some _x2691 -> _x2691
  method set_hasMore _x2691 = _hasMore <- Some _x2691
  method unset_hasMore = _hasMore <- None
  method reset_hasMore = _hasMore <- None

  method copy =
      let _new = Oo.copy self in
      if _snsFriends <> None then
        _new#set_snsFriends (List.map (fun x -> x#copy) self#grab_snsFriends);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SnsFriends";
    (match _snsFriends with None -> () | Some _v -> 
      oprot#writeFieldBegin("snsFriends",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2694 ->         _iter2694#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _hasMore with None -> () | Some _v -> 
      oprot#writeFieldBegin("hasMore",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_snsFriends (iprot : Protocol.t) =
  let _str2695 = new snsFriends in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2696,_id2697) = iprot#readFieldBegin in
        if _t2696 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2697 with 
          | 1 -> (if _t2696 = Protocol.T_LIST then
              _str2695#set_snsFriends 
                (let (_etype2701,_size2698) = iprot#readListBegin in
                  let _con2702 = (Array.to_list (Array.init _size2698 (fun _ -> (read_snsFriend iprot)))) in
                    iprot#readListEnd; _con2702)
            else
              iprot#skip _t2696)
          | 2 -> (if _t2696 = Protocol.T_BOOL then
              _str2695#set_hasMore iprot#readBool
            else
              iprot#skip _t2696)
          | _ -> iprot#skip _t2696);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2695

class snsIdUserStatus =
object (self)
  val mutable _userExisting : bool option = None
  method get_userExisting = _userExisting
  method grab_userExisting = match _userExisting with None->raise (Field_empty "snsIdUserStatus.userExisting") | Some _x2704 -> _x2704
  method set_userExisting _x2704 = _userExisting <- Some _x2704
  method unset_userExisting = _userExisting <- None
  method reset_userExisting = _userExisting <- None

  val mutable _phoneNumberRegistered : bool option = None
  method get_phoneNumberRegistered = _phoneNumberRegistered
  method grab_phoneNumberRegistered = match _phoneNumberRegistered with None->raise (Field_empty "snsIdUserStatus.phoneNumberRegistered") | Some _x2705 -> _x2705
  method set_phoneNumberRegistered _x2705 = _phoneNumberRegistered <- Some _x2705
  method unset_phoneNumberRegistered = _phoneNumberRegistered <- None
  method reset_phoneNumberRegistered = _phoneNumberRegistered <- None

  val mutable _sameDevice : bool option = None
  method get_sameDevice = _sameDevice
  method grab_sameDevice = match _sameDevice with None->raise (Field_empty "snsIdUserStatus.sameDevice") | Some _x2706 -> _x2706
  method set_sameDevice _x2706 = _sameDevice <- Some _x2706
  method unset_sameDevice = _sameDevice <- None
  method reset_sameDevice = _sameDevice <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SnsIdUserStatus";
    (match _userExisting with None -> () | Some _v -> 
      oprot#writeFieldBegin("userExisting",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _phoneNumberRegistered with None -> () | Some _v -> 
      oprot#writeFieldBegin("phoneNumberRegistered",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _sameDevice with None -> () | Some _v -> 
      oprot#writeFieldBegin("sameDevice",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_snsIdUserStatus (iprot : Protocol.t) =
  let _str2709 = new snsIdUserStatus in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2710,_id2711) = iprot#readFieldBegin in
        if _t2710 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2711 with 
          | 1 -> (if _t2710 = Protocol.T_BOOL then
              _str2709#set_userExisting iprot#readBool
            else
              iprot#skip _t2710)
          | 2 -> (if _t2710 = Protocol.T_BOOL then
              _str2709#set_phoneNumberRegistered iprot#readBool
            else
              iprot#skip _t2710)
          | 3 -> (if _t2710 = Protocol.T_BOOL then
              _str2709#set_sameDevice iprot#readBool
            else
              iprot#skip _t2710)
          | _ -> iprot#skip _t2710);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2709

class snsProfile =
object (self)
  val mutable _snsUserId : string option = None
  method get_snsUserId = _snsUserId
  method grab_snsUserId = match _snsUserId with None->raise (Field_empty "snsProfile.snsUserId") | Some _x2713 -> _x2713
  method set_snsUserId _x2713 = _snsUserId <- Some _x2713
  method unset_snsUserId = _snsUserId <- None
  method reset_snsUserId = _snsUserId <- None

  val mutable _snsUserName : string option = None
  method get_snsUserName = _snsUserName
  method grab_snsUserName = match _snsUserName with None->raise (Field_empty "snsProfile.snsUserName") | Some _x2714 -> _x2714
  method set_snsUserName _x2714 = _snsUserName <- Some _x2714
  method unset_snsUserName = _snsUserName <- None
  method reset_snsUserName = _snsUserName <- None

  val mutable _email : string option = None
  method get_email = _email
  method grab_email = match _email with None->raise (Field_empty "snsProfile.email") | Some _x2715 -> _x2715
  method set_email _x2715 = _email <- Some _x2715
  method unset_email = _email <- None
  method reset_email = _email <- None

  val mutable _thumbnailUrl : string option = None
  method get_thumbnailUrl = _thumbnailUrl
  method grab_thumbnailUrl = match _thumbnailUrl with None->raise (Field_empty "snsProfile.thumbnailUrl") | Some _x2716 -> _x2716
  method set_thumbnailUrl _x2716 = _thumbnailUrl <- Some _x2716
  method unset_thumbnailUrl = _thumbnailUrl <- None
  method reset_thumbnailUrl = _thumbnailUrl <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SnsProfile";
    (match _snsUserId with None -> () | Some _v -> 
      oprot#writeFieldBegin("snsUserId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _snsUserName with None -> () | Some _v -> 
      oprot#writeFieldBegin("snsUserName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _email with None -> () | Some _v -> 
      oprot#writeFieldBegin("email",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _thumbnailUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("thumbnailUrl",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_snsProfile (iprot : Protocol.t) =
  let _str2719 = new snsProfile in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2720,_id2721) = iprot#readFieldBegin in
        if _t2720 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2721 with 
          | 1 -> (if _t2720 = Protocol.T_STRING then
              _str2719#set_snsUserId iprot#readString
            else
              iprot#skip _t2720)
          | 2 -> (if _t2720 = Protocol.T_STRING then
              _str2719#set_snsUserName iprot#readString
            else
              iprot#skip _t2720)
          | 3 -> (if _t2720 = Protocol.T_STRING then
              _str2719#set_email iprot#readString
            else
              iprot#skip _t2720)
          | 4 -> (if _t2720 = Protocol.T_STRING then
              _str2719#set_thumbnailUrl iprot#readString
            else
              iprot#skip _t2720)
          | _ -> iprot#skip _t2720);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2719

class systemConfiguration =
object (self)
  val mutable _endpoint : string option = None
  method get_endpoint = _endpoint
  method grab_endpoint = match _endpoint with None->raise (Field_empty "systemConfiguration.endpoint") | Some _x2723 -> _x2723
  method set_endpoint _x2723 = _endpoint <- Some _x2723
  method unset_endpoint = _endpoint <- None
  method reset_endpoint = _endpoint <- None

  val mutable _endpointSsl : string option = None
  method get_endpointSsl = _endpointSsl
  method grab_endpointSsl = match _endpointSsl with None->raise (Field_empty "systemConfiguration.endpointSsl") | Some _x2724 -> _x2724
  method set_endpointSsl _x2724 = _endpointSsl <- Some _x2724
  method unset_endpointSsl = _endpointSsl <- None
  method reset_endpointSsl = _endpointSsl <- None

  val mutable _updateUrl : string option = None
  method get_updateUrl = _updateUrl
  method grab_updateUrl = match _updateUrl with None->raise (Field_empty "systemConfiguration.updateUrl") | Some _x2725 -> _x2725
  method set_updateUrl _x2725 = _updateUrl <- Some _x2725
  method unset_updateUrl = _updateUrl <- None
  method reset_updateUrl = _updateUrl <- None

  val mutable _c2dmAccount : string option = None
  method get_c2dmAccount = _c2dmAccount
  method grab_c2dmAccount = match _c2dmAccount with None->raise (Field_empty "systemConfiguration.c2dmAccount") | Some _x2726 -> _x2726
  method set_c2dmAccount _x2726 = _c2dmAccount <- Some _x2726
  method unset_c2dmAccount = _c2dmAccount <- None
  method reset_c2dmAccount = _c2dmAccount <- None

  val mutable _nniServer : string option = None
  method get_nniServer = _nniServer
  method grab_nniServer = match _nniServer with None->raise (Field_empty "systemConfiguration.nniServer") | Some _x2727 -> _x2727
  method set_nniServer _x2727 = _nniServer <- Some _x2727
  method unset_nniServer = _nniServer <- None
  method reset_nniServer = _nniServer <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SystemConfiguration";
    (match _endpoint with None -> () | Some _v -> 
      oprot#writeFieldBegin("endpoint",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _endpointSsl with None -> () | Some _v -> 
      oprot#writeFieldBegin("endpointSsl",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _updateUrl with None -> () | Some _v -> 
      oprot#writeFieldBegin("updateUrl",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _c2dmAccount with None -> () | Some _v -> 
      oprot#writeFieldBegin("c2dmAccount",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _nniServer with None -> () | Some _v -> 
      oprot#writeFieldBegin("nniServer",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_systemConfiguration (iprot : Protocol.t) =
  let _str2730 = new systemConfiguration in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2731,_id2732) = iprot#readFieldBegin in
        if _t2731 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2732 with 
          | 1 -> (if _t2731 = Protocol.T_STRING then
              _str2730#set_endpoint iprot#readString
            else
              iprot#skip _t2731)
          | 2 -> (if _t2731 = Protocol.T_STRING then
              _str2730#set_endpointSsl iprot#readString
            else
              iprot#skip _t2731)
          | 3 -> (if _t2731 = Protocol.T_STRING then
              _str2730#set_updateUrl iprot#readString
            else
              iprot#skip _t2731)
          | 11 -> (if _t2731 = Protocol.T_STRING then
              _str2730#set_c2dmAccount iprot#readString
            else
              iprot#skip _t2731)
          | 12 -> (if _t2731 = Protocol.T_STRING then
              _str2730#set_nniServer iprot#readString
            else
              iprot#skip _t2731)
          | _ -> iprot#skip _t2731);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2730

class ticket =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "ticket.id") | Some _x2734 -> _x2734
  method set_id _x2734 = _id <- Some _x2734
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _expirationTime : Int64.t option = None
  method get_expirationTime = _expirationTime
  method grab_expirationTime = match _expirationTime with None->raise (Field_empty "ticket.expirationTime") | Some _x2735 -> _x2735
  method set_expirationTime _x2735 = _expirationTime <- Some _x2735
  method unset_expirationTime = _expirationTime <- None
  method reset_expirationTime = _expirationTime <- None

  val mutable _maxUseCount : Int32.t option = None
  method get_maxUseCount = _maxUseCount
  method grab_maxUseCount = match _maxUseCount with None->raise (Field_empty "ticket.maxUseCount") | Some _x2736 -> _x2736
  method set_maxUseCount _x2736 = _maxUseCount <- Some _x2736
  method unset_maxUseCount = _maxUseCount <- None
  method reset_maxUseCount = _maxUseCount <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Ticket";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _expirationTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("expirationTime",Protocol.T_I64,10);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _maxUseCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("maxUseCount",Protocol.T_I32,21);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_ticket (iprot : Protocol.t) =
  let _str2739 = new ticket in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2740,_id2741) = iprot#readFieldBegin in
        if _t2740 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2741 with 
          | 1 -> (if _t2740 = Protocol.T_STRING then
              _str2739#set_id iprot#readString
            else
              iprot#skip _t2740)
          | 10 -> (if _t2740 = Protocol.T_I64 then
              _str2739#set_expirationTime iprot#readI64
            else
              iprot#skip _t2740)
          | 21 -> (if _t2740 = Protocol.T_I32 then
              _str2739#set_maxUseCount iprot#readI32
            else
              iprot#skip _t2740)
          | _ -> iprot#skip _t2740);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2739

class tMessageBox =
object (self)
  val mutable _id : string option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "tMessageBox.id") | Some _x2743 -> _x2743
  method set_id _x2743 = _id <- Some _x2743
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _channelId : string option = None
  method get_channelId = _channelId
  method grab_channelId = match _channelId with None->raise (Field_empty "tMessageBox.channelId") | Some _x2744 -> _x2744
  method set_channelId _x2744 = _channelId <- Some _x2744
  method unset_channelId = _channelId <- None
  method reset_channelId = _channelId <- None

  val mutable _lastSeq : Int64.t option = None
  method get_lastSeq = _lastSeq
  method grab_lastSeq = match _lastSeq with None->raise (Field_empty "tMessageBox.lastSeq") | Some _x2745 -> _x2745
  method set_lastSeq _x2745 = _lastSeq <- Some _x2745
  method unset_lastSeq = _lastSeq <- None
  method reset_lastSeq = _lastSeq <- None

  val mutable _unreadCount : Int64.t option = None
  method get_unreadCount = _unreadCount
  method grab_unreadCount = match _unreadCount with None->raise (Field_empty "tMessageBox.unreadCount") | Some _x2746 -> _x2746
  method set_unreadCount _x2746 = _unreadCount <- Some _x2746
  method unset_unreadCount = _unreadCount <- None
  method reset_unreadCount = _unreadCount <- None

  val mutable _lastModifiedTime : Int64.t option = None
  method get_lastModifiedTime = _lastModifiedTime
  method grab_lastModifiedTime = match _lastModifiedTime with None->raise (Field_empty "tMessageBox.lastModifiedTime") | Some _x2747 -> _x2747
  method set_lastModifiedTime _x2747 = _lastModifiedTime <- Some _x2747
  method unset_lastModifiedTime = _lastModifiedTime <- None
  method reset_lastModifiedTime = _lastModifiedTime <- None

  val mutable _status : Int32.t option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "tMessageBox.status") | Some _x2748 -> _x2748
  method set_status _x2748 = _status <- Some _x2748
  method unset_status = _status <- None
  method reset_status = _status <- None

  val mutable _midType : MIDType.t option = None
  method get_midType = _midType
  method grab_midType = match _midType with None->raise (Field_empty "tMessageBox.midType") | Some _x2749 -> _x2749
  method set_midType _x2749 = _midType <- Some _x2749
  method unset_midType = _midType <- None
  method reset_midType = _midType <- None

  val mutable _lastMessages : message list option = None
  method get_lastMessages = _lastMessages
  method grab_lastMessages = match _lastMessages with None->raise (Field_empty "tMessageBox.lastMessages") | Some _x2750 -> _x2750
  method set_lastMessages _x2750 = _lastMessages <- Some _x2750
  method unset_lastMessages = _lastMessages <- None
  method reset_lastMessages = _lastMessages <- None

  method copy =
      let _new = Oo.copy self in
      if _lastMessages <> None then
        _new#set_lastMessages (List.map (fun x -> x#copy) self#grab_lastMessages);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "TMessageBox";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _channelId with None -> () | Some _v -> 
      oprot#writeFieldBegin("channelId",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _lastSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("lastSeq",Protocol.T_I64,5);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _unreadCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("unreadCount",Protocol.T_I64,6);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _lastModifiedTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("lastModifiedTime",Protocol.T_I64,7);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_I32,8);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _midType with None -> () | Some _v -> 
      oprot#writeFieldBegin("midType",Protocol.T_I32,9);
      oprot#writeI32(MIDType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _lastMessages with None -> () | Some _v -> 
      oprot#writeFieldBegin("lastMessages",Protocol.T_LIST,10);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2753 ->         _iter2753#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_tMessageBox (iprot : Protocol.t) =
  let _str2754 = new tMessageBox in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2755,_id2756) = iprot#readFieldBegin in
        if _t2755 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2756 with 
          | 1 -> (if _t2755 = Protocol.T_STRING then
              _str2754#set_id iprot#readString
            else
              iprot#skip _t2755)
          | 2 -> (if _t2755 = Protocol.T_STRING then
              _str2754#set_channelId iprot#readString
            else
              iprot#skip _t2755)
          | 5 -> (if _t2755 = Protocol.T_I64 then
              _str2754#set_lastSeq iprot#readI64
            else
              iprot#skip _t2755)
          | 6 -> (if _t2755 = Protocol.T_I64 then
              _str2754#set_unreadCount iprot#readI64
            else
              iprot#skip _t2755)
          | 7 -> (if _t2755 = Protocol.T_I64 then
              _str2754#set_lastModifiedTime iprot#readI64
            else
              iprot#skip _t2755)
          | 8 -> (if _t2755 = Protocol.T_I32 then
              _str2754#set_status iprot#readI32
            else
              iprot#skip _t2755)
          | 9 -> (if _t2755 = Protocol.T_I32 then
              _str2754#set_midType (MIDType.of_i iprot#readI32)
            else
              iprot#skip _t2755)
          | 10 -> (if _t2755 = Protocol.T_LIST then
              _str2754#set_lastMessages 
                (let (_etype2760,_size2757) = iprot#readListBegin in
                  let _con2761 = (Array.to_list (Array.init _size2757 (fun _ -> (read_message iprot)))) in
                    iprot#readListEnd; _con2761)
            else
              iprot#skip _t2755)
          | _ -> iprot#skip _t2755);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2754

class tMessageBoxWrapUp =
object (self)
  val mutable _messageBox : tMessageBox option = None
  method get_messageBox = _messageBox
  method grab_messageBox = match _messageBox with None->raise (Field_empty "tMessageBoxWrapUp.messageBox") | Some _x2763 -> _x2763
  method set_messageBox _x2763 = _messageBox <- Some _x2763
  method unset_messageBox = _messageBox <- None
  method reset_messageBox = _messageBox <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "tMessageBoxWrapUp.name") | Some _x2764 -> _x2764
  method set_name _x2764 = _name <- Some _x2764
  method unset_name = _name <- None
  method reset_name = _name <- None

  val mutable _contacts : contact list option = None
  method get_contacts = _contacts
  method grab_contacts = match _contacts with None->raise (Field_empty "tMessageBoxWrapUp.contacts") | Some _x2765 -> _x2765
  method set_contacts _x2765 = _contacts <- Some _x2765
  method unset_contacts = _contacts <- None
  method reset_contacts = _contacts <- None

  val mutable _pictureRevision : string option = None
  method get_pictureRevision = _pictureRevision
  method grab_pictureRevision = match _pictureRevision with None->raise (Field_empty "tMessageBoxWrapUp.pictureRevision") | Some _x2766 -> _x2766
  method set_pictureRevision _x2766 = _pictureRevision <- Some _x2766
  method unset_pictureRevision = _pictureRevision <- None
  method reset_pictureRevision = _pictureRevision <- None

  method copy =
      let _new = Oo.copy self in
      if _messageBox <> None then
        _new#set_messageBox self#grab_messageBox#copy;
      if _contacts <> None then
        _new#set_contacts (List.map (fun x -> x#copy) self#grab_contacts);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "TMessageBoxWrapUp";
    (match _messageBox with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageBox",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _contacts with None -> () | Some _v -> 
      oprot#writeFieldBegin("contacts",Protocol.T_LIST,3);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2769 ->         _iter2769#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _pictureRevision with None -> () | Some _v -> 
      oprot#writeFieldBegin("pictureRevision",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_tMessageBoxWrapUp (iprot : Protocol.t) =
  let _str2770 = new tMessageBoxWrapUp in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2771,_id2772) = iprot#readFieldBegin in
        if _t2771 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2772 with 
          | 1 -> (if _t2771 = Protocol.T_STRUCT then
              _str2770#set_messageBox (read_tMessageBox iprot)
            else
              iprot#skip _t2771)
          | 2 -> (if _t2771 = Protocol.T_STRING then
              _str2770#set_name iprot#readString
            else
              iprot#skip _t2771)
          | 3 -> (if _t2771 = Protocol.T_LIST then
              _str2770#set_contacts 
                (let (_etype2776,_size2773) = iprot#readListBegin in
                  let _con2777 = (Array.to_list (Array.init _size2773 (fun _ -> (read_contact iprot)))) in
                    iprot#readListEnd; _con2777)
            else
              iprot#skip _t2771)
          | 4 -> (if _t2771 = Protocol.T_STRING then
              _str2770#set_pictureRevision iprot#readString
            else
              iprot#skip _t2771)
          | _ -> iprot#skip _t2771);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2770

class tMessageBoxWrapUpResponse =
object (self)
  val mutable _messageBoxWrapUpList : tMessageBoxWrapUp list option = None
  method get_messageBoxWrapUpList = _messageBoxWrapUpList
  method grab_messageBoxWrapUpList = match _messageBoxWrapUpList with None->raise (Field_empty "tMessageBoxWrapUpResponse.messageBoxWrapUpList") | Some _x2779 -> _x2779
  method set_messageBoxWrapUpList _x2779 = _messageBoxWrapUpList <- Some _x2779
  method unset_messageBoxWrapUpList = _messageBoxWrapUpList <- None
  method reset_messageBoxWrapUpList = _messageBoxWrapUpList <- None

  val mutable _totalSize : Int32.t option = None
  method get_totalSize = _totalSize
  method grab_totalSize = match _totalSize with None->raise (Field_empty "tMessageBoxWrapUpResponse.totalSize") | Some _x2780 -> _x2780
  method set_totalSize _x2780 = _totalSize <- Some _x2780
  method unset_totalSize = _totalSize <- None
  method reset_totalSize = _totalSize <- None

  method copy =
      let _new = Oo.copy self in
      if _messageBoxWrapUpList <> None then
        _new#set_messageBoxWrapUpList (List.map (fun x -> x#copy) self#grab_messageBoxWrapUpList);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "TMessageBoxWrapUpResponse";
    (match _messageBoxWrapUpList with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageBoxWrapUpList",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2783 ->         _iter2783#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _totalSize with None -> () | Some _v -> 
      oprot#writeFieldBegin("totalSize",Protocol.T_I32,2);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_tMessageBoxWrapUpResponse (iprot : Protocol.t) =
  let _str2784 = new tMessageBoxWrapUpResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2785,_id2786) = iprot#readFieldBegin in
        if _t2785 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2786 with 
          | 1 -> (if _t2785 = Protocol.T_LIST then
              _str2784#set_messageBoxWrapUpList 
                (let (_etype2790,_size2787) = iprot#readListBegin in
                  let _con2791 = (Array.to_list (Array.init _size2787 (fun _ -> (read_tMessageBoxWrapUp iprot)))) in
                    iprot#readListEnd; _con2791)
            else
              iprot#skip _t2785)
          | 2 -> (if _t2785 = Protocol.T_I32 then
              _str2784#set_totalSize iprot#readI32
            else
              iprot#skip _t2785)
          | _ -> iprot#skip _t2785);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2784

class tMessageReadRangeEntry =
object (self)
  val mutable _startMessageId : Int64.t option = None
  method get_startMessageId = _startMessageId
  method grab_startMessageId = match _startMessageId with None->raise (Field_empty "tMessageReadRangeEntry.startMessageId") | Some _x2793 -> _x2793
  method set_startMessageId _x2793 = _startMessageId <- Some _x2793
  method unset_startMessageId = _startMessageId <- None
  method reset_startMessageId = _startMessageId <- None

  val mutable _endMessageId : Int64.t option = None
  method get_endMessageId = _endMessageId
  method grab_endMessageId = match _endMessageId with None->raise (Field_empty "tMessageReadRangeEntry.endMessageId") | Some _x2794 -> _x2794
  method set_endMessageId _x2794 = _endMessageId <- Some _x2794
  method unset_endMessageId = _endMessageId <- None
  method reset_endMessageId = _endMessageId <- None

  val mutable _startTime : Int64.t option = None
  method get_startTime = _startTime
  method grab_startTime = match _startTime with None->raise (Field_empty "tMessageReadRangeEntry.startTime") | Some _x2795 -> _x2795
  method set_startTime _x2795 = _startTime <- Some _x2795
  method unset_startTime = _startTime <- None
  method reset_startTime = _startTime <- None

  val mutable _endTime : Int64.t option = None
  method get_endTime = _endTime
  method grab_endTime = match _endTime with None->raise (Field_empty "tMessageReadRangeEntry.endTime") | Some _x2796 -> _x2796
  method set_endTime _x2796 = _endTime <- Some _x2796
  method unset_endTime = _endTime <- None
  method reset_endTime = _endTime <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "TMessageReadRangeEntry";
    (match _startMessageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("startMessageId",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _endMessageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("endMessageId",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _startTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("startTime",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _endTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("endTime",Protocol.T_I64,4);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_tMessageReadRangeEntry (iprot : Protocol.t) =
  let _str2799 = new tMessageReadRangeEntry in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2800,_id2801) = iprot#readFieldBegin in
        if _t2800 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2801 with 
          | 1 -> (if _t2800 = Protocol.T_I64 then
              _str2799#set_startMessageId iprot#readI64
            else
              iprot#skip _t2800)
          | 2 -> (if _t2800 = Protocol.T_I64 then
              _str2799#set_endMessageId iprot#readI64
            else
              iprot#skip _t2800)
          | 3 -> (if _t2800 = Protocol.T_I64 then
              _str2799#set_startTime iprot#readI64
            else
              iprot#skip _t2800)
          | 4 -> (if _t2800 = Protocol.T_I64 then
              _str2799#set_endTime iprot#readI64
            else
              iprot#skip _t2800)
          | _ -> iprot#skip _t2800);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2799

class tMessageReadRange =
object (self)
  val mutable _chatId : string option = None
  method get_chatId = _chatId
  method grab_chatId = match _chatId with None->raise (Field_empty "tMessageReadRange.chatId") | Some _x2803 -> _x2803
  method set_chatId _x2803 = _chatId <- Some _x2803
  method unset_chatId = _chatId <- None
  method reset_chatId = _chatId <- None

  val mutable _ranges : (string,tMessageReadRangeEntry list) Hashtbl.t option = None
  method get_ranges = _ranges
  method grab_ranges = match _ranges with None->raise (Field_empty "tMessageReadRange.ranges") | Some _x2804 -> _x2804
  method set_ranges _x2804 = _ranges <- Some _x2804
  method unset_ranges = _ranges <- None
  method reset_ranges = _ranges <- None

  method copy =
      let _new = Oo.copy self in
      if _ranges <> None then
        _new#set_ranges ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k (List.map (fun x -> x#copy) v)) oh; nh) self#grab_ranges);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "TMessageReadRange";
    (match _chatId with None -> () | Some _v -> 
      oprot#writeFieldBegin("chatId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _ranges with None -> () | Some _v -> 
      oprot#writeFieldBegin("ranges",Protocol.T_MAP,2);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_LIST,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter2807 -> fun _viter2808 -> 
        oprot#writeString(_kiter2807);
        oprot#writeListBegin(Protocol.T_STRUCT,List.length _viter2808);
        List.iter (fun _iter2809 ->           _iter2809#write(oprot);
        ) _viter2808;
        oprot#writeListEnd;
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_tMessageReadRange (iprot : Protocol.t) =
  let _str2810 = new tMessageReadRange in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2811,_id2812) = iprot#readFieldBegin in
        if _t2811 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2812 with 
          | 1 -> (if _t2811 = Protocol.T_STRING then
              _str2810#set_chatId iprot#readString
            else
              iprot#skip _t2811)
          | 2 -> (if _t2811 = Protocol.T_MAP then
              _str2810#set_ranges 
                (let (_ktype2814,_vtype2815,_size2813) = iprot#readMapBegin in
                let _con2817 = Hashtbl.create _size2813 in
                  for i = 1 to _size2813 do
                    let _k = iprot#readString in
                    let _v = 
                      (let (_etype2821,_size2818) = iprot#readListBegin in
                        let _con2822 = (Array.to_list (Array.init _size2818 (fun _ -> (read_tMessageReadRangeEntry iprot)))) in
                          iprot#readListEnd; _con2822) in
                      Hashtbl.add _con2817 _k _v
                  done; iprot#readMapEnd; _con2817)
            else
              iprot#skip _t2811)
          | _ -> iprot#skip _t2811);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2810

class chatRoomAnnouncementContents =
object (self)
  val mutable _displayFields : Int32.t option = None
  method get_displayFields = _displayFields
  method grab_displayFields = match _displayFields with None->raise (Field_empty "chatRoomAnnouncementContents.displayFields") | Some _x2824 -> _x2824
  method set_displayFields _x2824 = _displayFields <- Some _x2824
  method unset_displayFields = _displayFields <- None
  method reset_displayFields = _displayFields <- None

  val mutable _text : string option = None
  method get_text = _text
  method grab_text = match _text with None->raise (Field_empty "chatRoomAnnouncementContents.text") | Some _x2825 -> _x2825
  method set_text _x2825 = _text <- Some _x2825
  method unset_text = _text <- None
  method reset_text = _text <- None

  val mutable _link : string option = None
  method get_link = _link
  method grab_link = match _link with None->raise (Field_empty "chatRoomAnnouncementContents.link") | Some _x2826 -> _x2826
  method set_link _x2826 = _link <- Some _x2826
  method unset_link = _link <- None
  method reset_link = _link <- None

  val mutable _thumbnail : string option = None
  method get_thumbnail = _thumbnail
  method grab_thumbnail = match _thumbnail with None->raise (Field_empty "chatRoomAnnouncementContents.thumbnail") | Some _x2827 -> _x2827
  method set_thumbnail _x2827 = _thumbnail <- Some _x2827
  method unset_thumbnail = _thumbnail <- None
  method reset_thumbnail = _thumbnail <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChatRoomAnnouncementContents";
    (match _displayFields with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayFields",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _text with None -> () | Some _v -> 
      oprot#writeFieldBegin("text",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _link with None -> () | Some _v -> 
      oprot#writeFieldBegin("link",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _thumbnail with None -> () | Some _v -> 
      oprot#writeFieldBegin("thumbnail",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_chatRoomAnnouncementContents (iprot : Protocol.t) =
  let _str2830 = new chatRoomAnnouncementContents in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2831,_id2832) = iprot#readFieldBegin in
        if _t2831 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2832 with 
          | 1 -> (if _t2831 = Protocol.T_I32 then
              _str2830#set_displayFields iprot#readI32
            else
              iprot#skip _t2831)
          | 2 -> (if _t2831 = Protocol.T_STRING then
              _str2830#set_text iprot#readString
            else
              iprot#skip _t2831)
          | 3 -> (if _t2831 = Protocol.T_STRING then
              _str2830#set_link iprot#readString
            else
              iprot#skip _t2831)
          | 4 -> (if _t2831 = Protocol.T_STRING then
              _str2830#set_thumbnail iprot#readString
            else
              iprot#skip _t2831)
          | _ -> iprot#skip _t2831);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2830

class chatRoomAnnouncement =
object (self)
  val mutable _announcementSeq : Int64.t option = None
  method get_announcementSeq = _announcementSeq
  method grab_announcementSeq = match _announcementSeq with None->raise (Field_empty "chatRoomAnnouncement.announcementSeq") | Some _x2834 -> _x2834
  method set_announcementSeq _x2834 = _announcementSeq <- Some _x2834
  method unset_announcementSeq = _announcementSeq <- None
  method reset_announcementSeq = _announcementSeq <- None

  val mutable _type : ChatRoomAnnouncementType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "chatRoomAnnouncement.type") | Some _x2835 -> _x2835
  method set_type _x2835 = _type <- Some _x2835
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _contents : chatRoomAnnouncementContents option = None
  method get_contents = _contents
  method grab_contents = match _contents with None->raise (Field_empty "chatRoomAnnouncement.contents") | Some _x2836 -> _x2836
  method set_contents _x2836 = _contents <- Some _x2836
  method unset_contents = _contents <- None
  method reset_contents = _contents <- None

  val mutable _creatorMid : string option = None
  method get_creatorMid = _creatorMid
  method grab_creatorMid = match _creatorMid with None->raise (Field_empty "chatRoomAnnouncement.creatorMid") | Some _x2837 -> _x2837
  method set_creatorMid _x2837 = _creatorMid <- Some _x2837
  method unset_creatorMid = _creatorMid <- None
  method reset_creatorMid = _creatorMid <- None

  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "chatRoomAnnouncement.createdTime") | Some _x2838 -> _x2838
  method set_createdTime _x2838 = _createdTime <- Some _x2838
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  method copy =
      let _new = Oo.copy self in
      if _contents <> None then
        _new#set_contents self#grab_contents#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChatRoomAnnouncement";
    (match _announcementSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("announcementSeq",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,2);
      oprot#writeI32(ChatRoomAnnouncementType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _contents with None -> () | Some _v -> 
      oprot#writeFieldBegin("contents",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _creatorMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("creatorMid",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,5);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_chatRoomAnnouncement (iprot : Protocol.t) =
  let _str2841 = new chatRoomAnnouncement in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2842,_id2843) = iprot#readFieldBegin in
        if _t2842 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2843 with 
          | 1 -> (if _t2842 = Protocol.T_I64 then
              _str2841#set_announcementSeq iprot#readI64
            else
              iprot#skip _t2842)
          | 2 -> (if _t2842 = Protocol.T_I32 then
              _str2841#set_type (ChatRoomAnnouncementType.of_i iprot#readI32)
            else
              iprot#skip _t2842)
          | 3 -> (if _t2842 = Protocol.T_STRUCT then
              _str2841#set_contents (read_chatRoomAnnouncementContents iprot)
            else
              iprot#skip _t2842)
          | 4 -> (if _t2842 = Protocol.T_STRING then
              _str2841#set_creatorMid iprot#readString
            else
              iprot#skip _t2842)
          | 5 -> (if _t2842 = Protocol.T_I64 then
              _str2841#set_createdTime iprot#readI64
            else
              iprot#skip _t2842)
          | _ -> iprot#skip _t2842);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2841

class errorExtraInfo =
object (self)
  val mutable _preconditionFailedExtraInfo : PreconditionFailedExtraInfo.t option = None
  method get_preconditionFailedExtraInfo = _preconditionFailedExtraInfo
  method grab_preconditionFailedExtraInfo = match _preconditionFailedExtraInfo with None->raise (Field_empty "errorExtraInfo.preconditionFailedExtraInfo") | Some _x2845 -> _x2845
  method set_preconditionFailedExtraInfo _x2845 = _preconditionFailedExtraInfo <- Some _x2845
  method unset_preconditionFailedExtraInfo = _preconditionFailedExtraInfo <- None
  method reset_preconditionFailedExtraInfo = _preconditionFailedExtraInfo <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ErrorExtraInfo";
    (match _preconditionFailedExtraInfo with None -> () | Some _v -> 
      oprot#writeFieldBegin("preconditionFailedExtraInfo",Protocol.T_I32,1);
      oprot#writeI32(PreconditionFailedExtraInfo.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_errorExtraInfo (iprot : Protocol.t) =
  let _str2848 = new errorExtraInfo in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2849,_id2850) = iprot#readFieldBegin in
        if _t2849 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2850 with 
          | 1 -> (if _t2849 = Protocol.T_I32 then
              _str2848#set_preconditionFailedExtraInfo (PreconditionFailedExtraInfo.of_i iprot#readI32)
            else
              iprot#skip _t2849)
          | _ -> iprot#skip _t2849);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2848

class syncRelations =
object (self)
  val mutable _syncAll : bool option = None
  method get_syncAll = _syncAll
  method grab_syncAll = match _syncAll with None->raise (Field_empty "syncRelations.syncAll") | Some _x2852 -> _x2852
  method set_syncAll _x2852 = _syncAll <- Some _x2852
  method unset_syncAll = _syncAll <- None
  method reset_syncAll = _syncAll <- None

  val mutable _syncParamContact : syncParamContact list option = None
  method get_syncParamContact = _syncParamContact
  method grab_syncParamContact = match _syncParamContact with None->raise (Field_empty "syncRelations.syncParamContact") | Some _x2853 -> _x2853
  method set_syncParamContact _x2853 = _syncParamContact <- Some _x2853
  method unset_syncParamContact = _syncParamContact <- None
  method reset_syncParamContact = _syncParamContact <- None

  val mutable _syncParamMid : syncParamMid list option = None
  method get_syncParamMid = _syncParamMid
  method grab_syncParamMid = match _syncParamMid with None->raise (Field_empty "syncRelations.syncParamMid") | Some _x2854 -> _x2854
  method set_syncParamMid _x2854 = _syncParamMid <- Some _x2854
  method unset_syncParamMid = _syncParamMid <- None
  method reset_syncParamMid = _syncParamMid <- None

  method copy =
      let _new = Oo.copy self in
      if _syncParamContact <> None then
        _new#set_syncParamContact (List.map (fun x -> x#copy) self#grab_syncParamContact);
      if _syncParamMid <> None then
        _new#set_syncParamMid (List.map (fun x -> x#copy) self#grab_syncParamMid);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SyncRelations";
    (match _syncAll with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncAll",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _syncParamContact with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncParamContact",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2857 ->         _iter2857#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _syncParamMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncParamMid",Protocol.T_LIST,3);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2858 ->         _iter2858#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_syncRelations (iprot : Protocol.t) =
  let _str2859 = new syncRelations in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2860,_id2861) = iprot#readFieldBegin in
        if _t2860 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2861 with 
          | 1 -> (if _t2860 = Protocol.T_BOOL then
              _str2859#set_syncAll iprot#readBool
            else
              iprot#skip _t2860)
          | 2 -> (if _t2860 = Protocol.T_LIST then
              _str2859#set_syncParamContact 
                (let (_etype2865,_size2862) = iprot#readListBegin in
                  let _con2866 = (Array.to_list (Array.init _size2862 (fun _ -> (read_syncParamContact iprot)))) in
                    iprot#readListEnd; _con2866)
            else
              iprot#skip _t2860)
          | 3 -> (if _t2860 = Protocol.T_LIST then
              _str2859#set_syncParamMid 
                (let (_etype2870,_size2867) = iprot#readListBegin in
                  let _con2871 = (Array.to_list (Array.init _size2867 (fun _ -> (read_syncParamMid iprot)))) in
                    iprot#readListEnd; _con2871)
            else
              iprot#skip _t2860)
          | _ -> iprot#skip _t2860);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2859

class syncScope =
object (self)
  val mutable _syncProfile : bool option = None
  method get_syncProfile = _syncProfile
  method grab_syncProfile = match _syncProfile with None->raise (Field_empty "syncScope.syncProfile") | Some _x2873 -> _x2873
  method set_syncProfile _x2873 = _syncProfile <- Some _x2873
  method unset_syncProfile = _syncProfile <- None
  method reset_syncProfile = _syncProfile <- None

  val mutable _syncSettings : bool option = None
  method get_syncSettings = _syncSettings
  method grab_syncSettings = match _syncSettings with None->raise (Field_empty "syncScope.syncSettings") | Some _x2874 -> _x2874
  method set_syncSettings _x2874 = _syncSettings <- Some _x2874
  method unset_syncSettings = _syncSettings <- None
  method reset_syncSettings = _syncSettings <- None

  val mutable _syncSticker : bool option = None
  method get_syncSticker = _syncSticker
  method grab_syncSticker = match _syncSticker with None->raise (Field_empty "syncScope.syncSticker") | Some _x2875 -> _x2875
  method set_syncSticker _x2875 = _syncSticker <- Some _x2875
  method unset_syncSticker = _syncSticker <- None
  method reset_syncSticker = _syncSticker <- None

  val mutable _syncThemeShop : bool option = None
  method get_syncThemeShop = _syncThemeShop
  method grab_syncThemeShop = match _syncThemeShop with None->raise (Field_empty "syncScope.syncThemeShop") | Some _x2876 -> _x2876
  method set_syncThemeShop _x2876 = _syncThemeShop <- Some _x2876
  method unset_syncThemeShop = _syncThemeShop <- None
  method reset_syncThemeShop = _syncThemeShop <- None

  val mutable _contact : syncRelations option = None
  method get_contact = _contact
  method grab_contact = match _contact with None->raise (Field_empty "syncScope.contact") | Some _x2877 -> _x2877
  method set_contact _x2877 = _contact <- Some _x2877
  method unset_contact = _contact <- None
  method reset_contact = _contact <- None

  val mutable _group : syncRelations option = None
  method get_group = _group
  method grab_group = match _group with None->raise (Field_empty "syncScope.group") | Some _x2878 -> _x2878
  method set_group _x2878 = _group <- Some _x2878
  method unset_group = _group <- None
  method reset_group = _group <- None

  val mutable _room : syncRelations option = None
  method get_room = _room
  method grab_room = match _room with None->raise (Field_empty "syncScope.room") | Some _x2879 -> _x2879
  method set_room _x2879 = _room <- Some _x2879
  method unset_room = _room <- None
  method reset_room = _room <- None

  val mutable _chat : syncRelations option = None
  method get_chat = _chat
  method grab_chat = match _chat with None->raise (Field_empty "syncScope.chat") | Some _x2880 -> _x2880
  method set_chat _x2880 = _chat <- Some _x2880
  method unset_chat = _chat <- None
  method reset_chat = _chat <- None

  method copy =
      let _new = Oo.copy self in
      if _contact <> None then
        _new#set_contact self#grab_contact#copy;
      if _group <> None then
        _new#set_group self#grab_group#copy;
      if _room <> None then
        _new#set_room self#grab_room#copy;
      if _chat <> None then
        _new#set_chat self#grab_chat#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SyncScope";
    (match _syncProfile with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncProfile",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _syncSettings with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncSettings",Protocol.T_BOOL,2);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _syncSticker with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncSticker",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _syncThemeShop with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncThemeShop",Protocol.T_BOOL,4);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _contact with None -> () | Some _v -> 
      oprot#writeFieldBegin("contact",Protocol.T_STRUCT,10);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _group with None -> () | Some _v -> 
      oprot#writeFieldBegin("group",Protocol.T_STRUCT,11);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _room with None -> () | Some _v -> 
      oprot#writeFieldBegin("room",Protocol.T_STRUCT,12);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _chat with None -> () | Some _v -> 
      oprot#writeFieldBegin("chat",Protocol.T_STRUCT,13);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_syncScope (iprot : Protocol.t) =
  let _str2883 = new syncScope in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2884,_id2885) = iprot#readFieldBegin in
        if _t2884 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2885 with 
          | 1 -> (if _t2884 = Protocol.T_BOOL then
              _str2883#set_syncProfile iprot#readBool
            else
              iprot#skip _t2884)
          | 2 -> (if _t2884 = Protocol.T_BOOL then
              _str2883#set_syncSettings iprot#readBool
            else
              iprot#skip _t2884)
          | 3 -> (if _t2884 = Protocol.T_BOOL then
              _str2883#set_syncSticker iprot#readBool
            else
              iprot#skip _t2884)
          | 4 -> (if _t2884 = Protocol.T_BOOL then
              _str2883#set_syncThemeShop iprot#readBool
            else
              iprot#skip _t2884)
          | 10 -> (if _t2884 = Protocol.T_STRUCT then
              _str2883#set_contact (read_syncRelations iprot)
            else
              iprot#skip _t2884)
          | 11 -> (if _t2884 = Protocol.T_STRUCT then
              _str2883#set_group (read_syncRelations iprot)
            else
              iprot#skip _t2884)
          | 12 -> (if _t2884 = Protocol.T_STRUCT then
              _str2883#set_room (read_syncRelations iprot)
            else
              iprot#skip _t2884)
          | 13 -> (if _t2884 = Protocol.T_STRUCT then
              _str2883#set_chat (read_syncRelations iprot)
            else
              iprot#skip _t2884)
          | _ -> iprot#skip _t2884);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2883

class joinSquareResponse =
object (self)
  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "joinSquareResponse.square") | Some _x2887 -> _x2887
  method set_square _x2887 = _square <- Some _x2887
  method unset_square = _square <- None
  method reset_square = _square <- None

  val mutable _squareAuthority : squareAuthority option = None
  method get_squareAuthority = _squareAuthority
  method grab_squareAuthority = match _squareAuthority with None->raise (Field_empty "joinSquareResponse.squareAuthority") | Some _x2888 -> _x2888
  method set_squareAuthority _x2888 = _squareAuthority <- Some _x2888
  method unset_squareAuthority = _squareAuthority <- None
  method reset_squareAuthority = _squareAuthority <- None

  val mutable _squareStatus : squareStatus option = None
  method get_squareStatus = _squareStatus
  method grab_squareStatus = match _squareStatus with None->raise (Field_empty "joinSquareResponse.squareStatus") | Some _x2889 -> _x2889
  method set_squareStatus _x2889 = _squareStatus <- Some _x2889
  method unset_squareStatus = _squareStatus <- None
  method reset_squareStatus = _squareStatus <- None

  val mutable _squareMember : squareMember option = None
  method get_squareMember = _squareMember
  method grab_squareMember = match _squareMember with None->raise (Field_empty "joinSquareResponse.squareMember") | Some _x2890 -> _x2890
  method set_squareMember _x2890 = _squareMember <- Some _x2890
  method unset_squareMember = _squareMember <- None
  method reset_squareMember = _squareMember <- None

  val mutable _squareFeatureSet : squareFeatureSet option = None
  method get_squareFeatureSet = _squareFeatureSet
  method grab_squareFeatureSet = match _squareFeatureSet with None->raise (Field_empty "joinSquareResponse.squareFeatureSet") | Some _x2891 -> _x2891
  method set_squareFeatureSet _x2891 = _squareFeatureSet <- Some _x2891
  method unset_squareFeatureSet = _squareFeatureSet <- None
  method reset_squareFeatureSet = _squareFeatureSet <- None

  val mutable _noteStatus : noteStatus option = None
  method get_noteStatus = _noteStatus
  method grab_noteStatus = match _noteStatus with None->raise (Field_empty "joinSquareResponse.noteStatus") | Some _x2892 -> _x2892
  method set_noteStatus _x2892 = _noteStatus <- Some _x2892
  method unset_noteStatus = _noteStatus <- None
  method reset_noteStatus = _noteStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _square <> None then
        _new#set_square self#grab_square#copy;
      if _squareAuthority <> None then
        _new#set_squareAuthority self#grab_squareAuthority#copy;
      if _squareStatus <> None then
        _new#set_squareStatus self#grab_squareStatus#copy;
      if _squareMember <> None then
        _new#set_squareMember self#grab_squareMember#copy;
      if _squareFeatureSet <> None then
        _new#set_squareFeatureSet self#grab_squareFeatureSet#copy;
      if _noteStatus <> None then
        _new#set_noteStatus self#grab_noteStatus#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "JoinSquareResponse";
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareAuthority with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareAuthority",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareStatus",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMember",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareFeatureSet with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareFeatureSet",Protocol.T_STRUCT,5);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _noteStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("noteStatus",Protocol.T_STRUCT,6);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_joinSquareResponse (iprot : Protocol.t) =
  let _str2895 = new joinSquareResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2896,_id2897) = iprot#readFieldBegin in
        if _t2896 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2897 with 
          | 1 -> (if _t2896 = Protocol.T_STRUCT then
              _str2895#set_square (read_square iprot)
            else
              iprot#skip _t2896)
          | 2 -> (if _t2896 = Protocol.T_STRUCT then
              _str2895#set_squareAuthority (read_squareAuthority iprot)
            else
              iprot#skip _t2896)
          | 3 -> (if _t2896 = Protocol.T_STRUCT then
              _str2895#set_squareStatus (read_squareStatus iprot)
            else
              iprot#skip _t2896)
          | 4 -> (if _t2896 = Protocol.T_STRUCT then
              _str2895#set_squareMember (read_squareMember iprot)
            else
              iprot#skip _t2896)
          | 5 -> (if _t2896 = Protocol.T_STRUCT then
              _str2895#set_squareFeatureSet (read_squareFeatureSet iprot)
            else
              iprot#skip _t2896)
          | 6 -> (if _t2896 = Protocol.T_STRUCT then
              _str2895#set_noteStatus (read_noteStatus iprot)
            else
              iprot#skip _t2896)
          | _ -> iprot#skip _t2896);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2895

class joinSquareRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "joinSquareRequest.squareMid") | Some _x2899 -> _x2899
  method set_squareMid _x2899 = _squareMid <- Some _x2899
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _member : squareMember option = None
  method get_member = _member
  method grab_member = match _member with None->raise (Field_empty "joinSquareRequest.member") | Some _x2900 -> _x2900
  method set_member _x2900 = _member <- Some _x2900
  method unset_member = _member <- None
  method reset_member = _member <- None

  method copy =
      let _new = Oo.copy self in
      if _member <> None then
        _new#set_member self#grab_member#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "JoinSquareRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _member with None -> () | Some _v -> 
      oprot#writeFieldBegin("member",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_joinSquareRequest (iprot : Protocol.t) =
  let _str2903 = new joinSquareRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2904,_id2905) = iprot#readFieldBegin in
        if _t2904 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2905 with 
          | 2 -> (if _t2904 = Protocol.T_STRING then
              _str2903#set_squareMid iprot#readString
            else
              iprot#skip _t2904)
          | 3 -> (if _t2904 = Protocol.T_STRUCT then
              _str2903#set_member (read_squareMember iprot)
            else
              iprot#skip _t2904)
          | _ -> iprot#skip _t2904);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2903

class joinSquareChatResponse =
object (self)
  val mutable _squareChat : squareChat option = None
  method get_squareChat = _squareChat
  method grab_squareChat = match _squareChat with None->raise (Field_empty "joinSquareChatResponse.squareChat") | Some _x2907 -> _x2907
  method set_squareChat _x2907 = _squareChat <- Some _x2907
  method unset_squareChat = _squareChat <- None
  method reset_squareChat = _squareChat <- None

  val mutable _squareChatStatus : squareChatStatus option = None
  method get_squareChatStatus = _squareChatStatus
  method grab_squareChatStatus = match _squareChatStatus with None->raise (Field_empty "joinSquareChatResponse.squareChatStatus") | Some _x2908 -> _x2908
  method set_squareChatStatus _x2908 = _squareChatStatus <- Some _x2908
  method unset_squareChatStatus = _squareChatStatus <- None
  method reset_squareChatStatus = _squareChatStatus <- None

  val mutable _squareChatMember : squareChatMember option = None
  method get_squareChatMember = _squareChatMember
  method grab_squareChatMember = match _squareChatMember with None->raise (Field_empty "joinSquareChatResponse.squareChatMember") | Some _x2909 -> _x2909
  method set_squareChatMember _x2909 = _squareChatMember <- Some _x2909
  method unset_squareChatMember = _squareChatMember <- None
  method reset_squareChatMember = _squareChatMember <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChat <> None then
        _new#set_squareChat self#grab_squareChat#copy;
      if _squareChatStatus <> None then
        _new#set_squareChatStatus self#grab_squareChatStatus#copy;
      if _squareChatMember <> None then
        _new#set_squareChatMember self#grab_squareChatMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "JoinSquareChatResponse";
    (match _squareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChat",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareChatStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatStatus",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareChatMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMember",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_joinSquareChatResponse (iprot : Protocol.t) =
  let _str2912 = new joinSquareChatResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2913,_id2914) = iprot#readFieldBegin in
        if _t2913 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2914 with 
          | 1 -> (if _t2913 = Protocol.T_STRUCT then
              _str2912#set_squareChat (read_squareChat iprot)
            else
              iprot#skip _t2913)
          | 2 -> (if _t2913 = Protocol.T_STRUCT then
              _str2912#set_squareChatStatus (read_squareChatStatus iprot)
            else
              iprot#skip _t2913)
          | 3 -> (if _t2913 = Protocol.T_STRUCT then
              _str2912#set_squareChatMember (read_squareChatMember iprot)
            else
              iprot#skip _t2913)
          | _ -> iprot#skip _t2913);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2912

class joinSquareChatRequest =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "joinSquareChatRequest.squareChatMid") | Some _x2916 -> _x2916
  method set_squareChatMid _x2916 = _squareChatMid <- Some _x2916
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "JoinSquareChatRequest";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_joinSquareChatRequest (iprot : Protocol.t) =
  let _str2919 = new joinSquareChatRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2920,_id2921) = iprot#readFieldBegin in
        if _t2920 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2921 with 
          | 1 -> (if _t2920 = Protocol.T_STRING then
              _str2919#set_squareChatMid iprot#readString
            else
              iprot#skip _t2920)
          | _ -> iprot#skip _t2920);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2919

class sendMessageResponse =
object (self)
  val mutable _createdSquareMessage : squareMessage option = None
  method get_createdSquareMessage = _createdSquareMessage
  method grab_createdSquareMessage = match _createdSquareMessage with None->raise (Field_empty "sendMessageResponse.createdSquareMessage") | Some _x2923 -> _x2923
  method set_createdSquareMessage _x2923 = _createdSquareMessage <- Some _x2923
  method unset_createdSquareMessage = _createdSquareMessage <- None
  method reset_createdSquareMessage = _createdSquareMessage <- None

  method copy =
      let _new = Oo.copy self in
      if _createdSquareMessage <> None then
        _new#set_createdSquareMessage self#grab_createdSquareMessage#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SendMessageResponse";
    (match _createdSquareMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdSquareMessage",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_sendMessageResponse (iprot : Protocol.t) =
  let _str2926 = new sendMessageResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2927,_id2928) = iprot#readFieldBegin in
        if _t2927 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2928 with 
          | 1 -> (if _t2927 = Protocol.T_STRUCT then
              _str2926#set_createdSquareMessage (read_squareMessage iprot)
            else
              iprot#skip _t2927)
          | _ -> iprot#skip _t2927);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2926

class sendMessageRequest =
object (self)
  val mutable _reqSeq : Int32.t option = None
  method get_reqSeq = _reqSeq
  method grab_reqSeq = match _reqSeq with None->raise (Field_empty "sendMessageRequest.reqSeq") | Some _x2930 -> _x2930
  method set_reqSeq _x2930 = _reqSeq <- Some _x2930
  method unset_reqSeq = _reqSeq <- None
  method reset_reqSeq = _reqSeq <- None

  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "sendMessageRequest.squareChatMid") | Some _x2931 -> _x2931
  method set_squareChatMid _x2931 = _squareChatMid <- Some _x2931
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareMessage : squareMessage option = None
  method get_squareMessage = _squareMessage
  method grab_squareMessage = match _squareMessage with None->raise (Field_empty "sendMessageRequest.squareMessage") | Some _x2932 -> _x2932
  method set_squareMessage _x2932 = _squareMessage <- Some _x2932
  method unset_squareMessage = _squareMessage <- None
  method reset_squareMessage = _squareMessage <- None

  method copy =
      let _new = Oo.copy self in
      if _squareMessage <> None then
        _new#set_squareMessage self#grab_squareMessage#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SendMessageRequest";
    (match _reqSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("reqSeq",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMessage",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_sendMessageRequest (iprot : Protocol.t) =
  let _str2935 = new sendMessageRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2936,_id2937) = iprot#readFieldBegin in
        if _t2936 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2937 with 
          | 1 -> (if _t2936 = Protocol.T_I32 then
              _str2935#set_reqSeq iprot#readI32
            else
              iprot#skip _t2936)
          | 2 -> (if _t2936 = Protocol.T_STRING then
              _str2935#set_squareChatMid iprot#readString
            else
              iprot#skip _t2936)
          | 3 -> (if _t2936 = Protocol.T_STRUCT then
              _str2935#set_squareMessage (read_squareMessage iprot)
            else
              iprot#skip _t2936)
          | _ -> iprot#skip _t2936);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2935

class markAsReadRequest =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "markAsReadRequest.squareChatMid") | Some _x2939 -> _x2939
  method set_squareChatMid _x2939 = _squareChatMid <- Some _x2939
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _messageId : string option = None
  method get_messageId = _messageId
  method grab_messageId = match _messageId with None->raise (Field_empty "markAsReadRequest.messageId") | Some _x2940 -> _x2940
  method set_messageId _x2940 = _messageId <- Some _x2940
  method unset_messageId = _messageId <- None
  method reset_messageId = _messageId <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "MarkAsReadRequest";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _messageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageId",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_markAsReadRequest (iprot : Protocol.t) =
  let _str2943 = new markAsReadRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2944,_id2945) = iprot#readFieldBegin in
        if _t2944 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2945 with 
          | 2 -> (if _t2944 = Protocol.T_STRING then
              _str2943#set_squareChatMid iprot#readString
            else
              iprot#skip _t2944)
          | 4 -> (if _t2944 = Protocol.T_STRING then
              _str2943#set_messageId iprot#readString
            else
              iprot#skip _t2944)
          | _ -> iprot#skip _t2944);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2943

class markAsReadResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "MarkAsReadResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_markAsReadResponse (iprot : Protocol.t) =
  let _str2949 = new markAsReadResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2950,_id2951) = iprot#readFieldBegin in
        if _t2950 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2951 with 
          | _ -> iprot#skip _t2950);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2949

class subscriptionState =
object (self)
  val mutable _subscriptionId : Int64.t option = None
  method get_subscriptionId = _subscriptionId
  method grab_subscriptionId = match _subscriptionId with None->raise (Field_empty "subscriptionState.subscriptionId") | Some _x2953 -> _x2953
  method set_subscriptionId _x2953 = _subscriptionId <- Some _x2953
  method unset_subscriptionId = _subscriptionId <- None
  method reset_subscriptionId = _subscriptionId <- None

  val mutable _ttlMillis : Int64.t option = None
  method get_ttlMillis = _ttlMillis
  method grab_ttlMillis = match _ttlMillis with None->raise (Field_empty "subscriptionState.ttlMillis") | Some _x2954 -> _x2954
  method set_ttlMillis _x2954 = _ttlMillis <- Some _x2954
  method unset_ttlMillis = _ttlMillis <- None
  method reset_ttlMillis = _ttlMillis <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SubscriptionState";
    (match _subscriptionId with None -> () | Some _v -> 
      oprot#writeFieldBegin("subscriptionId",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _ttlMillis with None -> () | Some _v -> 
      oprot#writeFieldBegin("ttlMillis",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_subscriptionState (iprot : Protocol.t) =
  let _str2957 = new subscriptionState in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2958,_id2959) = iprot#readFieldBegin in
        if _t2958 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2959 with 
          | 1 -> (if _t2958 = Protocol.T_I64 then
              _str2957#set_subscriptionId iprot#readI64
            else
              iprot#skip _t2958)
          | 2 -> (if _t2958 = Protocol.T_I64 then
              _str2957#set_ttlMillis iprot#readI64
            else
              iprot#skip _t2958)
          | _ -> iprot#skip _t2958);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2957

class approveSquareMembersResponse =
object (self)
  val mutable _approvedMembers : squareMember list option = None
  method get_approvedMembers = _approvedMembers
  method grab_approvedMembers = match _approvedMembers with None->raise (Field_empty "approveSquareMembersResponse.approvedMembers") | Some _x2961 -> _x2961
  method set_approvedMembers _x2961 = _approvedMembers <- Some _x2961
  method unset_approvedMembers = _approvedMembers <- None
  method reset_approvedMembers = _approvedMembers <- None

  val mutable _status : squareStatus option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "approveSquareMembersResponse.status") | Some _x2962 -> _x2962
  method set_status _x2962 = _status <- Some _x2962
  method unset_status = _status <- None
  method reset_status = _status <- None

  method copy =
      let _new = Oo.copy self in
      if _approvedMembers <> None then
        _new#set_approvedMembers (List.map (fun x -> x#copy) self#grab_approvedMembers);
      if _status <> None then
        _new#set_status self#grab_status#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ApproveSquareMembersResponse";
    (match _approvedMembers with None -> () | Some _v -> 
      oprot#writeFieldBegin("approvedMembers",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter2965 ->         _iter2965#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_approveSquareMembersResponse (iprot : Protocol.t) =
  let _str2966 = new approveSquareMembersResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2967,_id2968) = iprot#readFieldBegin in
        if _t2967 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2968 with 
          | 1 -> (if _t2967 = Protocol.T_LIST then
              _str2966#set_approvedMembers 
                (let (_etype2972,_size2969) = iprot#readListBegin in
                  let _con2973 = (Array.to_list (Array.init _size2969 (fun _ -> (read_squareMember iprot)))) in
                    iprot#readListEnd; _con2973)
            else
              iprot#skip _t2967)
          | 2 -> (if _t2967 = Protocol.T_STRUCT then
              _str2966#set_status (read_squareStatus iprot)
            else
              iprot#skip _t2967)
          | _ -> iprot#skip _t2967);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2966

class approveSquareMembersRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "approveSquareMembersRequest.squareMid") | Some _x2975 -> _x2975
  method set_squareMid _x2975 = _squareMid <- Some _x2975
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _requestedMemberMids : string list option = None
  method get_requestedMemberMids = _requestedMemberMids
  method grab_requestedMemberMids = match _requestedMemberMids with None->raise (Field_empty "approveSquareMembersRequest.requestedMemberMids") | Some _x2976 -> _x2976
  method set_requestedMemberMids _x2976 = _requestedMemberMids <- Some _x2976
  method unset_requestedMemberMids = _requestedMemberMids <- None
  method reset_requestedMemberMids = _requestedMemberMids <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ApproveSquareMembersRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _requestedMemberMids with None -> () | Some _v -> 
      oprot#writeFieldBegin("requestedMemberMids",Protocol.T_LIST,3);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter2979 ->         oprot#writeString(_iter2979);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_approveSquareMembersRequest (iprot : Protocol.t) =
  let _str2980 = new approveSquareMembersRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2981,_id2982) = iprot#readFieldBegin in
        if _t2981 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2982 with 
          | 2 -> (if _t2981 = Protocol.T_STRING then
              _str2980#set_squareMid iprot#readString
            else
              iprot#skip _t2981)
          | 3 -> (if _t2981 = Protocol.T_LIST then
              _str2980#set_requestedMemberMids 
                (let (_etype2986,_size2983) = iprot#readListBegin in
                  let _con2987 = (Array.to_list (Array.init _size2983 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con2987)
            else
              iprot#skip _t2981)
          | _ -> iprot#skip _t2981);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2980

class createSquareChatResponse =
object (self)
  val mutable _squareChat : squareChat option = None
  method get_squareChat = _squareChat
  method grab_squareChat = match _squareChat with None->raise (Field_empty "createSquareChatResponse.squareChat") | Some _x2989 -> _x2989
  method set_squareChat _x2989 = _squareChat <- Some _x2989
  method unset_squareChat = _squareChat <- None
  method reset_squareChat = _squareChat <- None

  val mutable _squareChatStatus : squareChatStatus option = None
  method get_squareChatStatus = _squareChatStatus
  method grab_squareChatStatus = match _squareChatStatus with None->raise (Field_empty "createSquareChatResponse.squareChatStatus") | Some _x2990 -> _x2990
  method set_squareChatStatus _x2990 = _squareChatStatus <- Some _x2990
  method unset_squareChatStatus = _squareChatStatus <- None
  method reset_squareChatStatus = _squareChatStatus <- None

  val mutable _squareChatMember : squareChatMember option = None
  method get_squareChatMember = _squareChatMember
  method grab_squareChatMember = match _squareChatMember with None->raise (Field_empty "createSquareChatResponse.squareChatMember") | Some _x2991 -> _x2991
  method set_squareChatMember _x2991 = _squareChatMember <- Some _x2991
  method unset_squareChatMember = _squareChatMember <- None
  method reset_squareChatMember = _squareChatMember <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChat <> None then
        _new#set_squareChat self#grab_squareChat#copy;
      if _squareChatStatus <> None then
        _new#set_squareChatStatus self#grab_squareChatStatus#copy;
      if _squareChatMember <> None then
        _new#set_squareChatMember self#grab_squareChatMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CreateSquareChatResponse";
    (match _squareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChat",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareChatStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatStatus",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareChatMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMember",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_createSquareChatResponse (iprot : Protocol.t) =
  let _str2994 = new createSquareChatResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t2995,_id2996) = iprot#readFieldBegin in
        if _t2995 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id2996 with 
          | 1 -> (if _t2995 = Protocol.T_STRUCT then
              _str2994#set_squareChat (read_squareChat iprot)
            else
              iprot#skip _t2995)
          | 2 -> (if _t2995 = Protocol.T_STRUCT then
              _str2994#set_squareChatStatus (read_squareChatStatus iprot)
            else
              iprot#skip _t2995)
          | 3 -> (if _t2995 = Protocol.T_STRUCT then
              _str2994#set_squareChatMember (read_squareChatMember iprot)
            else
              iprot#skip _t2995)
          | _ -> iprot#skip _t2995);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str2994

class createSquareChatRequest =
object (self)
  val mutable _reqSeq : Int32.t option = None
  method get_reqSeq = _reqSeq
  method grab_reqSeq = match _reqSeq with None->raise (Field_empty "createSquareChatRequest.reqSeq") | Some _x2998 -> _x2998
  method set_reqSeq _x2998 = _reqSeq <- Some _x2998
  method unset_reqSeq = _reqSeq <- None
  method reset_reqSeq = _reqSeq <- None

  val mutable _squareChat : squareChat option = None
  method get_squareChat = _squareChat
  method grab_squareChat = match _squareChat with None->raise (Field_empty "createSquareChatRequest.squareChat") | Some _x2999 -> _x2999
  method set_squareChat _x2999 = _squareChat <- Some _x2999
  method unset_squareChat = _squareChat <- None
  method reset_squareChat = _squareChat <- None

  val mutable _squareMemberMids : string list option = None
  method get_squareMemberMids = _squareMemberMids
  method grab_squareMemberMids = match _squareMemberMids with None->raise (Field_empty "createSquareChatRequest.squareMemberMids") | Some _x3000 -> _x3000
  method set_squareMemberMids _x3000 = _squareMemberMids <- Some _x3000
  method unset_squareMemberMids = _squareMemberMids <- None
  method reset_squareMemberMids = _squareMemberMids <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChat <> None then
        _new#set_squareChat self#grab_squareChat#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CreateSquareChatRequest";
    (match _reqSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("reqSeq",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _squareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChat",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareMemberMids with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMemberMids",Protocol.T_LIST,3);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter3003 ->         oprot#writeString(_iter3003);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_createSquareChatRequest (iprot : Protocol.t) =
  let _str3004 = new createSquareChatRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3005,_id3006) = iprot#readFieldBegin in
        if _t3005 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3006 with 
          | 1 -> (if _t3005 = Protocol.T_I32 then
              _str3004#set_reqSeq iprot#readI32
            else
              iprot#skip _t3005)
          | 2 -> (if _t3005 = Protocol.T_STRUCT then
              _str3004#set_squareChat (read_squareChat iprot)
            else
              iprot#skip _t3005)
          | 3 -> (if _t3005 = Protocol.T_LIST then
              _str3004#set_squareMemberMids 
                (let (_etype3010,_size3007) = iprot#readListBegin in
                  let _con3011 = (Array.to_list (Array.init _size3007 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con3011)
            else
              iprot#skip _t3005)
          | _ -> iprot#skip _t3005);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3004

class createSquareResponse =
object (self)
  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "createSquareResponse.square") | Some _x3013 -> _x3013
  method set_square _x3013 = _square <- Some _x3013
  method unset_square = _square <- None
  method reset_square = _square <- None

  val mutable _creator : squareMember option = None
  method get_creator = _creator
  method grab_creator = match _creator with None->raise (Field_empty "createSquareResponse.creator") | Some _x3014 -> _x3014
  method set_creator _x3014 = _creator <- Some _x3014
  method unset_creator = _creator <- None
  method reset_creator = _creator <- None

  val mutable _authority : squareAuthority option = None
  method get_authority = _authority
  method grab_authority = match _authority with None->raise (Field_empty "createSquareResponse.authority") | Some _x3015 -> _x3015
  method set_authority _x3015 = _authority <- Some _x3015
  method unset_authority = _authority <- None
  method reset_authority = _authority <- None

  val mutable _status : squareStatus option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "createSquareResponse.status") | Some _x3016 -> _x3016
  method set_status _x3016 = _status <- Some _x3016
  method unset_status = _status <- None
  method reset_status = _status <- None

  method copy =
      let _new = Oo.copy self in
      if _square <> None then
        _new#set_square self#grab_square#copy;
      if _creator <> None then
        _new#set_creator self#grab_creator#copy;
      if _authority <> None then
        _new#set_authority self#grab_authority#copy;
      if _status <> None then
        _new#set_status self#grab_status#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CreateSquareResponse";
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _creator with None -> () | Some _v -> 
      oprot#writeFieldBegin("creator",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _authority with None -> () | Some _v -> 
      oprot#writeFieldBegin("authority",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_createSquareResponse (iprot : Protocol.t) =
  let _str3019 = new createSquareResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3020,_id3021) = iprot#readFieldBegin in
        if _t3020 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3021 with 
          | 1 -> (if _t3020 = Protocol.T_STRUCT then
              _str3019#set_square (read_square iprot)
            else
              iprot#skip _t3020)
          | 2 -> (if _t3020 = Protocol.T_STRUCT then
              _str3019#set_creator (read_squareMember iprot)
            else
              iprot#skip _t3020)
          | 3 -> (if _t3020 = Protocol.T_STRUCT then
              _str3019#set_authority (read_squareAuthority iprot)
            else
              iprot#skip _t3020)
          | 4 -> (if _t3020 = Protocol.T_STRUCT then
              _str3019#set_status (read_squareStatus iprot)
            else
              iprot#skip _t3020)
          | _ -> iprot#skip _t3020);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3019

class createSquareRequest =
object (self)
  val mutable _reqSeq : Int32.t option = None
  method get_reqSeq = _reqSeq
  method grab_reqSeq = match _reqSeq with None->raise (Field_empty "createSquareRequest.reqSeq") | Some _x3023 -> _x3023
  method set_reqSeq _x3023 = _reqSeq <- Some _x3023
  method unset_reqSeq = _reqSeq <- None
  method reset_reqSeq = _reqSeq <- None

  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "createSquareRequest.square") | Some _x3024 -> _x3024
  method set_square _x3024 = _square <- Some _x3024
  method unset_square = _square <- None
  method reset_square = _square <- None

  val mutable _creator : squareMember option = None
  method get_creator = _creator
  method grab_creator = match _creator with None->raise (Field_empty "createSquareRequest.creator") | Some _x3025 -> _x3025
  method set_creator _x3025 = _creator <- Some _x3025
  method unset_creator = _creator <- None
  method reset_creator = _creator <- None

  method copy =
      let _new = Oo.copy self in
      if _square <> None then
        _new#set_square self#grab_square#copy;
      if _creator <> None then
        _new#set_creator self#grab_creator#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CreateSquareRequest";
    (match _reqSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("reqSeq",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _creator with None -> () | Some _v -> 
      oprot#writeFieldBegin("creator",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_createSquareRequest (iprot : Protocol.t) =
  let _str3028 = new createSquareRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3029,_id3030) = iprot#readFieldBegin in
        if _t3029 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3030 with 
          | 1 -> (if _t3029 = Protocol.T_I32 then
              _str3028#set_reqSeq iprot#readI32
            else
              iprot#skip _t3029)
          | 2 -> (if _t3029 = Protocol.T_STRUCT then
              _str3028#set_square (read_square iprot)
            else
              iprot#skip _t3029)
          | 3 -> (if _t3029 = Protocol.T_STRUCT then
              _str3028#set_creator (read_squareMember iprot)
            else
              iprot#skip _t3029)
          | _ -> iprot#skip _t3029);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3028

class deleteSquareResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "DeleteSquareResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_deleteSquareResponse (iprot : Protocol.t) =
  let _str3034 = new deleteSquareResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3035,_id3036) = iprot#readFieldBegin in
        if _t3035 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3036 with 
          | _ -> iprot#skip _t3035);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3034

class deleteSquareRequest =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "deleteSquareRequest.mid") | Some _x3038 -> _x3038
  method set_mid _x3038 = _mid <- Some _x3038
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "deleteSquareRequest.revision") | Some _x3039 -> _x3039
  method set_revision _x3039 = _revision <- Some _x3039
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "DeleteSquareRequest";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_deleteSquareRequest (iprot : Protocol.t) =
  let _str3042 = new deleteSquareRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3043,_id3044) = iprot#readFieldBegin in
        if _t3043 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3044 with 
          | 2 -> (if _t3043 = Protocol.T_STRING then
              _str3042#set_mid iprot#readString
            else
              iprot#skip _t3043)
          | 3 -> (if _t3043 = Protocol.T_I64 then
              _str3042#set_revision iprot#readI64
            else
              iprot#skip _t3043)
          | _ -> iprot#skip _t3043);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3042

class destroyMessageResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "DestroyMessageResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_destroyMessageResponse (iprot : Protocol.t) =
  let _str3048 = new destroyMessageResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3049,_id3050) = iprot#readFieldBegin in
        if _t3049 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3050 with 
          | _ -> iprot#skip _t3049);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3048

class destroyMessageRequest =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "destroyMessageRequest.squareChatMid") | Some _x3052 -> _x3052
  method set_squareChatMid _x3052 = _squareChatMid <- Some _x3052
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _messageId : string option = None
  method get_messageId = _messageId
  method grab_messageId = match _messageId with None->raise (Field_empty "destroyMessageRequest.messageId") | Some _x3053 -> _x3053
  method set_messageId _x3053 = _messageId <- Some _x3053
  method unset_messageId = _messageId <- None
  method reset_messageId = _messageId <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "DestroyMessageRequest";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _messageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageId",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_destroyMessageRequest (iprot : Protocol.t) =
  let _str3056 = new destroyMessageRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3057,_id3058) = iprot#readFieldBegin in
        if _t3057 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3058 with 
          | 2 -> (if _t3057 = Protocol.T_STRING then
              _str3056#set_squareChatMid iprot#readString
            else
              iprot#skip _t3057)
          | 4 -> (if _t3057 = Protocol.T_STRING then
              _str3056#set_messageId iprot#readString
            else
              iprot#skip _t3057)
          | _ -> iprot#skip _t3057);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3056

class getSquareChatMembersRequest =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "getSquareChatMembersRequest.squareChatMid") | Some _x3060 -> _x3060
  method set_squareChatMid _x3060 = _squareChatMid <- Some _x3060
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getSquareChatMembersRequest.continuationToken") | Some _x3061 -> _x3061
  method set_continuationToken _x3061 = _continuationToken <- Some _x3061
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _limit : Int32.t option = None
  method get_limit = _limit
  method grab_limit = match _limit with None->raise (Field_empty "getSquareChatMembersRequest.limit") | Some _x3062 -> _x3062
  method set_limit _x3062 = _limit <- Some _x3062
  method unset_limit = _limit <- None
  method reset_limit = _limit <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareChatMembersRequest";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _limit with None -> () | Some _v -> 
      oprot#writeFieldBegin("limit",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareChatMembersRequest (iprot : Protocol.t) =
  let _str3065 = new getSquareChatMembersRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3066,_id3067) = iprot#readFieldBegin in
        if _t3066 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3067 with 
          | 1 -> (if _t3066 = Protocol.T_STRING then
              _str3065#set_squareChatMid iprot#readString
            else
              iprot#skip _t3066)
          | 2 -> (if _t3066 = Protocol.T_STRING then
              _str3065#set_continuationToken iprot#readString
            else
              iprot#skip _t3066)
          | 3 -> (if _t3066 = Protocol.T_I32 then
              _str3065#set_limit iprot#readI32
            else
              iprot#skip _t3066)
          | _ -> iprot#skip _t3066);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3065

class getSquareChatMembersResponse =
object (self)
  val mutable _squareChatMembers : squareMember option = None
  method get_squareChatMembers = _squareChatMembers
  method grab_squareChatMembers = match _squareChatMembers with None->raise (Field_empty "getSquareChatMembersResponse.squareChatMembers") | Some _x3069 -> _x3069
  method set_squareChatMembers _x3069 = _squareChatMembers <- Some _x3069
  method unset_squareChatMembers = _squareChatMembers <- None
  method reset_squareChatMembers = _squareChatMembers <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getSquareChatMembersResponse.continuationToken") | Some _x3070 -> _x3070
  method set_continuationToken _x3070 = _continuationToken <- Some _x3070
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChatMembers <> None then
        _new#set_squareChatMembers self#grab_squareChatMembers#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareChatMembersResponse";
    (match _squareChatMembers with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMembers",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareChatMembersResponse (iprot : Protocol.t) =
  let _str3073 = new getSquareChatMembersResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3074,_id3075) = iprot#readFieldBegin in
        if _t3074 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3075 with 
          | 1 -> (if _t3074 = Protocol.T_STRUCT then
              _str3073#set_squareChatMembers (read_squareMember iprot)
            else
              iprot#skip _t3074)
          | 2 -> (if _t3074 = Protocol.T_STRING then
              _str3073#set_continuationToken iprot#readString
            else
              iprot#skip _t3074)
          | _ -> iprot#skip _t3074);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3073

class getSquareChatStatusRequest =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "getSquareChatStatusRequest.squareChatMid") | Some _x3077 -> _x3077
  method set_squareChatMid _x3077 = _squareChatMid <- Some _x3077
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareChatStatusRequest";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareChatStatusRequest (iprot : Protocol.t) =
  let _str3080 = new getSquareChatStatusRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3081,_id3082) = iprot#readFieldBegin in
        if _t3081 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3082 with 
          | 2 -> (if _t3081 = Protocol.T_STRING then
              _str3080#set_squareChatMid iprot#readString
            else
              iprot#skip _t3081)
          | _ -> iprot#skip _t3081);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3080

class getSquareChatStatusResponse =
object (self)
  val mutable _chatStatus : squareChatStatus option = None
  method get_chatStatus = _chatStatus
  method grab_chatStatus = match _chatStatus with None->raise (Field_empty "getSquareChatStatusResponse.chatStatus") | Some _x3084 -> _x3084
  method set_chatStatus _x3084 = _chatStatus <- Some _x3084
  method unset_chatStatus = _chatStatus <- None
  method reset_chatStatus = _chatStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _chatStatus <> None then
        _new#set_chatStatus self#grab_chatStatus#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareChatStatusResponse";
    (match _chatStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("chatStatus",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareChatStatusResponse (iprot : Protocol.t) =
  let _str3087 = new getSquareChatStatusResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3088,_id3089) = iprot#readFieldBegin in
        if _t3088 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3089 with 
          | 1 -> (if _t3088 = Protocol.T_STRUCT then
              _str3087#set_chatStatus (read_squareChatStatus iprot)
            else
              iprot#skip _t3088)
          | _ -> iprot#skip _t3088);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3087

class getSquareChatRequest =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "getSquareChatRequest.squareChatMid") | Some _x3091 -> _x3091
  method set_squareChatMid _x3091 = _squareChatMid <- Some _x3091
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareChatRequest";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareChatRequest (iprot : Protocol.t) =
  let _str3094 = new getSquareChatRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3095,_id3096) = iprot#readFieldBegin in
        if _t3095 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3096 with 
          | 1 -> (if _t3095 = Protocol.T_STRING then
              _str3094#set_squareChatMid iprot#readString
            else
              iprot#skip _t3095)
          | _ -> iprot#skip _t3095);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3094

class getSquareChatResponse =
object (self)
  val mutable _squareChat : squareChat option = None
  method get_squareChat = _squareChat
  method grab_squareChat = match _squareChat with None->raise (Field_empty "getSquareChatResponse.squareChat") | Some _x3098 -> _x3098
  method set_squareChat _x3098 = _squareChat <- Some _x3098
  method unset_squareChat = _squareChat <- None
  method reset_squareChat = _squareChat <- None

  val mutable _squareChatMember : squareChatMember option = None
  method get_squareChatMember = _squareChatMember
  method grab_squareChatMember = match _squareChatMember with None->raise (Field_empty "getSquareChatResponse.squareChatMember") | Some _x3099 -> _x3099
  method set_squareChatMember _x3099 = _squareChatMember <- Some _x3099
  method unset_squareChatMember = _squareChatMember <- None
  method reset_squareChatMember = _squareChatMember <- None

  val mutable _squareChatStatus : squareChatStatus option = None
  method get_squareChatStatus = _squareChatStatus
  method grab_squareChatStatus = match _squareChatStatus with None->raise (Field_empty "getSquareChatResponse.squareChatStatus") | Some _x3100 -> _x3100
  method set_squareChatStatus _x3100 = _squareChatStatus <- Some _x3100
  method unset_squareChatStatus = _squareChatStatus <- None
  method reset_squareChatStatus = _squareChatStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChat <> None then
        _new#set_squareChat self#grab_squareChat#copy;
      if _squareChatMember <> None then
        _new#set_squareChatMember self#grab_squareChatMember#copy;
      if _squareChatStatus <> None then
        _new#set_squareChatStatus self#grab_squareChatStatus#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareChatResponse";
    (match _squareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChat",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareChatMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMember",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareChatStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatStatus",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareChatResponse (iprot : Protocol.t) =
  let _str3103 = new getSquareChatResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3104,_id3105) = iprot#readFieldBegin in
        if _t3104 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3105 with 
          | 1 -> (if _t3104 = Protocol.T_STRUCT then
              _str3103#set_squareChat (read_squareChat iprot)
            else
              iprot#skip _t3104)
          | 2 -> (if _t3104 = Protocol.T_STRUCT then
              _str3103#set_squareChatMember (read_squareChatMember iprot)
            else
              iprot#skip _t3104)
          | 3 -> (if _t3104 = Protocol.T_STRUCT then
              _str3103#set_squareChatStatus (read_squareChatStatus iprot)
            else
              iprot#skip _t3104)
          | _ -> iprot#skip _t3104);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3103

class getSquareAuthorityRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "getSquareAuthorityRequest.squareMid") | Some _x3107 -> _x3107
  method set_squareMid _x3107 = _squareMid <- Some _x3107
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareAuthorityRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareAuthorityRequest (iprot : Protocol.t) =
  let _str3110 = new getSquareAuthorityRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3111,_id3112) = iprot#readFieldBegin in
        if _t3111 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3112 with 
          | 1 -> (if _t3111 = Protocol.T_STRING then
              _str3110#set_squareMid iprot#readString
            else
              iprot#skip _t3111)
          | _ -> iprot#skip _t3111);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3110

class getSquareAuthorityResponse =
object (self)
  val mutable _authority : squareAuthority option = None
  method get_authority = _authority
  method grab_authority = match _authority with None->raise (Field_empty "getSquareAuthorityResponse.authority") | Some _x3114 -> _x3114
  method set_authority _x3114 = _authority <- Some _x3114
  method unset_authority = _authority <- None
  method reset_authority = _authority <- None

  method copy =
      let _new = Oo.copy self in
      if _authority <> None then
        _new#set_authority self#grab_authority#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareAuthorityResponse";
    (match _authority with None -> () | Some _v -> 
      oprot#writeFieldBegin("authority",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareAuthorityResponse (iprot : Protocol.t) =
  let _str3117 = new getSquareAuthorityResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3118,_id3119) = iprot#readFieldBegin in
        if _t3118 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3119 with 
          | 1 -> (if _t3118 = Protocol.T_STRUCT then
              _str3117#set_authority (read_squareAuthority iprot)
            else
              iprot#skip _t3118)
          | _ -> iprot#skip _t3118);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3117

class getJoinedSquaresRequest =
object (self)
  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getJoinedSquaresRequest.continuationToken") | Some _x3121 -> _x3121
  method set_continuationToken _x3121 = _continuationToken <- Some _x3121
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _limit : Int32.t option = None
  method get_limit = _limit
  method grab_limit = match _limit with None->raise (Field_empty "getJoinedSquaresRequest.limit") | Some _x3122 -> _x3122
  method set_limit _x3122 = _limit <- Some _x3122
  method unset_limit = _limit <- None
  method reset_limit = _limit <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetJoinedSquaresRequest";
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _limit with None -> () | Some _v -> 
      oprot#writeFieldBegin("limit",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getJoinedSquaresRequest (iprot : Protocol.t) =
  let _str3125 = new getJoinedSquaresRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3126,_id3127) = iprot#readFieldBegin in
        if _t3126 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3127 with 
          | 2 -> (if _t3126 = Protocol.T_STRING then
              _str3125#set_continuationToken iprot#readString
            else
              iprot#skip _t3126)
          | 3 -> (if _t3126 = Protocol.T_I32 then
              _str3125#set_limit iprot#readI32
            else
              iprot#skip _t3126)
          | _ -> iprot#skip _t3126);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3125

class getJoinedSquaresResponse =
object (self)
  val mutable _squares : square list option = None
  method get_squares = _squares
  method grab_squares = match _squares with None->raise (Field_empty "getJoinedSquaresResponse.squares") | Some _x3129 -> _x3129
  method set_squares _x3129 = _squares <- Some _x3129
  method unset_squares = _squares <- None
  method reset_squares = _squares <- None

  val mutable _members : (string,squareMember) Hashtbl.t option = None
  method get_members = _members
  method grab_members = match _members with None->raise (Field_empty "getJoinedSquaresResponse.members") | Some _x3130 -> _x3130
  method set_members _x3130 = _members <- Some _x3130
  method unset_members = _members <- None
  method reset_members = _members <- None

  val mutable _authorities : (string,squareAuthority) Hashtbl.t option = None
  method get_authorities = _authorities
  method grab_authorities = match _authorities with None->raise (Field_empty "getJoinedSquaresResponse.authorities") | Some _x3131 -> _x3131
  method set_authorities _x3131 = _authorities <- Some _x3131
  method unset_authorities = _authorities <- None
  method reset_authorities = _authorities <- None

  val mutable _statuses : (string,squareStatus) Hashtbl.t option = None
  method get_statuses = _statuses
  method grab_statuses = match _statuses with None->raise (Field_empty "getJoinedSquaresResponse.statuses") | Some _x3132 -> _x3132
  method set_statuses _x3132 = _statuses <- Some _x3132
  method unset_statuses = _statuses <- None
  method reset_statuses = _statuses <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getJoinedSquaresResponse.continuationToken") | Some _x3133 -> _x3133
  method set_continuationToken _x3133 = _continuationToken <- Some _x3133
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _noteStatuses : (string,noteStatus) Hashtbl.t option = None
  method get_noteStatuses = _noteStatuses
  method grab_noteStatuses = match _noteStatuses with None->raise (Field_empty "getJoinedSquaresResponse.noteStatuses") | Some _x3134 -> _x3134
  method set_noteStatuses _x3134 = _noteStatuses <- Some _x3134
  method unset_noteStatuses = _noteStatuses <- None
  method reset_noteStatuses = _noteStatuses <- None

  method copy =
      let _new = Oo.copy self in
      if _squares <> None then
        _new#set_squares (List.map (fun x -> x#copy) self#grab_squares);
      if _members <> None then
        _new#set_members ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_members);
      if _authorities <> None then
        _new#set_authorities ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_authorities);
      if _statuses <> None then
        _new#set_statuses ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_statuses);
      if _noteStatuses <> None then
        _new#set_noteStatuses ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_noteStatuses);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetJoinedSquaresResponse";
    (match _squares with None -> () | Some _v -> 
      oprot#writeFieldBegin("squares",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter3137 ->         _iter3137#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _members with None -> () | Some _v -> 
      oprot#writeFieldBegin("members",Protocol.T_MAP,2);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter3138 -> fun _viter3139 -> 
        oprot#writeString(_kiter3138);
        _viter3139#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _authorities with None -> () | Some _v -> 
      oprot#writeFieldBegin("authorities",Protocol.T_MAP,3);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter3140 -> fun _viter3141 -> 
        oprot#writeString(_kiter3140);
        _viter3141#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _statuses with None -> () | Some _v -> 
      oprot#writeFieldBegin("statuses",Protocol.T_MAP,4);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter3142 -> fun _viter3143 -> 
        oprot#writeString(_kiter3142);
        _viter3143#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _noteStatuses with None -> () | Some _v -> 
      oprot#writeFieldBegin("noteStatuses",Protocol.T_MAP,6);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter3144 -> fun _viter3145 -> 
        oprot#writeString(_kiter3144);
        _viter3145#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getJoinedSquaresResponse (iprot : Protocol.t) =
  let _str3146 = new getJoinedSquaresResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3147,_id3148) = iprot#readFieldBegin in
        if _t3147 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3148 with 
          | 1 -> (if _t3147 = Protocol.T_LIST then
              _str3146#set_squares 
                (let (_etype3152,_size3149) = iprot#readListBegin in
                  let _con3153 = (Array.to_list (Array.init _size3149 (fun _ -> (read_square iprot)))) in
                    iprot#readListEnd; _con3153)
            else
              iprot#skip _t3147)
          | 2 -> (if _t3147 = Protocol.T_MAP then
              _str3146#set_members 
                (let (_ktype3155,_vtype3156,_size3154) = iprot#readMapBegin in
                let _con3158 = Hashtbl.create _size3154 in
                  for i = 1 to _size3154 do
                    let _k = iprot#readString in
                    let _v = (read_squareMember iprot) in
                      Hashtbl.add _con3158 _k _v
                  done; iprot#readMapEnd; _con3158)
            else
              iprot#skip _t3147)
          | 3 -> (if _t3147 = Protocol.T_MAP then
              _str3146#set_authorities 
                (let (_ktype3160,_vtype3161,_size3159) = iprot#readMapBegin in
                let _con3163 = Hashtbl.create _size3159 in
                  for i = 1 to _size3159 do
                    let _k = iprot#readString in
                    let _v = (read_squareAuthority iprot) in
                      Hashtbl.add _con3163 _k _v
                  done; iprot#readMapEnd; _con3163)
            else
              iprot#skip _t3147)
          | 4 -> (if _t3147 = Protocol.T_MAP then
              _str3146#set_statuses 
                (let (_ktype3165,_vtype3166,_size3164) = iprot#readMapBegin in
                let _con3168 = Hashtbl.create _size3164 in
                  for i = 1 to _size3164 do
                    let _k = iprot#readString in
                    let _v = (read_squareStatus iprot) in
                      Hashtbl.add _con3168 _k _v
                  done; iprot#readMapEnd; _con3168)
            else
              iprot#skip _t3147)
          | 5 -> (if _t3147 = Protocol.T_STRING then
              _str3146#set_continuationToken iprot#readString
            else
              iprot#skip _t3147)
          | 6 -> (if _t3147 = Protocol.T_MAP then
              _str3146#set_noteStatuses 
                (let (_ktype3170,_vtype3171,_size3169) = iprot#readMapBegin in
                let _con3173 = Hashtbl.create _size3169 in
                  for i = 1 to _size3169 do
                    let _k = iprot#readString in
                    let _v = (read_noteStatus iprot) in
                      Hashtbl.add _con3173 _k _v
                  done; iprot#readMapEnd; _con3173)
            else
              iprot#skip _t3147)
          | _ -> iprot#skip _t3147);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3146

class getJoinableSquareChatsRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "getJoinableSquareChatsRequest.squareMid") | Some _x3175 -> _x3175
  method set_squareMid _x3175 = _squareMid <- Some _x3175
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getJoinableSquareChatsRequest.continuationToken") | Some _x3176 -> _x3176
  method set_continuationToken _x3176 = _continuationToken <- Some _x3176
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _limit : Int32.t option = None
  method get_limit = _limit
  method grab_limit = match _limit with None->raise (Field_empty "getJoinableSquareChatsRequest.limit") | Some _x3177 -> _x3177
  method set_limit _x3177 = _limit <- Some _x3177
  method unset_limit = _limit <- None
  method reset_limit = _limit <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetJoinableSquareChatsRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _limit with None -> () | Some _v -> 
      oprot#writeFieldBegin("limit",Protocol.T_I32,11);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getJoinableSquareChatsRequest (iprot : Protocol.t) =
  let _str3180 = new getJoinableSquareChatsRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3181,_id3182) = iprot#readFieldBegin in
        if _t3181 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3182 with 
          | 1 -> (if _t3181 = Protocol.T_STRING then
              _str3180#set_squareMid iprot#readString
            else
              iprot#skip _t3181)
          | 10 -> (if _t3181 = Protocol.T_STRING then
              _str3180#set_continuationToken iprot#readString
            else
              iprot#skip _t3181)
          | 11 -> (if _t3181 = Protocol.T_I32 then
              _str3180#set_limit iprot#readI32
            else
              iprot#skip _t3181)
          | _ -> iprot#skip _t3181);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3180

class getJoinableSquareChatsResponse =
object (self)
  val mutable _squareChats : squareChat list option = None
  method get_squareChats = _squareChats
  method grab_squareChats = match _squareChats with None->raise (Field_empty "getJoinableSquareChatsResponse.squareChats") | Some _x3184 -> _x3184
  method set_squareChats _x3184 = _squareChats <- Some _x3184
  method unset_squareChats = _squareChats <- None
  method reset_squareChats = _squareChats <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getJoinableSquareChatsResponse.continuationToken") | Some _x3185 -> _x3185
  method set_continuationToken _x3185 = _continuationToken <- Some _x3185
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _totalSquareChatCount : Int32.t option = None
  method get_totalSquareChatCount = _totalSquareChatCount
  method grab_totalSquareChatCount = match _totalSquareChatCount with None->raise (Field_empty "getJoinableSquareChatsResponse.totalSquareChatCount") | Some _x3186 -> _x3186
  method set_totalSquareChatCount _x3186 = _totalSquareChatCount <- Some _x3186
  method unset_totalSquareChatCount = _totalSquareChatCount <- None
  method reset_totalSquareChatCount = _totalSquareChatCount <- None

  val mutable _squareChatStatuses : (string,squareChatStatus) Hashtbl.t option = None
  method get_squareChatStatuses = _squareChatStatuses
  method grab_squareChatStatuses = match _squareChatStatuses with None->raise (Field_empty "getJoinableSquareChatsResponse.squareChatStatuses") | Some _x3187 -> _x3187
  method set_squareChatStatuses _x3187 = _squareChatStatuses <- Some _x3187
  method unset_squareChatStatuses = _squareChatStatuses <- None
  method reset_squareChatStatuses = _squareChatStatuses <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChats <> None then
        _new#set_squareChats (List.map (fun x -> x#copy) self#grab_squareChats);
      if _squareChatStatuses <> None then
        _new#set_squareChatStatuses ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_squareChatStatuses);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetJoinableSquareChatsResponse";
    (match _squareChats with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChats",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter3190 ->         _iter3190#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _totalSquareChatCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("totalSquareChatCount",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatStatuses with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatStatuses",Protocol.T_MAP,4);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter3191 -> fun _viter3192 -> 
        oprot#writeString(_kiter3191);
        _viter3192#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getJoinableSquareChatsResponse (iprot : Protocol.t) =
  let _str3193 = new getJoinableSquareChatsResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3194,_id3195) = iprot#readFieldBegin in
        if _t3194 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3195 with 
          | 1 -> (if _t3194 = Protocol.T_LIST then
              _str3193#set_squareChats 
                (let (_etype3199,_size3196) = iprot#readListBegin in
                  let _con3200 = (Array.to_list (Array.init _size3196 (fun _ -> (read_squareChat iprot)))) in
                    iprot#readListEnd; _con3200)
            else
              iprot#skip _t3194)
          | 2 -> (if _t3194 = Protocol.T_STRING then
              _str3193#set_continuationToken iprot#readString
            else
              iprot#skip _t3194)
          | 3 -> (if _t3194 = Protocol.T_I32 then
              _str3193#set_totalSquareChatCount iprot#readI32
            else
              iprot#skip _t3194)
          | 4 -> (if _t3194 = Protocol.T_MAP then
              _str3193#set_squareChatStatuses 
                (let (_ktype3202,_vtype3203,_size3201) = iprot#readMapBegin in
                let _con3205 = Hashtbl.create _size3201 in
                  for i = 1 to _size3201 do
                    let _k = iprot#readString in
                    let _v = (read_squareChatStatus iprot) in
                      Hashtbl.add _con3205 _k _v
                  done; iprot#readMapEnd; _con3205)
            else
              iprot#skip _t3194)
          | _ -> iprot#skip _t3194);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3193

class getInvitationTicketUrlRequest =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "getInvitationTicketUrlRequest.mid") | Some _x3207 -> _x3207
  method set_mid _x3207 = _mid <- Some _x3207
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetInvitationTicketUrlRequest";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getInvitationTicketUrlRequest (iprot : Protocol.t) =
  let _str3210 = new getInvitationTicketUrlRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3211,_id3212) = iprot#readFieldBegin in
        if _t3211 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3212 with 
          | 2 -> (if _t3211 = Protocol.T_STRING then
              _str3210#set_mid iprot#readString
            else
              iprot#skip _t3211)
          | _ -> iprot#skip _t3211);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3210

class getInvitationTicketUrlResponse =
object (self)
  val mutable _invitationURL : string option = None
  method get_invitationURL = _invitationURL
  method grab_invitationURL = match _invitationURL with None->raise (Field_empty "getInvitationTicketUrlResponse.invitationURL") | Some _x3214 -> _x3214
  method set_invitationURL _x3214 = _invitationURL <- Some _x3214
  method unset_invitationURL = _invitationURL <- None
  method reset_invitationURL = _invitationURL <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetInvitationTicketUrlResponse";
    (match _invitationURL with None -> () | Some _v -> 
      oprot#writeFieldBegin("invitationURL",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getInvitationTicketUrlResponse (iprot : Protocol.t) =
  let _str3217 = new getInvitationTicketUrlResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3218,_id3219) = iprot#readFieldBegin in
        if _t3218 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3219 with 
          | 1 -> (if _t3218 = Protocol.T_STRING then
              _str3217#set_invitationURL iprot#readString
            else
              iprot#skip _t3218)
          | _ -> iprot#skip _t3218);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3217

class leaveSquareRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "leaveSquareRequest.squareMid") | Some _x3221 -> _x3221
  method set_squareMid _x3221 = _squareMid <- Some _x3221
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "LeaveSquareRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_leaveSquareRequest (iprot : Protocol.t) =
  let _str3224 = new leaveSquareRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3225,_id3226) = iprot#readFieldBegin in
        if _t3225 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3226 with 
          | 2 -> (if _t3225 = Protocol.T_STRING then
              _str3224#set_squareMid iprot#readString
            else
              iprot#skip _t3225)
          | _ -> iprot#skip _t3225);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3224

class leaveSquareResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "LeaveSquareResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_leaveSquareResponse (iprot : Protocol.t) =
  let _str3230 = new leaveSquareResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3231,_id3232) = iprot#readFieldBegin in
        if _t3231 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3232 with 
          | _ -> iprot#skip _t3231);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3230

class leaveSquareChatRequest =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "leaveSquareChatRequest.squareChatMid") | Some _x3234 -> _x3234
  method set_squareChatMid _x3234 = _squareChatMid <- Some _x3234
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _sayGoodbye : bool option = None
  method get_sayGoodbye = _sayGoodbye
  method grab_sayGoodbye = match _sayGoodbye with None->raise (Field_empty "leaveSquareChatRequest.sayGoodbye") | Some _x3235 -> _x3235
  method set_sayGoodbye _x3235 = _sayGoodbye <- Some _x3235
  method unset_sayGoodbye = _sayGoodbye <- None
  method reset_sayGoodbye = _sayGoodbye <- None

  val mutable _squareChatMemberRevision : Int64.t option = None
  method get_squareChatMemberRevision = _squareChatMemberRevision
  method grab_squareChatMemberRevision = match _squareChatMemberRevision with None->raise (Field_empty "leaveSquareChatRequest.squareChatMemberRevision") | Some _x3236 -> _x3236
  method set_squareChatMemberRevision _x3236 = _squareChatMemberRevision <- Some _x3236
  method unset_squareChatMemberRevision = _squareChatMemberRevision <- None
  method reset_squareChatMemberRevision = _squareChatMemberRevision <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "LeaveSquareChatRequest";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _sayGoodbye with None -> () | Some _v -> 
      oprot#writeFieldBegin("sayGoodbye",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMemberRevision with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMemberRevision",Protocol.T_I64,4);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_leaveSquareChatRequest (iprot : Protocol.t) =
  let _str3239 = new leaveSquareChatRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3240,_id3241) = iprot#readFieldBegin in
        if _t3240 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3241 with 
          | 2 -> (if _t3240 = Protocol.T_STRING then
              _str3239#set_squareChatMid iprot#readString
            else
              iprot#skip _t3240)
          | 3 -> (if _t3240 = Protocol.T_BOOL then
              _str3239#set_sayGoodbye iprot#readBool
            else
              iprot#skip _t3240)
          | 4 -> (if _t3240 = Protocol.T_I64 then
              _str3239#set_squareChatMemberRevision iprot#readI64
            else
              iprot#skip _t3240)
          | _ -> iprot#skip _t3240);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3239

class leaveSquareChatResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "LeaveSquareChatResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_leaveSquareChatResponse (iprot : Protocol.t) =
  let _str3245 = new leaveSquareChatResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3246,_id3247) = iprot#readFieldBegin in
        if _t3246 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3247 with 
          | _ -> iprot#skip _t3246);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3245

class squareMemberSearchOption =
object (self)
  val mutable _membershipState : SquareMembershipState.t option = None
  method get_membershipState = _membershipState
  method grab_membershipState = match _membershipState with None->raise (Field_empty "squareMemberSearchOption.membershipState") | Some _x3249 -> _x3249
  method set_membershipState _x3249 = _membershipState <- Some _x3249
  method unset_membershipState = _membershipState <- None
  method reset_membershipState = _membershipState <- None

  val mutable _memberRoles : (SquareMemberRole.t,bool) Hashtbl.t option = None
  method get_memberRoles = _memberRoles
  method grab_memberRoles = match _memberRoles with None->raise (Field_empty "squareMemberSearchOption.memberRoles") | Some _x3250 -> _x3250
  method set_memberRoles _x3250 = _memberRoles <- Some _x3250
  method unset_memberRoles = _memberRoles <- None
  method reset_memberRoles = _memberRoles <- None

  val mutable _displayName : string option = None
  method get_displayName = _displayName
  method grab_displayName = match _displayName with None->raise (Field_empty "squareMemberSearchOption.displayName") | Some _x3251 -> _x3251
  method set_displayName _x3251 = _displayName <- Some _x3251
  method unset_displayName = _displayName <- None
  method reset_displayName = _displayName <- None

  val mutable _ableToReceiveMessage : BooleanState.t option = None
  method get_ableToReceiveMessage = _ableToReceiveMessage
  method grab_ableToReceiveMessage = match _ableToReceiveMessage with None->raise (Field_empty "squareMemberSearchOption.ableToReceiveMessage") | Some _x3252 -> _x3252
  method set_ableToReceiveMessage _x3252 = _ableToReceiveMessage <- Some _x3252
  method unset_ableToReceiveMessage = _ableToReceiveMessage <- None
  method reset_ableToReceiveMessage = _ableToReceiveMessage <- None

  val mutable _ableToReceiveFriendRequest : BooleanState.t option = None
  method get_ableToReceiveFriendRequest = _ableToReceiveFriendRequest
  method grab_ableToReceiveFriendRequest = match _ableToReceiveFriendRequest with None->raise (Field_empty "squareMemberSearchOption.ableToReceiveFriendRequest") | Some _x3253 -> _x3253
  method set_ableToReceiveFriendRequest _x3253 = _ableToReceiveFriendRequest <- Some _x3253
  method unset_ableToReceiveFriendRequest = _ableToReceiveFriendRequest <- None
  method reset_ableToReceiveFriendRequest = _ableToReceiveFriendRequest <- None

  val mutable _chatMidToExcludeMembers : string option = None
  method get_chatMidToExcludeMembers = _chatMidToExcludeMembers
  method grab_chatMidToExcludeMembers = match _chatMidToExcludeMembers with None->raise (Field_empty "squareMemberSearchOption.chatMidToExcludeMembers") | Some _x3254 -> _x3254
  method set_chatMidToExcludeMembers _x3254 = _chatMidToExcludeMembers <- Some _x3254
  method unset_chatMidToExcludeMembers = _chatMidToExcludeMembers <- None
  method reset_chatMidToExcludeMembers = _chatMidToExcludeMembers <- None

  val mutable _includingMe : bool option = None
  method get_includingMe = _includingMe
  method grab_includingMe = match _includingMe with None->raise (Field_empty "squareMemberSearchOption.includingMe") | Some _x3255 -> _x3255
  method set_includingMe _x3255 = _includingMe <- Some _x3255
  method unset_includingMe = _includingMe <- None
  method reset_includingMe = _includingMe <- None

  method copy =
      let _new = Oo.copy self in
      if _memberRoles <> None then
        _new#set_memberRoles (Hashtbl.copy self#grab_memberRoles);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareMemberSearchOption";
    (match _membershipState with None -> () | Some _v -> 
      oprot#writeFieldBegin("membershipState",Protocol.T_I32,1);
      oprot#writeI32(SquareMembershipState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _memberRoles with None -> () | Some _v -> 
      oprot#writeFieldBegin("memberRoles",Protocol.T_SET,2);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter3258 -> fun _ ->         oprot#writeI32(SquareMemberRole.to_i _iter3258);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _displayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("displayName",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _ableToReceiveMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("ableToReceiveMessage",Protocol.T_I32,4);
      oprot#writeI32(BooleanState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _ableToReceiveFriendRequest with None -> () | Some _v -> 
      oprot#writeFieldBegin("ableToReceiveFriendRequest",Protocol.T_I32,5);
      oprot#writeI32(BooleanState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _chatMidToExcludeMembers with None -> () | Some _v -> 
      oprot#writeFieldBegin("chatMidToExcludeMembers",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _includingMe with None -> () | Some _v -> 
      oprot#writeFieldBegin("includingMe",Protocol.T_BOOL,7);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareMemberSearchOption (iprot : Protocol.t) =
  let _str3259 = new squareMemberSearchOption in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3260,_id3261) = iprot#readFieldBegin in
        if _t3260 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3261 with 
          | 1 -> (if _t3260 = Protocol.T_I32 then
              _str3259#set_membershipState (SquareMembershipState.of_i iprot#readI32)
            else
              iprot#skip _t3260)
          | 2 -> (if _t3260 = Protocol.T_SET then
              _str3259#set_memberRoles 
                (let (_etype3265,_size3262) = iprot#readSetBegin in
                let _con3266 = Hashtbl.create _size3262 in
                  for i = 1 to _size3262 do
                    Hashtbl.add _con3266 (SquareMemberRole.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con3266)
            else
              iprot#skip _t3260)
          | 3 -> (if _t3260 = Protocol.T_STRING then
              _str3259#set_displayName iprot#readString
            else
              iprot#skip _t3260)
          | 4 -> (if _t3260 = Protocol.T_I32 then
              _str3259#set_ableToReceiveMessage (BooleanState.of_i iprot#readI32)
            else
              iprot#skip _t3260)
          | 5 -> (if _t3260 = Protocol.T_I32 then
              _str3259#set_ableToReceiveFriendRequest (BooleanState.of_i iprot#readI32)
            else
              iprot#skip _t3260)
          | 6 -> (if _t3260 = Protocol.T_STRING then
              _str3259#set_chatMidToExcludeMembers iprot#readString
            else
              iprot#skip _t3260)
          | 7 -> (if _t3260 = Protocol.T_BOOL then
              _str3259#set_includingMe iprot#readBool
            else
              iprot#skip _t3260)
          | _ -> iprot#skip _t3260);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3259

class searchSquareMembersRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "searchSquareMembersRequest.squareMid") | Some _x3268 -> _x3268
  method set_squareMid _x3268 = _squareMid <- Some _x3268
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _searchOption : squareMemberSearchOption option = None
  method get_searchOption = _searchOption
  method grab_searchOption = match _searchOption with None->raise (Field_empty "searchSquareMembersRequest.searchOption") | Some _x3269 -> _x3269
  method set_searchOption _x3269 = _searchOption <- Some _x3269
  method unset_searchOption = _searchOption <- None
  method reset_searchOption = _searchOption <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "searchSquareMembersRequest.continuationToken") | Some _x3270 -> _x3270
  method set_continuationToken _x3270 = _continuationToken <- Some _x3270
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _limit : Int32.t option = None
  method get_limit = _limit
  method grab_limit = match _limit with None->raise (Field_empty "searchSquareMembersRequest.limit") | Some _x3271 -> _x3271
  method set_limit _x3271 = _limit <- Some _x3271
  method unset_limit = _limit <- None
  method reset_limit = _limit <- None

  method copy =
      let _new = Oo.copy self in
      if _searchOption <> None then
        _new#set_searchOption self#grab_searchOption#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SearchSquareMembersRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _searchOption with None -> () | Some _v -> 
      oprot#writeFieldBegin("searchOption",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _limit with None -> () | Some _v -> 
      oprot#writeFieldBegin("limit",Protocol.T_I32,5);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_searchSquareMembersRequest (iprot : Protocol.t) =
  let _str3274 = new searchSquareMembersRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3275,_id3276) = iprot#readFieldBegin in
        if _t3275 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3276 with 
          | 2 -> (if _t3275 = Protocol.T_STRING then
              _str3274#set_squareMid iprot#readString
            else
              iprot#skip _t3275)
          | 3 -> (if _t3275 = Protocol.T_STRUCT then
              _str3274#set_searchOption (read_squareMemberSearchOption iprot)
            else
              iprot#skip _t3275)
          | 4 -> (if _t3275 = Protocol.T_STRING then
              _str3274#set_continuationToken iprot#readString
            else
              iprot#skip _t3275)
          | 5 -> (if _t3275 = Protocol.T_I32 then
              _str3274#set_limit iprot#readI32
            else
              iprot#skip _t3275)
          | _ -> iprot#skip _t3275);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3274

class searchSquareMembersResponse =
object (self)
  val mutable _members : squareMember list option = None
  method get_members = _members
  method grab_members = match _members with None->raise (Field_empty "searchSquareMembersResponse.members") | Some _x3278 -> _x3278
  method set_members _x3278 = _members <- Some _x3278
  method unset_members = _members <- None
  method reset_members = _members <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "searchSquareMembersResponse.revision") | Some _x3279 -> _x3279
  method set_revision _x3279 = _revision <- Some _x3279
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "searchSquareMembersResponse.continuationToken") | Some _x3280 -> _x3280
  method set_continuationToken _x3280 = _continuationToken <- Some _x3280
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _totalCount : Int32.t option = None
  method get_totalCount = _totalCount
  method grab_totalCount = match _totalCount with None->raise (Field_empty "searchSquareMembersResponse.totalCount") | Some _x3281 -> _x3281
  method set_totalCount _x3281 = _totalCount <- Some _x3281
  method unset_totalCount = _totalCount <- None
  method reset_totalCount = _totalCount <- None

  method copy =
      let _new = Oo.copy self in
      if _members <> None then
        _new#set_members (List.map (fun x -> x#copy) self#grab_members);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SearchSquareMembersResponse";
    (match _members with None -> () | Some _v -> 
      oprot#writeFieldBegin("members",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter3284 ->         _iter3284#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _totalCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("totalCount",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_searchSquareMembersResponse (iprot : Protocol.t) =
  let _str3285 = new searchSquareMembersResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3286,_id3287) = iprot#readFieldBegin in
        if _t3286 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3287 with 
          | 1 -> (if _t3286 = Protocol.T_LIST then
              _str3285#set_members 
                (let (_etype3291,_size3288) = iprot#readListBegin in
                  let _con3292 = (Array.to_list (Array.init _size3288 (fun _ -> (read_squareMember iprot)))) in
                    iprot#readListEnd; _con3292)
            else
              iprot#skip _t3286)
          | 2 -> (if _t3286 = Protocol.T_I64 then
              _str3285#set_revision iprot#readI64
            else
              iprot#skip _t3286)
          | 3 -> (if _t3286 = Protocol.T_STRING then
              _str3285#set_continuationToken iprot#readString
            else
              iprot#skip _t3286)
          | 4 -> (if _t3286 = Protocol.T_I32 then
              _str3285#set_totalCount iprot#readI32
            else
              iprot#skip _t3286)
          | _ -> iprot#skip _t3286);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3285

class findSquareByInvitationTicketRequest =
object (self)
  val mutable _invitationTicket : string option = None
  method get_invitationTicket = _invitationTicket
  method grab_invitationTicket = match _invitationTicket with None->raise (Field_empty "findSquareByInvitationTicketRequest.invitationTicket") | Some _x3294 -> _x3294
  method set_invitationTicket _x3294 = _invitationTicket <- Some _x3294
  method unset_invitationTicket = _invitationTicket <- None
  method reset_invitationTicket = _invitationTicket <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "FindSquareByInvitationTicketRequest";
    (match _invitationTicket with None -> () | Some _v -> 
      oprot#writeFieldBegin("invitationTicket",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_findSquareByInvitationTicketRequest (iprot : Protocol.t) =
  let _str3297 = new findSquareByInvitationTicketRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3298,_id3299) = iprot#readFieldBegin in
        if _t3298 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3299 with 
          | 2 -> (if _t3298 = Protocol.T_STRING then
              _str3297#set_invitationTicket iprot#readString
            else
              iprot#skip _t3298)
          | _ -> iprot#skip _t3298);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3297

class findSquareByInvitationTicketResponse =
object (self)
  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "findSquareByInvitationTicketResponse.square") | Some _x3301 -> _x3301
  method set_square _x3301 = _square <- Some _x3301
  method unset_square = _square <- None
  method reset_square = _square <- None

  val mutable _myMembership : squareMember option = None
  method get_myMembership = _myMembership
  method grab_myMembership = match _myMembership with None->raise (Field_empty "findSquareByInvitationTicketResponse.myMembership") | Some _x3302 -> _x3302
  method set_myMembership _x3302 = _myMembership <- Some _x3302
  method unset_myMembership = _myMembership <- None
  method reset_myMembership = _myMembership <- None

  val mutable _squareAuthority : squareAuthority option = None
  method get_squareAuthority = _squareAuthority
  method grab_squareAuthority = match _squareAuthority with None->raise (Field_empty "findSquareByInvitationTicketResponse.squareAuthority") | Some _x3303 -> _x3303
  method set_squareAuthority _x3303 = _squareAuthority <- Some _x3303
  method unset_squareAuthority = _squareAuthority <- None
  method reset_squareAuthority = _squareAuthority <- None

  val mutable _squareStatus : squareStatus option = None
  method get_squareStatus = _squareStatus
  method grab_squareStatus = match _squareStatus with None->raise (Field_empty "findSquareByInvitationTicketResponse.squareStatus") | Some _x3304 -> _x3304
  method set_squareStatus _x3304 = _squareStatus <- Some _x3304
  method unset_squareStatus = _squareStatus <- None
  method reset_squareStatus = _squareStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _square <> None then
        _new#set_square self#grab_square#copy;
      if _myMembership <> None then
        _new#set_myMembership self#grab_myMembership#copy;
      if _squareAuthority <> None then
        _new#set_squareAuthority self#grab_squareAuthority#copy;
      if _squareStatus <> None then
        _new#set_squareStatus self#grab_squareStatus#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "FindSquareByInvitationTicketResponse";
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _myMembership with None -> () | Some _v -> 
      oprot#writeFieldBegin("myMembership",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareAuthority with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareAuthority",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareStatus",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_findSquareByInvitationTicketResponse (iprot : Protocol.t) =
  let _str3307 = new findSquareByInvitationTicketResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3308,_id3309) = iprot#readFieldBegin in
        if _t3308 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3309 with 
          | 1 -> (if _t3308 = Protocol.T_STRUCT then
              _str3307#set_square (read_square iprot)
            else
              iprot#skip _t3308)
          | 2 -> (if _t3308 = Protocol.T_STRUCT then
              _str3307#set_myMembership (read_squareMember iprot)
            else
              iprot#skip _t3308)
          | 3 -> (if _t3308 = Protocol.T_STRUCT then
              _str3307#set_squareAuthority (read_squareAuthority iprot)
            else
              iprot#skip _t3308)
          | 4 -> (if _t3308 = Protocol.T_STRUCT then
              _str3307#set_squareStatus (read_squareStatus iprot)
            else
              iprot#skip _t3308)
          | _ -> iprot#skip _t3308);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3307

class squareEventReceiveMessage =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventReceiveMessage.squareChatMid") | Some _x3311 -> _x3311
  method set_squareChatMid _x3311 = _squareChatMid <- Some _x3311
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareMessage : squareMessage option = None
  method get_squareMessage = _squareMessage
  method grab_squareMessage = match _squareMessage with None->raise (Field_empty "squareEventReceiveMessage.squareMessage") | Some _x3312 -> _x3312
  method set_squareMessage _x3312 = _squareMessage <- Some _x3312
  method unset_squareMessage = _squareMessage <- None
  method reset_squareMessage = _squareMessage <- None

  method copy =
      let _new = Oo.copy self in
      if _squareMessage <> None then
        _new#set_squareMessage self#grab_squareMessage#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventReceiveMessage";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMessage",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventReceiveMessage (iprot : Protocol.t) =
  let _str3315 = new squareEventReceiveMessage in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3316,_id3317) = iprot#readFieldBegin in
        if _t3316 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3317 with 
          | 1 -> (if _t3316 = Protocol.T_STRING then
              _str3315#set_squareChatMid iprot#readString
            else
              iprot#skip _t3316)
          | 2 -> (if _t3316 = Protocol.T_STRUCT then
              _str3315#set_squareMessage (read_squareMessage iprot)
            else
              iprot#skip _t3316)
          | _ -> iprot#skip _t3316);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3315

class squareEventSendMessage =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventSendMessage.squareChatMid") | Some _x3319 -> _x3319
  method set_squareChatMid _x3319 = _squareChatMid <- Some _x3319
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareMessage : squareMessage option = None
  method get_squareMessage = _squareMessage
  method grab_squareMessage = match _squareMessage with None->raise (Field_empty "squareEventSendMessage.squareMessage") | Some _x3320 -> _x3320
  method set_squareMessage _x3320 = _squareMessage <- Some _x3320
  method unset_squareMessage = _squareMessage <- None
  method reset_squareMessage = _squareMessage <- None

  val mutable _reqSeq : Int32.t option = None
  method get_reqSeq = _reqSeq
  method grab_reqSeq = match _reqSeq with None->raise (Field_empty "squareEventSendMessage.reqSeq") | Some _x3321 -> _x3321
  method set_reqSeq _x3321 = _reqSeq <- Some _x3321
  method unset_reqSeq = _reqSeq <- None
  method reset_reqSeq = _reqSeq <- None

  method copy =
      let _new = Oo.copy self in
      if _squareMessage <> None then
        _new#set_squareMessage self#grab_squareMessage#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventSendMessage";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMessage",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _reqSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("reqSeq",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventSendMessage (iprot : Protocol.t) =
  let _str3324 = new squareEventSendMessage in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3325,_id3326) = iprot#readFieldBegin in
        if _t3325 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3326 with 
          | 1 -> (if _t3325 = Protocol.T_STRING then
              _str3324#set_squareChatMid iprot#readString
            else
              iprot#skip _t3325)
          | 2 -> (if _t3325 = Protocol.T_STRUCT then
              _str3324#set_squareMessage (read_squareMessage iprot)
            else
              iprot#skip _t3325)
          | 3 -> (if _t3325 = Protocol.T_I32 then
              _str3324#set_reqSeq iprot#readI32
            else
              iprot#skip _t3325)
          | _ -> iprot#skip _t3325);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3324

class squareEventNotifiedJoinSquareChat =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedJoinSquareChat.squareChatMid") | Some _x3328 -> _x3328
  method set_squareChatMid _x3328 = _squareChatMid <- Some _x3328
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _joinedMember : squareMember option = None
  method get_joinedMember = _joinedMember
  method grab_joinedMember = match _joinedMember with None->raise (Field_empty "squareEventNotifiedJoinSquareChat.joinedMember") | Some _x3329 -> _x3329
  method set_joinedMember _x3329 = _joinedMember <- Some _x3329
  method unset_joinedMember = _joinedMember <- None
  method reset_joinedMember = _joinedMember <- None

  method copy =
      let _new = Oo.copy self in
      if _joinedMember <> None then
        _new#set_joinedMember self#grab_joinedMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedJoinSquareChat";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _joinedMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("joinedMember",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedJoinSquareChat (iprot : Protocol.t) =
  let _str3332 = new squareEventNotifiedJoinSquareChat in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3333,_id3334) = iprot#readFieldBegin in
        if _t3333 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3334 with 
          | 1 -> (if _t3333 = Protocol.T_STRING then
              _str3332#set_squareChatMid iprot#readString
            else
              iprot#skip _t3333)
          | 2 -> (if _t3333 = Protocol.T_STRUCT then
              _str3332#set_joinedMember (read_squareMember iprot)
            else
              iprot#skip _t3333)
          | _ -> iprot#skip _t3333);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3332

class squareEventNotifiedInviteIntoSquareChat =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedInviteIntoSquareChat.squareChatMid") | Some _x3336 -> _x3336
  method set_squareChatMid _x3336 = _squareChatMid <- Some _x3336
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _invitees : squareMember list option = None
  method get_invitees = _invitees
  method grab_invitees = match _invitees with None->raise (Field_empty "squareEventNotifiedInviteIntoSquareChat.invitees") | Some _x3337 -> _x3337
  method set_invitees _x3337 = _invitees <- Some _x3337
  method unset_invitees = _invitees <- None
  method reset_invitees = _invitees <- None

  val mutable _invitor : squareMember option = None
  method get_invitor = _invitor
  method grab_invitor = match _invitor with None->raise (Field_empty "squareEventNotifiedInviteIntoSquareChat.invitor") | Some _x3338 -> _x3338
  method set_invitor _x3338 = _invitor <- Some _x3338
  method unset_invitor = _invitor <- None
  method reset_invitor = _invitor <- None

  val mutable _invitorRelation : squareMemberRelation option = None
  method get_invitorRelation = _invitorRelation
  method grab_invitorRelation = match _invitorRelation with None->raise (Field_empty "squareEventNotifiedInviteIntoSquareChat.invitorRelation") | Some _x3339 -> _x3339
  method set_invitorRelation _x3339 = _invitorRelation <- Some _x3339
  method unset_invitorRelation = _invitorRelation <- None
  method reset_invitorRelation = _invitorRelation <- None

  method copy =
      let _new = Oo.copy self in
      if _invitees <> None then
        _new#set_invitees (List.map (fun x -> x#copy) self#grab_invitees);
      if _invitor <> None then
        _new#set_invitor self#grab_invitor#copy;
      if _invitorRelation <> None then
        _new#set_invitorRelation self#grab_invitorRelation#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedInviteIntoSquareChat";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _invitees with None -> () | Some _v -> 
      oprot#writeFieldBegin("invitees",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter3342 ->         _iter3342#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _invitor with None -> () | Some _v -> 
      oprot#writeFieldBegin("invitor",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _invitorRelation with None -> () | Some _v -> 
      oprot#writeFieldBegin("invitorRelation",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedInviteIntoSquareChat (iprot : Protocol.t) =
  let _str3343 = new squareEventNotifiedInviteIntoSquareChat in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3344,_id3345) = iprot#readFieldBegin in
        if _t3344 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3345 with 
          | 1 -> (if _t3344 = Protocol.T_STRING then
              _str3343#set_squareChatMid iprot#readString
            else
              iprot#skip _t3344)
          | 2 -> (if _t3344 = Protocol.T_LIST then
              _str3343#set_invitees 
                (let (_etype3349,_size3346) = iprot#readListBegin in
                  let _con3350 = (Array.to_list (Array.init _size3346 (fun _ -> (read_squareMember iprot)))) in
                    iprot#readListEnd; _con3350)
            else
              iprot#skip _t3344)
          | 3 -> (if _t3344 = Protocol.T_STRUCT then
              _str3343#set_invitor (read_squareMember iprot)
            else
              iprot#skip _t3344)
          | 4 -> (if _t3344 = Protocol.T_STRUCT then
              _str3343#set_invitorRelation (read_squareMemberRelation iprot)
            else
              iprot#skip _t3344)
          | _ -> iprot#skip _t3344);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3343

class squareEventNotifiedLeaveSquareChat =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedLeaveSquareChat.squareChatMid") | Some _x3352 -> _x3352
  method set_squareChatMid _x3352 = _squareChatMid <- Some _x3352
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareMemberMid : string option = None
  method get_squareMemberMid = _squareMemberMid
  method grab_squareMemberMid = match _squareMemberMid with None->raise (Field_empty "squareEventNotifiedLeaveSquareChat.squareMemberMid") | Some _x3353 -> _x3353
  method set_squareMemberMid _x3353 = _squareMemberMid <- Some _x3353
  method unset_squareMemberMid = _squareMemberMid <- None
  method reset_squareMemberMid = _squareMemberMid <- None

  val mutable _sayGoodbye : bool option = None
  method get_sayGoodbye = _sayGoodbye
  method grab_sayGoodbye = match _sayGoodbye with None->raise (Field_empty "squareEventNotifiedLeaveSquareChat.sayGoodbye") | Some _x3354 -> _x3354
  method set_sayGoodbye _x3354 = _sayGoodbye <- Some _x3354
  method unset_sayGoodbye = _sayGoodbye <- None
  method reset_sayGoodbye = _sayGoodbye <- None

  val mutable _squareMember : squareMember option = None
  method get_squareMember = _squareMember
  method grab_squareMember = match _squareMember with None->raise (Field_empty "squareEventNotifiedLeaveSquareChat.squareMember") | Some _x3355 -> _x3355
  method set_squareMember _x3355 = _squareMember <- Some _x3355
  method unset_squareMember = _squareMember <- None
  method reset_squareMember = _squareMember <- None

  method copy =
      let _new = Oo.copy self in
      if _squareMember <> None then
        _new#set_squareMember self#grab_squareMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedLeaveSquareChat";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMemberMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _sayGoodbye with None -> () | Some _v -> 
      oprot#writeFieldBegin("sayGoodbye",Protocol.T_BOOL,3);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _squareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMember",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedLeaveSquareChat (iprot : Protocol.t) =
  let _str3358 = new squareEventNotifiedLeaveSquareChat in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3359,_id3360) = iprot#readFieldBegin in
        if _t3359 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3360 with 
          | 1 -> (if _t3359 = Protocol.T_STRING then
              _str3358#set_squareChatMid iprot#readString
            else
              iprot#skip _t3359)
          | 2 -> (if _t3359 = Protocol.T_STRING then
              _str3358#set_squareMemberMid iprot#readString
            else
              iprot#skip _t3359)
          | 3 -> (if _t3359 = Protocol.T_BOOL then
              _str3358#set_sayGoodbye iprot#readBool
            else
              iprot#skip _t3359)
          | 4 -> (if _t3359 = Protocol.T_STRUCT then
              _str3358#set_squareMember (read_squareMember iprot)
            else
              iprot#skip _t3359)
          | _ -> iprot#skip _t3359);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3358

class squareEventNotifiedDestroyMessage =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedDestroyMessage.squareChatMid") | Some _x3362 -> _x3362
  method set_squareChatMid _x3362 = _squareChatMid <- Some _x3362
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _messageId : string option = None
  method get_messageId = _messageId
  method grab_messageId = match _messageId with None->raise (Field_empty "squareEventNotifiedDestroyMessage.messageId") | Some _x3363 -> _x3363
  method set_messageId _x3363 = _messageId <- Some _x3363
  method unset_messageId = _messageId <- None
  method reset_messageId = _messageId <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedDestroyMessage";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _messageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageId",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedDestroyMessage (iprot : Protocol.t) =
  let _str3366 = new squareEventNotifiedDestroyMessage in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3367,_id3368) = iprot#readFieldBegin in
        if _t3367 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3368 with 
          | 1 -> (if _t3367 = Protocol.T_STRING then
              _str3366#set_squareChatMid iprot#readString
            else
              iprot#skip _t3367)
          | 3 -> (if _t3367 = Protocol.T_STRING then
              _str3366#set_messageId iprot#readString
            else
              iprot#skip _t3367)
          | _ -> iprot#skip _t3367);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3366

class squareEventNotifiedMarkAsRead =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedMarkAsRead.squareChatMid") | Some _x3370 -> _x3370
  method set_squareChatMid _x3370 = _squareChatMid <- Some _x3370
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _sMemberMid : string option = None
  method get_sMemberMid = _sMemberMid
  method grab_sMemberMid = match _sMemberMid with None->raise (Field_empty "squareEventNotifiedMarkAsRead.sMemberMid") | Some _x3371 -> _x3371
  method set_sMemberMid _x3371 = _sMemberMid <- Some _x3371
  method unset_sMemberMid = _sMemberMid <- None
  method reset_sMemberMid = _sMemberMid <- None

  val mutable _messageId : string option = None
  method get_messageId = _messageId
  method grab_messageId = match _messageId with None->raise (Field_empty "squareEventNotifiedMarkAsRead.messageId") | Some _x3372 -> _x3372
  method set_messageId _x3372 = _messageId <- Some _x3372
  method unset_messageId = _messageId <- None
  method reset_messageId = _messageId <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedMarkAsRead";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _sMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("sMemberMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _messageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("messageId",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedMarkAsRead (iprot : Protocol.t) =
  let _str3375 = new squareEventNotifiedMarkAsRead in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3376,_id3377) = iprot#readFieldBegin in
        if _t3376 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3377 with 
          | 1 -> (if _t3376 = Protocol.T_STRING then
              _str3375#set_squareChatMid iprot#readString
            else
              iprot#skip _t3376)
          | 2 -> (if _t3376 = Protocol.T_STRING then
              _str3375#set_sMemberMid iprot#readString
            else
              iprot#skip _t3376)
          | 4 -> (if _t3376 = Protocol.T_STRING then
              _str3375#set_messageId iprot#readString
            else
              iprot#skip _t3376)
          | _ -> iprot#skip _t3376);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3375

class squareEventNotifiedUpdateSquareMemberProfile =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareMemberProfile.squareChatMid") | Some _x3379 -> _x3379
  method set_squareChatMid _x3379 = _squareChatMid <- Some _x3379
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareMember : squareMember option = None
  method get_squareMember = _squareMember
  method grab_squareMember = match _squareMember with None->raise (Field_empty "squareEventNotifiedUpdateSquareMemberProfile.squareMember") | Some _x3380 -> _x3380
  method set_squareMember _x3380 = _squareMember <- Some _x3380
  method unset_squareMember = _squareMember <- None
  method reset_squareMember = _squareMember <- None

  method copy =
      let _new = Oo.copy self in
      if _squareMember <> None then
        _new#set_squareMember self#grab_squareMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareMemberProfile";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMember",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareMemberProfile (iprot : Protocol.t) =
  let _str3383 = new squareEventNotifiedUpdateSquareMemberProfile in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3384,_id3385) = iprot#readFieldBegin in
        if _t3384 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3385 with 
          | 1 -> (if _t3384 = Protocol.T_STRING then
              _str3383#set_squareChatMid iprot#readString
            else
              iprot#skip _t3384)
          | 2 -> (if _t3384 = Protocol.T_STRUCT then
              _str3383#set_squareMember (read_squareMember iprot)
            else
              iprot#skip _t3384)
          | _ -> iprot#skip _t3384);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3383

class squareEventNotifiedKickoutFromSquare =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedKickoutFromSquare.squareChatMid") | Some _x3387 -> _x3387
  method set_squareChatMid _x3387 = _squareChatMid <- Some _x3387
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _kickees : squareMember list option = None
  method get_kickees = _kickees
  method grab_kickees = match _kickees with None->raise (Field_empty "squareEventNotifiedKickoutFromSquare.kickees") | Some _x3388 -> _x3388
  method set_kickees _x3388 = _kickees <- Some _x3388
  method unset_kickees = _kickees <- None
  method reset_kickees = _kickees <- None

  method copy =
      let _new = Oo.copy self in
      if _kickees <> None then
        _new#set_kickees (List.map (fun x -> x#copy) self#grab_kickees);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedKickoutFromSquare";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _kickees with None -> () | Some _v -> 
      oprot#writeFieldBegin("kickees",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter3391 ->         _iter3391#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedKickoutFromSquare (iprot : Protocol.t) =
  let _str3392 = new squareEventNotifiedKickoutFromSquare in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3393,_id3394) = iprot#readFieldBegin in
        if _t3393 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3394 with 
          | 1 -> (if _t3393 = Protocol.T_STRING then
              _str3392#set_squareChatMid iprot#readString
            else
              iprot#skip _t3393)
          | 2 -> (if _t3393 = Protocol.T_LIST then
              _str3392#set_kickees 
                (let (_etype3398,_size3395) = iprot#readListBegin in
                  let _con3399 = (Array.to_list (Array.init _size3395 (fun _ -> (read_squareMember iprot)))) in
                    iprot#readListEnd; _con3399)
            else
              iprot#skip _t3393)
          | _ -> iprot#skip _t3393);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3392

class squareEventNotifiedShutdownSquare =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedShutdownSquare.squareChatMid") | Some _x3401 -> _x3401
  method set_squareChatMid _x3401 = _squareChatMid <- Some _x3401
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "squareEventNotifiedShutdownSquare.square") | Some _x3402 -> _x3402
  method set_square _x3402 = _square <- Some _x3402
  method unset_square = _square <- None
  method reset_square = _square <- None

  method copy =
      let _new = Oo.copy self in
      if _square <> None then
        _new#set_square self#grab_square#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedShutdownSquare";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedShutdownSquare (iprot : Protocol.t) =
  let _str3405 = new squareEventNotifiedShutdownSquare in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3406,_id3407) = iprot#readFieldBegin in
        if _t3406 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3407 with 
          | 1 -> (if _t3406 = Protocol.T_STRING then
              _str3405#set_squareChatMid iprot#readString
            else
              iprot#skip _t3406)
          | 2 -> (if _t3406 = Protocol.T_STRUCT then
              _str3405#set_square (read_square iprot)
            else
              iprot#skip _t3406)
          | _ -> iprot#skip _t3406);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3405

class squareEventNotifiedDeleteSquareChat =
object (self)
  val mutable _squareChat : squareChat option = None
  method get_squareChat = _squareChat
  method grab_squareChat = match _squareChat with None->raise (Field_empty "squareEventNotifiedDeleteSquareChat.squareChat") | Some _x3409 -> _x3409
  method set_squareChat _x3409 = _squareChat <- Some _x3409
  method unset_squareChat = _squareChat <- None
  method reset_squareChat = _squareChat <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChat <> None then
        _new#set_squareChat self#grab_squareChat#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedDeleteSquareChat";
    (match _squareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChat",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedDeleteSquareChat (iprot : Protocol.t) =
  let _str3412 = new squareEventNotifiedDeleteSquareChat in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3413,_id3414) = iprot#readFieldBegin in
        if _t3413 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3414 with 
          | 1 -> (if _t3413 = Protocol.T_STRUCT then
              _str3412#set_squareChat (read_squareChat iprot)
            else
              iprot#skip _t3413)
          | _ -> iprot#skip _t3413);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3412

class squareEventNotifiedUpdateSquareChatProfileName =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareChatProfileName.squareChatMid") | Some _x3416 -> _x3416
  method set_squareChatMid _x3416 = _squareChatMid <- Some _x3416
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _editor : squareMember option = None
  method get_editor = _editor
  method grab_editor = match _editor with None->raise (Field_empty "squareEventNotifiedUpdateSquareChatProfileName.editor") | Some _x3417 -> _x3417
  method set_editor _x3417 = _editor <- Some _x3417
  method unset_editor = _editor <- None
  method reset_editor = _editor <- None

  val mutable _updatedChatName : string option = None
  method get_updatedChatName = _updatedChatName
  method grab_updatedChatName = match _updatedChatName with None->raise (Field_empty "squareEventNotifiedUpdateSquareChatProfileName.updatedChatName") | Some _x3418 -> _x3418
  method set_updatedChatName _x3418 = _updatedChatName <- Some _x3418
  method unset_updatedChatName = _updatedChatName <- None
  method reset_updatedChatName = _updatedChatName <- None

  method copy =
      let _new = Oo.copy self in
      if _editor <> None then
        _new#set_editor self#grab_editor#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareChatProfileName";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _editor with None -> () | Some _v -> 
      oprot#writeFieldBegin("editor",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _updatedChatName with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedChatName",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareChatProfileName (iprot : Protocol.t) =
  let _str3421 = new squareEventNotifiedUpdateSquareChatProfileName in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3422,_id3423) = iprot#readFieldBegin in
        if _t3422 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3423 with 
          | 1 -> (if _t3422 = Protocol.T_STRING then
              _str3421#set_squareChatMid iprot#readString
            else
              iprot#skip _t3422)
          | 2 -> (if _t3422 = Protocol.T_STRUCT then
              _str3421#set_editor (read_squareMember iprot)
            else
              iprot#skip _t3422)
          | 3 -> (if _t3422 = Protocol.T_STRING then
              _str3421#set_updatedChatName iprot#readString
            else
              iprot#skip _t3422)
          | _ -> iprot#skip _t3422);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3421

class squareEventNotifiedUpdateSquareChatProfileImage =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareChatProfileImage.squareChatMid") | Some _x3425 -> _x3425
  method set_squareChatMid _x3425 = _squareChatMid <- Some _x3425
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _editor : squareMember option = None
  method get_editor = _editor
  method grab_editor = match _editor with None->raise (Field_empty "squareEventNotifiedUpdateSquareChatProfileImage.editor") | Some _x3426 -> _x3426
  method set_editor _x3426 = _editor <- Some _x3426
  method unset_editor = _editor <- None
  method reset_editor = _editor <- None

  method copy =
      let _new = Oo.copy self in
      if _editor <> None then
        _new#set_editor self#grab_editor#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareChatProfileImage";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _editor with None -> () | Some _v -> 
      oprot#writeFieldBegin("editor",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareChatProfileImage (iprot : Protocol.t) =
  let _str3429 = new squareEventNotifiedUpdateSquareChatProfileImage in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3430,_id3431) = iprot#readFieldBegin in
        if _t3430 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3431 with 
          | 1 -> (if _t3430 = Protocol.T_STRING then
              _str3429#set_squareChatMid iprot#readString
            else
              iprot#skip _t3430)
          | 2 -> (if _t3430 = Protocol.T_STRUCT then
              _str3429#set_editor (read_squareMember iprot)
            else
              iprot#skip _t3430)
          | _ -> iprot#skip _t3430);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3429

class squareEventNotifiedUpdateSquareChatStatus =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareChatStatus.squareChatMid") | Some _x3433 -> _x3433
  method set_squareChatMid _x3433 = _squareChatMid <- Some _x3433
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _statusWithoutMessage : squareChatStatusWithoutMessage option = None
  method get_statusWithoutMessage = _statusWithoutMessage
  method grab_statusWithoutMessage = match _statusWithoutMessage with None->raise (Field_empty "squareEventNotifiedUpdateSquareChatStatus.statusWithoutMessage") | Some _x3434 -> _x3434
  method set_statusWithoutMessage _x3434 = _statusWithoutMessage <- Some _x3434
  method unset_statusWithoutMessage = _statusWithoutMessage <- None
  method reset_statusWithoutMessage = _statusWithoutMessage <- None

  method copy =
      let _new = Oo.copy self in
      if _statusWithoutMessage <> None then
        _new#set_statusWithoutMessage self#grab_statusWithoutMessage#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareChatStatus";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _statusWithoutMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("statusWithoutMessage",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareChatStatus (iprot : Protocol.t) =
  let _str3437 = new squareEventNotifiedUpdateSquareChatStatus in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3438,_id3439) = iprot#readFieldBegin in
        if _t3438 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3439 with 
          | 1 -> (if _t3438 = Protocol.T_STRING then
              _str3437#set_squareChatMid iprot#readString
            else
              iprot#skip _t3438)
          | 2 -> (if _t3438 = Protocol.T_STRUCT then
              _str3437#set_statusWithoutMessage (read_squareChatStatusWithoutMessage iprot)
            else
              iprot#skip _t3438)
          | _ -> iprot#skip _t3438);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3437

class squareEventNotifiedUpdateSquareStatus =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareStatus.squareMid") | Some _x3441 -> _x3441
  method set_squareMid _x3441 = _squareMid <- Some _x3441
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _squareStatus : squareStatus option = None
  method get_squareStatus = _squareStatus
  method grab_squareStatus = match _squareStatus with None->raise (Field_empty "squareEventNotifiedUpdateSquareStatus.squareStatus") | Some _x3442 -> _x3442
  method set_squareStatus _x3442 = _squareStatus <- Some _x3442
  method unset_squareStatus = _squareStatus <- None
  method reset_squareStatus = _squareStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _squareStatus <> None then
        _new#set_squareStatus self#grab_squareStatus#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareStatus";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareStatus",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareStatus (iprot : Protocol.t) =
  let _str3445 = new squareEventNotifiedUpdateSquareStatus in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3446,_id3447) = iprot#readFieldBegin in
        if _t3446 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3447 with 
          | 1 -> (if _t3446 = Protocol.T_STRING then
              _str3445#set_squareMid iprot#readString
            else
              iprot#skip _t3446)
          | 2 -> (if _t3446 = Protocol.T_STRUCT then
              _str3445#set_squareStatus (read_squareStatus iprot)
            else
              iprot#skip _t3446)
          | _ -> iprot#skip _t3446);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3445

class squareEventNotifiedCreateSquareMember =
object (self)
  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "squareEventNotifiedCreateSquareMember.square") | Some _x3449 -> _x3449
  method set_square _x3449 = _square <- Some _x3449
  method unset_square = _square <- None
  method reset_square = _square <- None

  val mutable _squareAuthority : squareAuthority option = None
  method get_squareAuthority = _squareAuthority
  method grab_squareAuthority = match _squareAuthority with None->raise (Field_empty "squareEventNotifiedCreateSquareMember.squareAuthority") | Some _x3450 -> _x3450
  method set_squareAuthority _x3450 = _squareAuthority <- Some _x3450
  method unset_squareAuthority = _squareAuthority <- None
  method reset_squareAuthority = _squareAuthority <- None

  val mutable _squareStatus : squareStatus option = None
  method get_squareStatus = _squareStatus
  method grab_squareStatus = match _squareStatus with None->raise (Field_empty "squareEventNotifiedCreateSquareMember.squareStatus") | Some _x3451 -> _x3451
  method set_squareStatus _x3451 = _squareStatus <- Some _x3451
  method unset_squareStatus = _squareStatus <- None
  method reset_squareStatus = _squareStatus <- None

  val mutable _squareMember : squareMember option = None
  method get_squareMember = _squareMember
  method grab_squareMember = match _squareMember with None->raise (Field_empty "squareEventNotifiedCreateSquareMember.squareMember") | Some _x3452 -> _x3452
  method set_squareMember _x3452 = _squareMember <- Some _x3452
  method unset_squareMember = _squareMember <- None
  method reset_squareMember = _squareMember <- None

  val mutable _squareFeatureSet : squareFeatureSet option = None
  method get_squareFeatureSet = _squareFeatureSet
  method grab_squareFeatureSet = match _squareFeatureSet with None->raise (Field_empty "squareEventNotifiedCreateSquareMember.squareFeatureSet") | Some _x3453 -> _x3453
  method set_squareFeatureSet _x3453 = _squareFeatureSet <- Some _x3453
  method unset_squareFeatureSet = _squareFeatureSet <- None
  method reset_squareFeatureSet = _squareFeatureSet <- None

  method copy =
      let _new = Oo.copy self in
      if _square <> None then
        _new#set_square self#grab_square#copy;
      if _squareAuthority <> None then
        _new#set_squareAuthority self#grab_squareAuthority#copy;
      if _squareStatus <> None then
        _new#set_squareStatus self#grab_squareStatus#copy;
      if _squareMember <> None then
        _new#set_squareMember self#grab_squareMember#copy;
      if _squareFeatureSet <> None then
        _new#set_squareFeatureSet self#grab_squareFeatureSet#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedCreateSquareMember";
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareAuthority with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareAuthority",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareStatus",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMember",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareFeatureSet with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareFeatureSet",Protocol.T_STRUCT,5);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedCreateSquareMember (iprot : Protocol.t) =
  let _str3456 = new squareEventNotifiedCreateSquareMember in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3457,_id3458) = iprot#readFieldBegin in
        if _t3457 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3458 with 
          | 1 -> (if _t3457 = Protocol.T_STRUCT then
              _str3456#set_square (read_square iprot)
            else
              iprot#skip _t3457)
          | 2 -> (if _t3457 = Protocol.T_STRUCT then
              _str3456#set_squareAuthority (read_squareAuthority iprot)
            else
              iprot#skip _t3457)
          | 3 -> (if _t3457 = Protocol.T_STRUCT then
              _str3456#set_squareStatus (read_squareStatus iprot)
            else
              iprot#skip _t3457)
          | 4 -> (if _t3457 = Protocol.T_STRUCT then
              _str3456#set_squareMember (read_squareMember iprot)
            else
              iprot#skip _t3457)
          | 5 -> (if _t3457 = Protocol.T_STRUCT then
              _str3456#set_squareFeatureSet (read_squareFeatureSet iprot)
            else
              iprot#skip _t3457)
          | _ -> iprot#skip _t3457);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3456

class squareEventNotifiedCreateSquareChatMember =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedCreateSquareChatMember.squareChatMid") | Some _x3460 -> _x3460
  method set_squareChatMid _x3460 = _squareChatMid <- Some _x3460
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareMemberMid : string option = None
  method get_squareMemberMid = _squareMemberMid
  method grab_squareMemberMid = match _squareMemberMid with None->raise (Field_empty "squareEventNotifiedCreateSquareChatMember.squareMemberMid") | Some _x3461 -> _x3461
  method set_squareMemberMid _x3461 = _squareMemberMid <- Some _x3461
  method unset_squareMemberMid = _squareMemberMid <- None
  method reset_squareMemberMid = _squareMemberMid <- None

  val mutable _squareChatMember : squareChatMember option = None
  method get_squareChatMember = _squareChatMember
  method grab_squareChatMember = match _squareChatMember with None->raise (Field_empty "squareEventNotifiedCreateSquareChatMember.squareChatMember") | Some _x3462 -> _x3462
  method set_squareChatMember _x3462 = _squareChatMember <- Some _x3462
  method unset_squareChatMember = _squareChatMember <- None
  method reset_squareChatMember = _squareChatMember <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChatMember <> None then
        _new#set_squareChatMember self#grab_squareChatMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedCreateSquareChatMember";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMemberMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMember",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedCreateSquareChatMember (iprot : Protocol.t) =
  let _str3465 = new squareEventNotifiedCreateSquareChatMember in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3466,_id3467) = iprot#readFieldBegin in
        if _t3466 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3467 with 
          | 1 -> (if _t3466 = Protocol.T_STRING then
              _str3465#set_squareChatMid iprot#readString
            else
              iprot#skip _t3466)
          | 2 -> (if _t3466 = Protocol.T_STRING then
              _str3465#set_squareMemberMid iprot#readString
            else
              iprot#skip _t3466)
          | 3 -> (if _t3466 = Protocol.T_STRUCT then
              _str3465#set_squareChatMember (read_squareChatMember iprot)
            else
              iprot#skip _t3466)
          | _ -> iprot#skip _t3466);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3465

class squareEventNotifiedUpdateSquareMemberRelation =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareMemberRelation.squareMid") | Some _x3469 -> _x3469
  method set_squareMid _x3469 = _squareMid <- Some _x3469
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _myMemberMid : string option = None
  method get_myMemberMid = _myMemberMid
  method grab_myMemberMid = match _myMemberMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareMemberRelation.myMemberMid") | Some _x3470 -> _x3470
  method set_myMemberMid _x3470 = _myMemberMid <- Some _x3470
  method unset_myMemberMid = _myMemberMid <- None
  method reset_myMemberMid = _myMemberMid <- None

  val mutable _targetSquareMemberMid : string option = None
  method get_targetSquareMemberMid = _targetSquareMemberMid
  method grab_targetSquareMemberMid = match _targetSquareMemberMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareMemberRelation.targetSquareMemberMid") | Some _x3471 -> _x3471
  method set_targetSquareMemberMid _x3471 = _targetSquareMemberMid <- Some _x3471
  method unset_targetSquareMemberMid = _targetSquareMemberMid <- None
  method reset_targetSquareMemberMid = _targetSquareMemberMid <- None

  val mutable _squareMemberRelation : squareMemberRelation option = None
  method get_squareMemberRelation = _squareMemberRelation
  method grab_squareMemberRelation = match _squareMemberRelation with None->raise (Field_empty "squareEventNotifiedUpdateSquareMemberRelation.squareMemberRelation") | Some _x3472 -> _x3472
  method set_squareMemberRelation _x3472 = _squareMemberRelation <- Some _x3472
  method unset_squareMemberRelation = _squareMemberRelation <- None
  method reset_squareMemberRelation = _squareMemberRelation <- None

  method copy =
      let _new = Oo.copy self in
      if _squareMemberRelation <> None then
        _new#set_squareMemberRelation self#grab_squareMemberRelation#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareMemberRelation";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _myMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("myMemberMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _targetSquareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("targetSquareMemberMid",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMemberRelation with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMemberRelation",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareMemberRelation (iprot : Protocol.t) =
  let _str3475 = new squareEventNotifiedUpdateSquareMemberRelation in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3476,_id3477) = iprot#readFieldBegin in
        if _t3476 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3477 with 
          | 1 -> (if _t3476 = Protocol.T_STRING then
              _str3475#set_squareMid iprot#readString
            else
              iprot#skip _t3476)
          | 2 -> (if _t3476 = Protocol.T_STRING then
              _str3475#set_myMemberMid iprot#readString
            else
              iprot#skip _t3476)
          | 3 -> (if _t3476 = Protocol.T_STRING then
              _str3475#set_targetSquareMemberMid iprot#readString
            else
              iprot#skip _t3476)
          | 4 -> (if _t3476 = Protocol.T_STRUCT then
              _str3475#set_squareMemberRelation (read_squareMemberRelation iprot)
            else
              iprot#skip _t3476)
          | _ -> iprot#skip _t3476);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3475

class squareEventNotifiedUpdateSquare =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareEventNotifiedUpdateSquare.squareMid") | Some _x3479 -> _x3479
  method set_squareMid _x3479 = _squareMid <- Some _x3479
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "squareEventNotifiedUpdateSquare.square") | Some _x3480 -> _x3480
  method set_square _x3480 = _square <- Some _x3480
  method unset_square = _square <- None
  method reset_square = _square <- None

  method copy =
      let _new = Oo.copy self in
      if _square <> None then
        _new#set_square self#grab_square#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquare";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquare (iprot : Protocol.t) =
  let _str3483 = new squareEventNotifiedUpdateSquare in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3484,_id3485) = iprot#readFieldBegin in
        if _t3484 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3485 with 
          | 1 -> (if _t3484 = Protocol.T_STRING then
              _str3483#set_squareMid iprot#readString
            else
              iprot#skip _t3484)
          | 2 -> (if _t3484 = Protocol.T_STRUCT then
              _str3483#set_square (read_square iprot)
            else
              iprot#skip _t3484)
          | _ -> iprot#skip _t3484);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3483

class squareEventNotifiedUpdateSquareMember =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareMember.squareMid") | Some _x3487 -> _x3487
  method set_squareMid _x3487 = _squareMid <- Some _x3487
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _squareMemberMid : string option = None
  method get_squareMemberMid = _squareMemberMid
  method grab_squareMemberMid = match _squareMemberMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareMember.squareMemberMid") | Some _x3488 -> _x3488
  method set_squareMemberMid _x3488 = _squareMemberMid <- Some _x3488
  method unset_squareMemberMid = _squareMemberMid <- None
  method reset_squareMemberMid = _squareMemberMid <- None

  val mutable _squareMember : squareMember option = None
  method get_squareMember = _squareMember
  method grab_squareMember = match _squareMember with None->raise (Field_empty "squareEventNotifiedUpdateSquareMember.squareMember") | Some _x3489 -> _x3489
  method set_squareMember _x3489 = _squareMember <- Some _x3489
  method unset_squareMember = _squareMember <- None
  method reset_squareMember = _squareMember <- None

  method copy =
      let _new = Oo.copy self in
      if _squareMember <> None then
        _new#set_squareMember self#grab_squareMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareMember";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMemberMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMember",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareMember (iprot : Protocol.t) =
  let _str3492 = new squareEventNotifiedUpdateSquareMember in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3493,_id3494) = iprot#readFieldBegin in
        if _t3493 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3494 with 
          | 1 -> (if _t3493 = Protocol.T_STRING then
              _str3492#set_squareMid iprot#readString
            else
              iprot#skip _t3493)
          | 2 -> (if _t3493 = Protocol.T_STRING then
              _str3492#set_squareMemberMid iprot#readString
            else
              iprot#skip _t3493)
          | 3 -> (if _t3493 = Protocol.T_STRUCT then
              _str3492#set_squareMember (read_squareMember iprot)
            else
              iprot#skip _t3493)
          | _ -> iprot#skip _t3493);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3492

class squareEventNotifiedUpdateSquareChat =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareChat.squareMid") | Some _x3496 -> _x3496
  method set_squareMid _x3496 = _squareMid <- Some _x3496
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareChat.squareChatMid") | Some _x3497 -> _x3497
  method set_squareChatMid _x3497 = _squareChatMid <- Some _x3497
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareChat : squareChat option = None
  method get_squareChat = _squareChat
  method grab_squareChat = match _squareChat with None->raise (Field_empty "squareEventNotifiedUpdateSquareChat.squareChat") | Some _x3498 -> _x3498
  method set_squareChat _x3498 = _squareChat <- Some _x3498
  method unset_squareChat = _squareChat <- None
  method reset_squareChat = _squareChat <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChat <> None then
        _new#set_squareChat self#grab_squareChat#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareChat";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChat",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareChat (iprot : Protocol.t) =
  let _str3501 = new squareEventNotifiedUpdateSquareChat in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3502,_id3503) = iprot#readFieldBegin in
        if _t3502 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3503 with 
          | 1 -> (if _t3502 = Protocol.T_STRING then
              _str3501#set_squareMid iprot#readString
            else
              iprot#skip _t3502)
          | 2 -> (if _t3502 = Protocol.T_STRING then
              _str3501#set_squareChatMid iprot#readString
            else
              iprot#skip _t3502)
          | 3 -> (if _t3502 = Protocol.T_STRUCT then
              _str3501#set_squareChat (read_squareChat iprot)
            else
              iprot#skip _t3502)
          | _ -> iprot#skip _t3502);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3501

class squareEventNotificationJoinRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareEventNotificationJoinRequest.squareMid") | Some _x3505 -> _x3505
  method set_squareMid _x3505 = _squareMid <- Some _x3505
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _squareName : string option = None
  method get_squareName = _squareName
  method grab_squareName = match _squareName with None->raise (Field_empty "squareEventNotificationJoinRequest.squareName") | Some _x3506 -> _x3506
  method set_squareName _x3506 = _squareName <- Some _x3506
  method unset_squareName = _squareName <- None
  method reset_squareName = _squareName <- None

  val mutable _requestMemberName : string option = None
  method get_requestMemberName = _requestMemberName
  method grab_requestMemberName = match _requestMemberName with None->raise (Field_empty "squareEventNotificationJoinRequest.requestMemberName") | Some _x3507 -> _x3507
  method set_requestMemberName _x3507 = _requestMemberName <- Some _x3507
  method unset_requestMemberName = _requestMemberName <- None
  method reset_requestMemberName = _requestMemberName <- None

  val mutable _profileImageObsHash : string option = None
  method get_profileImageObsHash = _profileImageObsHash
  method grab_profileImageObsHash = match _profileImageObsHash with None->raise (Field_empty "squareEventNotificationJoinRequest.profileImageObsHash") | Some _x3508 -> _x3508
  method set_profileImageObsHash _x3508 = _profileImageObsHash <- Some _x3508
  method unset_profileImageObsHash = _profileImageObsHash <- None
  method reset_profileImageObsHash = _profileImageObsHash <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotificationJoinRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareName with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _requestMemberName with None -> () | Some _v -> 
      oprot#writeFieldBegin("requestMemberName",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _profileImageObsHash with None -> () | Some _v -> 
      oprot#writeFieldBegin("profileImageObsHash",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotificationJoinRequest (iprot : Protocol.t) =
  let _str3511 = new squareEventNotificationJoinRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3512,_id3513) = iprot#readFieldBegin in
        if _t3512 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3513 with 
          | 1 -> (if _t3512 = Protocol.T_STRING then
              _str3511#set_squareMid iprot#readString
            else
              iprot#skip _t3512)
          | 2 -> (if _t3512 = Protocol.T_STRING then
              _str3511#set_squareName iprot#readString
            else
              iprot#skip _t3512)
          | 3 -> (if _t3512 = Protocol.T_STRING then
              _str3511#set_requestMemberName iprot#readString
            else
              iprot#skip _t3512)
          | 4 -> (if _t3512 = Protocol.T_STRING then
              _str3511#set_profileImageObsHash iprot#readString
            else
              iprot#skip _t3512)
          | _ -> iprot#skip _t3512);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3511

class squareEventNotificationMemberUpdate =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareEventNotificationMemberUpdate.squareMid") | Some _x3515 -> _x3515
  method set_squareMid _x3515 = _squareMid <- Some _x3515
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _squareName : string option = None
  method get_squareName = _squareName
  method grab_squareName = match _squareName with None->raise (Field_empty "squareEventNotificationMemberUpdate.squareName") | Some _x3516 -> _x3516
  method set_squareName _x3516 = _squareName <- Some _x3516
  method unset_squareName = _squareName <- None
  method reset_squareName = _squareName <- None

  val mutable _profileImageObsHash : string option = None
  method get_profileImageObsHash = _profileImageObsHash
  method grab_profileImageObsHash = match _profileImageObsHash with None->raise (Field_empty "squareEventNotificationMemberUpdate.profileImageObsHash") | Some _x3517 -> _x3517
  method set_profileImageObsHash _x3517 = _profileImageObsHash <- Some _x3517
  method unset_profileImageObsHash = _profileImageObsHash <- None
  method reset_profileImageObsHash = _profileImageObsHash <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotificationMemberUpdate";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareName with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _profileImageObsHash with None -> () | Some _v -> 
      oprot#writeFieldBegin("profileImageObsHash",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotificationMemberUpdate (iprot : Protocol.t) =
  let _str3520 = new squareEventNotificationMemberUpdate in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3521,_id3522) = iprot#readFieldBegin in
        if _t3521 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3522 with 
          | 1 -> (if _t3521 = Protocol.T_STRING then
              _str3520#set_squareMid iprot#readString
            else
              iprot#skip _t3521)
          | 2 -> (if _t3521 = Protocol.T_STRING then
              _str3520#set_squareName iprot#readString
            else
              iprot#skip _t3521)
          | 3 -> (if _t3521 = Protocol.T_STRING then
              _str3520#set_profileImageObsHash iprot#readString
            else
              iprot#skip _t3521)
          | _ -> iprot#skip _t3521);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3520

class squareEventNotificationSquareDelete =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareEventNotificationSquareDelete.squareMid") | Some _x3524 -> _x3524
  method set_squareMid _x3524 = _squareMid <- Some _x3524
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _squareName : string option = None
  method get_squareName = _squareName
  method grab_squareName = match _squareName with None->raise (Field_empty "squareEventNotificationSquareDelete.squareName") | Some _x3525 -> _x3525
  method set_squareName _x3525 = _squareName <- Some _x3525
  method unset_squareName = _squareName <- None
  method reset_squareName = _squareName <- None

  val mutable _profileImageObsHash : string option = None
  method get_profileImageObsHash = _profileImageObsHash
  method grab_profileImageObsHash = match _profileImageObsHash with None->raise (Field_empty "squareEventNotificationSquareDelete.profileImageObsHash") | Some _x3526 -> _x3526
  method set_profileImageObsHash _x3526 = _profileImageObsHash <- Some _x3526
  method unset_profileImageObsHash = _profileImageObsHash <- None
  method reset_profileImageObsHash = _profileImageObsHash <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotificationSquareDelete";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareName with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _profileImageObsHash with None -> () | Some _v -> 
      oprot#writeFieldBegin("profileImageObsHash",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotificationSquareDelete (iprot : Protocol.t) =
  let _str3529 = new squareEventNotificationSquareDelete in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3530,_id3531) = iprot#readFieldBegin in
        if _t3530 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3531 with 
          | 1 -> (if _t3530 = Protocol.T_STRING then
              _str3529#set_squareMid iprot#readString
            else
              iprot#skip _t3530)
          | 2 -> (if _t3530 = Protocol.T_STRING then
              _str3529#set_squareName iprot#readString
            else
              iprot#skip _t3530)
          | 3 -> (if _t3530 = Protocol.T_STRING then
              _str3529#set_profileImageObsHash iprot#readString
            else
              iprot#skip _t3530)
          | _ -> iprot#skip _t3530);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3529

class squareEventNotificationSquareChatDelete =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotificationSquareChatDelete.squareChatMid") | Some _x3533 -> _x3533
  method set_squareChatMid _x3533 = _squareChatMid <- Some _x3533
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareChatName : string option = None
  method get_squareChatName = _squareChatName
  method grab_squareChatName = match _squareChatName with None->raise (Field_empty "squareEventNotificationSquareChatDelete.squareChatName") | Some _x3534 -> _x3534
  method set_squareChatName _x3534 = _squareChatName <- Some _x3534
  method unset_squareChatName = _squareChatName <- None
  method reset_squareChatName = _squareChatName <- None

  val mutable _profileImageObsHash : string option = None
  method get_profileImageObsHash = _profileImageObsHash
  method grab_profileImageObsHash = match _profileImageObsHash with None->raise (Field_empty "squareEventNotificationSquareChatDelete.profileImageObsHash") | Some _x3535 -> _x3535
  method set_profileImageObsHash _x3535 = _profileImageObsHash <- Some _x3535
  method unset_profileImageObsHash = _profileImageObsHash <- None
  method reset_profileImageObsHash = _profileImageObsHash <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotificationSquareChatDelete";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatName with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatName",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _profileImageObsHash with None -> () | Some _v -> 
      oprot#writeFieldBegin("profileImageObsHash",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotificationSquareChatDelete (iprot : Protocol.t) =
  let _str3538 = new squareEventNotificationSquareChatDelete in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3539,_id3540) = iprot#readFieldBegin in
        if _t3539 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3540 with 
          | 1 -> (if _t3539 = Protocol.T_STRING then
              _str3538#set_squareChatMid iprot#readString
            else
              iprot#skip _t3539)
          | 2 -> (if _t3539 = Protocol.T_STRING then
              _str3538#set_squareChatName iprot#readString
            else
              iprot#skip _t3539)
          | 3 -> (if _t3539 = Protocol.T_STRING then
              _str3538#set_profileImageObsHash iprot#readString
            else
              iprot#skip _t3539)
          | _ -> iprot#skip _t3539);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3538

class squareEventNotificationMessage =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotificationMessage.squareChatMid") | Some _x3542 -> _x3542
  method set_squareChatMid _x3542 = _squareChatMid <- Some _x3542
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareMessage : squareMessage option = None
  method get_squareMessage = _squareMessage
  method grab_squareMessage = match _squareMessage with None->raise (Field_empty "squareEventNotificationMessage.squareMessage") | Some _x3543 -> _x3543
  method set_squareMessage _x3543 = _squareMessage <- Some _x3543
  method unset_squareMessage = _squareMessage <- None
  method reset_squareMessage = _squareMessage <- None

  val mutable _senderDisplayName : string option = None
  method get_senderDisplayName = _senderDisplayName
  method grab_senderDisplayName = match _senderDisplayName with None->raise (Field_empty "squareEventNotificationMessage.senderDisplayName") | Some _x3544 -> _x3544
  method set_senderDisplayName _x3544 = _senderDisplayName <- Some _x3544
  method unset_senderDisplayName = _senderDisplayName <- None
  method reset_senderDisplayName = _senderDisplayName <- None

  val mutable _unreadCount : Int32.t option = None
  method get_unreadCount = _unreadCount
  method grab_unreadCount = match _unreadCount with None->raise (Field_empty "squareEventNotificationMessage.unreadCount") | Some _x3545 -> _x3545
  method set_unreadCount _x3545 = _unreadCount <- Some _x3545
  method unset_unreadCount = _unreadCount <- None
  method reset_unreadCount = _unreadCount <- None

  val mutable _requiredToFetchChatEvents : bool option = None
  method get_requiredToFetchChatEvents = _requiredToFetchChatEvents
  method grab_requiredToFetchChatEvents = match _requiredToFetchChatEvents with None->raise (Field_empty "squareEventNotificationMessage.requiredToFetchChatEvents") | Some _x3546 -> _x3546
  method set_requiredToFetchChatEvents _x3546 = _requiredToFetchChatEvents <- Some _x3546
  method unset_requiredToFetchChatEvents = _requiredToFetchChatEvents <- None
  method reset_requiredToFetchChatEvents = _requiredToFetchChatEvents <- None

  method copy =
      let _new = Oo.copy self in
      if _squareMessage <> None then
        _new#set_squareMessage self#grab_squareMessage#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotificationMessage";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMessage",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _senderDisplayName with None -> () | Some _v -> 
      oprot#writeFieldBegin("senderDisplayName",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _unreadCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("unreadCount",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _requiredToFetchChatEvents with None -> () | Some _v -> 
      oprot#writeFieldBegin("requiredToFetchChatEvents",Protocol.T_BOOL,5);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotificationMessage (iprot : Protocol.t) =
  let _str3549 = new squareEventNotificationMessage in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3550,_id3551) = iprot#readFieldBegin in
        if _t3550 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3551 with 
          | 1 -> (if _t3550 = Protocol.T_STRING then
              _str3549#set_squareChatMid iprot#readString
            else
              iprot#skip _t3550)
          | 2 -> (if _t3550 = Protocol.T_STRUCT then
              _str3549#set_squareMessage (read_squareMessage iprot)
            else
              iprot#skip _t3550)
          | 3 -> (if _t3550 = Protocol.T_STRING then
              _str3549#set_senderDisplayName iprot#readString
            else
              iprot#skip _t3550)
          | 4 -> (if _t3550 = Protocol.T_I32 then
              _str3549#set_unreadCount iprot#readI32
            else
              iprot#skip _t3550)
          | 5 -> (if _t3550 = Protocol.T_BOOL then
              _str3549#set_requiredToFetchChatEvents iprot#readBool
            else
              iprot#skip _t3550)
          | _ -> iprot#skip _t3550);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3549

class squareEventNotifiedUpdateSquareChatMember =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareChatMember.squareChatMid") | Some _x3553 -> _x3553
  method set_squareChatMid _x3553 = _squareChatMid <- Some _x3553
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareMemberMid : string option = None
  method get_squareMemberMid = _squareMemberMid
  method grab_squareMemberMid = match _squareMemberMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareChatMember.squareMemberMid") | Some _x3554 -> _x3554
  method set_squareMemberMid _x3554 = _squareMemberMid <- Some _x3554
  method unset_squareMemberMid = _squareMemberMid <- None
  method reset_squareMemberMid = _squareMemberMid <- None

  val mutable _squareChatMember : squareChatMember option = None
  method get_squareChatMember = _squareChatMember
  method grab_squareChatMember = match _squareChatMember with None->raise (Field_empty "squareEventNotifiedUpdateSquareChatMember.squareChatMember") | Some _x3555 -> _x3555
  method set_squareChatMember _x3555 = _squareChatMember <- Some _x3555
  method unset_squareChatMember = _squareChatMember <- None
  method reset_squareChatMember = _squareChatMember <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChatMember <> None then
        _new#set_squareChatMember self#grab_squareChatMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareChatMember";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMemberMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMember",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareChatMember (iprot : Protocol.t) =
  let _str3558 = new squareEventNotifiedUpdateSquareChatMember in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3559,_id3560) = iprot#readFieldBegin in
        if _t3559 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3560 with 
          | 1 -> (if _t3559 = Protocol.T_STRING then
              _str3558#set_squareChatMid iprot#readString
            else
              iprot#skip _t3559)
          | 2 -> (if _t3559 = Protocol.T_STRING then
              _str3558#set_squareMemberMid iprot#readString
            else
              iprot#skip _t3559)
          | 3 -> (if _t3559 = Protocol.T_STRUCT then
              _str3558#set_squareChatMember (read_squareChatMember iprot)
            else
              iprot#skip _t3559)
          | _ -> iprot#skip _t3559);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3558

class squareEventNotifiedUpdateSquareAuthority =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "squareEventNotifiedUpdateSquareAuthority.squareMid") | Some _x3562 -> _x3562
  method set_squareMid _x3562 = _squareMid <- Some _x3562
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _squareAuthority : squareAuthority option = None
  method get_squareAuthority = _squareAuthority
  method grab_squareAuthority = match _squareAuthority with None->raise (Field_empty "squareEventNotifiedUpdateSquareAuthority.squareAuthority") | Some _x3563 -> _x3563
  method set_squareAuthority _x3563 = _squareAuthority <- Some _x3563
  method unset_squareAuthority = _squareAuthority <- None
  method reset_squareAuthority = _squareAuthority <- None

  method copy =
      let _new = Oo.copy self in
      if _squareAuthority <> None then
        _new#set_squareAuthority self#grab_squareAuthority#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareAuthority";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareAuthority with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareAuthority",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareAuthority (iprot : Protocol.t) =
  let _str3566 = new squareEventNotifiedUpdateSquareAuthority in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3567,_id3568) = iprot#readFieldBegin in
        if _t3567 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3568 with 
          | 1 -> (if _t3567 = Protocol.T_STRING then
              _str3566#set_squareMid iprot#readString
            else
              iprot#skip _t3567)
          | 2 -> (if _t3567 = Protocol.T_STRUCT then
              _str3566#set_squareAuthority (read_squareAuthority iprot)
            else
              iprot#skip _t3567)
          | _ -> iprot#skip _t3567);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3566

class squareEventNotifiedUpdateSquareFeatureSet =
object (self)
  val mutable _squareFeatureSet : squareFeatureSet option = None
  method get_squareFeatureSet = _squareFeatureSet
  method grab_squareFeatureSet = match _squareFeatureSet with None->raise (Field_empty "squareEventNotifiedUpdateSquareFeatureSet.squareFeatureSet") | Some _x3570 -> _x3570
  method set_squareFeatureSet _x3570 = _squareFeatureSet <- Some _x3570
  method unset_squareFeatureSet = _squareFeatureSet <- None
  method reset_squareFeatureSet = _squareFeatureSet <- None

  method copy =
      let _new = Oo.copy self in
      if _squareFeatureSet <> None then
        _new#set_squareFeatureSet self#grab_squareFeatureSet#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventNotifiedUpdateSquareFeatureSet";
    (match _squareFeatureSet with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareFeatureSet",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventNotifiedUpdateSquareFeatureSet (iprot : Protocol.t) =
  let _str3573 = new squareEventNotifiedUpdateSquareFeatureSet in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3574,_id3575) = iprot#readFieldBegin in
        if _t3574 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3575 with 
          | 1 -> (if _t3574 = Protocol.T_STRUCT then
              _str3573#set_squareFeatureSet (read_squareFeatureSet iprot)
            else
              iprot#skip _t3574)
          | _ -> iprot#skip _t3574);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3573

class squareEventPayload =
object (self)
  val mutable _receiveMessage : squareEventReceiveMessage option = None
  method get_receiveMessage = _receiveMessage
  method grab_receiveMessage = match _receiveMessage with None->raise (Field_empty "squareEventPayload.receiveMessage") | Some _x3577 -> _x3577
  method set_receiveMessage _x3577 = _receiveMessage <- Some _x3577
  method unset_receiveMessage = _receiveMessage <- None
  method reset_receiveMessage = _receiveMessage <- None

  val mutable _sendMessage : squareEventSendMessage option = None
  method get_sendMessage = _sendMessage
  method grab_sendMessage = match _sendMessage with None->raise (Field_empty "squareEventPayload.sendMessage") | Some _x3578 -> _x3578
  method set_sendMessage _x3578 = _sendMessage <- Some _x3578
  method unset_sendMessage = _sendMessage <- None
  method reset_sendMessage = _sendMessage <- None

  val mutable _notifiedJoinSquareChat : squareEventNotifiedJoinSquareChat option = None
  method get_notifiedJoinSquareChat = _notifiedJoinSquareChat
  method grab_notifiedJoinSquareChat = match _notifiedJoinSquareChat with None->raise (Field_empty "squareEventPayload.notifiedJoinSquareChat") | Some _x3579 -> _x3579
  method set_notifiedJoinSquareChat _x3579 = _notifiedJoinSquareChat <- Some _x3579
  method unset_notifiedJoinSquareChat = _notifiedJoinSquareChat <- None
  method reset_notifiedJoinSquareChat = _notifiedJoinSquareChat <- None

  val mutable _notifiedInviteIntoSquareChat : squareEventNotifiedInviteIntoSquareChat option = None
  method get_notifiedInviteIntoSquareChat = _notifiedInviteIntoSquareChat
  method grab_notifiedInviteIntoSquareChat = match _notifiedInviteIntoSquareChat with None->raise (Field_empty "squareEventPayload.notifiedInviteIntoSquareChat") | Some _x3580 -> _x3580
  method set_notifiedInviteIntoSquareChat _x3580 = _notifiedInviteIntoSquareChat <- Some _x3580
  method unset_notifiedInviteIntoSquareChat = _notifiedInviteIntoSquareChat <- None
  method reset_notifiedInviteIntoSquareChat = _notifiedInviteIntoSquareChat <- None

  val mutable _notifiedLeaveSquareChat : squareEventNotifiedLeaveSquareChat option = None
  method get_notifiedLeaveSquareChat = _notifiedLeaveSquareChat
  method grab_notifiedLeaveSquareChat = match _notifiedLeaveSquareChat with None->raise (Field_empty "squareEventPayload.notifiedLeaveSquareChat") | Some _x3581 -> _x3581
  method set_notifiedLeaveSquareChat _x3581 = _notifiedLeaveSquareChat <- Some _x3581
  method unset_notifiedLeaveSquareChat = _notifiedLeaveSquareChat <- None
  method reset_notifiedLeaveSquareChat = _notifiedLeaveSquareChat <- None

  val mutable _notifiedDestroyMessage : squareEventNotifiedDestroyMessage option = None
  method get_notifiedDestroyMessage = _notifiedDestroyMessage
  method grab_notifiedDestroyMessage = match _notifiedDestroyMessage with None->raise (Field_empty "squareEventPayload.notifiedDestroyMessage") | Some _x3582 -> _x3582
  method set_notifiedDestroyMessage _x3582 = _notifiedDestroyMessage <- Some _x3582
  method unset_notifiedDestroyMessage = _notifiedDestroyMessage <- None
  method reset_notifiedDestroyMessage = _notifiedDestroyMessage <- None

  val mutable _notifiedMarkAsRead : squareEventNotifiedMarkAsRead option = None
  method get_notifiedMarkAsRead = _notifiedMarkAsRead
  method grab_notifiedMarkAsRead = match _notifiedMarkAsRead with None->raise (Field_empty "squareEventPayload.notifiedMarkAsRead") | Some _x3583 -> _x3583
  method set_notifiedMarkAsRead _x3583 = _notifiedMarkAsRead <- Some _x3583
  method unset_notifiedMarkAsRead = _notifiedMarkAsRead <- None
  method reset_notifiedMarkAsRead = _notifiedMarkAsRead <- None

  val mutable _notifiedUpdateSquareMemberProfile : squareEventNotifiedUpdateSquareMemberProfile option = None
  method get_notifiedUpdateSquareMemberProfile = _notifiedUpdateSquareMemberProfile
  method grab_notifiedUpdateSquareMemberProfile = match _notifiedUpdateSquareMemberProfile with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareMemberProfile") | Some _x3584 -> _x3584
  method set_notifiedUpdateSquareMemberProfile _x3584 = _notifiedUpdateSquareMemberProfile <- Some _x3584
  method unset_notifiedUpdateSquareMemberProfile = _notifiedUpdateSquareMemberProfile <- None
  method reset_notifiedUpdateSquareMemberProfile = _notifiedUpdateSquareMemberProfile <- None

  val mutable _notifiedKickoutFromSquare : squareEventNotifiedKickoutFromSquare option = None
  method get_notifiedKickoutFromSquare = _notifiedKickoutFromSquare
  method grab_notifiedKickoutFromSquare = match _notifiedKickoutFromSquare with None->raise (Field_empty "squareEventPayload.notifiedKickoutFromSquare") | Some _x3585 -> _x3585
  method set_notifiedKickoutFromSquare _x3585 = _notifiedKickoutFromSquare <- Some _x3585
  method unset_notifiedKickoutFromSquare = _notifiedKickoutFromSquare <- None
  method reset_notifiedKickoutFromSquare = _notifiedKickoutFromSquare <- None

  val mutable _notifiedShutdownSquare : squareEventNotifiedShutdownSquare option = None
  method get_notifiedShutdownSquare = _notifiedShutdownSquare
  method grab_notifiedShutdownSquare = match _notifiedShutdownSquare with None->raise (Field_empty "squareEventPayload.notifiedShutdownSquare") | Some _x3586 -> _x3586
  method set_notifiedShutdownSquare _x3586 = _notifiedShutdownSquare <- Some _x3586
  method unset_notifiedShutdownSquare = _notifiedShutdownSquare <- None
  method reset_notifiedShutdownSquare = _notifiedShutdownSquare <- None

  val mutable _notifiedDeleteSquareChat : squareEventNotifiedDeleteSquareChat option = None
  method get_notifiedDeleteSquareChat = _notifiedDeleteSquareChat
  method grab_notifiedDeleteSquareChat = match _notifiedDeleteSquareChat with None->raise (Field_empty "squareEventPayload.notifiedDeleteSquareChat") | Some _x3587 -> _x3587
  method set_notifiedDeleteSquareChat _x3587 = _notifiedDeleteSquareChat <- Some _x3587
  method unset_notifiedDeleteSquareChat = _notifiedDeleteSquareChat <- None
  method reset_notifiedDeleteSquareChat = _notifiedDeleteSquareChat <- None

  val mutable _notifiedUpdateSquareChatProfileName : squareEventNotifiedUpdateSquareChatProfileName option = None
  method get_notifiedUpdateSquareChatProfileName = _notifiedUpdateSquareChatProfileName
  method grab_notifiedUpdateSquareChatProfileName = match _notifiedUpdateSquareChatProfileName with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareChatProfileName") | Some _x3588 -> _x3588
  method set_notifiedUpdateSquareChatProfileName _x3588 = _notifiedUpdateSquareChatProfileName <- Some _x3588
  method unset_notifiedUpdateSquareChatProfileName = _notifiedUpdateSquareChatProfileName <- None
  method reset_notifiedUpdateSquareChatProfileName = _notifiedUpdateSquareChatProfileName <- None

  val mutable _notifiedUpdateSquareChatProfileImage : squareEventNotifiedUpdateSquareChatProfileImage option = None
  method get_notifiedUpdateSquareChatProfileImage = _notifiedUpdateSquareChatProfileImage
  method grab_notifiedUpdateSquareChatProfileImage = match _notifiedUpdateSquareChatProfileImage with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareChatProfileImage") | Some _x3589 -> _x3589
  method set_notifiedUpdateSquareChatProfileImage _x3589 = _notifiedUpdateSquareChatProfileImage <- Some _x3589
  method unset_notifiedUpdateSquareChatProfileImage = _notifiedUpdateSquareChatProfileImage <- None
  method reset_notifiedUpdateSquareChatProfileImage = _notifiedUpdateSquareChatProfileImage <- None

  val mutable _notifiedUpdateSquareStatus : squareEventNotifiedUpdateSquareStatus option = None
  method get_notifiedUpdateSquareStatus = _notifiedUpdateSquareStatus
  method grab_notifiedUpdateSquareStatus = match _notifiedUpdateSquareStatus with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareStatus") | Some _x3590 -> _x3590
  method set_notifiedUpdateSquareStatus _x3590 = _notifiedUpdateSquareStatus <- Some _x3590
  method unset_notifiedUpdateSquareStatus = _notifiedUpdateSquareStatus <- None
  method reset_notifiedUpdateSquareStatus = _notifiedUpdateSquareStatus <- None

  val mutable _notifiedUpdateSquareChatStatus : squareEventNotifiedUpdateSquareChatStatus option = None
  method get_notifiedUpdateSquareChatStatus = _notifiedUpdateSquareChatStatus
  method grab_notifiedUpdateSquareChatStatus = match _notifiedUpdateSquareChatStatus with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareChatStatus") | Some _x3591 -> _x3591
  method set_notifiedUpdateSquareChatStatus _x3591 = _notifiedUpdateSquareChatStatus <- Some _x3591
  method unset_notifiedUpdateSquareChatStatus = _notifiedUpdateSquareChatStatus <- None
  method reset_notifiedUpdateSquareChatStatus = _notifiedUpdateSquareChatStatus <- None

  val mutable _notifiedCreateSquareMember : squareEventNotifiedCreateSquareMember option = None
  method get_notifiedCreateSquareMember = _notifiedCreateSquareMember
  method grab_notifiedCreateSquareMember = match _notifiedCreateSquareMember with None->raise (Field_empty "squareEventPayload.notifiedCreateSquareMember") | Some _x3592 -> _x3592
  method set_notifiedCreateSquareMember _x3592 = _notifiedCreateSquareMember <- Some _x3592
  method unset_notifiedCreateSquareMember = _notifiedCreateSquareMember <- None
  method reset_notifiedCreateSquareMember = _notifiedCreateSquareMember <- None

  val mutable _notifiedCreateSquareChatMember : squareEventNotifiedCreateSquareChatMember option = None
  method get_notifiedCreateSquareChatMember = _notifiedCreateSquareChatMember
  method grab_notifiedCreateSquareChatMember = match _notifiedCreateSquareChatMember with None->raise (Field_empty "squareEventPayload.notifiedCreateSquareChatMember") | Some _x3593 -> _x3593
  method set_notifiedCreateSquareChatMember _x3593 = _notifiedCreateSquareChatMember <- Some _x3593
  method unset_notifiedCreateSquareChatMember = _notifiedCreateSquareChatMember <- None
  method reset_notifiedCreateSquareChatMember = _notifiedCreateSquareChatMember <- None

  val mutable _notifiedUpdateSquareMemberRelation : squareEventNotifiedUpdateSquareMemberRelation option = None
  method get_notifiedUpdateSquareMemberRelation = _notifiedUpdateSquareMemberRelation
  method grab_notifiedUpdateSquareMemberRelation = match _notifiedUpdateSquareMemberRelation with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareMemberRelation") | Some _x3594 -> _x3594
  method set_notifiedUpdateSquareMemberRelation _x3594 = _notifiedUpdateSquareMemberRelation <- Some _x3594
  method unset_notifiedUpdateSquareMemberRelation = _notifiedUpdateSquareMemberRelation <- None
  method reset_notifiedUpdateSquareMemberRelation = _notifiedUpdateSquareMemberRelation <- None

  val mutable _notifiedUpdateSquare : squareEventNotifiedUpdateSquare option = None
  method get_notifiedUpdateSquare = _notifiedUpdateSquare
  method grab_notifiedUpdateSquare = match _notifiedUpdateSquare with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquare") | Some _x3595 -> _x3595
  method set_notifiedUpdateSquare _x3595 = _notifiedUpdateSquare <- Some _x3595
  method unset_notifiedUpdateSquare = _notifiedUpdateSquare <- None
  method reset_notifiedUpdateSquare = _notifiedUpdateSquare <- None

  val mutable _notifiedUpdateSquareMember : squareEventNotifiedUpdateSquareMember option = None
  method get_notifiedUpdateSquareMember = _notifiedUpdateSquareMember
  method grab_notifiedUpdateSquareMember = match _notifiedUpdateSquareMember with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareMember") | Some _x3596 -> _x3596
  method set_notifiedUpdateSquareMember _x3596 = _notifiedUpdateSquareMember <- Some _x3596
  method unset_notifiedUpdateSquareMember = _notifiedUpdateSquareMember <- None
  method reset_notifiedUpdateSquareMember = _notifiedUpdateSquareMember <- None

  val mutable _notifiedUpdateSquareChat : squareEventNotifiedUpdateSquareChat option = None
  method get_notifiedUpdateSquareChat = _notifiedUpdateSquareChat
  method grab_notifiedUpdateSquareChat = match _notifiedUpdateSquareChat with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareChat") | Some _x3597 -> _x3597
  method set_notifiedUpdateSquareChat _x3597 = _notifiedUpdateSquareChat <- Some _x3597
  method unset_notifiedUpdateSquareChat = _notifiedUpdateSquareChat <- None
  method reset_notifiedUpdateSquareChat = _notifiedUpdateSquareChat <- None

  val mutable _notificationJoinRequest : squareEventNotificationJoinRequest option = None
  method get_notificationJoinRequest = _notificationJoinRequest
  method grab_notificationJoinRequest = match _notificationJoinRequest with None->raise (Field_empty "squareEventPayload.notificationJoinRequest") | Some _x3598 -> _x3598
  method set_notificationJoinRequest _x3598 = _notificationJoinRequest <- Some _x3598
  method unset_notificationJoinRequest = _notificationJoinRequest <- None
  method reset_notificationJoinRequest = _notificationJoinRequest <- None

  val mutable _notificationJoined : squareEventNotificationMemberUpdate option = None
  method get_notificationJoined = _notificationJoined
  method grab_notificationJoined = match _notificationJoined with None->raise (Field_empty "squareEventPayload.notificationJoined") | Some _x3599 -> _x3599
  method set_notificationJoined _x3599 = _notificationJoined <- Some _x3599
  method unset_notificationJoined = _notificationJoined <- None
  method reset_notificationJoined = _notificationJoined <- None

  val mutable _notificationPromoteCoadmin : squareEventNotificationMemberUpdate option = None
  method get_notificationPromoteCoadmin = _notificationPromoteCoadmin
  method grab_notificationPromoteCoadmin = match _notificationPromoteCoadmin with None->raise (Field_empty "squareEventPayload.notificationPromoteCoadmin") | Some _x3600 -> _x3600
  method set_notificationPromoteCoadmin _x3600 = _notificationPromoteCoadmin <- Some _x3600
  method unset_notificationPromoteCoadmin = _notificationPromoteCoadmin <- None
  method reset_notificationPromoteCoadmin = _notificationPromoteCoadmin <- None

  val mutable _notificationPromoteAdmin : squareEventNotificationMemberUpdate option = None
  method get_notificationPromoteAdmin = _notificationPromoteAdmin
  method grab_notificationPromoteAdmin = match _notificationPromoteAdmin with None->raise (Field_empty "squareEventPayload.notificationPromoteAdmin") | Some _x3601 -> _x3601
  method set_notificationPromoteAdmin _x3601 = _notificationPromoteAdmin <- Some _x3601
  method unset_notificationPromoteAdmin = _notificationPromoteAdmin <- None
  method reset_notificationPromoteAdmin = _notificationPromoteAdmin <- None

  val mutable _notificationDemoteMember : squareEventNotificationMemberUpdate option = None
  method get_notificationDemoteMember = _notificationDemoteMember
  method grab_notificationDemoteMember = match _notificationDemoteMember with None->raise (Field_empty "squareEventPayload.notificationDemoteMember") | Some _x3602 -> _x3602
  method set_notificationDemoteMember _x3602 = _notificationDemoteMember <- Some _x3602
  method unset_notificationDemoteMember = _notificationDemoteMember <- None
  method reset_notificationDemoteMember = _notificationDemoteMember <- None

  val mutable _notificationKickedOut : squareEventNotificationMemberUpdate option = None
  method get_notificationKickedOut = _notificationKickedOut
  method grab_notificationKickedOut = match _notificationKickedOut with None->raise (Field_empty "squareEventPayload.notificationKickedOut") | Some _x3603 -> _x3603
  method set_notificationKickedOut _x3603 = _notificationKickedOut <- Some _x3603
  method unset_notificationKickedOut = _notificationKickedOut <- None
  method reset_notificationKickedOut = _notificationKickedOut <- None

  val mutable _notificationSquareDelete : squareEventNotificationSquareDelete option = None
  method get_notificationSquareDelete = _notificationSquareDelete
  method grab_notificationSquareDelete = match _notificationSquareDelete with None->raise (Field_empty "squareEventPayload.notificationSquareDelete") | Some _x3604 -> _x3604
  method set_notificationSquareDelete _x3604 = _notificationSquareDelete <- Some _x3604
  method unset_notificationSquareDelete = _notificationSquareDelete <- None
  method reset_notificationSquareDelete = _notificationSquareDelete <- None

  val mutable _notificationSquareChatDelete : squareEventNotificationSquareChatDelete option = None
  method get_notificationSquareChatDelete = _notificationSquareChatDelete
  method grab_notificationSquareChatDelete = match _notificationSquareChatDelete with None->raise (Field_empty "squareEventPayload.notificationSquareChatDelete") | Some _x3605 -> _x3605
  method set_notificationSquareChatDelete _x3605 = _notificationSquareChatDelete <- Some _x3605
  method unset_notificationSquareChatDelete = _notificationSquareChatDelete <- None
  method reset_notificationSquareChatDelete = _notificationSquareChatDelete <- None

  val mutable _notificationMessage : squareEventNotificationMessage option = None
  method get_notificationMessage = _notificationMessage
  method grab_notificationMessage = match _notificationMessage with None->raise (Field_empty "squareEventPayload.notificationMessage") | Some _x3606 -> _x3606
  method set_notificationMessage _x3606 = _notificationMessage <- Some _x3606
  method unset_notificationMessage = _notificationMessage <- None
  method reset_notificationMessage = _notificationMessage <- None

  val mutable _notifiedUpdateSquareChatMember : squareEventNotifiedUpdateSquareChatMember option = None
  method get_notifiedUpdateSquareChatMember = _notifiedUpdateSquareChatMember
  method grab_notifiedUpdateSquareChatMember = match _notifiedUpdateSquareChatMember with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareChatMember") | Some _x3607 -> _x3607
  method set_notifiedUpdateSquareChatMember _x3607 = _notifiedUpdateSquareChatMember <- Some _x3607
  method unset_notifiedUpdateSquareChatMember = _notifiedUpdateSquareChatMember <- None
  method reset_notifiedUpdateSquareChatMember = _notifiedUpdateSquareChatMember <- None

  val mutable _notifiedUpdateSquareAuthority : squareEventNotifiedUpdateSquareAuthority option = None
  method get_notifiedUpdateSquareAuthority = _notifiedUpdateSquareAuthority
  method grab_notifiedUpdateSquareAuthority = match _notifiedUpdateSquareAuthority with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareAuthority") | Some _x3608 -> _x3608
  method set_notifiedUpdateSquareAuthority _x3608 = _notifiedUpdateSquareAuthority <- Some _x3608
  method unset_notifiedUpdateSquareAuthority = _notifiedUpdateSquareAuthority <- None
  method reset_notifiedUpdateSquareAuthority = _notifiedUpdateSquareAuthority <- None

  val mutable _notifiedUpdateSquareFeatureSet : squareEventNotifiedUpdateSquareFeatureSet option = None
  method get_notifiedUpdateSquareFeatureSet = _notifiedUpdateSquareFeatureSet
  method grab_notifiedUpdateSquareFeatureSet = match _notifiedUpdateSquareFeatureSet with None->raise (Field_empty "squareEventPayload.notifiedUpdateSquareFeatureSet") | Some _x3609 -> _x3609
  method set_notifiedUpdateSquareFeatureSet _x3609 = _notifiedUpdateSquareFeatureSet <- Some _x3609
  method unset_notifiedUpdateSquareFeatureSet = _notifiedUpdateSquareFeatureSet <- None
  method reset_notifiedUpdateSquareFeatureSet = _notifiedUpdateSquareFeatureSet <- None

  method copy =
      let _new = Oo.copy self in
      if _receiveMessage <> None then
        _new#set_receiveMessage self#grab_receiveMessage#copy;
      if _sendMessage <> None then
        _new#set_sendMessage self#grab_sendMessage#copy;
      if _notifiedJoinSquareChat <> None then
        _new#set_notifiedJoinSquareChat self#grab_notifiedJoinSquareChat#copy;
      if _notifiedInviteIntoSquareChat <> None then
        _new#set_notifiedInviteIntoSquareChat self#grab_notifiedInviteIntoSquareChat#copy;
      if _notifiedLeaveSquareChat <> None then
        _new#set_notifiedLeaveSquareChat self#grab_notifiedLeaveSquareChat#copy;
      if _notifiedDestroyMessage <> None then
        _new#set_notifiedDestroyMessage self#grab_notifiedDestroyMessage#copy;
      if _notifiedMarkAsRead <> None then
        _new#set_notifiedMarkAsRead self#grab_notifiedMarkAsRead#copy;
      if _notifiedUpdateSquareMemberProfile <> None then
        _new#set_notifiedUpdateSquareMemberProfile self#grab_notifiedUpdateSquareMemberProfile#copy;
      if _notifiedKickoutFromSquare <> None then
        _new#set_notifiedKickoutFromSquare self#grab_notifiedKickoutFromSquare#copy;
      if _notifiedShutdownSquare <> None then
        _new#set_notifiedShutdownSquare self#grab_notifiedShutdownSquare#copy;
      if _notifiedDeleteSquareChat <> None then
        _new#set_notifiedDeleteSquareChat self#grab_notifiedDeleteSquareChat#copy;
      if _notifiedUpdateSquareChatProfileName <> None then
        _new#set_notifiedUpdateSquareChatProfileName self#grab_notifiedUpdateSquareChatProfileName#copy;
      if _notifiedUpdateSquareChatProfileImage <> None then
        _new#set_notifiedUpdateSquareChatProfileImage self#grab_notifiedUpdateSquareChatProfileImage#copy;
      if _notifiedUpdateSquareStatus <> None then
        _new#set_notifiedUpdateSquareStatus self#grab_notifiedUpdateSquareStatus#copy;
      if _notifiedUpdateSquareChatStatus <> None then
        _new#set_notifiedUpdateSquareChatStatus self#grab_notifiedUpdateSquareChatStatus#copy;
      if _notifiedCreateSquareMember <> None then
        _new#set_notifiedCreateSquareMember self#grab_notifiedCreateSquareMember#copy;
      if _notifiedCreateSquareChatMember <> None then
        _new#set_notifiedCreateSquareChatMember self#grab_notifiedCreateSquareChatMember#copy;
      if _notifiedUpdateSquareMemberRelation <> None then
        _new#set_notifiedUpdateSquareMemberRelation self#grab_notifiedUpdateSquareMemberRelation#copy;
      if _notifiedUpdateSquare <> None then
        _new#set_notifiedUpdateSquare self#grab_notifiedUpdateSquare#copy;
      if _notifiedUpdateSquareMember <> None then
        _new#set_notifiedUpdateSquareMember self#grab_notifiedUpdateSquareMember#copy;
      if _notifiedUpdateSquareChat <> None then
        _new#set_notifiedUpdateSquareChat self#grab_notifiedUpdateSquareChat#copy;
      if _notificationJoinRequest <> None then
        _new#set_notificationJoinRequest self#grab_notificationJoinRequest#copy;
      if _notificationJoined <> None then
        _new#set_notificationJoined self#grab_notificationJoined#copy;
      if _notificationPromoteCoadmin <> None then
        _new#set_notificationPromoteCoadmin self#grab_notificationPromoteCoadmin#copy;
      if _notificationPromoteAdmin <> None then
        _new#set_notificationPromoteAdmin self#grab_notificationPromoteAdmin#copy;
      if _notificationDemoteMember <> None then
        _new#set_notificationDemoteMember self#grab_notificationDemoteMember#copy;
      if _notificationKickedOut <> None then
        _new#set_notificationKickedOut self#grab_notificationKickedOut#copy;
      if _notificationSquareDelete <> None then
        _new#set_notificationSquareDelete self#grab_notificationSquareDelete#copy;
      if _notificationSquareChatDelete <> None then
        _new#set_notificationSquareChatDelete self#grab_notificationSquareChatDelete#copy;
      if _notificationMessage <> None then
        _new#set_notificationMessage self#grab_notificationMessage#copy;
      if _notifiedUpdateSquareChatMember <> None then
        _new#set_notifiedUpdateSquareChatMember self#grab_notifiedUpdateSquareChatMember#copy;
      if _notifiedUpdateSquareAuthority <> None then
        _new#set_notifiedUpdateSquareAuthority self#grab_notifiedUpdateSquareAuthority#copy;
      if _notifiedUpdateSquareFeatureSet <> None then
        _new#set_notifiedUpdateSquareFeatureSet self#grab_notifiedUpdateSquareFeatureSet#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEventPayload";
    (match _receiveMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("receiveMessage",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _sendMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("sendMessage",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedJoinSquareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedJoinSquareChat",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedInviteIntoSquareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedInviteIntoSquareChat",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedLeaveSquareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedLeaveSquareChat",Protocol.T_STRUCT,5);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedDestroyMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedDestroyMessage",Protocol.T_STRUCT,6);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedMarkAsRead with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedMarkAsRead",Protocol.T_STRUCT,7);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareMemberProfile with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareMemberProfile",Protocol.T_STRUCT,8);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquare with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquare",Protocol.T_STRUCT,9);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareMember",Protocol.T_STRUCT,10);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareChat",Protocol.T_STRUCT,11);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareChatMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareChatMember",Protocol.T_STRUCT,12);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareAuthority with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareAuthority",Protocol.T_STRUCT,13);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareStatus",Protocol.T_STRUCT,14);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareChatStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareChatStatus",Protocol.T_STRUCT,15);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedCreateSquareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedCreateSquareMember",Protocol.T_STRUCT,16);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedCreateSquareChatMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedCreateSquareChatMember",Protocol.T_STRUCT,17);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareMemberRelation with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareMemberRelation",Protocol.T_STRUCT,18);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedShutdownSquare with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedShutdownSquare",Protocol.T_STRUCT,19);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedKickoutFromSquare with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedKickoutFromSquare",Protocol.T_STRUCT,20);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedDeleteSquareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedDeleteSquareChat",Protocol.T_STRUCT,21);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notificationJoinRequest with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationJoinRequest",Protocol.T_STRUCT,22);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notificationJoined with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationJoined",Protocol.T_STRUCT,23);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notificationPromoteCoadmin with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationPromoteCoadmin",Protocol.T_STRUCT,24);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notificationPromoteAdmin with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationPromoteAdmin",Protocol.T_STRUCT,25);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notificationDemoteMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationDemoteMember",Protocol.T_STRUCT,26);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notificationKickedOut with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationKickedOut",Protocol.T_STRUCT,27);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notificationSquareDelete with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationSquareDelete",Protocol.T_STRUCT,28);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notificationSquareChatDelete with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationSquareChatDelete",Protocol.T_STRUCT,29);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notificationMessage with None -> () | Some _v -> 
      oprot#writeFieldBegin("notificationMessage",Protocol.T_STRUCT,30);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareChatProfileName with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareChatProfileName",Protocol.T_STRUCT,31);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareChatProfileImage with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareChatProfileImage",Protocol.T_STRUCT,32);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _notifiedUpdateSquareFeatureSet with None -> () | Some _v -> 
      oprot#writeFieldBegin("notifiedUpdateSquareFeatureSet",Protocol.T_STRUCT,33);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEventPayload (iprot : Protocol.t) =
  let _str3612 = new squareEventPayload in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3613,_id3614) = iprot#readFieldBegin in
        if _t3613 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3614 with 
          | 1 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_receiveMessage (read_squareEventReceiveMessage iprot)
            else
              iprot#skip _t3613)
          | 2 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_sendMessage (read_squareEventSendMessage iprot)
            else
              iprot#skip _t3613)
          | 3 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedJoinSquareChat (read_squareEventNotifiedJoinSquareChat iprot)
            else
              iprot#skip _t3613)
          | 4 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedInviteIntoSquareChat (read_squareEventNotifiedInviteIntoSquareChat iprot)
            else
              iprot#skip _t3613)
          | 5 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedLeaveSquareChat (read_squareEventNotifiedLeaveSquareChat iprot)
            else
              iprot#skip _t3613)
          | 6 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedDestroyMessage (read_squareEventNotifiedDestroyMessage iprot)
            else
              iprot#skip _t3613)
          | 7 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedMarkAsRead (read_squareEventNotifiedMarkAsRead iprot)
            else
              iprot#skip _t3613)
          | 8 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareMemberProfile (read_squareEventNotifiedUpdateSquareMemberProfile iprot)
            else
              iprot#skip _t3613)
          | 20 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedKickoutFromSquare (read_squareEventNotifiedKickoutFromSquare iprot)
            else
              iprot#skip _t3613)
          | 19 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedShutdownSquare (read_squareEventNotifiedShutdownSquare iprot)
            else
              iprot#skip _t3613)
          | 21 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedDeleteSquareChat (read_squareEventNotifiedDeleteSquareChat iprot)
            else
              iprot#skip _t3613)
          | 31 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareChatProfileName (read_squareEventNotifiedUpdateSquareChatProfileName iprot)
            else
              iprot#skip _t3613)
          | 32 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareChatProfileImage (read_squareEventNotifiedUpdateSquareChatProfileImage iprot)
            else
              iprot#skip _t3613)
          | 14 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareStatus (read_squareEventNotifiedUpdateSquareStatus iprot)
            else
              iprot#skip _t3613)
          | 15 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareChatStatus (read_squareEventNotifiedUpdateSquareChatStatus iprot)
            else
              iprot#skip _t3613)
          | 16 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedCreateSquareMember (read_squareEventNotifiedCreateSquareMember iprot)
            else
              iprot#skip _t3613)
          | 17 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedCreateSquareChatMember (read_squareEventNotifiedCreateSquareChatMember iprot)
            else
              iprot#skip _t3613)
          | 18 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareMemberRelation (read_squareEventNotifiedUpdateSquareMemberRelation iprot)
            else
              iprot#skip _t3613)
          | 9 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquare (read_squareEventNotifiedUpdateSquare iprot)
            else
              iprot#skip _t3613)
          | 10 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareMember (read_squareEventNotifiedUpdateSquareMember iprot)
            else
              iprot#skip _t3613)
          | 11 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareChat (read_squareEventNotifiedUpdateSquareChat iprot)
            else
              iprot#skip _t3613)
          | 22 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notificationJoinRequest (read_squareEventNotificationJoinRequest iprot)
            else
              iprot#skip _t3613)
          | 23 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notificationJoined (read_squareEventNotificationMemberUpdate iprot)
            else
              iprot#skip _t3613)
          | 24 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notificationPromoteCoadmin (read_squareEventNotificationMemberUpdate iprot)
            else
              iprot#skip _t3613)
          | 25 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notificationPromoteAdmin (read_squareEventNotificationMemberUpdate iprot)
            else
              iprot#skip _t3613)
          | 26 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notificationDemoteMember (read_squareEventNotificationMemberUpdate iprot)
            else
              iprot#skip _t3613)
          | 27 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notificationKickedOut (read_squareEventNotificationMemberUpdate iprot)
            else
              iprot#skip _t3613)
          | 28 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notificationSquareDelete (read_squareEventNotificationSquareDelete iprot)
            else
              iprot#skip _t3613)
          | 29 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notificationSquareChatDelete (read_squareEventNotificationSquareChatDelete iprot)
            else
              iprot#skip _t3613)
          | 30 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notificationMessage (read_squareEventNotificationMessage iprot)
            else
              iprot#skip _t3613)
          | 12 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareChatMember (read_squareEventNotifiedUpdateSquareChatMember iprot)
            else
              iprot#skip _t3613)
          | 13 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareAuthority (read_squareEventNotifiedUpdateSquareAuthority iprot)
            else
              iprot#skip _t3613)
          | 33 -> (if _t3613 = Protocol.T_STRUCT then
              _str3612#set_notifiedUpdateSquareFeatureSet (read_squareEventNotifiedUpdateSquareFeatureSet iprot)
            else
              iprot#skip _t3613)
          | _ -> iprot#skip _t3613);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3612

class squareEvent =
object (self)
  val mutable _createdTime : Int64.t option = None
  method get_createdTime = _createdTime
  method grab_createdTime = match _createdTime with None->raise (Field_empty "squareEvent.createdTime") | Some _x3616 -> _x3616
  method set_createdTime _x3616 = _createdTime <- Some _x3616
  method unset_createdTime = _createdTime <- None
  method reset_createdTime = _createdTime <- None

  val mutable _type : SquareEventType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "squareEvent.type") | Some _x3617 -> _x3617
  method set_type _x3617 = _type <- Some _x3617
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _payload : squareEventPayload option = None
  method get_payload = _payload
  method grab_payload = match _payload with None->raise (Field_empty "squareEvent.payload") | Some _x3618 -> _x3618
  method set_payload _x3618 = _payload <- Some _x3618
  method unset_payload = _payload <- None
  method reset_payload = _payload <- None

  val mutable _syncToken : string option = None
  method get_syncToken = _syncToken
  method grab_syncToken = match _syncToken with None->raise (Field_empty "squareEvent.syncToken") | Some _x3619 -> _x3619
  method set_syncToken _x3619 = _syncToken <- Some _x3619
  method unset_syncToken = _syncToken <- None
  method reset_syncToken = _syncToken <- None

  val mutable _eventStatus : SquareEventStatus.t option = None
  method get_eventStatus = _eventStatus
  method grab_eventStatus = match _eventStatus with None->raise (Field_empty "squareEvent.eventStatus") | Some _x3620 -> _x3620
  method set_eventStatus _x3620 = _eventStatus <- Some _x3620
  method unset_eventStatus = _eventStatus <- None
  method reset_eventStatus = _eventStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _payload <> None then
        _new#set_payload self#grab_payload#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareEvent";
    (match _createdTime with None -> () | Some _v -> 
      oprot#writeFieldBegin("createdTime",Protocol.T_I64,2);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,3);
      oprot#writeI32(SquareEventType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _payload with None -> () | Some _v -> 
      oprot#writeFieldBegin("payload",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _syncToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncToken",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _eventStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("eventStatus",Protocol.T_I32,6);
      oprot#writeI32(SquareEventStatus.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_squareEvent (iprot : Protocol.t) =
  let _str3623 = new squareEvent in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3624,_id3625) = iprot#readFieldBegin in
        if _t3624 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3625 with 
          | 2 -> (if _t3624 = Protocol.T_I64 then
              _str3623#set_createdTime iprot#readI64
            else
              iprot#skip _t3624)
          | 3 -> (if _t3624 = Protocol.T_I32 then
              _str3623#set_type (SquareEventType.of_i iprot#readI32)
            else
              iprot#skip _t3624)
          | 4 -> (if _t3624 = Protocol.T_STRUCT then
              _str3623#set_payload (read_squareEventPayload iprot)
            else
              iprot#skip _t3624)
          | 5 -> (if _t3624 = Protocol.T_STRING then
              _str3623#set_syncToken iprot#readString
            else
              iprot#skip _t3624)
          | 6 -> (if _t3624 = Protocol.T_I32 then
              _str3623#set_eventStatus (SquareEventStatus.of_i iprot#readI32)
            else
              iprot#skip _t3624)
          | _ -> iprot#skip _t3624);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3623

class fetchMyEventsRequest =
object (self)
  val mutable _subscriptionId : Int64.t option = None
  method get_subscriptionId = _subscriptionId
  method grab_subscriptionId = match _subscriptionId with None->raise (Field_empty "fetchMyEventsRequest.subscriptionId") | Some _x3627 -> _x3627
  method set_subscriptionId _x3627 = _subscriptionId <- Some _x3627
  method unset_subscriptionId = _subscriptionId <- None
  method reset_subscriptionId = _subscriptionId <- None

  val mutable _syncToken : string option = None
  method get_syncToken = _syncToken
  method grab_syncToken = match _syncToken with None->raise (Field_empty "fetchMyEventsRequest.syncToken") | Some _x3628 -> _x3628
  method set_syncToken _x3628 = _syncToken <- Some _x3628
  method unset_syncToken = _syncToken <- None
  method reset_syncToken = _syncToken <- None

  val mutable _limit : Int32.t option = None
  method get_limit = _limit
  method grab_limit = match _limit with None->raise (Field_empty "fetchMyEventsRequest.limit") | Some _x3629 -> _x3629
  method set_limit _x3629 = _limit <- Some _x3629
  method unset_limit = _limit <- None
  method reset_limit = _limit <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "fetchMyEventsRequest.continuationToken") | Some _x3630 -> _x3630
  method set_continuationToken _x3630 = _continuationToken <- Some _x3630
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "FetchMyEventsRequest";
    (match _subscriptionId with None -> () | Some _v -> 
      oprot#writeFieldBegin("subscriptionId",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _syncToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncToken",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _limit with None -> () | Some _v -> 
      oprot#writeFieldBegin("limit",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_fetchMyEventsRequest (iprot : Protocol.t) =
  let _str3633 = new fetchMyEventsRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3634,_id3635) = iprot#readFieldBegin in
        if _t3634 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3635 with 
          | 1 -> (if _t3634 = Protocol.T_I64 then
              _str3633#set_subscriptionId iprot#readI64
            else
              iprot#skip _t3634)
          | 2 -> (if _t3634 = Protocol.T_STRING then
              _str3633#set_syncToken iprot#readString
            else
              iprot#skip _t3634)
          | 3 -> (if _t3634 = Protocol.T_I32 then
              _str3633#set_limit iprot#readI32
            else
              iprot#skip _t3634)
          | 4 -> (if _t3634 = Protocol.T_STRING then
              _str3633#set_continuationToken iprot#readString
            else
              iprot#skip _t3634)
          | _ -> iprot#skip _t3634);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3633

class fetchMyEventsResponse =
object (self)
  val mutable _subscription : subscriptionState option = None
  method get_subscription = _subscription
  method grab_subscription = match _subscription with None->raise (Field_empty "fetchMyEventsResponse.subscription") | Some _x3637 -> _x3637
  method set_subscription _x3637 = _subscription <- Some _x3637
  method unset_subscription = _subscription <- None
  method reset_subscription = _subscription <- None

  val mutable _events : squareEvent list option = None
  method get_events = _events
  method grab_events = match _events with None->raise (Field_empty "fetchMyEventsResponse.events") | Some _x3638 -> _x3638
  method set_events _x3638 = _events <- Some _x3638
  method unset_events = _events <- None
  method reset_events = _events <- None

  val mutable _syncToken : string option = None
  method get_syncToken = _syncToken
  method grab_syncToken = match _syncToken with None->raise (Field_empty "fetchMyEventsResponse.syncToken") | Some _x3639 -> _x3639
  method set_syncToken _x3639 = _syncToken <- Some _x3639
  method unset_syncToken = _syncToken <- None
  method reset_syncToken = _syncToken <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "fetchMyEventsResponse.continuationToken") | Some _x3640 -> _x3640
  method set_continuationToken _x3640 = _continuationToken <- Some _x3640
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  method copy =
      let _new = Oo.copy self in
      if _subscription <> None then
        _new#set_subscription self#grab_subscription#copy;
      if _events <> None then
        _new#set_events (List.map (fun x -> x#copy) self#grab_events);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "FetchMyEventsResponse";
    (match _subscription with None -> () | Some _v -> 
      oprot#writeFieldBegin("subscription",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _events with None -> () | Some _v -> 
      oprot#writeFieldBegin("events",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter3643 ->         _iter3643#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _syncToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncToken",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_fetchMyEventsResponse (iprot : Protocol.t) =
  let _str3644 = new fetchMyEventsResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3645,_id3646) = iprot#readFieldBegin in
        if _t3645 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3646 with 
          | 1 -> (if _t3645 = Protocol.T_STRUCT then
              _str3644#set_subscription (read_subscriptionState iprot)
            else
              iprot#skip _t3645)
          | 2 -> (if _t3645 = Protocol.T_LIST then
              _str3644#set_events 
                (let (_etype3650,_size3647) = iprot#readListBegin in
                  let _con3651 = (Array.to_list (Array.init _size3647 (fun _ -> (read_squareEvent iprot)))) in
                    iprot#readListEnd; _con3651)
            else
              iprot#skip _t3645)
          | 3 -> (if _t3645 = Protocol.T_STRING then
              _str3644#set_syncToken iprot#readString
            else
              iprot#skip _t3645)
          | 4 -> (if _t3645 = Protocol.T_STRING then
              _str3644#set_continuationToken iprot#readString
            else
              iprot#skip _t3645)
          | _ -> iprot#skip _t3645);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3644

class fetchSquareChatEventsRequest =
object (self)
  val mutable _subscriptionId : Int64.t option = None
  method get_subscriptionId = _subscriptionId
  method grab_subscriptionId = match _subscriptionId with None->raise (Field_empty "fetchSquareChatEventsRequest.subscriptionId") | Some _x3653 -> _x3653
  method set_subscriptionId _x3653 = _subscriptionId <- Some _x3653
  method unset_subscriptionId = _subscriptionId <- None
  method reset_subscriptionId = _subscriptionId <- None

  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "fetchSquareChatEventsRequest.squareChatMid") | Some _x3654 -> _x3654
  method set_squareChatMid _x3654 = _squareChatMid <- Some _x3654
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _syncToken : string option = None
  method get_syncToken = _syncToken
  method grab_syncToken = match _syncToken with None->raise (Field_empty "fetchSquareChatEventsRequest.syncToken") | Some _x3655 -> _x3655
  method set_syncToken _x3655 = _syncToken <- Some _x3655
  method unset_syncToken = _syncToken <- None
  method reset_syncToken = _syncToken <- None

  val mutable _limit : Int32.t option = None
  method get_limit = _limit
  method grab_limit = match _limit with None->raise (Field_empty "fetchSquareChatEventsRequest.limit") | Some _x3656 -> _x3656
  method set_limit _x3656 = _limit <- Some _x3656
  method unset_limit = _limit <- None
  method reset_limit = _limit <- None

  val mutable _direction : FetchDirection.t option = None
  method get_direction = _direction
  method grab_direction = match _direction with None->raise (Field_empty "fetchSquareChatEventsRequest.direction") | Some _x3657 -> _x3657
  method set_direction _x3657 = _direction <- Some _x3657
  method unset_direction = _direction <- None
  method reset_direction = _direction <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "FetchSquareChatEventsRequest";
    (match _subscriptionId with None -> () | Some _v -> 
      oprot#writeFieldBegin("subscriptionId",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _syncToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncToken",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _limit with None -> () | Some _v -> 
      oprot#writeFieldBegin("limit",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _direction with None -> () | Some _v -> 
      oprot#writeFieldBegin("direction",Protocol.T_I32,5);
      oprot#writeI32(FetchDirection.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_fetchSquareChatEventsRequest (iprot : Protocol.t) =
  let _str3660 = new fetchSquareChatEventsRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3661,_id3662) = iprot#readFieldBegin in
        if _t3661 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3662 with 
          | 1 -> (if _t3661 = Protocol.T_I64 then
              _str3660#set_subscriptionId iprot#readI64
            else
              iprot#skip _t3661)
          | 2 -> (if _t3661 = Protocol.T_STRING then
              _str3660#set_squareChatMid iprot#readString
            else
              iprot#skip _t3661)
          | 3 -> (if _t3661 = Protocol.T_STRING then
              _str3660#set_syncToken iprot#readString
            else
              iprot#skip _t3661)
          | 4 -> (if _t3661 = Protocol.T_I32 then
              _str3660#set_limit iprot#readI32
            else
              iprot#skip _t3661)
          | 5 -> (if _t3661 = Protocol.T_I32 then
              _str3660#set_direction (FetchDirection.of_i iprot#readI32)
            else
              iprot#skip _t3661)
          | _ -> iprot#skip _t3661);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3660

class fetchSquareChatEventsResponse =
object (self)
  val mutable _subscription : subscriptionState option = None
  method get_subscription = _subscription
  method grab_subscription = match _subscription with None->raise (Field_empty "fetchSquareChatEventsResponse.subscription") | Some _x3664 -> _x3664
  method set_subscription _x3664 = _subscription <- Some _x3664
  method unset_subscription = _subscription <- None
  method reset_subscription = _subscription <- None

  val mutable _events : squareEvent list option = None
  method get_events = _events
  method grab_events = match _events with None->raise (Field_empty "fetchSquareChatEventsResponse.events") | Some _x3665 -> _x3665
  method set_events _x3665 = _events <- Some _x3665
  method unset_events = _events <- None
  method reset_events = _events <- None

  val mutable _syncToken : string option = None
  method get_syncToken = _syncToken
  method grab_syncToken = match _syncToken with None->raise (Field_empty "fetchSquareChatEventsResponse.syncToken") | Some _x3666 -> _x3666
  method set_syncToken _x3666 = _syncToken <- Some _x3666
  method unset_syncToken = _syncToken <- None
  method reset_syncToken = _syncToken <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "fetchSquareChatEventsResponse.continuationToken") | Some _x3667 -> _x3667
  method set_continuationToken _x3667 = _continuationToken <- Some _x3667
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  method copy =
      let _new = Oo.copy self in
      if _subscription <> None then
        _new#set_subscription self#grab_subscription#copy;
      if _events <> None then
        _new#set_events (List.map (fun x -> x#copy) self#grab_events);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "FetchSquareChatEventsResponse";
    (match _subscription with None -> () | Some _v -> 
      oprot#writeFieldBegin("subscription",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _events with None -> () | Some _v -> 
      oprot#writeFieldBegin("events",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter3670 ->         _iter3670#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _syncToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncToken",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_fetchSquareChatEventsResponse (iprot : Protocol.t) =
  let _str3671 = new fetchSquareChatEventsResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3672,_id3673) = iprot#readFieldBegin in
        if _t3672 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3673 with 
          | 1 -> (if _t3672 = Protocol.T_STRUCT then
              _str3671#set_subscription (read_subscriptionState iprot)
            else
              iprot#skip _t3672)
          | 2 -> (if _t3672 = Protocol.T_LIST then
              _str3671#set_events 
                (let (_etype3677,_size3674) = iprot#readListBegin in
                  let _con3678 = (Array.to_list (Array.init _size3674 (fun _ -> (read_squareEvent iprot)))) in
                    iprot#readListEnd; _con3678)
            else
              iprot#skip _t3672)
          | 3 -> (if _t3672 = Protocol.T_STRING then
              _str3671#set_syncToken iprot#readString
            else
              iprot#skip _t3672)
          | 4 -> (if _t3672 = Protocol.T_STRING then
              _str3671#set_continuationToken iprot#readString
            else
              iprot#skip _t3672)
          | _ -> iprot#skip _t3672);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3671

class inviteToSquareRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "inviteToSquareRequest.squareMid") | Some _x3680 -> _x3680
  method set_squareMid _x3680 = _squareMid <- Some _x3680
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _invitees : string list option = None
  method get_invitees = _invitees
  method grab_invitees = match _invitees with None->raise (Field_empty "inviteToSquareRequest.invitees") | Some _x3681 -> _x3681
  method set_invitees _x3681 = _invitees <- Some _x3681
  method unset_invitees = _invitees <- None
  method reset_invitees = _invitees <- None

  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "inviteToSquareRequest.squareChatMid") | Some _x3682 -> _x3682
  method set_squareChatMid _x3682 = _squareChatMid <- Some _x3682
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "InviteToSquareRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _invitees with None -> () | Some _v -> 
      oprot#writeFieldBegin("invitees",Protocol.T_LIST,3);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter3685 ->         oprot#writeString(_iter3685);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_inviteToSquareRequest (iprot : Protocol.t) =
  let _str3686 = new inviteToSquareRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3687,_id3688) = iprot#readFieldBegin in
        if _t3687 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3688 with 
          | 2 -> (if _t3687 = Protocol.T_STRING then
              _str3686#set_squareMid iprot#readString
            else
              iprot#skip _t3687)
          | 3 -> (if _t3687 = Protocol.T_LIST then
              _str3686#set_invitees 
                (let (_etype3692,_size3689) = iprot#readListBegin in
                  let _con3693 = (Array.to_list (Array.init _size3689 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con3693)
            else
              iprot#skip _t3687)
          | 4 -> (if _t3687 = Protocol.T_STRING then
              _str3686#set_squareChatMid iprot#readString
            else
              iprot#skip _t3687)
          | _ -> iprot#skip _t3687);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3686

class inviteToSquareResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "InviteToSquareResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_inviteToSquareResponse (iprot : Protocol.t) =
  let _str3697 = new inviteToSquareResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3698,_id3699) = iprot#readFieldBegin in
        if _t3698 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3699 with 
          | _ -> iprot#skip _t3698);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3697

class inviteToSquareChatRequest =
object (self)
  val mutable _inviteeMids : string list option = None
  method get_inviteeMids = _inviteeMids
  method grab_inviteeMids = match _inviteeMids with None->raise (Field_empty "inviteToSquareChatRequest.inviteeMids") | Some _x3701 -> _x3701
  method set_inviteeMids _x3701 = _inviteeMids <- Some _x3701
  method unset_inviteeMids = _inviteeMids <- None
  method reset_inviteeMids = _inviteeMids <- None

  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "inviteToSquareChatRequest.squareChatMid") | Some _x3702 -> _x3702
  method set_squareChatMid _x3702 = _squareChatMid <- Some _x3702
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "InviteToSquareChatRequest";
    (match _inviteeMids with None -> () | Some _v -> 
      oprot#writeFieldBegin("inviteeMids",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter3705 ->         oprot#writeString(_iter3705);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_inviteToSquareChatRequest (iprot : Protocol.t) =
  let _str3706 = new inviteToSquareChatRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3707,_id3708) = iprot#readFieldBegin in
        if _t3707 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3708 with 
          | 1 -> (if _t3707 = Protocol.T_LIST then
              _str3706#set_inviteeMids 
                (let (_etype3712,_size3709) = iprot#readListBegin in
                  let _con3713 = (Array.to_list (Array.init _size3709 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con3713)
            else
              iprot#skip _t3707)
          | 2 -> (if _t3707 = Protocol.T_STRING then
              _str3706#set_squareChatMid iprot#readString
            else
              iprot#skip _t3707)
          | _ -> iprot#skip _t3707);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3706

class inviteToSquareChatResponse =
object (self)
  val mutable _inviteeMids : string list option = None
  method get_inviteeMids = _inviteeMids
  method grab_inviteeMids = match _inviteeMids with None->raise (Field_empty "inviteToSquareChatResponse.inviteeMids") | Some _x3715 -> _x3715
  method set_inviteeMids _x3715 = _inviteeMids <- Some _x3715
  method unset_inviteeMids = _inviteeMids <- None
  method reset_inviteeMids = _inviteeMids <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "InviteToSquareChatResponse";
    (match _inviteeMids with None -> () | Some _v -> 
      oprot#writeFieldBegin("inviteeMids",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter3718 ->         oprot#writeString(_iter3718);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_inviteToSquareChatResponse (iprot : Protocol.t) =
  let _str3719 = new inviteToSquareChatResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3720,_id3721) = iprot#readFieldBegin in
        if _t3720 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3721 with 
          | 1 -> (if _t3720 = Protocol.T_LIST then
              _str3719#set_inviteeMids 
                (let (_etype3725,_size3722) = iprot#readListBegin in
                  let _con3726 = (Array.to_list (Array.init _size3722 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con3726)
            else
              iprot#skip _t3720)
          | _ -> iprot#skip _t3720);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3719

class getSquareMemberRequest =
object (self)
  val mutable _squareMemberMid : string option = None
  method get_squareMemberMid = _squareMemberMid
  method grab_squareMemberMid = match _squareMemberMid with None->raise (Field_empty "getSquareMemberRequest.squareMemberMid") | Some _x3728 -> _x3728
  method set_squareMemberMid _x3728 = _squareMemberMid <- Some _x3728
  method unset_squareMemberMid = _squareMemberMid <- None
  method reset_squareMemberMid = _squareMemberMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareMemberRequest";
    (match _squareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMemberMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareMemberRequest (iprot : Protocol.t) =
  let _str3731 = new getSquareMemberRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3732,_id3733) = iprot#readFieldBegin in
        if _t3732 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3733 with 
          | 1 -> (if _t3732 = Protocol.T_STRING then
              _str3731#set_squareMemberMid iprot#readString
            else
              iprot#skip _t3732)
          | _ -> iprot#skip _t3732);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3731

class getSquareMemberResponse =
object (self)
  val mutable _squareMember : squareMember option = None
  method get_squareMember = _squareMember
  method grab_squareMember = match _squareMember with None->raise (Field_empty "getSquareMemberResponse.squareMember") | Some _x3735 -> _x3735
  method set_squareMember _x3735 = _squareMember <- Some _x3735
  method unset_squareMember = _squareMember <- None
  method reset_squareMember = _squareMember <- None

  val mutable _relation : squareMemberRelation option = None
  method get_relation = _relation
  method grab_relation = match _relation with None->raise (Field_empty "getSquareMemberResponse.relation") | Some _x3736 -> _x3736
  method set_relation _x3736 = _relation <- Some _x3736
  method unset_relation = _relation <- None
  method reset_relation = _relation <- None

  val mutable _oneOnOneChatMid : string option = None
  method get_oneOnOneChatMid = _oneOnOneChatMid
  method grab_oneOnOneChatMid = match _oneOnOneChatMid with None->raise (Field_empty "getSquareMemberResponse.oneOnOneChatMid") | Some _x3737 -> _x3737
  method set_oneOnOneChatMid _x3737 = _oneOnOneChatMid <- Some _x3737
  method unset_oneOnOneChatMid = _oneOnOneChatMid <- None
  method reset_oneOnOneChatMid = _oneOnOneChatMid <- None

  method copy =
      let _new = Oo.copy self in
      if _squareMember <> None then
        _new#set_squareMember self#grab_squareMember#copy;
      if _relation <> None then
        _new#set_relation self#grab_relation#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareMemberResponse";
    (match _squareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMember",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _relation with None -> () | Some _v -> 
      oprot#writeFieldBegin("relation",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _oneOnOneChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("oneOnOneChatMid",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareMemberResponse (iprot : Protocol.t) =
  let _str3740 = new getSquareMemberResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3741,_id3742) = iprot#readFieldBegin in
        if _t3741 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3742 with 
          | 1 -> (if _t3741 = Protocol.T_STRUCT then
              _str3740#set_squareMember (read_squareMember iprot)
            else
              iprot#skip _t3741)
          | 2 -> (if _t3741 = Protocol.T_STRUCT then
              _str3740#set_relation (read_squareMemberRelation iprot)
            else
              iprot#skip _t3741)
          | 3 -> (if _t3741 = Protocol.T_STRING then
              _str3740#set_oneOnOneChatMid iprot#readString
            else
              iprot#skip _t3741)
          | _ -> iprot#skip _t3741);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3740

class getSquareMembersRequest =
object (self)
  val mutable _mids : (string,bool) Hashtbl.t option = None
  method get_mids = _mids
  method grab_mids = match _mids with None->raise (Field_empty "getSquareMembersRequest.mids") | Some _x3744 -> _x3744
  method set_mids _x3744 = _mids <- Some _x3744
  method unset_mids = _mids <- None
  method reset_mids = _mids <- None

  method copy =
      let _new = Oo.copy self in
      if _mids <> None then
        _new#set_mids (Hashtbl.copy self#grab_mids);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareMembersRequest";
    (match _mids with None -> () | Some _v -> 
      oprot#writeFieldBegin("mids",Protocol.T_SET,2);
      oprot#writeSetBegin(Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _iter3747 -> fun _ ->         oprot#writeString(_iter3747);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareMembersRequest (iprot : Protocol.t) =
  let _str3748 = new getSquareMembersRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3749,_id3750) = iprot#readFieldBegin in
        if _t3749 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3750 with 
          | 2 -> (if _t3749 = Protocol.T_SET then
              _str3748#set_mids 
                (let (_etype3754,_size3751) = iprot#readSetBegin in
                let _con3755 = Hashtbl.create _size3751 in
                  for i = 1 to _size3751 do
                    Hashtbl.add _con3755 iprot#readString true
                  done; iprot#readSetEnd; _con3755)
            else
              iprot#skip _t3749)
          | _ -> iprot#skip _t3749);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3748

class getSquareMembersResponse =
object (self)
  val mutable _members : squareMember option = None
  method get_members = _members
  method grab_members = match _members with None->raise (Field_empty "getSquareMembersResponse.members") | Some _x3757 -> _x3757
  method set_members _x3757 = _members <- Some _x3757
  method unset_members = _members <- None
  method reset_members = _members <- None

  method copy =
      let _new = Oo.copy self in
      if _members <> None then
        _new#set_members self#grab_members#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareMembersResponse";
    (match _members with None -> () | Some _v -> 
      oprot#writeFieldBegin("members",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareMembersResponse (iprot : Protocol.t) =
  let _str3760 = new getSquareMembersResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3761,_id3762) = iprot#readFieldBegin in
        if _t3761 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3762 with 
          | 1 -> (if _t3761 = Protocol.T_STRUCT then
              _str3760#set_members (read_squareMember iprot)
            else
              iprot#skip _t3761)
          | _ -> iprot#skip _t3761);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3760

class getSquareMemberRelationsRequest =
object (self)
  val mutable _state : SquareMemberRelationState.t option = None
  method get_state = _state
  method grab_state = match _state with None->raise (Field_empty "getSquareMemberRelationsRequest.state") | Some _x3764 -> _x3764
  method set_state _x3764 = _state <- Some _x3764
  method unset_state = _state <- None
  method reset_state = _state <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getSquareMemberRelationsRequest.continuationToken") | Some _x3765 -> _x3765
  method set_continuationToken _x3765 = _continuationToken <- Some _x3765
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _limit : Int32.t option = None
  method get_limit = _limit
  method grab_limit = match _limit with None->raise (Field_empty "getSquareMemberRelationsRequest.limit") | Some _x3766 -> _x3766
  method set_limit _x3766 = _limit <- Some _x3766
  method unset_limit = _limit <- None
  method reset_limit = _limit <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareMemberRelationsRequest";
    (match _state with None -> () | Some _v -> 
      oprot#writeFieldBegin("state",Protocol.T_I32,2);
      oprot#writeI32(SquareMemberRelationState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _limit with None -> () | Some _v -> 
      oprot#writeFieldBegin("limit",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareMemberRelationsRequest (iprot : Protocol.t) =
  let _str3769 = new getSquareMemberRelationsRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3770,_id3771) = iprot#readFieldBegin in
        if _t3770 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3771 with 
          | 2 -> (if _t3770 = Protocol.T_I32 then
              _str3769#set_state (SquareMemberRelationState.of_i iprot#readI32)
            else
              iprot#skip _t3770)
          | 3 -> (if _t3770 = Protocol.T_STRING then
              _str3769#set_continuationToken iprot#readString
            else
              iprot#skip _t3770)
          | 4 -> (if _t3770 = Protocol.T_I32 then
              _str3769#set_limit iprot#readI32
            else
              iprot#skip _t3770)
          | _ -> iprot#skip _t3770);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3769

class getSquareMemberRelationsResponse =
object (self)
  val mutable _squareMembers : squareMember list option = None
  method get_squareMembers = _squareMembers
  method grab_squareMembers = match _squareMembers with None->raise (Field_empty "getSquareMemberRelationsResponse.squareMembers") | Some _x3773 -> _x3773
  method set_squareMembers _x3773 = _squareMembers <- Some _x3773
  method unset_squareMembers = _squareMembers <- None
  method reset_squareMembers = _squareMembers <- None

  val mutable _relations : (string,squareMemberRelation) Hashtbl.t option = None
  method get_relations = _relations
  method grab_relations = match _relations with None->raise (Field_empty "getSquareMemberRelationsResponse.relations") | Some _x3774 -> _x3774
  method set_relations _x3774 = _relations <- Some _x3774
  method unset_relations = _relations <- None
  method reset_relations = _relations <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getSquareMemberRelationsResponse.continuationToken") | Some _x3775 -> _x3775
  method set_continuationToken _x3775 = _continuationToken <- Some _x3775
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  method copy =
      let _new = Oo.copy self in
      if _squareMembers <> None then
        _new#set_squareMembers (List.map (fun x -> x#copy) self#grab_squareMembers);
      if _relations <> None then
        _new#set_relations ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_relations);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareMemberRelationsResponse";
    (match _squareMembers with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMembers",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter3778 ->         _iter3778#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _relations with None -> () | Some _v -> 
      oprot#writeFieldBegin("relations",Protocol.T_MAP,2);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter3779 -> fun _viter3780 -> 
        oprot#writeString(_kiter3779);
        _viter3780#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareMemberRelationsResponse (iprot : Protocol.t) =
  let _str3781 = new getSquareMemberRelationsResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3782,_id3783) = iprot#readFieldBegin in
        if _t3782 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3783 with 
          | 1 -> (if _t3782 = Protocol.T_LIST then
              _str3781#set_squareMembers 
                (let (_etype3787,_size3784) = iprot#readListBegin in
                  let _con3788 = (Array.to_list (Array.init _size3784 (fun _ -> (read_squareMember iprot)))) in
                    iprot#readListEnd; _con3788)
            else
              iprot#skip _t3782)
          | 2 -> (if _t3782 = Protocol.T_MAP then
              _str3781#set_relations 
                (let (_ktype3790,_vtype3791,_size3789) = iprot#readMapBegin in
                let _con3793 = Hashtbl.create _size3789 in
                  for i = 1 to _size3789 do
                    let _k = iprot#readString in
                    let _v = (read_squareMemberRelation iprot) in
                      Hashtbl.add _con3793 _k _v
                  done; iprot#readMapEnd; _con3793)
            else
              iprot#skip _t3782)
          | 3 -> (if _t3782 = Protocol.T_STRING then
              _str3781#set_continuationToken iprot#readString
            else
              iprot#skip _t3782)
          | _ -> iprot#skip _t3782);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3781

class getSquareMemberRelationRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "getSquareMemberRelationRequest.squareMid") | Some _x3795 -> _x3795
  method set_squareMid _x3795 = _squareMid <- Some _x3795
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _targetSquareMemberMid : string option = None
  method get_targetSquareMemberMid = _targetSquareMemberMid
  method grab_targetSquareMemberMid = match _targetSquareMemberMid with None->raise (Field_empty "getSquareMemberRelationRequest.targetSquareMemberMid") | Some _x3796 -> _x3796
  method set_targetSquareMemberMid _x3796 = _targetSquareMemberMid <- Some _x3796
  method unset_targetSquareMemberMid = _targetSquareMemberMid <- None
  method reset_targetSquareMemberMid = _targetSquareMemberMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareMemberRelationRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _targetSquareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("targetSquareMemberMid",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareMemberRelationRequest (iprot : Protocol.t) =
  let _str3799 = new getSquareMemberRelationRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3800,_id3801) = iprot#readFieldBegin in
        if _t3800 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3801 with 
          | 2 -> (if _t3800 = Protocol.T_STRING then
              _str3799#set_squareMid iprot#readString
            else
              iprot#skip _t3800)
          | 3 -> (if _t3800 = Protocol.T_STRING then
              _str3799#set_targetSquareMemberMid iprot#readString
            else
              iprot#skip _t3800)
          | _ -> iprot#skip _t3800);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3799

class getSquareMemberRelationResponse =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "getSquareMemberRelationResponse.squareMid") | Some _x3803 -> _x3803
  method set_squareMid _x3803 = _squareMid <- Some _x3803
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _targetSquareMemberMid : string option = None
  method get_targetSquareMemberMid = _targetSquareMemberMid
  method grab_targetSquareMemberMid = match _targetSquareMemberMid with None->raise (Field_empty "getSquareMemberRelationResponse.targetSquareMemberMid") | Some _x3804 -> _x3804
  method set_targetSquareMemberMid _x3804 = _targetSquareMemberMid <- Some _x3804
  method unset_targetSquareMemberMid = _targetSquareMemberMid <- None
  method reset_targetSquareMemberMid = _targetSquareMemberMid <- None

  val mutable _relation : squareMemberRelation option = None
  method get_relation = _relation
  method grab_relation = match _relation with None->raise (Field_empty "getSquareMemberRelationResponse.relation") | Some _x3805 -> _x3805
  method set_relation _x3805 = _relation <- Some _x3805
  method unset_relation = _relation <- None
  method reset_relation = _relation <- None

  method copy =
      let _new = Oo.copy self in
      if _relation <> None then
        _new#set_relation self#grab_relation#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareMemberRelationResponse";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _targetSquareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("targetSquareMemberMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _relation with None -> () | Some _v -> 
      oprot#writeFieldBegin("relation",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareMemberRelationResponse (iprot : Protocol.t) =
  let _str3808 = new getSquareMemberRelationResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3809,_id3810) = iprot#readFieldBegin in
        if _t3809 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3810 with 
          | 1 -> (if _t3809 = Protocol.T_STRING then
              _str3808#set_squareMid iprot#readString
            else
              iprot#skip _t3809)
          | 2 -> (if _t3809 = Protocol.T_STRING then
              _str3808#set_targetSquareMemberMid iprot#readString
            else
              iprot#skip _t3809)
          | 3 -> (if _t3809 = Protocol.T_STRUCT then
              _str3808#set_relation (read_squareMemberRelation iprot)
            else
              iprot#skip _t3809)
          | _ -> iprot#skip _t3809);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3808

class category =
object (self)
  val mutable _id : Int32.t option = None
  method get_id = _id
  method grab_id = match _id with None->raise (Field_empty "category.id") | Some _x3812 -> _x3812
  method set_id _x3812 = _id <- Some _x3812
  method unset_id = _id <- None
  method reset_id = _id <- None

  val mutable _name : string option = None
  method get_name = _name
  method grab_name = match _name with None->raise (Field_empty "category.name") | Some _x3813 -> _x3813
  method set_name _x3813 = _name <- Some _x3813
  method unset_name = _name <- None
  method reset_name = _name <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "Category";
    (match _id with None -> () | Some _v -> 
      oprot#writeFieldBegin("id",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _name with None -> () | Some _v -> 
      oprot#writeFieldBegin("name",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_category (iprot : Protocol.t) =
  let _str3816 = new category in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3817,_id3818) = iprot#readFieldBegin in
        if _t3817 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3818 with 
          | 1 -> (if _t3817 = Protocol.T_I32 then
              _str3816#set_id iprot#readI32
            else
              iprot#skip _t3817)
          | 2 -> (if _t3817 = Protocol.T_STRING then
              _str3816#set_name iprot#readString
            else
              iprot#skip _t3817)
          | _ -> iprot#skip _t3817);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3816

class getSquareCategoriesRequest =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareCategoriesRequest";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareCategoriesRequest (iprot : Protocol.t) =
  let _str3822 = new getSquareCategoriesRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3823,_id3824) = iprot#readFieldBegin in
        if _t3823 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3824 with 
          | _ -> iprot#skip _t3823);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3822

class getSquareCategoriesResponse =
object (self)
  val mutable _categoryList : category list option = None
  method get_categoryList = _categoryList
  method grab_categoryList = match _categoryList with None->raise (Field_empty "getSquareCategoriesResponse.categoryList") | Some _x3826 -> _x3826
  method set_categoryList _x3826 = _categoryList <- Some _x3826
  method unset_categoryList = _categoryList <- None
  method reset_categoryList = _categoryList <- None

  method copy =
      let _new = Oo.copy self in
      if _categoryList <> None then
        _new#set_categoryList (List.map (fun x -> x#copy) self#grab_categoryList);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareCategoriesResponse";
    (match _categoryList with None -> () | Some _v -> 
      oprot#writeFieldBegin("categoryList",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter3829 ->         _iter3829#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareCategoriesResponse (iprot : Protocol.t) =
  let _str3830 = new getSquareCategoriesResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3831,_id3832) = iprot#readFieldBegin in
        if _t3831 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3832 with 
          | 1 -> (if _t3831 = Protocol.T_LIST then
              _str3830#set_categoryList 
                (let (_etype3836,_size3833) = iprot#readListBegin in
                  let _con3837 = (Array.to_list (Array.init _size3833 (fun _ -> (read_category iprot)))) in
                    iprot#readListEnd; _con3837)
            else
              iprot#skip _t3831)
          | _ -> iprot#skip _t3831);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3830

class updateSquareRequest =
object (self)
  val mutable _updatedAttrs : (SquareAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareRequest.updatedAttrs") | Some _x3839 -> _x3839
  method set_updatedAttrs _x3839 = _updatedAttrs <- Some _x3839
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "updateSquareRequest.square") | Some _x3840 -> _x3840
  method set_square _x3840 = _square <- Some _x3840
  method unset_square = _square <- None
  method reset_square = _square <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _square <> None then
        _new#set_square self#grab_square#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareRequest";
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,2);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter3843 -> fun _ ->         oprot#writeI32(SquareAttribute.to_i _iter3843);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareRequest (iprot : Protocol.t) =
  let _str3844 = new updateSquareRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3845,_id3846) = iprot#readFieldBegin in
        if _t3845 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3846 with 
          | 2 -> (if _t3845 = Protocol.T_SET then
              _str3844#set_updatedAttrs 
                (let (_etype3850,_size3847) = iprot#readSetBegin in
                let _con3851 = Hashtbl.create _size3847 in
                  for i = 1 to _size3847 do
                    Hashtbl.add _con3851 (SquareAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con3851)
            else
              iprot#skip _t3845)
          | 3 -> (if _t3845 = Protocol.T_STRUCT then
              _str3844#set_square (read_square iprot)
            else
              iprot#skip _t3845)
          | _ -> iprot#skip _t3845);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3844

class updateSquareResponse =
object (self)
  val mutable _updatedAttrs : (SquareAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareResponse.updatedAttrs") | Some _x3853 -> _x3853
  method set_updatedAttrs _x3853 = _updatedAttrs <- Some _x3853
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "updateSquareResponse.square") | Some _x3854 -> _x3854
  method set_square _x3854 = _square <- Some _x3854
  method unset_square = _square <- None
  method reset_square = _square <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _square <> None then
        _new#set_square self#grab_square#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareResponse";
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,1);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter3857 -> fun _ ->         oprot#writeI32(SquareAttribute.to_i _iter3857);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareResponse (iprot : Protocol.t) =
  let _str3858 = new updateSquareResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3859,_id3860) = iprot#readFieldBegin in
        if _t3859 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3860 with 
          | 1 -> (if _t3859 = Protocol.T_SET then
              _str3858#set_updatedAttrs 
                (let (_etype3864,_size3861) = iprot#readSetBegin in
                let _con3865 = Hashtbl.create _size3861 in
                  for i = 1 to _size3861 do
                    Hashtbl.add _con3865 (SquareAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con3865)
            else
              iprot#skip _t3859)
          | 2 -> (if _t3859 = Protocol.T_STRUCT then
              _str3858#set_square (read_square iprot)
            else
              iprot#skip _t3859)
          | _ -> iprot#skip _t3859);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3858

class searchSquaresRequest =
object (self)
  val mutable _query : string option = None
  method get_query = _query
  method grab_query = match _query with None->raise (Field_empty "searchSquaresRequest.query") | Some _x3867 -> _x3867
  method set_query _x3867 = _query <- Some _x3867
  method unset_query = _query <- None
  method reset_query = _query <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "searchSquaresRequest.continuationToken") | Some _x3868 -> _x3868
  method set_continuationToken _x3868 = _continuationToken <- Some _x3868
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _limit : Int32.t option = None
  method get_limit = _limit
  method grab_limit = match _limit with None->raise (Field_empty "searchSquaresRequest.limit") | Some _x3869 -> _x3869
  method set_limit _x3869 = _limit <- Some _x3869
  method unset_limit = _limit <- None
  method reset_limit = _limit <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SearchSquaresRequest";
    (match _query with None -> () | Some _v -> 
      oprot#writeFieldBegin("query",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _limit with None -> () | Some _v -> 
      oprot#writeFieldBegin("limit",Protocol.T_I32,4);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_searchSquaresRequest (iprot : Protocol.t) =
  let _str3872 = new searchSquaresRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3873,_id3874) = iprot#readFieldBegin in
        if _t3873 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3874 with 
          | 2 -> (if _t3873 = Protocol.T_STRING then
              _str3872#set_query iprot#readString
            else
              iprot#skip _t3873)
          | 3 -> (if _t3873 = Protocol.T_STRING then
              _str3872#set_continuationToken iprot#readString
            else
              iprot#skip _t3873)
          | 4 -> (if _t3873 = Protocol.T_I32 then
              _str3872#set_limit iprot#readI32
            else
              iprot#skip _t3873)
          | _ -> iprot#skip _t3873);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3872

class searchSquaresResponse =
object (self)
  val mutable _squares : square list option = None
  method get_squares = _squares
  method grab_squares = match _squares with None->raise (Field_empty "searchSquaresResponse.squares") | Some _x3876 -> _x3876
  method set_squares _x3876 = _squares <- Some _x3876
  method unset_squares = _squares <- None
  method reset_squares = _squares <- None

  val mutable _squareStatuses : (string,squareStatus) Hashtbl.t option = None
  method get_squareStatuses = _squareStatuses
  method grab_squareStatuses = match _squareStatuses with None->raise (Field_empty "searchSquaresResponse.squareStatuses") | Some _x3877 -> _x3877
  method set_squareStatuses _x3877 = _squareStatuses <- Some _x3877
  method unset_squareStatuses = _squareStatuses <- None
  method reset_squareStatuses = _squareStatuses <- None

  val mutable _myMemberships : (string,squareMember) Hashtbl.t option = None
  method get_myMemberships = _myMemberships
  method grab_myMemberships = match _myMemberships with None->raise (Field_empty "searchSquaresResponse.myMemberships") | Some _x3878 -> _x3878
  method set_myMemberships _x3878 = _myMemberships <- Some _x3878
  method unset_myMemberships = _myMemberships <- None
  method reset_myMemberships = _myMemberships <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "searchSquaresResponse.continuationToken") | Some _x3879 -> _x3879
  method set_continuationToken _x3879 = _continuationToken <- Some _x3879
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _noteStatuses : (string,noteStatus) Hashtbl.t option = None
  method get_noteStatuses = _noteStatuses
  method grab_noteStatuses = match _noteStatuses with None->raise (Field_empty "searchSquaresResponse.noteStatuses") | Some _x3880 -> _x3880
  method set_noteStatuses _x3880 = _noteStatuses <- Some _x3880
  method unset_noteStatuses = _noteStatuses <- None
  method reset_noteStatuses = _noteStatuses <- None

  method copy =
      let _new = Oo.copy self in
      if _squares <> None then
        _new#set_squares (List.map (fun x -> x#copy) self#grab_squares);
      if _squareStatuses <> None then
        _new#set_squareStatuses ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_squareStatuses);
      if _myMemberships <> None then
        _new#set_myMemberships ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_myMemberships);
      if _noteStatuses <> None then
        _new#set_noteStatuses ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_noteStatuses);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SearchSquaresResponse";
    (match _squares with None -> () | Some _v -> 
      oprot#writeFieldBegin("squares",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter3883 ->         _iter3883#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _squareStatuses with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareStatuses",Protocol.T_MAP,2);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter3884 -> fun _viter3885 -> 
        oprot#writeString(_kiter3884);
        _viter3885#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _myMemberships with None -> () | Some _v -> 
      oprot#writeFieldBegin("myMemberships",Protocol.T_MAP,3);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter3886 -> fun _viter3887 -> 
        oprot#writeString(_kiter3886);
        _viter3887#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _noteStatuses with None -> () | Some _v -> 
      oprot#writeFieldBegin("noteStatuses",Protocol.T_MAP,5);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter3888 -> fun _viter3889 -> 
        oprot#writeString(_kiter3888);
        _viter3889#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_searchSquaresResponse (iprot : Protocol.t) =
  let _str3890 = new searchSquaresResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3891,_id3892) = iprot#readFieldBegin in
        if _t3891 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3892 with 
          | 1 -> (if _t3891 = Protocol.T_LIST then
              _str3890#set_squares 
                (let (_etype3896,_size3893) = iprot#readListBegin in
                  let _con3897 = (Array.to_list (Array.init _size3893 (fun _ -> (read_square iprot)))) in
                    iprot#readListEnd; _con3897)
            else
              iprot#skip _t3891)
          | 2 -> (if _t3891 = Protocol.T_MAP then
              _str3890#set_squareStatuses 
                (let (_ktype3899,_vtype3900,_size3898) = iprot#readMapBegin in
                let _con3902 = Hashtbl.create _size3898 in
                  for i = 1 to _size3898 do
                    let _k = iprot#readString in
                    let _v = (read_squareStatus iprot) in
                      Hashtbl.add _con3902 _k _v
                  done; iprot#readMapEnd; _con3902)
            else
              iprot#skip _t3891)
          | 3 -> (if _t3891 = Protocol.T_MAP then
              _str3890#set_myMemberships 
                (let (_ktype3904,_vtype3905,_size3903) = iprot#readMapBegin in
                let _con3907 = Hashtbl.create _size3903 in
                  for i = 1 to _size3903 do
                    let _k = iprot#readString in
                    let _v = (read_squareMember iprot) in
                      Hashtbl.add _con3907 _k _v
                  done; iprot#readMapEnd; _con3907)
            else
              iprot#skip _t3891)
          | 4 -> (if _t3891 = Protocol.T_STRING then
              _str3890#set_continuationToken iprot#readString
            else
              iprot#skip _t3891)
          | 5 -> (if _t3891 = Protocol.T_MAP then
              _str3890#set_noteStatuses 
                (let (_ktype3909,_vtype3910,_size3908) = iprot#readMapBegin in
                let _con3912 = Hashtbl.create _size3908 in
                  for i = 1 to _size3908 do
                    let _k = iprot#readString in
                    let _v = (read_noteStatus iprot) in
                      Hashtbl.add _con3912 _k _v
                  done; iprot#readMapEnd; _con3912)
            else
              iprot#skip _t3891)
          | _ -> iprot#skip _t3891);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3890

class getSquareFeatureSetRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "getSquareFeatureSetRequest.squareMid") | Some _x3914 -> _x3914
  method set_squareMid _x3914 = _squareMid <- Some _x3914
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareFeatureSetRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareFeatureSetRequest (iprot : Protocol.t) =
  let _str3917 = new getSquareFeatureSetRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3918,_id3919) = iprot#readFieldBegin in
        if _t3918 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3919 with 
          | 2 -> (if _t3918 = Protocol.T_STRING then
              _str3917#set_squareMid iprot#readString
            else
              iprot#skip _t3918)
          | _ -> iprot#skip _t3918);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3917

class getSquareFeatureSetResponse =
object (self)
  val mutable _squareFeatureSet : squareFeatureSet option = None
  method get_squareFeatureSet = _squareFeatureSet
  method grab_squareFeatureSet = match _squareFeatureSet with None->raise (Field_empty "getSquareFeatureSetResponse.squareFeatureSet") | Some _x3921 -> _x3921
  method set_squareFeatureSet _x3921 = _squareFeatureSet <- Some _x3921
  method unset_squareFeatureSet = _squareFeatureSet <- None
  method reset_squareFeatureSet = _squareFeatureSet <- None

  method copy =
      let _new = Oo.copy self in
      if _squareFeatureSet <> None then
        _new#set_squareFeatureSet self#grab_squareFeatureSet#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareFeatureSetResponse";
    (match _squareFeatureSet with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareFeatureSet",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareFeatureSetResponse (iprot : Protocol.t) =
  let _str3924 = new getSquareFeatureSetResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3925,_id3926) = iprot#readFieldBegin in
        if _t3925 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3926 with 
          | 1 -> (if _t3925 = Protocol.T_STRUCT then
              _str3924#set_squareFeatureSet (read_squareFeatureSet iprot)
            else
              iprot#skip _t3925)
          | _ -> iprot#skip _t3925);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3924

class updateSquareFeatureSetRequest =
object (self)
  val mutable _updateAttributes : (SquareFeatureSetAttribute.t,bool) Hashtbl.t option = None
  method get_updateAttributes = _updateAttributes
  method grab_updateAttributes = match _updateAttributes with None->raise (Field_empty "updateSquareFeatureSetRequest.updateAttributes") | Some _x3928 -> _x3928
  method set_updateAttributes _x3928 = _updateAttributes <- Some _x3928
  method unset_updateAttributes = _updateAttributes <- None
  method reset_updateAttributes = _updateAttributes <- None

  val mutable _squareFeatureSet : squareFeatureSet option = None
  method get_squareFeatureSet = _squareFeatureSet
  method grab_squareFeatureSet = match _squareFeatureSet with None->raise (Field_empty "updateSquareFeatureSetRequest.squareFeatureSet") | Some _x3929 -> _x3929
  method set_squareFeatureSet _x3929 = _squareFeatureSet <- Some _x3929
  method unset_squareFeatureSet = _squareFeatureSet <- None
  method reset_squareFeatureSet = _squareFeatureSet <- None

  method copy =
      let _new = Oo.copy self in
      if _updateAttributes <> None then
        _new#set_updateAttributes (Hashtbl.copy self#grab_updateAttributes);
      if _squareFeatureSet <> None then
        _new#set_squareFeatureSet self#grab_squareFeatureSet#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareFeatureSetRequest";
    (match _updateAttributes with None -> () | Some _v -> 
      oprot#writeFieldBegin("updateAttributes",Protocol.T_SET,2);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter3932 -> fun _ ->         oprot#writeI32(SquareFeatureSetAttribute.to_i _iter3932);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _squareFeatureSet with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareFeatureSet",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareFeatureSetRequest (iprot : Protocol.t) =
  let _str3933 = new updateSquareFeatureSetRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3934,_id3935) = iprot#readFieldBegin in
        if _t3934 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3935 with 
          | 2 -> (if _t3934 = Protocol.T_SET then
              _str3933#set_updateAttributes 
                (let (_etype3939,_size3936) = iprot#readSetBegin in
                let _con3940 = Hashtbl.create _size3936 in
                  for i = 1 to _size3936 do
                    Hashtbl.add _con3940 (SquareFeatureSetAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con3940)
            else
              iprot#skip _t3934)
          | 3 -> (if _t3934 = Protocol.T_STRUCT then
              _str3933#set_squareFeatureSet (read_squareFeatureSet iprot)
            else
              iprot#skip _t3934)
          | _ -> iprot#skip _t3934);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3933

class updateSquareFeatureSetResponse =
object (self)
  val mutable _updateAttributes : (SquareFeatureSetAttribute.t,bool) Hashtbl.t option = None
  method get_updateAttributes = _updateAttributes
  method grab_updateAttributes = match _updateAttributes with None->raise (Field_empty "updateSquareFeatureSetResponse.updateAttributes") | Some _x3942 -> _x3942
  method set_updateAttributes _x3942 = _updateAttributes <- Some _x3942
  method unset_updateAttributes = _updateAttributes <- None
  method reset_updateAttributes = _updateAttributes <- None

  val mutable _squareFeatureSet : squareFeatureSet option = None
  method get_squareFeatureSet = _squareFeatureSet
  method grab_squareFeatureSet = match _squareFeatureSet with None->raise (Field_empty "updateSquareFeatureSetResponse.squareFeatureSet") | Some _x3943 -> _x3943
  method set_squareFeatureSet _x3943 = _squareFeatureSet <- Some _x3943
  method unset_squareFeatureSet = _squareFeatureSet <- None
  method reset_squareFeatureSet = _squareFeatureSet <- None

  method copy =
      let _new = Oo.copy self in
      if _updateAttributes <> None then
        _new#set_updateAttributes (Hashtbl.copy self#grab_updateAttributes);
      if _squareFeatureSet <> None then
        _new#set_squareFeatureSet self#grab_squareFeatureSet#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareFeatureSetResponse";
    (match _updateAttributes with None -> () | Some _v -> 
      oprot#writeFieldBegin("updateAttributes",Protocol.T_SET,1);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter3946 -> fun _ ->         oprot#writeI32(SquareFeatureSetAttribute.to_i _iter3946);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _squareFeatureSet with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareFeatureSet",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareFeatureSetResponse (iprot : Protocol.t) =
  let _str3947 = new updateSquareFeatureSetResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3948,_id3949) = iprot#readFieldBegin in
        if _t3948 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3949 with 
          | 1 -> (if _t3948 = Protocol.T_SET then
              _str3947#set_updateAttributes 
                (let (_etype3953,_size3950) = iprot#readSetBegin in
                let _con3954 = Hashtbl.create _size3950 in
                  for i = 1 to _size3950 do
                    Hashtbl.add _con3954 (SquareFeatureSetAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con3954)
            else
              iprot#skip _t3948)
          | 2 -> (if _t3948 = Protocol.T_STRUCT then
              _str3947#set_squareFeatureSet (read_squareFeatureSet iprot)
            else
              iprot#skip _t3948)
          | _ -> iprot#skip _t3948);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3947

class updateSquareMemberRequest =
object (self)
  val mutable _updatedAttrs : (SquareMemberAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareMemberRequest.updatedAttrs") | Some _x3956 -> _x3956
  method set_updatedAttrs _x3956 = _updatedAttrs <- Some _x3956
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _updatedPreferenceAttrs : (SquarePreferenceAttribute.t,bool) Hashtbl.t option = None
  method get_updatedPreferenceAttrs = _updatedPreferenceAttrs
  method grab_updatedPreferenceAttrs = match _updatedPreferenceAttrs with None->raise (Field_empty "updateSquareMemberRequest.updatedPreferenceAttrs") | Some _x3957 -> _x3957
  method set_updatedPreferenceAttrs _x3957 = _updatedPreferenceAttrs <- Some _x3957
  method unset_updatedPreferenceAttrs = _updatedPreferenceAttrs <- None
  method reset_updatedPreferenceAttrs = _updatedPreferenceAttrs <- None

  val mutable _squareMember : squareMember option = None
  method get_squareMember = _squareMember
  method grab_squareMember = match _squareMember with None->raise (Field_empty "updateSquareMemberRequest.squareMember") | Some _x3958 -> _x3958
  method set_squareMember _x3958 = _squareMember <- Some _x3958
  method unset_squareMember = _squareMember <- None
  method reset_squareMember = _squareMember <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _updatedPreferenceAttrs <> None then
        _new#set_updatedPreferenceAttrs (Hashtbl.copy self#grab_updatedPreferenceAttrs);
      if _squareMember <> None then
        _new#set_squareMember self#grab_squareMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareMemberRequest";
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,2);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter3961 -> fun _ ->         oprot#writeI32(SquareMemberAttribute.to_i _iter3961);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _updatedPreferenceAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedPreferenceAttrs",Protocol.T_SET,3);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter3962 -> fun _ ->         oprot#writeI32(SquarePreferenceAttribute.to_i _iter3962);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _squareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMember",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareMemberRequest (iprot : Protocol.t) =
  let _str3963 = new updateSquareMemberRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3964,_id3965) = iprot#readFieldBegin in
        if _t3964 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3965 with 
          | 2 -> (if _t3964 = Protocol.T_SET then
              _str3963#set_updatedAttrs 
                (let (_etype3969,_size3966) = iprot#readSetBegin in
                let _con3970 = Hashtbl.create _size3966 in
                  for i = 1 to _size3966 do
                    Hashtbl.add _con3970 (SquareMemberAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con3970)
            else
              iprot#skip _t3964)
          | 3 -> (if _t3964 = Protocol.T_SET then
              _str3963#set_updatedPreferenceAttrs 
                (let (_etype3974,_size3971) = iprot#readSetBegin in
                let _con3975 = Hashtbl.create _size3971 in
                  for i = 1 to _size3971 do
                    Hashtbl.add _con3975 (SquarePreferenceAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con3975)
            else
              iprot#skip _t3964)
          | 4 -> (if _t3964 = Protocol.T_STRUCT then
              _str3963#set_squareMember (read_squareMember iprot)
            else
              iprot#skip _t3964)
          | _ -> iprot#skip _t3964);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3963

class updateSquareMemberResponse =
object (self)
  val mutable _updatedAttrs : (SquareMemberAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareMemberResponse.updatedAttrs") | Some _x3977 -> _x3977
  method set_updatedAttrs _x3977 = _updatedAttrs <- Some _x3977
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _squareMember : squareMember option = None
  method get_squareMember = _squareMember
  method grab_squareMember = match _squareMember with None->raise (Field_empty "updateSquareMemberResponse.squareMember") | Some _x3978 -> _x3978
  method set_squareMember _x3978 = _squareMember <- Some _x3978
  method unset_squareMember = _squareMember <- None
  method reset_squareMember = _squareMember <- None

  val mutable _updatedPreferenceAttrs : (SquarePreferenceAttribute.t,bool) Hashtbl.t option = None
  method get_updatedPreferenceAttrs = _updatedPreferenceAttrs
  method grab_updatedPreferenceAttrs = match _updatedPreferenceAttrs with None->raise (Field_empty "updateSquareMemberResponse.updatedPreferenceAttrs") | Some _x3979 -> _x3979
  method set_updatedPreferenceAttrs _x3979 = _updatedPreferenceAttrs <- Some _x3979
  method unset_updatedPreferenceAttrs = _updatedPreferenceAttrs <- None
  method reset_updatedPreferenceAttrs = _updatedPreferenceAttrs <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _squareMember <> None then
        _new#set_squareMember self#grab_squareMember#copy;
      if _updatedPreferenceAttrs <> None then
        _new#set_updatedPreferenceAttrs (Hashtbl.copy self#grab_updatedPreferenceAttrs);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareMemberResponse";
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,1);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter3982 -> fun _ ->         oprot#writeI32(SquareMemberAttribute.to_i _iter3982);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _squareMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMember",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _updatedPreferenceAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedPreferenceAttrs",Protocol.T_SET,3);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter3983 -> fun _ ->         oprot#writeI32(SquarePreferenceAttribute.to_i _iter3983);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareMemberResponse (iprot : Protocol.t) =
  let _str3984 = new updateSquareMemberResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t3985,_id3986) = iprot#readFieldBegin in
        if _t3985 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id3986 with 
          | 1 -> (if _t3985 = Protocol.T_SET then
              _str3984#set_updatedAttrs 
                (let (_etype3990,_size3987) = iprot#readSetBegin in
                let _con3991 = Hashtbl.create _size3987 in
                  for i = 1 to _size3987 do
                    Hashtbl.add _con3991 (SquareMemberAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con3991)
            else
              iprot#skip _t3985)
          | 2 -> (if _t3985 = Protocol.T_STRUCT then
              _str3984#set_squareMember (read_squareMember iprot)
            else
              iprot#skip _t3985)
          | 3 -> (if _t3985 = Protocol.T_SET then
              _str3984#set_updatedPreferenceAttrs 
                (let (_etype3995,_size3992) = iprot#readSetBegin in
                let _con3996 = Hashtbl.create _size3992 in
                  for i = 1 to _size3992 do
                    Hashtbl.add _con3996 (SquarePreferenceAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con3996)
            else
              iprot#skip _t3985)
          | _ -> iprot#skip _t3985);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str3984

class updateSquareMembersRequest =
object (self)
  val mutable _updatedAttrs : (SquareMemberAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareMembersRequest.updatedAttrs") | Some _x3998 -> _x3998
  method set_updatedAttrs _x3998 = _updatedAttrs <- Some _x3998
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _members : squareMember list option = None
  method get_members = _members
  method grab_members = match _members with None->raise (Field_empty "updateSquareMembersRequest.members") | Some _x3999 -> _x3999
  method set_members _x3999 = _members <- Some _x3999
  method unset_members = _members <- None
  method reset_members = _members <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _members <> None then
        _new#set_members (List.map (fun x -> x#copy) self#grab_members);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareMembersRequest";
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,2);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter4002 -> fun _ ->         oprot#writeI32(SquareMemberAttribute.to_i _iter4002);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _members with None -> () | Some _v -> 
      oprot#writeFieldBegin("members",Protocol.T_LIST,3);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter4003 ->         _iter4003#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareMembersRequest (iprot : Protocol.t) =
  let _str4004 = new updateSquareMembersRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4005,_id4006) = iprot#readFieldBegin in
        if _t4005 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4006 with 
          | 2 -> (if _t4005 = Protocol.T_SET then
              _str4004#set_updatedAttrs 
                (let (_etype4010,_size4007) = iprot#readSetBegin in
                let _con4011 = Hashtbl.create _size4007 in
                  for i = 1 to _size4007 do
                    Hashtbl.add _con4011 (SquareMemberAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con4011)
            else
              iprot#skip _t4005)
          | 3 -> (if _t4005 = Protocol.T_LIST then
              _str4004#set_members 
                (let (_etype4015,_size4012) = iprot#readListBegin in
                  let _con4016 = (Array.to_list (Array.init _size4012 (fun _ -> (read_squareMember iprot)))) in
                    iprot#readListEnd; _con4016)
            else
              iprot#skip _t4005)
          | _ -> iprot#skip _t4005);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4004

class updateSquareMembersResponse =
object (self)
  val mutable _updatedAttrs : (SquareMemberAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareMembersResponse.updatedAttrs") | Some _x4018 -> _x4018
  method set_updatedAttrs _x4018 = _updatedAttrs <- Some _x4018
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _editor : squareMember option = None
  method get_editor = _editor
  method grab_editor = match _editor with None->raise (Field_empty "updateSquareMembersResponse.editor") | Some _x4019 -> _x4019
  method set_editor _x4019 = _editor <- Some _x4019
  method unset_editor = _editor <- None
  method reset_editor = _editor <- None

  val mutable _members : (string,squareMember) Hashtbl.t option = None
  method get_members = _members
  method grab_members = match _members with None->raise (Field_empty "updateSquareMembersResponse.members") | Some _x4020 -> _x4020
  method set_members _x4020 = _members <- Some _x4020
  method unset_members = _members <- None
  method reset_members = _members <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _editor <> None then
        _new#set_editor self#grab_editor#copy;
      if _members <> None then
        _new#set_members ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_members);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareMembersResponse";
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,1);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter4023 -> fun _ ->         oprot#writeI32(SquareMemberAttribute.to_i _iter4023);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _editor with None -> () | Some _v -> 
      oprot#writeFieldBegin("editor",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _members with None -> () | Some _v -> 
      oprot#writeFieldBegin("members",Protocol.T_MAP,3);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter4024 -> fun _viter4025 -> 
        oprot#writeString(_kiter4024);
        _viter4025#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareMembersResponse (iprot : Protocol.t) =
  let _str4026 = new updateSquareMembersResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4027,_id4028) = iprot#readFieldBegin in
        if _t4027 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4028 with 
          | 1 -> (if _t4027 = Protocol.T_SET then
              _str4026#set_updatedAttrs 
                (let (_etype4032,_size4029) = iprot#readSetBegin in
                let _con4033 = Hashtbl.create _size4029 in
                  for i = 1 to _size4029 do
                    Hashtbl.add _con4033 (SquareMemberAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con4033)
            else
              iprot#skip _t4027)
          | 2 -> (if _t4027 = Protocol.T_STRUCT then
              _str4026#set_editor (read_squareMember iprot)
            else
              iprot#skip _t4027)
          | 3 -> (if _t4027 = Protocol.T_MAP then
              _str4026#set_members 
                (let (_ktype4035,_vtype4036,_size4034) = iprot#readMapBegin in
                let _con4038 = Hashtbl.create _size4034 in
                  for i = 1 to _size4034 do
                    let _k = iprot#readString in
                    let _v = (read_squareMember iprot) in
                      Hashtbl.add _con4038 _k _v
                  done; iprot#readMapEnd; _con4038)
            else
              iprot#skip _t4027)
          | _ -> iprot#skip _t4027);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4026

class rejectSquareMembersRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "rejectSquareMembersRequest.squareMid") | Some _x4040 -> _x4040
  method set_squareMid _x4040 = _squareMid <- Some _x4040
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _requestedMemberMids : string list option = None
  method get_requestedMemberMids = _requestedMemberMids
  method grab_requestedMemberMids = match _requestedMemberMids with None->raise (Field_empty "rejectSquareMembersRequest.requestedMemberMids") | Some _x4041 -> _x4041
  method set_requestedMemberMids _x4041 = _requestedMemberMids <- Some _x4041
  method unset_requestedMemberMids = _requestedMemberMids <- None
  method reset_requestedMemberMids = _requestedMemberMids <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "RejectSquareMembersRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _requestedMemberMids with None -> () | Some _v -> 
      oprot#writeFieldBegin("requestedMemberMids",Protocol.T_LIST,3);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter4044 ->         oprot#writeString(_iter4044);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_rejectSquareMembersRequest (iprot : Protocol.t) =
  let _str4045 = new rejectSquareMembersRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4046,_id4047) = iprot#readFieldBegin in
        if _t4046 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4047 with 
          | 2 -> (if _t4046 = Protocol.T_STRING then
              _str4045#set_squareMid iprot#readString
            else
              iprot#skip _t4046)
          | 3 -> (if _t4046 = Protocol.T_LIST then
              _str4045#set_requestedMemberMids 
                (let (_etype4051,_size4048) = iprot#readListBegin in
                  let _con4052 = (Array.to_list (Array.init _size4048 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con4052)
            else
              iprot#skip _t4046)
          | _ -> iprot#skip _t4046);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4045

class rejectSquareMembersResponse =
object (self)
  val mutable _rejectedMembers : squareMember list option = None
  method get_rejectedMembers = _rejectedMembers
  method grab_rejectedMembers = match _rejectedMembers with None->raise (Field_empty "rejectSquareMembersResponse.rejectedMembers") | Some _x4054 -> _x4054
  method set_rejectedMembers _x4054 = _rejectedMembers <- Some _x4054
  method unset_rejectedMembers = _rejectedMembers <- None
  method reset_rejectedMembers = _rejectedMembers <- None

  val mutable _status : squareStatus option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "rejectSquareMembersResponse.status") | Some _x4055 -> _x4055
  method set_status _x4055 = _status <- Some _x4055
  method unset_status = _status <- None
  method reset_status = _status <- None

  method copy =
      let _new = Oo.copy self in
      if _rejectedMembers <> None then
        _new#set_rejectedMembers (List.map (fun x -> x#copy) self#grab_rejectedMembers);
      if _status <> None then
        _new#set_status self#grab_status#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "RejectSquareMembersResponse";
    (match _rejectedMembers with None -> () | Some _v -> 
      oprot#writeFieldBegin("rejectedMembers",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter4058 ->         _iter4058#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_rejectSquareMembersResponse (iprot : Protocol.t) =
  let _str4059 = new rejectSquareMembersResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4060,_id4061) = iprot#readFieldBegin in
        if _t4060 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4061 with 
          | 1 -> (if _t4060 = Protocol.T_LIST then
              _str4059#set_rejectedMembers 
                (let (_etype4065,_size4062) = iprot#readListBegin in
                  let _con4066 = (Array.to_list (Array.init _size4062 (fun _ -> (read_squareMember iprot)))) in
                    iprot#readListEnd; _con4066)
            else
              iprot#skip _t4060)
          | 2 -> (if _t4060 = Protocol.T_STRUCT then
              _str4059#set_status (read_squareStatus iprot)
            else
              iprot#skip _t4060)
          | _ -> iprot#skip _t4060);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4059

class removeSubscriptionsRequest =
object (self)
  val mutable _unsubscriptions : Int64.t list option = None
  method get_unsubscriptions = _unsubscriptions
  method grab_unsubscriptions = match _unsubscriptions with None->raise (Field_empty "removeSubscriptionsRequest.unsubscriptions") | Some _x4068 -> _x4068
  method set_unsubscriptions _x4068 = _unsubscriptions <- Some _x4068
  method unset_unsubscriptions = _unsubscriptions <- None
  method reset_unsubscriptions = _unsubscriptions <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "RemoveSubscriptionsRequest";
    (match _unsubscriptions with None -> () | Some _v -> 
      oprot#writeFieldBegin("unsubscriptions",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_I64,List.length _v);
      List.iter (fun _iter4071 ->         oprot#writeI64(_iter4071);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_removeSubscriptionsRequest (iprot : Protocol.t) =
  let _str4072 = new removeSubscriptionsRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4073,_id4074) = iprot#readFieldBegin in
        if _t4073 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4074 with 
          | 2 -> (if _t4073 = Protocol.T_LIST then
              _str4072#set_unsubscriptions 
                (let (_etype4078,_size4075) = iprot#readListBegin in
                  let _con4079 = (Array.to_list (Array.init _size4075 (fun _ -> iprot#readI64))) in
                    iprot#readListEnd; _con4079)
            else
              iprot#skip _t4073)
          | _ -> iprot#skip _t4073);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4072

class removeSubscriptionsResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "RemoveSubscriptionsResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_removeSubscriptionsResponse (iprot : Protocol.t) =
  let _str4083 = new removeSubscriptionsResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4084,_id4085) = iprot#readFieldBegin in
        if _t4084 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4085 with 
          | _ -> iprot#skip _t4084);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4083

class refreshSubscriptionsRequest =
object (self)
  val mutable _subscriptions : Int64.t list option = None
  method get_subscriptions = _subscriptions
  method grab_subscriptions = match _subscriptions with None->raise (Field_empty "refreshSubscriptionsRequest.subscriptions") | Some _x4087 -> _x4087
  method set_subscriptions _x4087 = _subscriptions <- Some _x4087
  method unset_subscriptions = _subscriptions <- None
  method reset_subscriptions = _subscriptions <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "RefreshSubscriptionsRequest";
    (match _subscriptions with None -> () | Some _v -> 
      oprot#writeFieldBegin("subscriptions",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_I64,List.length _v);
      List.iter (fun _iter4090 ->         oprot#writeI64(_iter4090);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_refreshSubscriptionsRequest (iprot : Protocol.t) =
  let _str4091 = new refreshSubscriptionsRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4092,_id4093) = iprot#readFieldBegin in
        if _t4092 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4093 with 
          | 2 -> (if _t4092 = Protocol.T_LIST then
              _str4091#set_subscriptions 
                (let (_etype4097,_size4094) = iprot#readListBegin in
                  let _con4098 = (Array.to_list (Array.init _size4094 (fun _ -> iprot#readI64))) in
                    iprot#readListEnd; _con4098)
            else
              iprot#skip _t4092)
          | _ -> iprot#skip _t4092);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4091

class refreshSubscriptionsResponse =
object (self)
  val mutable _ttlMillis : Int64.t option = None
  method get_ttlMillis = _ttlMillis
  method grab_ttlMillis = match _ttlMillis with None->raise (Field_empty "refreshSubscriptionsResponse.ttlMillis") | Some _x4100 -> _x4100
  method set_ttlMillis _x4100 = _ttlMillis <- Some _x4100
  method unset_ttlMillis = _ttlMillis <- None
  method reset_ttlMillis = _ttlMillis <- None

  val mutable _subscriptionStates : (Int64.t,subscriptionState) Hashtbl.t option = None
  method get_subscriptionStates = _subscriptionStates
  method grab_subscriptionStates = match _subscriptionStates with None->raise (Field_empty "refreshSubscriptionsResponse.subscriptionStates") | Some _x4101 -> _x4101
  method set_subscriptionStates _x4101 = _subscriptionStates <- Some _x4101
  method unset_subscriptionStates = _subscriptionStates <- None
  method reset_subscriptionStates = _subscriptionStates <- None

  method copy =
      let _new = Oo.copy self in
      if _subscriptionStates <> None then
        _new#set_subscriptionStates ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_subscriptionStates);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "RefreshSubscriptionsResponse";
    (match _ttlMillis with None -> () | Some _v -> 
      oprot#writeFieldBegin("ttlMillis",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _subscriptionStates with None -> () | Some _v -> 
      oprot#writeFieldBegin("subscriptionStates",Protocol.T_MAP,2);
      oprot#writeMapBegin(Protocol.T_I64,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter4104 -> fun _viter4105 -> 
        oprot#writeI64(_kiter4104);
        _viter4105#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_refreshSubscriptionsResponse (iprot : Protocol.t) =
  let _str4106 = new refreshSubscriptionsResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4107,_id4108) = iprot#readFieldBegin in
        if _t4107 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4108 with 
          | 1 -> (if _t4107 = Protocol.T_I64 then
              _str4106#set_ttlMillis iprot#readI64
            else
              iprot#skip _t4107)
          | 2 -> (if _t4107 = Protocol.T_MAP then
              _str4106#set_subscriptionStates 
                (let (_ktype4110,_vtype4111,_size4109) = iprot#readMapBegin in
                let _con4113 = Hashtbl.create _size4109 in
                  for i = 1 to _size4109 do
                    let _k = iprot#readI64 in
                    let _v = (read_subscriptionState iprot) in
                      Hashtbl.add _con4113 _k _v
                  done; iprot#readMapEnd; _con4113)
            else
              iprot#skip _t4107)
          | _ -> iprot#skip _t4107);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4106

class updateSquareChatRequest =
object (self)
  val mutable _updatedAttrs : (SquareChatAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareChatRequest.updatedAttrs") | Some _x4115 -> _x4115
  method set_updatedAttrs _x4115 = _updatedAttrs <- Some _x4115
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _squareChat : squareChat option = None
  method get_squareChat = _squareChat
  method grab_squareChat = match _squareChat with None->raise (Field_empty "updateSquareChatRequest.squareChat") | Some _x4116 -> _x4116
  method set_squareChat _x4116 = _squareChat <- Some _x4116
  method unset_squareChat = _squareChat <- None
  method reset_squareChat = _squareChat <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _squareChat <> None then
        _new#set_squareChat self#grab_squareChat#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareChatRequest";
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,2);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter4119 -> fun _ ->         oprot#writeI32(SquareChatAttribute.to_i _iter4119);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _squareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChat",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareChatRequest (iprot : Protocol.t) =
  let _str4120 = new updateSquareChatRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4121,_id4122) = iprot#readFieldBegin in
        if _t4121 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4122 with 
          | 2 -> (if _t4121 = Protocol.T_SET then
              _str4120#set_updatedAttrs 
                (let (_etype4126,_size4123) = iprot#readSetBegin in
                let _con4127 = Hashtbl.create _size4123 in
                  for i = 1 to _size4123 do
                    Hashtbl.add _con4127 (SquareChatAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con4127)
            else
              iprot#skip _t4121)
          | 3 -> (if _t4121 = Protocol.T_STRUCT then
              _str4120#set_squareChat (read_squareChat iprot)
            else
              iprot#skip _t4121)
          | _ -> iprot#skip _t4121);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4120

class updateSquareChatResponse =
object (self)
  val mutable _updatedAttrs : (SquareChatAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareChatResponse.updatedAttrs") | Some _x4129 -> _x4129
  method set_updatedAttrs _x4129 = _updatedAttrs <- Some _x4129
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _squareChat : squareChat option = None
  method get_squareChat = _squareChat
  method grab_squareChat = match _squareChat with None->raise (Field_empty "updateSquareChatResponse.squareChat") | Some _x4130 -> _x4130
  method set_squareChat _x4130 = _squareChat <- Some _x4130
  method unset_squareChat = _squareChat <- None
  method reset_squareChat = _squareChat <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _squareChat <> None then
        _new#set_squareChat self#grab_squareChat#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareChatResponse";
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,1);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter4133 -> fun _ ->         oprot#writeI32(SquareChatAttribute.to_i _iter4133);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _squareChat with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChat",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareChatResponse (iprot : Protocol.t) =
  let _str4134 = new updateSquareChatResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4135,_id4136) = iprot#readFieldBegin in
        if _t4135 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4136 with 
          | 1 -> (if _t4135 = Protocol.T_SET then
              _str4134#set_updatedAttrs 
                (let (_etype4140,_size4137) = iprot#readSetBegin in
                let _con4141 = Hashtbl.create _size4137 in
                  for i = 1 to _size4137 do
                    Hashtbl.add _con4141 (SquareChatAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con4141)
            else
              iprot#skip _t4135)
          | 2 -> (if _t4135 = Protocol.T_STRUCT then
              _str4134#set_squareChat (read_squareChat iprot)
            else
              iprot#skip _t4135)
          | _ -> iprot#skip _t4135);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4134

class deleteSquareChatRequest =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "deleteSquareChatRequest.squareChatMid") | Some _x4143 -> _x4143
  method set_squareChatMid _x4143 = _squareChatMid <- Some _x4143
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _revision : Int64.t option = None
  method get_revision = _revision
  method grab_revision = match _revision with None->raise (Field_empty "deleteSquareChatRequest.revision") | Some _x4144 -> _x4144
  method set_revision _x4144 = _revision <- Some _x4144
  method unset_revision = _revision <- None
  method reset_revision = _revision <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "DeleteSquareChatRequest";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _revision with None -> () | Some _v -> 
      oprot#writeFieldBegin("revision",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_deleteSquareChatRequest (iprot : Protocol.t) =
  let _str4147 = new deleteSquareChatRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4148,_id4149) = iprot#readFieldBegin in
        if _t4148 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4149 with 
          | 2 -> (if _t4148 = Protocol.T_STRING then
              _str4147#set_squareChatMid iprot#readString
            else
              iprot#skip _t4148)
          | 3 -> (if _t4148 = Protocol.T_I64 then
              _str4147#set_revision iprot#readI64
            else
              iprot#skip _t4148)
          | _ -> iprot#skip _t4148);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4147

class deleteSquareChatResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "DeleteSquareChatResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_deleteSquareChatResponse (iprot : Protocol.t) =
  let _str4153 = new deleteSquareChatResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4154,_id4155) = iprot#readFieldBegin in
        if _t4154 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4155 with 
          | _ -> iprot#skip _t4154);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4153

class updateSquareChatMemberRequest =
object (self)
  val mutable _updatedAttrs : (SquareChatMemberAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareChatMemberRequest.updatedAttrs") | Some _x4157 -> _x4157
  method set_updatedAttrs _x4157 = _updatedAttrs <- Some _x4157
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _chatMember : squareChatMember option = None
  method get_chatMember = _chatMember
  method grab_chatMember = match _chatMember with None->raise (Field_empty "updateSquareChatMemberRequest.chatMember") | Some _x4158 -> _x4158
  method set_chatMember _x4158 = _chatMember <- Some _x4158
  method unset_chatMember = _chatMember <- None
  method reset_chatMember = _chatMember <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _chatMember <> None then
        _new#set_chatMember self#grab_chatMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareChatMemberRequest";
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,2);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter4161 -> fun _ ->         oprot#writeI32(SquareChatMemberAttribute.to_i _iter4161);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _chatMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("chatMember",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareChatMemberRequest (iprot : Protocol.t) =
  let _str4162 = new updateSquareChatMemberRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4163,_id4164) = iprot#readFieldBegin in
        if _t4163 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4164 with 
          | 2 -> (if _t4163 = Protocol.T_SET then
              _str4162#set_updatedAttrs 
                (let (_etype4168,_size4165) = iprot#readSetBegin in
                let _con4169 = Hashtbl.create _size4165 in
                  for i = 1 to _size4165 do
                    Hashtbl.add _con4169 (SquareChatMemberAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con4169)
            else
              iprot#skip _t4163)
          | 3 -> (if _t4163 = Protocol.T_STRUCT then
              _str4162#set_chatMember (read_squareChatMember iprot)
            else
              iprot#skip _t4163)
          | _ -> iprot#skip _t4163);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4162

class updateSquareChatMemberResponse =
object (self)
  val mutable _updatedChatMember : squareChatMember option = None
  method get_updatedChatMember = _updatedChatMember
  method grab_updatedChatMember = match _updatedChatMember with None->raise (Field_empty "updateSquareChatMemberResponse.updatedChatMember") | Some _x4171 -> _x4171
  method set_updatedChatMember _x4171 = _updatedChatMember <- Some _x4171
  method unset_updatedChatMember = _updatedChatMember <- None
  method reset_updatedChatMember = _updatedChatMember <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedChatMember <> None then
        _new#set_updatedChatMember self#grab_updatedChatMember#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareChatMemberResponse";
    (match _updatedChatMember with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedChatMember",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareChatMemberResponse (iprot : Protocol.t) =
  let _str4174 = new updateSquareChatMemberResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4175,_id4176) = iprot#readFieldBegin in
        if _t4175 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4176 with 
          | 1 -> (if _t4175 = Protocol.T_STRUCT then
              _str4174#set_updatedChatMember (read_squareChatMember iprot)
            else
              iprot#skip _t4175)
          | _ -> iprot#skip _t4175);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4174

class updateSquareAuthorityRequest =
object (self)
  val mutable _updateAttributes : (SquareAuthorityAttribute.t,bool) Hashtbl.t option = None
  method get_updateAttributes = _updateAttributes
  method grab_updateAttributes = match _updateAttributes with None->raise (Field_empty "updateSquareAuthorityRequest.updateAttributes") | Some _x4178 -> _x4178
  method set_updateAttributes _x4178 = _updateAttributes <- Some _x4178
  method unset_updateAttributes = _updateAttributes <- None
  method reset_updateAttributes = _updateAttributes <- None

  val mutable _authority : squareAuthority option = None
  method get_authority = _authority
  method grab_authority = match _authority with None->raise (Field_empty "updateSquareAuthorityRequest.authority") | Some _x4179 -> _x4179
  method set_authority _x4179 = _authority <- Some _x4179
  method unset_authority = _authority <- None
  method reset_authority = _authority <- None

  method copy =
      let _new = Oo.copy self in
      if _updateAttributes <> None then
        _new#set_updateAttributes (Hashtbl.copy self#grab_updateAttributes);
      if _authority <> None then
        _new#set_authority self#grab_authority#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareAuthorityRequest";
    (match _updateAttributes with None -> () | Some _v -> 
      oprot#writeFieldBegin("updateAttributes",Protocol.T_SET,2);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter4182 -> fun _ ->         oprot#writeI32(SquareAuthorityAttribute.to_i _iter4182);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _authority with None -> () | Some _v -> 
      oprot#writeFieldBegin("authority",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareAuthorityRequest (iprot : Protocol.t) =
  let _str4183 = new updateSquareAuthorityRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4184,_id4185) = iprot#readFieldBegin in
        if _t4184 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4185 with 
          | 2 -> (if _t4184 = Protocol.T_SET then
              _str4183#set_updateAttributes 
                (let (_etype4189,_size4186) = iprot#readSetBegin in
                let _con4190 = Hashtbl.create _size4186 in
                  for i = 1 to _size4186 do
                    Hashtbl.add _con4190 (SquareAuthorityAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con4190)
            else
              iprot#skip _t4184)
          | 3 -> (if _t4184 = Protocol.T_STRUCT then
              _str4183#set_authority (read_squareAuthority iprot)
            else
              iprot#skip _t4184)
          | _ -> iprot#skip _t4184);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4183

class updateSquareAuthorityResponse =
object (self)
  val mutable _updatdAttributes : (SquareAuthorityAttribute.t,bool) Hashtbl.t option = None
  method get_updatdAttributes = _updatdAttributes
  method grab_updatdAttributes = match _updatdAttributes with None->raise (Field_empty "updateSquareAuthorityResponse.updatdAttributes") | Some _x4192 -> _x4192
  method set_updatdAttributes _x4192 = _updatdAttributes <- Some _x4192
  method unset_updatdAttributes = _updatdAttributes <- None
  method reset_updatdAttributes = _updatdAttributes <- None

  val mutable _authority : squareAuthority option = None
  method get_authority = _authority
  method grab_authority = match _authority with None->raise (Field_empty "updateSquareAuthorityResponse.authority") | Some _x4193 -> _x4193
  method set_authority _x4193 = _authority <- Some _x4193
  method unset_authority = _authority <- None
  method reset_authority = _authority <- None

  method copy =
      let _new = Oo.copy self in
      if _updatdAttributes <> None then
        _new#set_updatdAttributes (Hashtbl.copy self#grab_updatdAttributes);
      if _authority <> None then
        _new#set_authority self#grab_authority#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareAuthorityResponse";
    (match _updatdAttributes with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatdAttributes",Protocol.T_SET,1);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter4196 -> fun _ ->         oprot#writeI32(SquareAuthorityAttribute.to_i _iter4196);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _authority with None -> () | Some _v -> 
      oprot#writeFieldBegin("authority",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareAuthorityResponse (iprot : Protocol.t) =
  let _str4197 = new updateSquareAuthorityResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4198,_id4199) = iprot#readFieldBegin in
        if _t4198 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4199 with 
          | 1 -> (if _t4198 = Protocol.T_SET then
              _str4197#set_updatdAttributes 
                (let (_etype4203,_size4200) = iprot#readSetBegin in
                let _con4204 = Hashtbl.create _size4200 in
                  for i = 1 to _size4200 do
                    Hashtbl.add _con4204 (SquareAuthorityAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con4204)
            else
              iprot#skip _t4198)
          | 2 -> (if _t4198 = Protocol.T_STRUCT then
              _str4197#set_authority (read_squareAuthority iprot)
            else
              iprot#skip _t4198)
          | _ -> iprot#skip _t4198);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4197

class updateSquareMemberRelationRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "updateSquareMemberRelationRequest.squareMid") | Some _x4206 -> _x4206
  method set_squareMid _x4206 = _squareMid <- Some _x4206
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _targetSquareMemberMid : string option = None
  method get_targetSquareMemberMid = _targetSquareMemberMid
  method grab_targetSquareMemberMid = match _targetSquareMemberMid with None->raise (Field_empty "updateSquareMemberRelationRequest.targetSquareMemberMid") | Some _x4207 -> _x4207
  method set_targetSquareMemberMid _x4207 = _targetSquareMemberMid <- Some _x4207
  method unset_targetSquareMemberMid = _targetSquareMemberMid <- None
  method reset_targetSquareMemberMid = _targetSquareMemberMid <- None

  val mutable _updatedAttrs : (SquareMemberRelationAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareMemberRelationRequest.updatedAttrs") | Some _x4208 -> _x4208
  method set_updatedAttrs _x4208 = _updatedAttrs <- Some _x4208
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _relation : squareMemberRelation option = None
  method get_relation = _relation
  method grab_relation = match _relation with None->raise (Field_empty "updateSquareMemberRelationRequest.relation") | Some _x4209 -> _x4209
  method set_relation _x4209 = _relation <- Some _x4209
  method unset_relation = _relation <- None
  method reset_relation = _relation <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _relation <> None then
        _new#set_relation self#grab_relation#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareMemberRelationRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _targetSquareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("targetSquareMemberMid",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,4);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter4212 -> fun _ ->         oprot#writeI32(SquareMemberRelationAttribute.to_i _iter4212);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _relation with None -> () | Some _v -> 
      oprot#writeFieldBegin("relation",Protocol.T_STRUCT,5);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareMemberRelationRequest (iprot : Protocol.t) =
  let _str4213 = new updateSquareMemberRelationRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4214,_id4215) = iprot#readFieldBegin in
        if _t4214 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4215 with 
          | 2 -> (if _t4214 = Protocol.T_STRING then
              _str4213#set_squareMid iprot#readString
            else
              iprot#skip _t4214)
          | 3 -> (if _t4214 = Protocol.T_STRING then
              _str4213#set_targetSquareMemberMid iprot#readString
            else
              iprot#skip _t4214)
          | 4 -> (if _t4214 = Protocol.T_SET then
              _str4213#set_updatedAttrs 
                (let (_etype4219,_size4216) = iprot#readSetBegin in
                let _con4220 = Hashtbl.create _size4216 in
                  for i = 1 to _size4216 do
                    Hashtbl.add _con4220 (SquareMemberRelationAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con4220)
            else
              iprot#skip _t4214)
          | 5 -> (if _t4214 = Protocol.T_STRUCT then
              _str4213#set_relation (read_squareMemberRelation iprot)
            else
              iprot#skip _t4214)
          | _ -> iprot#skip _t4214);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4213

class updateSquareMemberRelationResponse =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "updateSquareMemberRelationResponse.squareMid") | Some _x4222 -> _x4222
  method set_squareMid _x4222 = _squareMid <- Some _x4222
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _targetSquareMemberMid : string option = None
  method get_targetSquareMemberMid = _targetSquareMemberMid
  method grab_targetSquareMemberMid = match _targetSquareMemberMid with None->raise (Field_empty "updateSquareMemberRelationResponse.targetSquareMemberMid") | Some _x4223 -> _x4223
  method set_targetSquareMemberMid _x4223 = _targetSquareMemberMid <- Some _x4223
  method unset_targetSquareMemberMid = _targetSquareMemberMid <- None
  method reset_targetSquareMemberMid = _targetSquareMemberMid <- None

  val mutable _updatedAttrs : (SquareMemberRelationAttribute.t,bool) Hashtbl.t option = None
  method get_updatedAttrs = _updatedAttrs
  method grab_updatedAttrs = match _updatedAttrs with None->raise (Field_empty "updateSquareMemberRelationResponse.updatedAttrs") | Some _x4224 -> _x4224
  method set_updatedAttrs _x4224 = _updatedAttrs <- Some _x4224
  method unset_updatedAttrs = _updatedAttrs <- None
  method reset_updatedAttrs = _updatedAttrs <- None

  val mutable _relation : squareMemberRelation option = None
  method get_relation = _relation
  method grab_relation = match _relation with None->raise (Field_empty "updateSquareMemberRelationResponse.relation") | Some _x4225 -> _x4225
  method set_relation _x4225 = _relation <- Some _x4225
  method unset_relation = _relation <- None
  method reset_relation = _relation <- None

  method copy =
      let _new = Oo.copy self in
      if _updatedAttrs <> None then
        _new#set_updatedAttrs (Hashtbl.copy self#grab_updatedAttrs);
      if _relation <> None then
        _new#set_relation self#grab_relation#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateSquareMemberRelationResponse";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _targetSquareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("targetSquareMemberMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _updatedAttrs with None -> () | Some _v -> 
      oprot#writeFieldBegin("updatedAttrs",Protocol.T_SET,3);
      oprot#writeSetBegin(Protocol.T_I32,Hashtbl.length _v);
      Hashtbl.iter (fun _iter4228 -> fun _ ->         oprot#writeI32(SquareMemberRelationAttribute.to_i _iter4228);
      ) _v;
      oprot#writeSetEnd;
      oprot#writeFieldEnd
    );
    (match _relation with None -> () | Some _v -> 
      oprot#writeFieldBegin("relation",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateSquareMemberRelationResponse (iprot : Protocol.t) =
  let _str4229 = new updateSquareMemberRelationResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4230,_id4231) = iprot#readFieldBegin in
        if _t4230 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4231 with 
          | 1 -> (if _t4230 = Protocol.T_STRING then
              _str4229#set_squareMid iprot#readString
            else
              iprot#skip _t4230)
          | 2 -> (if _t4230 = Protocol.T_STRING then
              _str4229#set_targetSquareMemberMid iprot#readString
            else
              iprot#skip _t4230)
          | 3 -> (if _t4230 = Protocol.T_SET then
              _str4229#set_updatedAttrs 
                (let (_etype4235,_size4232) = iprot#readSetBegin in
                let _con4236 = Hashtbl.create _size4232 in
                  for i = 1 to _size4232 do
                    Hashtbl.add _con4236 (SquareMemberRelationAttribute.of_i iprot#readI32) true
                  done; iprot#readSetEnd; _con4236)
            else
              iprot#skip _t4230)
          | 4 -> (if _t4230 = Protocol.T_STRUCT then
              _str4229#set_relation (read_squareMemberRelation iprot)
            else
              iprot#skip _t4230)
          | _ -> iprot#skip _t4230);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4229

class reportSquareRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "reportSquareRequest.squareMid") | Some _x4238 -> _x4238
  method set_squareMid _x4238 = _squareMid <- Some _x4238
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _reportType : ReportType.t option = None
  method get_reportType = _reportType
  method grab_reportType = match _reportType with None->raise (Field_empty "reportSquareRequest.reportType") | Some _x4239 -> _x4239
  method set_reportType _x4239 = _reportType <- Some _x4239
  method unset_reportType = _reportType <- None
  method reset_reportType = _reportType <- None

  val mutable _otherReason : string option = None
  method get_otherReason = _otherReason
  method grab_otherReason = match _otherReason with None->raise (Field_empty "reportSquareRequest.otherReason") | Some _x4240 -> _x4240
  method set_otherReason _x4240 = _otherReason <- Some _x4240
  method unset_otherReason = _otherReason <- None
  method reset_otherReason = _otherReason <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ReportSquareRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _reportType with None -> () | Some _v -> 
      oprot#writeFieldBegin("reportType",Protocol.T_I32,3);
      oprot#writeI32(ReportType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _otherReason with None -> () | Some _v -> 
      oprot#writeFieldBegin("otherReason",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_reportSquareRequest (iprot : Protocol.t) =
  let _str4243 = new reportSquareRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4244,_id4245) = iprot#readFieldBegin in
        if _t4244 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4245 with 
          | 2 -> (if _t4244 = Protocol.T_STRING then
              _str4243#set_squareMid iprot#readString
            else
              iprot#skip _t4244)
          | 3 -> (if _t4244 = Protocol.T_I32 then
              _str4243#set_reportType (ReportType.of_i iprot#readI32)
            else
              iprot#skip _t4244)
          | 4 -> (if _t4244 = Protocol.T_STRING then
              _str4243#set_otherReason iprot#readString
            else
              iprot#skip _t4244)
          | _ -> iprot#skip _t4244);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4243

class reportSquareResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ReportSquareResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_reportSquareResponse (iprot : Protocol.t) =
  let _str4249 = new reportSquareResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4250,_id4251) = iprot#readFieldBegin in
        if _t4250 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4251 with 
          | _ -> iprot#skip _t4250);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4249

class reportSquareChatRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "reportSquareChatRequest.squareMid") | Some _x4253 -> _x4253
  method set_squareMid _x4253 = _squareMid <- Some _x4253
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "reportSquareChatRequest.squareChatMid") | Some _x4254 -> _x4254
  method set_squareChatMid _x4254 = _squareChatMid <- Some _x4254
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _reportType : ReportType.t option = None
  method get_reportType = _reportType
  method grab_reportType = match _reportType with None->raise (Field_empty "reportSquareChatRequest.reportType") | Some _x4255 -> _x4255
  method set_reportType _x4255 = _reportType <- Some _x4255
  method unset_reportType = _reportType <- None
  method reset_reportType = _reportType <- None

  val mutable _otherReason : string option = None
  method get_otherReason = _otherReason
  method grab_otherReason = match _otherReason with None->raise (Field_empty "reportSquareChatRequest.otherReason") | Some _x4256 -> _x4256
  method set_otherReason _x4256 = _otherReason <- Some _x4256
  method unset_otherReason = _otherReason <- None
  method reset_otherReason = _otherReason <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ReportSquareChatRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _reportType with None -> () | Some _v -> 
      oprot#writeFieldBegin("reportType",Protocol.T_I32,5);
      oprot#writeI32(ReportType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _otherReason with None -> () | Some _v -> 
      oprot#writeFieldBegin("otherReason",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_reportSquareChatRequest (iprot : Protocol.t) =
  let _str4259 = new reportSquareChatRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4260,_id4261) = iprot#readFieldBegin in
        if _t4260 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4261 with 
          | 2 -> (if _t4260 = Protocol.T_STRING then
              _str4259#set_squareMid iprot#readString
            else
              iprot#skip _t4260)
          | 3 -> (if _t4260 = Protocol.T_STRING then
              _str4259#set_squareChatMid iprot#readString
            else
              iprot#skip _t4260)
          | 5 -> (if _t4260 = Protocol.T_I32 then
              _str4259#set_reportType (ReportType.of_i iprot#readI32)
            else
              iprot#skip _t4260)
          | 6 -> (if _t4260 = Protocol.T_STRING then
              _str4259#set_otherReason iprot#readString
            else
              iprot#skip _t4260)
          | _ -> iprot#skip _t4260);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4259

class reportSquareChatResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ReportSquareChatResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_reportSquareChatResponse (iprot : Protocol.t) =
  let _str4265 = new reportSquareChatResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4266,_id4267) = iprot#readFieldBegin in
        if _t4266 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4267 with 
          | _ -> iprot#skip _t4266);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4265

class reportSquareMessageRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "reportSquareMessageRequest.squareMid") | Some _x4269 -> _x4269
  method set_squareMid _x4269 = _squareMid <- Some _x4269
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "reportSquareMessageRequest.squareChatMid") | Some _x4270 -> _x4270
  method set_squareChatMid _x4270 = _squareChatMid <- Some _x4270
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareMessageId : string option = None
  method get_squareMessageId = _squareMessageId
  method grab_squareMessageId = match _squareMessageId with None->raise (Field_empty "reportSquareMessageRequest.squareMessageId") | Some _x4271 -> _x4271
  method set_squareMessageId _x4271 = _squareMessageId <- Some _x4271
  method unset_squareMessageId = _squareMessageId <- None
  method reset_squareMessageId = _squareMessageId <- None

  val mutable _reportType : ReportType.t option = None
  method get_reportType = _reportType
  method grab_reportType = match _reportType with None->raise (Field_empty "reportSquareMessageRequest.reportType") | Some _x4272 -> _x4272
  method set_reportType _x4272 = _reportType <- Some _x4272
  method unset_reportType = _reportType <- None
  method reset_reportType = _reportType <- None

  val mutable _otherReason : string option = None
  method get_otherReason = _otherReason
  method grab_otherReason = match _otherReason with None->raise (Field_empty "reportSquareMessageRequest.otherReason") | Some _x4273 -> _x4273
  method set_otherReason _x4273 = _otherReason <- Some _x4273
  method unset_otherReason = _otherReason <- None
  method reset_otherReason = _otherReason <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ReportSquareMessageRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareMessageId with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMessageId",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _reportType with None -> () | Some _v -> 
      oprot#writeFieldBegin("reportType",Protocol.T_I32,5);
      oprot#writeI32(ReportType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _otherReason with None -> () | Some _v -> 
      oprot#writeFieldBegin("otherReason",Protocol.T_STRING,6);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_reportSquareMessageRequest (iprot : Protocol.t) =
  let _str4276 = new reportSquareMessageRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4277,_id4278) = iprot#readFieldBegin in
        if _t4277 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4278 with 
          | 2 -> (if _t4277 = Protocol.T_STRING then
              _str4276#set_squareMid iprot#readString
            else
              iprot#skip _t4277)
          | 3 -> (if _t4277 = Protocol.T_STRING then
              _str4276#set_squareChatMid iprot#readString
            else
              iprot#skip _t4277)
          | 4 -> (if _t4277 = Protocol.T_STRING then
              _str4276#set_squareMessageId iprot#readString
            else
              iprot#skip _t4277)
          | 5 -> (if _t4277 = Protocol.T_I32 then
              _str4276#set_reportType (ReportType.of_i iprot#readI32)
            else
              iprot#skip _t4277)
          | 6 -> (if _t4277 = Protocol.T_STRING then
              _str4276#set_otherReason iprot#readString
            else
              iprot#skip _t4277)
          | _ -> iprot#skip _t4277);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4276

class reportSquareMessageResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ReportSquareMessageResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_reportSquareMessageResponse (iprot : Protocol.t) =
  let _str4282 = new reportSquareMessageResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4283,_id4284) = iprot#readFieldBegin in
        if _t4283 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4284 with 
          | _ -> iprot#skip _t4283);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4282

class reportSquareMemberRequest =
object (self)
  val mutable _squareMemberMid : string option = None
  method get_squareMemberMid = _squareMemberMid
  method grab_squareMemberMid = match _squareMemberMid with None->raise (Field_empty "reportSquareMemberRequest.squareMemberMid") | Some _x4286 -> _x4286
  method set_squareMemberMid _x4286 = _squareMemberMid <- Some _x4286
  method unset_squareMemberMid = _squareMemberMid <- None
  method reset_squareMemberMid = _squareMemberMid <- None

  val mutable _reportType : ReportType.t option = None
  method get_reportType = _reportType
  method grab_reportType = match _reportType with None->raise (Field_empty "reportSquareMemberRequest.reportType") | Some _x4287 -> _x4287
  method set_reportType _x4287 = _reportType <- Some _x4287
  method unset_reportType = _reportType <- None
  method reset_reportType = _reportType <- None

  val mutable _otherReason : string option = None
  method get_otherReason = _otherReason
  method grab_otherReason = match _otherReason with None->raise (Field_empty "reportSquareMemberRequest.otherReason") | Some _x4288 -> _x4288
  method set_otherReason _x4288 = _otherReason <- Some _x4288
  method unset_otherReason = _otherReason <- None
  method reset_otherReason = _otherReason <- None

  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "reportSquareMemberRequest.squareChatMid") | Some _x4289 -> _x4289
  method set_squareChatMid _x4289 = _squareChatMid <- Some _x4289
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ReportSquareMemberRequest";
    (match _squareMemberMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMemberMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _reportType with None -> () | Some _v -> 
      oprot#writeFieldBegin("reportType",Protocol.T_I32,3);
      oprot#writeI32(ReportType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _otherReason with None -> () | Some _v -> 
      oprot#writeFieldBegin("otherReason",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,5);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_reportSquareMemberRequest (iprot : Protocol.t) =
  let _str4292 = new reportSquareMemberRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4293,_id4294) = iprot#readFieldBegin in
        if _t4293 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4294 with 
          | 2 -> (if _t4293 = Protocol.T_STRING then
              _str4292#set_squareMemberMid iprot#readString
            else
              iprot#skip _t4293)
          | 3 -> (if _t4293 = Protocol.T_I32 then
              _str4292#set_reportType (ReportType.of_i iprot#readI32)
            else
              iprot#skip _t4293)
          | 4 -> (if _t4293 = Protocol.T_STRING then
              _str4292#set_otherReason iprot#readString
            else
              iprot#skip _t4293)
          | 5 -> (if _t4293 = Protocol.T_STRING then
              _str4292#set_squareChatMid iprot#readString
            else
              iprot#skip _t4293)
          | _ -> iprot#skip _t4293);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4292

class reportSquareMemberResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ReportSquareMemberResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_reportSquareMemberResponse (iprot : Protocol.t) =
  let _str4298 = new reportSquareMemberResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4299,_id4300) = iprot#readFieldBegin in
        if _t4299 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4300 with 
          | _ -> iprot#skip _t4299);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4298

class getSquareRequest =
object (self)
  val mutable _mid : string option = None
  method get_mid = _mid
  method grab_mid = match _mid with None->raise (Field_empty "getSquareRequest.mid") | Some _x4302 -> _x4302
  method set_mid _x4302 = _mid <- Some _x4302
  method unset_mid = _mid <- None
  method reset_mid = _mid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareRequest";
    (match _mid with None -> () | Some _v -> 
      oprot#writeFieldBegin("mid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareRequest (iprot : Protocol.t) =
  let _str4305 = new getSquareRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4306,_id4307) = iprot#readFieldBegin in
        if _t4306 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4307 with 
          | 2 -> (if _t4306 = Protocol.T_STRING then
              _str4305#set_mid iprot#readString
            else
              iprot#skip _t4306)
          | _ -> iprot#skip _t4306);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4305

class getSquareResponse =
object (self)
  val mutable _square : square option = None
  method get_square = _square
  method grab_square = match _square with None->raise (Field_empty "getSquareResponse.square") | Some _x4309 -> _x4309
  method set_square _x4309 = _square <- Some _x4309
  method unset_square = _square <- None
  method reset_square = _square <- None

  val mutable _myMembership : squareMember option = None
  method get_myMembership = _myMembership
  method grab_myMembership = match _myMembership with None->raise (Field_empty "getSquareResponse.myMembership") | Some _x4310 -> _x4310
  method set_myMembership _x4310 = _myMembership <- Some _x4310
  method unset_myMembership = _myMembership <- None
  method reset_myMembership = _myMembership <- None

  val mutable _squareAuthority : squareAuthority option = None
  method get_squareAuthority = _squareAuthority
  method grab_squareAuthority = match _squareAuthority with None->raise (Field_empty "getSquareResponse.squareAuthority") | Some _x4311 -> _x4311
  method set_squareAuthority _x4311 = _squareAuthority <- Some _x4311
  method unset_squareAuthority = _squareAuthority <- None
  method reset_squareAuthority = _squareAuthority <- None

  val mutable _squareStatus : squareStatus option = None
  method get_squareStatus = _squareStatus
  method grab_squareStatus = match _squareStatus with None->raise (Field_empty "getSquareResponse.squareStatus") | Some _x4312 -> _x4312
  method set_squareStatus _x4312 = _squareStatus <- Some _x4312
  method unset_squareStatus = _squareStatus <- None
  method reset_squareStatus = _squareStatus <- None

  val mutable _squareFeatureSet : squareFeatureSet option = None
  method get_squareFeatureSet = _squareFeatureSet
  method grab_squareFeatureSet = match _squareFeatureSet with None->raise (Field_empty "getSquareResponse.squareFeatureSet") | Some _x4313 -> _x4313
  method set_squareFeatureSet _x4313 = _squareFeatureSet <- Some _x4313
  method unset_squareFeatureSet = _squareFeatureSet <- None
  method reset_squareFeatureSet = _squareFeatureSet <- None

  val mutable _noteStatus : noteStatus option = None
  method get_noteStatus = _noteStatus
  method grab_noteStatus = match _noteStatus with None->raise (Field_empty "getSquareResponse.noteStatus") | Some _x4314 -> _x4314
  method set_noteStatus _x4314 = _noteStatus <- Some _x4314
  method unset_noteStatus = _noteStatus <- None
  method reset_noteStatus = _noteStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _square <> None then
        _new#set_square self#grab_square#copy;
      if _myMembership <> None then
        _new#set_myMembership self#grab_myMembership#copy;
      if _squareAuthority <> None then
        _new#set_squareAuthority self#grab_squareAuthority#copy;
      if _squareStatus <> None then
        _new#set_squareStatus self#grab_squareStatus#copy;
      if _squareFeatureSet <> None then
        _new#set_squareFeatureSet self#grab_squareFeatureSet#copy;
      if _noteStatus <> None then
        _new#set_noteStatus self#grab_noteStatus#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareResponse";
    (match _square with None -> () | Some _v -> 
      oprot#writeFieldBegin("square",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _myMembership with None -> () | Some _v -> 
      oprot#writeFieldBegin("myMembership",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareAuthority with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareAuthority",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareStatus",Protocol.T_STRUCT,4);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _squareFeatureSet with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareFeatureSet",Protocol.T_STRUCT,5);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _noteStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("noteStatus",Protocol.T_STRUCT,6);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareResponse (iprot : Protocol.t) =
  let _str4317 = new getSquareResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4318,_id4319) = iprot#readFieldBegin in
        if _t4318 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4319 with 
          | 1 -> (if _t4318 = Protocol.T_STRUCT then
              _str4317#set_square (read_square iprot)
            else
              iprot#skip _t4318)
          | 2 -> (if _t4318 = Protocol.T_STRUCT then
              _str4317#set_myMembership (read_squareMember iprot)
            else
              iprot#skip _t4318)
          | 3 -> (if _t4318 = Protocol.T_STRUCT then
              _str4317#set_squareAuthority (read_squareAuthority iprot)
            else
              iprot#skip _t4318)
          | 4 -> (if _t4318 = Protocol.T_STRUCT then
              _str4317#set_squareStatus (read_squareStatus iprot)
            else
              iprot#skip _t4318)
          | 5 -> (if _t4318 = Protocol.T_STRUCT then
              _str4317#set_squareFeatureSet (read_squareFeatureSet iprot)
            else
              iprot#skip _t4318)
          | 6 -> (if _t4318 = Protocol.T_STRUCT then
              _str4317#set_noteStatus (read_noteStatus iprot)
            else
              iprot#skip _t4318)
          | _ -> iprot#skip _t4318);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4317

class getSquareStatusRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "getSquareStatusRequest.squareMid") | Some _x4321 -> _x4321
  method set_squareMid _x4321 = _squareMid <- Some _x4321
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareStatusRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareStatusRequest (iprot : Protocol.t) =
  let _str4324 = new getSquareStatusRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4325,_id4326) = iprot#readFieldBegin in
        if _t4325 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4326 with 
          | 2 -> (if _t4325 = Protocol.T_STRING then
              _str4324#set_squareMid iprot#readString
            else
              iprot#skip _t4325)
          | _ -> iprot#skip _t4325);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4324

class getSquareStatusResponse =
object (self)
  val mutable _squareStatus : squareStatus option = None
  method get_squareStatus = _squareStatus
  method grab_squareStatus = match _squareStatus with None->raise (Field_empty "getSquareStatusResponse.squareStatus") | Some _x4328 -> _x4328
  method set_squareStatus _x4328 = _squareStatus <- Some _x4328
  method unset_squareStatus = _squareStatus <- None
  method reset_squareStatus = _squareStatus <- None

  method copy =
      let _new = Oo.copy self in
      if _squareStatus <> None then
        _new#set_squareStatus self#grab_squareStatus#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareStatusResponse";
    (match _squareStatus with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareStatus",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareStatusResponse (iprot : Protocol.t) =
  let _str4331 = new getSquareStatusResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4332,_id4333) = iprot#readFieldBegin in
        if _t4332 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4333 with 
          | 1 -> (if _t4332 = Protocol.T_STRUCT then
              _str4331#set_squareStatus (read_squareStatus iprot)
            else
              iprot#skip _t4332)
          | _ -> iprot#skip _t4332);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4331

class getNoteStatusRequest =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "getNoteStatusRequest.squareMid") | Some _x4335 -> _x4335
  method set_squareMid _x4335 = _squareMid <- Some _x4335
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetNoteStatusRequest";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getNoteStatusRequest (iprot : Protocol.t) =
  let _str4338 = new getNoteStatusRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4339,_id4340) = iprot#readFieldBegin in
        if _t4339 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4340 with 
          | 2 -> (if _t4339 = Protocol.T_STRING then
              _str4338#set_squareMid iprot#readString
            else
              iprot#skip _t4339)
          | _ -> iprot#skip _t4339);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4338

class getNoteStatusResponse =
object (self)
  val mutable _squareMid : string option = None
  method get_squareMid = _squareMid
  method grab_squareMid = match _squareMid with None->raise (Field_empty "getNoteStatusResponse.squareMid") | Some _x4342 -> _x4342
  method set_squareMid _x4342 = _squareMid <- Some _x4342
  method unset_squareMid = _squareMid <- None
  method reset_squareMid = _squareMid <- None

  val mutable _status : noteStatus option = None
  method get_status = _status
  method grab_status = match _status with None->raise (Field_empty "getNoteStatusResponse.status") | Some _x4343 -> _x4343
  method set_status _x4343 = _status <- Some _x4343
  method unset_status = _status <- None
  method reset_status = _status <- None

  method copy =
      let _new = Oo.copy self in
      if _status <> None then
        _new#set_status self#grab_status#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetNoteStatusResponse";
    (match _squareMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareMid",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _status with None -> () | Some _v -> 
      oprot#writeFieldBegin("status",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getNoteStatusResponse (iprot : Protocol.t) =
  let _str4346 = new getNoteStatusResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4347,_id4348) = iprot#readFieldBegin in
        if _t4347 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4348 with 
          | 1 -> (if _t4347 = Protocol.T_STRING then
              _str4346#set_squareMid iprot#readString
            else
              iprot#skip _t4347)
          | 2 -> (if _t4347 = Protocol.T_STRUCT then
              _str4346#set_status (read_noteStatus iprot)
            else
              iprot#skip _t4347)
          | _ -> iprot#skip _t4347);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4346

class createSquareChatAnnouncementRequest =
object (self)
  val mutable _reqSeq : Int32.t option = None
  method get_reqSeq = _reqSeq
  method grab_reqSeq = match _reqSeq with None->raise (Field_empty "createSquareChatAnnouncementRequest.reqSeq") | Some _x4350 -> _x4350
  method set_reqSeq _x4350 = _reqSeq <- Some _x4350
  method unset_reqSeq = _reqSeq <- None
  method reset_reqSeq = _reqSeq <- None

  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "createSquareChatAnnouncementRequest.squareChatMid") | Some _x4351 -> _x4351
  method set_squareChatMid _x4351 = _squareChatMid <- Some _x4351
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _squareChatAnnouncement : squareChatAnnouncement option = None
  method get_squareChatAnnouncement = _squareChatAnnouncement
  method grab_squareChatAnnouncement = match _squareChatAnnouncement with None->raise (Field_empty "createSquareChatAnnouncementRequest.squareChatAnnouncement") | Some _x4352 -> _x4352
  method set_squareChatAnnouncement _x4352 = _squareChatAnnouncement <- Some _x4352
  method unset_squareChatAnnouncement = _squareChatAnnouncement <- None
  method reset_squareChatAnnouncement = _squareChatAnnouncement <- None

  method copy =
      let _new = Oo.copy self in
      if _squareChatAnnouncement <> None then
        _new#set_squareChatAnnouncement self#grab_squareChatAnnouncement#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CreateSquareChatAnnouncementRequest";
    (match _reqSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("reqSeq",Protocol.T_I32,1);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _squareChatAnnouncement with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatAnnouncement",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_createSquareChatAnnouncementRequest (iprot : Protocol.t) =
  let _str4355 = new createSquareChatAnnouncementRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4356,_id4357) = iprot#readFieldBegin in
        if _t4356 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4357 with 
          | 1 -> (if _t4356 = Protocol.T_I32 then
              _str4355#set_reqSeq iprot#readI32
            else
              iprot#skip _t4356)
          | 2 -> (if _t4356 = Protocol.T_STRING then
              _str4355#set_squareChatMid iprot#readString
            else
              iprot#skip _t4356)
          | 3 -> (if _t4356 = Protocol.T_STRUCT then
              _str4355#set_squareChatAnnouncement (read_squareChatAnnouncement iprot)
            else
              iprot#skip _t4356)
          | _ -> iprot#skip _t4356);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4355

class createSquareChatAnnouncementResponse =
object (self)
  val mutable _announcement : squareChatAnnouncement option = None
  method get_announcement = _announcement
  method grab_announcement = match _announcement with None->raise (Field_empty "createSquareChatAnnouncementResponse.announcement") | Some _x4359 -> _x4359
  method set_announcement _x4359 = _announcement <- Some _x4359
  method unset_announcement = _announcement <- None
  method reset_announcement = _announcement <- None

  method copy =
      let _new = Oo.copy self in
      if _announcement <> None then
        _new#set_announcement self#grab_announcement#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "CreateSquareChatAnnouncementResponse";
    (match _announcement with None -> () | Some _v -> 
      oprot#writeFieldBegin("announcement",Protocol.T_STRUCT,1);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_createSquareChatAnnouncementResponse (iprot : Protocol.t) =
  let _str4362 = new createSquareChatAnnouncementResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4363,_id4364) = iprot#readFieldBegin in
        if _t4363 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4364 with 
          | 1 -> (if _t4363 = Protocol.T_STRUCT then
              _str4362#set_announcement (read_squareChatAnnouncement iprot)
            else
              iprot#skip _t4363)
          | _ -> iprot#skip _t4363);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4362

class deleteSquareChatAnnouncementRequest =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "deleteSquareChatAnnouncementRequest.squareChatMid") | Some _x4366 -> _x4366
  method set_squareChatMid _x4366 = _squareChatMid <- Some _x4366
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  val mutable _announcementSeq : Int64.t option = None
  method get_announcementSeq = _announcementSeq
  method grab_announcementSeq = match _announcementSeq with None->raise (Field_empty "deleteSquareChatAnnouncementRequest.announcementSeq") | Some _x4367 -> _x4367
  method set_announcementSeq _x4367 = _announcementSeq <- Some _x4367
  method unset_announcementSeq = _announcementSeq <- None
  method reset_announcementSeq = _announcementSeq <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "DeleteSquareChatAnnouncementRequest";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _announcementSeq with None -> () | Some _v -> 
      oprot#writeFieldBegin("announcementSeq",Protocol.T_I64,3);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_deleteSquareChatAnnouncementRequest (iprot : Protocol.t) =
  let _str4370 = new deleteSquareChatAnnouncementRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4371,_id4372) = iprot#readFieldBegin in
        if _t4371 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4372 with 
          | 2 -> (if _t4371 = Protocol.T_STRING then
              _str4370#set_squareChatMid iprot#readString
            else
              iprot#skip _t4371)
          | 3 -> (if _t4371 = Protocol.T_I64 then
              _str4370#set_announcementSeq iprot#readI64
            else
              iprot#skip _t4371)
          | _ -> iprot#skip _t4371);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4370

class deleteSquareChatAnnouncementResponse =
object (self)
  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "DeleteSquareChatAnnouncementResponse";
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_deleteSquareChatAnnouncementResponse (iprot : Protocol.t) =
  let _str4376 = new deleteSquareChatAnnouncementResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4377,_id4378) = iprot#readFieldBegin in
        if _t4377 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4378 with 
          | _ -> iprot#skip _t4377);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4376

class getSquareChatAnnouncementsRequest =
object (self)
  val mutable _squareChatMid : string option = None
  method get_squareChatMid = _squareChatMid
  method grab_squareChatMid = match _squareChatMid with None->raise (Field_empty "getSquareChatAnnouncementsRequest.squareChatMid") | Some _x4380 -> _x4380
  method set_squareChatMid _x4380 = _squareChatMid <- Some _x4380
  method unset_squareChatMid = _squareChatMid <- None
  method reset_squareChatMid = _squareChatMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareChatAnnouncementsRequest";
    (match _squareChatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("squareChatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareChatAnnouncementsRequest (iprot : Protocol.t) =
  let _str4383 = new getSquareChatAnnouncementsRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4384,_id4385) = iprot#readFieldBegin in
        if _t4384 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4385 with 
          | 2 -> (if _t4384 = Protocol.T_STRING then
              _str4383#set_squareChatMid iprot#readString
            else
              iprot#skip _t4384)
          | _ -> iprot#skip _t4384);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4383

class getSquareChatAnnouncementsResponse =
object (self)
  val mutable _announcements : squareChatAnnouncement list option = None
  method get_announcements = _announcements
  method grab_announcements = match _announcements with None->raise (Field_empty "getSquareChatAnnouncementsResponse.announcements") | Some _x4387 -> _x4387
  method set_announcements _x4387 = _announcements <- Some _x4387
  method unset_announcements = _announcements <- None
  method reset_announcements = _announcements <- None

  method copy =
      let _new = Oo.copy self in
      if _announcements <> None then
        _new#set_announcements (List.map (fun x -> x#copy) self#grab_announcements);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetSquareChatAnnouncementsResponse";
    (match _announcements with None -> () | Some _v -> 
      oprot#writeFieldBegin("announcements",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter4390 ->         _iter4390#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getSquareChatAnnouncementsResponse (iprot : Protocol.t) =
  let _str4391 = new getSquareChatAnnouncementsResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4392,_id4393) = iprot#readFieldBegin in
        if _t4392 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4393 with 
          | 1 -> (if _t4392 = Protocol.T_LIST then
              _str4391#set_announcements 
                (let (_etype4397,_size4394) = iprot#readListBegin in
                  let _con4398 = (Array.to_list (Array.init _size4394 (fun _ -> (read_squareChatAnnouncement iprot)))) in
                    iprot#readListEnd; _con4398)
            else
              iprot#skip _t4392)
          | _ -> iprot#skip _t4392);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4391

class getJoinedSquareChatsRequest =
object (self)
  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getJoinedSquareChatsRequest.continuationToken") | Some _x4400 -> _x4400
  method set_continuationToken _x4400 = _continuationToken <- Some _x4400
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  val mutable _limit : Int32.t option = None
  method get_limit = _limit
  method grab_limit = match _limit with None->raise (Field_empty "getJoinedSquareChatsRequest.limit") | Some _x4401 -> _x4401
  method set_limit _x4401 = _limit <- Some _x4401
  method unset_limit = _limit <- None
  method reset_limit = _limit <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetJoinedSquareChatsRequest";
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _limit with None -> () | Some _v -> 
      oprot#writeFieldBegin("limit",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getJoinedSquareChatsRequest (iprot : Protocol.t) =
  let _str4404 = new getJoinedSquareChatsRequest in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4405,_id4406) = iprot#readFieldBegin in
        if _t4405 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4406 with 
          | 2 -> (if _t4405 = Protocol.T_STRING then
              _str4404#set_continuationToken iprot#readString
            else
              iprot#skip _t4405)
          | 3 -> (if _t4405 = Protocol.T_I32 then
              _str4404#set_limit iprot#readI32
            else
              iprot#skip _t4405)
          | _ -> iprot#skip _t4405);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4404

class getJoinedSquareChatsResponse =
object (self)
  val mutable _chats : squareChat list option = None
  method get_chats = _chats
  method grab_chats = match _chats with None->raise (Field_empty "getJoinedSquareChatsResponse.chats") | Some _x4408 -> _x4408
  method set_chats _x4408 = _chats <- Some _x4408
  method unset_chats = _chats <- None
  method reset_chats = _chats <- None

  val mutable _chatMembers : (string,squareChatMember) Hashtbl.t option = None
  method get_chatMembers = _chatMembers
  method grab_chatMembers = match _chatMembers with None->raise (Field_empty "getJoinedSquareChatsResponse.chatMembers") | Some _x4409 -> _x4409
  method set_chatMembers _x4409 = _chatMembers <- Some _x4409
  method unset_chatMembers = _chatMembers <- None
  method reset_chatMembers = _chatMembers <- None

  val mutable _statuses : (string,squareChatStatus) Hashtbl.t option = None
  method get_statuses = _statuses
  method grab_statuses = match _statuses with None->raise (Field_empty "getJoinedSquareChatsResponse.statuses") | Some _x4410 -> _x4410
  method set_statuses _x4410 = _statuses <- Some _x4410
  method unset_statuses = _statuses <- None
  method reset_statuses = _statuses <- None

  val mutable _continuationToken : string option = None
  method get_continuationToken = _continuationToken
  method grab_continuationToken = match _continuationToken with None->raise (Field_empty "getJoinedSquareChatsResponse.continuationToken") | Some _x4411 -> _x4411
  method set_continuationToken _x4411 = _continuationToken <- Some _x4411
  method unset_continuationToken = _continuationToken <- None
  method reset_continuationToken = _continuationToken <- None

  method copy =
      let _new = Oo.copy self in
      if _chats <> None then
        _new#set_chats (List.map (fun x -> x#copy) self#grab_chats);
      if _chatMembers <> None then
        _new#set_chatMembers ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_chatMembers);
      if _statuses <> None then
        _new#set_statuses ((fun oh -> let nh = Hashtbl.create (Hashtbl.length oh) in Hashtbl.iter (fun k v -> Hashtbl.add nh k v#copy) oh; nh) self#grab_statuses);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GetJoinedSquareChatsResponse";
    (match _chats with None -> () | Some _v -> 
      oprot#writeFieldBegin("chats",Protocol.T_LIST,1);
      oprot#writeListBegin(Protocol.T_STRUCT,List.length _v);
      List.iter (fun _iter4414 ->         _iter4414#write(oprot);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _chatMembers with None -> () | Some _v -> 
      oprot#writeFieldBegin("chatMembers",Protocol.T_MAP,2);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter4415 -> fun _viter4416 -> 
        oprot#writeString(_kiter4415);
        _viter4416#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _statuses with None -> () | Some _v -> 
      oprot#writeFieldBegin("statuses",Protocol.T_MAP,3);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRUCT,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter4417 -> fun _viter4418 -> 
        oprot#writeString(_kiter4417);
        _viter4418#write(oprot);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    (match _continuationToken with None -> () | Some _v -> 
      oprot#writeFieldBegin("continuationToken",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_getJoinedSquareChatsResponse (iprot : Protocol.t) =
  let _str4419 = new getJoinedSquareChatsResponse in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4420,_id4421) = iprot#readFieldBegin in
        if _t4420 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4421 with 
          | 1 -> (if _t4420 = Protocol.T_LIST then
              _str4419#set_chats 
                (let (_etype4425,_size4422) = iprot#readListBegin in
                  let _con4426 = (Array.to_list (Array.init _size4422 (fun _ -> (read_squareChat iprot)))) in
                    iprot#readListEnd; _con4426)
            else
              iprot#skip _t4420)
          | 2 -> (if _t4420 = Protocol.T_MAP then
              _str4419#set_chatMembers 
                (let (_ktype4428,_vtype4429,_size4427) = iprot#readMapBegin in
                let _con4431 = Hashtbl.create _size4427 in
                  for i = 1 to _size4427 do
                    let _k = iprot#readString in
                    let _v = (read_squareChatMember iprot) in
                      Hashtbl.add _con4431 _k _v
                  done; iprot#readMapEnd; _con4431)
            else
              iprot#skip _t4420)
          | 3 -> (if _t4420 = Protocol.T_MAP then
              _str4419#set_statuses 
                (let (_ktype4433,_vtype4434,_size4432) = iprot#readMapBegin in
                let _con4436 = Hashtbl.create _size4432 in
                  for i = 1 to _size4432 do
                    let _k = iprot#readString in
                    let _v = (read_squareChatStatus iprot) in
                      Hashtbl.add _con4436 _k _v
                  done; iprot#readMapEnd; _con4436)
            else
              iprot#skip _t4420)
          | 4 -> (if _t4420 = Protocol.T_STRING then
              _str4419#set_continuationToken iprot#readString
            else
              iprot#skip _t4420)
          | _ -> iprot#skip _t4420);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4419

class updateBuddyProfileResult =
object (self)
  val mutable _requestId : string option = None
  method get_requestId = _requestId
  method grab_requestId = match _requestId with None->raise (Field_empty "updateBuddyProfileResult.requestId") | Some _x4438 -> _x4438
  method set_requestId _x4438 = _requestId <- Some _x4438
  method unset_requestId = _requestId <- None
  method reset_requestId = _requestId <- None

  val mutable _state : BuddyResultState.t option = None
  method get_state = _state
  method grab_state = match _state with None->raise (Field_empty "updateBuddyProfileResult.state") | Some _x4439 -> _x4439
  method set_state _x4439 = _state <- Some _x4439
  method unset_state = _state <- None
  method reset_state = _state <- None

  val mutable _eventNo : Int32.t option = None
  method get_eventNo = _eventNo
  method grab_eventNo = match _eventNo with None->raise (Field_empty "updateBuddyProfileResult.eventNo") | Some _x4440 -> _x4440
  method set_eventNo _x4440 = _eventNo <- Some _x4440
  method unset_eventNo = _eventNo <- None
  method reset_eventNo = _eventNo <- None

  val mutable _receiverCount : Int64.t option = None
  method get_receiverCount = _receiverCount
  method grab_receiverCount = match _receiverCount with None->raise (Field_empty "updateBuddyProfileResult.receiverCount") | Some _x4441 -> _x4441
  method set_receiverCount _x4441 = _receiverCount <- Some _x4441
  method unset_receiverCount = _receiverCount <- None
  method reset_receiverCount = _receiverCount <- None

  val mutable _successCount : Int64.t option = None
  method get_successCount = _successCount
  method grab_successCount = match _successCount with None->raise (Field_empty "updateBuddyProfileResult.successCount") | Some _x4442 -> _x4442
  method set_successCount _x4442 = _successCount <- Some _x4442
  method unset_successCount = _successCount <- None
  method reset_successCount = _successCount <- None

  val mutable _failCount : Int64.t option = None
  method get_failCount = _failCount
  method grab_failCount = match _failCount with None->raise (Field_empty "updateBuddyProfileResult.failCount") | Some _x4443 -> _x4443
  method set_failCount _x4443 = _failCount <- Some _x4443
  method unset_failCount = _failCount <- None
  method reset_failCount = _failCount <- None

  val mutable _cancelCount : Int64.t option = None
  method get_cancelCount = _cancelCount
  method grab_cancelCount = match _cancelCount with None->raise (Field_empty "updateBuddyProfileResult.cancelCount") | Some _x4444 -> _x4444
  method set_cancelCount _x4444 = _cancelCount <- Some _x4444
  method unset_cancelCount = _cancelCount <- None
  method reset_cancelCount = _cancelCount <- None

  val mutable _unregisterCount : Int64.t option = None
  method get_unregisterCount = _unregisterCount
  method grab_unregisterCount = match _unregisterCount with None->raise (Field_empty "updateBuddyProfileResult.unregisterCount") | Some _x4445 -> _x4445
  method set_unregisterCount _x4445 = _unregisterCount <- Some _x4445
  method unset_unregisterCount = _unregisterCount <- None
  method reset_unregisterCount = _unregisterCount <- None

  val mutable _timestamp : Int64.t option = None
  method get_timestamp = _timestamp
  method grab_timestamp = match _timestamp with None->raise (Field_empty "updateBuddyProfileResult.timestamp") | Some _x4446 -> _x4446
  method set_timestamp _x4446 = _timestamp <- Some _x4446
  method unset_timestamp = _timestamp <- None
  method reset_timestamp = _timestamp <- None

  val mutable _message : string option = None
  method get_message = _message
  method grab_message = match _message with None->raise (Field_empty "updateBuddyProfileResult.message") | Some _x4447 -> _x4447
  method set_message _x4447 = _message <- Some _x4447
  method unset_message = _message <- None
  method reset_message = _message <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UpdateBuddyProfileResult";
    (match _requestId with None -> () | Some _v -> 
      oprot#writeFieldBegin("requestId",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _state with None -> () | Some _v -> 
      oprot#writeFieldBegin("state",Protocol.T_I32,2);
      oprot#writeI32(BuddyResultState.to_i _v);
      oprot#writeFieldEnd
    );
    (match _eventNo with None -> () | Some _v -> 
      oprot#writeFieldBegin("eventNo",Protocol.T_I32,3);
      oprot#writeI32(_v);
      oprot#writeFieldEnd
    );
    (match _receiverCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("receiverCount",Protocol.T_I64,11);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _successCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("successCount",Protocol.T_I64,12);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _failCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("failCount",Protocol.T_I64,13);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _cancelCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("cancelCount",Protocol.T_I64,14);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _unregisterCount with None -> () | Some _v -> 
      oprot#writeFieldBegin("unregisterCount",Protocol.T_I64,15);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _timestamp with None -> () | Some _v -> 
      oprot#writeFieldBegin("timestamp",Protocol.T_I64,21);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _message with None -> () | Some _v -> 
      oprot#writeFieldBegin("message",Protocol.T_STRING,22);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_updateBuddyProfileResult (iprot : Protocol.t) =
  let _str4450 = new updateBuddyProfileResult in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4451,_id4452) = iprot#readFieldBegin in
        if _t4451 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4452 with 
          | 1 -> (if _t4451 = Protocol.T_STRING then
              _str4450#set_requestId iprot#readString
            else
              iprot#skip _t4451)
          | 2 -> (if _t4451 = Protocol.T_I32 then
              _str4450#set_state (BuddyResultState.of_i iprot#readI32)
            else
              iprot#skip _t4451)
          | 3 -> (if _t4451 = Protocol.T_I32 then
              _str4450#set_eventNo iprot#readI32
            else
              iprot#skip _t4451)
          | 11 -> (if _t4451 = Protocol.T_I64 then
              _str4450#set_receiverCount iprot#readI64
            else
              iprot#skip _t4451)
          | 12 -> (if _t4451 = Protocol.T_I64 then
              _str4450#set_successCount iprot#readI64
            else
              iprot#skip _t4451)
          | 13 -> (if _t4451 = Protocol.T_I64 then
              _str4450#set_failCount iprot#readI64
            else
              iprot#skip _t4451)
          | 14 -> (if _t4451 = Protocol.T_I64 then
              _str4450#set_cancelCount iprot#readI64
            else
              iprot#skip _t4451)
          | 15 -> (if _t4451 = Protocol.T_I64 then
              _str4450#set_unregisterCount iprot#readI64
            else
              iprot#skip _t4451)
          | 21 -> (if _t4451 = Protocol.T_I64 then
              _str4450#set_timestamp iprot#readI64
            else
              iprot#skip _t4451)
          | 22 -> (if _t4451 = Protocol.T_STRING then
              _str4450#set_message iprot#readString
            else
              iprot#skip _t4451)
          | _ -> iprot#skip _t4451);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4450

class userAuthStatus =
object (self)
  val mutable _phoneNumberRegistered : bool option = None
  method get_phoneNumberRegistered = _phoneNumberRegistered
  method grab_phoneNumberRegistered = match _phoneNumberRegistered with None->raise (Field_empty "userAuthStatus.phoneNumberRegistered") | Some _x4454 -> _x4454
  method set_phoneNumberRegistered _x4454 = _phoneNumberRegistered <- Some _x4454
  method unset_phoneNumberRegistered = _phoneNumberRegistered <- None
  method reset_phoneNumberRegistered = _phoneNumberRegistered <- None

  val mutable _registeredSnsIdTypes : SnsIdType.t list option = None
  method get_registeredSnsIdTypes = _registeredSnsIdTypes
  method grab_registeredSnsIdTypes = match _registeredSnsIdTypes with None->raise (Field_empty "userAuthStatus.registeredSnsIdTypes") | Some _x4455 -> _x4455
  method set_registeredSnsIdTypes _x4455 = _registeredSnsIdTypes <- Some _x4455
  method unset_registeredSnsIdTypes = _registeredSnsIdTypes <- None
  method reset_registeredSnsIdTypes = _registeredSnsIdTypes <- None

  val mutable _accountMigrationCheckType : AccountMigrationCheckType.t option = None
  method get_accountMigrationCheckType = _accountMigrationCheckType
  method grab_accountMigrationCheckType = match _accountMigrationCheckType with None->raise (Field_empty "userAuthStatus.accountMigrationCheckType") | Some _x4456 -> _x4456
  method set_accountMigrationCheckType _x4456 = _accountMigrationCheckType <- Some _x4456
  method unset_accountMigrationCheckType = _accountMigrationCheckType <- None
  method reset_accountMigrationCheckType = _accountMigrationCheckType <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UserAuthStatus";
    (match _phoneNumberRegistered with None -> () | Some _v -> 
      oprot#writeFieldBegin("phoneNumberRegistered",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _registeredSnsIdTypes with None -> () | Some _v -> 
      oprot#writeFieldBegin("registeredSnsIdTypes",Protocol.T_LIST,2);
      oprot#writeListBegin(Protocol.T_I32,List.length _v);
      List.iter (fun _iter4459 ->         oprot#writeI32(SnsIdType.to_i _iter4459);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _accountMigrationCheckType with None -> () | Some _v -> 
      oprot#writeFieldBegin("accountMigrationCheckType",Protocol.T_I32,3);
      oprot#writeI32(AccountMigrationCheckType.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_userAuthStatus (iprot : Protocol.t) =
  let _str4460 = new userAuthStatus in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4461,_id4462) = iprot#readFieldBegin in
        if _t4461 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4462 with 
          | 1 -> (if _t4461 = Protocol.T_BOOL then
              _str4460#set_phoneNumberRegistered iprot#readBool
            else
              iprot#skip _t4461)
          | 2 -> (if _t4461 = Protocol.T_LIST then
              _str4460#set_registeredSnsIdTypes 
                (let (_etype4466,_size4463) = iprot#readListBegin in
                  let _con4467 = (Array.to_list (Array.init _size4463 (fun _ -> (SnsIdType.of_i iprot#readI32)))) in
                    iprot#readListEnd; _con4467)
            else
              iprot#skip _t4461)
          | 3 -> (if _t4461 = Protocol.T_I32 then
              _str4460#set_accountMigrationCheckType (AccountMigrationCheckType.of_i iprot#readI32)
            else
              iprot#skip _t4461)
          | _ -> iprot#skip _t4461);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4460

class wapInvitation =
object (self)
  val mutable _type : WapInvitationType.t option = None
  method get_type = _type
  method grab_type = match _type with None->raise (Field_empty "wapInvitation.type") | Some _x4469 -> _x4469
  method set_type _x4469 = _type <- Some _x4469
  method unset_type = _type <- None
  method reset_type = _type <- None

  val mutable _inviteeEmail : string option = None
  method get_inviteeEmail = _inviteeEmail
  method grab_inviteeEmail = match _inviteeEmail with None->raise (Field_empty "wapInvitation.inviteeEmail") | Some _x4470 -> _x4470
  method set_inviteeEmail _x4470 = _inviteeEmail <- Some _x4470
  method unset_inviteeEmail = _inviteeEmail <- None
  method reset_inviteeEmail = _inviteeEmail <- None

  val mutable _inviterMid : string option = None
  method get_inviterMid = _inviterMid
  method grab_inviterMid = match _inviterMid with None->raise (Field_empty "wapInvitation.inviterMid") | Some _x4471 -> _x4471
  method set_inviterMid _x4471 = _inviterMid <- Some _x4471
  method unset_inviterMid = _inviterMid <- None
  method reset_inviterMid = _inviterMid <- None

  val mutable _roomMid : string option = None
  method get_roomMid = _roomMid
  method grab_roomMid = match _roomMid with None->raise (Field_empty "wapInvitation.roomMid") | Some _x4472 -> _x4472
  method set_roomMid _x4472 = _roomMid <- Some _x4472
  method unset_roomMid = _roomMid <- None
  method reset_roomMid = _roomMid <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "WapInvitation";
    (match _type with None -> () | Some _v -> 
      oprot#writeFieldBegin("type",Protocol.T_I32,1);
      oprot#writeI32(WapInvitationType.to_i _v);
      oprot#writeFieldEnd
    );
    (match _inviteeEmail with None -> () | Some _v -> 
      oprot#writeFieldBegin("inviteeEmail",Protocol.T_STRING,10);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _inviterMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("inviterMid",Protocol.T_STRING,11);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _roomMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("roomMid",Protocol.T_STRING,12);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_wapInvitation (iprot : Protocol.t) =
  let _str4475 = new wapInvitation in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4476,_id4477) = iprot#readFieldBegin in
        if _t4476 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4477 with 
          | 1 -> (if _t4476 = Protocol.T_I32 then
              _str4475#set_type (WapInvitationType.of_i iprot#readI32)
            else
              iprot#skip _t4476)
          | 10 -> (if _t4476 = Protocol.T_STRING then
              _str4475#set_inviteeEmail iprot#readString
            else
              iprot#skip _t4476)
          | 11 -> (if _t4476 = Protocol.T_STRING then
              _str4475#set_inviterMid iprot#readString
            else
              iprot#skip _t4476)
          | 12 -> (if _t4476 = Protocol.T_STRING then
              _str4475#set_roomMid iprot#readString
            else
              iprot#skip _t4476)
          | _ -> iprot#skip _t4476);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4475

class groupCall =
object (self)
  val mutable _online : bool option = None
  method get_online = _online
  method grab_online = match _online with None->raise (Field_empty "groupCall.online") | Some _x4479 -> _x4479
  method set_online _x4479 = _online <- Some _x4479
  method unset_online = _online <- None
  method reset_online = _online <- None

  val mutable _chatMid : string option = None
  method get_chatMid = _chatMid
  method grab_chatMid = match _chatMid with None->raise (Field_empty "groupCall.chatMid") | Some _x4480 -> _x4480
  method set_chatMid _x4480 = _chatMid <- Some _x4480
  method unset_chatMid = _chatMid <- None
  method reset_chatMid = _chatMid <- None

  val mutable _hostMids : string option = None
  method get_hostMids = _hostMids
  method grab_hostMids = match _hostMids with None->raise (Field_empty "groupCall.hostMids") | Some _x4481 -> _x4481
  method set_hostMids _x4481 = _hostMids <- Some _x4481
  method unset_hostMids = _hostMids <- None
  method reset_hostMids = _hostMids <- None

  val mutable _memberMids : string list option = None
  method get_memberMids = _memberMids
  method grab_memberMids = match _memberMids with None->raise (Field_empty "groupCall.memberMids") | Some _x4482 -> _x4482
  method set_memberMids _x4482 = _memberMids <- Some _x4482
  method unset_memberMids = _memberMids <- None
  method reset_memberMids = _memberMids <- None

  val mutable _started : Int64.t option = None
  method get_started = _started
  method grab_started = match _started with None->raise (Field_empty "groupCall.started") | Some _x4483 -> _x4483
  method set_started _x4483 = _started <- Some _x4483
  method unset_started = _started <- None
  method reset_started = _started <- None

  val mutable _mediaType : GroupCallMediaType.t option = None
  method get_mediaType = _mediaType
  method grab_mediaType = match _mediaType with None->raise (Field_empty "groupCall.mediaType") | Some _x4484 -> _x4484
  method set_mediaType _x4484 = _mediaType <- Some _x4484
  method unset_mediaType = _mediaType <- None
  method reset_mediaType = _mediaType <- None

  method copy =
      let _new = Oo.copy self in
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GroupCall";
    (match _online with None -> () | Some _v -> 
      oprot#writeFieldBegin("online",Protocol.T_BOOL,1);
      oprot#writeBool(_v);
      oprot#writeFieldEnd
    );
    (match _chatMid with None -> () | Some _v -> 
      oprot#writeFieldBegin("chatMid",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _hostMids with None -> () | Some _v -> 
      oprot#writeFieldBegin("hostMids",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _memberMids with None -> () | Some _v -> 
      oprot#writeFieldBegin("memberMids",Protocol.T_LIST,4);
      oprot#writeListBegin(Protocol.T_STRING,List.length _v);
      List.iter (fun _iter4487 ->         oprot#writeString(_iter4487);
      ) _v;
      oprot#writeListEnd;
      oprot#writeFieldEnd
    );
    (match _started with None -> () | Some _v -> 
      oprot#writeFieldBegin("started",Protocol.T_I64,5);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _mediaType with None -> () | Some _v -> 
      oprot#writeFieldBegin("mediaType",Protocol.T_I32,6);
      oprot#writeI32(GroupCallMediaType.to_i _v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_groupCall (iprot : Protocol.t) =
  let _str4488 = new groupCall in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4489,_id4490) = iprot#readFieldBegin in
        if _t4489 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4490 with 
          | 1 -> (if _t4489 = Protocol.T_BOOL then
              _str4488#set_online iprot#readBool
            else
              iprot#skip _t4489)
          | 2 -> (if _t4489 = Protocol.T_STRING then
              _str4488#set_chatMid iprot#readString
            else
              iprot#skip _t4489)
          | 3 -> (if _t4489 = Protocol.T_STRING then
              _str4488#set_hostMids iprot#readString
            else
              iprot#skip _t4489)
          | 4 -> (if _t4489 = Protocol.T_LIST then
              _str4488#set_memberMids 
                (let (_etype4494,_size4491) = iprot#readListBegin in
                  let _con4495 = (Array.to_list (Array.init _size4491 (fun _ -> iprot#readString))) in
                    iprot#readListEnd; _con4495)
            else
              iprot#skip _t4489)
          | 5 -> (if _t4489 = Protocol.T_I64 then
              _str4488#set_started iprot#readI64
            else
              iprot#skip _t4489)
          | 6 -> (if _t4489 = Protocol.T_I32 then
              _str4488#set_mediaType (GroupCallMediaType.of_i iprot#readI32)
            else
              iprot#skip _t4489)
          | _ -> iprot#skip _t4489);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4488

class groupCallRoute =
object (self)
  val mutable _token : string option = None
  method get_token = _token
  method grab_token = match _token with None->raise (Field_empty "groupCallRoute.token") | Some _x4497 -> _x4497
  method set_token _x4497 = _token <- Some _x4497
  method unset_token = _token <- None
  method reset_token = _token <- None

  val mutable _cscf : callHost option = None
  method get_cscf = _cscf
  method grab_cscf = match _cscf with None->raise (Field_empty "groupCallRoute.cscf") | Some _x4498 -> _x4498
  method set_cscf _x4498 = _cscf <- Some _x4498
  method unset_cscf = _cscf <- None
  method reset_cscf = _cscf <- None

  val mutable _mix : callHost option = None
  method get_mix = _mix
  method grab_mix = match _mix with None->raise (Field_empty "groupCallRoute.mix") | Some _x4499 -> _x4499
  method set_mix _x4499 = _mix <- Some _x4499
  method unset_mix = _mix <- None
  method reset_mix = _mix <- None

  method copy =
      let _new = Oo.copy self in
      if _cscf <> None then
        _new#set_cscf self#grab_cscf#copy;
      if _mix <> None then
        _new#set_mix self#grab_mix#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "GroupCallRoute";
    (match _token with None -> () | Some _v -> 
      oprot#writeFieldBegin("token",Protocol.T_STRING,1);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _cscf with None -> () | Some _v -> 
      oprot#writeFieldBegin("cscf",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _mix with None -> () | Some _v -> 
      oprot#writeFieldBegin("mix",Protocol.T_STRUCT,3);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
let rec read_groupCallRoute (iprot : Protocol.t) =
  let _str4502 = new groupCallRoute in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4503,_id4504) = iprot#readFieldBegin in
        if _t4503 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4504 with 
          | 1 -> (if _t4503 = Protocol.T_STRING then
              _str4502#set_token iprot#readString
            else
              iprot#skip _t4503)
          | 2 -> (if _t4503 = Protocol.T_STRUCT then
              _str4502#set_cscf (read_callHost iprot)
            else
              iprot#skip _t4503)
          | 3 -> (if _t4503 = Protocol.T_STRUCT then
              _str4502#set_mix (read_callHost iprot)
            else
              iprot#skip _t4503)
          | _ -> iprot#skip _t4503);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4502

class talkException =
object (self)
  val mutable _code : ErrorCode.t option = None
  method get_code = _code
  method grab_code = match _code with None->raise (Field_empty "talkException.code") | Some _x4506 -> _x4506
  method set_code _x4506 = _code <- Some _x4506
  method unset_code = _code <- None
  method reset_code = _code <- None

  val mutable _reason : string option = None
  method get_reason = _reason
  method grab_reason = match _reason with None->raise (Field_empty "talkException.reason") | Some _x4507 -> _x4507
  method set_reason _x4507 = _reason <- Some _x4507
  method unset_reason = _reason <- None
  method reset_reason = _reason <- None

  val mutable _parameterMap : (string,string) Hashtbl.t option = None
  method get_parameterMap = _parameterMap
  method grab_parameterMap = match _parameterMap with None->raise (Field_empty "talkException.parameterMap") | Some _x4508 -> _x4508
  method set_parameterMap _x4508 = _parameterMap <- Some _x4508
  method unset_parameterMap = _parameterMap <- None
  method reset_parameterMap = _parameterMap <- None

  method copy =
      let _new = Oo.copy self in
      if _parameterMap <> None then
        _new#set_parameterMap (Hashtbl.copy self#grab_parameterMap);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "TalkException";
    (match _code with None -> () | Some _v -> 
      oprot#writeFieldBegin("code",Protocol.T_I32,1);
      oprot#writeI32(ErrorCode.to_i _v);
      oprot#writeFieldEnd
    );
    (match _reason with None -> () | Some _v -> 
      oprot#writeFieldBegin("reason",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _parameterMap with None -> () | Some _v -> 
      oprot#writeFieldBegin("parameterMap",Protocol.T_MAP,3);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter4511 -> fun _viter4512 -> 
        oprot#writeString(_kiter4511);
        oprot#writeString(_viter4512);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
exception TalkException of talkException
let rec read_talkException (iprot : Protocol.t) =
  let _str4513 = new talkException in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4514,_id4515) = iprot#readFieldBegin in
        if _t4514 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4515 with 
          | 1 -> (if _t4514 = Protocol.T_I32 then
              _str4513#set_code (ErrorCode.of_i iprot#readI32)
            else
              iprot#skip _t4514)
          | 2 -> (if _t4514 = Protocol.T_STRING then
              _str4513#set_reason iprot#readString
            else
              iprot#skip _t4514)
          | 3 -> (if _t4514 = Protocol.T_MAP then
              _str4513#set_parameterMap 
                (let (_ktype4517,_vtype4518,_size4516) = iprot#readMapBegin in
                let _con4520 = Hashtbl.create _size4516 in
                  for i = 1 to _size4516 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con4520 _k _v
                  done; iprot#readMapEnd; _con4520)
            else
              iprot#skip _t4514)
          | _ -> iprot#skip _t4514);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4513

class shouldSyncException =
object (self)
  val mutable _syncOpRevision : Int64.t option = None
  method get_syncOpRevision = _syncOpRevision
  method grab_syncOpRevision = match _syncOpRevision with None->raise (Field_empty "shouldSyncException.syncOpRevision") | Some _x4522 -> _x4522
  method set_syncOpRevision _x4522 = _syncOpRevision <- Some _x4522
  method unset_syncOpRevision = _syncOpRevision <- None
  method reset_syncOpRevision = _syncOpRevision <- None

  val mutable _syncScope : syncScope option = None
  method get_syncScope = _syncScope
  method grab_syncScope = match _syncScope with None->raise (Field_empty "shouldSyncException.syncScope") | Some _x4523 -> _x4523
  method set_syncScope _x4523 = _syncScope <- Some _x4523
  method unset_syncScope = _syncScope <- None
  method reset_syncScope = _syncScope <- None

  val mutable _syncReason : SyncTriggerReason.t option = None
  method get_syncReason = _syncReason
  method grab_syncReason = match _syncReason with None->raise (Field_empty "shouldSyncException.syncReason") | Some _x4524 -> _x4524
  method set_syncReason _x4524 = _syncReason <- Some _x4524
  method unset_syncReason = _syncReason <- None
  method reset_syncReason = _syncReason <- None

  val mutable _message : string option = None
  method get_message = _message
  method grab_message = match _message with None->raise (Field_empty "shouldSyncException.message") | Some _x4525 -> _x4525
  method set_message _x4525 = _message <- Some _x4525
  method unset_message = _message <- None
  method reset_message = _message <- None

  method copy =
      let _new = Oo.copy self in
      if _syncScope <> None then
        _new#set_syncScope self#grab_syncScope#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ShouldSyncException";
    (match _syncOpRevision with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncOpRevision",Protocol.T_I64,1);
      oprot#writeI64(_v);
      oprot#writeFieldEnd
    );
    (match _syncScope with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncScope",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _syncReason with None -> () | Some _v -> 
      oprot#writeFieldBegin("syncReason",Protocol.T_I32,3);
      oprot#writeI32(SyncTriggerReason.to_i _v);
      oprot#writeFieldEnd
    );
    (match _message with None -> () | Some _v -> 
      oprot#writeFieldBegin("message",Protocol.T_STRING,4);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
exception ShouldSyncException of shouldSyncException
let rec read_shouldSyncException (iprot : Protocol.t) =
  let _str4528 = new shouldSyncException in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4529,_id4530) = iprot#readFieldBegin in
        if _t4529 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4530 with 
          | 1 -> (if _t4529 = Protocol.T_I64 then
              _str4528#set_syncOpRevision iprot#readI64
            else
              iprot#skip _t4529)
          | 2 -> (if _t4529 = Protocol.T_STRUCT then
              _str4528#set_syncScope (read_syncScope iprot)
            else
              iprot#skip _t4529)
          | 3 -> (if _t4529 = Protocol.T_I32 then
              _str4528#set_syncReason (SyncTriggerReason.of_i iprot#readI32)
            else
              iprot#skip _t4529)
          | 4 -> (if _t4529 = Protocol.T_STRING then
              _str4528#set_message iprot#readString
            else
              iprot#skip _t4529)
          | _ -> iprot#skip _t4529);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4528

class pointException =
object (self)
  val mutable _code : PointErrorCode.t option = None
  method get_code = _code
  method grab_code = match _code with None->raise (Field_empty "pointException.code") | Some _x4532 -> _x4532
  method set_code _x4532 = _code <- Some _x4532
  method unset_code = _code <- None
  method reset_code = _code <- None

  val mutable _reason : string option = None
  method get_reason = _reason
  method grab_reason = match _reason with None->raise (Field_empty "pointException.reason") | Some _x4533 -> _x4533
  method set_reason _x4533 = _reason <- Some _x4533
  method unset_reason = _reason <- None
  method reset_reason = _reason <- None

  val mutable _extra : (string,string) Hashtbl.t option = None
  method get_extra = _extra
  method grab_extra = match _extra with None->raise (Field_empty "pointException.extra") | Some _x4534 -> _x4534
  method set_extra _x4534 = _extra <- Some _x4534
  method unset_extra = _extra <- None
  method reset_extra = _extra <- None

  method copy =
      let _new = Oo.copy self in
      if _extra <> None then
        _new#set_extra (Hashtbl.copy self#grab_extra);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "PointException";
    (match _code with None -> () | Some _v -> 
      oprot#writeFieldBegin("code",Protocol.T_I32,1);
      oprot#writeI32(PointErrorCode.to_i _v);
      oprot#writeFieldEnd
    );
    (match _reason with None -> () | Some _v -> 
      oprot#writeFieldBegin("reason",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _extra with None -> () | Some _v -> 
      oprot#writeFieldBegin("extra",Protocol.T_MAP,3);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter4537 -> fun _viter4538 -> 
        oprot#writeString(_kiter4537);
        oprot#writeString(_viter4538);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
exception PointException of pointException
let rec read_pointException (iprot : Protocol.t) =
  let _str4539 = new pointException in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4540,_id4541) = iprot#readFieldBegin in
        if _t4540 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4541 with 
          | 1 -> (if _t4540 = Protocol.T_I32 then
              _str4539#set_code (PointErrorCode.of_i iprot#readI32)
            else
              iprot#skip _t4540)
          | 2 -> (if _t4540 = Protocol.T_STRING then
              _str4539#set_reason iprot#readString
            else
              iprot#skip _t4540)
          | 3 -> (if _t4540 = Protocol.T_MAP then
              _str4539#set_extra 
                (let (_ktype4543,_vtype4544,_size4542) = iprot#readMapBegin in
                let _con4546 = Hashtbl.create _size4542 in
                  for i = 1 to _size4542 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con4546 _k _v
                  done; iprot#readMapEnd; _con4546)
            else
              iprot#skip _t4540)
          | _ -> iprot#skip _t4540);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4539

class channelException =
object (self)
  val mutable _code : ChannelErrorCode.t option = None
  method get_code = _code
  method grab_code = match _code with None->raise (Field_empty "channelException.code") | Some _x4548 -> _x4548
  method set_code _x4548 = _code <- Some _x4548
  method unset_code = _code <- None
  method reset_code = _code <- None

  val mutable _reason : string option = None
  method get_reason = _reason
  method grab_reason = match _reason with None->raise (Field_empty "channelException.reason") | Some _x4549 -> _x4549
  method set_reason _x4549 = _reason <- Some _x4549
  method unset_reason = _reason <- None
  method reset_reason = _reason <- None

  val mutable _parameterMap : (string,string) Hashtbl.t option = None
  method get_parameterMap = _parameterMap
  method grab_parameterMap = match _parameterMap with None->raise (Field_empty "channelException.parameterMap") | Some _x4550 -> _x4550
  method set_parameterMap _x4550 = _parameterMap <- Some _x4550
  method unset_parameterMap = _parameterMap <- None
  method reset_parameterMap = _parameterMap <- None

  method copy =
      let _new = Oo.copy self in
      if _parameterMap <> None then
        _new#set_parameterMap (Hashtbl.copy self#grab_parameterMap);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "ChannelException";
    (match _code with None -> () | Some _v -> 
      oprot#writeFieldBegin("code",Protocol.T_I32,1);
      oprot#writeI32(ChannelErrorCode.to_i _v);
      oprot#writeFieldEnd
    );
    (match _reason with None -> () | Some _v -> 
      oprot#writeFieldBegin("reason",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _parameterMap with None -> () | Some _v -> 
      oprot#writeFieldBegin("parameterMap",Protocol.T_MAP,3);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter4553 -> fun _viter4554 -> 
        oprot#writeString(_kiter4553);
        oprot#writeString(_viter4554);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
exception ChannelException of channelException
let rec read_channelException (iprot : Protocol.t) =
  let _str4555 = new channelException in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4556,_id4557) = iprot#readFieldBegin in
        if _t4556 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4557 with 
          | 1 -> (if _t4556 = Protocol.T_I32 then
              _str4555#set_code (ChannelErrorCode.of_i iprot#readI32)
            else
              iprot#skip _t4556)
          | 2 -> (if _t4556 = Protocol.T_STRING then
              _str4555#set_reason iprot#readString
            else
              iprot#skip _t4556)
          | 3 -> (if _t4556 = Protocol.T_MAP then
              _str4555#set_parameterMap 
                (let (_ktype4559,_vtype4560,_size4558) = iprot#readMapBegin in
                let _con4562 = Hashtbl.create _size4558 in
                  for i = 1 to _size4558 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con4562 _k _v
                  done; iprot#readMapEnd; _con4562)
            else
              iprot#skip _t4556)
          | _ -> iprot#skip _t4556);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4555

class squareException =
object (self)
  val mutable _errorCode : SQErrorCode.t option = None
  method get_errorCode = _errorCode
  method grab_errorCode = match _errorCode with None->raise (Field_empty "squareException.errorCode") | Some _x4564 -> _x4564
  method set_errorCode _x4564 = _errorCode <- Some _x4564
  method unset_errorCode = _errorCode <- None
  method reset_errorCode = _errorCode <- None

  val mutable _errorExtraInfo : errorExtraInfo option = None
  method get_errorExtraInfo = _errorExtraInfo
  method grab_errorExtraInfo = match _errorExtraInfo with None->raise (Field_empty "squareException.errorExtraInfo") | Some _x4565 -> _x4565
  method set_errorExtraInfo _x4565 = _errorExtraInfo <- Some _x4565
  method unset_errorExtraInfo = _errorExtraInfo <- None
  method reset_errorExtraInfo = _errorExtraInfo <- None

  val mutable _reason : string option = None
  method get_reason = _reason
  method grab_reason = match _reason with None->raise (Field_empty "squareException.reason") | Some _x4566 -> _x4566
  method set_reason _x4566 = _reason <- Some _x4566
  method unset_reason = _reason <- None
  method reset_reason = _reason <- None

  method copy =
      let _new = Oo.copy self in
      if _errorExtraInfo <> None then
        _new#set_errorExtraInfo self#grab_errorExtraInfo#copy;
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "SquareException";
    (match _errorCode with None -> () | Some _v -> 
      oprot#writeFieldBegin("errorCode",Protocol.T_I32,1);
      oprot#writeI32(SQErrorCode.to_i _v);
      oprot#writeFieldEnd
    );
    (match _errorExtraInfo with None -> () | Some _v -> 
      oprot#writeFieldBegin("errorExtraInfo",Protocol.T_STRUCT,2);
      _v#write(oprot);
      oprot#writeFieldEnd
    );
    (match _reason with None -> () | Some _v -> 
      oprot#writeFieldBegin("reason",Protocol.T_STRING,3);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
exception SquareException of squareException
let rec read_squareException (iprot : Protocol.t) =
  let _str4569 = new squareException in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4570,_id4571) = iprot#readFieldBegin in
        if _t4570 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4571 with 
          | 1 -> (if _t4570 = Protocol.T_I32 then
              _str4569#set_errorCode (SQErrorCode.of_i iprot#readI32)
            else
              iprot#skip _t4570)
          | 2 -> (if _t4570 = Protocol.T_STRUCT then
              _str4569#set_errorExtraInfo (read_errorExtraInfo iprot)
            else
              iprot#skip _t4570)
          | 3 -> (if _t4570 = Protocol.T_STRING then
              _str4569#set_reason iprot#readString
            else
              iprot#skip _t4570)
          | _ -> iprot#skip _t4570);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4569

class universalNotificationServiceException =
object (self)
  val mutable _code : UniversalNotificationServiceErrorCode.t option = None
  method get_code = _code
  method grab_code = match _code with None->raise (Field_empty "universalNotificationServiceException.code") | Some _x4573 -> _x4573
  method set_code _x4573 = _code <- Some _x4573
  method unset_code = _code <- None
  method reset_code = _code <- None

  val mutable _reason : string option = None
  method get_reason = _reason
  method grab_reason = match _reason with None->raise (Field_empty "universalNotificationServiceException.reason") | Some _x4574 -> _x4574
  method set_reason _x4574 = _reason <- Some _x4574
  method unset_reason = _reason <- None
  method reset_reason = _reason <- None

  val mutable _parameterMap : (string,string) Hashtbl.t option = None
  method get_parameterMap = _parameterMap
  method grab_parameterMap = match _parameterMap with None->raise (Field_empty "universalNotificationServiceException.parameterMap") | Some _x4575 -> _x4575
  method set_parameterMap _x4575 = _parameterMap <- Some _x4575
  method unset_parameterMap = _parameterMap <- None
  method reset_parameterMap = _parameterMap <- None

  method copy =
      let _new = Oo.copy self in
      if _parameterMap <> None then
        _new#set_parameterMap (Hashtbl.copy self#grab_parameterMap);
    _new
  method write (oprot : Protocol.t) =
    oprot#writeStructBegin "UniversalNotificationServiceException";
    (match _code with None -> () | Some _v -> 
      oprot#writeFieldBegin("code",Protocol.T_I32,1);
      oprot#writeI32(UniversalNotificationServiceErrorCode.to_i _v);
      oprot#writeFieldEnd
    );
    (match _reason with None -> () | Some _v -> 
      oprot#writeFieldBegin("reason",Protocol.T_STRING,2);
      oprot#writeString(_v);
      oprot#writeFieldEnd
    );
    (match _parameterMap with None -> () | Some _v -> 
      oprot#writeFieldBegin("parameterMap",Protocol.T_MAP,3);
      oprot#writeMapBegin(Protocol.T_STRING,Protocol.T_STRING,Hashtbl.length _v);
      Hashtbl.iter (fun _kiter4578 -> fun _viter4579 -> 
        oprot#writeString(_kiter4578);
        oprot#writeString(_viter4579);
      ) _v;
      oprot#writeMapEnd;
      oprot#writeFieldEnd
    );
    oprot#writeFieldStop;
    oprot#writeStructEnd
end
exception UniversalNotificationServiceException of universalNotificationServiceException
let rec read_universalNotificationServiceException (iprot : Protocol.t) =
  let _str4580 = new universalNotificationServiceException in
    ignore(iprot#readStructBegin);
    (try while true do
        let (_,_t4581,_id4582) = iprot#readFieldBegin in
        if _t4581 = Protocol.T_STOP then
          raise Break
        else ();
        (match _id4582 with 
          | 1 -> (if _t4581 = Protocol.T_I32 then
              _str4580#set_code (UniversalNotificationServiceErrorCode.of_i iprot#readI32)
            else
              iprot#skip _t4581)
          | 2 -> (if _t4581 = Protocol.T_STRING then
              _str4580#set_reason iprot#readString
            else
              iprot#skip _t4581)
          | 3 -> (if _t4581 = Protocol.T_MAP then
              _str4580#set_parameterMap 
                (let (_ktype4584,_vtype4585,_size4583) = iprot#readMapBegin in
                let _con4587 = Hashtbl.create _size4583 in
                  for i = 1 to _size4583 do
                    let _k = iprot#readString in
                    let _v = iprot#readString in
                      Hashtbl.add _con4587 _k _v
                  done; iprot#readMapEnd; _con4587)
            else
              iprot#skip _t4581)
          | _ -> iprot#skip _t4581);
        iprot#readFieldEnd;
      done; ()
    with Break -> ());
    iprot#readStructEnd;
    _str4580

