#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.13.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from line import CallService
from line.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  UserStatus getUserStatus(string mid)')
    print('  void updateProfileAttributeForChannel(ProfileAttribute profileAttribute, string value)')
    print('  void updateExtendedProfileAttribute(ExtendedProfileAttribute attr, ExtendedProfile extendedProfile)')
    print('   getAllSimpleChannelContacts(bool statusSticonFallbackDisabled)')
    print('   getUserIdentities()')
    print('  PaidCallDialing markPaidCallAd(string dialedNumber, string language, bool disableCallerId)')
    print('  bool isGroupMember(string groupId)')
    print('  PhoneInfoForChannel getPhoneInfoFromPhoneNumber(string region, string phoneNumber)')
    print('  PaidCallRedeemResult redeemPaidCallVoucher(string serial, string language)')
    print('   getPreferredDisplayName( mids)')
    print('   getContactsForChannel( ids)')
    print('   getCallCreditProducts(PaymentType appStoreCode, PaymentPgType pgCode, string country, string language)')
    print('   getCompactContacts(i64 lastModifiedTimestamp)')
    print('  void notifyNotiCenterEvent(NotiCenterEventData event)')
    print('  bool isInContact(string mid)')
    print('   lookupGroupMembers(string groupId,  mids)')
    print('  Room getRoomInformation(string roomMid)')
    print('  GroupCall getGroupCall(string chatMid)')
    print('  bool isAllowSecondaryDeviceLogin()')
    print('  SimpleChannelClient getPrimaryClientForChannel()')
    print('  Room createRoomWithBuddy(i32 reqSeq, string buddyMid,  contactIds)')
    print('  string getDisplayName(string mid)')
    print('  PaidCallMetadataResult getPaidCallMetadata(string language)')
    print('  string getMid()')
    print('  string getUserCountryForBilling(string country, string remoteIp)')
    print('   getFavoriteGroupIdsForChannel()')
    print('  PaidCallHistoryResult getPaidCallHistory(i64 start, i32 size, string language)')
    print('  void sendPinCodeOperation(string verifier)')
    print('  void inviteIntoGroupCall(string chatMid,  memberMids, GroupCallMediaType mediaType)')
    print('   getFriendMids()')
    print('  MetaProfile getMetaProfile()')
    print('  Message sendMessageForChannel(Message message)')
    print('  i64 activeBuddySubscriberCount()')
    print('  CoinHistoryResult getCallCreditPurchaseHistory(CoinHistoryCondition request)')
    print('  bool isRoomMember(string roomId)')
    print('  Message sendSystemOAMessage(Message message)')
    print('  PaidCallResponse acquirePaidCallRoute(PaidCallType paidCallType, string dialedNumber, string language, string networkCode, bool disableCallerId, string referer, string adSessionId)')
    print('   getGroupsForChannel( groupIds)')
    print('  i64 getUserCreateTime()')
    print('  string registerChannelCP(string cpId, string registerPassword)')
    print('  PaymentReservationResult reserveCallCreditPurchase(CoinPurchaseReservation request)')
    print('   acquirePaidCallCurrencyExchangeRate(string language)')
    print('   getRoomMemberMidsForAppPlatform(string roomId)')
    print('   getPaidCallBalanceList(string language)')
    print('   getPersonalInfos( requiredPersonalInfos)')
    print('   getPrimaryClientsForChannel( userMids)')
    print('  ContactTransition addBuddyToContact(string buddyMid)')
    print('   getGroupMemberMidsForAppPlatform(string groupId)')
    print('  string getUserLanguage()')
    print('  PaidCallResponse lookupPaidCall(string dialedNumber, string language, string referer)')
    print('  ExtendedProfile getExtendedProfile()')
    print('   getReverseCompactContacts( ids)')
    print('  PaidCallAdResult getPaidCallAdStatus()')
    print('  Contact findContactByUseridWithoutAbuseBlockForChannel(string userid)')
    print('   getGroupMemberMids(string groupId)')
    print('  Message sendMessageWithoutRelationship(Message message)')
    print('   displayBuddySubscriberCountInBulk( mids)')
    print('   lookupRoomMembers(string roomId,  mids)')
    print('   getFavoriteMidsForChannel()')
    print('   getAllContactIdsForChannel()')
    print('  i64 displayBuddySubscriberCount()')
    print('  Profile getProfileForChannel()')
    print('   getUserTickets( userMids)')
    print('   getOAFriendMids()')
    print('   searchPaidCallUserRate(string countryCode, string language)')
    print('   getJoinedGroupIdsForChannel()')
    print('  GroupCallRoute acquireGroupCallRoute(string chatMid, GroupCallMediaType mediaType)')
    print('   getUserMidsWhoAddedMe()')
    print('  IdentityCredential getIdentityCredential()')
    print('  void addOperationForChannel(OpType opType, string param1, string param2, string param3)')
    print('   getSimpleChannelContacts( ids, bool statusSticonFallbackDisabled)')
    print('  i64 getUserLastSentMessageTimeStamp(string mid)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = CallService.Client(protocol)
transport.open()

if cmd == 'getUserStatus':
    if len(args) != 1:
        print('getUserStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.getUserStatus(args[0],))

elif cmd == 'updateProfileAttributeForChannel':
    if len(args) != 2:
        print('updateProfileAttributeForChannel requires 2 args')
        sys.exit(1)
    pp.pprint(client.updateProfileAttributeForChannel(eval(args[0]), args[1],))

elif cmd == 'updateExtendedProfileAttribute':
    if len(args) != 2:
        print('updateExtendedProfileAttribute requires 2 args')
        sys.exit(1)
    pp.pprint(client.updateExtendedProfileAttribute(eval(args[0]), eval(args[1]),))

elif cmd == 'getAllSimpleChannelContacts':
    if len(args) != 1:
        print('getAllSimpleChannelContacts requires 1 args')
        sys.exit(1)
    pp.pprint(client.getAllSimpleChannelContacts(eval(args[0]),))

elif cmd == 'getUserIdentities':
    if len(args) != 0:
        print('getUserIdentities requires 0 args')
        sys.exit(1)
    pp.pprint(client.getUserIdentities())

elif cmd == 'markPaidCallAd':
    if len(args) != 3:
        print('markPaidCallAd requires 3 args')
        sys.exit(1)
    pp.pprint(client.markPaidCallAd(args[0], args[1], eval(args[2]),))

elif cmd == 'isGroupMember':
    if len(args) != 1:
        print('isGroupMember requires 1 args')
        sys.exit(1)
    pp.pprint(client.isGroupMember(args[0],))

elif cmd == 'getPhoneInfoFromPhoneNumber':
    if len(args) != 2:
        print('getPhoneInfoFromPhoneNumber requires 2 args')
        sys.exit(1)
    pp.pprint(client.getPhoneInfoFromPhoneNumber(args[0], args[1],))

elif cmd == 'redeemPaidCallVoucher':
    if len(args) != 2:
        print('redeemPaidCallVoucher requires 2 args')
        sys.exit(1)
    pp.pprint(client.redeemPaidCallVoucher(args[0], args[1],))

elif cmd == 'getPreferredDisplayName':
    if len(args) != 1:
        print('getPreferredDisplayName requires 1 args')
        sys.exit(1)
    pp.pprint(client.getPreferredDisplayName(eval(args[0]),))

elif cmd == 'getContactsForChannel':
    if len(args) != 1:
        print('getContactsForChannel requires 1 args')
        sys.exit(1)
    pp.pprint(client.getContactsForChannel(eval(args[0]),))

elif cmd == 'getCallCreditProducts':
    if len(args) != 4:
        print('getCallCreditProducts requires 4 args')
        sys.exit(1)
    pp.pprint(client.getCallCreditProducts(eval(args[0]), eval(args[1]), args[2], args[3],))

elif cmd == 'getCompactContacts':
    if len(args) != 1:
        print('getCompactContacts requires 1 args')
        sys.exit(1)
    pp.pprint(client.getCompactContacts(eval(args[0]),))

elif cmd == 'notifyNotiCenterEvent':
    if len(args) != 1:
        print('notifyNotiCenterEvent requires 1 args')
        sys.exit(1)
    pp.pprint(client.notifyNotiCenterEvent(eval(args[0]),))

elif cmd == 'isInContact':
    if len(args) != 1:
        print('isInContact requires 1 args')
        sys.exit(1)
    pp.pprint(client.isInContact(args[0],))

elif cmd == 'lookupGroupMembers':
    if len(args) != 2:
        print('lookupGroupMembers requires 2 args')
        sys.exit(1)
    pp.pprint(client.lookupGroupMembers(args[0], eval(args[1]),))

elif cmd == 'getRoomInformation':
    if len(args) != 1:
        print('getRoomInformation requires 1 args')
        sys.exit(1)
    pp.pprint(client.getRoomInformation(args[0],))

elif cmd == 'getGroupCall':
    if len(args) != 1:
        print('getGroupCall requires 1 args')
        sys.exit(1)
    pp.pprint(client.getGroupCall(args[0],))

elif cmd == 'isAllowSecondaryDeviceLogin':
    if len(args) != 0:
        print('isAllowSecondaryDeviceLogin requires 0 args')
        sys.exit(1)
    pp.pprint(client.isAllowSecondaryDeviceLogin())

elif cmd == 'getPrimaryClientForChannel':
    if len(args) != 0:
        print('getPrimaryClientForChannel requires 0 args')
        sys.exit(1)
    pp.pprint(client.getPrimaryClientForChannel())

elif cmd == 'createRoomWithBuddy':
    if len(args) != 3:
        print('createRoomWithBuddy requires 3 args')
        sys.exit(1)
    pp.pprint(client.createRoomWithBuddy(eval(args[0]), args[1], eval(args[2]),))

elif cmd == 'getDisplayName':
    if len(args) != 1:
        print('getDisplayName requires 1 args')
        sys.exit(1)
    pp.pprint(client.getDisplayName(args[0],))

elif cmd == 'getPaidCallMetadata':
    if len(args) != 1:
        print('getPaidCallMetadata requires 1 args')
        sys.exit(1)
    pp.pprint(client.getPaidCallMetadata(args[0],))

elif cmd == 'getMid':
    if len(args) != 0:
        print('getMid requires 0 args')
        sys.exit(1)
    pp.pprint(client.getMid())

elif cmd == 'getUserCountryForBilling':
    if len(args) != 2:
        print('getUserCountryForBilling requires 2 args')
        sys.exit(1)
    pp.pprint(client.getUserCountryForBilling(args[0], args[1],))

elif cmd == 'getFavoriteGroupIdsForChannel':
    if len(args) != 0:
        print('getFavoriteGroupIdsForChannel requires 0 args')
        sys.exit(1)
    pp.pprint(client.getFavoriteGroupIdsForChannel())

elif cmd == 'getPaidCallHistory':
    if len(args) != 3:
        print('getPaidCallHistory requires 3 args')
        sys.exit(1)
    pp.pprint(client.getPaidCallHistory(eval(args[0]), eval(args[1]), args[2],))

elif cmd == 'sendPinCodeOperation':
    if len(args) != 1:
        print('sendPinCodeOperation requires 1 args')
        sys.exit(1)
    pp.pprint(client.sendPinCodeOperation(args[0],))

elif cmd == 'inviteIntoGroupCall':
    if len(args) != 3:
        print('inviteIntoGroupCall requires 3 args')
        sys.exit(1)
    pp.pprint(client.inviteIntoGroupCall(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'getFriendMids':
    if len(args) != 0:
        print('getFriendMids requires 0 args')
        sys.exit(1)
    pp.pprint(client.getFriendMids())

elif cmd == 'getMetaProfile':
    if len(args) != 0:
        print('getMetaProfile requires 0 args')
        sys.exit(1)
    pp.pprint(client.getMetaProfile())

elif cmd == 'sendMessageForChannel':
    if len(args) != 1:
        print('sendMessageForChannel requires 1 args')
        sys.exit(1)
    pp.pprint(client.sendMessageForChannel(eval(args[0]),))

elif cmd == 'activeBuddySubscriberCount':
    if len(args) != 0:
        print('activeBuddySubscriberCount requires 0 args')
        sys.exit(1)
    pp.pprint(client.activeBuddySubscriberCount())

elif cmd == 'getCallCreditPurchaseHistory':
    if len(args) != 1:
        print('getCallCreditPurchaseHistory requires 1 args')
        sys.exit(1)
    pp.pprint(client.getCallCreditPurchaseHistory(eval(args[0]),))

elif cmd == 'isRoomMember':
    if len(args) != 1:
        print('isRoomMember requires 1 args')
        sys.exit(1)
    pp.pprint(client.isRoomMember(args[0],))

elif cmd == 'sendSystemOAMessage':
    if len(args) != 1:
        print('sendSystemOAMessage requires 1 args')
        sys.exit(1)
    pp.pprint(client.sendSystemOAMessage(eval(args[0]),))

elif cmd == 'acquirePaidCallRoute':
    if len(args) != 7:
        print('acquirePaidCallRoute requires 7 args')
        sys.exit(1)
    pp.pprint(client.acquirePaidCallRoute(eval(args[0]), args[1], args[2], args[3], eval(args[4]), args[5], args[6],))

elif cmd == 'getGroupsForChannel':
    if len(args) != 1:
        print('getGroupsForChannel requires 1 args')
        sys.exit(1)
    pp.pprint(client.getGroupsForChannel(eval(args[0]),))

elif cmd == 'getUserCreateTime':
    if len(args) != 0:
        print('getUserCreateTime requires 0 args')
        sys.exit(1)
    pp.pprint(client.getUserCreateTime())

elif cmd == 'registerChannelCP':
    if len(args) != 2:
        print('registerChannelCP requires 2 args')
        sys.exit(1)
    pp.pprint(client.registerChannelCP(args[0], args[1],))

elif cmd == 'reserveCallCreditPurchase':
    if len(args) != 1:
        print('reserveCallCreditPurchase requires 1 args')
        sys.exit(1)
    pp.pprint(client.reserveCallCreditPurchase(eval(args[0]),))

elif cmd == 'acquirePaidCallCurrencyExchangeRate':
    if len(args) != 1:
        print('acquirePaidCallCurrencyExchangeRate requires 1 args')
        sys.exit(1)
    pp.pprint(client.acquirePaidCallCurrencyExchangeRate(args[0],))

elif cmd == 'getRoomMemberMidsForAppPlatform':
    if len(args) != 1:
        print('getRoomMemberMidsForAppPlatform requires 1 args')
        sys.exit(1)
    pp.pprint(client.getRoomMemberMidsForAppPlatform(args[0],))

elif cmd == 'getPaidCallBalanceList':
    if len(args) != 1:
        print('getPaidCallBalanceList requires 1 args')
        sys.exit(1)
    pp.pprint(client.getPaidCallBalanceList(args[0],))

elif cmd == 'getPersonalInfos':
    if len(args) != 1:
        print('getPersonalInfos requires 1 args')
        sys.exit(1)
    pp.pprint(client.getPersonalInfos(eval(args[0]),))

elif cmd == 'getPrimaryClientsForChannel':
    if len(args) != 1:
        print('getPrimaryClientsForChannel requires 1 args')
        sys.exit(1)
    pp.pprint(client.getPrimaryClientsForChannel(eval(args[0]),))

elif cmd == 'addBuddyToContact':
    if len(args) != 1:
        print('addBuddyToContact requires 1 args')
        sys.exit(1)
    pp.pprint(client.addBuddyToContact(args[0],))

elif cmd == 'getGroupMemberMidsForAppPlatform':
    if len(args) != 1:
        print('getGroupMemberMidsForAppPlatform requires 1 args')
        sys.exit(1)
    pp.pprint(client.getGroupMemberMidsForAppPlatform(args[0],))

elif cmd == 'getUserLanguage':
    if len(args) != 0:
        print('getUserLanguage requires 0 args')
        sys.exit(1)
    pp.pprint(client.getUserLanguage())

elif cmd == 'lookupPaidCall':
    if len(args) != 3:
        print('lookupPaidCall requires 3 args')
        sys.exit(1)
    pp.pprint(client.lookupPaidCall(args[0], args[1], args[2],))

elif cmd == 'getExtendedProfile':
    if len(args) != 0:
        print('getExtendedProfile requires 0 args')
        sys.exit(1)
    pp.pprint(client.getExtendedProfile())

elif cmd == 'getReverseCompactContacts':
    if len(args) != 1:
        print('getReverseCompactContacts requires 1 args')
        sys.exit(1)
    pp.pprint(client.getReverseCompactContacts(eval(args[0]),))

elif cmd == 'getPaidCallAdStatus':
    if len(args) != 0:
        print('getPaidCallAdStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.getPaidCallAdStatus())

elif cmd == 'findContactByUseridWithoutAbuseBlockForChannel':
    if len(args) != 1:
        print('findContactByUseridWithoutAbuseBlockForChannel requires 1 args')
        sys.exit(1)
    pp.pprint(client.findContactByUseridWithoutAbuseBlockForChannel(args[0],))

elif cmd == 'getGroupMemberMids':
    if len(args) != 1:
        print('getGroupMemberMids requires 1 args')
        sys.exit(1)
    pp.pprint(client.getGroupMemberMids(args[0],))

elif cmd == 'sendMessageWithoutRelationship':
    if len(args) != 1:
        print('sendMessageWithoutRelationship requires 1 args')
        sys.exit(1)
    pp.pprint(client.sendMessageWithoutRelationship(eval(args[0]),))

elif cmd == 'displayBuddySubscriberCountInBulk':
    if len(args) != 1:
        print('displayBuddySubscriberCountInBulk requires 1 args')
        sys.exit(1)
    pp.pprint(client.displayBuddySubscriberCountInBulk(eval(args[0]),))

elif cmd == 'lookupRoomMembers':
    if len(args) != 2:
        print('lookupRoomMembers requires 2 args')
        sys.exit(1)
    pp.pprint(client.lookupRoomMembers(args[0], eval(args[1]),))

elif cmd == 'getFavoriteMidsForChannel':
    if len(args) != 0:
        print('getFavoriteMidsForChannel requires 0 args')
        sys.exit(1)
    pp.pprint(client.getFavoriteMidsForChannel())

elif cmd == 'getAllContactIdsForChannel':
    if len(args) != 0:
        print('getAllContactIdsForChannel requires 0 args')
        sys.exit(1)
    pp.pprint(client.getAllContactIdsForChannel())

elif cmd == 'displayBuddySubscriberCount':
    if len(args) != 0:
        print('displayBuddySubscriberCount requires 0 args')
        sys.exit(1)
    pp.pprint(client.displayBuddySubscriberCount())

elif cmd == 'getProfileForChannel':
    if len(args) != 0:
        print('getProfileForChannel requires 0 args')
        sys.exit(1)
    pp.pprint(client.getProfileForChannel())

elif cmd == 'getUserTickets':
    if len(args) != 1:
        print('getUserTickets requires 1 args')
        sys.exit(1)
    pp.pprint(client.getUserTickets(eval(args[0]),))

elif cmd == 'getOAFriendMids':
    if len(args) != 0:
        print('getOAFriendMids requires 0 args')
        sys.exit(1)
    pp.pprint(client.getOAFriendMids())

elif cmd == 'searchPaidCallUserRate':
    if len(args) != 2:
        print('searchPaidCallUserRate requires 2 args')
        sys.exit(1)
    pp.pprint(client.searchPaidCallUserRate(args[0], args[1],))

elif cmd == 'getJoinedGroupIdsForChannel':
    if len(args) != 0:
        print('getJoinedGroupIdsForChannel requires 0 args')
        sys.exit(1)
    pp.pprint(client.getJoinedGroupIdsForChannel())

elif cmd == 'acquireGroupCallRoute':
    if len(args) != 2:
        print('acquireGroupCallRoute requires 2 args')
        sys.exit(1)
    pp.pprint(client.acquireGroupCallRoute(args[0], eval(args[1]),))

elif cmd == 'getUserMidsWhoAddedMe':
    if len(args) != 0:
        print('getUserMidsWhoAddedMe requires 0 args')
        sys.exit(1)
    pp.pprint(client.getUserMidsWhoAddedMe())

elif cmd == 'getIdentityCredential':
    if len(args) != 0:
        print('getIdentityCredential requires 0 args')
        sys.exit(1)
    pp.pprint(client.getIdentityCredential())

elif cmd == 'addOperationForChannel':
    if len(args) != 4:
        print('addOperationForChannel requires 4 args')
        sys.exit(1)
    pp.pprint(client.addOperationForChannel(eval(args[0]), args[1], args[2], args[3],))

elif cmd == 'getSimpleChannelContacts':
    if len(args) != 2:
        print('getSimpleChannelContacts requires 2 args')
        sys.exit(1)
    pp.pprint(client.getSimpleChannelContacts(eval(args[0]), eval(args[1]),))

elif cmd == 'getUserLastSentMessageTimeStamp':
    if len(args) != 1:
        print('getUserLastSentMessageTimeStamp requires 1 args')
        sys.exit(1)
    pp.pprint(client.getUserLastSentMessageTimeStamp(args[0],))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
